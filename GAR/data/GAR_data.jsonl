{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< David likes Novosibirsk. Sharon likes London. Barbara likes Vancouver. >. So Barbara wants to go to Vancouver\n < Donna likes Madrid. Michael likes Vancouver. John likes Incheon. >. So John wants to go to Incheon\n", "ranges": [{"END": [30, 31], "A": [31, 33], "V": [20, 22], "Q": [26, 27], "K": [17, 18], "R": null, "K'": [[2, 11], [3, 13]], "V'": [[5, 15], [10, 16]], "example": [1, 33]}, {"END": [61, 62], "A": [62, 65], "V": [50, 53], "Q": [57, 58], "K": [47, 48], "R": null, "K'": [[35, 41], [37, 42]], "V'": [[39, 44], [40, 46]], "example": [34, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Anthony likes Venice. Deborah likes Milan. Donald likes Bangalore. >. So Anthony wants to go to Venice\n < John likes Osaka. Laura likes Rio de Janeiro. Jeff likes Moscow. >. So Laura wants to go to Rio de Janeiro\n", "ranges": [{"END": [29, 30], "A": [30, 32], "V": [5, 7], "Q": [25, 26], "K": [2, 3], "R": null, "K'": [[8, 15], [11, 16]], "V'": [[13, 18], [14, 21]], "example": [1, 32]}, {"END": [59, 60], "A": [60, 63], "V": [43, 46], "Q": [55, 56], "K": [40, 41], "R": null, "K'": [[34, 47], [35, 48]], "V'": [[37, 50], [39, 51]], "example": [33, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Patricia likes Toronto. Jeff likes Florence. Margaret likes Seoul. >. So Jeff wants to go to Florence\n < Michelle likes Lyon. Robert likes Busan. Laura likes Bangkok. >. So Laura wants to go to Bangkok\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [12, 13], "Q": [23, 24], "K": [9, 10], "R": null, "K'": [[2, 14], [5, 15]], "V'": [[7, 17], [8, 19]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 61], "V": [46, 49], "Q": [53, 54], "K": [43, 44], "R": null, "K'": [[31, 37], [33, 38]], "V'": [[35, 40], [36, 42]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Dorothy likes Pattaya. Ronald likes Chiang Mai. Karen likes Berlin. >. So Ronald wants to go to Chiang Mai\n < Sharon likes Birmingham. Carol likes Geneva. Michael likes Florence. >. So Michael wants to go to Florence\n", "ranges": [{"END": [32, 33], "A": [33, 36], "V": [14, 17], "Q": [27, 29], "K": [10, 12], "R": null, "K'": [[2, 18], [4, 20]], "V'": [[6, 22], [9, 23]], "example": [1, 36]}, {"END": [63, 64], "A": [64, 65], "V": [54, 55], "Q": [59, 60], "K": [51, 52], "R": null, "K'": [[38, 45], [40, 46]], "V'": [[42, 48], [44, 50]], "example": [37, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Mumbai. Sarah likes Geneva. Ronald likes Sydney. >. So Robert wants to go to Mumbai\n < Deborah likes Barcelona. Daniel likes Saint Petersburg. Edward likes Sydney. >. So Deborah wants to go to Barcelona\n", "ranges": [{"END": [28, 29], "A": [29, 32], "V": [5, 8], "Q": [24, 25], "K": [2, 3], "R": null, "K'": [[9, 15], [10, 17]], "V'": [[12, 19], [14, 20]], "example": [1, 32]}, {"END": [61, 62], "A": [62, 63], "V": [39, 40], "Q": [55, 58], "K": [34, 37], "R": null, "K'": [[41, 47], [42, 48]], "V'": [[44, 50], [46, 51]], "example": [33, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Shanghai. Carol likes Mumbai. Anthony likes Bern. >. So Carol wants to go to Mumbai\n < George likes Osaka. Richard likes Seoul. Karen likes Washington, D.C. >. So George wants to go to Osaka\n", "ranges": [{"END": [27, 28], "A": [28, 31], "V": [11, 14], "Q": [23, 24], "K": [8, 9], "R": null, "K'": [[2, 15], [3, 16]], "V'": [[5, 18], [7, 19]], "example": [1, 31]}, {"END": [62, 63], "A": [63, 65], "V": [36, 38], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[39, 45], [40, 47]], "V'": [[42, 49], [44, 54]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Jason likes Canberra. Sharon likes Madrid. Elizabeth likes Manchester. >. So Sharon wants to go to Madrid\n < Carol likes Vancouver. Kevin likes Osaka. Karen likes Incheon. >. So Karen wants to go to Incheon\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [13, 14], "Q": [23, 25], "K": [9, 11], "R": null, "K'": [[2, 15], [3, 16]], "V'": [[5, 18], [8, 19]], "example": [1, 30]}, {"END": [60, 61], "A": [61, 64], "V": [48, 51], "Q": [55, 57], "K": [44, 46], "R": null, "K'": [[32, 38], [33, 39]], "V'": [[35, 41], [37, 43]], "example": [31, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Maria likes Valencia. Kenneth likes London. Linda likes Ottawa. >. So Maria wants to go to Valencia\n < Jennifer likes Berlin. Helen likes London. George likes Canberra. >. So Jennifer wants to go to Berlin\n", "ranges": [{"END": [27, 28], "A": [28, 30], "V": [5, 7], "Q": [23, 24], "K": [2, 3], "R": null, "K'": [[8, 13], [9, 15]], "V'": [[11, 17], [12, 19]], "example": [1, 30]}, {"END": [58, 59], "A": [59, 60], "V": [36, 37], "Q": [53, 55], "K": [32, 34], "R": null, "K'": [[38, 43], [39, 44]], "V'": [[41, 46], [42, 49]], "example": [31, 60]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David likes Novosibirsk. Sharon likes London. Barbara likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Novosibirsk? Answer: No\n Premise: < Sarah likes Madrid. Donna likes Vancouver. Steven likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [49, 54], "V": [23, 25], "Q": [44, 45], "K": [20, 21], "R": null, "K'": [[5, 14], [6, 16]], "V'": [[8, 18], [13, 19]], "example": [1, 58]}, {"END": [110, 111], "A": [105, 108], "V": [78, 81], "Q": [100, 101], "K": [75, 76], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[66, 72], [67, 74]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David likes Novosibirsk. Sharon likes London. Barbara likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Novosibirsk? Answer: No\n Premise: < Sarah likes Madrid. Donna likes Vancouver. Steven likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A": [49, 54], "V": [23, 25], "Q": [44, 45], "K": [20, 21], "R": null, "K'": [[5, 14], [6, 16]], "V'": [[8, 18], [13, 19]], "example": [1, 58]}, {"END": [109, 110], "A": [105, 107], "V": [78, 81], "Q": [100, 101], "K": [75, 76], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[66, 72], [67, 74]], "example": [59, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John likes Guangzhou. Daniel likes Sao Paulo. Brian likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Birmingham? Answer: No\n Premise: < Susan likes Paris. Ronald likes London. Dorothy likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [8, 12], "Q": [44, 45], "K": [5, 6], "R": null, "K'": [[13, 20], [14, 21]], "V'": [[16, 23], [19, 25]], "example": [1, 55]}, {"END": [104, 105], "A": [101, 102], "V": [63, 64], "Q": [96, 97], "K": [60, 61], "R": null, "K'": [[65, 71], [67, 73]], "V'": [[69, 75], [70, 77]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John likes Guangzhou. Daniel likes Sao Paulo. Brian likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Birmingham? Answer: No\n Premise: < Susan likes Paris. Ronald likes London. Dorothy likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to London? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [8, 12], "Q": [44, 45], "K": [5, 6], "R": null, "K'": [[13, 20], [14, 21]], "V'": [[16, 23], [19, 25]], "example": [1, 55]}, {"END": [104, 105], "A": [101, 102], "V": [63, 64], "Q": [96, 97], "K": [60, 61], "R": null, "K'": [[65, 71], [67, 73]], "V'": [[69, 75], [70, 77]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol likes Berlin. Barbara likes Paris. Kimberly likes New York. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly wants to go to Berlin? Answer: No\n Premise: < Ronald likes Pattaya. William likes Toronto. Mark likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [20, 22], "Q": [41, 44], "K": [15, 18], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 14]], "example": [1, 53]}, {"END": [102, 103], "A": [99, 100], "V": [69, 70], "Q": [94, 95], "K": [66, 67], "R": null, "K'": [[58, 71], [60, 72]], "V'": [[62, 74], [65, 75]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol likes Berlin. Barbara likes Paris. Kimberly likes New York. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly wants to go to Berlin? Answer: No\n Premise: < Ronald likes Pattaya. William likes Toronto. Mark likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [20, 22], "Q": [41, 44], "K": [15, 18], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 14]], "example": [1, 53]}, {"END": [104, 105], "A": [99, 102], "V": [69, 70], "Q": [94, 95], "K": [66, 67], "R": null, "K'": [[58, 71], [60, 72]], "V'": [[62, 74], [65, 75]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Manchester. Mary likes Novosibirsk. Kenneth likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Novosibirsk? Answer: Yes\n Premise: < Joseph likes Rome. Jeff likes Seoul. Laura likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [51, 56], "V": [13, 18], "Q": [46, 47], "K": [10, 11], "R": null, "K'": [[5, 19], [6, 20]], "V'": [[8, 22], [9, 27]], "example": [1, 60]}, {"END": [110, 111], "A": [106, 108], "V": [73, 75], "Q": [101, 102], "K": [70, 71], "R": null, "K'": [[65, 76], [66, 77]], "V'": [[68, 79], [69, 82]], "example": [61, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Manchester. Mary likes Novosibirsk. Kenneth likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Novosibirsk? Answer: Yes\n Premise: < Joseph likes Rome. Jeff likes Seoul. Laura likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [58, 59], "A": [51, 56], "V": [13, 18], "Q": [46, 47], "K": [10, 11], "R": null, "K'": [[5, 19], [6, 20]], "V'": [[8, 22], [9, 27]], "example": [1, 60]}, {"END": [111, 112], "A": [106, 109], "V": [73, 75], "Q": [101, 102], "K": [70, 71], "R": null, "K'": [[65, 76], [66, 77]], "V'": [[68, 79], [69, 82]], "example": [61, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Sao Paulo. Sharon likes Washington, D.C. Nancy likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that Sharon wants to go to Sao Paulo? Answer: No\n Premise: < Brian likes Kyoto. Michael likes Osaka. George likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [52, 55], "V": [16, 21], "Q": [46, 48], "K": [12, 14], "R": null, "K'": [[5, 22], [6, 23]], "V'": [[8, 25], [11, 27]], "example": [1, 59]}, {"END": [110, 111], "A": [106, 108], "V": [67, 69], "Q": [101, 102], "K": [64, 65], "R": null, "K'": [[70, 76], [71, 77]], "V'": [[73, 79], [75, 82]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Sao Paulo. Sharon likes Washington, D.C. Nancy likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that Sharon wants to go to Sao Paulo? Answer: No\n Premise: < Brian likes Kyoto. Michael likes Osaka. George likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Osaka? Answer: No\n", "ranges": [{"END": [57, 58], "A": [52, 55], "V": [16, 21], "Q": [46, 48], "K": [12, 14], "R": null, "K'": [[5, 22], [6, 23]], "V'": [[8, 25], [11, 27]], "example": [1, 59]}, {"END": [110, 111], "A": [106, 108], "V": [67, 69], "Q": [101, 102], "K": [64, 65], "R": null, "K'": [[70, 76], [71, 77]], "V'": [[73, 79], [75, 82]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Canberra. Laura likes Madrid. Dorothy likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to Madrid? Answer: Yes\n Premise: < Karen likes Osaka. James likes Milan. Ronald likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Osaka? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [15, 16], "Q": [41, 42], "K": [12, 13], "R": null, "K'": [[5, 17], [6, 19]], "V'": [[8, 21], [11, 22]], "example": [1, 51]}, {"END": [103, 104], "A": [99, 101], "V": [60, 62], "Q": [93, 95], "K": [56, 58], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[66, 72], [67, 74]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Canberra. Laura likes Madrid. Dorothy likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to Madrid? Answer: Yes\n Premise: < Karen likes Osaka. James likes Milan. Ronald likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Milan? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [15, 16], "Q": [41, 42], "K": [12, 13], "R": null, "K'": [[5, 17], [6, 19]], "V'": [[8, 21], [11, 22]], "example": [1, 51]}, {"END": [102, 103], "A": [99, 100], "V": [60, 62], "Q": [93, 95], "K": [56, 58], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[66, 72], [67, 74]], "example": [52, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Milan. Michael likes Pattaya. Paul likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Pattaya? Answer: Yes\n Premise: < Donald likes Barcelona. Helen likes Sao Paulo. George likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Ottawa? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [46, 49], "V": [13, 16], "Q": [41, 42], "K": [10, 11], "R": null, "K'": [[5, 17], [6, 18]], "V'": [[8, 20], [9, 22]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [73, 75], "Q": [94, 95], "K": [70, 71], "R": null, "K'": [[58, 63], [59, 64]], "V'": [[61, 66], [62, 69]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Milan. Michael likes Pattaya. Paul likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Pattaya? Answer: Yes\n Premise: < Donald likes Barcelona. Helen likes Sao Paulo. George likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Sao Paulo? Answer: No\n", "ranges": [{"END": [51, 52], "A": [46, 49], "V": [13, 16], "Q": [41, 42], "K": [10, 11], "R": null, "K'": [[5, 17], [6, 18]], "V'": [[8, 20], [9, 22]], "example": [1, 53]}, {"END": [104, 105], "A": [99, 102], "V": [73, 75], "Q": [94, 95], "K": [70, 71], "R": null, "K'": [[58, 63], [59, 64]], "V'": [[61, 66], [62, 69]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah likes Toronto. Richard likes Bern. George likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Hamburg? Answer: Yes\n Premise: < Jeff likes Washington, D.C. Patricia likes Marseille. Edward likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Washington, D.C? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [20, 21], "Q": [40, 41], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[10, 15], [11, 16]], "example": [1, 50]}, {"END": [108, 109], "A": [101, 106], "V": [58, 63], "Q": [96, 97], "K": [55, 56], "R": null, "K'": [[64, 72], [67, 73]], "V'": [[69, 75], [71, 77]], "example": [51, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah likes Toronto. Richard likes Bern. George likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Hamburg? Answer: Yes\n Premise: < Jeff likes Washington, D.C. Patricia likes Marseille. Edward likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Marseille? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [20, 21], "Q": [40, 41], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[10, 15], [11, 16]], "example": [1, 50]}, {"END": [105, 106], "A": [101, 103], "V": [58, 63], "Q": [96, 97], "K": [55, 56], "R": null, "K'": [[64, 72], [67, 73]], "V'": [[69, 75], [71, 77]], "example": [51, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Novosibirsk attracts David. London attracts Sharon. Vancouver attracts Barbara. >. So Barbara wants to go to Vancouver\n < Madrid attracts Donna. Vancouver attracts Michael. Incheon attracts John. >. So John wants to go to Incheon\n", "ranges": [{"END": [30, 31], "A": [31, 33], "V": [17, 19], "Q": [26, 27], "K": [21, 22], "R": null, "K'": [[9, 14], [10, 16]], "V'": [[2, 11], [7, 12]], "example": [1, 33]}, {"END": [61, 62], "A": [62, 65], "V": [47, 50], "Q": [57, 58], "K": [52, 53], "R": null, "K'": [[38, 45], [40, 46]], "V'": [[35, 41], [36, 43]], "example": [34, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Anthony. Milan attracts Deborah. Bangalore attracts Donald. >. So Anthony wants to go to Venice\n < Osaka attracts John. Rio de Janeiro attracts Laura. Moscow attracts Jeff. >. So Laura wants to go to Rio de Janeiro\n", "ranges": [{"END": [29, 30], "A": [30, 32], "V": [2, 4], "Q": [25, 26], "K": [6, 7], "R": null, "K'": [[11, 20], [14, 21]], "V'": [[8, 15], [9, 18]], "example": [1, 32]}, {"END": [59, 60], "A": [60, 63], "V": [40, 43], "Q": [55, 56], "K": [45, 46], "R": null, "K'": [[38, 50], [39, 51]], "V'": [[34, 47], [36, 48]], "example": [33, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Toronto attracts Patricia. Florence attracts Jeff. Seoul attracts Margaret. >. So Jeff wants to go to Florence\n < Lyon attracts Michelle. Busan attracts Robert. Bangkok attracts Laura. >. So Laura wants to go to Bangkok\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [9, 10], "Q": [23, 24], "K": [12, 13], "R": null, "K'": [[5, 18], [8, 19]], "V'": [[2, 14], [3, 16]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 61], "V": [43, 46], "Q": [53, 54], "K": [48, 49], "R": null, "K'": [[34, 41], [36, 42]], "V'": [[31, 37], [32, 39]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Pattaya attracts Dorothy. Chiang Mai attracts Ronald. Berlin attracts Karen. >. So Ronald wants to go to Chiang Mai\n < Birmingham attracts Sharon. Geneva attracts Carol. Florence attracts Michael. >. So Michael wants to go to Florence\n", "ranges": [{"END": [32, 33], "A": [33, 36], "V": [10, 13], "Q": [27, 29], "K": [15, 17], "R": null, "K'": [[7, 21], [9, 23]], "V'": [[2, 18], [5, 19]], "example": [1, 36]}, {"END": [63, 64], "A": [64, 65], "V": [51, 52], "Q": [59, 60], "K": [54, 55], "R": null, "K'": [[42, 49], [44, 50]], "V'": [[38, 45], [40, 47]], "example": [37, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Mumbai attracts Robert. Geneva attracts Sarah. Sydney attracts Ronald. >. So Robert wants to go to Mumbai\n < Barcelona attracts Deborah. Saint Petersburg attracts Daniel. Sydney attracts Edward. >. So Deborah wants to go to Barcelona\n", "ranges": [{"END": [28, 29], "A": [29, 32], "V": [2, 5], "Q": [24, 25], "K": [7, 8], "R": null, "K'": [[13, 18], [14, 20]], "V'": [[9, 15], [11, 16]], "example": [1, 32]}, {"END": [61, 62], "A": [62, 63], "V": [34, 35], "Q": [55, 58], "K": [37, 40], "R": null, "K'": [[45, 50], [46, 51]], "V'": [[41, 47], [43, 48]], "example": [33, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shanghai attracts Brian. Mumbai attracts Carol. Bern attracts Anthony. >. So Carol wants to go to Mumbai\n < Osaka attracts George. Seoul attracts Richard. Washington, D.C attracts Karen. >. So George wants to go to Osaka\n", "ranges": [{"END": [27, 28], "A": [28, 31], "V": [8, 11], "Q": [23, 24], "K": [13, 14], "R": null, "K'": [[6, 18], [7, 19]], "V'": [[2, 15], [4, 16]], "example": [1, 31]}, {"END": [62, 63], "A": [63, 65], "V": [33, 35], "Q": [58, 59], "K": [37, 38], "R": null, "K'": [[43, 52], [44, 54]], "V'": [[39, 45], [41, 50]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Jason. Madrid attracts Sharon. Manchester attracts Elizabeth. >. So Sharon wants to go to Madrid\n < Vancouver attracts Carol. Osaka attracts Kevin. Incheon attracts Karen. >. So Karen wants to go to Incheon\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [9, 10], "Q": [23, 25], "K": [12, 14], "R": null, "K'": [[7, 18], [8, 19]], "V'": [[2, 15], [5, 16]], "example": [1, 30]}, {"END": [60, 61], "A": [61, 64], "V": [44, 47], "Q": [55, 57], "K": [49, 51], "R": null, "K'": [[36, 42], [37, 43]], "V'": [[32, 38], [34, 40]], "example": [31, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Valencia attracts Maria. London attracts Kenneth. Ottawa attracts Linda. >. So Maria wants to go to Valencia\n < Berlin attracts Jennifer. London attracts Helen. Canberra attracts George. >. So Jennifer wants to go to Berlin\n", "ranges": [{"END": [27, 28], "A": [28, 30], "V": [2, 4], "Q": [23, 24], "K": [6, 7], "R": null, "K'": [[11, 17], [12, 19]], "V'": [[8, 13], [9, 15]], "example": [1, 30]}, {"END": [58, 59], "A": [59, 60], "V": [32, 33], "Q": [53, 55], "K": [35, 37], "R": null, "K'": [[41, 48], [42, 49]], "V'": [[38, 43], [39, 46]], "example": [31, 60]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Novosibirsk attracts David. London attracts Sharon. Vancouver attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Novosibirsk? Answer: No\n Premise: < Madrid attracts Sarah. Vancouver attracts Donna. Incheon attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [49, 54], "V": [20, 22], "Q": [44, 45], "K": [24, 25], "R": null, "K'": [[12, 17], [13, 19]], "V'": [[5, 14], [10, 15]], "example": [1, 58]}, {"END": [110, 111], "A": [105, 108], "V": [75, 78], "Q": [100, 101], "K": [80, 81], "R": null, "K'": [[66, 72], [67, 74]], "V'": [[63, 68], [64, 70]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Novosibirsk attracts David. London attracts Sharon. Vancouver attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Novosibirsk? Answer: No\n Premise: < Madrid attracts Sarah. Vancouver attracts Donna. Incheon attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A": [49, 54], "V": [20, 22], "Q": [44, 45], "K": [24, 25], "R": null, "K'": [[12, 17], [13, 19]], "V'": [[5, 14], [10, 15]], "example": [1, 58]}, {"END": [109, 110], "A": [105, 107], "V": [75, 78], "Q": [100, 101], "K": [80, 81], "R": null, "K'": [[66, 72], [67, 74]], "V'": [[63, 68], [64, 70]], "example": [59, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts John. Sao Paulo attracts Daniel. Birmingham attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Birmingham? Answer: No\n Premise: < Paris attracts Susan. London attracts Ronald. Vancouver attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [5, 9], "Q": [44, 45], "K": [11, 12], "R": null, "K'": [[18, 24], [19, 25]], "V'": [[13, 20], [16, 22]], "example": [1, 55]}, {"END": [104, 105], "A": [101, 102], "V": [60, 61], "Q": [96, 97], "K": [63, 64], "R": null, "K'": [[68, 75], [70, 77]], "V'": [[65, 71], [66, 73]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts John. Sao Paulo attracts Daniel. Birmingham attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Birmingham? Answer: No\n Premise: < Paris attracts Susan. London attracts Ronald. Vancouver attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to London? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [5, 9], "Q": [44, 45], "K": [11, 12], "R": null, "K'": [[18, 24], [19, 25]], "V'": [[13, 20], [16, 22]], "example": [1, 55]}, {"END": [104, 105], "A": [101, 102], "V": [60, 61], "Q": [96, 97], "K": [63, 64], "R": null, "K'": [[68, 75], [70, 77]], "V'": [[65, 71], [66, 73]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Berlin attracts Carol. Paris attracts Barbara. New York attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly wants to go to Berlin? Answer: No\n Premise: < Pattaya attracts Ronald. Toronto attracts William. Hamburg attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [15, 17], "Q": [41, 44], "K": [19, 22], "R": null, "K'": [[8, 13], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [102, 103], "A": [99, 100], "V": [66, 67], "Q": [94, 95], "K": [69, 70], "R": null, "K'": [[63, 74], [65, 75]], "V'": [[58, 71], [61, 72]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Berlin attracts Carol. Paris attracts Barbara. New York attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly wants to go to Berlin? Answer: No\n Premise: < Pattaya attracts Ronald. Toronto attracts William. Hamburg attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [15, 17], "Q": [41, 44], "K": [19, 22], "R": null, "K'": [[8, 13], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [104, 105], "A": [99, 102], "V": [66, 67], "Q": [94, 95], "K": [69, 70], "R": null, "K'": [[63, 74], [65, 75]], "V'": [[58, 71], [61, 72]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Kevin. Novosibirsk attracts Mary. Washington, D.C attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Novosibirsk? Answer: Yes\n Premise: < Rome attracts Joseph. Seoul attracts Jeff. Chiang Mai attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [51, 56], "V": [10, 15], "Q": [46, 47], "K": [17, 18], "R": null, "K'": [[8, 26], [9, 27]], "V'": [[5, 19], [6, 24]], "example": [1, 60]}, {"END": [110, 111], "A": [106, 108], "V": [70, 72], "Q": [101, 102], "K": [74, 75], "R": null, "K'": [[68, 81], [69, 82]], "V'": [[65, 76], [66, 79]], "example": [61, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Kevin. Novosibirsk attracts Mary. Washington, D.C attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Novosibirsk? Answer: Yes\n Premise: < Rome attracts Joseph. Seoul attracts Jeff. Chiang Mai attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [58, 59], "A": [51, 56], "V": [10, 15], "Q": [46, 47], "K": [17, 18], "R": null, "K'": [[8, 26], [9, 27]], "V'": [[5, 19], [6, 24]], "example": [1, 60]}, {"END": [111, 112], "A": [106, 109], "V": [70, 72], "Q": [101, 102], "K": [74, 75], "R": null, "K'": [[68, 81], [69, 82]], "V'": [[65, 76], [66, 79]], "example": [61, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Richard. Washington, D.C attracts Sharon. Los Angeles attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that Sharon wants to go to Sao Paulo? Answer: No\n Premise: < Kyoto attracts Brian. Osaka attracts Michael. Sao Paulo attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [52, 55], "V": [12, 17], "Q": [46, 48], "K": [19, 21], "R": null, "K'": [[10, 26], [11, 27]], "V'": [[5, 22], [8, 24]], "example": [1, 59]}, {"END": [110, 111], "A": [106, 108], "V": [64, 66], "Q": [101, 102], "K": [68, 69], "R": null, "K'": [[74, 81], [75, 82]], "V'": [[70, 76], [72, 79]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Richard. Washington, D.C attracts Sharon. Los Angeles attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that Sharon wants to go to Sao Paulo? Answer: No\n Premise: < Kyoto attracts Brian. Osaka attracts Michael. Sao Paulo attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Osaka? Answer: No\n", "ranges": [{"END": [57, 58], "A": [52, 55], "V": [12, 17], "Q": [46, 48], "K": [19, 21], "R": null, "K'": [[10, 26], [11, 27]], "V'": [[5, 22], [8, 24]], "example": [1, 59]}, {"END": [110, 111], "A": [106, 108], "V": [64, 66], "Q": [101, 102], "K": [68, 69], "R": null, "K'": [[74, 81], [75, 82]], "V'": [[70, 76], [72, 79]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Jason. Madrid attracts Laura. Manchester attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to Madrid? Answer: Yes\n Premise: < Osaka attracts Karen. Milan attracts James. Kyoto attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Osaka? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [12, 13], "Q": [41, 42], "K": [15, 16], "R": null, "K'": [[10, 20], [11, 22]], "V'": [[5, 17], [8, 18]], "example": [1, 51]}, {"END": [103, 104], "A": [99, 101], "V": [56, 58], "Q": [93, 95], "K": [60, 62], "R": null, "K'": [[66, 72], [67, 74]], "V'": [[63, 68], [64, 70]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Jason. Madrid attracts Laura. Manchester attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to Madrid? Answer: Yes\n Premise: < Osaka attracts Karen. Milan attracts James. Kyoto attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Milan? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [12, 13], "Q": [41, 42], "K": [15, 16], "R": null, "K'": [[10, 20], [11, 22]], "V'": [[5, 17], [8, 18]], "example": [1, 51]}, {"END": [102, 103], "A": [99, 100], "V": [56, 58], "Q": [93, 95], "K": [60, 62], "R": null, "K'": [[66, 72], [67, 74]], "V'": [[63, 68], [64, 70]], "example": [52, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Milan attracts Lisa. Pattaya attracts Michael. Munich attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Pattaya? Answer: Yes\n Premise: < Barcelona attracts Donald. Sao Paulo attracts Helen. Ottawa attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Ottawa? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [46, 49], "V": [10, 13], "Q": [41, 42], "K": [15, 16], "R": null, "K'": [[8, 21], [9, 22]], "V'": [[5, 17], [6, 19]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [70, 72], "Q": [94, 95], "K": [74, 75], "R": null, "K'": [[61, 68], [62, 69]], "V'": [[58, 63], [59, 66]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Milan attracts Lisa. Pattaya attracts Michael. Munich attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Pattaya? Answer: Yes\n Premise: < Barcelona attracts Donald. Sao Paulo attracts Helen. Ottawa attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Sao Paulo? Answer: No\n", "ranges": [{"END": [51, 52], "A": [46, 49], "V": [10, 13], "Q": [41, 42], "K": [15, 16], "R": null, "K'": [[8, 21], [9, 22]], "V'": [[5, 17], [6, 19]], "example": [1, 53]}, {"END": [104, 105], "A": [99, 102], "V": [70, 72], "Q": [94, 95], "K": [74, 75], "R": null, "K'": [[61, 68], [62, 69]], "V'": [[58, 63], [59, 66]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Deborah. Bern attracts Richard. Hamburg attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Hamburg? Answer: Yes\n Premise: < Washington, D.C attracts Jeff. Marseille attracts Patricia. Vancouver attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Washington, D.C? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [17, 18], "Q": [40, 41], "K": [20, 21], "R": null, "K'": [[8, 15], [11, 16]], "V'": [[5, 12], [6, 13]], "example": [1, 50]}, {"END": [108, 109], "A": [101, 106], "V": [55, 60], "Q": [96, 97], "K": [62, 63], "R": null, "K'": [[68, 76], [71, 77]], "V'": [[64, 72], [66, 74]], "example": [51, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Deborah. Bern attracts Richard. Hamburg attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Hamburg? Answer: Yes\n Premise: < Washington, D.C attracts Jeff. Marseille attracts Patricia. Vancouver attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Marseille? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [17, 18], "Q": [40, 41], "K": [20, 21], "R": null, "K'": [[8, 15], [11, 16]], "V'": [[5, 12], [6, 13]], "example": [1, 50]}, {"END": [105, 106], "A": [101, 103], "V": [55, 60], "Q": [96, 97], "K": [62, 63], "R": null, "K'": [[68, 76], [71, 77]], "V'": [[64, 72], [66, 74]], "example": [51, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< George likes Brisbane. Barbara likes Vancouver. Barbara likes Birmingham. >. Barbara does not want to go to Brisbane\n < Mary likes Vancouver. Christopher likes Ottawa. Christopher likes Rio de Janeiro. >. Christopher does not want to go to Vancouver\n", "ranges": [{"END": [30, 31], "A'": [31, 35], "V'": [5, 9], "Q": [24, 25], "K'": [2, 3], "R": [26, 27], "K": [[10, 16], [11, 17]], "V": [[13, 19], [15, 21]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 67], "V'": [40, 42], "Q": [58, 59], "K'": [37, 38], "R": [60, 61], "K": [[43, 49], [44, 50]], "V": [[46, 52], [48, 55]], "example": [36, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly likes London. Kimberly likes Milan. Steven likes Washington, D.C. >. Kimberly does not want to go to Washington, D.C\n < Kimberly likes Moscow. Donald likes Bras\u00edlia. Donald likes Manchester. >. Donald does not want to go to Moscow\n", "ranges": [{"END": [35, 36], "A'": [36, 41], "V'": [19, 24], "Q": [27, 30], "K'": [16, 17], "R": [31, 32], "K": [[2, 9], [5, 12]], "V": [[7, 14], [8, 15]], "example": [1, 41]}, {"END": [69, 70], "A'": [70, 71], "V'": [48, 49], "Q": [63, 64], "K'": [43, 46], "R": [65, 66], "K": [[50, 56], [51, 57]], "V": [[53, 59], [55, 60]], "example": [42, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Seoul. Brian likes Canberra. Ruth likes Osaka. >. Brian does not want to go to Osaka\n < Jeff likes Venice. Donna likes Florence. Jeff likes Milan. >. Jeff does not want to go to Florence\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [18, 20], "Q": [23, 24], "K'": [15, 16], "R": [25, 26], "K": [[2, 8], [3, 9]], "V": [[5, 11], [7, 14]], "example": [1, 32]}, {"END": [59, 60], "A'": [60, 61], "V'": [44, 45], "Q": [53, 54], "K'": [40, 42], "R": [55, 56], "K": [[34, 46], [35, 47]], "V": [[37, 49], [39, 50]], "example": [33, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Berlin. Robert likes Paris. Betty likes New York. >. Robert does not want to go to New York\n < Linda likes Osaka. Christopher likes New Delhi. Christopher likes Moscow. >. Christopher does not want to go to Osaka\n", "ranges": [{"END": [26, 27], "A'": [27, 29], "V'": [15, 17], "Q": [20, 21], "K'": [12, 13], "R": [22, 23], "K": [[2, 7], [3, 8]], "V": [[5, 10], [6, 11]], "example": [1, 29]}, {"END": [58, 59], "A'": [59, 61], "V'": [35, 37], "Q": [52, 53], "K'": [31, 33], "R": [54, 55], "K": [[38, 45], [39, 46]], "V": [[41, 48], [44, 49]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Michelle likes Mumbai. Ronald likes Canberra. Michelle likes Novosibirsk. >. Michelle does not want to go to Canberra\n < Kenneth likes Manchester. Margaret likes Novosibirsk. Kenneth likes Washington, D.C. >. Kenneth does not want to go to Novosibirsk\n", "ranges": [{"END": [37, 38], "A'": [38, 41], "V'": [14, 17], "Q": [30, 32], "K'": [10, 12], "R": [33, 34], "K": [[2, 18], [4, 20]], "V": [[6, 22], [9, 27]], "example": [1, 41]}, {"END": [74, 75], "A'": [75, 80], "V'": [51, 56], "Q": [68, 69], "K'": [48, 49], "R": [70, 71], "K": [[43, 57], [44, 58]], "V": [[46, 60], [47, 65]], "example": [42, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Kevin likes Sao Paulo. Carol likes Busan. Carol likes Saint Petersburg. >. Carol does not want to go to Sao Paulo\n < Laura likes Barcelona. Daniel likes Saint Petersburg. Daniel likes Sydney. >. Daniel does not want to go to Barcelona\n", "ranges": [{"END": [29, 30], "A'": [30, 33], "V'": [5, 8], "Q": [23, 24], "K'": [2, 3], "R": [25, 26], "K": [[9, 15], [10, 16]], "V": [[12, 18], [14, 20]], "example": [1, 33]}, {"END": [59, 60], "A'": [60, 61], "V'": [38, 39], "Q": [53, 54], "K'": [35, 36], "R": [55, 56], "K": [[40, 46], [41, 47]], "V": [[43, 49], [45, 50]], "example": [34, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes Geneva. Richard likes Novosibirsk. Carol likes Bras\u00edlia. >. Carol does not want to go to Novosibirsk\n < Daniel likes New Delhi. Daniel likes London. Susan likes Tokyo. >. Daniel does not want to go to Tokyo\n", "ranges": [{"END": [31, 32], "A'": [32, 37], "V'": [11, 16], "Q": [25, 26], "K'": [8, 9], "R": [27, 28], "K": [[2, 17], [3, 18]], "V": [[5, 20], [7, 22]], "example": [1, 37]}, {"END": [64, 65], "A'": [65, 66], "V'": [54, 55], "Q": [58, 59], "K'": [51, 52], "R": [60, 61], "K": [[39, 46], [40, 47]], "V": [[42, 49], [45, 50]], "example": [38, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Geneva. Patricia likes Sao Paulo. Patricia likes Toronto. >. Patricia does not want to go to Geneva\n < Sandra likes Osaka. Joseph likes Canberra. Sandra likes Milan. >. Sandra does not want to go to Canberra\n", "ranges": [{"END": [34, 35], "A'": [35, 37], "V'": [5, 7], "Q": [26, 29], "K'": [2, 3], "R": [30, 31], "K": [[8, 17], [11, 20]], "V": [[13, 22], [16, 23]], "example": [1, 37]}, {"END": [68, 69], "A'": [69, 72], "V'": [49, 52], "Q": [61, 63], "K'": [46, 47], "R": [64, 65], "K": [[39, 53], [41, 55]], "V": [[43, 57], [45, 58]], "example": [38, 72]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Brisbane. Barbara likes Vancouver. Barbara likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Brisbane? Answer: Yes\n Premise: < Lisa likes Zurich. David likes Ottawa. David likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Zurich? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [50, 54], "V'": [8, 12], "Q": [43, 44], "K'": [5, 6], "R": [45, 46], "K": [[13, 19], [14, 20]], "V": [[16, 22], [18, 24]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [66, 68], "Q": [100, 101], "K'": [63, 64], "R": [102, 103], "K": [[69, 75], [70, 76]], "V": [[72, 78], [74, 81]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Brisbane. Barbara likes Vancouver. Barbara likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Brisbane? Answer: Yes\n Premise: < Lisa likes Zurich. David likes Ottawa. David likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Ottawa? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [50, 54], "V'": [8, 12], "Q": [43, 44], "K'": [5, 6], "R": [45, 46], "K": [[13, 19], [14, 20]], "V": [[16, 22], [18, 24]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [66, 68], "Q": [100, 101], "K'": [63, 64], "R": [102, 103], "K": [[69, 75], [70, 76]], "V": [[72, 78], [74, 81]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes London. Anthony likes Berlin. Anthony likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to London? Answer: Yes\n Premise: < Dorothy likes Rio de Janeiro. Kevin likes Venice. Dorothy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Venice? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [8, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[13, 18], [14, 19]], "example": [1, 50]}, {"END": [105, 106], "A'": [101, 103], "V'": [66, 68], "Q": [93, 95], "K'": [63, 64], "R": [96, 97], "K": [[55, 69], [57, 71]], "V": [[59, 73], [62, 74]], "example": [51, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes London. Anthony likes Berlin. Anthony likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to London? Answer: Yes\n Premise: < Dorothy likes Rio de Janeiro. Kevin likes Venice. Dorothy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Rio de Janeiro? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [8, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[13, 18], [14, 19]], "example": [1, 50]}, {"END": [106, 107], "A'": [101, 104], "V'": [66, 68], "Q": [93, 95], "K'": [63, 64], "R": [96, 97], "K": [[55, 69], [57, 71]], "V": [[59, 73], [62, 74]], "example": [51, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Venice. Donna likes Florence. Jeff likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Venice? Answer: No\n Premise: < Laura likes Brisbane. Laura likes Chiang Mai. Brian likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Barcelona? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [15, 16], "Q": [40, 41], "K'": [11, 13], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[8, 20], [10, 21]], "example": [1, 53]}, {"END": [106, 107], "A'": [103, 104], "V'": [76, 77], "Q": [96, 97], "K'": [73, 74], "R": [98, 99], "K": [[58, 66], [59, 67]], "V": [[61, 69], [65, 72]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Venice. Donna likes Florence. Jeff likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Venice? Answer: No\n Premise: < Laura likes Brisbane. Laura likes Chiang Mai. Brian likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Brisbane? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [15, 16], "Q": [40, 41], "K'": [11, 13], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[8, 20], [10, 21]], "example": [1, 53]}, {"END": [109, 110], "A'": [103, 107], "V'": [76, 77], "Q": [96, 97], "K'": [73, 74], "R": [98, 99], "K": [[58, 66], [59, 67]], "V": [[61, 69], [65, 72]], "example": [54, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Pattaya. Donald likes Chiang Mai. Susan likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Chiang Mai? Answer: Yes\n Premise: < Helen likes Berlin. Helen likes New Delhi. Mark likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Saint Petersburg? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [49, 52], "V'": [15, 18], "Q": [42, 43], "K'": [12, 13], "R": [44, 45], "K": [[5, 19], [6, 20]], "V": [[8, 22], [11, 23]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [76, 78], "Q": [97, 98], "K'": [73, 74], "R": [99, 100], "K": [[61, 66], [62, 67]], "V": [[64, 69], [65, 72]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Pattaya. Donald likes Chiang Mai. Susan likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Chiang Mai? Answer: Yes\n Premise: < Helen likes Berlin. Helen likes New Delhi. Mark likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Berlin? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [49, 52], "V'": [15, 18], "Q": [42, 43], "K'": [12, 13], "R": [44, 45], "K": [[5, 19], [6, 20]], "V": [[8, 22], [11, 23]], "example": [1, 56]}, {"END": [107, 108], "A'": [104, 105], "V'": [76, 78], "Q": [97, 98], "K'": [73, 74], "R": [99, 100], "K": [[61, 66], [62, 67]], "V": [[64, 69], [65, 72]], "example": [57, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Bangalore. Steven likes Venice. Ruth likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to Valencia? Answer: No\n Premise: < Deborah likes New York. William likes Paris. Deborah likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [42, 43], "K'": [12, 13], "R": [44, 45], "K": [[5, 18], [6, 19]], "V": [[8, 21], [11, 23]], "example": [1, 55]}, {"END": [111, 112], "A'": [108, 109], "V'": [71, 72], "Q": [99, 102], "K'": [68, 69], "R": [103, 104], "K": [[60, 73], [63, 76]], "V": [[65, 78], [67, 80]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Bangalore. Steven likes Venice. Ruth likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to Valencia? Answer: No\n Premise: < Deborah likes New York. William likes Paris. Deborah likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to New York? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [42, 43], "K'": [12, 13], "R": [44, 45], "K": [[5, 18], [6, 19]], "V": [[8, 21], [11, 23]], "example": [1, 55]}, {"END": [112, 113], "A'": [108, 110], "V'": [71, 72], "Q": [99, 102], "K'": [68, 69], "R": [103, 104], "K": [[60, 73], [63, 76]], "V": [[65, 78], [67, 80]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony likes Lyon. Anthony likes Bangalore. Susan likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Bangalore? Answer: No\n Premise: < Michael likes Zurich. Michael likes Saint Petersburg. Jennifer likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [20, 22], "Q": [41, 42], "K'": [17, 18], "R": [43, 44], "K": [[5, 10], [6, 11]], "V": [[8, 13], [9, 16]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [76, 78], "Q": [97, 98], "K'": [72, 74], "R": [99, 100], "K": [[60, 66], [61, 67]], "V": [[63, 69], [65, 71]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony likes Lyon. Anthony likes Bangalore. Susan likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Bangalore? Answer: No\n Premise: < Michael likes Zurich. Michael likes Saint Petersburg. Jennifer likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Zurich? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [20, 22], "Q": [41, 42], "K'": [17, 18], "R": [43, 44], "K": [[5, 10], [6, 11]], "V": [[8, 13], [9, 16]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [76, 78], "Q": [97, 98], "K'": [72, 74], "R": [99, 100], "K": [[60, 66], [61, 67]], "V": [[63, 69], [65, 71]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Ottawa. Laura likes Hamburg. Laura likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Ottawa? Answer: Yes\n Premise: < Michael likes Mumbai. Nancy likes Shanghai. Michael likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Shanghai? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [8, 10], "Q": [40, 41], "K'": [5, 6], "R": [42, 43], "K": [[11, 16], [12, 17]], "V": [[14, 19], [15, 21]], "example": [1, 53]}, {"END": [107, 108], "A'": [103, 105], "V'": [68, 70], "Q": [96, 97], "K'": [65, 66], "R": [98, 99], "K": [[58, 71], [59, 72]], "V": [[61, 74], [64, 77]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Ottawa. Laura likes Hamburg. Laura likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Ottawa? Answer: Yes\n Premise: < Michael likes Mumbai. Nancy likes Shanghai. Michael likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Mumbai? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [8, 10], "Q": [40, 41], "K'": [5, 6], "R": [42, 43], "K": [[11, 16], [12, 17]], "V": [[14, 19], [15, 21]], "example": [1, 53]}, {"END": [108, 109], "A'": [103, 106], "V'": [68, 70], "Q": [96, 97], "K'": [65, 66], "R": [98, 99], "K": [[58, 71], [59, 72]], "V": [[61, 74], [64, 77]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna likes Toronto. Michael likes New Delhi. Michael likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Toronto? Answer: Yes\n Premise: < Richard likes Valencia. Richard likes Munich. Sandra likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Milan? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [9, 10], "Q": [42, 43], "K'": [5, 7], "R": [44, 45], "K": [[11, 18], [12, 19]], "V": [[14, 21], [17, 23]], "example": [1, 54]}, {"END": [105, 106], "A'": [102, 103], "V'": [75, 76], "Q": [95, 96], "K'": [71, 73], "R": [97, 98], "K": [[59, 65], [60, 66]], "V": [[62, 68], [64, 70]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna likes Toronto. Michael likes New Delhi. Michael likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Toronto? Answer: Yes\n Premise: < Richard likes Valencia. Richard likes Munich. Sandra likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Munich? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [9, 10], "Q": [42, 43], "K'": [5, 7], "R": [44, 45], "K": [[11, 18], [12, 19]], "V": [[14, 21], [17, 23]], "example": [1, 54]}, {"END": [106, 107], "A'": [102, 104], "V'": [75, 76], "Q": [95, 96], "K'": [71, 73], "R": [97, 98], "K": [[59, 65], [60, 66]], "V": [[62, 68], [64, 70]], "example": [55, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Brisbane attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Barbara does not want to go to Brisbane\n < Vancouver attracts Mary. Ottawa attracts Christopher. Rio de Janeiro attracts Christopher. >. Christopher does not want to go to Vancouver\n", "ranges": [{"END": [30, 31], "A'": [31, 35], "V'": [2, 6], "Q": [24, 25], "K'": [8, 9], "R": [26, 27], "K": [[14, 20], [15, 21]], "V": [[10, 16], [12, 18]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 67], "V'": [37, 39], "Q": [58, 59], "K'": [41, 42], "R": [60, 61], "K": [[47, 54], [48, 55]], "V": [[43, 49], [45, 52]], "example": [36, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< London attracts Kimberly. Milan attracts Kimberly. Washington, D.C attracts Steven. >. Kimberly does not want to go to Washington, D.C\n < Moscow attracts Kimberly. Bras\u00edlia attracts Donald. Manchester attracts Donald. >. Donald does not want to go to Moscow\n", "ranges": [{"END": [35, 36], "A'": [36, 41], "V'": [16, 21], "Q": [27, 30], "K'": [23, 24], "R": [31, 32], "K": [[5, 12], [8, 15]], "V": [[2, 9], [3, 10]], "example": [1, 41]}, {"END": [69, 70], "A'": [70, 71], "V'": [43, 44], "Q": [63, 64], "K'": [46, 49], "R": [65, 66], "K": [[54, 59], [55, 60]], "V": [[50, 56], [52, 57]], "example": [42, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Seoul attracts Brian. Canberra attracts Brian. Osaka attracts Ruth. >. Brian does not want to go to Osaka\n < Venice attracts Jeff. Florence attracts Donna. Milan attracts Jeff. >. Jeff does not want to go to Florence\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [15, 17], "Q": [23, 24], "K'": [19, 20], "R": [25, 26], "K": [[6, 13], [7, 14]], "V": [[2, 8], [4, 11]], "example": [1, 32]}, {"END": [59, 60], "A'": [60, 61], "V'": [40, 41], "Q": [53, 54], "K'": [43, 45], "R": [55, 56], "K": [[38, 49], [39, 50]], "V": [[34, 46], [36, 47]], "example": [33, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Berlin attracts Robert. Paris attracts Robert. New York attracts Betty. >. Robert does not want to go to New York\n < Osaka attracts Linda. New Delhi attracts Christopher. Moscow attracts Christopher. >. Christopher does not want to go to Osaka\n", "ranges": [{"END": [26, 27], "A'": [27, 29], "V'": [12, 14], "Q": [20, 21], "K'": [16, 17], "R": [22, 23], "K": [[5, 10], [6, 11]], "V": [[2, 7], [3, 8]], "example": [1, 29]}, {"END": [58, 59], "A'": [59, 61], "V'": [31, 33], "Q": [52, 53], "K'": [35, 37], "R": [54, 55], "K": [[43, 48], [44, 49]], "V": [[38, 45], [41, 46]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Mumbai attracts Michelle. Canberra attracts Ronald. Novosibirsk attracts Michelle. >. Michelle does not want to go to Canberra\n < Manchester attracts Kenneth. Novosibirsk attracts Margaret. Washington, D.C attracts Kenneth. >. Kenneth does not want to go to Novosibirsk\n", "ranges": [{"END": [37, 38], "A'": [38, 41], "V'": [10, 13], "Q": [30, 32], "K'": [15, 17], "R": [33, 34], "K": [[7, 25], [9, 27]], "V": [[2, 18], [5, 23]], "example": [1, 41]}, {"END": [74, 75], "A'": [75, 80], "V'": [48, 53], "Q": [68, 69], "K'": [55, 56], "R": [70, 71], "K": [[46, 64], [47, 65]], "V": [[43, 57], [44, 62]], "example": [42, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sao Paulo attracts Kevin. Busan attracts Carol. Saint Petersburg attracts Carol. >. Carol does not want to go to Sao Paulo\n < Barcelona attracts Laura. Saint Petersburg attracts Daniel. Sydney attracts Daniel. >. Daniel does not want to go to Barcelona\n", "ranges": [{"END": [29, 30], "A'": [30, 33], "V'": [2, 5], "Q": [23, 24], "K'": [7, 8], "R": [25, 26], "K": [[13, 19], [14, 20]], "V": [[9, 15], [11, 17]], "example": [1, 33]}, {"END": [59, 60], "A'": [60, 61], "V'": [35, 36], "Q": [53, 54], "K'": [38, 39], "R": [55, 56], "K": [[44, 49], [45, 50]], "V": [[40, 46], [42, 47]], "example": [34, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Geneva attracts Carol. Novosibirsk attracts Richard. Bras\u00edlia attracts Carol. >. Carol does not want to go to Novosibirsk\n < New Delhi attracts Daniel. London attracts Daniel. Tokyo attracts Susan. >. Daniel does not want to go to Tokyo\n", "ranges": [{"END": [31, 32], "A'": [32, 37], "V'": [8, 13], "Q": [25, 26], "K'": [15, 16], "R": [27, 28], "K": [[6, 21], [7, 22]], "V": [[2, 17], [4, 19]], "example": [1, 37]}, {"END": [64, 65], "A'": [65, 66], "V'": [51, 52], "Q": [58, 59], "K'": [54, 55], "R": [60, 61], "K": [[44, 49], [45, 50]], "V": [[39, 46], [42, 47]], "example": [38, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Geneva attracts Mark. Sao Paulo attracts Patricia. Toronto attracts Patricia. >. Patricia does not want to go to Geneva\n < Osaka attracts Sandra. Canberra attracts Joseph. Milan attracts Sandra. >. Sandra does not want to go to Canberra\n", "ranges": [{"END": [34, 35], "A'": [35, 37], "V'": [2, 4], "Q": [26, 29], "K'": [6, 7], "R": [30, 31], "K": [[13, 20], [16, 23]], "V": [[8, 17], [11, 18]], "example": [1, 37]}, {"END": [68, 69], "A'": [69, 72], "V'": [46, 49], "Q": [61, 63], "K'": [51, 52], "R": [64, 65], "K": [[43, 56], [45, 58]], "V": [[39, 53], [41, 54]], "example": [38, 72]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Brisbane? Answer: Yes\n Premise: < Zurich attracts Lisa. Ottawa attracts David. Rio de Janeiro attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Zurich? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [50, 54], "V'": [5, 9], "Q": [43, 44], "K'": [11, 12], "R": [45, 46], "K": [[17, 23], [18, 24]], "V": [[13, 19], [15, 21]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [63, 65], "Q": [100, 101], "K'": [67, 68], "R": [102, 103], "K": [[73, 80], [74, 81]], "V": [[69, 75], [71, 78]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Brisbane? Answer: Yes\n Premise: < Zurich attracts Lisa. Ottawa attracts David. Rio de Janeiro attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Ottawa? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [50, 54], "V'": [5, 9], "Q": [43, 44], "K'": [11, 12], "R": [45, 46], "K": [[17, 23], [18, 24]], "V": [[13, 19], [15, 21]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [63, 65], "Q": [100, 101], "K'": [67, 68], "R": [102, 103], "K": [[73, 80], [74, 81]], "V": [[69, 75], [71, 78]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < London attracts Maria. Berlin attracts Anthony. Manchester attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to London? Answer: Yes\n Premise: < Rio de Janeiro attracts Dorothy. Venice attracts Kevin. Paris attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Venice? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [5, 6], "Q": [38, 39], "K'": [8, 9], "R": [40, 41], "K": [[13, 18], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 50]}, {"END": [105, 106], "A'": [101, 103], "V'": [63, 65], "Q": [93, 95], "K'": [67, 68], "R": [96, 97], "K": [[60, 72], [62, 74]], "V": [[55, 69], [58, 70]], "example": [51, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < London attracts Maria. Berlin attracts Anthony. Manchester attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to London? Answer: Yes\n Premise: < Rio de Janeiro attracts Dorothy. Venice attracts Kevin. Paris attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Rio de Janeiro? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [5, 6], "Q": [38, 39], "K'": [8, 9], "R": [40, 41], "K": [[13, 18], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 50]}, {"END": [106, 107], "A'": [101, 104], "V'": [63, 65], "Q": [93, 95], "K'": [67, 68], "R": [96, 97], "K": [[60, 72], [62, 74]], "V": [[55, 69], [58, 70]], "example": [51, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Venice attracts Jeff. Florence attracts Donna. Milan attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Venice? Answer: No\n Premise: < Brisbane attracts Laura. Chiang Mai attracts Laura. Barcelona attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Barcelona? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [11, 12], "Q": [40, 41], "K'": [14, 16], "R": [42, 43], "K": [[9, 20], [10, 21]], "V": [[5, 17], [7, 18]], "example": [1, 53]}, {"END": [106, 107], "A'": [103, 104], "V'": [73, 74], "Q": [96, 97], "K'": [76, 77], "R": [98, 99], "K": [[64, 71], [65, 72]], "V": [[58, 66], [62, 69]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Venice attracts Jeff. Florence attracts Donna. Milan attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Venice? Answer: No\n Premise: < Brisbane attracts Laura. Chiang Mai attracts Laura. Barcelona attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Brisbane? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [11, 12], "Q": [40, 41], "K'": [14, 16], "R": [42, 43], "K": [[9, 20], [10, 21]], "V": [[5, 17], [7, 18]], "example": [1, 53]}, {"END": [109, 110], "A'": [103, 107], "V'": [73, 74], "Q": [96, 97], "K'": [76, 77], "R": [98, 99], "K": [[64, 71], [65, 72]], "V": [[58, 66], [62, 69]], "example": [54, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Pattaya attracts Susan. Chiang Mai attracts Donald. Berlin attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Chiang Mai? Answer: Yes\n Premise: < Berlin attracts Helen. New Delhi attracts Helen. Saint Petersburg attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Saint Petersburg? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [49, 52], "V'": [12, 15], "Q": [42, 43], "K'": [17, 18], "R": [44, 45], "K": [[10, 22], [11, 23]], "V": [[5, 19], [8, 20]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [73, 75], "Q": [97, 98], "K'": [77, 78], "R": [99, 100], "K": [[64, 71], [65, 72]], "V": [[61, 66], [62, 69]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Pattaya attracts Susan. Chiang Mai attracts Donald. Berlin attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Chiang Mai? Answer: Yes\n Premise: < Berlin attracts Helen. New Delhi attracts Helen. Saint Petersburg attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Berlin? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [49, 52], "V'": [12, 15], "Q": [42, 43], "K'": [17, 18], "R": [44, 45], "K": [[10, 22], [11, 23]], "V": [[5, 19], [8, 20]], "example": [1, 56]}, {"END": [107, 108], "A'": [104, 105], "V'": [73, 75], "Q": [97, 98], "K'": [77, 78], "R": [99, 100], "K": [[64, 71], [65, 72]], "V": [[61, 66], [62, 69]], "example": [57, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Ruth. Venice attracts Steven. Valencia attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to Valencia? Answer: No\n Premise: < New York attracts Deborah. Paris attracts William. Valencia attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [12, 14], "Q": [42, 43], "K'": [16, 17], "R": [44, 45], "K": [[10, 22], [11, 23]], "V": [[5, 18], [8, 20]], "example": [1, 55]}, {"END": [111, 112], "A'": [108, 109], "V'": [68, 69], "Q": [99, 102], "K'": [71, 72], "R": [103, 104], "K": [[64, 77], [67, 80]], "V": [[60, 73], [62, 75]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Ruth. Venice attracts Steven. Valencia attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to Valencia? Answer: No\n Premise: < New York attracts Deborah. Paris attracts William. Valencia attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to New York? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [12, 14], "Q": [42, 43], "K'": [16, 17], "R": [44, 45], "K": [[10, 22], [11, 23]], "V": [[5, 18], [8, 20]], "example": [1, 55]}, {"END": [112, 113], "A'": [108, 110], "V'": [68, 69], "Q": [99, 102], "K'": [71, 72], "R": [103, 104], "K": [[64, 77], [67, 80]], "V": [[60, 73], [62, 75]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Anthony. Bangalore attracts Anthony. Bras\u00edlia attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Bangalore? Answer: No\n Premise: < Zurich attracts Michael. Saint Petersburg attracts Michael. Kyoto attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [17, 19], "Q": [41, 42], "K'": [21, 22], "R": [43, 44], "K": [[8, 15], [9, 16]], "V": [[5, 10], [6, 13]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [72, 74], "Q": [97, 98], "K'": [76, 78], "R": [99, 100], "K": [[64, 70], [65, 71]], "V": [[60, 66], [62, 68]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Anthony. Bangalore attracts Anthony. Bras\u00edlia attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Bangalore? Answer: No\n Premise: < Zurich attracts Michael. Saint Petersburg attracts Michael. Kyoto attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Zurich? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [17, 19], "Q": [41, 42], "K'": [21, 22], "R": [43, 44], "K": [[8, 15], [9, 16]], "V": [[5, 10], [6, 13]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [72, 74], "Q": [97, 98], "K'": [76, 78], "R": [99, 100], "K": [[64, 70], [65, 71]], "V": [[60, 66], [62, 68]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ottawa attracts Jeff. Hamburg attracts Laura. Seoul attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Ottawa? Answer: Yes\n Premise: < Mumbai attracts Michael. Shanghai attracts Nancy. Canberra attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Shanghai? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 7], "Q": [40, 41], "K'": [9, 10], "R": [42, 43], "K": [[14, 20], [15, 21]], "V": [[11, 16], [12, 18]], "example": [1, 53]}, {"END": [107, 108], "A'": [103, 105], "V'": [65, 67], "Q": [96, 97], "K'": [69, 70], "R": [98, 99], "K": [[63, 76], [64, 77]], "V": [[58, 71], [61, 74]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ottawa attracts Jeff. Hamburg attracts Laura. Seoul attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Ottawa? Answer: Yes\n Premise: < Mumbai attracts Michael. Shanghai attracts Nancy. Canberra attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Mumbai? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 7], "Q": [40, 41], "K'": [9, 10], "R": [42, 43], "K": [[14, 20], [15, 21]], "V": [[11, 16], [12, 18]], "example": [1, 53]}, {"END": [108, 109], "A'": [103, 106], "V'": [65, 67], "Q": [96, 97], "K'": [69, 70], "R": [98, 99], "K": [[63, 76], [64, 77]], "V": [[58, 71], [61, 74]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Donna. New Delhi attracts Michael. Saint Petersburg attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Toronto? Answer: Yes\n Premise: < Valencia attracts Richard. Munich attracts Richard. Milan attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Milan? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [42, 43], "K'": [8, 10], "R": [44, 45], "K": [[16, 22], [17, 23]], "V": [[11, 18], [14, 20]], "example": [1, 54]}, {"END": [105, 106], "A'": [102, 103], "V'": [71, 72], "Q": [95, 96], "K'": [74, 76], "R": [97, 98], "K": [[63, 69], [64, 70]], "V": [[59, 65], [61, 67]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Donna. New Delhi attracts Michael. Saint Petersburg attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Toronto? Answer: Yes\n Premise: < Valencia attracts Richard. Munich attracts Richard. Milan attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Munich? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [42, 43], "K'": [8, 10], "R": [44, 45], "K": [[16, 22], [17, 23]], "V": [[11, 18], [14, 20]], "example": [1, 54]}, {"END": [106, 107], "A'": [102, 104], "V'": [71, 72], "Q": [95, 96], "K'": [74, 76], "R": [97, 98], "K": [[63, 69], [64, 70]], "V": [[59, 65], [61, 67]], "example": [55, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Shanghai. Richard likes Novosibirsk. Kevin likes Bangkok. >. So who wants to go to Bangkok? Kevin\n < Sandra likes Geneva. Kevin likes Canberra. Elizabeth likes Kyoto. >. So who wants to go to Kyoto? Elizabeth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [18, 19], "Q": [33, 36], "K": [21, 24], "R": null, "K'": [[6, 12], [8, 17]], "V'": [[2, 9], [4, 10]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [54, 55], "Q": [68, 70], "K": [57, 59], "R": null, "K'": [[44, 50], [46, 53]], "V'": [[40, 47], [42, 48]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Washington, D.C. Brian likes Milan. Sarah likes London. >. So who wants to go to Washington, D.C? Richard\n < Ronald likes Kyoto. Susan likes Bras\u00edlia. Dorothy likes Venice. >. So who wants to go to Bras\u00edlia? Susan\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [2, 3], "Q": [29, 34], "K": [5, 10], "R": null, "K'": [[14, 19], [15, 20]], "V'": [[11, 16], [12, 17]], "example": [1, 36]}, {"END": [68, 69], "A": [69, 70], "V": [45, 46], "Q": [66, 68], "K": [48, 50], "R": null, "K'": [[42, 55], [44, 57]], "V'": [[38, 51], [40, 53]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven likes Valencia. Brian likes Venice. Ruth likes Chiang Mai. >. So who wants to go to Venice? Brian\n < William likes Barcelona. Kimberly likes New York. Barbara likes Bras\u00edlia. >. So who wants to go to Bras\u00edlia? Barbara\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [8, 9], "Q": [29, 31], "K": [11, 13], "R": null, "K'": [[5, 17], [7, 20]], "V'": [[2, 14], [3, 15]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 66], "V": [48, 49], "Q": [62, 64], "K": [51, 53], "R": null, "K'": [[38, 45], [39, 47]], "V'": [[35, 40], [36, 43]], "example": [34, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Betty likes Moscow. Margaret likes Osaka. Mary likes New Delhi. >. So who wants to go to Osaka? Margaret\n < Kenneth likes Novosibirsk. Donna likes Mumbai. Brian likes Canberra. >. So who wants to go to Canberra? Brian\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [7, 8], "Q": [28, 30], "K": [10, 12], "R": null, "K'": [[5, 16], [6, 19]], "V'": [[2, 13], [3, 14]], "example": [1, 32]}, {"END": [69, 70], "A": [70, 71], "V": [51, 52], "Q": [66, 69], "K": [54, 57], "R": null, "K'": [[37, 47], [42, 50]], "V'": [[34, 43], [35, 45]], "example": [33, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes New York. Donna likes Bangalore. Joseph likes Osaka. >. So who wants to go to New York? Carol\n < Michelle likes Chiang Mai. Helen likes Manchester. Joseph likes Paris. >. So who wants to go to Chiang Mai? Michelle\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [2, 3], "Q": [30, 32], "K": [5, 7], "R": null, "K'": [[12, 19], [15, 21]], "V'": [[8, 16], [10, 17]], "example": [1, 34]}, {"END": [65, 66], "A": [66, 68], "V": [36, 38], "Q": [62, 65], "K": [40, 43], "R": null, "K'": [[47, 52], [48, 53]], "V'": [[44, 49], [45, 50]], "example": [35, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David likes Florence. Carol likes Mumbai. Maria likes Washington, D.C. >. So who wants to go to Mumbai? Carol\n < Ronald likes Tokyo. Ruth likes London. Anthony likes New Delhi. >. So who wants to go to Tokyo? Ronald\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [7, 8], "Q": [31, 34], "K": [10, 13], "R": null, "K'": [[5, 17], [6, 22]], "V'": [[2, 14], [3, 15]], "example": [1, 36]}, {"END": [65, 66], "A": [66, 68], "V": [38, 40], "Q": [64, 65], "K": [42, 43], "R": null, "K'": [[47, 52], [48, 55]], "V'": [[44, 49], [45, 50]], "example": [37, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael likes Marseille. Sandra likes Novosibirsk. Daniel likes Incheon. >. So who wants to go to Novosibirsk? Sandra\n < Kevin likes Mumbai. Ronald likes Vancouver. Elizabeth likes New Delhi. >. So who wants to go to New Delhi? Elizabeth\n", "ranges": [{"END": [38, 39], "A": [39, 41], "V": [8, 10], "Q": [33, 38], "K": [12, 17], "R": null, "K'": [[5, 21], [7, 24]], "V'": [[2, 18], [3, 19]], "example": [1, 41]}, {"END": [75, 76], "A": [76, 77], "V": [57, 58], "Q": [72, 75], "K": [60, 63], "R": null, "K'": [[46, 54], [49, 56]], "V'": [[43, 50], [44, 52]], "example": [42, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Patricia likes Bern. Richard likes Birmingham. Paul likes Sao Paulo. >. So who wants to go to Bern? Patricia\n < Mary likes Hamburg. Richard likes Saint Petersburg. Michael likes Tokyo. >. So who wants to go to Hamburg? Mary\n", "ranges": [{"END": [31, 32], "A": [32, 35], "V": [2, 5], "Q": [30, 31], "K": [7, 8], "R": null, "K'": [[12, 18], [14, 21]], "V'": [[9, 15], [10, 16]], "example": [1, 35]}, {"END": [62, 63], "A": [63, 64], "V": [37, 38], "Q": [61, 62], "K": [40, 41], "R": null, "K'": [[45, 51], [47, 52]], "V'": [[42, 48], [43, 49]], "example": [36, 64]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Shanghai. Richard likes Novosibirsk. Kevin likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is Sharon? Answer: No\n Premise: < Sandra likes Bangalore. Kevin likes Geneva. Elizabeth likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is Elizabeth? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [21, 22], "Q": [53, 56], "K": [24, 27], "R": null, "K'": [[9, 15], [11, 20]], "V'": [[5, 12], [7, 13]], "example": [1, 63]}, {"END": [117, 118], "A": [114, 115], "V": [82, 83], "Q": [112, 113], "K": [85, 86], "R": null, "K'": [[72, 79], [75, 81]], "V'": [[68, 76], [70, 77]], "example": [64, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Shanghai. Richard likes Novosibirsk. Kevin likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is Sharon? Answer: No\n Premise: < Sandra likes Bangalore. Kevin likes Geneva. Elizabeth likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is Kevin? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [21, 22], "Q": [53, 56], "K": [24, 27], "R": null, "K'": [[9, 15], [11, 20]], "V'": [[5, 12], [7, 13]], "example": [1, 63]}, {"END": [117, 118], "A": [114, 115], "V": [82, 83], "Q": [112, 113], "K": [85, 86], "R": null, "K'": [[72, 79], [75, 81]], "V'": [[68, 76], [70, 77]], "example": [64, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Kyoto. Linda likes Manchester. Kenneth likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is Christopher? Answer: Yes\n Premise: < Deborah likes Rio de Janeiro. Kevin likes Osaka. John likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is Deborah? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [5, 6], "Q": [47, 49], "K": [8, 10], "R": null, "K'": [[15, 20], [16, 21]], "V'": [[11, 17], [13, 18]], "example": [1, 55]}, {"END": [114, 115], "A": [109, 112], "V": [60, 63], "Q": [105, 108], "K": [65, 68], "R": null, "K'": [[72, 78], [74, 79]], "V'": [[69, 75], [70, 76]], "example": [56, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Kyoto. Linda likes Manchester. Kenneth likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is Christopher? Answer: Yes\n Premise: < Deborah likes Rio de Janeiro. Kevin likes Osaka. John likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is John? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [5, 6], "Q": [47, 49], "K": [8, 10], "R": null, "K'": [[15, 20], [16, 21]], "V'": [[11, 17], [13, 18]], "example": [1, 55]}, {"END": [112, 113], "A": [109, 110], "V": [60, 63], "Q": [105, 108], "K": [65, 68], "R": null, "K'": [[72, 78], [74, 79]], "V'": [[69, 75], [70, 76]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Bangalore. Edward likes Chiang Mai. Robert likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Brisbane is Mary? Answer: No\n Premise: < Betty likes Osaka. Steven likes Lyon. Jennifer likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is Steven? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [19, 20], "Q": [52, 56], "K": [22, 26], "R": null, "K'": [[8, 15], [11, 18]], "V'": [[5, 12], [6, 13]], "example": [1, 62]}, {"END": [117, 118], "A": [114, 115], "V": [73, 74], "Q": [112, 113], "K": [76, 77], "R": null, "K'": [[70, 82], [72, 86]], "V'": [[67, 78], [68, 80]], "example": [63, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Bangalore. Edward likes Chiang Mai. Robert likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Brisbane is Mary? Answer: No\n Premise: < Betty likes Osaka. Steven likes Lyon. Jennifer likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is Betty? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [19, 20], "Q": [52, 56], "K": [22, 26], "R": null, "K'": [[8, 15], [11, 18]], "V'": [[5, 12], [6, 13]], "example": [1, 62]}, {"END": [117, 118], "A": [114, 115], "V": [73, 74], "Q": [112, 113], "K": [76, 77], "R": null, "K'": [[70, 82], [72, 86]], "V'": [[67, 78], [68, 80]], "example": [63, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Vancouver. Sharon likes Berlin. Anthony likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is Sharon? Answer: Yes\n Premise: < Thomas likes Sydney. Ruth likes Venice. Margaret likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is Ruth? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [11, 13], "Q": [48, 49], "K": [15, 16], "R": null, "K'": [[8, 20], [10, 22]], "V'": [[5, 17], [6, 18]], "example": [1, 56]}, {"END": [109, 110], "A": [106, 107], "V": [66, 67], "Q": [103, 105], "K": [69, 71], "R": null, "K'": [[64, 75], [65, 77]], "V'": [[61, 72], [62, 73]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Vancouver. Sharon likes Berlin. Anthony likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is Sharon? Answer: Yes\n Premise: < Thomas likes Sydney. Ruth likes Venice. Margaret likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is Margaret? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [11, 13], "Q": [48, 49], "K": [15, 16], "R": null, "K'": [[8, 20], [10, 22]], "V'": [[5, 17], [6, 18]], "example": [1, 56]}, {"END": [109, 110], "A": [106, 107], "V": [66, 67], "Q": [103, 105], "K": [69, 71], "R": null, "K'": [[64, 75], [65, 77]], "V'": [[61, 72], [62, 73]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes London. Anthony likes Novosibirsk. Deborah likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Novosibirsk is Charles? Answer: No\n Premise: < John likes Florence. Ronald likes Canberra. Deborah likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Florence is John? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [10, 11], "Q": [52, 57], "K": [13, 18], "R": null, "K'": [[8, 24], [9, 26]], "V'": [[5, 19], [6, 22]], "example": [1, 63]}, {"END": [118, 119], "A": [115, 116], "V": [68, 69], "Q": [113, 114], "K": [71, 72], "R": null, "K'": [[77, 86], [80, 87]], "V'": [[73, 81], [75, 84]], "example": [64, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes London. Anthony likes Novosibirsk. Deborah likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Novosibirsk is Charles? Answer: No\n Premise: < John likes Florence. Ronald likes Canberra. Deborah likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Florence is Ronald? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [10, 11], "Q": [52, 57], "K": [13, 18], "R": null, "K'": [[8, 24], [9, 26]], "V'": [[5, 19], [6, 22]], "example": [1, 63]}, {"END": [119, 120], "A": [115, 117], "V": [68, 69], "Q": [113, 114], "K": [71, 72], "R": null, "K'": [[77, 86], [80, 87]], "V'": [[73, 81], [75, 84]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Marseille. Sandra likes Bras\u00edlia. Daniel likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is Sandra? Answer: Yes\n Premise: < Ronald likes New Delhi. Donald likes Beijing. John likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is Ronald? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [11, 13], "Q": [48, 50], "K": [15, 17], "R": null, "K'": [[8, 21], [10, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 57]}, {"END": [116, 117], "A": [112, 114], "V": [62, 64], "Q": [108, 111], "K": [66, 69], "R": null, "K'": [[73, 80], [76, 82]], "V'": [[70, 77], [71, 78]], "example": [58, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Marseille. Sandra likes Bras\u00edlia. Daniel likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is Sandra? Answer: Yes\n Premise: < Ronald likes New Delhi. Donald likes Beijing. John likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is Donald? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [11, 13], "Q": [48, 50], "K": [15, 17], "R": null, "K'": [[8, 21], [10, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 57]}, {"END": [115, 116], "A": [112, 113], "V": [62, 64], "Q": [108, 111], "K": [66, 69], "R": null, "K'": [[73, 80], [76, 82]], "V'": [[70, 77], [71, 78]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald likes Munich. Betty likes Canberra. Lisa likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is Betty? Answer: Yes\n Premise: < Michelle likes Milan. Linda likes Saint Petersburg. Paul likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Paul? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [11, 12], "Q": [49, 52], "K": [14, 17], "R": null, "K'": [[8, 21], [10, 23]], "V'": [[5, 18], [6, 19]], "example": [1, 58]}, {"END": [111, 112], "A": [108, 109], "V": [76, 77], "Q": [106, 107], "K": [79, 80], "R": null, "K'": [[67, 73], [68, 75]], "V'": [[63, 69], [65, 71]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald likes Munich. Betty likes Canberra. Lisa likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is Betty? Answer: Yes\n Premise: < Michelle likes Milan. Linda likes Saint Petersburg. Paul likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Linda? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [11, 12], "Q": [49, 52], "K": [14, 17], "R": null, "K'": [[8, 21], [10, 23]], "V'": [[5, 18], [6, 19]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [76, 77], "Q": [106, 107], "K": [79, 80], "R": null, "K'": [[67, 73], [68, 75]], "V'": [[63, 69], [65, 71]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sydney. Maria likes Tokyo. Steven likes London. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Maria? Answer: Yes\n Premise: < Kevin likes Marseille. George likes Madrid. Paul likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is Paul? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [10, 11], "Q": [45, 46], "K": [13, 14], "R": null, "K'": [[8, 18], [9, 19]], "V'": [[5, 15], [6, 16]], "example": [1, 52]}, {"END": [103, 104], "A": [100, 101], "V": [68, 69], "Q": [98, 99], "K": [71, 72], "R": null, "K'": [[60, 66], [62, 67]], "V'": [[57, 63], [58, 64]], "example": [53, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sydney. Maria likes Tokyo. Steven likes London. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Maria? Answer: Yes\n Premise: < Kevin likes Marseille. George likes Madrid. Paul likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is George? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [10, 11], "Q": [45, 46], "K": [13, 14], "R": null, "K'": [[8, 18], [9, 19]], "V'": [[5, 15], [6, 16]], "example": [1, 52]}, {"END": [103, 104], "A": [100, 101], "V": [68, 69], "Q": [98, 99], "K": [71, 72], "R": null, "K'": [[60, 66], [62, 67]], "V'": [[57, 63], [58, 64]], "example": [53, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shanghai attracts Sharon. Novosibirsk attracts Richard. Bangkok attracts Kevin. >. So who wants to go to Bangkok? Kevin\n < Geneva attracts Sandra. Canberra attracts Kevin. Kyoto attracts Elizabeth. >. So who wants to go to Kyoto? Elizabeth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [23, 24], "Q": [33, 36], "K": [18, 21], "R": null, "K'": [[2, 9], [4, 14]], "V'": [[6, 16], [8, 17]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [58, 59], "Q": [68, 70], "K": [54, 56], "R": null, "K'": [[40, 47], [42, 50]], "V'": [[44, 52], [46, 53]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Washington, D.C attracts Richard. Milan attracts Brian. London attracts Sarah. >. So who wants to go to Washington, D.C? Richard\n < Kyoto attracts Ronald. Bras\u00edlia attracts Susan. Venice attracts Dorothy. >. So who wants to go to Bras\u00edlia? Susan\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [9, 10], "Q": [29, 34], "K": [2, 7], "R": null, "K'": [[11, 16], [12, 17]], "V'": [[14, 19], [15, 20]], "example": [1, 36]}, {"END": [68, 69], "A": [69, 70], "V": [49, 50], "Q": [66, 68], "K": [45, 47], "R": null, "K'": [[38, 51], [40, 53]], "V'": [[42, 55], [44, 57]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Valencia attracts Steven. Venice attracts Brian. Chiang Mai attracts Ruth. >. So who wants to go to Venice? Brian\n < Barcelona attracts William. New York attracts Kimberly. Bras\u00edlia attracts Barbara. >. So who wants to go to Bras\u00edlia? Barbara\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [12, 13], "Q": [29, 31], "K": [8, 10], "R": null, "K'": [[2, 14], [4, 17]], "V'": [[6, 19], [7, 20]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 66], "V": [52, 53], "Q": [62, 64], "K": [48, 50], "R": null, "K'": [[35, 40], [36, 42]], "V'": [[38, 44], [39, 47]], "example": [34, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Moscow attracts Betty. Osaka attracts Margaret. New Delhi attracts Mary. >. So who wants to go to Osaka? Margaret\n < Novosibirsk attracts Kenneth. Mumbai attracts Donna. Canberra attracts Brian. >. So who wants to go to Canberra? Brian\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [11, 12], "Q": [28, 30], "K": [7, 9], "R": null, "K'": [[2, 13], [3, 16]], "V'": [[5, 18], [6, 19]], "example": [1, 32]}, {"END": [69, 70], "A": [70, 71], "V": [56, 57], "Q": [66, 69], "K": [51, 54], "R": null, "K'": [[34, 43], [39, 46]], "V'": [[41, 48], [42, 50]], "example": [33, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< New York attracts Carol. Bangalore attracts Donna. Osaka attracts Joseph. >. So who wants to go to New York? Carol\n < Chiang Mai attracts Michelle. Manchester attracts Helen. Paris attracts Joseph. >. So who wants to go to Chiang Mai? Michelle\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [6, 7], "Q": [30, 32], "K": [2, 4], "R": null, "K'": [[8, 16], [11, 18]], "V'": [[13, 20], [15, 21]], "example": [1, 34]}, {"END": [65, 66], "A": [66, 68], "V": [41, 43], "Q": [62, 65], "K": [36, 39], "R": null, "K'": [[44, 49], [45, 50]], "V'": [[47, 52], [48, 53]], "example": [35, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Florence attracts David. Mumbai attracts Carol. Washington, D.C attracts Maria. >. So who wants to go to Mumbai? Carol\n < Tokyo attracts Ronald. London attracts Ruth. New Delhi attracts Anthony. >. So who wants to go to Tokyo? Ronald\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [12, 13], "Q": [31, 34], "K": [7, 10], "R": null, "K'": [[2, 14], [3, 19]], "V'": [[5, 21], [6, 22]], "example": [1, 36]}, {"END": [65, 66], "A": [66, 68], "V": [41, 43], "Q": [64, 65], "K": [38, 39], "R": null, "K'": [[44, 49], [45, 52]], "V'": [[47, 54], [48, 55]], "example": [37, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Marseille attracts Michael. Novosibirsk attracts Sandra. Incheon attracts Daniel. >. So who wants to go to Novosibirsk? Sandra\n < Mumbai attracts Kevin. Vancouver attracts Ronald. New Delhi attracts Elizabeth. >. So who wants to go to New Delhi? Elizabeth\n", "ranges": [{"END": [38, 39], "A": [39, 41], "V": [15, 17], "Q": [33, 38], "K": [8, 13], "R": null, "K'": [[2, 18], [4, 21]], "V'": [[6, 23], [7, 24]], "example": [1, 41]}, {"END": [75, 76], "A": [76, 77], "V": [62, 63], "Q": [72, 75], "K": [57, 60], "R": null, "K'": [[43, 50], [46, 52]], "V'": [[48, 54], [49, 56]], "example": [42, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Bern attracts Patricia. Birmingham attracts Richard. Sao Paulo attracts Paul. >. So who wants to go to Bern? Patricia\n < Hamburg attracts Mary. Saint Petersburg attracts Richard. Tokyo attracts Michael. >. So who wants to go to Hamburg? Mary\n", "ranges": [{"END": [31, 32], "A": [32, 35], "V": [5, 8], "Q": [30, 31], "K": [2, 3], "R": null, "K'": [[9, 15], [11, 18]], "V'": [[13, 20], [14, 21]], "example": [1, 35]}, {"END": [62, 63], "A": [63, 64], "V": [40, 41], "Q": [61, 62], "K": [37, 38], "R": null, "K'": [[42, 48], [44, 49]], "V'": [[46, 51], [47, 52]], "example": [36, 64]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Shanghai attracts Sharon. Novosibirsk attracts Richard. Bangkok attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is Sharon? Answer: No\n Premise: < Bangalore attracts Sandra. Geneva attracts Kevin. Toronto attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is Elizabeth? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [26, 27], "Q": [53, 56], "K": [21, 24], "R": null, "K'": [[5, 12], [7, 17]], "V'": [[9, 19], [11, 20]], "example": [1, 63]}, {"END": [117, 118], "A": [114, 115], "V": [85, 86], "Q": [112, 113], "K": [82, 83], "R": null, "K'": [[68, 76], [71, 78]], "V'": [[73, 80], [75, 81]], "example": [64, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Shanghai attracts Sharon. Novosibirsk attracts Richard. Bangkok attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is Sharon? Answer: No\n Premise: < Bangalore attracts Sandra. Geneva attracts Kevin. Toronto attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is Kevin? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [26, 27], "Q": [53, 56], "K": [21, 24], "R": null, "K'": [[5, 12], [7, 17]], "V'": [[9, 19], [11, 20]], "example": [1, 63]}, {"END": [117, 118], "A": [114, 115], "V": [85, 86], "Q": [112, 113], "K": [82, 83], "R": null, "K'": [[68, 76], [71, 78]], "V'": [[73, 80], [75, 81]], "example": [64, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kyoto attracts Christopher. Manchester attracts Linda. Florence attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is Christopher? Answer: Yes\n Premise: < Rio de Janeiro attracts Deborah. Osaka attracts Kevin. Moscow attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is Deborah? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [9, 10], "Q": [47, 49], "K": [5, 7], "R": null, "K'": [[11, 17], [12, 18]], "V'": [[14, 20], [16, 21]], "example": [1, 55]}, {"END": [114, 115], "A": [109, 112], "V": [65, 68], "Q": [105, 108], "K": [60, 63], "R": null, "K'": [[69, 75], [71, 76]], "V'": [[73, 78], [74, 79]], "example": [56, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kyoto attracts Christopher. Manchester attracts Linda. Florence attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is Christopher? Answer: Yes\n Premise: < Rio de Janeiro attracts Deborah. Osaka attracts Kevin. Moscow attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is John? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [9, 10], "Q": [47, 49], "K": [5, 7], "R": null, "K'": [[11, 17], [12, 18]], "V'": [[14, 20], [16, 21]], "example": [1, 55]}, {"END": [112, 113], "A": [109, 110], "V": [65, 68], "Q": [105, 108], "K": [60, 63], "R": null, "K'": [[69, 75], [71, 76]], "V'": [[73, 78], [74, 79]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Mary. Chiang Mai attracts Edward. Brisbane attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Brisbane is Mary? Answer: No\n Premise: < Osaka attracts Betty. Lyon attracts Steven. Brisbane attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is Steven? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [52, 56], "K": [19, 23], "R": null, "K'": [[5, 12], [8, 15]], "V'": [[10, 17], [11, 18]], "example": [1, 62]}, {"END": [117, 118], "A": [114, 115], "V": [76, 77], "Q": [112, 113], "K": [73, 74], "R": null, "K'": [[67, 78], [69, 82]], "V'": [[71, 84], [72, 86]], "example": [63, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Mary. Chiang Mai attracts Edward. Brisbane attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Brisbane is Mary? Answer: No\n Premise: < Osaka attracts Betty. Lyon attracts Steven. Brisbane attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is Betty? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [52, 56], "K": [19, 23], "R": null, "K'": [[5, 12], [8, 15]], "V'": [[10, 17], [11, 18]], "example": [1, 62]}, {"END": [117, 118], "A": [114, 115], "V": [76, 77], "Q": [112, 113], "K": [73, 74], "R": null, "K'": [[67, 78], [69, 82]], "V'": [[71, 84], [72, 86]], "example": [63, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Vancouver attracts Daniel. Berlin attracts Sharon. Birmingham attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is Sharon? Answer: Yes\n Premise: < Sydney attracts Thomas. Venice attracts Ruth. Bras\u00edlia attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is Ruth? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [14, 16], "Q": [48, 49], "K": [11, 12], "R": null, "K'": [[5, 17], [7, 19]], "V'": [[9, 21], [10, 22]], "example": [1, 56]}, {"END": [109, 110], "A": [106, 107], "V": [70, 71], "Q": [103, 105], "K": [66, 68], "R": null, "K'": [[61, 72], [62, 74]], "V'": [[64, 76], [65, 77]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Vancouver attracts Daniel. Berlin attracts Sharon. Birmingham attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is Sharon? Answer: Yes\n Premise: < Sydney attracts Thomas. Venice attracts Ruth. Bras\u00edlia attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is Margaret? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [14, 16], "Q": [48, 49], "K": [11, 12], "R": null, "K'": [[5, 17], [7, 19]], "V'": [[9, 21], [10, 22]], "example": [1, 56]}, {"END": [109, 110], "A": [106, 107], "V": [70, 71], "Q": [103, 105], "K": [66, 68], "R": null, "K'": [[61, 72], [62, 74]], "V'": [[64, 76], [65, 77]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < London attracts Charles. Novosibirsk attracts Anthony. Zurich attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Novosibirsk is Charles? Answer: No\n Premise: < Florence attracts John. Canberra attracts Ronald. Tokyo attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Florence is John? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [17, 18], "Q": [52, 57], "K": [10, 15], "R": null, "K'": [[5, 19], [6, 21]], "V'": [[8, 23], [9, 26]], "example": [1, 63]}, {"END": [118, 119], "A": [115, 116], "V": [71, 72], "Q": [113, 114], "K": [68, 69], "R": null, "K'": [[73, 81], [76, 82]], "V'": [[78, 84], [80, 87]], "example": [64, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < London attracts Charles. Novosibirsk attracts Anthony. Zurich attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Novosibirsk is Charles? Answer: No\n Premise: < Florence attracts John. Canberra attracts Ronald. Tokyo attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Florence is Ronald? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [17, 18], "Q": [52, 57], "K": [10, 15], "R": null, "K'": [[5, 19], [6, 21]], "V'": [[8, 23], [9, 26]], "example": [1, 63]}, {"END": [119, 120], "A": [115, 117], "V": [71, 72], "Q": [113, 114], "K": [68, 69], "R": null, "K'": [[73, 81], [76, 82]], "V'": [[78, 84], [80, 87]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Marseille attracts Michael. Bras\u00edlia attracts Sandra. Moscow attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is Sandra? Answer: Yes\n Premise: < New Delhi attracts Ronald. Beijing attracts Donald. Osaka attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is Ronald? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [15, 17], "Q": [48, 50], "K": [11, 13], "R": null, "K'": [[5, 18], [7, 19]], "V'": [[9, 21], [10, 22]], "example": [1, 57]}, {"END": [116, 117], "A": [112, 114], "V": [67, 69], "Q": [108, 111], "K": [62, 65], "R": null, "K'": [[70, 77], [73, 79]], "V'": [[75, 81], [76, 82]], "example": [58, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Marseille attracts Michael. Bras\u00edlia attracts Sandra. Moscow attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is Sandra? Answer: Yes\n Premise: < New Delhi attracts Ronald. Beijing attracts Donald. Osaka attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is Donald? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [15, 17], "Q": [48, 50], "K": [11, 13], "R": null, "K'": [[5, 18], [7, 19]], "V'": [[9, 21], [10, 22]], "example": [1, 57]}, {"END": [115, 116], "A": [112, 113], "V": [67, 69], "Q": [108, 111], "K": [62, 65], "R": null, "K'": [[70, 77], [73, 79]], "V'": [[75, 81], [76, 82]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Donald. Canberra attracts Betty. Ottawa attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is Betty? Answer: Yes\n Premise: < Milan attracts Michelle. Saint Petersburg attracts Linda. Tokyo attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Paul? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [16, 17], "Q": [49, 52], "K": [11, 14], "R": null, "K'": [[5, 18], [7, 20]], "V'": [[9, 22], [10, 23]], "example": [1, 58]}, {"END": [111, 112], "A": [108, 109], "V": [79, 80], "Q": [106, 107], "K": [76, 77], "R": null, "K'": [[63, 69], [64, 71]], "V'": [[66, 73], [68, 75]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Donald. Canberra attracts Betty. Ottawa attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is Betty? Answer: Yes\n Premise: < Milan attracts Michelle. Saint Petersburg attracts Linda. Tokyo attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Linda? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [16, 17], "Q": [49, 52], "K": [11, 14], "R": null, "K'": [[5, 18], [7, 20]], "V'": [[9, 22], [10, 23]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [79, 80], "Q": [106, 107], "K": [76, 77], "R": null, "K'": [[63, 69], [64, 71]], "V'": [[66, 73], [68, 75]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sydney attracts Mary. Tokyo attracts Maria. London attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Maria? Answer: Yes\n Premise: < Marseille attracts Kevin. Madrid attracts George. Sydney attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is Paul? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [13, 14], "Q": [45, 46], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[8, 18], [9, 19]], "example": [1, 52]}, {"END": [103, 104], "A": [100, 101], "V": [71, 72], "Q": [98, 99], "K": [68, 69], "R": null, "K'": [[57, 63], [59, 64]], "V'": [[61, 66], [62, 67]], "example": [53, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sydney attracts Mary. Tokyo attracts Maria. London attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is Maria? Answer: Yes\n Premise: < Marseille attracts Kevin. Madrid attracts George. Sydney attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is George? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [13, 14], "Q": [45, 46], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[8, 18], [9, 19]], "example": [1, 52]}, {"END": [103, 104], "A": [100, 101], "V": [71, 72], "Q": [98, 99], "K": [68, 69], "R": null, "K'": [[57, 63], [59, 64]], "V'": [[61, 66], [62, 67]], "example": [53, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Manchester. Kevin likes Bangkok. Kenneth likes Bangkok. >. The one who wants to go to Bangkok is not Mark\n < Kevin likes Osaka. Paul likes Guangzhou. Susan likes Guangzhou. >. The one who wants to go to Guangzhou is not Kevin\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [30, 33], "K'": [5, 6], "R": [34, 35], "K": [[10, 17], [13, 20]], "V": [[7, 14], [8, 15]], "example": [1, 36]}, {"END": [74, 75], "A'": [75, 76], "V'": [38, 39], "Q": [69, 73], "K'": [41, 43], "R": [74, 75], "K": [[47, 55], [51, 59]], "V": [[44, 52], [45, 53]], "example": [37, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donald likes Busan. Anthony likes Munich. Deborah likes Busan. >. The one who wants to go to Busan is not Anthony\n < Christopher likes Hamburg. Linda likes Milan. Kenneth likes Milan. >. The one who wants to go to Milan is not Christopher\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [8, 9], "Q": [31, 33], "K'": [11, 13], "R": [34, 35], "K": [[5, 19], [7, 21]], "V": [[2, 14], [3, 17]], "example": [1, 36]}, {"END": [65, 66], "A'": [66, 67], "V'": [38, 39], "Q": [63, 64], "K'": [41, 42], "R": [65, 66], "K": [[47, 52], [48, 53]], "V": [[43, 49], [45, 50]], "example": [37, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth likes Florence. Michael likes Florence. Ronald likes Bangkok. >. The one who wants to go to Florence is not Ronald\n < Jeff likes Venice. Brian likes Brisbane. Donald likes Venice. >. The one who wants to go to Venice is not Brian\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [12, 14], "Q": [29, 30], "K'": [16, 19], "R": [31, 32], "K": [[5, 10], [6, 11]], "V": [[2, 7], [3, 8]], "example": [1, 34]}, {"END": [68, 69], "A'": [69, 70], "V'": [42, 43], "Q": [65, 67], "K'": [45, 49], "R": [68, 69], "K": [[39, 53], [41, 55]], "V": [[36, 50], [37, 51]], "example": [35, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mary likes New York. Edward likes New York. Robert likes New Delhi. >. The one who wants to go to New York is not Robert\n < Ronald likes Florence. Karen likes Guangzhou. Dorothy likes Guangzhou. >. The one who wants to go to Guangzhou is not Ronald\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [14, 15], "Q": [30, 32], "K'": [17, 20], "R": [33, 34], "K": [[5, 11], [7, 13]], "V": [[2, 8], [3, 9]], "example": [1, 35]}, {"END": [75, 76], "A'": [76, 78], "V'": [37, 39], "Q": [70, 74], "K'": [41, 42], "R": [75, 76], "K": [[47, 56], [51, 60]], "V": [[43, 52], [45, 54]], "example": [36, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes Barcelona. Michael likes Washington, D.C. Sharon likes Barcelona. >. The one who wants to go to Barcelona is not Michael\n < Daniel likes Birmingham. Sharon likes Sao Paulo. Anthony likes Birmingham. >. The one who wants to go to Birmingham is not Sharon\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [7, 8], "Q": [31, 32], "K'": [10, 15], "R": [33, 34], "K": [[5, 20], [6, 21]], "V": [[2, 16], [3, 18]], "example": [1, 35]}, {"END": [69, 70], "A'": [70, 72], "V'": [43, 45], "Q": [66, 68], "K'": [47, 50], "R": [69, 70], "K": [[40, 54], [42, 56]], "V": [[37, 51], [38, 52]], "example": [36, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda likes Barcelona. Kimberly likes Mumbai. Helen likes Mumbai. >. The one who wants to go to Mumbai is not Linda\n < Michelle likes Rome. Helen likes Manchester. Joseph likes Manchester. >. The one who wants to go to Manchester is not Michelle\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [2, 4], "Q": [33, 36], "K'": [6, 7], "R": [37, 38], "K": [[13, 20], [16, 23]], "V": [[8, 17], [11, 18]], "example": [1, 40]}, {"END": [69, 70], "A'": [70, 72], "V'": [42, 44], "Q": [67, 68], "K'": [46, 47], "R": [69, 70], "K": [[51, 56], [52, 57]], "V": [[48, 53], [49, 54]], "example": [41, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna likes Mumbai. Sharon likes Ottawa. Laura likes Mumbai. >. The one who wants to go to Mumbai is not Sharon\n < Karen likes Manchester. Richard likes Manchester. George likes Hamburg. >. The one who wants to go to Manchester is not George\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [10, 12], "Q": [33, 36], "K'": [14, 16], "R": [37, 38], "K": [[6, 20], [9, 23]], "V": [[2, 17], [4, 18]], "example": [1, 40]}, {"END": [69, 70], "A'": [70, 71], "V'": [53, 54], "Q": [67, 68], "K'": [56, 57], "R": [69, 70], "K": [[46, 51], [47, 52]], "V": [[42, 48], [44, 49]], "example": [41, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna likes Mumbai. Linda likes Valencia. Steven likes Valencia. >. The one who wants to go to Valencia is not Donna\n < Ronald likes Madrid. Michael likes Rio de Janeiro. Donald likes Madrid. >. The one who wants to go to Madrid is not Michael\n", "ranges": [{"END": [35, 36], "A'": [36, 38], "V'": [2, 4], "Q": [32, 34], "K'": [6, 9], "R": [35, 36], "K": [[14, 20], [16, 22]], "V": [[10, 17], [12, 18]], "example": [1, 38]}, {"END": [69, 70], "A'": [70, 71], "V'": [46, 47], "Q": [67, 68], "K'": [49, 52], "R": [69, 70], "K": [[44, 56], [45, 57]], "V": [[40, 53], [42, 54]], "example": [39, 71]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Manchester. Kevin likes Bangkok. Kenneth likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not Mark? Answer: Yes\n Premise: < Nancy likes Birmingham. Paul likes Shanghai. Susan likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not Nancy? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [5, 6], "Q": [49, 52], "K'": [8, 9], "R": [53, 54], "K": [[13, 20], [16, 23]], "V": [[10, 17], [11, 18]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [64, 65], "Q": [107, 109], "K'": [67, 69], "R": [110, 111], "K": [[73, 79], [75, 81]], "V": [[70, 76], [71, 77]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Manchester. Kevin likes Bangkok. Kenneth likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not Mark? Answer: Yes\n Premise: < Nancy likes Birmingham. Paul likes Shanghai. Susan likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not Paul? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [5, 6], "Q": [49, 52], "K'": [8, 9], "R": [53, 54], "K": [[13, 20], [16, 23]], "V": [[10, 17], [11, 18]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [64, 65], "Q": [107, 109], "K'": [67, 69], "R": [110, 111], "K": [[73, 79], [75, 81]], "V": [[70, 76], [71, 77]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Washington, D.C. Daniel likes Washington, D.C. John likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Washington, D.C is not John? Answer: Yes\n Premise: < Susan likes Venice. Barbara likes Kyoto. Paul likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is not Barbara? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [23, 24], "Q": [53, 58], "K'": [26, 27], "R": [59, 60], "K": [[8, 17], [13, 22]], "V": [[5, 14], [6, 15]], "example": [1, 65]}, {"END": [120, 121], "A'": [117, 118], "V'": [76, 77], "Q": [113, 115], "K'": [79, 81], "R": [116, 117], "K": [[73, 85], [75, 87]], "V": [[70, 82], [71, 83]], "example": [66, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Washington, D.C. Daniel likes Washington, D.C. John likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Washington, D.C is not John? Answer: Yes\n Premise: < Susan likes Venice. Barbara likes Kyoto. Paul likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is not Paul? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [23, 24], "Q": [53, 58], "K'": [26, 27], "R": [59, 60], "K": [[8, 17], [13, 22]], "V": [[5, 14], [6, 15]], "example": [1, 65]}, {"END": [120, 121], "A'": [117, 118], "V'": [76, 77], "Q": [113, 115], "K'": [79, 81], "R": [116, 117], "K": [[73, 85], [75, 87]], "V": [[70, 82], [71, 83]], "example": [66, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven likes Barcelona. Brian likes Seoul. Ruth likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Steven? Answer: No\n Premise: < William likes New York. Kimberly likes New York. Barbara likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Barbara? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [10, 11], "Q": [46, 47], "K'": [13, 15], "R": [48, 49], "K": [[8, 19], [9, 20]], "V": [[5, 16], [6, 17]], "example": [1, 54]}, {"END": [111, 112], "A'": [108, 109], "V'": [73, 74], "Q": [104, 106], "K'": [76, 78], "R": [107, 108], "K": [[62, 70], [64, 72]], "V": [[59, 65], [60, 68]], "example": [55, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven likes Barcelona. Brian likes Seoul. Ruth likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Steven? Answer: No\n Premise: < William likes New York. Kimberly likes New York. Barbara likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Kimberly? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [10, 11], "Q": [46, 47], "K'": [13, 15], "R": [48, 49], "K": [[8, 19], [9, 20]], "V": [[5, 16], [6, 17]], "example": [1, 54]}, {"END": [113, 114], "A'": [108, 111], "V'": [73, 74], "Q": [104, 106], "K'": [76, 78], "R": [107, 108], "K": [[62, 70], [64, 72]], "V": [[59, 65], [60, 68]], "example": [55, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Toronto. Anthony likes Lyon. Joseph likes Lyon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is not Mary? Answer: Yes\n Premise: < John likes New Delhi. Deborah likes New Delhi. Kenneth likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is not Kenneth? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [5, 6], "Q": [45, 46], "K'": [8, 9], "R": [47, 48], "K": [[13, 18], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [112, 113], "A'": [109, 110], "V'": [74, 75], "Q": [104, 107], "K'": [77, 78], "R": [108, 109], "K": [[61, 70], [64, 73]], "V": [[58, 65], [59, 68]], "example": [54, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Toronto. Anthony likes Lyon. Joseph likes Lyon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is not Mary? Answer: Yes\n Premise: < John likes New Delhi. Deborah likes New Delhi. Kenneth likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is not Deborah? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [5, 6], "Q": [45, 46], "K'": [8, 9], "R": [47, 48], "K": [[13, 18], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [114, 115], "A'": [109, 112], "V'": [74, 75], "Q": [104, 107], "K'": [77, 78], "R": [108, 109], "K": [[61, 70], [64, 73]], "V": [[58, 65], [59, 68]], "example": [54, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura likes Geneva. Kimberly likes Geneva. Ruth likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not Ruth? Answer: Yes\n Premise: < Dorothy likes Zurich. Nancy likes New York. Deborah likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Dorothy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [19, 20], "Q": [49, 51], "K'": [22, 23], "R": [52, 53], "K": [[8, 16], [10, 18]], "V": [[5, 11], [6, 14]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [63, 65], "Q": [109, 111], "K'": [67, 69], "R": [112, 113], "K": [[73, 81], [75, 83]], "V": [[70, 76], [71, 79]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura likes Geneva. Kimberly likes Geneva. Ruth likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not Ruth? Answer: Yes\n Premise: < Dorothy likes Zurich. Nancy likes New York. Deborah likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Nancy? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [19, 20], "Q": [49, 51], "K'": [22, 23], "R": [52, 53], "K": [[8, 16], [10, 18]], "V": [[5, 11], [6, 14]], "example": [1, 58]}, {"END": [116, 117], "A'": [113, 114], "V'": [63, 65], "Q": [109, 111], "K'": [67, 69], "R": [112, 113], "K": [[73, 81], [75, 83]], "V": [[70, 76], [71, 79]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Beijing. William likes Beijing. David likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not David? Answer: Yes\n Premise: < Deborah likes Bern. Betty likes Moscow. Kenneth likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not Deborah? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [19, 20], "Q": [51, 54], "K'": [22, 25], "R": [55, 56], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [116, 117], "A'": [111, 114], "V'": [66, 69], "Q": [108, 109], "K'": [71, 72], "R": [110, 111], "K": [[76, 81], [77, 82]], "V": [[73, 78], [74, 79]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Beijing. William likes Beijing. David likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not David? Answer: Yes\n Premise: < Deborah likes Bern. Betty likes Moscow. Kenneth likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not Betty? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [19, 20], "Q": [51, 54], "K'": [22, 25], "R": [55, 56], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [114, 115], "A'": [111, 112], "V'": [66, 69], "Q": [108, 109], "K'": [71, 72], "R": [110, 111], "K": [[76, 81], [77, 82]], "V": [[73, 78], [74, 79]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Chiang Mai. Kevin likes Chiang Mai. Sandra likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Chiang Mai is not Michael? Answer: No\n Premise: < John likes Beijing. George likes Manchester. Christopher likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not George? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [19, 21], "Q": [50, 53], "K'": [23, 24], "R": [54, 55], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [72, 73], "Q": [109, 112], "K'": [75, 76], "R": [113, 114], "K": [[68, 80], [71, 83]], "V": [[65, 77], [66, 78]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Chiang Mai. Kevin likes Chiang Mai. Sandra likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Chiang Mai is not Michael? Answer: No\n Premise: < John likes Beijing. George likes Manchester. Christopher likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not Christopher? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [19, 21], "Q": [50, 53], "K'": [23, 24], "R": [54, 55], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [72, 73], "Q": [109, 112], "K'": [75, 76], "R": [113, 114], "K": [[68, 80], [71, 83]], "V": [[65, 77], [66, 78]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Bangalore. Richard likes Rio de Janeiro. Paul likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is not Paul? Answer: No\n Premise: < George likes Barcelona. Mary likes Barcelona. Margaret likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Margaret? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [5, 8], "Q": [53, 56], "K'": [10, 13], "R": [57, 58], "K": [[17, 24], [20, 27]], "V": [[14, 21], [15, 22]], "example": [1, 63]}, {"END": [114, 115], "A'": [111, 112], "V'": [78, 79], "Q": [108, 109], "K'": [81, 82], "R": [110, 111], "K": [[71, 76], [72, 77]], "V": [[68, 73], [69, 74]], "example": [64, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Bangalore. Richard likes Rio de Janeiro. Paul likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is not Paul? Answer: No\n Premise: < George likes Barcelona. Mary likes Barcelona. Margaret likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not George? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [5, 8], "Q": [53, 56], "K'": [10, 13], "R": [57, 58], "K": [[17, 24], [20, 27]], "V": [[14, 21], [15, 22]], "example": [1, 63]}, {"END": [114, 115], "A'": [111, 112], "V'": [78, 79], "Q": [108, 109], "K'": [81, 82], "R": [110, 111], "K": [[71, 76], [72, 77]], "V": [[68, 73], [69, 74]], "example": [64, 116]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Manchester attracts Mark. Bangkok attracts Kevin. Bangkok attracts Kenneth. >. The one who wants to go to Bangkok is not Mark\n < Osaka attracts Kevin. Guangzhou attracts Paul. Guangzhou attracts Susan. >. The one who wants to go to Guangzhou is not Kevin\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [5, 6], "Q": [30, 33], "K'": [2, 3], "R": [34, 35], "K": [[7, 14], [10, 17]], "V": [[12, 19], [13, 20]], "example": [1, 36]}, {"END": [74, 75], "A'": [75, 76], "V'": [42, 43], "Q": [69, 73], "K'": [38, 40], "R": [74, 75], "K": [[44, 52], [48, 56]], "V": [[50, 58], [51, 59]], "example": [37, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Busan attracts Donald. Munich attracts Anthony. Busan attracts Deborah. >. The one who wants to go to Busan is not Anthony\n < Hamburg attracts Christopher. Milan attracts Linda. Milan attracts Kenneth. >. The one who wants to go to Milan is not Christopher\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [12, 13], "Q": [31, 33], "K'": [8, 10], "R": [34, 35], "K": [[2, 14], [4, 16]], "V": [[6, 18], [7, 21]], "example": [1, 36]}, {"END": [65, 66], "A'": [66, 67], "V'": [41, 42], "Q": [63, 64], "K'": [38, 39], "R": [65, 66], "K": [[43, 49], [44, 50]], "V": [[46, 52], [48, 53]], "example": [37, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Florence attracts Ruth. Florence attracts Michael. Bangkok attracts Ronald. >. The one who wants to go to Florence is not Ronald\n < Venice attracts Jeff. Brisbane attracts Brian. Venice attracts Donald. >. The one who wants to go to Venice is not Brian\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [17, 19], "Q": [29, 30], "K'": [12, 15], "R": [31, 32], "K": [[2, 7], [3, 8]], "V": [[5, 10], [6, 11]], "example": [1, 34]}, {"END": [68, 69], "A'": [69, 70], "V'": [48, 49], "Q": [65, 67], "K'": [42, 46], "R": [68, 69], "K": [[36, 50], [38, 52]], "V": [[40, 54], [41, 55]], "example": [35, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< New York attracts Mary. New York attracts Edward. New Delhi attracts Robert. >. The one who wants to go to New York is not Robert\n < Florence attracts Ronald. Guangzhou attracts Karen. Guangzhou attracts Dorothy. >. The one who wants to go to Guangzhou is not Ronald\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [19, 20], "Q": [30, 32], "K'": [14, 17], "R": [33, 34], "K": [[2, 8], [4, 10]], "V": [[6, 12], [7, 13]], "example": [1, 35]}, {"END": [75, 76], "A'": [76, 78], "V'": [40, 42], "Q": [70, 74], "K'": [37, 38], "R": [75, 76], "K": [[43, 52], [47, 56]], "V": [[49, 58], [51, 60]], "example": [36, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Barcelona attracts Carol. Washington, D.C attracts Michael. Barcelona attracts Sharon. >. The one who wants to go to Barcelona is not Michael\n < Birmingham attracts Daniel. Sao Paulo attracts Sharon. Birmingham attracts Anthony. >. The one who wants to go to Birmingham is not Sharon\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [14, 15], "Q": [31, 32], "K'": [7, 12], "R": [33, 34], "K": [[2, 16], [3, 17]], "V": [[5, 19], [6, 21]], "example": [1, 35]}, {"END": [69, 70], "A'": [70, 72], "V'": [48, 50], "Q": [66, 68], "K'": [43, 46], "R": [69, 70], "K": [[37, 51], [39, 53]], "V": [[41, 55], [42, 56]], "example": [36, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Barcelona attracts Linda. Mumbai attracts Kimberly. Mumbai attracts Helen. >. The one who wants to go to Mumbai is not Linda\n < Rome attracts Michelle. Manchester attracts Helen. Manchester attracts Joseph. >. The one who wants to go to Manchester is not Michelle\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [5, 7], "Q": [33, 36], "K'": [2, 3], "R": [37, 38], "K": [[8, 17], [11, 20]], "V": [[13, 22], [16, 23]], "example": [1, 40]}, {"END": [69, 70], "A'": [70, 72], "V'": [45, 47], "Q": [67, 68], "K'": [42, 43], "R": [69, 70], "K": [[48, 53], [49, 54]], "V": [[51, 56], [52, 57]], "example": [41, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Mumbai attracts Donna. Ottawa attracts Sharon. Mumbai attracts Laura. >. The one who wants to go to Mumbai is not Sharon\n < Manchester attracts Karen. Manchester attracts Richard. Hamburg attracts George. >. The one who wants to go to Manchester is not George\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [14, 16], "Q": [33, 36], "K'": [10, 12], "R": [37, 38], "K": [[2, 17], [5, 20]], "V": [[7, 22], [9, 23]], "example": [1, 40]}, {"END": [69, 70], "A'": [70, 71], "V'": [56, 57], "Q": [67, 68], "K'": [53, 54], "R": [69, 70], "K": [[42, 48], [43, 49]], "V": [[45, 51], [47, 52]], "example": [41, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Mumbai attracts Donna. Valencia attracts Linda. Valencia attracts Steven. >. The one who wants to go to Valencia is not Donna\n < Madrid attracts Ronald. Rio de Janeiro attracts Michael. Madrid attracts Donald. >. The one who wants to go to Madrid is not Michael\n", "ranges": [{"END": [35, 36], "A'": [36, 38], "V'": [7, 9], "Q": [32, 34], "K'": [2, 5], "R": [35, 36], "K": [[10, 17], [12, 19]], "V": [[14, 21], [16, 22]], "example": [1, 38]}, {"END": [69, 70], "A'": [70, 71], "V'": [51, 52], "Q": [67, 68], "K'": [46, 49], "R": [69, 70], "K": [[40, 53], [41, 54]], "V": [[43, 56], [45, 57]], "example": [39, 71]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Mark. Bangkok attracts Kevin. Bangkok attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not Mark? Answer: Yes\n Premise: < Birmingham attracts Nancy. Shanghai attracts Paul. Shanghai attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not Nancy? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [8, 9], "Q": [49, 52], "K'": [5, 6], "R": [53, 54], "K": [[10, 17], [13, 20]], "V": [[15, 22], [16, 23]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [68, 69], "Q": [107, 109], "K'": [64, 66], "R": [110, 111], "K": [[70, 76], [72, 78]], "V": [[74, 80], [75, 81]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Mark. Bangkok attracts Kevin. Bangkok attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not Mark? Answer: Yes\n Premise: < Birmingham attracts Nancy. Shanghai attracts Paul. Shanghai attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not Paul? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [8, 9], "Q": [49, 52], "K'": [5, 6], "R": [53, 54], "K": [[10, 17], [13, 20]], "V": [[15, 22], [16, 23]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [68, 69], "Q": [107, 109], "K'": [64, 66], "R": [110, 111], "K": [[70, 76], [72, 78]], "V": [[74, 80], [75, 81]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Washington, D.C attracts Brian. Washington, D.C attracts Daniel. Sydney attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Washington, D.C is not John? Answer: Yes\n Premise: < Venice attracts Susan. Kyoto attracts Barbara. Venice attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is not Barbara? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [26, 27], "Q": [53, 58], "K'": [23, 24], "R": [59, 60], "K": [[5, 14], [10, 19]], "V": [[12, 21], [13, 22]], "example": [1, 65]}, {"END": [120, 121], "A'": [117, 118], "V'": [80, 81], "Q": [113, 115], "K'": [76, 78], "R": [116, 117], "K": [[70, 82], [72, 84]], "V": [[74, 86], [75, 87]], "example": [66, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Washington, D.C attracts Brian. Washington, D.C attracts Daniel. Sydney attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Washington, D.C is not John? Answer: Yes\n Premise: < Venice attracts Susan. Kyoto attracts Barbara. Venice attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Venice is not Paul? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [26, 27], "Q": [53, 58], "K'": [23, 24], "R": [59, 60], "K": [[5, 14], [10, 19]], "V": [[12, 21], [13, 22]], "example": [1, 65]}, {"END": [120, 121], "A'": [117, 118], "V'": [80, 81], "Q": [113, 115], "K'": [76, 78], "R": [116, 117], "K": [[70, 82], [72, 84]], "V": [[74, 86], [75, 87]], "example": [66, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Steven. Seoul attracts Brian. Barcelona attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Steven? Answer: No\n Premise: < New York attracts William. New York attracts Kimberly. Zurich attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Barbara? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [14, 15], "Q": [46, 47], "K'": [10, 12], "R": [48, 49], "K": [[5, 16], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 54]}, {"END": [111, 112], "A'": [108, 109], "V'": [77, 78], "Q": [104, 106], "K'": [73, 75], "R": [107, 108], "K": [[59, 65], [61, 67]], "V": [[63, 69], [64, 72]], "example": [55, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Steven. Seoul attracts Brian. Barcelona attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Steven? Answer: No\n Premise: < New York attracts William. New York attracts Kimberly. Zurich attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Kimberly? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [14, 15], "Q": [46, 47], "K'": [10, 12], "R": [48, 49], "K": [[5, 16], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 54]}, {"END": [113, 114], "A'": [108, 111], "V'": [77, 78], "Q": [104, 106], "K'": [73, 75], "R": [107, 108], "K": [[59, 65], [61, 67]], "V": [[63, 69], [64, 72]], "example": [55, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Mary. Lyon attracts Anthony. Lyon attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is not Mary? Answer: Yes\n Premise: < New Delhi attracts John. New Delhi attracts Deborah. Berlin attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is not Kenneth? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [8, 9], "Q": [45, 46], "K'": [5, 6], "R": [47, 48], "K": [[10, 15], [11, 16]], "V": [[13, 18], [14, 19]], "example": [1, 53]}, {"END": [112, 113], "A'": [109, 110], "V'": [77, 78], "Q": [104, 107], "K'": [74, 75], "R": [108, 109], "K": [[58, 65], [61, 68]], "V": [[63, 70], [64, 73]], "example": [54, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts Mary. Lyon attracts Anthony. Lyon attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lyon is not Mary? Answer: Yes\n Premise: < New Delhi attracts John. New Delhi attracts Deborah. Berlin attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New Delhi is not Deborah? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [8, 9], "Q": [45, 46], "K'": [5, 6], "R": [47, 48], "K": [[10, 15], [11, 16]], "V": [[13, 18], [14, 19]], "example": [1, 53]}, {"END": [114, 115], "A'": [109, 112], "V'": [77, 78], "Q": [104, 107], "K'": [74, 75], "R": [108, 109], "K": [[58, 65], [61, 68]], "V": [[63, 70], [64, 73]], "example": [54, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Geneva attracts Laura. Geneva attracts Kimberly. Sydney attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not Ruth? Answer: Yes\n Premise: < Zurich attracts Dorothy. New York attracts Nancy. New York attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Dorothy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [22, 23], "Q": [49, 51], "K'": [19, 20], "R": [52, 53], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 18]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [67, 69], "Q": [109, 111], "K'": [63, 65], "R": [112, 113], "K": [[70, 76], [72, 78]], "V": [[74, 80], [75, 83]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Geneva attracts Laura. Geneva attracts Kimberly. Sydney attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not Ruth? Answer: Yes\n Premise: < Zurich attracts Dorothy. New York attracts Nancy. New York attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to New York is not Nancy? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [22, 23], "Q": [49, 51], "K'": [19, 20], "R": [52, 53], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 18]], "example": [1, 58]}, {"END": [116, 117], "A'": [113, 114], "V'": [67, 69], "Q": [109, 111], "K'": [63, 65], "R": [112, 113], "K": [[70, 76], [72, 78]], "V": [[74, 80], [75, 83]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Beijing attracts Jeff. Beijing attracts William. Chiang Mai attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not David? Answer: Yes\n Premise: < Bern attracts Deborah. Moscow attracts Betty. Moscow attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not Deborah? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [24, 25], "Q": [51, 54], "K'": [19, 22], "R": [55, 56], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 61]}, {"END": [116, 117], "A'": [111, 114], "V'": [69, 72], "Q": [108, 109], "K'": [66, 67], "R": [110, 111], "K": [[73, 78], [74, 79]], "V": [[76, 81], [77, 82]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Beijing attracts Jeff. Beijing attracts William. Chiang Mai attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not David? Answer: Yes\n Premise: < Bern attracts Deborah. Moscow attracts Betty. Moscow attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not Betty? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [24, 25], "Q": [51, 54], "K'": [19, 22], "R": [55, 56], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 61]}, {"END": [114, 115], "A'": [111, 112], "V'": [69, 72], "Q": [108, 109], "K'": [66, 67], "R": [110, 111], "K": [[73, 78], [74, 79]], "V": [[76, 81], [77, 82]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Chiang Mai attracts Michael. Chiang Mai attracts Kevin. Florence attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Chiang Mai is not Michael? Answer: No\n Premise: < Beijing attracts John. Manchester attracts George. Beijing attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not George? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [22, 24], "Q": [50, 53], "K'": [19, 20], "R": [54, 55], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [75, 76], "Q": [109, 112], "K'": [72, 73], "R": [113, 114], "K": [[65, 77], [68, 80]], "V": [[70, 82], [71, 83]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Chiang Mai attracts Michael. Chiang Mai attracts Kevin. Florence attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Chiang Mai is not Michael? Answer: No\n Premise: < Beijing attracts John. Manchester attracts George. Beijing attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Beijing is not Christopher? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [22, 24], "Q": [50, 53], "K'": [19, 20], "R": [54, 55], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [75, 76], "Q": [109, 112], "K'": [72, 73], "R": [113, 114], "K": [[65, 77], [68, 80]], "V": [[70, 82], [71, 83]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Patricia. Rio de Janeiro attracts Richard. Rio de Janeiro attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is not Paul? Answer: No\n Premise: < Barcelona attracts George. Barcelona attracts Mary. Tokyo attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not Margaret? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [10, 13], "Q": [53, 56], "K'": [5, 8], "R": [57, 58], "K": [[14, 21], [17, 24]], "V": [[19, 26], [20, 27]], "example": [1, 63]}, {"END": [114, 115], "A'": [111, 112], "V'": [81, 82], "Q": [108, 109], "K'": [78, 79], "R": [110, 111], "K": [[68, 73], [69, 74]], "V": [[71, 76], [72, 77]], "example": [64, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangalore attracts Patricia. Rio de Janeiro attracts Richard. Rio de Janeiro attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Rio de Janeiro is not Paul? Answer: No\n Premise: < Barcelona attracts George. Barcelona attracts Mary. Tokyo attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is not George? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [10, 13], "Q": [53, 56], "K'": [5, 8], "R": [57, 58], "K": [[14, 21], [17, 24]], "V": [[19, 26], [20, 27]], "example": [1, 63]}, {"END": [114, 115], "A'": [111, 112], "V'": [81, 82], "Q": [108, 109], "K'": [78, 79], "R": [110, 111], "K": [[68, 73], [69, 74]], "V": [[71, 76], [72, 77]], "example": [64, 116]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Thailand, Italy, the United Kingdom, India and Spain.\n< David likes London. Sharon likes Saint Petersburg. Barbara likes Milan. >. So Barbara wants to go to a city of Italy\n < Donna likes New Delhi. Michael likes Madrid. John likes Bangkok. >. So John wants to go to a city of Thailand\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [38, 39], "Q": [43, 44], "K": [35, 36], "R": null, "K'": [[23, 28], [24, 30]], "V'": [[26, 32], [27, 34]], "example": [22, 52]}, {"END": [84, 85], "A": [85, 87], "V": [70, 73], "Q": [77, 78], "K": [67, 68], "R": null, "K'": [[54, 62], [56, 63]], "V'": [[58, 65], [61, 66]], "example": [53, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Canada, Spain and South Korea.\n< Richard likes Incheon. Brian likes Manchester. Sarah likes Venice. >. So Richard wants to go to a city of South Korea\n < Susan likes Madrid. Ronald likes London. Dorothy likes Vancouver. >. So Susan wants to go to a city of Spain\n", "ranges": [{"END": [49, 50], "A": [50, 52], "V": [24, 27], "Q": [42, 43], "K": [21, 22], "R": null, "K'": [[28, 33], [29, 34]], "V'": [[31, 36], [32, 38]], "example": [20, 52]}, {"END": [82, 83], "A": [83, 84], "V": [57, 58], "Q": [75, 76], "K": [54, 55], "R": null, "K'": [[59, 65], [61, 67]], "V'": [[63, 69], [64, 71]], "example": [53, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, South Korea, Brazil, Thailand and Australia.\n< Laura likes Brisbane. Helen likes Bangkok. Carol likes Busan. >. So Carol wants to go to a city of South Korea\n < Edward likes Bras\u00edlia. Jennifer likes Busan. Christopher likes Bern. >. So Christopher wants to go to a city of Switzerland\n", "ranges": [{"END": [51, 52], "A": [52, 54], "V": [38, 40], "Q": [44, 45], "K": [35, 36], "R": null, "K'": [[20, 28], [21, 29]], "V'": [[23, 31], [27, 34]], "example": [19, 54]}, {"END": [84, 85], "A": [85, 86], "V": [72, 73], "Q": [77, 78], "K": [69, 70], "R": null, "K'": [[56, 62], [57, 64]], "V'": [[59, 66], [61, 68]], "example": [55, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Kenneth likes Ottawa. Brian likes Tokyo. Donna likes Seoul. >. So Brian wants to go to a city of Japan\n < Jeff likes Los Angeles. Patricia likes Lyon. Sarah likes New Delhi. >. So Jeff wants to go to a city of the United States\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [32, 33], "Q": [44, 45], "K": [29, 30], "R": null, "K'": [[23, 34], [24, 36]], "V'": [[26, 38], [28, 40]], "example": [22, 53]}, {"END": [85, 86], "A": [86, 89], "V": [58, 60], "Q": [78, 79], "K": [55, 56], "R": null, "K'": [[61, 68], [64, 69]], "V'": [[66, 71], [67, 74]], "example": [54, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Anthony likes Shanghai. Brian likes Manchester. Barbara likes Zurich. >. So Barbara wants to go to a city of Switzerland\n < Michael likes Ottawa. John likes Incheon. Helen likes Geneva. >. So Michael wants to go to a city of Canada\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [35, 37], "Q": [41, 42], "K": [32, 33], "R": null, "K'": [[21, 27], [22, 28]], "V'": [[24, 30], [26, 31]], "example": [20, 50]}, {"END": [81, 82], "A": [82, 83], "V": [55, 57], "Q": [74, 75], "K": [52, 53], "R": null, "K'": [[58, 65], [59, 66]], "V'": [[61, 68], [64, 70]], "example": [51, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, France, Thailand, India and Switzerland.\n< Daniel likes Bangkok. Michael likes Mumbai. Donna likes Bern. >. So Donna wants to go to a city of Switzerland\n < Kevin likes Paris. Elizabeth likes Birmingham. Ronald likes Lyon. >. So Elizabeth wants to go to a city of the United Kingdom\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [39, 40], "Q": [44, 46], "K": [35, 37], "R": null, "K'": [[21, 28], [22, 29]], "V'": [[24, 31], [27, 34]], "example": [20, 54]}, {"END": [83, 84], "A": [84, 87], "V": [64, 66], "Q": [76, 77], "K": [61, 62], "R": null, "K'": [[56, 67], [57, 69]], "V'": [[59, 71], [60, 72]], "example": [55, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Australia, Spain and Japan.\n< Paul likes Chiang Mai. Ruth likes Tokyo. Richard likes Barcelona. >. So Paul wants to go to a city of Thailand\n < Linda likes Barcelona. Richard likes Bangkok. Steven likes Brisbane. >. So Richard wants to go to a city of Thailand\n", "ranges": [{"END": [44, 45], "A": [45, 47], "V": [20, 23], "Q": [37, 38], "K": [17, 18], "R": null, "K'": [[24, 29], [25, 30]], "V'": [[27, 32], [28, 33]], "example": [16, 47]}, {"END": [80, 81], "A": [81, 83], "V": [58, 61], "Q": [73, 74], "K": [55, 56], "R": null, "K'": [[49, 62], [51, 63]], "V'": [[53, 65], [54, 69]], "example": [48, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Australia, India, the United Kingdom, China and Japan.\n< Jennifer likes Sydney. Steven likes Munich. Maria likes Beijing. >. So Jennifer wants to go to a city of Australia\n < Paul likes London. Anthony likes New Delhi. Kimberly likes Kyoto. >. So Kimberly wants to go to a city of Japan\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [26, 27], "Q": [44, 46], "K": [22, 24], "R": null, "K'": [[28, 34], [29, 35]], "V'": [[31, 37], [33, 40]], "example": [21, 54]}, {"END": [88, 89], "A": [89, 90], "V": [73, 75], "Q": [79, 82], "K": [68, 71], "R": null, "K'": [[56, 61], [57, 62]], "V'": [[59, 64], [60, 67]], "example": [55, 90]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < David likes London. Sharon likes Saint Petersburg. Barbara likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a city of the United Kingdom? Answer: No\n Premise: < Sarah likes New Delhi. Donna likes Madrid. Steven likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [42, 43], "Q": [62, 63], "K": [39, 40], "R": null, "K'": [[27, 32], [28, 34]], "V'": [[30, 36], [31, 38]], "example": [22, 77]}, {"END": [132, 133], "A": [128, 130], "V": [98, 101], "Q": [120, 121], "K": [95, 96], "R": null, "K'": [[82, 89], [83, 91]], "V'": [[85, 93], [88, 94]], "example": [78, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < David likes London. Sharon likes Saint Petersburg. Barbara likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a city of the United Kingdom? Answer: No\n Premise: < Sarah likes New Delhi. Donna likes Madrid. Steven likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of Spain? Answer: No\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [42, 43], "Q": [62, 63], "K": [39, 40], "R": null, "K'": [[27, 32], [28, 34]], "V'": [[30, 36], [31, 38]], "example": [22, 77]}, {"END": [131, 132], "A": [128, 129], "V": [98, 101], "Q": [120, 121], "K": [95, 96], "R": null, "K'": [[82, 89], [83, 91]], "V'": [[85, 93], [88, 94]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Margaret likes Incheon. Barbara likes Brisbane. John likes London. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a city of Australia? Answer: No\n Premise: < Margaret likes Incheon. Mark likes Bras\u00edlia. Jeff likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [41, 42], "Q": [61, 62], "K": [38, 39], "R": null, "K'": [[23, 30], [24, 31]], "V'": [[26, 33], [29, 37]], "example": [18, 74]}, {"END": [129, 130], "A": [126, 127], "V": [89, 91], "Q": [118, 119], "K": [86, 87], "R": null, "K'": [[79, 92], [80, 93]], "V'": [[82, 95], [85, 99]], "example": [75, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Margaret likes Incheon. Barbara likes Brisbane. John likes London. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a city of Australia? Answer: No\n Premise: < Margaret likes Incheon. Mark likes Bras\u00edlia. Jeff likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [41, 42], "Q": [61, 62], "K": [38, 39], "R": null, "K'": [[23, 30], [24, 31]], "V'": [[26, 33], [29, 37]], "example": [18, 74]}, {"END": [130, 131], "A": [126, 128], "V": [89, 91], "Q": [118, 119], "K": [86, 87], "R": null, "K'": [[79, 92], [80, 93]], "V'": [[82, 95], [85, 99]], "example": [75, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, the United Kingdom, Canada, South Korea and Australia.\nPremise: < Steven likes Seoul. Kevin likes Sydney. Betty likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of the United Kingdom? Answer: No\n Premise: < Kenneth likes Ottawa. Brian likes Tokyo. Donna likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [28, 30], "Q": [60, 61], "K": [25, 26], "R": null, "K'": [[31, 36], [32, 37]], "V'": [[34, 39], [35, 41]], "example": [20, 75]}, {"END": [127, 128], "A": [124, 125], "V": [89, 90], "Q": [116, 117], "K": [86, 87], "R": null, "K'": [[80, 91], [81, 93]], "V'": [[83, 95], [85, 97]], "example": [76, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, Australia and Canada.\nPremise: < Steven likes Seoul. Kevin likes Sydney. Betty likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of the United Kingdom? Answer: No\n Premise: < Kenneth likes Ottawa. Brian likes Tokyo. Donna likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [28, 30], "Q": [60, 61], "K": [25, 26], "R": null, "K'": [[31, 36], [32, 37]], "V'": [[34, 39], [35, 41]], "example": [20, 75]}, {"END": [128, 129], "A": [124, 126], "V": [89, 90], "Q": [116, 117], "K": [86, 87], "R": null, "K'": [[80, 91], [81, 93]], "V'": [[83, 95], [85, 97]], "example": [76, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Spain, Japan, the United States, Australia, Italy and South Korea.\nPremise: < Helen likes Seoul. Robert likes Los Angeles. James likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Robert wants to go to a city of the United States? Answer: Yes\n Premise: < Carol likes Madrid. Maria likes Tokyo. David likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that Carol wants to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [36, 38], "Q": [62, 63], "K": [33, 34], "R": null, "K'": [[27, 39], [28, 40]], "V'": [[30, 42], [32, 43]], "example": [22, 77]}, {"END": [128, 129], "A": [125, 126], "V": [85, 86], "Q": [117, 118], "K": [82, 83], "R": null, "K'": [[87, 92], [88, 93]], "V'": [[90, 95], [91, 98]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United States, Italy, Japan, Spain and South Korea.\nPremise: < Helen likes Seoul. Robert likes Los Angeles. James likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that Robert wants to go to a city of the United States? Answer: Yes\n Premise: < Carol likes Madrid. Maria likes Tokyo. David likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that Carol wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [36, 38], "Q": [62, 63], "K": [33, 34], "R": null, "K'": [[27, 39], [28, 40]], "V'": [[30, 42], [32, 43]], "example": [22, 77]}, {"END": [128, 129], "A": [125, 126], "V": [85, 86], "Q": [117, 118], "K": [82, 83], "R": null, "K'": [[87, 92], [88, 93]], "V'": [[90, 95], [91, 98]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Canada, Switzerland, India, Brazil and Thailand.\nPremise: < Daniel likes Bangkok. Michael likes Mumbai. Donna likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that Donna wants to go to a city of Switzerland? Answer: Yes\n Premise: < Donald likes Toronto. Christopher likes Bras\u00edlia. Kevin likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [43, 44], "Q": [63, 65], "K": [39, 41], "R": null, "K'": [[25, 32], [26, 33]], "V'": [[28, 35], [31, 38]], "example": [20, 77]}, {"END": [128, 129], "A": [125, 126], "V": [96, 98], "Q": [117, 118], "K": [93, 94], "R": null, "K'": [[82, 87], [83, 88]], "V'": [[85, 90], [86, 92]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Thailand, Brazil, India, Switzerland and Canada.\nPremise: < Daniel likes Bangkok. Michael likes Mumbai. Donna likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that Donna wants to go to a city of Switzerland? Answer: Yes\n Premise: < Donald likes Toronto. Christopher likes Bras\u00edlia. Kevin likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [43, 44], "Q": [63, 65], "K": [39, 41], "R": null, "K'": [[25, 32], [26, 33]], "V'": [[28, 35], [31, 38]], "example": [20, 77]}, {"END": [128, 129], "A": [125, 126], "V": [96, 98], "Q": [117, 118], "K": [93, 94], "R": null, "K'": [[82, 87], [83, 88]], "V'": [[85, 90], [86, 92]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, Thailand, Canada and Spain.\nPremise: < Linda likes Barcelona. Michael likes Bangkok. Paul likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a city of Spain? Answer: No\n Premise: < Deborah likes Toronto. John likes Valencia. Margaret likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [30, 33], "Q": [60, 61], "K": [27, 28], "R": null, "K'": [[21, 34], [23, 35]], "V'": [[25, 37], [26, 41]], "example": [16, 73]}, {"END": [128, 129], "A": [124, 126], "V": [94, 97], "Q": [116, 117], "K": [91, 92], "R": null, "K'": [[78, 85], [81, 86]], "V'": [[83, 88], [84, 90]], "example": [74, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Spain, Australia and Canada.\nPremise: < Linda likes Barcelona. Michael likes Bangkok. Paul likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a city of Spain? Answer: No\n Premise: < Deborah likes Toronto. John likes Valencia. Margaret likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a city of Canada? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [30, 33], "Q": [60, 61], "K": [27, 28], "R": null, "K'": [[21, 34], [23, 35]], "V'": [[25, 37], [26, 41]], "example": [16, 73]}, {"END": [127, 128], "A": [124, 125], "V": [94, 97], "Q": [116, 117], "K": [91, 92], "R": null, "K'": [[78, 85], [81, 86]], "V'": [[83, 88], [84, 90]], "example": [74, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, South Korea, Germany, Japan, Russia and the United Kingdom.\nPremise: < Maria likes Chiang Mai. George likes London. Carol likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a city of Thailand? Answer: No\n Premise: < Karen likes Berlin. John likes Novosibirsk. Barbara likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [38, 39], "Q": [64, 65], "K": [35, 36], "R": null, "K'": [[28, 40], [29, 41]], "V'": [[31, 43], [34, 45]], "example": [23, 78]}, {"END": [135, 136], "A": [132, 133], "V": [87, 88], "Q": [123, 125], "K": [83, 85], "R": null, "K'": [[89, 98], [90, 99]], "V'": [[92, 101], [97, 104]], "example": [79, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Japan, the United Kingdom, Germany, Thailand and South Korea.\nPremise: < Maria likes Chiang Mai. George likes London. Carol likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a city of Thailand? Answer: No\n Premise: < Karen likes Berlin. John likes Novosibirsk. Barbara likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a city of Russia? Answer: No\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [38, 39], "Q": [64, 65], "K": [35, 36], "R": null, "K'": [[28, 40], [29, 41]], "V'": [[31, 43], [34, 45]], "example": [23, 78]}, {"END": [135, 136], "A": [132, 133], "V": [87, 88], "Q": [123, 125], "K": [83, 85], "R": null, "K'": [[89, 98], [90, 99]], "V'": [[92, 101], [97, 104]], "example": [79, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Spain, Japan, Russia and the United Kingdom.\nPremise: < Robert likes London. Michelle likes Birmingham. Brian likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Spain? Answer: Yes\n Premise: < Dorothy likes Tokyo. Donald likes Kyoto. Edward likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Edward wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [37, 39], "Q": [58, 59], "K": [34, 35], "R": null, "K'": [[22, 27], [23, 29]], "V'": [[25, 31], [26, 33]], "example": [17, 71]}, {"END": [123, 124], "A": [120, 121], "V": [91, 93], "Q": [112, 113], "K": [88, 89], "R": null, "K'": [[76, 82], [78, 83]], "V'": [[80, 85], [81, 87]], "example": [72, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Russia, Japan and Spain.\nPremise: < Robert likes London. Michelle likes Birmingham. Brian likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Spain? Answer: Yes\n Premise: < Dorothy likes Tokyo. Donald likes Kyoto. Edward likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that Edward wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [37, 39], "Q": [58, 59], "K": [34, 35], "R": null, "K'": [[22, 27], [23, 29]], "V'": [[25, 31], [26, 33]], "example": [17, 71]}, {"END": [123, 124], "A": [120, 121], "V": [91, 93], "Q": [112, 113], "K": [88, 89], "R": null, "K'": [[76, 82], [78, 83]], "V'": [[80, 85], [81, 87]], "example": [72, 125]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Thailand, Italy, the United Kingdom, India and Spain.\n< London attracts David. Saint Petersburg attracts Sharon. Milan attracts Barbara. >. So Barbara wants to go to a city of Italy\n < New Delhi attracts Donna. Madrid attracts Michael. Bangkok attracts John. >. So John wants to go to a city of Thailand\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [35, 36], "Q": [43, 44], "K": [38, 39], "R": null, "K'": [[26, 32], [27, 34]], "V'": [[23, 28], [24, 30]], "example": [22, 52]}, {"END": [84, 85], "A": [85, 87], "V": [67, 70], "Q": [77, 78], "K": [72, 73], "R": null, "K'": [[59, 65], [61, 66]], "V'": [[54, 62], [57, 63]], "example": [53, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Canada, Spain and South Korea.\n< Incheon attracts Richard. Manchester attracts Brian. Venice attracts Sarah. >. So Richard wants to go to a city of South Korea\n < Madrid attracts Susan. London attracts Ronald. Vancouver attracts Dorothy. >. So Susan wants to go to a city of Spain\n", "ranges": [{"END": [49, 50], "A": [50, 52], "V": [21, 24], "Q": [42, 43], "K": [26, 27], "R": null, "K'": [[31, 37], [32, 38]], "V'": [[28, 33], [29, 35]], "example": [20, 52]}, {"END": [82, 83], "A": [83, 84], "V": [54, 55], "Q": [75, 76], "K": [57, 58], "R": null, "K'": [[62, 69], [64, 71]], "V'": [[59, 65], [60, 67]], "example": [53, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, South Korea, Brazil, Thailand and Australia.\n< Brisbane attracts Laura. Bangkok attracts Helen. Busan attracts Carol. >. So Carol wants to go to a city of South Korea\n < Bras\u00edlia attracts Edward. Busan attracts Jennifer. Bern attracts Christopher. >. So Christopher wants to go to a city of Switzerland\n", "ranges": [{"END": [51, 52], "A": [52, 54], "V": [35, 37], "Q": [44, 45], "K": [39, 40], "R": null, "K'": [[26, 33], [27, 34]], "V'": [[20, 28], [24, 31]], "example": [19, 54]}, {"END": [84, 85], "A": [85, 86], "V": [69, 70], "Q": [77, 78], "K": [72, 73], "R": null, "K'": [[60, 66], [61, 68]], "V'": [[56, 62], [58, 64]], "example": [55, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Ottawa attracts Kenneth. Tokyo attracts Brian. Seoul attracts Donna. >. So Brian wants to go to a city of Japan\n < Los Angeles attracts Jeff. Lyon attracts Patricia. New Delhi attracts Sarah. >. So Jeff wants to go to a city of the United States\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [29, 30], "Q": [44, 45], "K": [32, 33], "R": null, "K'": [[27, 38], [28, 40]], "V'": [[23, 34], [25, 36]], "example": [22, 53]}, {"END": [85, 86], "A": [86, 89], "V": [55, 57], "Q": [78, 79], "K": [59, 60], "R": null, "K'": [[64, 73], [67, 74]], "V'": [[61, 68], [62, 71]], "example": [54, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Shanghai attracts Anthony. Manchester attracts Brian. Zurich attracts Barbara. >. So Barbara wants to go to a city of Switzerland\n < Ottawa attracts Michael. Incheon attracts John. Geneva attracts Helen. >. So Michael wants to go to a city of Canada\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [32, 34], "Q": [41, 42], "K": [36, 37], "R": null, "K'": [[25, 30], [26, 31]], "V'": [[21, 27], [23, 28]], "example": [20, 50]}, {"END": [81, 82], "A": [82, 83], "V": [52, 54], "Q": [74, 75], "K": [56, 57], "R": null, "K'": [[63, 69], [64, 70]], "V'": [[58, 65], [61, 67]], "example": [51, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, France, Thailand, India and Switzerland.\n< Bangkok attracts Daniel. Mumbai attracts Michael. Bern attracts Donna. >. So Donna wants to go to a city of Switzerland\n < Paris attracts Kevin. Birmingham attracts Elizabeth. Lyon attracts Ronald. >. So Elizabeth wants to go to a city of the United Kingdom\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [35, 36], "Q": [44, 46], "K": [38, 40], "R": null, "K'": [[26, 33], [27, 34]], "V'": [[21, 28], [24, 31]], "example": [20, 54]}, {"END": [83, 84], "A": [84, 87], "V": [61, 63], "Q": [76, 77], "K": [65, 66], "R": null, "K'": [[59, 70], [60, 72]], "V'": [[56, 67], [57, 68]], "example": [55, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Australia, Spain and Japan.\n< Chiang Mai attracts Paul. Tokyo attracts Ruth. Barcelona attracts Richard. >. So Paul wants to go to a city of Thailand\n < Barcelona attracts Linda. Bangkok attracts Richard. Brisbane attracts Steven. >. So Richard wants to go to a city of Thailand\n", "ranges": [{"END": [44, 45], "A": [45, 47], "V": [17, 20], "Q": [37, 38], "K": [22, 23], "R": null, "K'": [[27, 32], [28, 33]], "V'": [[24, 29], [25, 30]], "example": [16, 47]}, {"END": [80, 81], "A": [81, 83], "V": [55, 58], "Q": [73, 74], "K": [60, 61], "R": null, "K'": [[52, 68], [54, 69]], "V'": [[49, 62], [50, 66]], "example": [48, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Australia, India, the United Kingdom, China and Japan.\n< Sydney attracts Jennifer. Munich attracts Steven. Beijing attracts Maria. >. So Jennifer wants to go to a city of Australia\n < London attracts Paul. New Delhi attracts Anthony. Kyoto attracts Kimberly. >. So Kimberly wants to go to a city of Japan\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [22, 23], "Q": [44, 46], "K": [25, 27], "R": null, "K'": [[32, 39], [33, 40]], "V'": [[28, 34], [30, 37]], "example": [21, 54]}, {"END": [88, 89], "A": [89, 90], "V": [68, 70], "Q": [79, 82], "K": [72, 75], "R": null, "K'": [[59, 66], [60, 67]], "V'": [[56, 61], [57, 64]], "example": [55, 90]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < London attracts David. Saint Petersburg attracts Sharon. Milan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Sarah. Madrid attracts Donna. Bangkok attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [39, 40], "Q": [62, 63], "K": [42, 43], "R": null, "K'": [[30, 36], [31, 38]], "V'": [[27, 32], [28, 34]], "example": [22, 77]}, {"END": [132, 133], "A": [128, 130], "V": [95, 98], "Q": [120, 121], "K": [100, 101], "R": null, "K'": [[87, 92], [88, 94]], "V'": [[82, 89], [85, 90]], "example": [78, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < London attracts David. Saint Petersburg attracts Sharon. Milan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Sarah. Madrid attracts Donna. Bangkok attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of Spain? Answer: No\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [39, 40], "Q": [62, 63], "K": [42, 43], "R": null, "K'": [[30, 36], [31, 38]], "V'": [[27, 32], [28, 34]], "example": [22, 77]}, {"END": [131, 132], "A": [128, 129], "V": [95, 98], "Q": [120, 121], "K": [100, 101], "R": null, "K'": [[87, 92], [88, 94]], "V'": [[82, 89], [85, 90]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Incheon attracts Margaret. Brisbane attracts Barbara. London attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Margaret. Bras\u00edlia attracts Mark. Brisbane attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [38, 39], "Q": [61, 62], "K": [41, 42], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[23, 30], [26, 34]], "example": [18, 74]}, {"END": [129, 130], "A": [126, 127], "V": [86, 88], "Q": [118, 119], "K": [90, 91], "R": null, "K'": [[84, 98], [85, 99]], "V'": [[79, 92], [82, 96]], "example": [75, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Incheon attracts Margaret. Brisbane attracts Barbara. London attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Margaret. Bras\u00edlia attracts Mark. Brisbane attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [38, 39], "Q": [61, 62], "K": [41, 42], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[23, 30], [26, 34]], "example": [18, 74]}, {"END": [130, 131], "A": [126, 128], "V": [86, 88], "Q": [118, 119], "K": [90, 91], "R": null, "K'": [[84, 98], [85, 99]], "V'": [[79, 92], [82, 96]], "example": [75, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, the United Kingdom, Canada, South Korea and Australia.\nPremise: < Seoul attracts Steven. Sydney attracts Kevin. Birmingham attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of the United Kingdom? Answer: No\n Premise: < Ottawa attracts Kenneth. Tokyo attracts Brian. Seoul attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [25, 27], "Q": [60, 61], "K": [29, 30], "R": null, "K'": [[34, 40], [35, 41]], "V'": [[31, 36], [32, 38]], "example": [20, 75]}, {"END": [127, 128], "A": [124, 125], "V": [86, 87], "Q": [116, 117], "K": [89, 90], "R": null, "K'": [[84, 95], [85, 97]], "V'": [[80, 91], [82, 93]], "example": [76, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, Australia and Canada.\nPremise: < Seoul attracts Steven. Sydney attracts Kevin. Birmingham attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a city of the United Kingdom? Answer: No\n Premise: < Ottawa attracts Kenneth. Tokyo attracts Brian. Seoul attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [25, 27], "Q": [60, 61], "K": [29, 30], "R": null, "K'": [[34, 40], [35, 41]], "V'": [[31, 36], [32, 38]], "example": [20, 75]}, {"END": [128, 129], "A": [124, 126], "V": [86, 87], "Q": [116, 117], "K": [89, 90], "R": null, "K'": [[84, 95], [85, 97]], "V'": [[80, 91], [82, 93]], "example": [76, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Spain, Japan, the United States, Australia, Italy and South Korea.\nPremise: < Seoul attracts Helen. Los Angeles attracts Robert. Milan attracts James. >. Answer with Yes or No. Can it be inferred from the premise that Robert wants to go to a city of the United States? Answer: Yes\n Premise: < Madrid attracts Carol. Tokyo attracts Maria. Canberra attracts David. >. Answer with Yes or No. Can it be inferred from the premise that Carol wants to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [33, 35], "Q": [62, 63], "K": [37, 38], "R": null, "K'": [[31, 42], [32, 43]], "V'": [[27, 39], [29, 40]], "example": [22, 77]}, {"END": [128, 129], "A": [125, 126], "V": [82, 83], "Q": [117, 118], "K": [85, 86], "R": null, "K'": [[90, 97], [91, 98]], "V'": [[87, 92], [88, 95]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United States, Italy, Japan, Spain and South Korea.\nPremise: < Seoul attracts Helen. Los Angeles attracts Robert. Milan attracts James. >. Answer with Yes or No. Can it be inferred from the premise that Robert wants to go to a city of the United States? Answer: Yes\n Premise: < Madrid attracts Carol. Tokyo attracts Maria. Canberra attracts David. >. Answer with Yes or No. Can it be inferred from the premise that Carol wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [75, 76], "A": [70, 73], "V": [33, 35], "Q": [62, 63], "K": [37, 38], "R": null, "K'": [[31, 42], [32, 43]], "V'": [[27, 39], [29, 40]], "example": [22, 77]}, {"END": [128, 129], "A": [125, 126], "V": [82, 83], "Q": [117, 118], "K": [85, 86], "R": null, "K'": [[90, 97], [91, 98]], "V'": [[87, 92], [88, 95]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Canada, Switzerland, India, Brazil and Thailand.\nPremise: < Bangkok attracts Daniel. Mumbai attracts Michael. Bern attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Donna wants to go to a city of Switzerland? Answer: Yes\n Premise: < Toronto attracts Donald. Bras\u00edlia attracts Christopher. Munich attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [39, 40], "Q": [63, 65], "K": [42, 44], "R": null, "K'": [[30, 37], [31, 38]], "V'": [[25, 32], [28, 35]], "example": [20, 77]}, {"END": [128, 129], "A": [125, 126], "V": [93, 95], "Q": [117, 118], "K": [97, 98], "R": null, "K'": [[85, 91], [86, 92]], "V'": [[82, 87], [83, 89]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Thailand, Brazil, India, Switzerland and Canada.\nPremise: < Bangkok attracts Daniel. Mumbai attracts Michael. Bern attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Donna wants to go to a city of Switzerland? Answer: Yes\n Premise: < Toronto attracts Donald. Bras\u00edlia attracts Christopher. Munich attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [39, 40], "Q": [63, 65], "K": [42, 44], "R": null, "K'": [[30, 37], [31, 38]], "V'": [[25, 32], [28, 35]], "example": [20, 77]}, {"END": [128, 129], "A": [125, 126], "V": [93, 95], "Q": [117, 118], "K": [97, 98], "R": null, "K'": [[85, 91], [86, 92]], "V'": [[82, 87], [83, 89]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, Thailand, Canada and Spain.\nPremise: < Barcelona attracts Linda. Bangkok attracts Michael. Brisbane attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a city of Spain? Answer: No\n Premise: < Toronto attracts Deborah. Valencia attracts John. Chiang Mai attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [27, 30], "Q": [60, 61], "K": [32, 33], "R": null, "K'": [[24, 40], [26, 41]], "V'": [[21, 34], [22, 38]], "example": [16, 73]}, {"END": [128, 129], "A": [124, 126], "V": [91, 94], "Q": [116, 117], "K": [96, 97], "R": null, "K'": [[81, 89], [84, 90]], "V'": [[78, 85], [79, 87]], "example": [74, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Spain, Australia and Canada.\nPremise: < Barcelona attracts Linda. Bangkok attracts Michael. Brisbane attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a city of Spain? Answer: No\n Premise: < Toronto attracts Deborah. Valencia attracts John. Chiang Mai attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a city of Canada? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [27, 30], "Q": [60, 61], "K": [32, 33], "R": null, "K'": [[24, 40], [26, 41]], "V'": [[21, 34], [22, 38]], "example": [16, 73]}, {"END": [127, 128], "A": [124, 125], "V": [91, 94], "Q": [116, 117], "K": [96, 97], "R": null, "K'": [[81, 89], [84, 90]], "V'": [[78, 85], [79, 87]], "example": [74, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, South Korea, Germany, Japan, Russia and the United Kingdom.\nPremise: < Chiang Mai attracts Maria. London attracts George. Osaka attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a city of Thailand? Answer: No\n Premise: < Berlin attracts Karen. Novosibirsk attracts John. Incheon attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [35, 36], "Q": [64, 65], "K": [38, 39], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[28, 40], [31, 42]], "example": [23, 78]}, {"END": [135, 136], "A": [132, 133], "V": [83, 84], "Q": [123, 125], "K": [86, 88], "R": null, "K'": [[96, 103], [97, 104]], "V'": [[89, 98], [94, 101]], "example": [79, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Japan, the United Kingdom, Germany, Thailand and South Korea.\nPremise: < Chiang Mai attracts Maria. London attracts George. Osaka attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a city of Thailand? Answer: No\n Premise: < Berlin attracts Karen. Novosibirsk attracts John. Incheon attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a city of Russia? Answer: No\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [35, 36], "Q": [64, 65], "K": [38, 39], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[28, 40], [31, 42]], "example": [23, 78]}, {"END": [135, 136], "A": [132, 133], "V": [83, 84], "Q": [123, 125], "K": [86, 88], "R": null, "K'": [[96, 103], [97, 104]], "V'": [[89, 98], [94, 101]], "example": [79, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Spain, Japan, Russia and the United Kingdom.\nPremise: < London attracts Robert. Birmingham attracts Michelle. Valencia attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Spain? Answer: Yes\n Premise: < Tokyo attracts Dorothy. Kyoto attracts Donald. Saint Petersburg attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Edward wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [34, 36], "Q": [58, 59], "K": [38, 39], "R": null, "K'": [[25, 31], [26, 33]], "V'": [[22, 27], [23, 29]], "example": [17, 71]}, {"END": [123, 124], "A": [120, 121], "V": [88, 90], "Q": [112, 113], "K": [92, 93], "R": null, "K'": [[79, 86], [81, 87]], "V'": [[76, 82], [77, 84]], "example": [72, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Russia, Japan and Spain.\nPremise: < London attracts Robert. Birmingham attracts Michelle. Valencia attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a city of Spain? Answer: Yes\n Premise: < Tokyo attracts Dorothy. Kyoto attracts Donald. Saint Petersburg attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Edward wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [34, 36], "Q": [58, 59], "K": [38, 39], "R": null, "K'": [[25, 31], [26, 33]], "V'": [[22, 27], [23, 29]], "example": [17, 71]}, {"END": [123, 124], "A": [120, 121], "V": [88, 90], "Q": [112, 113], "K": [92, 93], "R": null, "K'": [[79, 86], [81, 87]], "V'": [[76, 82], [77, 84]], "example": [72, 125]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Canada, Germany and India.\n< George likes Berlin. Barbara likes Vancouver. Barbara likes Birmingham. >. Barbara does not want to go to a city of Germany\n < Mary likes Rome. Christopher likes Ottawa. Christopher likes Bangalore. >. Christopher does not want to go to a city of Italy\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [23, 24], "Q": [39, 40], "K'": [20, 21], "R": [41, 42], "K": [[25, 31], [26, 32]], "V": [[28, 34], [30, 36]], "example": [19, 50]}, {"END": [81, 82], "A'": [82, 83], "V'": [55, 56], "Q": [72, 73], "K'": [52, 53], "R": [74, 75], "K": [[57, 63], [58, 64]], "V": [[60, 66], [62, 69]], "example": [51, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, India, Spain and Thailand.\n< Robert likes New Delhi. Sharon likes Milan. Sharon likes Chiang Mai. >. Sharon does not want to go to a city of India\n < Laura likes Pattaya. Laura likes Florence. George likes Valencia. >. Laura does not want to go to a city of Spain\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [20, 23], "Q": [40, 42], "K'": [17, 18], "R": [43, 44], "K": [[24, 30], [26, 32]], "V": [[28, 34], [29, 37]], "example": [16, 52]}, {"END": [83, 84], "A'": [84, 85], "V'": [69, 71], "Q": [74, 75], "K'": [66, 67], "R": [76, 77], "K": [[54, 61], [55, 62]], "V": [[57, 64], [60, 65]], "example": [53, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, South Korea, Canada, Thailand and Brazil.\n< Michelle likes Toronto. William likes Sao Paulo. Michelle likes Incheon. >. Michelle does not want to go to a city of Brazil\n < Laura likes Brisbane. Laura likes Bangkok. Brian likes Busan. >. Laura does not want to go to a city of South Korea\n", "ranges": [{"END": [53, 54], "A'": [54, 55], "V'": [29, 32], "Q": [43, 45], "K'": [26, 27], "R": [46, 47], "K": [[20, 33], [22, 35]], "V": [[24, 37], [25, 40]], "example": [19, 55]}, {"END": [89, 90], "A'": [90, 92], "V'": [75, 77], "Q": [80, 81], "K'": [72, 73], "R": [82, 83], "K": [[57, 65], [58, 66]], "V": [[60, 68], [64, 71]], "example": [56, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, South Korea, Brazil, Australia, the United Kingdom and Canada.\n< Elizabeth likes Seoul. Steven likes Sydney. Steven likes Birmingham. >. Steven does not want to go to a city of South Korea\n < Karen likes Bras\u00edlia. Karen likes Kyoto. Paul likes Vancouver. >. Karen does not want to go to a city of Canada\n", "ranges": [{"END": [51, 52], "A'": [52, 54], "V'": [26, 28], "Q": [42, 43], "K'": [23, 24], "R": [44, 45], "K": [[29, 34], [30, 35]], "V": [[32, 37], [33, 39]], "example": [22, 54]}, {"END": [88, 89], "A'": [89, 90], "V'": [73, 75], "Q": [78, 80], "K'": [70, 71], "R": [81, 82], "K": [[56, 63], [58, 65]], "V": [[60, 67], [62, 69]], "example": [55, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include France, the United States, India, Brazil and Germany.\n< James likes Los Angeles. Linda likes Lyon. Linda likes New Delhi. >. Linda does not want to go to a city of the United States\n < Robert likes Los Angeles. Sarah likes Munich. Robert likes Sao Paulo. >. Robert does not want to go to a city of Germany\n", "ranges": [{"END": [52, 53], "A'": [53, 56], "V'": [23, 25], "Q": [42, 44], "K'": [20, 21], "R": [45, 46], "K": [[26, 32], [28, 34]], "V": [[30, 36], [31, 39]], "example": [19, 56]}, {"END": [88, 89], "A'": [89, 90], "V'": [67, 69], "Q": [79, 80], "K'": [64, 65], "R": [81, 82], "K": [[58, 70], [59, 71]], "V": [[61, 73], [63, 76]], "example": [57, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, Australia, Thailand, Switzerland, Canada and Italy.\n< Sandra likes Rome. David likes Canberra. David likes Bangkok. >. David does not want to go to a city of Italy\n < Deborah likes Vancouver. Ronald likes Geneva. Ronald likes Mumbai. >. Ronald does not want to go to a city of Canada\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [25, 26], "Q": [43, 44], "K'": [21, 23], "R": [45, 46], "K": [[27, 34], [28, 35]], "V": [[30, 37], [33, 40]], "example": [20, 54]}, {"END": [91, 92], "A'": [92, 93], "V'": [61, 63], "Q": [81, 83], "K'": [56, 59], "R": [84, 85], "K": [[64, 71], [66, 73]], "V": [[68, 75], [70, 78]], "example": [55, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include China, the United Kingdom, Germany, Japan and Italy.\n< Donna likes Berlin. Donna likes Shanghai. Kevin likes Rome. >. Donna does not want to go to a city of Italy\n < William likes London. Elizabeth likes Venice. Elizabeth likes Osaka. >. Elizabeth does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [36, 37], "Q": [40, 42], "K'": [33, 34], "R": [43, 44], "K": [[20, 26], [22, 28]], "V": [[24, 30], [25, 32]], "example": [19, 52]}, {"END": [82, 83], "A'": [83, 86], "V'": [57, 58], "Q": [73, 74], "K'": [54, 55], "R": [75, 76], "K": [[59, 65], [60, 66]], "V": [[62, 68], [64, 70]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Germany, Australia, the United States and India.\n< Paul likes Munich. Sandra likes Chiang Mai. Paul likes Hamburg. >. Paul does not want to go to a city of Thailand\n < George likes New Delhi. Karen likes Washington, D.C. George likes Canberra. >. George does not want to go to a city of the United States\n", "ranges": [{"END": [51, 52], "A'": [52, 54], "V'": [31, 34], "Q": [42, 43], "K'": [27, 29], "R": [44, 45], "K": [[21, 35], [22, 36]], "V": [[24, 38], [26, 39]], "example": [20, 54]}, {"END": [91, 92], "A'": [92, 95], "V'": [67, 72], "Q": [82, 83], "K'": [63, 65], "R": [84, 85], "K": [[56, 73], [57, 74]], "V": [[59, 76], [62, 79]], "example": [55, 95]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Australia, Canada, Germany, China and Russia.\nPremise: < George likes Berlin. Barbara likes Vancouver. Barbara likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a city of Germany? Answer: Yes\n Premise: < Lisa likes Guangzhou. David likes Novosibirsk. David likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a city of China? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [29, 30], "Q": [61, 62], "K'": [26, 27], "R": [63, 64], "K": [[31, 37], [32, 38]], "V": [[34, 40], [36, 42]], "example": [21, 76]}, {"END": [136, 137], "A'": [133, 134], "V'": [84, 88], "Q": [123, 124], "K'": [81, 82], "R": [125, 126], "K": [[89, 98], [90, 99]], "V": [[92, 101], [97, 104]], "example": [77, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, the United Kingdom, Russia, China, Canada and Australia.\nPremise: < George likes Berlin. Barbara likes Vancouver. Barbara likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a city of Germany? Answer: Yes\n Premise: < Lisa likes Guangzhou. David likes Novosibirsk. David likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [29, 30], "Q": [61, 62], "K'": [26, 27], "R": [63, 64], "K": [[31, 37], [32, 38]], "V": [[34, 40], [36, 42]], "example": [21, 76]}, {"END": [136, 137], "A'": [133, 134], "V'": [84, 88], "Q": [123, 124], "K'": [81, 82], "R": [125, 126], "K": [[89, 98], [90, 99]], "V": [[92, 101], [97, 104]], "example": [77, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, Brazil, India, France, Spain and Australia.\nPremise: < Dorothy likes Sao Paulo. Kevin likes New Delhi. Dorothy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to a city of India? Answer: Yes\n Premise: < Betty likes Brisbane. Betty likes Madrid. Daniel likes Rome. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a city of Italy? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [35, 38], "Q": [63, 65], "K'": [32, 33], "R": [66, 67], "K": [[24, 39], [26, 41]], "V": [[28, 43], [31, 44]], "example": [19, 79]}, {"END": [133, 134], "A'": [130, 131], "V'": [100, 101], "Q": [120, 121], "K'": [97, 98], "R": [122, 123], "K": [[84, 92], [85, 93]], "V": [[87, 95], [91, 96]], "example": [80, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include France, Spain, India, Italy, Australia and Brazil.\nPremise: < Dorothy likes Sao Paulo. Kevin likes New Delhi. Dorothy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to a city of India? Answer: Yes\n Premise: < Betty likes Brisbane. Betty likes Madrid. Daniel likes Rome. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [35, 38], "Q": [63, 65], "K'": [32, 33], "R": [66, 67], "K": [[24, 39], [26, 41]], "V": [[28, 43], [31, 44]], "example": [19, 79]}, {"END": [133, 134], "A'": [130, 131], "V'": [100, 101], "Q": [120, 121], "K'": [97, 98], "R": [122, 123], "K": [[84, 92], [85, 93]], "V": [[87, 95], [91, 96]], "example": [80, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, Germany and India.\nPremise: < Jennifer likes Berlin. Kevin likes Toronto. Kevin likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not want to go to a city of Germany? Answer: Yes\n Premise: < Kevin likes Ottawa. Margaret likes Mumbai. Margaret likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [22, 23], "Q": [54, 55], "K'": [18, 20], "R": [56, 57], "K": [[24, 29], [25, 30]], "V": [[27, 32], [28, 35]], "example": [13, 69]}, {"END": [125, 126], "A'": [122, 123], "V'": [77, 79], "Q": [112, 113], "K'": [74, 75], "R": [114, 115], "K": [[80, 87], [81, 88]], "V": [[83, 90], [86, 93]], "example": [70, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, Germany and Canada.\nPremise: < Jennifer likes Berlin. Kevin likes Toronto. Kevin likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not want to go to a city of Germany? Answer: Yes\n Premise: < Kevin likes Ottawa. Margaret likes Mumbai. Margaret likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of India? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [22, 23], "Q": [54, 55], "K'": [18, 20], "R": [56, 57], "K": [[24, 29], [25, 30]], "V": [[27, 32], [28, 35]], "example": [13, 69]}, {"END": [125, 126], "A'": [122, 123], "V'": [77, 79], "Q": [112, 113], "K'": [74, 75], "R": [114, 115], "K": [[80, 87], [81, 88]], "V": [[83, 90], [86, 93]], "example": [70, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include South Korea, Brazil, Australia and Switzerland.\nPremise: < Christopher likes Incheon. Carol likes Sydney. Carol likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Carol does not want to go to a city of South Korea? Answer: Yes\n Premise: < Laura likes Seoul. Daniel likes Sydney. Daniel likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not want to go to a city of South Korea? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [24, 27], "Q": [58, 59], "K'": [21, 22], "R": [60, 61], "K": [[28, 33], [29, 34]], "V": [[31, 36], [32, 39]], "example": [16, 74]}, {"END": [128, 129], "A'": [124, 126], "V'": [82, 84], "Q": [114, 115], "K'": [79, 80], "R": [116, 117], "K": [[85, 90], [86, 91]], "V": [[88, 93], [89, 95]], "example": [75, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Brazil, Australia, South Korea and Switzerland.\nPremise: < Christopher likes Incheon. Carol likes Sydney. Carol likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Carol does not want to go to a city of South Korea? Answer: Yes\n Premise: < Laura likes Seoul. Daniel likes Sydney. Daniel likes Zurich. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not want to go to a city of Australia? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [24, 27], "Q": [58, 59], "K'": [21, 22], "R": [60, 61], "K": [[28, 33], [29, 34]], "V": [[31, 36], [32, 39]], "example": [16, 74]}, {"END": [127, 128], "A'": [124, 125], "V'": [82, 84], "Q": [114, 115], "K'": [79, 80], "R": [116, 117], "K": [[85, 90], [86, 91]], "V": [[88, 93], [89, 95]], "example": [75, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Brazil, Russia, Spain, Italy and France.\nPremise: < Michael likes Bras\u00edlia. Ruth likes Moscow. Michael likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Russia? Answer: Yes\n Premise: < Jason likes Lyon. Donna likes Milan. Donna likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [35, 36], "Q": [61, 62], "K'": [32, 33], "R": [63, 64], "K": [[26, 37], [27, 38]], "V": [[29, 40], [31, 42]], "example": [21, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [84, 85], "Q": [116, 118], "K'": [81, 82], "R": [119, 120], "K": [[86, 92], [88, 94]], "V": [[90, 96], [91, 97]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Spain, Brazil, Russia, Italy, the United Kingdom and France.\nPremise: < Michael likes Bras\u00edlia. Ruth likes Moscow. Michael likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Russia? Answer: Yes\n Premise: < Jason likes Lyon. Donna likes Milan. Donna likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not want to go to a city of Italy? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [35, 36], "Q": [61, 62], "K'": [32, 33], "R": [63, 64], "K": [[26, 37], [27, 38]], "V": [[29, 40], [31, 42]], "example": [21, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [84, 85], "Q": [116, 118], "K'": [81, 82], "R": [119, 120], "K": [[86, 92], [88, 94]], "V": [[90, 96], [91, 97]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Spain, Russia, Germany and Brazil.\nPremise: < Margaret likes Moscow. Ronald likes Birmingham. Ronald likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a city of Russia? Answer: Yes\n Premise: < Richard likes Barcelona. Richard likes Hamburg. Sandra likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [27, 28], "Q": [61, 63], "K'": [24, 25], "R": [64, 65], "K": [[29, 36], [31, 38]], "V": [[33, 40], [35, 42]], "example": [19, 77]}, {"END": [131, 132], "A'": [128, 129], "V'": [96, 99], "Q": [118, 119], "K'": [92, 94], "R": [120, 121], "K": [[82, 87], [83, 88]], "V": [[85, 90], [86, 91]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Russia, Germany, Spain and Brazil.\nPremise: < Margaret likes Moscow. Ronald likes Birmingham. Ronald likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a city of Russia? Answer: Yes\n Premise: < Richard likes Barcelona. Richard likes Hamburg. Sandra likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to a city of Germany? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [27, 28], "Q": [61, 63], "K'": [24, 25], "R": [64, 65], "K": [[29, 36], [31, 38]], "V": [[33, 40], [35, 42]], "example": [19, 77]}, {"END": [131, 132], "A'": [128, 129], "V'": [96, 99], "Q": [118, 119], "K'": [92, 94], "R": [120, 121], "K": [[82, 87], [83, 88]], "V": [[85, 90], [86, 91]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Brazil, Spain, South Korea, Russia and Italy.\nPremise: < Margaret likes Sao Paulo. Mark likes Milan. Margaret likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Italy? Answer: Yes\n Premise: < Jeff likes Saint Petersburg. Jeff likes Munich. Mary likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a city of South Korea? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [35, 36], "Q": [61, 62], "K'": [32, 33], "R": [63, 64], "K": [[25, 37], [26, 38]], "V": [[28, 40], [31, 42]], "example": [20, 76]}, {"END": [131, 132], "A'": [127, 129], "V'": [96, 98], "Q": [117, 118], "K'": [93, 94], "R": [119, 120], "K": [[81, 87], [82, 88]], "V": [[84, 90], [86, 92]], "example": [77, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, Brazil, Germany, Russia, Spain and South Korea.\nPremise: < Margaret likes Sao Paulo. Mark likes Milan. Margaret likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Italy? Answer: Yes\n Premise: < Jeff likes Saint Petersburg. Jeff likes Munich. Mary likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [35, 36], "Q": [61, 62], "K'": [32, 33], "R": [63, 64], "K": [[25, 37], [26, 38]], "V": [[28, 40], [31, 42]], "example": [20, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [96, 98], "Q": [117, 118], "K'": [93, 94], "R": [119, 120], "K": [[81, 87], [82, 88]], "V": [[84, 90], [86, 92]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, South Korea, Japan, France and Spain.\nPremise: < Ruth likes Kyoto. Daniel likes Rome. Ruth likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to a city of Italy? Answer: Yes\n Premise: < Michael likes Lyon. Donna likes Barcelona. Michael likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [32, 33], "Q": [58, 59], "K'": [29, 30], "R": [60, 61], "K": [[23, 34], [24, 35]], "V": [[26, 37], [28, 39]], "example": [18, 73]}, {"END": [126, 127], "A'": [123, 124], "V'": [87, 88], "Q": [113, 114], "K'": [83, 85], "R": [115, 116], "K": [[78, 89], [79, 90]], "V": [[81, 92], [82, 94]], "example": [74, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include France, South Korea, Spain, Japan and Italy.\nPremise: < Ruth likes Kyoto. Daniel likes Rome. Ruth likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to a city of Italy? Answer: Yes\n Premise: < Michael likes Lyon. Donna likes Barcelona. Michael likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of France? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [32, 33], "Q": [58, 59], "K'": [29, 30], "R": [60, 61], "K": [[23, 34], [24, 35]], "V": [[26, 37], [28, 39]], "example": [18, 73]}, {"END": [126, 127], "A'": [123, 124], "V'": [87, 88], "Q": [113, 114], "K'": [83, 85], "R": [115, 116], "K": [[78, 89], [79, 90]], "V": [[81, 92], [82, 94]], "example": [74, 128]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Canada, Germany and India.\n< Berlin attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Barbara does not want to go to a city of Germany\n < Rome attracts Mary. Ottawa attracts Christopher. Bangalore attracts Christopher. >. Christopher does not want to go to a city of Italy\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [20, 21], "Q": [39, 40], "K'": [23, 24], "R": [41, 42], "K": [[29, 35], [30, 36]], "V": [[25, 31], [27, 33]], "example": [19, 50]}, {"END": [81, 82], "A'": [82, 83], "V'": [52, 53], "Q": [72, 73], "K'": [55, 56], "R": [74, 75], "K": [[61, 68], [62, 69]], "V": [[57, 63], [59, 66]], "example": [51, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, India, Spain and Thailand.\n< New Delhi attracts Robert. Milan attracts Sharon. Chiang Mai attracts Sharon. >. Sharon does not want to go to a city of India\n < Pattaya attracts Laura. Florence attracts Laura. Valencia attracts George. >. Laura does not want to go to a city of Spain\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [17, 20], "Q": [40, 42], "K'": [22, 23], "R": [43, 44], "K": [[27, 35], [29, 37]], "V": [[24, 30], [25, 33]], "example": [16, 52]}, {"END": [83, 84], "A'": [84, 85], "V'": [66, 68], "Q": [74, 75], "K'": [70, 71], "R": [76, 77], "K": [[59, 64], [60, 65]], "V": [[54, 61], [57, 62]], "example": [53, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, South Korea, Canada, Thailand and Brazil.\n< Toronto attracts Michelle. Sao Paulo attracts William. Incheon attracts Michelle. >. Michelle does not want to go to a city of Brazil\n < Brisbane attracts Laura. Bangkok attracts Laura. Busan attracts Brian. >. Laura does not want to go to a city of South Korea\n", "ranges": [{"END": [53, 54], "A'": [54, 55], "V'": [26, 29], "Q": [43, 45], "K'": [31, 32], "R": [46, 47], "K": [[23, 38], [25, 40]], "V": [[20, 33], [21, 36]], "example": [19, 55]}, {"END": [89, 90], "A'": [90, 92], "V'": [72, 74], "Q": [80, 81], "K'": [76, 77], "R": [82, 83], "K": [[63, 70], [64, 71]], "V": [[57, 65], [61, 68]], "example": [56, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, South Korea, Brazil, Australia, the United Kingdom and Canada.\n< Seoul attracts Elizabeth. Sydney attracts Steven. Birmingham attracts Steven. >. Steven does not want to go to a city of South Korea\n < Bras\u00edlia attracts Karen. Kyoto attracts Karen. Vancouver attracts Paul. >. Karen does not want to go to a city of Canada\n", "ranges": [{"END": [51, 52], "A'": [52, 54], "V'": [23, 25], "Q": [42, 43], "K'": [27, 28], "R": [44, 45], "K": [[32, 38], [33, 39]], "V": [[29, 34], [30, 36]], "example": [22, 54]}, {"END": [88, 89], "A'": [89, 90], "V'": [70, 72], "Q": [78, 80], "K'": [74, 75], "R": [81, 82], "K": [[60, 67], [62, 69]], "V": [[56, 63], [58, 65]], "example": [55, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include France, the United States, India, Brazil and Germany.\n< Los Angeles attracts James. Lyon attracts Linda. New Delhi attracts Linda. >. Linda does not want to go to a city of the United States\n < Los Angeles attracts Robert. Munich attracts Sarah. Sao Paulo attracts Robert. >. Robert does not want to go to a city of Germany\n", "ranges": [{"END": [52, 53], "A'": [53, 56], "V'": [20, 22], "Q": [42, 44], "K'": [24, 25], "R": [45, 46], "K": [[29, 37], [31, 39]], "V": [[26, 32], [27, 35]], "example": [19, 56]}, {"END": [88, 89], "A'": [89, 90], "V'": [64, 66], "Q": [79, 80], "K'": [68, 69], "R": [81, 82], "K": [[62, 75], [63, 76]], "V": [[58, 70], [60, 73]], "example": [57, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, Australia, Thailand, Switzerland, Canada and Italy.\n< Rome attracts Sandra. Canberra attracts David. Bangkok attracts David. >. David does not want to go to a city of Italy\n < Vancouver attracts Deborah. Geneva attracts Ronald. Mumbai attracts Ronald. >. Ronald does not want to go to a city of Canada\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [21, 22], "Q": [43, 44], "K'": [24, 26], "R": [45, 46], "K": [[32, 39], [33, 40]], "V": [[27, 34], [30, 37]], "example": [20, 54]}, {"END": [91, 92], "A'": [92, 93], "V'": [56, 58], "Q": [81, 83], "K'": [60, 63], "R": [84, 85], "K": [[68, 76], [70, 78]], "V": [[64, 71], [66, 74]], "example": [55, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include China, the United Kingdom, Germany, Japan and Italy.\n< Berlin attracts Donna. Shanghai attracts Donna. Rome attracts Kevin. >. Donna does not want to go to a city of Italy\n < London attracts William. Venice attracts Elizabeth. Osaka attracts Elizabeth. >. Elizabeth does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [33, 34], "Q": [40, 42], "K'": [36, 37], "R": [43, 44], "K": [[23, 30], [25, 32]], "V": [[20, 26], [21, 28]], "example": [19, 52]}, {"END": [82, 83], "A'": [83, 86], "V'": [54, 55], "Q": [73, 74], "K'": [57, 58], "R": [75, 76], "K": [[63, 69], [64, 70]], "V": [[59, 65], [61, 67]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Germany, Australia, the United States and India.\n< Munich attracts Paul. Chiang Mai attracts Sandra. Hamburg attracts Paul. >. Paul does not want to go to a city of Thailand\n < New Delhi attracts George. Washington, D.C attracts Karen. Canberra attracts George. >. George does not want to go to a city of the United States\n", "ranges": [{"END": [51, 52], "A'": [52, 54], "V'": [27, 30], "Q": [42, 43], "K'": [32, 34], "R": [44, 45], "K": [[25, 38], [26, 39]], "V": [[21, 35], [23, 36]], "example": [20, 54]}, {"END": [91, 92], "A'": [92, 95], "V'": [63, 68], "Q": [82, 83], "K'": [70, 72], "R": [84, 85], "K": [[61, 78], [62, 79]], "V": [[56, 73], [59, 76]], "example": [55, 95]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Australia, Canada, Germany, China and Russia.\nPremise: < Berlin attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a city of Germany? Answer: Yes\n Premise: < Guangzhou attracts Lisa. Novosibirsk attracts David. Canberra attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a city of China? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [26, 27], "Q": [61, 62], "K'": [29, 30], "R": [63, 64], "K": [[35, 41], [36, 42]], "V": [[31, 37], [33, 39]], "example": [21, 76]}, {"END": [136, 137], "A'": [133, 134], "V'": [81, 85], "Q": [123, 124], "K'": [87, 88], "R": [125, 126], "K": [[96, 103], [97, 104]], "V": [[89, 98], [94, 101]], "example": [77, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, the United Kingdom, Russia, China, Canada and Australia.\nPremise: < Berlin attracts George. Vancouver attracts Barbara. Birmingham attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a city of Germany? Answer: Yes\n Premise: < Guangzhou attracts Lisa. Novosibirsk attracts David. Canberra attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [26, 27], "Q": [61, 62], "K'": [29, 30], "R": [63, 64], "K": [[35, 41], [36, 42]], "V": [[31, 37], [33, 39]], "example": [21, 76]}, {"END": [136, 137], "A'": [133, 134], "V'": [81, 85], "Q": [123, 124], "K'": [87, 88], "R": [125, 126], "K": [[96, 103], [97, 104]], "V": [[89, 98], [94, 101]], "example": [77, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, Brazil, India, France, Spain and Australia.\nPremise: < Sao Paulo attracts Dorothy. New Delhi attracts Kevin. Paris attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to a city of India? Answer: Yes\n Premise: < Brisbane attracts Betty. Madrid attracts Betty. Rome attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a city of Italy? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [32, 35], "Q": [63, 65], "K'": [37, 38], "R": [66, 67], "K": [[29, 42], [31, 44]], "V": [[24, 39], [27, 40]], "example": [19, 79]}, {"END": [133, 134], "A'": [130, 131], "V'": [97, 98], "Q": [120, 121], "K'": [100, 101], "R": [122, 123], "K": [[90, 95], [91, 96]], "V": [[84, 92], [88, 93]], "example": [80, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include France, Spain, India, Italy, Australia and Brazil.\nPremise: < Sao Paulo attracts Dorothy. New Delhi attracts Kevin. Paris attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to a city of India? Answer: Yes\n Premise: < Brisbane attracts Betty. Madrid attracts Betty. Rome attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [32, 35], "Q": [63, 65], "K'": [37, 38], "R": [66, 67], "K": [[29, 42], [31, 44]], "V": [[24, 39], [27, 40]], "example": [19, 79]}, {"END": [133, 134], "A'": [130, 131], "V'": [97, 98], "Q": [120, 121], "K'": [100, 101], "R": [122, 123], "K": [[90, 95], [91, 96]], "V": [[84, 92], [88, 93]], "example": [80, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, Germany and India.\nPremise: < Berlin attracts Jennifer. Toronto attracts Kevin. Bangalore attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not want to go to a city of Germany? Answer: Yes\n Premise: < Ottawa attracts Kevin. Mumbai attracts Margaret. New Delhi attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [18, 19], "Q": [54, 55], "K'": [21, 23], "R": [56, 57], "K": [[27, 34], [28, 35]], "V": [[24, 29], [25, 32]], "example": [13, 69]}, {"END": [125, 126], "A'": [122, 123], "V'": [74, 76], "Q": [112, 113], "K'": [78, 79], "R": [114, 115], "K": [[85, 92], [86, 93]], "V": [[80, 87], [83, 90]], "example": [70, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, Germany and Canada.\nPremise: < Berlin attracts Jennifer. Toronto attracts Kevin. Bangalore attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not want to go to a city of Germany? Answer: Yes\n Premise: < Ottawa attracts Kevin. Mumbai attracts Margaret. New Delhi attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of India? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [18, 19], "Q": [54, 55], "K'": [21, 23], "R": [56, 57], "K": [[27, 34], [28, 35]], "V": [[24, 29], [25, 32]], "example": [13, 69]}, {"END": [125, 126], "A'": [122, 123], "V'": [74, 76], "Q": [112, 113], "K'": [78, 79], "R": [114, 115], "K": [[85, 92], [86, 93]], "V": [[80, 87], [83, 90]], "example": [70, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include South Korea, Brazil, Australia and Switzerland.\nPremise: < Incheon attracts Christopher. Sydney attracts Carol. Sao Paulo attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that Carol does not want to go to a city of South Korea? Answer: Yes\n Premise: < Seoul attracts Laura. Sydney attracts Daniel. Zurich attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not want to go to a city of South Korea? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [21, 24], "Q": [58, 59], "K'": [26, 27], "R": [60, 61], "K": [[31, 38], [32, 39]], "V": [[28, 33], [29, 36]], "example": [16, 74]}, {"END": [128, 129], "A'": [124, 126], "V'": [79, 81], "Q": [114, 115], "K'": [83, 84], "R": [116, 117], "K": [[88, 94], [89, 95]], "V": [[85, 90], [86, 92]], "example": [75, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Brazil, Australia, South Korea and Switzerland.\nPremise: < Incheon attracts Christopher. Sydney attracts Carol. Sao Paulo attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that Carol does not want to go to a city of South Korea? Answer: Yes\n Premise: < Seoul attracts Laura. Sydney attracts Daniel. Zurich attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not want to go to a city of Australia? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [21, 24], "Q": [58, 59], "K'": [26, 27], "R": [60, 61], "K": [[31, 38], [32, 39]], "V": [[28, 33], [29, 36]], "example": [16, 74]}, {"END": [127, 128], "A'": [124, 125], "V'": [79, 81], "Q": [114, 115], "K'": [83, 84], "R": [116, 117], "K": [[88, 94], [89, 95]], "V": [[85, 90], [86, 92]], "example": [75, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Brazil, Russia, Spain, Italy and France.\nPremise: < Bras\u00edlia attracts Michael. Moscow attracts Ruth. Birmingham attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Russia? Answer: Yes\n Premise: < Lyon attracts Jason. Milan attracts Donna. Madrid attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [32, 33], "Q": [61, 62], "K'": [35, 36], "R": [63, 64], "K": [[30, 41], [31, 42]], "V": [[26, 37], [28, 39]], "example": [21, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [81, 82], "Q": [116, 118], "K'": [84, 85], "R": [119, 120], "K": [[89, 95], [91, 97]], "V": [[86, 92], [87, 93]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Spain, Brazil, Russia, Italy, the United Kingdom and France.\nPremise: < Bras\u00edlia attracts Michael. Moscow attracts Ruth. Birmingham attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Russia? Answer: Yes\n Premise: < Lyon attracts Jason. Milan attracts Donna. Madrid attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not want to go to a city of Italy? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [32, 33], "Q": [61, 62], "K'": [35, 36], "R": [63, 64], "K": [[30, 41], [31, 42]], "V": [[26, 37], [28, 39]], "example": [21, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [81, 82], "Q": [116, 118], "K'": [84, 85], "R": [119, 120], "K": [[89, 95], [91, 97]], "V": [[86, 92], [87, 93]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Spain, Russia, Germany and Brazil.\nPremise: < Moscow attracts Margaret. Birmingham attracts Ronald. Bras\u00edlia attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a city of Russia? Answer: Yes\n Premise: < Barcelona attracts Richard. Hamburg attracts Richard. Sao Paulo attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [24, 25], "Q": [61, 63], "K'": [27, 28], "R": [64, 65], "K": [[33, 40], [35, 42]], "V": [[29, 36], [31, 38]], "example": [19, 77]}, {"END": [131, 132], "A'": [128, 129], "V'": [92, 95], "Q": [118, 119], "K'": [97, 99], "R": [120, 121], "K": [[85, 90], [86, 91]], "V": [[82, 87], [83, 88]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Russia, Germany, Spain and Brazil.\nPremise: < Moscow attracts Margaret. Birmingham attracts Ronald. Bras\u00edlia attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a city of Russia? Answer: Yes\n Premise: < Barcelona attracts Richard. Hamburg attracts Richard. Sao Paulo attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to a city of Germany? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [24, 25], "Q": [61, 63], "K'": [27, 28], "R": [64, 65], "K": [[33, 40], [35, 42]], "V": [[29, 36], [31, 38]], "example": [19, 77]}, {"END": [131, 132], "A'": [128, 129], "V'": [92, 95], "Q": [118, 119], "K'": [97, 99], "R": [120, 121], "K": [[85, 90], [86, 91]], "V": [[82, 87], [83, 88]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Brazil, Spain, South Korea, Russia and Italy.\nPremise: < Sao Paulo attracts Margaret. Milan attracts Mark. Valencia attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Italy? Answer: Yes\n Premise: < Saint Petersburg attracts Jeff. Munich attracts Jeff. Busan attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a city of South Korea? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [32, 33], "Q": [61, 62], "K'": [35, 36], "R": [63, 64], "K": [[30, 41], [31, 42]], "V": [[25, 37], [28, 39]], "example": [20, 76]}, {"END": [131, 132], "A'": [127, 129], "V'": [93, 95], "Q": [117, 118], "K'": [97, 98], "R": [119, 120], "K": [[85, 91], [86, 92]], "V": [[81, 87], [83, 89]], "example": [77, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, Brazil, Germany, Russia, Spain and South Korea.\nPremise: < Sao Paulo attracts Margaret. Milan attracts Mark. Valencia attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a city of Italy? Answer: Yes\n Premise: < Saint Petersburg attracts Jeff. Munich attracts Jeff. Busan attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [32, 33], "Q": [61, 62], "K'": [35, 36], "R": [63, 64], "K": [[30, 41], [31, 42]], "V": [[25, 37], [28, 39]], "example": [20, 76]}, {"END": [130, 131], "A'": [127, 128], "V'": [93, 95], "Q": [117, 118], "K'": [97, 98], "R": [119, 120], "K": [[85, 91], [86, 92]], "V": [[81, 87], [83, 89]], "example": [77, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, South Korea, Japan, France and Spain.\nPremise: < Kyoto attracts Ruth. Rome attracts Daniel. Seoul attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to a city of Italy? Answer: Yes\n Premise: < Lyon attracts Michael. Barcelona attracts Donna. Osaka attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [29, 30], "Q": [58, 59], "K'": [32, 33], "R": [60, 61], "K": [[27, 38], [28, 39]], "V": [[23, 34], [25, 36]], "example": [18, 73]}, {"END": [126, 127], "A'": [123, 124], "V'": [83, 84], "Q": [113, 114], "K'": [86, 88], "R": [115, 116], "K": [[81, 93], [82, 94]], "V": [[78, 89], [79, 91]], "example": [74, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include France, South Korea, Spain, Japan and Italy.\nPremise: < Kyoto attracts Ruth. Rome attracts Daniel. Seoul attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to a city of Italy? Answer: Yes\n Premise: < Lyon attracts Michael. Barcelona attracts Donna. Osaka attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to a city of France? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [29, 30], "Q": [58, 59], "K'": [32, 33], "R": [60, 61], "K": [[27, 38], [28, 39]], "V": [[23, 34], [25, 36]], "example": [18, 73]}, {"END": [126, 127], "A'": [123, 124], "V'": [83, 84], "Q": [113, 114], "K'": [86, 88], "R": [115, 116], "K": [[81, 93], [82, 94]], "V": [[78, 89], [79, 91]], "example": [74, 128]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth likes Lyon. Sharon likes Paris. Helen likes Washington, D.C. >. So who wants to go to a city of the United States? Helen\n < Sandra likes Sao Paulo. Kevin likes Brisbane. Elizabeth likes London. >. So who wants to go to a city of the United Kingdom? Elizabeth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [13, 14], "Q": [33, 36], "K": [16, 21], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[2, 7], [3, 9]], "example": [1, 38]}, {"END": [75, 76], "A": [76, 77], "V": [56, 57], "Q": [72, 75], "K": [59, 60], "R": null, "K'": [[44, 51], [47, 55]], "V'": [[40, 48], [42, 49]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Ottawa. Brian likes Venice. Sarah likes London. >. So who wants to go to a city of Canada? Richard\n < Ronald likes Mumbai. Susan likes New York. Dorothy likes Kyoto. >. So who wants to go to a city of the United States? Susan\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [30, 31], "K": [5, 7], "R": null, "K'": [[11, 17], [13, 18]], "V'": [[8, 14], [9, 15]], "example": [1, 33]}, {"END": [70, 71], "A": [71, 72], "V": [43, 44], "Q": [67, 70], "K": [46, 48], "R": null, "K'": [[39, 53], [42, 55]], "V'": [[35, 49], [37, 51]], "example": [34, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven likes Barcelona. Brian likes Mumbai. Ruth likes Seoul. >. So who wants to go to a city of India? Brian\n < Ruth likes Milan. Kevin likes Madrid. George likes Geneva. >. So who wants to go to a city of Italy? Ruth\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [7, 8], "Q": [31, 32], "K": [10, 13], "R": null, "K'": [[5, 17], [6, 19]], "V'": [[2, 14], [3, 15]], "example": [1, 34]}, {"END": [64, 65], "A": [65, 66], "V": [36, 37], "Q": [63, 64], "K": [39, 40], "R": null, "K'": [[44, 49], [45, 51]], "V'": [[41, 46], [42, 47]], "example": [35, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Anthony likes Bern. Kenneth likes Busan. Joseph likes Bras\u00edlia. >. So who wants to go to a city of Switzerland? Anthony\n < Daniel likes Birmingham. Sharon likes Bras\u00edlia. Anthony likes Zurich. >. So who wants to go to a city of Brazil? Sharon\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [30, 31], "K": [5, 6], "R": null, "K'": [[10, 16], [12, 18]], "V'": [[7, 13], [8, 14]], "example": [1, 33]}, {"END": [66, 67], "A": [67, 69], "V": [41, 43], "Q": [65, 66], "K": [45, 47], "R": null, "K'": [[38, 51], [40, 53]], "V'": [[35, 48], [36, 49]], "example": [34, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Thomas likes Sao Paulo. Ruth likes Incheon. Margaret likes Sydney. >. So who wants to go to a city of South Korea? Ruth\n < Nancy likes Zurich. Barbara likes Seoul. Margaret likes Sydney. >. So who wants to go to a city of South Korea? Barbara\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [9, 10], "Q": [32, 34], "K": [12, 15], "R": null, "K'": [[5, 19], [8, 20]], "V'": [[2, 16], [3, 17]], "example": [1, 36]}, {"END": [68, 69], "A": [69, 70], "V": [44, 45], "Q": [66, 68], "K": [47, 49], "R": null, "K'": [[41, 53], [43, 54]], "V'": [[38, 50], [39, 51]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< George likes Bras\u00edlia. Michael likes Florence. Brian likes Guangzhou. >. So who wants to go to a city of China? Brian\n < Joseph likes Birmingham. Linda likes Incheon. Steven likes Los Angeles. >. So who wants to go to a city of the United Kingdom? Joseph\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [13, 14], "Q": [32, 33], "K": [16, 20], "R": null, "K'": [[5, 11], [7, 12]], "V'": [[2, 8], [3, 9]], "example": [1, 35]}, {"END": [71, 72], "A": [72, 73], "V": [37, 38], "Q": [68, 71], "K": [40, 42], "R": null, "K'": [[47, 54], [50, 56]], "V'": [[43, 51], [45, 52]], "example": [36, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes Canberra. David likes Seoul. Michael likes Vancouver. >. So who wants to go to a city of South Korea? David\n < Linda likes Berlin. Steven likes Guangzhou. Mark likes Rome. >. So who wants to go to a city of Italy? Mark\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [9, 10], "Q": [32, 34], "K": [12, 14], "R": null, "K'": [[5, 18], [8, 20]], "V'": [[2, 15], [3, 16]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [52, 53], "Q": [68, 69], "K": [55, 56], "R": null, "K'": [[42, 47], [43, 51]], "V'": [[38, 44], [40, 45]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jennifer likes Washington, D.C. George likes Valencia. Helen likes Incheon. >. So who wants to go to a city of the United States? Jennifer\n < Patricia likes New Delhi. Lisa likes Washington, D.C. Mark likes Canberra. >. So who wants to go to a city of the United States? Lisa\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [2, 4], "Q": [36, 39], "K": [6, 11], "R": null, "K'": [[15, 21], [17, 24]], "V'": [[12, 18], [13, 19]], "example": [1, 42]}, {"END": [83, 84], "A": [84, 85], "V": [53, 54], "Q": [80, 83], "K": [56, 61], "R": null, "K'": [[49, 65], [52, 68]], "V'": [[44, 62], [47, 63]], "example": [43, 85]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Lyon. Sharon likes Paris. Helen likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is Ruth? Answer: No\n Premise: < Sandra likes Chiang Mai. Kevin likes Sao Paulo. Elizabeth likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Elizabeth? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [16, 17], "Q": [53, 56], "K": [19, 24], "R": null, "K'": [[8, 14], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [82, 83], "Q": [115, 116], "K": [85, 86], "R": null, "K'": [[71, 78], [74, 81]], "V'": [[67, 75], [69, 76]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Lyon. Sharon likes Paris. Helen likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is Ruth? Answer: No\n Premise: < Sandra likes Chiang Mai. Kevin likes Sao Paulo. Elizabeth likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Kevin? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [16, 17], "Q": [53, 56], "K": [19, 24], "R": null, "K'": [[8, 14], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [82, 83], "Q": [115, 116], "K": [85, 86], "R": null, "K'": [[71, 78], [74, 81]], "V'": [[67, 75], [69, 76]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Manchester. Linda likes Washington, D.C. Kenneth likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Kenneth? Answer: No\n Premise: < John likes Lyon. Daniel likes Osaka. Mary likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is John? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [5, 6], "Q": [53, 56], "K": [8, 9], "R": null, "K'": [[14, 23], [19, 24]], "V'": [[10, 20], [12, 21]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [67, 68], "Q": [114, 115], "K": [70, 71], "R": null, "K'": [[75, 81], [77, 85]], "V'": [[72, 78], [73, 79]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Manchester. Linda likes Washington, D.C. Kenneth likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Kenneth? Answer: No\n Premise: < John likes Lyon. Daniel likes Osaka. Mary likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Daniel? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [5, 6], "Q": [53, 56], "K": [8, 9], "R": null, "K'": [[14, 23], [19, 24]], "V'": [[10, 20], [12, 21]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [67, 68], "Q": [114, 115], "K": [70, 71], "R": null, "K'": [[75, 81], [77, 85]], "V'": [[72, 78], [73, 79]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Seoul. Margaret likes Toronto. Michelle likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Mark? Answer: No\n Premise: < Betty likes Osaka. Steven likes Zurich. Jennifer likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Steven? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [16, 18], "Q": [51, 54], "K": [20, 22], "R": null, "K'": [[8, 14], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [71, 72], "Q": [114, 115], "K": [74, 76], "R": null, "K'": [[68, 81], [70, 85]], "V'": [[65, 77], [66, 79]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Seoul. Margaret likes Toronto. Michelle likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Mark? Answer: No\n Premise: < Betty likes Osaka. Steven likes Zurich. Jennifer likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Betty? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [16, 18], "Q": [51, 54], "K": [20, 22], "R": null, "K'": [[8, 14], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [71, 72], "Q": [114, 115], "K": [74, 76], "R": null, "K'": [[68, 81], [70, 85]], "V'": [[65, 77], [66, 79]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Vancouver. Sharon likes Mumbai. Anthony likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Sharon? Answer: Yes\n Premise: < Laura likes Geneva. Kimberly likes Barcelona. Ruth likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Ruth? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [11, 13], "Q": [53, 54], "K": [15, 18], "R": null, "K'": [[8, 22], [10, 24]], "V'": [[5, 19], [6, 20]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [79, 80], "Q": [114, 115], "K": [82, 85], "R": null, "K'": [[69, 77], [71, 78]], "V'": [[66, 72], [67, 75]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Vancouver. Sharon likes Mumbai. Anthony likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Sharon? Answer: Yes\n Premise: < Laura likes Geneva. Kimberly likes Barcelona. Ruth likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Kimberly? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [11, 13], "Q": [53, 54], "K": [15, 18], "R": null, "K'": [[8, 22], [10, 24]], "V'": [[5, 19], [6, 20]], "example": [1, 61]}, {"END": [121, 122], "A": [116, 119], "V": [79, 80], "Q": [114, 115], "K": [82, 85], "R": null, "K'": [[69, 77], [71, 78]], "V'": [[66, 72], [67, 75]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara likes Munich. Anthony likes Los Angeles. Brian likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is Brian? Answer: No\n Premise: < John likes Hamburg. Michael likes Beijing. Helen likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is Michael? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [5, 6], "Q": [52, 53], "K": [8, 10], "R": null, "K'": [[14, 20], [16, 23]], "V'": [[11, 17], [12, 18]], "example": [1, 59]}, {"END": [114, 115], "A": [111, 112], "V": [69, 70], "Q": [109, 110], "K": [72, 75], "R": null, "K'": [[67, 79], [68, 80]], "V'": [[64, 76], [65, 77]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara likes Munich. Anthony likes Los Angeles. Brian likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is Brian? Answer: No\n Premise: < John likes Hamburg. Michael likes Beijing. Helen likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is John? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [5, 6], "Q": [52, 53], "K": [8, 10], "R": null, "K'": [[14, 20], [16, 23]], "V'": [[11, 17], [12, 18]], "example": [1, 59]}, {"END": [114, 115], "A": [111, 112], "V": [69, 70], "Q": [109, 110], "K": [72, 75], "R": null, "K'": [[67, 79], [68, 80]], "V'": [[64, 76], [65, 77]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Bras\u00edlia. Laura likes Saint Petersburg. Mary likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is Mary? Answer: Yes\n Premise: < Dorothy likes Bangkok. Margaret likes Mumbai. James likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is James? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [18, 19], "Q": [53, 55], "K": [21, 24], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [7, 13]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [81, 82], "Q": [114, 115], "K": [84, 85], "R": null, "K'": [[70, 77], [73, 80]], "V'": [[66, 74], [68, 75]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Bras\u00edlia. Laura likes Saint Petersburg. Mary likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is Mary? Answer: Yes\n Premise: < Dorothy likes Bangkok. Margaret likes Mumbai. James likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Margaret? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [18, 19], "Q": [53, 55], "K": [21, 24], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [7, 13]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [81, 82], "Q": [114, 115], "K": [84, 85], "R": null, "K'": [[70, 77], [73, 80]], "V'": [[66, 74], [68, 75]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Moscow. Richard likes Birmingham. Paul likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is Paul? Answer: No\n Premise: < Mary likes Incheon. Richard likes Tokyo. Michael likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is Mary? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [5, 8], "Q": [52, 53], "K": [10, 11], "R": null, "K'": [[15, 21], [17, 23]], "V'": [[12, 18], [13, 19]], "example": [1, 59]}, {"END": [115, 116], "A": [112, 113], "V": [64, 65], "Q": [109, 111], "K": [67, 70], "R": null, "K'": [[74, 79], [75, 80]], "V'": [[71, 76], [72, 77]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Moscow. Richard likes Birmingham. Paul likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is Paul? Answer: No\n Premise: < Mary likes Incheon. Richard likes Tokyo. Michael likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is Richard? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [5, 8], "Q": [52, 53], "K": [10, 11], "R": null, "K'": [[15, 21], [17, 23]], "V'": [[12, 18], [13, 19]], "example": [1, 59]}, {"END": [115, 116], "A": [112, 113], "V": [64, 65], "Q": [109, 111], "K": [67, 70], "R": null, "K'": [[74, 79], [75, 80]], "V'": [[71, 76], [72, 77]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Washington, D.C. Charles likes Mumbai. John likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is John? Answer: Yes\n Premise: < Helen likes Munich. Elizabeth likes Beijing. Edward likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Australia is Edward? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [21, 22], "Q": [54, 57], "K": [24, 25], "R": null, "K'": [[8, 17], [13, 20]], "V'": [[5, 14], [6, 15]], "example": [1, 63]}, {"END": [119, 120], "A": [116, 117], "V": [81, 82], "Q": [114, 115], "K": [84, 85], "R": null, "K'": [[71, 77], [73, 80]], "V'": [[68, 74], [69, 75]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Washington, D.C. Charles likes Mumbai. John likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is John? Answer: Yes\n Premise: < Helen likes Munich. Elizabeth likes Beijing. Edward likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Australia is Helen? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [21, 22], "Q": [54, 57], "K": [24, 25], "R": null, "K'": [[8, 17], [13, 20]], "V'": [[5, 14], [6, 15]], "example": [1, 63]}, {"END": [119, 120], "A": [116, 117], "V": [81, 82], "Q": [114, 115], "K": [84, 85], "R": null, "K'": [[71, 77], [73, 80]], "V'": [[68, 74], [69, 75]], "example": [64, 121]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Lyon attracts Ruth. Paris attracts Sharon. Washington, D.C attracts Helen. >. So who wants to go to a city of the United States? Helen\n < Sao Paulo attracts Sandra. Brisbane attracts Kevin. London attracts Elizabeth. >. So who wants to go to a city of the United Kingdom? Elizabeth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [20, 21], "Q": [33, 36], "K": [13, 18], "R": null, "K'": [[2, 7], [3, 8]], "V'": [[5, 10], [6, 12]], "example": [1, 38]}, {"END": [75, 76], "A": [76, 77], "V": [59, 60], "Q": [72, 75], "K": [56, 57], "R": null, "K'": [[40, 48], [43, 52]], "V'": [[45, 54], [47, 55]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ottawa attracts Richard. Venice attracts Brian. London attracts Sarah. >. So who wants to go to a city of Canada? Richard\n < Mumbai attracts Ronald. New York attracts Susan. Kyoto attracts Dorothy. >. So who wants to go to a city of the United States? Susan\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [6, 7], "Q": [30, 31], "K": [2, 4], "R": null, "K'": [[8, 14], [10, 15]], "V'": [[12, 17], [13, 18]], "example": [1, 33]}, {"END": [70, 71], "A": [71, 72], "V": [47, 48], "Q": [67, 70], "K": [43, 45], "R": null, "K'": [[35, 49], [38, 51]], "V'": [[40, 53], [42, 55]], "example": [34, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Barcelona attracts Steven. Mumbai attracts Brian. Seoul attracts Ruth. >. So who wants to go to a city of India? Brian\n < Milan attracts Ruth. Madrid attracts Kevin. Geneva attracts George. >. So who wants to go to a city of Italy? Ruth\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [12, 13], "Q": [31, 32], "K": [7, 10], "R": null, "K'": [[2, 14], [3, 16]], "V'": [[5, 18], [6, 19]], "example": [1, 34]}, {"END": [64, 65], "A": [65, 66], "V": [39, 40], "Q": [63, 64], "K": [36, 37], "R": null, "K'": [[41, 46], [42, 48]], "V'": [[44, 50], [45, 51]], "example": [35, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Bern attracts Anthony. Busan attracts Kenneth. Bras\u00edlia attracts Joseph. >. So who wants to go to a city of Switzerland? Anthony\n < Birmingham attracts Daniel. Bras\u00edlia attracts Sharon. Zurich attracts Anthony. >. So who wants to go to a city of Brazil? Sharon\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [5, 6], "Q": [30, 31], "K": [2, 3], "R": null, "K'": [[7, 13], [9, 15]], "V'": [[11, 17], [12, 18]], "example": [1, 33]}, {"END": [66, 67], "A": [67, 69], "V": [45, 47], "Q": [65, 66], "K": [41, 43], "R": null, "K'": [[35, 48], [37, 50]], "V'": [[39, 52], [40, 53]], "example": [34, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sao Paulo attracts Thomas. Incheon attracts Ruth. Sydney attracts Margaret. >. So who wants to go to a city of South Korea? Ruth\n < Zurich attracts Nancy. Seoul attracts Barbara. Sydney attracts Margaret. >. So who wants to go to a city of South Korea? Barbara\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [14, 15], "Q": [32, 34], "K": [9, 12], "R": null, "K'": [[2, 16], [5, 17]], "V'": [[7, 19], [8, 20]], "example": [1, 36]}, {"END": [68, 69], "A": [69, 70], "V": [48, 49], "Q": [66, 68], "K": [44, 46], "R": null, "K'": [[38, 50], [40, 51]], "V'": [[42, 53], [43, 54]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Bras\u00edlia attracts George. Florence attracts Michael. Guangzhou attracts Brian. >. So who wants to go to a city of China? Brian\n < Birmingham attracts Joseph. Incheon attracts Linda. Los Angeles attracts Steven. >. So who wants to go to a city of the United Kingdom? Joseph\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [19, 20], "Q": [32, 33], "K": [13, 17], "R": null, "K'": [[2, 8], [4, 9]], "V'": [[6, 11], [7, 12]], "example": [1, 35]}, {"END": [71, 72], "A": [72, 73], "V": [41, 42], "Q": [68, 71], "K": [37, 39], "R": null, "K'": [[43, 51], [46, 53]], "V'": [[48, 55], [50, 56]], "example": [36, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Carol. Seoul attracts David. Vancouver attracts Michael. >. So who wants to go to a city of South Korea? David\n < Berlin attracts Linda. Guangzhou attracts Steven. Rome attracts Mark. >. So who wants to go to a city of Italy? Mark\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [13, 14], "Q": [32, 34], "K": [9, 11], "R": null, "K'": [[2, 15], [5, 17]], "V'": [[7, 19], [8, 20]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [55, 56], "Q": [68, 69], "K": [52, 53], "R": null, "K'": [[38, 44], [39, 48]], "V'": [[41, 50], [43, 51]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Washington, D.C attracts Jennifer. Valencia attracts George. Incheon attracts Helen. >. So who wants to go to a city of the United States? Jennifer\n < New Delhi attracts Patricia. Washington, D.C attracts Lisa. Canberra attracts Mark. >. So who wants to go to a city of the United States? Lisa\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [9, 11], "Q": [36, 39], "K": [2, 7], "R": null, "K'": [[12, 18], [14, 21]], "V'": [[16, 23], [17, 24]], "example": [1, 42]}, {"END": [83, 84], "A": [84, 85], "V": [60, 61], "Q": [80, 83], "K": [53, 58], "R": null, "K'": [[44, 62], [47, 65]], "V'": [[49, 67], [52, 68]], "example": [43, 85]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Ruth. Paris attracts Sharon. Washington, D.C attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is Ruth? Answer: No\n Premise: < Chiang Mai attracts Sandra. Sao Paulo attracts Kevin. Paris attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Elizabeth? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [23, 24], "Q": [53, 56], "K": [16, 21], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 15]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [85, 86], "Q": [115, 116], "K": [82, 83], "R": null, "K'": [[67, 75], [70, 78]], "V'": [[72, 80], [74, 81]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Ruth. Paris attracts Sharon. Washington, D.C attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is Ruth? Answer: No\n Premise: < Chiang Mai attracts Sandra. Sao Paulo attracts Kevin. Paris attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Kevin? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [23, 24], "Q": [53, 56], "K": [16, 21], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 15]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [85, 86], "Q": [115, 116], "K": [82, 83], "R": null, "K'": [[67, 75], [70, 78]], "V'": [[72, 80], [74, 81]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Christopher. Washington, D.C attracts Linda. Berlin attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Kenneth? Answer: No\n Premise: < Lyon attracts John. Osaka attracts Daniel. Guangzhou attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is John? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [8, 9], "Q": [53, 56], "K": [5, 6], "R": null, "K'": [[10, 20], [15, 21]], "V'": [[17, 23], [19, 24]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [70, 71], "Q": [114, 115], "K": [67, 68], "R": null, "K'": [[72, 78], [74, 82]], "V'": [[76, 84], [77, 85]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Christopher. Washington, D.C attracts Linda. Berlin attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Kenneth? Answer: No\n Premise: < Lyon attracts John. Osaka attracts Daniel. Guangzhou attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is Daniel? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [8, 9], "Q": [53, 56], "K": [5, 6], "R": null, "K'": [[10, 20], [15, 21]], "V'": [[17, 23], [19, 24]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [70, 71], "Q": [114, 115], "K": [67, 68], "R": null, "K'": [[72, 78], [74, 82]], "V'": [[76, 84], [77, 85]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Mark. Toronto attracts Margaret. Birmingham attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Mark? Answer: No\n Premise: < Osaka attracts Betty. Zurich attracts Steven. Brisbane attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Steven? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [20, 22], "Q": [51, 54], "K": [16, 18], "R": null, "K'": [[5, 11], [7, 12]], "V'": [[9, 14], [10, 15]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [75, 76], "Q": [114, 115], "K": [71, 73], "R": null, "K'": [[65, 77], [67, 81]], "V'": [[69, 83], [70, 85]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Mark. Toronto attracts Margaret. Birmingham attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is Mark? Answer: No\n Premise: < Osaka attracts Betty. Zurich attracts Steven. Brisbane attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Betty? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [20, 22], "Q": [51, 54], "K": [16, 18], "R": null, "K'": [[5, 11], [7, 12]], "V'": [[9, 14], [10, 15]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [75, 76], "Q": [114, 115], "K": [71, 73], "R": null, "K'": [[65, 77], [67, 81]], "V'": [[69, 83], [70, 85]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Vancouver attracts Daniel. Mumbai attracts Sharon. Birmingham attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Sharon? Answer: Yes\n Premise: < Geneva attracts Laura. Barcelona attracts Kimberly. Bangalore attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Ruth? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [16, 18], "Q": [53, 54], "K": [11, 14], "R": null, "K'": [[5, 19], [7, 21]], "V'": [[9, 23], [10, 24]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [84, 85], "Q": [114, 115], "K": [79, 82], "R": null, "K'": [[66, 72], [68, 73]], "V'": [[70, 75], [71, 78]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Vancouver attracts Daniel. Mumbai attracts Sharon. Birmingham attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Sharon? Answer: Yes\n Premise: < Geneva attracts Laura. Barcelona attracts Kimberly. Bangalore attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is Kimberly? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [16, 18], "Q": [53, 54], "K": [11, 14], "R": null, "K'": [[5, 19], [7, 21]], "V'": [[9, 23], [10, 24]], "example": [1, 61]}, {"END": [121, 122], "A": [116, 119], "V": [84, 85], "Q": [114, 115], "K": [79, 82], "R": null, "K'": [[66, 72], [68, 73]], "V'": [[70, 75], [71, 78]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Barbara. Los Angeles attracts Anthony. Sao Paulo attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is Brian? Answer: No\n Premise: < Hamburg attracts John. Beijing attracts Michael. Milan attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is Michael? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [9, 10], "Q": [52, 53], "K": [5, 7], "R": null, "K'": [[11, 17], [13, 20]], "V'": [[15, 22], [16, 23]], "example": [1, 59]}, {"END": [114, 115], "A": [111, 112], "V": [74, 75], "Q": [109, 110], "K": [69, 72], "R": null, "K'": [[64, 76], [65, 77]], "V'": [[67, 79], [68, 80]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Barbara. Los Angeles attracts Anthony. Sao Paulo attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is Brian? Answer: No\n Premise: < Hamburg attracts John. Beijing attracts Michael. Milan attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is John? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [9, 10], "Q": [52, 53], "K": [5, 7], "R": null, "K'": [[11, 17], [13, 20]], "V'": [[15, 22], [16, 23]], "example": [1, 59]}, {"END": [114, 115], "A": [111, 112], "V": [74, 75], "Q": [109, 110], "K": [69, 72], "R": null, "K'": [[64, 76], [65, 77]], "V'": [[67, 79], [68, 80]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts Michelle. Saint Petersburg attracts Laura. Bangkok attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is Mary? Answer: Yes\n Premise: < Bangkok attracts Dorothy. Mumbai attracts Margaret. Bern attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is James? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [23, 24], "Q": [53, 55], "K": [18, 21], "R": null, "K'": [[5, 12], [7, 14]], "V'": [[9, 16], [11, 17]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [84, 85], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[66, 74], [69, 77]], "V'": [[71, 79], [73, 80]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts Michelle. Saint Petersburg attracts Laura. Bangkok attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is Mary? Answer: Yes\n Premise: < Bangkok attracts Dorothy. Mumbai attracts Margaret. Bern attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is Margaret? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [23, 24], "Q": [53, 55], "K": [18, 21], "R": null, "K'": [[5, 12], [7, 14]], "V'": [[9, 16], [11, 17]], "example": [1, 61]}, {"END": [119, 120], "A": [116, 117], "V": [84, 85], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[66, 74], [69, 77]], "V'": [[71, 79], [73, 80]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Patricia. Birmingham attracts Richard. Bras\u00edlia attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is Paul? Answer: No\n Premise: < Incheon attracts Mary. Tokyo attracts Richard. Moscow attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is Mary? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [8, 11], "Q": [52, 53], "K": [5, 6], "R": null, "K'": [[12, 18], [14, 20]], "V'": [[16, 22], [17, 23]], "example": [1, 59]}, {"END": [115, 116], "A": [112, 113], "V": [69, 70], "Q": [109, 111], "K": [64, 67], "R": null, "K'": [[71, 76], [72, 77]], "V'": [[74, 79], [75, 80]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Patricia. Birmingham attracts Richard. Bras\u00edlia attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is Paul? Answer: No\n Premise: < Incheon attracts Mary. Tokyo attracts Richard. Moscow attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is Richard? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [8, 11], "Q": [52, 53], "K": [5, 6], "R": null, "K'": [[12, 18], [14, 20]], "V'": [[16, 22], [17, 23]], "example": [1, 59]}, {"END": [115, 116], "A": [112, 113], "V": [69, 70], "Q": [109, 111], "K": [64, 67], "R": null, "K'": [[71, 76], [72, 77]], "V'": [[74, 79], [75, 80]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Washington, D.C attracts Lisa. Mumbai attracts Charles. Manchester attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is John? Answer: Yes\n Premise: < Munich attracts Helen. Beijing attracts Elizabeth. Sydney attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Australia is Edward? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [24, 25], "Q": [54, 57], "K": [21, 22], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[12, 19], [13, 20]], "example": [1, 63]}, {"END": [119, 120], "A": [116, 117], "V": [84, 85], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[68, 74], [70, 77]], "V'": [[72, 79], [73, 80]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Washington, D.C attracts Lisa. Mumbai attracts Charles. Manchester attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is John? Answer: Yes\n Premise: < Munich attracts Helen. Beijing attracts Elizabeth. Sydney attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Australia is Helen? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [24, 25], "Q": [54, 57], "K": [21, 22], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[12, 19], [13, 20]], "example": [1, 63]}, {"END": [119, 120], "A": [116, 117], "V": [84, 85], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[68, 74], [70, 77]], "V'": [[72, 79], [73, 80]], "example": [64, 121]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly likes Los Angeles. Sharon likes New York. Kenneth likes Shanghai. >. The one who wants to go to a city of the United States is not Kenneth\n < Sandra likes Birmingham. Kevin likes London. Elizabeth likes Sydney. >. The one who wants to go to a city of the United Kingdom is not Elizabeth\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [17, 18], "Q": [35, 38], "K'": [20, 22], "R": [39, 40], "K": [[7, 14], [9, 16]], "V": [[2, 10], [5, 12]], "example": [1, 41]}, {"END": [76, 77], "A'": [77, 78], "V'": [55, 56], "Q": [72, 75], "K'": [58, 59], "R": [76, 77], "K": [[47, 53], [49, 54]], "V": [[43, 50], [45, 51]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Sydney. Brian likes Toronto. Sarah likes Ottawa. >. The one who wants to go to a city of Canada is not Richard\n < Susan likes Washington, D.C. Sarah likes Munich. Paul likes New York. >. The one who wants to go to a city of the United States is not Sarah\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [30, 31], "K'": [5, 6], "R": [32, 33], "K": [[10, 15], [11, 17]], "V": [[7, 12], [8, 13]], "example": [1, 34]}, {"END": [73, 74], "A'": [74, 75], "V'": [45, 46], "Q": [69, 72], "K'": [48, 50], "R": [73, 74], "K": [[39, 54], [44, 56]], "V": [[36, 51], [37, 52]], "example": [35, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jeff likes Venice. Brian likes London. Donald likes Milan. >. The one who wants to go to a city of Italy is not Brian\n < Margaret likes Brisbane. Elizabeth likes Canberra. Jeff likes New Delhi. >. The one who wants to go to a city of Australia is not Jeff\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [8, 9], "Q": [30, 31], "K'": [11, 12], "R": [32, 33], "K": [[5, 16], [7, 17]], "V": [[2, 13], [3, 14]], "example": [1, 34]}, {"END": [72, 73], "A'": [73, 74], "V'": [51, 52], "Q": [70, 71], "K'": [54, 57], "R": [72, 73], "K": [[39, 47], [43, 50]], "V": [[36, 44], [37, 45]], "example": [35, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Elizabeth likes Brisbane. Steven likes New Delhi. Margaret likes Bangalore. >. The one who wants to go to a city of India is not Elizabeth\n < Carol likes Vancouver. Laura likes Marseille. Sharon likes Ottawa. >. The one who wants to go to a city of Canada is not Laura\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [2, 3], "Q": [36, 37], "K'": [5, 9], "R": [38, 39], "K": [[13, 20], [16, 23]], "V": [[10, 17], [11, 18]], "example": [1, 40]}, {"END": [75, 76], "A'": [76, 77], "V'": [48, 49], "Q": [73, 74], "K'": [51, 53], "R": [75, 76], "K": [[45, 58], [47, 60]], "V": [[42, 54], [43, 56]], "example": [41, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Kyoto. Sarah likes Moscow. Ronald likes Novosibirsk. >. The one who wants to go to a city of Russia is not Robert\n < Thomas likes Munich. Laura likes Mumbai. Betty likes Berlin. >. The one who wants to go to a city of Germany is not Laura\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [2, 3], "Q": [35, 36], "K'": [5, 7], "R": [37, 38], "K": [[11, 17], [12, 22]], "V": [[8, 13], [9, 15]], "example": [1, 39]}, {"END": [73, 74], "A'": [74, 75], "V'": [47, 48], "Q": [71, 72], "K'": [50, 53], "R": [73, 74], "K": [[44, 57], [46, 58]], "V": [[41, 54], [42, 55]], "example": [40, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jason likes Sao Paulo. Anthony likes Berlin. Jeff likes Munich. >. The one who wants to go to a city of Germany is not Jason\n < Jason likes Shanghai. George likes Moscow. Michael likes Saint Petersburg. >. The one who wants to go to a city of Russia is not Jason\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [32, 33], "K'": [5, 8], "R": [34, 35], "K": [[12, 17], [13, 19]], "V": [[9, 14], [10, 15]], "example": [1, 36]}, {"END": [69, 70], "A'": [70, 71], "V'": [38, 39], "Q": [67, 68], "K'": [41, 43], "R": [69, 70], "K": [[47, 52], [48, 54]], "V": [[44, 49], [45, 50]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Joseph likes Birmingham. Linda likes Toronto. Steven likes Vancouver. >. The one who wants to go to a city of Canada is not Joseph\n < David likes Busan. Carol likes Seoul. Ronald likes Geneva. >. The one who wants to go to a city of South Korea is not Ronald\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [32, 33], "K'": [5, 7], "R": [34, 35], "K": [[12, 17], [13, 19]], "V": [[8, 14], [10, 15]], "example": [1, 36]}, {"END": [72, 73], "A'": [73, 75], "V'": [50, 52], "Q": [69, 71], "K'": [54, 56], "R": [72, 73], "K": [[41, 47], [43, 49]], "V": [[38, 44], [39, 45]], "example": [37, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Edward likes Tokyo. Ronald likes Brisbane. Ruth likes Kyoto. >. The one who wants to go to a city of Japan is not Ronald\n < Brian likes Saint Petersburg. Richard likes Canberra. Sandra likes Novosibirsk. >. The one who wants to go to a city of Russia is not Richard\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [7, 9], "Q": [34, 35], "K'": [11, 15], "R": [36, 37], "K": [[5, 19], [6, 21]], "V": [[2, 16], [3, 17]], "example": [1, 39]}, {"END": [78, 79], "A'": [79, 80], "V'": [47, 48], "Q": [76, 77], "K'": [50, 53], "R": [78, 79], "K": [[44, 58], [46, 63]], "V": [[41, 54], [42, 56]], "example": [40, 80]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly likes Los Angeles. Sharon likes New York. Kenneth likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not Kimberly? Answer: No\n Premise: < Sandra likes Paris. Kevin likes Lyon. Elizabeth likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [20, 21], "Q": [54, 57], "K'": [23, 25], "R": [58, 59], "K": [[10, 17], [12, 19]], "V": [[5, 13], [8, 15]], "example": [1, 66]}, {"END": [122, 123], "A'": [119, 120], "V'": [82, 83], "Q": [116, 117], "K'": [85, 87], "R": [118, 119], "K": [[75, 80], [76, 81]], "V": [[71, 77], [73, 78]], "example": [67, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly likes Los Angeles. Sharon likes New York. Kenneth likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not Kimberly? Answer: No\n Premise: < Sandra likes Paris. Kevin likes Lyon. Elizabeth likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not Kevin? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [20, 21], "Q": [54, 57], "K'": [23, 25], "R": [58, 59], "K": [[10, 17], [12, 19]], "V": [[5, 13], [8, 15]], "example": [1, 66]}, {"END": [122, 123], "A'": [119, 120], "V'": [82, 83], "Q": [116, 117], "K'": [85, 87], "R": [118, 119], "K": [[75, 80], [76, 81]], "V": [[71, 77], [73, 78]], "example": [67, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Helen likes Manchester. Carol likes Munich. Christopher likes London. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Carol? Answer: Yes\n Premise: < Kevin likes Bangalore. Michael likes Rio de Janeiro. John likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not Kevin? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [10, 11], "Q": [49, 52], "K'": [13, 15], "R": [53, 54], "K": [[8, 19], [9, 20]], "V": [[5, 16], [6, 17]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [64, 65], "Q": [112, 113], "K'": [67, 70], "R": [114, 115], "K": [[74, 81], [77, 83]], "V": [[71, 78], [72, 79]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Helen likes Manchester. Carol likes Munich. Christopher likes London. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Carol? Answer: Yes\n Premise: < Kevin likes Bangalore. Michael likes Rio de Janeiro. John likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not John? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [10, 11], "Q": [49, 52], "K'": [13, 15], "R": [53, 54], "K": [[8, 19], [9, 20]], "V": [[5, 16], [6, 17]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [64, 65], "Q": [112, 113], "K'": [67, 70], "R": [114, 115], "K": [[74, 81], [77, 83]], "V": [[71, 78], [72, 79]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Munich. Robert likes Saint Petersburg. Patricia likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Patricia? Answer: No\n Premise: < Ronald likes Brisbane. Karen likes Tokyo. Dorothy likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not Ronald? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [11, 12], "Q": [52, 53], "K'": [14, 16], "R": [54, 55], "K": [[8, 22], [10, 23]], "V": [[5, 17], [6, 20]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [67, 69], "Q": [117, 118], "K'": [71, 75], "R": [119, 120], "K": [[80, 86], [81, 88]], "V": [[76, 82], [78, 84]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Munich. Robert likes Saint Petersburg. Patricia likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Patricia? Answer: No\n Premise: < Ronald likes Brisbane. Karen likes Tokyo. Dorothy likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not Dorothy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [11, 12], "Q": [52, 53], "K'": [14, 16], "R": [54, 55], "K": [[8, 22], [10, 23]], "V": [[5, 17], [6, 20]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [67, 69], "Q": [117, 118], "K'": [71, 75], "R": [119, 120], "K": [[80, 86], [81, 88]], "V": [[76, 82], [78, 84]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John likes Hamburg. Deborah likes Munich. Kenneth likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Deborah? Answer: No\n Premise: < Linda likes Munich. Kimberly likes Manchester. Helen likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Linda? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [18, 19], "Q": [53, 54], "K'": [21, 24], "R": [55, 56], "K": [[8, 15], [9, 17]], "V": [[5, 10], [6, 13]], "example": [1, 63]}, {"END": [125, 126], "A'": [121, 123], "V'": [68, 70], "Q": [116, 119], "K'": [72, 74], "R": [120, 121], "K": [[80, 85], [81, 87]], "V": [[75, 82], [78, 83]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John likes Hamburg. Deborah likes Munich. Kenneth likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Deborah? Answer: No\n Premise: < Linda likes Munich. Kimberly likes Manchester. Helen likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Kimberly? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [18, 19], "Q": [53, 54], "K'": [21, 24], "R": [55, 56], "K": [[8, 15], [9, 17]], "V": [[5, 10], [6, 13]], "example": [1, 63]}, {"END": [126, 127], "A'": [121, 124], "V'": [68, 70], "Q": [116, 119], "K'": [72, 74], "R": [120, 121], "K": [[80, 85], [81, 87]], "V": [[75, 82], [78, 83]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Sao Paulo. Anthony likes Berlin. Jeff likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Jeff? Answer: No\n Premise: < John likes Shanghai. Michael likes New York. Helen likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not Michael? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [5, 6], "Q": [51, 52], "K'": [8, 11], "R": [53, 54], "K": [[15, 20], [16, 22]], "V": [[12, 17], [13, 18]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [70, 71], "Q": [112, 113], "K'": [73, 75], "R": [114, 115], "K": [[67, 79], [69, 83]], "V": [[64, 76], [65, 77]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Sao Paulo. Anthony likes Berlin. Jeff likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Jeff? Answer: No\n Premise: < John likes Shanghai. Michael likes New York. Helen likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not John? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [5, 6], "Q": [51, 52], "K'": [8, 11], "R": [53, 54], "K": [[15, 20], [16, 22]], "V": [[12, 17], [13, 18]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [70, 71], "Q": [112, 113], "K'": [73, 75], "R": [114, 115], "K": [[67, 79], [69, 83]], "V": [[64, 76], [65, 77]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Pattaya. Laura likes Bangkok. Mary likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not Mary? Answer: Yes\n Premise: < Dorothy likes Geneva. Margaret likes Bern. James likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is not James? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [20, 21], "Q": [53, 55], "K'": [23, 24], "R": [56, 57], "K": [[9, 16], [12, 19]], "V": [[5, 13], [7, 14]], "example": [1, 62]}, {"END": [119, 120], "A'": [116, 117], "V'": [79, 80], "Q": [113, 114], "K'": [82, 84], "R": [115, 116], "K": [[71, 77], [73, 78]], "V": [[67, 74], [69, 75]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Pattaya. Laura likes Bangkok. Mary likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not Mary? Answer: Yes\n Premise: < Dorothy likes Geneva. Margaret likes Bern. James likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is not Margaret? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [20, 21], "Q": [53, 55], "K'": [23, 24], "R": [56, 57], "K": [[9, 16], [12, 19]], "V": [[5, 13], [7, 14]], "example": [1, 62]}, {"END": [119, 120], "A'": [116, 117], "V'": [79, 80], "Q": [113, 114], "K'": [82, 84], "R": [115, 116], "K": [[71, 77], [73, 78]], "V": [[67, 74], [69, 75]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Novosibirsk. Patricia likes Moscow. Susan likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Patricia? Answer: No\n Premise: < Ronald likes Sao Paulo. Jennifer likes Rio de Janeiro. George likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not George? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [21, 22], "Q": [54, 55], "K'": [24, 25], "R": [56, 57], "K": [[8, 19], [13, 20]], "V": [[5, 14], [6, 17]], "example": [1, 64]}, {"END": [125, 126], "A'": [122, 123], "V'": [85, 86], "Q": [119, 120], "K'": [88, 90], "R": [121, 122], "K": [[73, 81], [76, 84]], "V": [[69, 77], [71, 79]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Novosibirsk. Patricia likes Moscow. Susan likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Patricia? Answer: No\n Premise: < Ronald likes Sao Paulo. Jennifer likes Rio de Janeiro. George likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not Ronald? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [21, 22], "Q": [54, 55], "K'": [24, 25], "R": [56, 57], "K": [[8, 19], [13, 20]], "V": [[5, 14], [6, 17]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [85, 86], "Q": [119, 120], "K'": [88, 90], "R": [121, 122], "K": [[73, 81], [76, 84]], "V": [[69, 77], [71, 79]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Seoul. Betty likes Busan. Linda likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not Linda? Answer: Yes\n Premise: < Robert likes Valencia. Mary likes Saint Petersburg. James likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Robert? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [17, 19], "Q": [53, 55], "K'": [21, 24], "R": [56, 57], "K": [[8, 14], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [68, 69], "Q": [113, 114], "K'": [71, 73], "R": [115, 116], "K": [[77, 83], [79, 84]], "V": [[74, 80], [75, 81]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Seoul. Betty likes Busan. Linda likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not Linda? Answer: Yes\n Premise: < Robert likes Valencia. Mary likes Saint Petersburg. James likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not James? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [17, 19], "Q": [53, 55], "K'": [21, 24], "R": [56, 57], "K": [[8, 14], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [68, 69], "Q": [113, 114], "K'": [71, 73], "R": [115, 116], "K": [[77, 83], [79, 84]], "V": [[74, 80], [75, 81]], "example": [64, 121]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Los Angeles attracts Kimberly. New York attracts Sharon. Shanghai attracts Kenneth. >. The one who wants to go to a city of the United States is not Kenneth\n < Birmingham attracts Sandra. London attracts Kevin. Sydney attracts Elizabeth. >. The one who wants to go to a city of the United Kingdom is not Elizabeth\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [21, 22], "Q": [35, 38], "K'": [17, 19], "R": [39, 40], "K": [[2, 10], [4, 12]], "V": [[6, 14], [9, 16]], "example": [1, 41]}, {"END": [76, 77], "A'": [77, 78], "V'": [58, 59], "Q": [72, 75], "K'": [55, 56], "R": [76, 77], "K": [[43, 50], [45, 51]], "V": [[47, 53], [49, 54]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sydney attracts Richard. Toronto attracts Brian. Ottawa attracts Sarah. >. The one who wants to go to a city of Canada is not Richard\n < Washington, D.C attracts Susan. Munich attracts Sarah. New York attracts Paul. >. The one who wants to go to a city of the United States is not Sarah\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [5, 6], "Q": [30, 31], "K'": [2, 3], "R": [32, 33], "K": [[7, 12], [8, 14]], "V": [[10, 16], [11, 17]], "example": [1, 34]}, {"END": [73, 74], "A'": [74, 75], "V'": [49, 50], "Q": [69, 72], "K'": [45, 47], "R": [73, 74], "K": [[36, 51], [41, 53]], "V": [[43, 55], [44, 56]], "example": [35, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Jeff. London attracts Brian. Milan attracts Donald. >. The one who wants to go to a city of Italy is not Brian\n < Brisbane attracts Margaret. Canberra attracts Elizabeth. New Delhi attracts Jeff. >. The one who wants to go to a city of Australia is not Jeff\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [11, 12], "Q": [30, 31], "K'": [8, 9], "R": [32, 33], "K": [[2, 13], [4, 14]], "V": [[6, 16], [7, 17]], "example": [1, 34]}, {"END": [72, 73], "A'": [73, 74], "V'": [56, 57], "Q": [70, 71], "K'": [51, 54], "R": [72, 73], "K": [[36, 44], [40, 47]], "V": [[42, 49], [43, 50]], "example": [35, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Brisbane attracts Elizabeth. New Delhi attracts Steven. Bangalore attracts Margaret. >. The one who wants to go to a city of India is not Elizabeth\n < Vancouver attracts Carol. Marseille attracts Laura. Ottawa attracts Sharon. >. The one who wants to go to a city of Canada is not Laura\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [8, 9], "Q": [36, 37], "K'": [2, 6], "R": [38, 39], "K": [[10, 17], [13, 20]], "V": [[15, 22], [16, 23]], "example": [1, 40]}, {"END": [75, 76], "A'": [76, 77], "V'": [52, 53], "Q": [73, 74], "K'": [48, 50], "R": [75, 76], "K": [[42, 54], [44, 56]], "V": [[46, 58], [47, 60]], "example": [41, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Kyoto attracts Robert. Moscow attracts Sarah. Novosibirsk attracts Ronald. >. The one who wants to go to a city of Russia is not Robert\n < Munich attracts Thomas. Mumbai attracts Laura. Berlin attracts Betty. >. The one who wants to go to a city of Germany is not Laura\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [6, 7], "Q": [35, 36], "K'": [2, 4], "R": [37, 38], "K": [[8, 13], [9, 18]], "V": [[11, 20], [12, 22]], "example": [1, 39]}, {"END": [73, 74], "A'": [74, 75], "V'": [52, 53], "Q": [71, 72], "K'": [47, 50], "R": [73, 74], "K": [[41, 54], [43, 55]], "V": [[45, 57], [46, 58]], "example": [40, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sao Paulo attracts Jason. Berlin attracts Anthony. Munich attracts Jeff. >. The one who wants to go to a city of Germany is not Jason\n < Shanghai attracts Jason. Moscow attracts George. Saint Petersburg attracts Michael. >. The one who wants to go to a city of Russia is not Jason\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [7, 8], "Q": [32, 33], "K'": [2, 5], "R": [34, 35], "K": [[9, 14], [10, 16]], "V": [[12, 18], [13, 19]], "example": [1, 36]}, {"END": [69, 70], "A'": [70, 71], "V'": [42, 43], "Q": [67, 68], "K'": [38, 40], "R": [69, 70], "K": [[44, 49], [45, 51]], "V": [[47, 53], [48, 54]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Birmingham attracts Joseph. Toronto attracts Linda. Vancouver attracts Steven. >. The one who wants to go to a city of Canada is not Joseph\n < Busan attracts David. Seoul attracts Carol. Geneva attracts Ronald. >. The one who wants to go to a city of South Korea is not Ronald\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [6, 7], "Q": [32, 33], "K'": [2, 4], "R": [34, 35], "K": [[8, 14], [9, 16]], "V": [[11, 18], [13, 19]], "example": [1, 36]}, {"END": [72, 73], "A'": [73, 75], "V'": [54, 56], "Q": [69, 71], "K'": [50, 52], "R": [72, 73], "K": [[38, 44], [40, 46]], "V": [[42, 48], [43, 49]], "example": [37, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tokyo attracts Edward. Brisbane attracts Ronald. Kyoto attracts Ruth. >. The one who wants to go to a city of Japan is not Ronald\n < Saint Petersburg attracts Brian. Canberra attracts Richard. Novosibirsk attracts Sandra. >. The one who wants to go to a city of Russia is not Richard\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [13, 15], "Q": [34, 35], "K'": [7, 11], "R": [36, 37], "K": [[2, 16], [3, 18]], "V": [[5, 20], [6, 21]], "example": [1, 39]}, {"END": [78, 79], "A'": [79, 80], "V'": [52, 53], "Q": [76, 77], "K'": [47, 50], "R": [78, 79], "K": [[41, 54], [43, 59]], "V": [[45, 61], [46, 63]], "example": [40, 80]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Los Angeles attracts Kimberly. New York attracts Sharon. Shanghai attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not Kimberly? Answer: No\n Premise: < Paris attracts Sandra. Lyon attracts Kevin. Vancouver attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [24, 25], "Q": [54, 57], "K'": [20, 22], "R": [58, 59], "K": [[5, 13], [7, 15]], "V": [[9, 17], [12, 19]], "example": [1, 66]}, {"END": [122, 123], "A'": [119, 120], "V'": [86, 87], "Q": [116, 117], "K'": [82, 84], "R": [118, 119], "K": [[71, 77], [72, 78]], "V": [[74, 80], [76, 81]], "example": [67, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Los Angeles attracts Kimberly. New York attracts Sharon. Shanghai attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not Kimberly? Answer: No\n Premise: < Paris attracts Sandra. Lyon attracts Kevin. Vancouver attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not Kevin? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [24, 25], "Q": [54, 57], "K'": [20, 22], "R": [58, 59], "K": [[5, 13], [7, 15]], "V": [[9, 17], [12, 19]], "example": [1, 66]}, {"END": [122, 123], "A'": [119, 120], "V'": [86, 87], "Q": [116, 117], "K'": [82, 84], "R": [118, 119], "K": [[71, 77], [72, 78]], "V": [[74, 80], [76, 81]], "example": [67, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Helen. Munich attracts Carol. London attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Carol? Answer: Yes\n Premise: < Bangalore attracts Kevin. Rio de Janeiro attracts Michael. Bras\u00edlia attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not Kevin? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [14, 15], "Q": [49, 52], "K'": [10, 12], "R": [53, 54], "K": [[5, 16], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [69, 70], "Q": [112, 113], "K'": [64, 67], "R": [114, 115], "K": [[71, 78], [74, 80]], "V": [[76, 82], [77, 83]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Helen. Munich attracts Carol. London attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Carol? Answer: Yes\n Premise: < Bangalore attracts Kevin. Rio de Janeiro attracts Michael. Bras\u00edlia attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not John? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [14, 15], "Q": [49, 52], "K'": [10, 12], "R": [53, 54], "K": [[5, 16], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [69, 70], "Q": [112, 113], "K'": [64, 67], "R": [114, 115], "K": [[71, 78], [74, 80]], "V": [[76, 82], [77, 83]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Charles. Saint Petersburg attracts Robert. Berlin attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Patricia? Answer: No\n Premise: < Brisbane attracts Ronald. Tokyo attracts Karen. Osaka attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not Ronald? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [15, 16], "Q": [52, 53], "K'": [11, 13], "R": [54, 55], "K": [[5, 17], [7, 18]], "V": [[9, 20], [10, 23]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [73, 75], "Q": [117, 118], "K'": [67, 71], "R": [119, 120], "K": [[76, 82], [77, 84]], "V": [[79, 86], [81, 88]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Charles. Saint Petersburg attracts Robert. Berlin attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Patricia? Answer: No\n Premise: < Brisbane attracts Ronald. Tokyo attracts Karen. Osaka attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not Dorothy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [15, 16], "Q": [52, 53], "K'": [11, 13], "R": [54, 55], "K": [[5, 17], [7, 18]], "V": [[9, 20], [10, 23]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [73, 75], "Q": [117, 118], "K'": [67, 71], "R": [119, 120], "K": [[76, 82], [77, 84]], "V": [[79, 86], [81, 88]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hamburg attracts John. Munich attracts Deborah. Bangkok attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Deborah? Answer: No\n Premise: < Munich attracts Linda. Manchester attracts Kimberly. Birmingham attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Linda? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [23, 24], "Q": [53, 54], "K'": [18, 21], "R": [55, 56], "K": [[5, 10], [6, 12]], "V": [[8, 14], [9, 17]], "example": [1, 63]}, {"END": [125, 126], "A'": [121, 123], "V'": [72, 74], "Q": [116, 119], "K'": [68, 70], "R": [120, 121], "K": [[75, 82], [76, 84]], "V": [[78, 86], [81, 87]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hamburg attracts John. Munich attracts Deborah. Bangkok attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Deborah? Answer: No\n Premise: < Munich attracts Linda. Manchester attracts Kimberly. Birmingham attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is not Kimberly? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [23, 24], "Q": [53, 54], "K'": [18, 21], "R": [55, 56], "K": [[5, 10], [6, 12]], "V": [[8, 14], [9, 17]], "example": [1, 63]}, {"END": [126, 127], "A'": [121, 124], "V'": [72, 74], "Q": [116, 119], "K'": [68, 70], "R": [120, 121], "K": [[75, 82], [76, 84]], "V": [[78, 86], [81, 87]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Jason. Berlin attracts Anthony. Munich attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Jeff? Answer: No\n Premise: < Shanghai attracts John. New York attracts Michael. Guangzhou attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not Michael? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [10, 11], "Q": [51, 52], "K'": [5, 8], "R": [53, 54], "K": [[12, 17], [13, 19]], "V": [[15, 21], [16, 22]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [74, 75], "Q": [112, 113], "K'": [70, 72], "R": [114, 115], "K": [[64, 76], [66, 80]], "V": [[68, 82], [69, 83]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Jason. Berlin attracts Anthony. Munich attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not Jeff? Answer: No\n Premise: < Shanghai attracts John. New York attracts Michael. Guangzhou attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not John? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [10, 11], "Q": [51, 52], "K'": [5, 8], "R": [53, 54], "K": [[12, 17], [13, 19]], "V": [[15, 21], [16, 22]], "example": [1, 59]}, {"END": [118, 119], "A'": [115, 116], "V'": [74, 75], "Q": [112, 113], "K'": [70, 72], "R": [114, 115], "K": [[64, 76], [66, 80]], "V": [[68, 82], [69, 83]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Pattaya attracts Michelle. Bangkok attracts Laura. Toronto attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not Mary? Answer: Yes\n Premise: < Geneva attracts Dorothy. Bern attracts Margaret. Shanghai attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is not James? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [23, 24], "Q": [53, 55], "K'": [20, 21], "R": [56, 57], "K": [[5, 13], [8, 16]], "V": [[10, 18], [12, 19]], "example": [1, 62]}, {"END": [119, 120], "A'": [116, 117], "V'": [83, 84], "Q": [113, 114], "K'": [79, 81], "R": [115, 116], "K": [[67, 74], [69, 75]], "V": [[71, 77], [73, 78]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Pattaya attracts Michelle. Bangkok attracts Laura. Toronto attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not Mary? Answer: Yes\n Premise: < Geneva attracts Dorothy. Bern attracts Margaret. Shanghai attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Switzerland is not Margaret? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [23, 24], "Q": [53, 55], "K'": [20, 21], "R": [56, 57], "K": [[5, 13], [8, 16]], "V": [[10, 18], [12, 19]], "example": [1, 62]}, {"END": [119, 120], "A'": [116, 117], "V'": [83, 84], "Q": [113, 114], "K'": [79, 81], "R": [115, 116], "K": [[67, 74], [69, 75]], "V": [[71, 77], [73, 78]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Novosibirsk attracts Michael. Moscow attracts Patricia. Toronto attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Patricia? Answer: No\n Premise: < Sao Paulo attracts Ronald. Rio de Janeiro attracts Jennifer. Munich attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not George? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [24, 25], "Q": [54, 55], "K'": [21, 22], "R": [56, 57], "K": [[5, 14], [10, 15]], "V": [[12, 17], [13, 20]], "example": [1, 64]}, {"END": [125, 126], "A'": [122, 123], "V'": [89, 90], "Q": [119, 120], "K'": [85, 87], "R": [121, 122], "K": [[69, 77], [72, 80]], "V": [[74, 82], [76, 84]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Novosibirsk attracts Michael. Moscow attracts Patricia. Toronto attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Patricia? Answer: No\n Premise: < Sao Paulo attracts Ronald. Rio de Janeiro attracts Jennifer. Munich attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not Ronald? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [24, 25], "Q": [54, 55], "K'": [21, 22], "R": [56, 57], "K": [[5, 14], [10, 15]], "V": [[12, 17], [13, 20]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [89, 90], "Q": [119, 120], "K'": [85, 87], "R": [121, 122], "K": [[69, 77], [72, 80]], "V": [[74, 82], [76, 84]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts George. Busan attracts Betty. Canberra attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not Linda? Answer: Yes\n Premise: < Valencia attracts Robert. Saint Petersburg attracts Mary. Moscow attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not Robert? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [22, 24], "Q": [53, 55], "K'": [17, 20], "R": [56, 57], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 16]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [72, 73], "Q": [113, 114], "K'": [68, 70], "R": [115, 116], "K": [[74, 80], [76, 81]], "V": [[78, 83], [79, 84]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts George. Busan attracts Betty. Canberra attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not Linda? Answer: Yes\n Premise: < Valencia attracts Robert. Saint Petersburg attracts Mary. Moscow attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Russia is not James? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [22, 24], "Q": [53, 55], "K'": [17, 20], "R": [56, 57], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 16]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [72, 73], "Q": [113, 114], "K'": [68, 70], "R": [115, 116], "K": [[74, 80], [76, 81]], "V": [[78, 83], [79, 84]], "example": [64, 121]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Busan. Donna likes Novosibirsk. James likes Birmingham. >. So the boy wants to go to Birmingham\n < Margaret likes Madrid. Nancy likes Vancouver. Richard likes Incheon. >. So the boy wants to go to Incheon\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [22, 24], "Q": [28, 30], "K": [19, 20], "R": null, "K'": [[2, 9], [4, 11]], "V'": [[6, 13], [8, 18]], "example": [1, 36]}, {"END": [64, 65], "A": [65, 68], "V": [52, 55], "Q": [59, 61], "K": [49, 50], "R": null, "K'": [[38, 43], [39, 44]], "V'": [[41, 46], [42, 48]], "example": [37, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Venice. Deborah likes Milan. Linda likes Bangalore. >. So the boy wants to go to Venice\n < Betty likes Osaka. Paul likes Rio de Janeiro. Lisa likes Moscow. >. So the boy wants to go to Rio de Janeiro\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [5, 7], "Q": [26, 28], "K": [2, 3], "R": null, "K'": [[8, 15], [11, 17]], "V'": [[13, 19], [14, 22]], "example": [1, 34]}, {"END": [62, 63], "A": [63, 66], "V": [45, 48], "Q": [57, 59], "K": [42, 43], "R": null, "K'": [[36, 49], [37, 50]], "V'": [[39, 52], [41, 53]], "example": [35, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Kevin likes Toronto. Donna likes Florence. William likes Seoul. >. So the girl wants to go to Florence\n < John likes Seoul. Karen likes Vancouver. Sarah likes Tokyo. >. So the boy wants to go to Seoul\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [11, 12], "Q": [22, 24], "K": [7, 9], "R": null, "K'": [[2, 13], [3, 14]], "V'": [[5, 16], [6, 18]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 60], "V": [34, 36], "Q": [52, 54], "K": [31, 32], "R": null, "K'": [[37, 44], [39, 45]], "V'": [[41, 47], [43, 48]], "example": [30, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Maria likes Washington, D.C. William likes Birmingham. Michael likes Sydney. >. So the girl wants to go to Washington, D.C\n < Ronald likes Manchester. Nancy likes Novosibirsk. Joseph likes Washington, D.C. >. So the girl wants to go to Novosibirsk\n", "ranges": [{"END": [30, 31], "A": [31, 36], "V": [5, 10], "Q": [25, 27], "K": [2, 3], "R": null, "K'": [[11, 17], [12, 18]], "V'": [[14, 20], [16, 21]], "example": [1, 36]}, {"END": [70, 71], "A": [71, 76], "V": [47, 52], "Q": [65, 67], "K": [44, 45], "R": null, "K'": [[38, 53], [40, 54]], "V'": [[42, 56], [43, 61]], "example": [37, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Rome. Margaret likes Seoul. Kenneth likes Chiang Mai. >. So the girl wants to go to Seoul\n < Kenneth likes Zurich. Mary likes Bangkok. Brian likes Chiang Mai. >. So the girl wants to go to Bangkok\n", "ranges": [{"END": [28, 29], "A": [29, 31], "V": [10, 12], "Q": [23, 25], "K": [7, 8], "R": null, "K'": [[2, 13], [3, 14]], "V'": [[5, 16], [6, 19]], "example": [1, 31]}, {"END": [61, 62], "A": [62, 65], "V": [42, 45], "Q": [56, 58], "K": [39, 40], "R": null, "K'": [[33, 46], [34, 47]], "V'": [[36, 49], [38, 52]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Barbara likes Tokyo. Linda likes Canberra. Jason likes Florence. >. So the boy wants to go to Florence\n < Betty likes Sao Paulo. Deborah likes New York. Jeff likes Pattaya. >. So the boy wants to go to Pattaya\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [18, 19], "Q": [23, 25], "K": [15, 16], "R": null, "K'": [[2, 7], [3, 9]], "V'": [[5, 11], [6, 14]], "example": [1, 30]}, {"END": [62, 63], "A": [63, 66], "V": [50, 53], "Q": [57, 59], "K": [47, 48], "R": null, "K'": [[32, 39], [33, 42]], "V'": [[35, 44], [38, 46]], "example": [31, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< William likes Canberra. Dorothy likes Manchester. Charles likes Osaka. >. So the girl wants to go to Manchester\n < James likes Osaka. Lisa likes Milan. Helen likes Kyoto. >. So the boy wants to go to Osaka\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [13, 14], "Q": [24, 26], "K": [9, 11], "R": null, "K'": [[2, 15], [3, 16]], "V'": [[5, 18], [8, 20]], "example": [1, 31]}, {"END": [58, 59], "A": [59, 61], "V": [36, 38], "Q": [53, 55], "K": [33, 34], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[42, 47], [43, 49]], "example": [32, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Hamburg. Barbara likes Seoul. Ruth likes London. >. So the boy wants to go to Hamburg\n < Sharon likes Berlin. David likes London. Thomas likes Canberra. >. So the girl wants to go to Berlin\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [5, 6], "Q": [21, 23], "K": [2, 3], "R": null, "K'": [[7, 13], [8, 14]], "V'": [[10, 16], [12, 17]], "example": [1, 28]}, {"END": [56, 57], "A": [57, 58], "V": [34, 35], "Q": [51, 53], "K": [30, 32], "R": null, "K'": [[36, 41], [37, 42]], "V'": [[39, 44], [40, 47]], "example": [29, 58]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Busan. Donna likes Novosibirsk. James likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Busan? Answer: No\n Premise: < Kimberly likes Madrid. Margaret likes Vancouver. Daniel likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [25, 27], "Q": [46, 48], "K": [22, 23], "R": null, "K'": [[5, 12], [7, 14]], "V'": [[9, 16], [11, 21]], "example": [1, 58]}, {"END": [112, 113], "A": [107, 110], "V": [79, 82], "Q": [101, 103], "K": [76, 77], "R": null, "K'": [[63, 70], [66, 71]], "V'": [[68, 73], [69, 75]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Busan. Donna likes Novosibirsk. James likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Busan? Answer: No\n Premise: < Kimberly likes Madrid. Margaret likes Vancouver. Daniel likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [25, 27], "Q": [46, 48], "K": [22, 23], "R": null, "K'": [[5, 12], [7, 14]], "V'": [[9, 16], [11, 21]], "example": [1, 58]}, {"END": [111, 112], "A": [107, 109], "V": [79, 82], "Q": [101, 103], "K": [76, 77], "R": null, "K'": [[63, 70], [66, 71]], "V'": [[68, 73], [69, 75]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul likes Guangzhou. Sandra likes Sao Paulo. Susan likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Birmingham? Answer: No\n Premise: < Donald likes Kyoto. Lisa likes Manchester. Jennifer likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [8, 12], "Q": [45, 47], "K": [5, 6], "R": null, "K'": [[13, 21], [15, 22]], "V'": [[17, 24], [20, 26]], "example": [1, 57]}, {"END": [107, 108], "A": [103, 105], "V": [65, 67], "Q": [97, 99], "K": [62, 63], "R": null, "K'": [[68, 73], [69, 75]], "V'": [[71, 77], [72, 78]], "example": [58, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul likes Guangzhou. Sandra likes Sao Paulo. Susan likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Birmingham? Answer: No\n Premise: < Donald likes Kyoto. Lisa likes Manchester. Jennifer likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Manchester? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [8, 12], "Q": [45, 47], "K": [5, 6], "R": null, "K'": [[13, 21], [15, 22]], "V'": [[17, 24], [20, 26]], "example": [1, 57]}, {"END": [106, 107], "A": [103, 104], "V": [65, 67], "Q": [97, 99], "K": [62, 63], "R": null, "K'": [[68, 73], [69, 75]], "V'": [[71, 77], [72, 78]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth likes Brisbane. Patricia likes Chiang Mai. Jason likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Brisbane? Answer: No\n Premise: < Christopher likes Pattaya. Karen likes Toronto. Kenneth likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [51, 55], "V": [25, 26], "Q": [45, 47], "K": [22, 23], "R": null, "K'": [[5, 13], [6, 16]], "V'": [[8, 18], [12, 21]], "example": [1, 59]}, {"END": [109, 110], "A": [106, 107], "V": [75, 76], "Q": [100, 102], "K": [71, 73], "R": null, "K'": [[64, 77], [65, 78]], "V'": [[67, 80], [70, 81]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth likes Brisbane. Patricia likes Chiang Mai. Jason likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Brisbane? Answer: No\n Premise: < Christopher likes Pattaya. Karen likes Toronto. Kenneth likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [57, 58], "A": [51, 55], "V": [25, 26], "Q": [45, 47], "K": [22, 23], "R": null, "K'": [[5, 13], [6, 16]], "V'": [[8, 18], [12, 21]], "example": [1, 59]}, {"END": [111, 112], "A": [106, 109], "V": [75, 76], "Q": [100, 102], "K": [71, 73], "R": null, "K'": [[64, 77], [65, 78]], "V'": [[67, 80], [70, 81]], "example": [60, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Manchester. Susan likes Novosibirsk. Ronald likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Novosibirsk? Answer: Yes\n Premise: < Joseph likes Bras\u00edlia. Kevin likes Busan. Kimberly likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [53, 58], "V": [13, 18], "Q": [47, 49], "K": [10, 11], "R": null, "K'": [[5, 19], [6, 21]], "V'": [[8, 23], [9, 28]], "example": [1, 62]}, {"END": [115, 116], "A": [111, 113], "V": [84, 86], "Q": [105, 107], "K": [79, 82], "R": null, "K'": [[67, 73], [68, 74]], "V'": [[70, 76], [72, 78]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Manchester. Susan likes Novosibirsk. Ronald likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Novosibirsk? Answer: Yes\n Premise: < Joseph likes Bras\u00edlia. Kevin likes Busan. Kimberly likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Busan? Answer: No\n", "ranges": [{"END": [60, 61], "A": [53, 58], "V": [13, 18], "Q": [47, 49], "K": [10, 11], "R": null, "K'": [[5, 19], [6, 21]], "V'": [[8, 23], [9, 28]], "example": [1, 62]}, {"END": [115, 116], "A": [111, 113], "V": [84, 86], "Q": [105, 107], "K": [79, 82], "R": null, "K'": [[67, 73], [68, 74]], "V'": [[70, 76], [72, 78]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Bangkok. Jeff likes Washington, D.C. John likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Florence? Answer: No\n Premise: < Susan likes Kyoto. George likes Canberra. Laura likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Canberra? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [8, 11], "Q": [44, 46], "K": [5, 6], "R": null, "K'": [[12, 21], [13, 22]], "V'": [[15, 24], [20, 25]], "example": [1, 55]}, {"END": [108, 109], "A": [103, 106], "V": [69, 72], "Q": [97, 99], "K": [66, 67], "R": null, "K'": [[60, 73], [61, 74]], "V'": [[63, 76], [65, 78]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Bangkok. Jeff likes Washington, D.C. John likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Florence? Answer: No\n Premise: < Susan likes Kyoto. George likes Canberra. Laura likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [8, 11], "Q": [44, 46], "K": [5, 6], "R": null, "K'": [[12, 21], [13, 22]], "V'": [[15, 24], [20, 25]], "example": [1, 55]}, {"END": [107, 108], "A": [103, 105], "V": [69, 72], "Q": [97, 99], "K": [66, 67], "R": null, "K'": [[60, 73], [61, 74]], "V'": [[63, 76], [65, 78]], "example": [56, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Barcelona. Jeff likes Bras\u00edlia. Maria likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n Premise: < Edward likes Moscow. Mark likes Chiang Mai. Mary likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Beijing? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [19, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 15]], "example": [1, 50]}, {"END": [103, 104], "A": [98, 101], "V": [70, 73], "Q": [92, 94], "K": [67, 68], "R": null, "K'": [[55, 60], [56, 61]], "V'": [[58, 63], [59, 66]], "example": [51, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Barcelona. Jeff likes Bras\u00edlia. Maria likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n Premise: < Edward likes Moscow. Mark likes Chiang Mai. Mary likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [19, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 15]], "example": [1, 50]}, {"END": [103, 104], "A": [98, 101], "V": [70, 73], "Q": [92, 94], "K": [67, 68], "R": null, "K'": [[55, 60], [56, 61]], "V'": [[58, 63], [59, 66]], "example": [51, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes Valencia. Ronald likes London. Mark likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Ottawa? Answer: No\n Premise: < Sharon likes Berlin. David likes London. Thomas likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [8, 10], "Q": [41, 43], "K": [5, 6], "R": null, "K'": [[11, 17], [13, 18]], "V'": [[15, 20], [16, 22]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [62, 63], "Q": [94, 96], "K": [58, 60], "R": null, "K'": [[64, 69], [65, 70]], "V'": [[67, 72], [68, 75]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes Valencia. Ronald likes London. Mark likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Ottawa? Answer: No\n Premise: < Sharon likes Berlin. David likes London. Thomas likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to London? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [8, 10], "Q": [41, 43], "K": [5, 6], "R": null, "K'": [[11, 17], [13, 18]], "V'": [[15, 20], [16, 22]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [62, 63], "Q": [94, 96], "K": [58, 60], "R": null, "K'": [[64, 69], [65, 70]], "V'": [[67, 72], [68, 75]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra likes Munich. Betty likes Los Angeles. Kevin likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n Premise: < Karen likes Saint Petersburg. Mary likes Incheon. Paul likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [21, 23], "Q": [42, 44], "K": [18, 19], "R": null, "K'": [[5, 12], [7, 13]], "V'": [[9, 15], [11, 17]], "example": [1, 54]}, {"END": [105, 106], "A": [102, 103], "V": [76, 77], "Q": [96, 98], "K": [73, 74], "R": null, "K'": [[59, 66], [61, 67]], "V'": [[63, 69], [65, 72]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra likes Munich. Betty likes Los Angeles. Kevin likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n Premise: < Karen likes Saint Petersburg. Mary likes Incheon. Paul likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [21, 23], "Q": [42, 44], "K": [18, 19], "R": null, "K'": [[5, 12], [7, 13]], "V'": [[9, 15], [11, 17]], "example": [1, 54]}, {"END": [106, 107], "A": [102, 104], "V": [76, 77], "Q": [96, 98], "K": [73, 74], "R": null, "K'": [[59, 66], [61, 67]], "V'": [[63, 69], [65, 72]], "example": [55, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Busan attracts Sharon. Novosibirsk attracts Donna. Birmingham attracts James. >. So the boy wants to go to Birmingham\n < Madrid attracts Margaret. Vancouver attracts Nancy. Incheon attracts Richard. >. So the boy wants to go to Incheon\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [19, 21], "Q": [28, 30], "K": [23, 24], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[2, 9], [4, 14]], "example": [1, 36]}, {"END": [64, 65], "A": [65, 68], "V": [49, 52], "Q": [59, 61], "K": [54, 55], "R": null, "K'": [[41, 47], [42, 48]], "V'": [[38, 43], [39, 45]], "example": [37, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Richard. Milan attracts Deborah. Bangalore attracts Linda. >. So the boy wants to go to Venice\n < Osaka attracts Betty. Rio de Janeiro attracts Paul. Moscow attracts Lisa. >. So the boy wants to go to Rio de Janeiro\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [2, 4], "Q": [26, 28], "K": [6, 7], "R": null, "K'": [[11, 20], [14, 22]], "V'": [[8, 15], [9, 18]], "example": [1, 34]}, {"END": [62, 63], "A": [63, 66], "V": [42, 45], "Q": [57, 59], "K": [47, 48], "R": null, "K'": [[40, 52], [41, 53]], "V'": [[36, 49], [38, 50]], "example": [35, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Toronto attracts Kevin. Florence attracts Donna. Seoul attracts William. >. So the girl wants to go to Florence\n < Seoul attracts John. Vancouver attracts Karen. Tokyo attracts Sarah. >. So the boy wants to go to Seoul\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [7, 8], "Q": [22, 24], "K": [10, 12], "R": null, "K'": [[5, 17], [6, 18]], "V'": [[2, 13], [3, 15]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 60], "V": [31, 33], "Q": [52, 54], "K": [35, 36], "R": null, "K'": [[41, 47], [43, 48]], "V'": [[37, 44], [39, 45]], "example": [30, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Washington, D.C attracts Maria. Birmingham attracts William. Sydney attracts Michael. >. So the girl wants to go to Washington, D.C\n < Manchester attracts Ronald. Novosibirsk attracts Nancy. Washington, D.C attracts Joseph. >. So the girl wants to go to Novosibirsk\n", "ranges": [{"END": [30, 31], "A": [31, 36], "V": [2, 7], "Q": [25, 27], "K": [9, 10], "R": null, "K'": [[15, 20], [16, 21]], "V'": [[11, 17], [13, 18]], "example": [1, 36]}, {"END": [70, 71], "A": [71, 76], "V": [44, 49], "Q": [65, 67], "K": [51, 52], "R": null, "K'": [[41, 60], [43, 61]], "V'": [[38, 53], [39, 58]], "example": [37, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Rome attracts Mark. Seoul attracts Margaret. Chiang Mai attracts Kenneth. >. So the girl wants to go to Seoul\n < Zurich attracts Kenneth. Bangkok attracts Mary. Chiang Mai attracts Brian. >. So the girl wants to go to Bangkok\n", "ranges": [{"END": [28, 29], "A": [29, 31], "V": [7, 9], "Q": [23, 25], "K": [11, 12], "R": null, "K'": [[5, 18], [6, 19]], "V'": [[2, 13], [3, 16]], "example": [1, 31]}, {"END": [61, 62], "A": [62, 65], "V": [39, 42], "Q": [56, 58], "K": [44, 45], "R": null, "K'": [[37, 51], [38, 52]], "V'": [[33, 46], [35, 49]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tokyo attracts Barbara. Canberra attracts Linda. Florence attracts Jason. >. So the boy wants to go to Florence\n < Sao Paulo attracts Betty. New York attracts Deborah. Pattaya attracts Jeff. >. So the boy wants to go to Pattaya\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [15, 16], "Q": [23, 25], "K": [18, 19], "R": null, "K'": [[5, 12], [6, 14]], "V'": [[2, 7], [3, 10]], "example": [1, 30]}, {"END": [62, 63], "A": [63, 66], "V": [47, 50], "Q": [57, 59], "K": [52, 53], "R": null, "K'": [[37, 43], [38, 46]], "V'": [[32, 39], [35, 41]], "example": [31, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts William. Manchester attracts Dorothy. Osaka attracts Charles. >. So the girl wants to go to Manchester\n < Osaka attracts James. Milan attracts Lisa. Kyoto attracts Helen. >. So the boy wants to go to Osaka\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [9, 10], "Q": [24, 26], "K": [12, 14], "R": null, "K'": [[7, 19], [8, 20]], "V'": [[2, 15], [5, 17]], "example": [1, 31]}, {"END": [58, 59], "A": [59, 61], "V": [33, 35], "Q": [53, 55], "K": [37, 38], "R": null, "K'": [[42, 48], [43, 49]], "V'": [[39, 44], [40, 46]], "example": [32, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Hamburg attracts Brian. Seoul attracts Barbara. London attracts Ruth. >. So the boy wants to go to Hamburg\n < Berlin attracts Sharon. London attracts David. Canberra attracts Thomas. >. So the girl wants to go to Berlin\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [2, 3], "Q": [21, 23], "K": [5, 6], "R": null, "K'": [[11, 16], [12, 17]], "V'": [[7, 13], [9, 14]], "example": [1, 28]}, {"END": [56, 57], "A": [57, 58], "V": [30, 31], "Q": [51, 53], "K": [33, 35], "R": null, "K'": [[39, 46], [40, 47]], "V'": [[36, 41], [37, 44]], "example": [29, 58]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Sharon. Novosibirsk attracts Donna. Birmingham attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Busan? Answer: No\n Premise: < Madrid attracts Kimberly. Vancouver attracts Margaret. Incheon attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [22, 24], "Q": [46, 48], "K": [26, 27], "R": null, "K'": [[9, 19], [11, 21]], "V'": [[5, 12], [7, 17]], "example": [1, 58]}, {"END": [112, 113], "A": [107, 110], "V": [76, 79], "Q": [101, 103], "K": [81, 82], "R": null, "K'": [[66, 74], [69, 75]], "V'": [[63, 70], [64, 72]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Sharon. Novosibirsk attracts Donna. Birmingham attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Busan? Answer: No\n Premise: < Madrid attracts Kimberly. Vancouver attracts Margaret. Incheon attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [22, 24], "Q": [46, 48], "K": [26, 27], "R": null, "K'": [[9, 19], [11, 21]], "V'": [[5, 12], [7, 17]], "example": [1, 58]}, {"END": [111, 112], "A": [107, 109], "V": [76, 79], "Q": [101, 103], "K": [81, 82], "R": null, "K'": [[66, 74], [69, 75]], "V'": [[63, 70], [64, 72]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Paul. Sao Paulo attracts Sandra. Birmingham attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Donald. Manchester attracts Lisa. Berlin attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 9], "Q": [45, 47], "K": [11, 12], "R": null, "K'": [[18, 25], [20, 26]], "V'": [[13, 21], [16, 23]], "example": [1, 57]}, {"END": [107, 108], "A": [103, 105], "V": [62, 64], "Q": [97, 99], "K": [66, 67], "R": null, "K'": [[71, 76], [72, 78]], "V'": [[68, 73], [69, 74]], "example": [58, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Paul. Sao Paulo attracts Sandra. Birmingham attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Donald. Manchester attracts Lisa. Berlin attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Manchester? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 9], "Q": [45, 47], "K": [11, 12], "R": null, "K'": [[18, 25], [20, 26]], "V'": [[13, 21], [16, 23]], "example": [1, 57]}, {"END": [106, 107], "A": [103, 104], "V": [62, 64], "Q": [97, 99], "K": [66, 67], "R": null, "K'": [[71, 76], [72, 78]], "V'": [[68, 73], [69, 74]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Elizabeth. Chiang Mai attracts Patricia. Barcelona attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Christopher. Toronto attracts Karen. Hamburg attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [51, 55], "V": [22, 23], "Q": [45, 47], "K": [25, 26], "R": null, "K'": [[11, 18], [12, 21]], "V'": [[5, 13], [9, 16]], "example": [1, 59]}, {"END": [109, 110], "A": [106, 107], "V": [71, 72], "Q": [100, 102], "K": [74, 76], "R": null, "K'": [[69, 80], [70, 81]], "V'": [[64, 77], [67, 78]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Elizabeth. Chiang Mai attracts Patricia. Barcelona attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Christopher. Toronto attracts Karen. Hamburg attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [57, 58], "A": [51, 55], "V": [22, 23], "Q": [45, 47], "K": [25, 26], "R": null, "K'": [[11, 18], [12, 21]], "V'": [[5, 13], [9, 16]], "example": [1, 59]}, {"END": [111, 112], "A": [106, 109], "V": [71, 72], "Q": [100, 102], "K": [74, 76], "R": null, "K'": [[69, 80], [70, 81]], "V'": [[64, 77], [67, 78]], "example": [60, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Daniel. Novosibirsk attracts Susan. Washington, D.C attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Joseph. Busan attracts Kevin. Seoul attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [53, 58], "V": [10, 15], "Q": [47, 49], "K": [17, 18], "R": null, "K'": [[8, 26], [9, 28]], "V'": [[5, 19], [6, 24]], "example": [1, 62]}, {"END": [115, 116], "A": [111, 113], "V": [79, 81], "Q": [105, 107], "K": [83, 86], "R": null, "K'": [[71, 77], [72, 78]], "V'": [[67, 73], [69, 75]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Daniel. Novosibirsk attracts Susan. Washington, D.C attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Joseph. Busan attracts Kevin. Seoul attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Busan? Answer: No\n", "ranges": [{"END": [60, 61], "A": [53, 58], "V": [10, 15], "Q": [47, 49], "K": [17, 18], "R": null, "K'": [[8, 26], [9, 28]], "V'": [[5, 19], [6, 24]], "example": [1, 62]}, {"END": [115, 116], "A": [111, 113], "V": [79, 81], "Q": [105, 107], "K": [83, 86], "R": null, "K'": [[71, 77], [72, 78]], "V'": [[67, 73], [69, 75]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Margaret. Washington, D.C attracts Jeff. Florence attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Florence? Answer: No\n Premise: < Kyoto attracts Susan. Canberra attracts George. Saint Petersburg attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Canberra? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [5, 8], "Q": [44, 46], "K": [10, 11], "R": null, "K'": [[19, 24], [20, 25]], "V'": [[12, 21], [17, 22]], "example": [1, 55]}, {"END": [108, 109], "A": [103, 106], "V": [66, 69], "Q": [97, 99], "K": [71, 72], "R": null, "K'": [[64, 77], [65, 78]], "V'": [[60, 73], [62, 75]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Margaret. Washington, D.C attracts Jeff. Florence attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Florence? Answer: No\n Premise: < Kyoto attracts Susan. Canberra attracts George. Saint Petersburg attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [5, 8], "Q": [44, 46], "K": [10, 11], "R": null, "K'": [[19, 24], [20, 25]], "V'": [[12, 21], [17, 22]], "example": [1, 55]}, {"END": [107, 108], "A": [103, 105], "V": [66, 69], "Q": [97, 99], "K": [71, 72], "R": null, "K'": [[64, 77], [65, 78]], "V'": [[60, 73], [62, 75]], "example": [56, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Mark. Bras\u00edlia attracts Jeff. Berlin attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Edward. Chiang Mai attracts Mark. Beijing attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Beijing? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [16, 17], "Q": [39, 41], "K": [19, 20], "R": null, "K'": [[8, 14], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 50]}, {"END": [103, 104], "A": [98, 101], "V": [67, 70], "Q": [92, 94], "K": [72, 73], "R": null, "K'": [[58, 65], [59, 66]], "V'": [[55, 60], [56, 63]], "example": [51, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Mark. Bras\u00edlia attracts Jeff. Berlin attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Edward. Chiang Mai attracts Mark. Beijing attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [16, 17], "Q": [39, 41], "K": [19, 20], "R": null, "K'": [[8, 14], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 50]}, {"END": [103, 104], "A": [98, 101], "V": [67, 70], "Q": [92, 94], "K": [72, 73], "R": null, "K'": [[58, 65], [59, 66]], "V'": [[55, 60], [56, 63]], "example": [51, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Maria. London attracts Ronald. Ottawa attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Ottawa? Answer: No\n Premise: < Berlin attracts Sharon. London attracts David. Canberra attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Berlin? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 7], "Q": [41, 43], "K": [9, 10], "R": null, "K'": [[14, 21], [16, 22]], "V'": [[11, 17], [12, 19]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [58, 59], "Q": [94, 96], "K": [61, 63], "R": null, "K'": [[67, 74], [68, 75]], "V'": [[64, 69], [65, 72]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Maria. London attracts Ronald. Ottawa attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Ottawa? Answer: No\n Premise: < Berlin attracts Sharon. London attracts David. Canberra attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to London? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 7], "Q": [41, 43], "K": [9, 10], "R": null, "K'": [[14, 21], [16, 22]], "V'": [[11, 17], [12, 19]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [58, 59], "Q": [94, 96], "K": [61, 63], "R": null, "K'": [[67, 74], [68, 75]], "V'": [[64, 69], [65, 72]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Sandra. Los Angeles attracts Betty. Kyoto attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Karen. Incheon attracts Mary. Paris attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [18, 20], "Q": [42, 44], "K": [22, 23], "R": null, "K'": [[9, 16], [11, 17]], "V'": [[5, 12], [7, 14]], "example": [1, 54]}, {"END": [105, 106], "A": [102, 103], "V": [73, 74], "Q": [96, 98], "K": [76, 77], "R": null, "K'": [[63, 71], [65, 72]], "V'": [[59, 66], [61, 69]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Sandra. Los Angeles attracts Betty. Kyoto attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Karen. Incheon attracts Mary. Paris attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [18, 20], "Q": [42, 44], "K": [22, 23], "R": null, "K'": [[9, 16], [11, 17]], "V'": [[5, 12], [7, 14]], "example": [1, 54]}, {"END": [106, 107], "A": [102, 104], "V": [73, 74], "Q": [96, 98], "K": [76, 77], "R": null, "K'": [[63, 71], [65, 72]], "V'": [[59, 66], [61, 69]], "example": [55, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Busan. Kenneth likes Novosibirsk. Mary likes Birmingham. >. The boys do not want to go to Birmingham\n < Joseph likes Madrid. Daniel likes Vancouver. Maria likes Incheon. >. The boys do not want to go to Incheon\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [20, 22], "Q": [25, 27], "K'": [17, 18], "R": [28, 29], "K": [[2, 8], [3, 9]], "V": [[5, 11], [7, 16]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 68], "V'": [51, 54], "Q": [57, 59], "K'": [48, 49], "R": [60, 61], "K": [[37, 42], [38, 43]], "V": [[40, 45], [41, 47]], "example": [36, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Maria likes Venice. Jeff likes Milan. Robert likes Bangalore. >. The boys do not want to go to Venice\n < Mark likes Osaka. Karen likes Rio de Janeiro. Christopher likes Moscow. >. The boys do not want to go to Rio de Janeiro\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [5, 7], "Q": [22, 24], "K'": [2, 3], "R": [25, 26], "K": [[8, 13], [9, 14]], "V": [[11, 16], [12, 19]], "example": [1, 32]}, {"END": [62, 63], "A'": [63, 66], "V'": [44, 47], "Q": [55, 57], "K'": [40, 42], "R": [58, 59], "K": [[34, 48], [35, 49]], "V": [[37, 51], [39, 52]], "example": [33, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Sarah likes Toronto. Kenneth likes Florence. Elizabeth likes Seoul. >. The girls do not want to go to Florence\n < Patricia likes Seoul. Paul likes Vancouver. Kevin likes Tokyo. >. The boys do not want to go to Seoul\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [10, 11], "Q": [20, 22], "K'": [7, 8], "R": [23, 24], "K": [[2, 12], [3, 13]], "V": [[5, 15], [6, 17]], "example": [1, 29]}, {"END": [59, 60], "A'": [60, 62], "V'": [36, 38], "Q": [52, 54], "K'": [31, 34], "R": [55, 56], "K": [[39, 45], [40, 46]], "V": [[42, 48], [44, 49]], "example": [30, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Washington, D.C. Elizabeth likes Birmingham. Barbara likes Sydney. >. The girls do not want to go to Washington, D.C\n < Michelle likes Manchester. Daniel likes Novosibirsk. Margaret likes Washington, D.C. >. The girls do not want to go to Novosibirsk\n", "ranges": [{"END": [31, 32], "A'": [32, 37], "V'": [5, 10], "Q": [24, 26], "K'": [2, 3], "R": [27, 28], "K": [[11, 17], [12, 18]], "V": [[14, 20], [16, 21]], "example": [1, 37]}, {"END": [72, 73], "A'": [73, 78], "V'": [48, 53], "Q": [65, 67], "K'": [45, 46], "R": [68, 69], "K": [[39, 54], [41, 55]], "V": [[43, 57], [44, 62]], "example": [38, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Betty likes Rome. Joseph likes Seoul. Donna likes Chiang Mai. >. The girls do not want to go to Seoul\n < Donna likes Zurich. James likes Bangkok. Sharon likes Chiang Mai. >. The girls do not want to go to Bangkok\n", "ranges": [{"END": [30, 31], "A'": [31, 33], "V'": [10, 12], "Q": [23, 25], "K'": [7, 8], "R": [26, 27], "K": [[2, 13], [3, 15]], "V": [[5, 17], [6, 20]], "example": [1, 33]}, {"END": [66, 67], "A'": [67, 70], "V'": [45, 48], "Q": [59, 61], "K'": [42, 43], "R": [62, 63], "K": [[35, 49], [37, 51]], "V": [[39, 53], [41, 56]], "example": [34, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Michael likes Tokyo. Robert likes Canberra. Kimberly likes Florence. >. The boys do not want to go to Florence\n < Mark likes Sao Paulo. Jeff likes New York. Deborah likes Pattaya. >. The boys do not want to go to Pattaya\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [19, 20], "Q": [23, 25], "K'": [14, 17], "R": [26, 27], "K": [[2, 7], [3, 8]], "V": [[5, 10], [6, 13]], "example": [1, 32]}, {"END": [65, 66], "A'": [66, 69], "V'": [52, 55], "Q": [58, 60], "K'": [47, 50], "R": [61, 62], "K": [[34, 41], [35, 42]], "V": [[37, 44], [40, 46]], "example": [33, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Elizabeth likes Canberra. Thomas likes Manchester. Susan likes Osaka. >. The girls do not want to go to Manchester\n < Mary likes Osaka. Christopher likes Milan. Donald likes Kyoto. >. The boys do not want to go to Osaka\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [12, 13], "Q": [22, 24], "K'": [9, 10], "R": [25, 26], "K": [[2, 14], [3, 15]], "V": [[5, 17], [8, 19]], "example": [1, 31]}, {"END": [59, 60], "A'": [60, 62], "V'": [36, 38], "Q": [52, 54], "K'": [33, 34], "R": [55, 56], "K": [[39, 44], [40, 45]], "V": [[42, 47], [43, 49]], "example": [32, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Hamburg. Michael likes Seoul. Edward likes London. >. The boys do not want to go to Hamburg\n < Brian likes Berlin. Jennifer likes London. Dorothy likes Canberra. >. The girls do not want to go to Berlin\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [6, 7], "Q": [21, 23], "K'": [2, 4], "R": [24, 25], "K": [[8, 14], [9, 15]], "V": [[11, 17], [13, 18]], "example": [1, 30]}, {"END": [60, 61], "A'": [61, 62], "V'": [35, 36], "Q": [53, 55], "K'": [32, 33], "R": [56, 57], "K": [[37, 43], [39, 45]], "V": [[41, 47], [42, 50]], "example": [31, 62]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Busan. Kenneth likes Novosibirsk. Mary likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Busan? Answer: No\n Premise: < Jason likes Madrid. Joseph likes Vancouver. Nancy likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [23, 25], "Q": [44, 46], "K'": [20, 21], "R": [47, 48], "K": [[5, 11], [6, 12]], "V": [[8, 14], [10, 19]], "example": [1, 58]}, {"END": [112, 113], "A'": [107, 110], "V'": [77, 80], "Q": [99, 101], "K'": [74, 75], "R": [102, 103], "K": [[63, 68], [64, 69]], "V": [[66, 71], [67, 73]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Busan. Kenneth likes Novosibirsk. Mary likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Busan? Answer: No\n Premise: < Jason likes Madrid. Joseph likes Vancouver. Nancy likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [23, 25], "Q": [44, 46], "K'": [20, 21], "R": [47, 48], "K": [[5, 11], [6, 12]], "V": [[8, 14], [10, 19]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [77, 80], "Q": [99, 101], "K'": [74, 75], "R": [102, 103], "K": [[63, 68], [64, 69]], "V": [[66, 71], [67, 73]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen likes Guangzhou. George likes Sao Paulo. Charles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Birmingham? Answer: No\n Premise: < Helen likes Kyoto. Christopher likes Manchester. David likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [9, 13], "Q": [45, 47], "K'": [5, 7], "R": [48, 49], "K": [[14, 21], [15, 22]], "V": [[17, 24], [20, 26]], "example": [1, 59]}, {"END": [110, 111], "A'": [106, 108], "V'": [67, 69], "Q": [98, 100], "K'": [64, 65], "R": [101, 102], "K": [[70, 75], [71, 76]], "V": [[73, 78], [74, 79]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen likes Guangzhou. George likes Sao Paulo. Charles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Birmingham? Answer: No\n Premise: < Helen likes Kyoto. Christopher likes Manchester. David likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Manchester? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [9, 13], "Q": [45, 47], "K'": [5, 7], "R": [48, 49], "K": [[14, 21], [15, 22]], "V": [[17, 24], [20, 26]], "example": [1, 59]}, {"END": [109, 110], "A'": [106, 107], "V'": [67, 69], "Q": [98, 100], "K'": [64, 65], "R": [101, 102], "K": [[70, 75], [71, 76]], "V": [[73, 78], [74, 79]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William likes Brisbane. John likes Chiang Mai. Kimberly likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Brisbane? Answer: No\n Premise: < Lisa likes Pattaya. Paul likes Toronto. Donna likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Toronto? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [25, 26], "Q": [45, 47], "K'": [20, 23], "R": [48, 49], "K": [[5, 13], [6, 14]], "V": [[8, 16], [12, 19]], "example": [1, 61]}, {"END": [113, 114], "A'": [110, 111], "V'": [76, 77], "Q": [102, 104], "K'": [73, 74], "R": [105, 106], "K": [[66, 78], [67, 80]], "V": [[69, 82], [72, 83]], "example": [62, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William likes Brisbane. John likes Chiang Mai. Kimberly likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Brisbane? Answer: No\n Premise: < Lisa likes Pattaya. Paul likes Toronto. Donna likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Pattaya? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [25, 26], "Q": [45, 47], "K'": [20, 23], "R": [48, 49], "K": [[5, 13], [6, 14]], "V": [[8, 16], [12, 19]], "example": [1, 61]}, {"END": [115, 116], "A'": [110, 113], "V'": [76, 77], "Q": [102, 104], "K'": [73, 74], "R": [105, 106], "K": [[66, 78], [67, 80]], "V": [[69, 82], [72, 83]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy likes Manchester. Charles likes Novosibirsk. Michelle likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Novosibirsk? Answer: Yes\n Premise: < Margaret likes Bras\u00edlia. Sarah likes Busan. Jason likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Seoul? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [13, 18], "Q": [47, 49], "K'": [10, 11], "R": [50, 51], "K": [[5, 19], [6, 21]], "V": [[8, 23], [9, 28]], "example": [1, 64]}, {"END": [117, 118], "A'": [113, 115], "V'": [84, 86], "Q": [105, 107], "K'": [81, 82], "R": [108, 109], "K": [[69, 75], [70, 76]], "V": [[72, 78], [74, 80]], "example": [65, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy likes Manchester. Charles likes Novosibirsk. Michelle likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Novosibirsk? Answer: Yes\n Premise: < Margaret likes Bras\u00edlia. Sarah likes Busan. Jason likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Busan? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [13, 18], "Q": [47, 49], "K'": [10, 11], "R": [50, 51], "K": [[5, 19], [6, 21]], "V": [[8, 23], [9, 28]], "example": [1, 64]}, {"END": [117, 118], "A'": [113, 115], "V'": [84, 86], "Q": [105, 107], "K'": [81, 82], "R": [108, 109], "K": [[69, 75], [70, 76]], "V": [[72, 78], [74, 80]], "example": [65, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph likes Bangkok. Deborah likes Washington, D.C. Patricia likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Florence? Answer: No\n Premise: < Charles likes Kyoto. Sandra likes Canberra. Anthony likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Canberra? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [8, 11], "Q": [48, 50], "K'": [5, 6], "R": [51, 52], "K": [[12, 23], [15, 26]], "V": [[17, 28], [22, 29]], "example": [1, 61]}, {"END": [117, 118], "A'": [112, 115], "V'": [76, 79], "Q": [104, 106], "K'": [72, 74], "R": [107, 108], "K": [[66, 80], [67, 81]], "V": [[69, 83], [71, 85]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph likes Bangkok. Deborah likes Washington, D.C. Patricia likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Florence? Answer: No\n Premise: < Charles likes Kyoto. Sandra likes Canberra. Anthony likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [8, 11], "Q": [48, 50], "K'": [5, 6], "R": [51, 52], "K": [[12, 23], [15, 26]], "V": [[17, 28], [22, 29]], "example": [1, 61]}, {"END": [116, 117], "A'": [112, 114], "V'": [76, 79], "Q": [104, 106], "K'": [72, 74], "R": [107, 108], "K": [[66, 80], [67, 81]], "V": [[69, 83], [71, 85]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Barcelona. Deborah likes Bras\u00edlia. Richard likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n Premise: < Ruth likes Moscow. Betty likes Chiang Mai. James likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [21, 22], "Q": [41, 43], "K'": [18, 19], "R": [44, 45], "K": [[5, 10], [6, 13]], "V": [[8, 15], [9, 17]], "example": [1, 54]}, {"END": [109, 110], "A'": [104, 107], "V'": [74, 77], "Q": [96, 98], "K'": [71, 72], "R": [99, 100], "K": [[59, 64], [60, 65]], "V": [[62, 67], [63, 70]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Barcelona. Deborah likes Bras\u00edlia. Richard likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n Premise: < Ruth likes Moscow. Betty likes Chiang Mai. James likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [21, 22], "Q": [41, 43], "K'": [18, 19], "R": [44, 45], "K": [[5, 10], [6, 13]], "V": [[8, 15], [9, 17]], "example": [1, 54]}, {"END": [109, 110], "A'": [104, 107], "V'": [74, 77], "Q": [96, 98], "K'": [71, 72], "R": [99, 100], "K": [[59, 64], [60, 65]], "V": [[62, 67], [63, 70]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Valencia. Michelle likes London. Betty likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Ottawa? Answer: No\n Premise: < Brian likes Berlin. Jennifer likes London. Dorothy likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [8, 10], "Q": [41, 43], "K'": [5, 6], "R": [44, 45], "K": [[11, 17], [13, 18]], "V": [[15, 20], [16, 22]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [63, 64], "Q": [97, 99], "K'": [60, 61], "R": [100, 101], "K": [[65, 71], [67, 73]], "V": [[69, 75], [70, 78]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Valencia. Michelle likes London. Betty likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Ottawa? Answer: No\n Premise: < Brian likes Berlin. Jennifer likes London. Dorothy likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to London? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [8, 10], "Q": [41, 43], "K'": [5, 6], "R": [44, 45], "K": [[11, 17], [13, 18]], "V": [[15, 20], [16, 22]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [63, 64], "Q": [97, 99], "K'": [60, 61], "R": [100, 101], "K": [[65, 71], [67, 73]], "V": [[69, 75], [70, 78]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Munich. Mark likes Los Angeles. Sarah likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n Premise: < Paul likes Saint Petersburg. James likes Incheon. Karen likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [20, 22], "Q": [41, 43], "K'": [17, 18], "R": [44, 45], "K": [[5, 11], [6, 12]], "V": [[8, 14], [10, 16]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [77, 78], "Q": [97, 99], "K'": [73, 75], "R": [100, 101], "K": [[60, 66], [61, 67]], "V": [[63, 69], [65, 72]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Munich. Mark likes Los Angeles. Sarah likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n Premise: < Paul likes Saint Petersburg. James likes Incheon. Karen likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [20, 22], "Q": [41, 43], "K'": [17, 18], "R": [44, 45], "K": [[5, 11], [6, 12]], "V": [[8, 14], [10, 16]], "example": [1, 55]}, {"END": [109, 110], "A'": [105, 107], "V'": [77, 78], "Q": [97, 99], "K'": [73, 75], "R": [100, 101], "K": [[60, 66], [61, 67]], "V": [[63, 69], [65, 72]], "example": [56, 111]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Busan attracts Brian. Novosibirsk attracts Kenneth. Birmingham attracts Mary. >. The boys do not want to go to Birmingham\n < Madrid attracts Joseph. Vancouver attracts Daniel. Incheon attracts Maria. >. The boys do not want to go to Incheon\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [17, 19], "Q": [25, 27], "K'": [21, 22], "R": [28, 29], "K": [[6, 15], [7, 16]], "V": [[2, 8], [4, 13]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 68], "V'": [48, 51], "Q": [57, 59], "K'": [53, 54], "R": [60, 61], "K": [[40, 46], [41, 47]], "V": [[37, 42], [38, 44]], "example": [36, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Maria. Milan attracts Jeff. Bangalore attracts Robert. >. The boys do not want to go to Venice\n < Osaka attracts Mark. Rio de Janeiro attracts Karen. Moscow attracts Christopher. >. The boys do not want to go to Rio de Janeiro\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [2, 4], "Q": [22, 24], "K'": [6, 7], "R": [25, 26], "K": [[11, 18], [12, 19]], "V": [[8, 13], [9, 16]], "example": [1, 32]}, {"END": [62, 63], "A'": [63, 66], "V'": [40, 43], "Q": [55, 57], "K'": [45, 47], "R": [58, 59], "K": [[38, 51], [39, 52]], "V": [[34, 48], [36, 49]], "example": [33, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Toronto attracts Sarah. Florence attracts Kenneth. Seoul attracts Elizabeth. >. The girls do not want to go to Florence\n < Seoul attracts Patricia. Vancouver attracts Paul. Tokyo attracts Kevin. >. The boys do not want to go to Seoul\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [7, 8], "Q": [20, 22], "K'": [10, 11], "R": [23, 24], "K": [[5, 16], [6, 17]], "V": [[2, 12], [3, 14]], "example": [1, 29]}, {"END": [59, 60], "A'": [60, 62], "V'": [31, 33], "Q": [52, 54], "K'": [35, 38], "R": [55, 56], "K": [[43, 48], [44, 49]], "V": [[39, 45], [41, 46]], "example": [30, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Washington, D.C attracts Richard. Birmingham attracts Elizabeth. Sydney attracts Barbara. >. The girls do not want to go to Washington, D.C\n < Manchester attracts Michelle. Novosibirsk attracts Daniel. Washington, D.C attracts Margaret. >. The girls do not want to go to Novosibirsk\n", "ranges": [{"END": [31, 32], "A'": [32, 37], "V'": [2, 7], "Q": [24, 26], "K'": [9, 10], "R": [27, 28], "K": [[15, 20], [16, 21]], "V": [[11, 17], [13, 18]], "example": [1, 37]}, {"END": [72, 73], "A'": [73, 78], "V'": [45, 50], "Q": [65, 67], "K'": [52, 53], "R": [68, 69], "K": [[42, 61], [44, 62]], "V": [[39, 54], [40, 59]], "example": [38, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Rome attracts Betty. Seoul attracts Joseph. Chiang Mai attracts Donna. >. The girls do not want to go to Seoul\n < Zurich attracts Donna. Bangkok attracts James. Chiang Mai attracts Sharon. >. The girls do not want to go to Bangkok\n", "ranges": [{"END": [30, 31], "A'": [31, 33], "V'": [7, 9], "Q": [23, 25], "K'": [11, 12], "R": [26, 27], "K": [[5, 18], [6, 20]], "V": [[2, 13], [3, 16]], "example": [1, 33]}, {"END": [66, 67], "A'": [67, 70], "V'": [42, 45], "Q": [59, 61], "K'": [47, 48], "R": [62, 63], "K": [[39, 54], [41, 56]], "V": [[35, 49], [37, 52]], "example": [34, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tokyo attracts Michael. Canberra attracts Robert. Florence attracts Kimberly. >. The boys do not want to go to Florence\n < Sao Paulo attracts Mark. New York attracts Jeff. Pattaya attracts Deborah. >. The boys do not want to go to Pattaya\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [14, 15], "Q": [23, 25], "K'": [17, 20], "R": [26, 27], "K": [[5, 12], [6, 13]], "V": [[2, 7], [3, 10]], "example": [1, 32]}, {"END": [65, 66], "A'": [66, 69], "V'": [47, 50], "Q": [58, 60], "K'": [52, 55], "R": [61, 62], "K": [[39, 45], [40, 46]], "V": [[34, 41], [37, 43]], "example": [33, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Elizabeth. Manchester attracts Thomas. Osaka attracts Susan. >. The girls do not want to go to Manchester\n < Osaka attracts Mary. Milan attracts Christopher. Kyoto attracts Donald. >. The boys do not want to go to Osaka\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [9, 10], "Q": [22, 24], "K'": [12, 13], "R": [25, 26], "K": [[7, 18], [8, 19]], "V": [[2, 14], [5, 16]], "example": [1, 31]}, {"END": [59, 60], "A'": [60, 62], "V'": [33, 35], "Q": [52, 54], "K'": [37, 38], "R": [55, 56], "K": [[42, 48], [43, 49]], "V": [[39, 44], [40, 46]], "example": [32, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Hamburg attracts Sharon. Seoul attracts Michael. London attracts Edward. >. The boys do not want to go to Hamburg\n < Berlin attracts Brian. London attracts Jennifer. Canberra attracts Dorothy. >. The girls do not want to go to Berlin\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [2, 3], "Q": [21, 23], "K'": [5, 7], "R": [24, 25], "K": [[12, 17], [13, 18]], "V": [[8, 14], [10, 15]], "example": [1, 30]}, {"END": [60, 61], "A'": [61, 62], "V'": [32, 33], "Q": [53, 55], "K'": [35, 36], "R": [56, 57], "K": [[40, 48], [42, 50]], "V": [[37, 43], [38, 46]], "example": [31, 62]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Brian. Novosibirsk attracts Kenneth. Birmingham attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Busan? Answer: No\n Premise: < Madrid attracts Jason. Vancouver attracts Joseph. Incheon attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Incheon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [20, 22], "Q": [44, 46], "K'": [24, 25], "R": [47, 48], "K": [[9, 18], [10, 19]], "V": [[5, 11], [7, 16]], "example": [1, 58]}, {"END": [112, 113], "A'": [107, 110], "V'": [74, 77], "Q": [99, 101], "K'": [79, 80], "R": [102, 103], "K": [[66, 72], [67, 73]], "V": [[63, 68], [64, 70]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Brian. Novosibirsk attracts Kenneth. Birmingham attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Busan? Answer: No\n Premise: < Madrid attracts Jason. Vancouver attracts Joseph. Incheon attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Vancouver? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [20, 22], "Q": [44, 46], "K'": [24, 25], "R": [47, 48], "K": [[9, 18], [10, 19]], "V": [[5, 11], [7, 16]], "example": [1, 58]}, {"END": [111, 112], "A'": [107, 109], "V'": [74, 77], "Q": [99, 101], "K'": [79, 80], "R": [102, 103], "K": [[66, 72], [67, 73]], "V": [[63, 68], [64, 70]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Karen. Sao Paulo attracts George. Birmingham attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Helen. Manchester attracts Christopher. Berlin attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [5, 9], "Q": [45, 47], "K'": [11, 13], "R": [48, 49], "K": [[19, 25], [20, 26]], "V": [[14, 21], [17, 23]], "example": [1, 59]}, {"END": [110, 111], "A'": [106, 108], "V'": [64, 66], "Q": [98, 100], "K'": [68, 69], "R": [101, 102], "K": [[73, 78], [74, 79]], "V": [[70, 75], [71, 76]], "example": [60, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Karen. Sao Paulo attracts George. Birmingham attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Helen. Manchester attracts Christopher. Berlin attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Manchester? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [5, 9], "Q": [45, 47], "K'": [11, 13], "R": [48, 49], "K": [[19, 25], [20, 26]], "V": [[14, 21], [17, 23]], "example": [1, 59]}, {"END": [109, 110], "A'": [106, 107], "V'": [64, 66], "Q": [98, 100], "K'": [68, 69], "R": [101, 102], "K": [[73, 78], [74, 79]], "V": [[70, 75], [71, 76]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts William. Chiang Mai attracts John. Barcelona attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Lisa. Toronto attracts Paul. Hamburg attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Toronto? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [20, 21], "Q": [45, 47], "K'": [23, 26], "R": [48, 49], "K": [[11, 18], [12, 19]], "V": [[5, 13], [9, 16]], "example": [1, 61]}, {"END": [113, 114], "A'": [110, 111], "V'": [73, 74], "Q": [102, 104], "K'": [76, 77], "R": [105, 106], "K": [[71, 81], [72, 83]], "V": [[66, 78], [69, 79]], "example": [62, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts William. Chiang Mai attracts John. Barcelona attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Lisa. Toronto attracts Paul. Hamburg attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Pattaya? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [20, 21], "Q": [45, 47], "K'": [23, 26], "R": [48, 49], "K": [[11, 18], [12, 19]], "V": [[5, 13], [9, 16]], "example": [1, 61]}, {"END": [115, 116], "A'": [110, 113], "V'": [73, 74], "Q": [102, 104], "K'": [76, 77], "R": [105, 106], "K": [[71, 81], [72, 83]], "V": [[66, 78], [69, 79]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Nancy. Novosibirsk attracts Charles. Washington, D.C attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Margaret. Busan attracts Sarah. Seoul attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Seoul? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [10, 15], "Q": [47, 49], "K'": [17, 18], "R": [50, 51], "K": [[8, 26], [9, 28]], "V": [[5, 19], [6, 24]], "example": [1, 64]}, {"END": [117, 118], "A'": [113, 115], "V'": [81, 83], "Q": [105, 107], "K'": [85, 86], "R": [108, 109], "K": [[73, 79], [74, 80]], "V": [[69, 75], [71, 77]], "example": [65, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Nancy. Novosibirsk attracts Charles. Washington, D.C attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Margaret. Busan attracts Sarah. Seoul attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Busan? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [10, 15], "Q": [47, 49], "K'": [17, 18], "R": [50, 51], "K": [[8, 26], [9, 28]], "V": [[5, 19], [6, 24]], "example": [1, 64]}, {"END": [117, 118], "A'": [113, 115], "V'": [81, 83], "Q": [105, 107], "K'": [85, 86], "R": [108, 109], "K": [[73, 79], [74, 80]], "V": [[69, 75], [71, 77]], "example": [65, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Joseph. Washington, D.C attracts Deborah. Florence attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Florence? Answer: No\n Premise: < Kyoto attracts Charles. Canberra attracts Sandra. Saint Petersburg attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Canberra? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [5, 8], "Q": [48, 50], "K'": [10, 11], "R": [51, 52], "K": [[19, 26], [22, 29]], "V": [[12, 23], [17, 24]], "example": [1, 61]}, {"END": [117, 118], "A'": [112, 115], "V'": [72, 75], "Q": [104, 106], "K'": [77, 79], "R": [107, 108], "K": [[70, 84], [71, 85]], "V": [[66, 80], [68, 82]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Joseph. Washington, D.C attracts Deborah. Florence attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Florence? Answer: No\n Premise: < Kyoto attracts Charles. Canberra attracts Sandra. Saint Petersburg attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [5, 8], "Q": [48, 50], "K'": [10, 11], "R": [51, 52], "K": [[19, 26], [22, 29]], "V": [[12, 23], [17, 24]], "example": [1, 61]}, {"END": [116, 117], "A'": [112, 114], "V'": [72, 75], "Q": [104, 106], "K'": [77, 79], "R": [107, 108], "K": [[70, 84], [71, 85]], "V": [[66, 80], [68, 82]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Betty. Bras\u00edlia attracts Deborah. Berlin attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Ruth. Chiang Mai attracts Betty. Beijing attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [18, 19], "Q": [41, 43], "K'": [21, 22], "R": [44, 45], "K": [[8, 14], [9, 17]], "V": [[5, 10], [6, 12]], "example": [1, 54]}, {"END": [109, 110], "A'": [104, 107], "V'": [71, 74], "Q": [96, 98], "K'": [76, 77], "R": [99, 100], "K": [[62, 69], [63, 70]], "V": [[59, 64], [60, 67]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Betty. Bras\u00edlia attracts Deborah. Berlin attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Ruth. Chiang Mai attracts Betty. Beijing attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [18, 19], "Q": [41, 43], "K'": [21, 22], "R": [44, 45], "K": [[8, 14], [9, 17]], "V": [[5, 10], [6, 12]], "example": [1, 54]}, {"END": [109, 110], "A'": [104, 107], "V'": [71, 74], "Q": [96, 98], "K'": [76, 77], "R": [99, 100], "K": [[62, 69], [63, 70]], "V": [[59, 64], [60, 67]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Richard. London attracts Michelle. Ottawa attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Ottawa? Answer: No\n Premise: < Berlin attracts Brian. London attracts Jennifer. Canberra attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Berlin? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [5, 7], "Q": [41, 43], "K'": [9, 10], "R": [44, 45], "K": [[14, 21], [16, 22]], "V": [[11, 17], [12, 19]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [60, 61], "Q": [97, 99], "K'": [63, 64], "R": [100, 101], "K": [[68, 76], [70, 78]], "V": [[65, 71], [66, 74]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Richard. London attracts Michelle. Ottawa attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Ottawa? Answer: No\n Premise: < Berlin attracts Brian. London attracts Jennifer. Canberra attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to London? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [5, 7], "Q": [41, 43], "K'": [9, 10], "R": [44, 45], "K": [[14, 21], [16, 22]], "V": [[11, 17], [12, 19]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [60, 61], "Q": [97, 99], "K'": [63, 64], "R": [100, 101], "K": [[68, 76], [70, 78]], "V": [[65, 71], [66, 74]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts George. Los Angeles attracts Mark. Kyoto attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Paul. Incheon attracts James. Paris attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Paris? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [17, 19], "Q": [41, 43], "K'": [21, 22], "R": [44, 45], "K": [[9, 15], [10, 16]], "V": [[5, 11], [7, 13]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [73, 74], "Q": [97, 99], "K'": [76, 78], "R": [100, 101], "K": [[64, 71], [65, 72]], "V": [[60, 66], [62, 69]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts George. Los Angeles attracts Mark. Kyoto attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Paul. Incheon attracts James. Paris attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [17, 19], "Q": [41, 43], "K'": [21, 22], "R": [44, 45], "K": [[9, 15], [10, 16]], "V": [[5, 11], [7, 13]], "example": [1, 55]}, {"END": [109, 110], "A'": [105, 107], "V'": [73, 74], "Q": [97, 99], "K'": [76, 78], "R": [100, 101], "K": [[64, 71], [65, 72]], "V": [[60, 66], [62, 69]], "example": [56, 111]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Shanghai. Sandra likes Novosibirsk. Ronald likes Bangkok. >. So who wants to go to Bangkok? the boy\n < Edward likes Geneva. Kevin likes Canberra. Nancy likes Kyoto. >. So who wants to go to Kyoto? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [19, 21], "Q": [35, 38], "K": [23, 26], "R": null, "K'": [[6, 13], [8, 18]], "V'": [[2, 9], [4, 11]], "example": [1, 41]}, {"END": [73, 74], "A": [74, 75], "V": [56, 57], "Q": [70, 72], "K": [59, 61], "R": null, "K'": [[46, 52], [48, 55]], "V'": [[43, 49], [44, 50]], "example": [42, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jason likes London. Susan likes Novosibirsk. Kenneth likes Kyoto. >. So who wants to go to Novosibirsk? the girl\n < Dorothy likes Rio de Janeiro. Nancy likes Paris. David likes Venice. >. So who wants to go to Venice? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [7, 8], "Q": [30, 35], "K": [10, 15], "R": null, "K'": [[5, 19], [6, 21]], "V'": [[2, 16], [3, 17]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [53, 54], "Q": [67, 69], "K": [56, 58], "R": null, "K'": [[44, 51], [47, 52]], "V'": [[40, 48], [42, 49]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark likes New York. Nancy likes Vancouver. Sharon likes Florence. >. So who wants to go to New York? the boy\n < Robert likes Bangkok. Karen likes Busan. Donna likes Lyon. >. So who wants to go to Bangkok? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [28, 30], "K": [5, 7], "R": null, "K'": [[11, 18], [13, 19]], "V'": [[8, 14], [9, 16]], "example": [1, 33]}, {"END": [67, 68], "A": [68, 69], "V": [35, 36], "Q": [63, 66], "K": [38, 41], "R": null, "K'": [[46, 53], [48, 54]], "V'": [[42, 49], [44, 51]], "example": [34, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Edward likes Washington, D.C. Steven likes Sydney. Sharon likes Chiang Mai. >. So who wants to go to Chiang Mai? the girl\n < Thomas likes Zurich. Kimberly likes Tokyo. Carol likes Kyoto. >. So who wants to go to Zurich? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [16, 18], "Q": [32, 35], "K": [20, 23], "R": null, "K'": [[5, 14], [10, 15]], "V'": [[2, 11], [3, 12]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [40, 41], "Q": [67, 69], "K": [43, 45], "R": null, "K'": [[51, 56], [52, 58]], "V'": [[46, 53], [49, 54]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kevin likes Chiang Mai. Patricia likes Seoul. James likes Rome. >. So who wants to go to Seoul? the girl\n < Mark likes Zurich. Deborah likes Bangkok. John likes Chiang Mai. >. So who wants to go to Bangkok? the girl\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [9, 12], "Q": [30, 32], "K": [14, 16], "R": null, "K'": [[5, 20], [8, 21]], "V'": [[2, 17], [3, 18]], "example": [1, 35]}, {"END": [71, 72], "A": [72, 73], "V": [43, 46], "Q": [67, 70], "K": [48, 51], "R": null, "K'": [[40, 55], [42, 58]], "V'": [[37, 52], [38, 53]], "example": [36, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes Tokyo. Betty likes New Delhi. Deborah likes London. >. So who wants to go to Tokyo? the boy\n < Donald likes Sao Paulo. Laura likes Sydney. Karen likes Geneva. >. So who wants to go to Sao Paulo? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [29, 30], "K": [5, 6], "R": null, "K'": [[10, 19], [13, 20]], "V'": [[7, 14], [8, 17]], "example": [1, 33]}, {"END": [66, 67], "A": [67, 68], "V": [35, 36], "Q": [62, 65], "K": [38, 41], "R": null, "K'": [[45, 51], [46, 53]], "V'": [[42, 47], [43, 49]], "example": [34, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Helen likes Mumbai. Elizabeth likes Rio de Janeiro. Christopher likes Rome. >. So who wants to go to Rome? the boy\n < Mark likes Rome. Sharon likes Canberra. Michelle likes Geneva. >. So who wants to go to Rome? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [16, 17], "Q": [29, 30], "K": [19, 20], "R": null, "K'": [[5, 12], [8, 15]], "V'": [[2, 9], [3, 10]], "example": [1, 33]}, {"END": [65, 66], "A": [66, 67], "V": [35, 36], "Q": [63, 64], "K": [38, 39], "R": null, "K'": [[44, 52], [47, 54]], "V'": [[40, 48], [42, 50]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Munich. Linda likes Valencia. Paul likes Milan. >. So who wants to go to Milan? the boy\n < Christopher likes Birmingham. Nancy likes Bras\u00edlia. Kevin likes Munich. >. So who wants to go to Bras\u00edlia? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [16, 17], "Q": [29, 30], "K": [19, 20], "R": null, "K'": [[6, 13], [8, 15]], "V'": [[2, 9], [4, 11]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 66], "V": [41, 42], "Q": [61, 63], "K": [44, 46], "R": null, "K'": [[38, 50], [40, 52]], "V'": [[35, 47], [36, 48]], "example": [34, 66]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Shanghai. Sandra likes Novosibirsk. Ronald likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is the girl? Answer: No\n Premise: < Edward likes Bangalore. Kevin likes Geneva. Nancy likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [22, 24], "Q": [55, 58], "K": [26, 29], "R": null, "K'": [[9, 16], [11, 21]], "V'": [[5, 12], [7, 14]], "example": [1, 65]}, {"END": [119, 120], "A": [115, 117], "V": [83, 84], "Q": [113, 114], "K": [86, 87], "R": null, "K'": [[73, 80], [76, 82]], "V'": [[70, 77], [71, 78]], "example": [66, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Shanghai. Sandra likes Novosibirsk. Ronald likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is the girl? Answer: No\n Premise: < Edward likes Bangalore. Kevin likes Geneva. Nancy likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [22, 24], "Q": [55, 58], "K": [26, 29], "R": null, "K'": [[9, 16], [11, 21]], "V'": [[5, 12], [7, 14]], "example": [1, 65]}, {"END": [119, 120], "A": [115, 117], "V": [83, 84], "Q": [113, 114], "K": [86, 87], "R": null, "K'": [[73, 80], [76, 82]], "V'": [[70, 77], [71, 78]], "example": [66, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Guangzhou. Lisa likes Milan. Anthony likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Milan is the boy? Answer: No\n Premise: < Donna likes Pattaya. William likes Kyoto. Kevin likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Pattaya is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [13, 14], "Q": [49, 50], "K": [16, 17], "R": null, "K'": [[8, 21], [12, 23]], "V'": [[5, 18], [6, 19]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [62, 64], "Q": [106, 109], "K": [66, 69], "R": null, "K'": [[73, 79], [75, 80]], "V'": [[70, 76], [71, 77]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Guangzhou. Lisa likes Milan. Anthony likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Milan is the boy? Answer: No\n Premise: < Donna likes Pattaya. William likes Kyoto. Kevin likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Pattaya is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [13, 14], "Q": [49, 50], "K": [16, 17], "R": null, "K'": [[8, 21], [12, 23]], "V'": [[5, 18], [6, 19]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [62, 64], "Q": [106, 109], "K": [66, 69], "R": null, "K'": [[73, 79], [75, 80]], "V'": [[70, 76], [71, 77]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Brisbane. Linda likes Chiang Mai. Daniel likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is the boy? Answer: Yes\n Premise: < Michelle likes Toronto. Daniel likes Hamburg. Brian likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [22, 23], "Q": [52, 53], "K": [25, 26], "R": null, "K'": [[9, 18], [13, 21]], "V'": [[5, 14], [7, 16]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [65, 67], "Q": [108, 109], "K": [69, 70], "R": null, "K'": [[74, 79], [75, 82]], "V'": [[71, 76], [72, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Brisbane. Linda likes Chiang Mai. Daniel likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is the boy? Answer: Yes\n Premise: < Michelle likes Toronto. Daniel likes Hamburg. Brian likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [22, 23], "Q": [52, 53], "K": [25, 26], "R": null, "K'": [[9, 18], [13, 21]], "V'": [[5, 14], [7, 16]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [65, 67], "Q": [108, 109], "K": [69, 70], "R": null, "K'": [[74, 79], [75, 82]], "V'": [[71, 76], [72, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Seoul. Kenneth likes Mumbai. Mark likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is the boy? Answer: No\n Premise: < Jeff likes Madrid. Margaret likes Manchester. John likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Manchester is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [49, 51], "K": [8, 10], "R": null, "K'": [[14, 21], [17, 23]], "V'": [[11, 18], [12, 19]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [68, 69], "Q": [104, 105], "K": [71, 72], "R": null, "K'": [[66, 76], [67, 78]], "V'": [[63, 73], [64, 74]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Seoul. Kenneth likes Mumbai. Mark likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is the boy? Answer: No\n Premise: < Jeff likes Madrid. Margaret likes Manchester. John likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Manchester is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [49, 51], "K": [8, 10], "R": null, "K'": [[14, 21], [17, 23]], "V'": [[11, 18], [12, 19]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [68, 69], "Q": [104, 105], "K": [71, 72], "R": null, "K'": [[66, 76], [67, 78]], "V'": [[63, 73], [64, 74]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Marseille. Jeff likes Tokyo. Mark likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Marseille is the girl? Answer: Yes\n Premise: < William likes Toronto. Charles likes Sao Paulo. Dorothy likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [48, 50], "K": [8, 10], "R": null, "K'": [[14, 19], [15, 22]], "V'": [[11, 16], [12, 17]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [74, 76], "Q": [105, 106], "K": [78, 79], "R": null, "K'": [[65, 70], [66, 73]], "V'": [[62, 67], [63, 68]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Marseille. Jeff likes Tokyo. Mark likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Marseille is the girl? Answer: Yes\n Premise: < William likes Toronto. Charles likes Sao Paulo. Dorothy likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [48, 50], "K": [8, 10], "R": null, "K'": [[14, 19], [15, 22]], "V'": [[11, 16], [12, 17]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [74, 76], "Q": [105, 106], "K": [78, 79], "R": null, "K'": [[65, 70], [66, 73]], "V'": [[62, 67], [63, 68]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Osaka. Ronald likes Kyoto. Mark likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Osaka is the girl? Answer: Yes\n Premise: < Sarah likes London. David likes Madrid. Brian likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to London is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [48, 50], "K": [8, 10], "R": null, "K'": [[15, 21], [17, 22]], "V'": [[11, 18], [13, 19]], "example": [1, 57]}, {"END": [109, 110], "A": [105, 107], "V": [62, 63], "Q": [103, 104], "K": [65, 66], "R": null, "K'": [[70, 75], [71, 77]], "V'": [[67, 72], [68, 73]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Osaka. Ronald likes Kyoto. Mark likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Osaka is the girl? Answer: Yes\n Premise: < Sarah likes London. David likes Madrid. Brian likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to London is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [48, 50], "K": [8, 10], "R": null, "K'": [[15, 21], [17, 22]], "V'": [[11, 18], [13, 19]], "example": [1, 57]}, {"END": [109, 110], "A": [105, 107], "V": [62, 63], "Q": [103, 104], "K": [65, 66], "R": null, "K'": [[70, 75], [71, 77]], "V'": [[67, 72], [68, 73]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Canberra. Nancy likes Rio de Janeiro. Deborah likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is the boy? Answer: Yes\n Premise: < Steven likes Venice. Anthony likes New York. Sarah likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [5, 6], "Q": [51, 54], "K": [8, 11], "R": null, "K'": [[15, 24], [18, 25]], "V'": [[12, 19], [13, 22]], "example": [1, 61]}, {"END": [114, 115], "A": [110, 112], "V": [78, 79], "Q": [108, 109], "K": [81, 82], "R": null, "K'": [[69, 75], [71, 77]], "V'": [[66, 72], [67, 73]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Canberra. Nancy likes Rio de Janeiro. Deborah likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is the boy? Answer: Yes\n Premise: < Steven likes Venice. Anthony likes New York. Sarah likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [5, 6], "Q": [51, 54], "K": [8, 11], "R": null, "K'": [[15, 24], [18, 25]], "V'": [[12, 19], [13, 22]], "example": [1, 61]}, {"END": [114, 115], "A": [110, 112], "V": [78, 79], "Q": [108, 109], "K": [81, 82], "R": null, "K'": [[69, 75], [71, 77]], "V'": [[66, 72], [67, 73]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Tokyo. Daniel likes Kyoto. Edward likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is the girl? Answer: Yes\n Premise: < Jeff likes Brisbane. Sarah likes Toronto. Robert likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [5, 7], "Q": [48, 49], "K": [9, 10], "R": null, "K'": [[14, 20], [16, 22]], "V'": [[11, 17], [12, 18]], "example": [1, 56]}, {"END": [110, 111], "A": [106, 108], "V": [69, 70], "Q": [104, 105], "K": [72, 73], "R": null, "K'": [[64, 77], [68, 78]], "V'": [[61, 74], [62, 75]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Tokyo. Daniel likes Kyoto. Edward likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is the girl? Answer: Yes\n Premise: < Jeff likes Brisbane. Sarah likes Toronto. Robert likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [5, 7], "Q": [48, 49], "K": [9, 10], "R": null, "K'": [[14, 20], [16, 22]], "V'": [[11, 17], [12, 18]], "example": [1, 56]}, {"END": [110, 111], "A": [106, 108], "V": [69, 70], "Q": [104, 105], "K": [72, 73], "R": null, "K'": [[64, 77], [68, 78]], "V'": [[61, 74], [62, 75]], "example": [57, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Shanghai attracts Sharon. Novosibirsk attracts Sandra. Bangkok attracts Ronald. >. So who wants to go to Bangkok? the boy\n < Geneva attracts Edward. Canberra attracts Kevin. Kyoto attracts Nancy. >. So who wants to go to Kyoto? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [24, 26], "Q": [35, 38], "K": [19, 22], "R": null, "K'": [[2, 9], [4, 14]], "V'": [[6, 16], [8, 18]], "example": [1, 41]}, {"END": [73, 74], "A": [74, 75], "V": [60, 61], "Q": [70, 72], "K": [56, 58], "R": null, "K'": [[43, 49], [45, 52]], "V'": [[47, 54], [48, 55]], "example": [42, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< London attracts Jason. Novosibirsk attracts Susan. Kyoto attracts Kenneth. >. So who wants to go to Novosibirsk? the girl\n < Rio de Janeiro attracts Dorothy. Paris attracts Nancy. Venice attracts David. >. So who wants to go to Venice? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [14, 15], "Q": [30, 35], "K": [7, 12], "R": null, "K'": [[2, 16], [3, 18]], "V'": [[5, 20], [6, 21]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [57, 58], "Q": [67, 69], "K": [53, 55], "R": null, "K'": [[40, 48], [43, 49]], "V'": [[45, 51], [47, 52]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< New York attracts Mark. Vancouver attracts Nancy. Florence attracts Sharon. >. So who wants to go to New York? the boy\n < Bangkok attracts Robert. Busan attracts Karen. Lyon attracts Donna. >. So who wants to go to Bangkok? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [6, 7], "Q": [28, 30], "K": [2, 4], "R": null, "K'": [[8, 14], [10, 15]], "V'": [[12, 17], [13, 19]], "example": [1, 33]}, {"END": [67, 68], "A": [68, 69], "V": [40, 41], "Q": [63, 66], "K": [35, 38], "R": null, "K'": [[42, 49], [44, 50]], "V'": [[46, 52], [48, 54]], "example": [34, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Washington, D.C attracts Edward. Sydney attracts Steven. Chiang Mai attracts Sharon. >. So who wants to go to Chiang Mai? the girl\n < Zurich attracts Thomas. Tokyo attracts Kimberly. Kyoto attracts Carol. >. So who wants to go to Zurich? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [21, 23], "Q": [32, 35], "K": [16, 19], "R": null, "K'": [[2, 11], [7, 12]], "V'": [[9, 14], [10, 15]], "example": [1, 38]}, {"END": [70, 71], "A": [71, 72], "V": [44, 45], "Q": [67, 69], "K": [40, 42], "R": null, "K'": [[46, 53], [47, 55]], "V'": [[49, 57], [52, 58]], "example": [39, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Chiang Mai attracts Kevin. Seoul attracts Patricia. Rome attracts James. >. So who wants to go to Seoul? the girl\n < Zurich attracts Mark. Bangkok attracts Deborah. Chiang Mai attracts John. >. So who wants to go to Bangkok? the girl\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [13, 16], "Q": [30, 32], "K": [9, 11], "R": null, "K'": [[2, 17], [5, 18]], "V'": [[7, 20], [8, 21]], "example": [1, 35]}, {"END": [71, 72], "A": [72, 73], "V": [48, 51], "Q": [67, 70], "K": [43, 46], "R": null, "K'": [[37, 52], [39, 55]], "V'": [[41, 57], [42, 58]], "example": [36, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Tokyo attracts Jeff. New Delhi attracts Betty. London attracts Deborah. >. So who wants to go to Tokyo? the boy\n < Sao Paulo attracts Donald. Sydney attracts Laura. Geneva attracts Karen. >. So who wants to go to Sao Paulo? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [5, 6], "Q": [29, 30], "K": [2, 3], "R": null, "K'": [[7, 14], [10, 15]], "V'": [[12, 17], [13, 20]], "example": [1, 33]}, {"END": [66, 67], "A": [67, 68], "V": [40, 41], "Q": [62, 65], "K": [35, 38], "R": null, "K'": [[42, 47], [43, 49]], "V'": [[45, 51], [46, 53]], "example": [34, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Mumbai attracts Helen. Rio de Janeiro attracts Elizabeth. Rome attracts Christopher. >. So who wants to go to Rome? the boy\n < Rome attracts Mark. Canberra attracts Sharon. Geneva attracts Michelle. >. So who wants to go to Rome? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [19, 20], "Q": [29, 30], "K": [16, 17], "R": null, "K'": [[2, 9], [5, 12]], "V'": [[7, 14], [8, 15]], "example": [1, 33]}, {"END": [65, 66], "A": [66, 67], "V": [38, 39], "Q": [63, 64], "K": [35, 36], "R": null, "K'": [[40, 48], [43, 50]], "V'": [[45, 52], [47, 54]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Munich attracts Sharon. Valencia attracts Linda. Milan attracts Paul. >. So who wants to go to Milan? the boy\n < Birmingham attracts Christopher. Bras\u00edlia attracts Nancy. Munich attracts Kevin. >. So who wants to go to Bras\u00edlia? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [19, 20], "Q": [29, 30], "K": [16, 17], "R": null, "K'": [[2, 9], [4, 11]], "V'": [[6, 13], [8, 15]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 66], "V": [45, 46], "Q": [61, 63], "K": [41, 43], "R": null, "K'": [[35, 47], [37, 49]], "V'": [[39, 51], [40, 52]], "example": [34, 66]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Shanghai attracts Sharon. Novosibirsk attracts Sandra. Bangkok attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is the girl? Answer: No\n Premise: < Bangalore attracts Edward. Geneva attracts Kevin. Toronto attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [27, 29], "Q": [55, 58], "K": [22, 25], "R": null, "K'": [[5, 12], [7, 17]], "V'": [[9, 19], [11, 21]], "example": [1, 65]}, {"END": [119, 120], "A": [115, 117], "V": [86, 87], "Q": [113, 114], "K": [83, 84], "R": null, "K'": [[70, 77], [73, 79]], "V'": [[75, 81], [76, 82]], "example": [66, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Shanghai attracts Sharon. Novosibirsk attracts Sandra. Bangkok attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is the girl? Answer: No\n Premise: < Bangalore attracts Edward. Geneva attracts Kevin. Toronto attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [27, 29], "Q": [55, 58], "K": [22, 25], "R": null, "K'": [[5, 12], [7, 17]], "V'": [[9, 19], [11, 21]], "example": [1, 65]}, {"END": [119, 120], "A": [115, 117], "V": [86, 87], "Q": [113, 114], "K": [83, 84], "R": null, "K'": [[70, 77], [73, 79]], "V'": [[75, 81], [76, 82]], "example": [66, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Mark. Milan attracts Lisa. Saint Petersburg attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Milan is the boy? Answer: No\n Premise: < Pattaya attracts Donna. Kyoto attracts William. Paris attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Pattaya is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [16, 17], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 18], [9, 20]], "V'": [[11, 22], [12, 23]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [67, 69], "Q": [106, 109], "K": [62, 65], "R": null, "K'": [[70, 76], [72, 77]], "V'": [[74, 79], [75, 80]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Mark. Milan attracts Lisa. Saint Petersburg attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Milan is the boy? Answer: No\n Premise: < Pattaya attracts Donna. Kyoto attracts William. Paris attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Pattaya is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [16, 17], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 18], [9, 20]], "V'": [[11, 22], [12, 23]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [67, 69], "Q": [106, 109], "K": [62, 65], "R": null, "K'": [[70, 76], [72, 77]], "V'": [[74, 79], [75, 80]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Jennifer. Chiang Mai attracts Linda. Barcelona attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is the boy? Answer: Yes\n Premise: < Toronto attracts Michelle. Hamburg attracts Daniel. Pattaya attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [25, 26], "Q": [52, 53], "K": [22, 23], "R": null, "K'": [[5, 14], [9, 17]], "V'": [[11, 19], [13, 21]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [68, 70], "Q": [108, 109], "K": [65, 66], "R": null, "K'": [[71, 76], [72, 79]], "V'": [[74, 81], [75, 82]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Jennifer. Chiang Mai attracts Linda. Barcelona attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Barcelona is the boy? Answer: Yes\n Premise: < Toronto attracts Michelle. Hamburg attracts Daniel. Pattaya attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [25, 26], "Q": [52, 53], "K": [22, 23], "R": null, "K'": [[5, 14], [9, 17]], "V'": [[11, 19], [13, 21]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [68, 70], "Q": [108, 109], "K": [65, 66], "R": null, "K'": [[71, 76], [72, 79]], "V'": [[74, 81], [75, 82]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Margaret. Mumbai attracts Kenneth. Osaka attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is the boy? Answer: No\n Premise: < Madrid attracts Jeff. Manchester attracts Margaret. Los Angeles attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Manchester is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [9, 10], "Q": [49, 51], "K": [5, 7], "R": null, "K'": [[11, 18], [14, 20]], "V'": [[16, 22], [17, 23]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [71, 72], "Q": [104, 105], "K": [68, 69], "R": null, "K'": [[63, 73], [64, 75]], "V'": [[66, 77], [67, 78]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Margaret. Mumbai attracts Kenneth. Osaka attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is the boy? Answer: No\n Premise: < Madrid attracts Jeff. Manchester attracts Margaret. Los Angeles attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Manchester is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [9, 10], "Q": [49, 51], "K": [5, 7], "R": null, "K'": [[11, 18], [14, 20]], "V'": [[16, 22], [17, 23]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [71, 72], "Q": [104, 105], "K": [68, 69], "R": null, "K'": [[63, 73], [64, 75]], "V'": [[66, 77], [67, 78]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Marseille attracts Lisa. Tokyo attracts Jeff. Canberra attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Marseille is the girl? Answer: Yes\n Premise: < Toronto attracts William. Sao Paulo attracts Charles. Sydney attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [9, 10], "Q": [48, 50], "K": [5, 7], "R": null, "K'": [[11, 16], [12, 19]], "V'": [[14, 21], [15, 22]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [77, 79], "Q": [105, 106], "K": [74, 75], "R": null, "K'": [[62, 67], [63, 70]], "V'": [[65, 72], [66, 73]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Marseille attracts Lisa. Tokyo attracts Jeff. Canberra attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Marseille is the girl? Answer: Yes\n Premise: < Toronto attracts William. Sao Paulo attracts Charles. Sydney attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sydney is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [9, 10], "Q": [48, 50], "K": [5, 7], "R": null, "K'": [[11, 16], [12, 19]], "V'": [[14, 21], [15, 22]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [77, 79], "Q": [105, 106], "K": [74, 75], "R": null, "K'": [[62, 67], [63, 70]], "V'": [[65, 72], [66, 73]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Osaka attracts Maria. Kyoto attracts Ronald. Milan attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Osaka is the girl? Answer: Yes\n Premise: < London attracts Sarah. Madrid attracts David. Seoul attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to London is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [9, 10], "Q": [48, 50], "K": [5, 7], "R": null, "K'": [[11, 18], [13, 19]], "V'": [[15, 21], [17, 22]], "example": [1, 57]}, {"END": [109, 110], "A": [105, 107], "V": [65, 66], "Q": [103, 104], "K": [62, 63], "R": null, "K'": [[67, 72], [68, 74]], "V'": [[70, 76], [71, 77]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Osaka attracts Maria. Kyoto attracts Ronald. Milan attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Osaka is the girl? Answer: Yes\n Premise: < London attracts Sarah. Madrid attracts David. Seoul attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to London is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [9, 10], "Q": [48, 50], "K": [5, 7], "R": null, "K'": [[11, 18], [13, 19]], "V'": [[15, 21], [17, 22]], "example": [1, 57]}, {"END": [109, 110], "A": [105, 107], "V": [65, 66], "Q": [103, 104], "K": [62, 63], "R": null, "K'": [[67, 72], [68, 74]], "V'": [[70, 76], [71, 77]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Christopher. Rio de Janeiro attracts Nancy. Barcelona attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is the boy? Answer: Yes\n Premise: < Venice attracts Steven. New York attracts Anthony. Berlin attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [51, 54], "K": [5, 8], "R": null, "K'": [[12, 19], [15, 20]], "V'": [[17, 22], [18, 25]], "example": [1, 61]}, {"END": [114, 115], "A": [110, 112], "V": [81, 82], "Q": [108, 109], "K": [78, 79], "R": null, "K'": [[66, 72], [68, 74]], "V'": [[70, 76], [71, 77]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Christopher. Rio de Janeiro attracts Nancy. Barcelona attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is the boy? Answer: Yes\n Premise: < Venice attracts Steven. New York attracts Anthony. Berlin attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Berlin is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [51, 54], "K": [5, 8], "R": null, "K'": [[12, 19], [15, 20]], "V'": [[17, 22], [18, 25]], "example": [1, 61]}, {"END": [114, 115], "A": [110, 112], "V": [81, 82], "Q": [108, 109], "K": [78, 79], "R": null, "K'": [[66, 72], [68, 74]], "V'": [[70, 76], [71, 77]], "example": [62, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Tokyo attracts Sandra. Kyoto attracts Daniel. Ottawa attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is the girl? Answer: Yes\n Premise: < Brisbane attracts Jeff. Toronto attracts Sarah. Sydney attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the girl? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [8, 10], "Q": [48, 49], "K": [5, 6], "R": null, "K'": [[11, 17], [13, 19]], "V'": [[15, 21], [16, 22]], "example": [1, 56]}, {"END": [110, 111], "A": [106, 108], "V": [72, 73], "Q": [104, 105], "K": [69, 70], "R": null, "K'": [[61, 74], [65, 75]], "V'": [[67, 77], [68, 78]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Tokyo attracts Sandra. Kyoto attracts Daniel. Ottawa attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Tokyo is the girl? Answer: Yes\n Premise: < Brisbane attracts Jeff. Toronto attracts Sarah. Sydney attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Toronto is the boy? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [8, 10], "Q": [48, 49], "K": [5, 6], "R": null, "K'": [[11, 17], [13, 19]], "V'": [[15, 21], [16, 22]], "example": [1, 56]}, {"END": [110, 111], "A": [106, 108], "V": [72, 73], "Q": [104, 105], "K": [69, 70], "R": null, "K'": [[61, 74], [65, 75]], "V'": [[67, 77], [68, 78]], "example": [57, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Nancy likes Manchester. Daniel likes Bangkok. Ronald likes Bangkok. >. The one who wants to go to Bangkok is not the girl\n < Mary likes Guangzhou. Kimberly likes Guangzhou. Joseph likes Osaka. >. The one who wants to go to Guangzhou is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [2, 3], "Q": [31, 34], "K'": [5, 6], "R": [35, 36], "K": [[10, 18], [13, 21]], "V": [[7, 14], [8, 16]], "example": [1, 38]}, {"END": [79, 80], "A'": [80, 81], "V'": [58, 59], "Q": [73, 77], "K'": [61, 63], "R": [78, 79], "K": [[43, 53], [47, 57]], "V": [[40, 48], [41, 51]], "example": [39, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Linda likes Busan. Richard likes Munich. Deborah likes Busan. >. The one who wants to go to Busan is not the boy\n < Betty likes Milan. Sarah likes Milan. Brian likes Hamburg. >. The one who wants to go to Milan is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [9, 10], "Q": [32, 34], "K'": [12, 14], "R": [35, 36], "K": [[6, 20], [8, 22]], "V": [[2, 15], [4, 18]], "example": [1, 38]}, {"END": [67, 68], "A'": [68, 69], "V'": [50, 51], "Q": [64, 65], "K'": [53, 54], "R": [66, 67], "K": [[43, 48], [44, 49]], "V": [[40, 45], [41, 46]], "example": [39, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes Osaka. Lisa likes Incheon. Laura likes Incheon. >. The one who wants to go to Incheon is not the boy\n < Richard likes Barcelona. Susan likes Seoul. Thomas likes Barcelona. >. The one who wants to go to Barcelona is not the girl\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [2, 3], "Q": [31, 34], "K'": [5, 7], "R": [35, 36], "K": [[11, 18], [14, 21]], "V": [[8, 15], [9, 16]], "example": [1, 38]}, {"END": [68, 69], "A'": [69, 70], "V'": [45, 46], "Q": [65, 66], "K'": [48, 50], "R": [67, 68], "K": [[43, 54], [44, 55]], "V": [[40, 51], [41, 52]], "example": [39, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Deborah likes Barcelona. Linda likes Barcelona. Thomas likes Venice. >. The one who wants to go to Barcelona is not the boy\n < Michael likes Berlin. William likes Berlin. Maria likes Brisbane. >. The one who wants to go to Berlin is not the girl\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [15, 16], "Q": [30, 31], "K'": [18, 20], "R": [32, 33], "K": [[7, 13], [8, 14]], "V": [[2, 9], [5, 11]], "example": [1, 35]}, {"END": [67, 68], "A'": [68, 69], "V'": [47, 48], "Q": [64, 65], "K'": [50, 54], "R": [66, 67], "K": [[40, 45], [41, 46]], "V": [[37, 42], [38, 43]], "example": [36, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Barbara likes New Delhi. Lisa likes New Delhi. Joseph likes Berlin. >. The one who wants to go to New Delhi is not the boy\n < Jason likes Seoul. Karen likes Munich. Kevin likes Seoul. >. The one who wants to go to Seoul is not the girl\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [16, 17], "Q": [30, 33], "K'": [19, 20], "R": [34, 35], "K": [[5, 12], [8, 15]], "V": [[2, 9], [3, 10]], "example": [1, 37]}, {"END": [71, 72], "A'": [72, 73], "V'": [45, 47], "Q": [67, 69], "K'": [49, 51], "R": [70, 71], "K": [[42, 55], [44, 57]], "V": [[39, 52], [40, 53]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mary likes Rome. Brian likes Manchester. Kenneth likes Manchester. >. The one who wants to go to Manchester is not the girl\n < Patricia likes Bangkok. Charles likes Zurich. Deborah likes Bangkok. >. The one who wants to go to Bangkok is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [26, 27], "K'": [5, 6], "R": [28, 29], "K": [[10, 15], [11, 16]], "V": [[7, 12], [8, 13]], "example": [1, 31]}, {"END": [71, 72], "A'": [72, 73], "V'": [42, 43], "Q": [66, 69], "K'": [45, 47], "R": [70, 71], "K": [[38, 53], [41, 56]], "V": [[33, 48], [36, 51]], "example": [32, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Brian likes Paris. Barbara likes Tokyo. Lisa likes Tokyo. >. The one who wants to go to Tokyo is not the boy\n < Maria likes New York. Jeff likes Sao Paulo. Mark likes Sao Paulo. >. The one who wants to go to Sao Paulo is not the girl\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [26, 27], "K'": [5, 6], "R": [28, 29], "K": [[10, 15], [11, 16]], "V": [[7, 12], [8, 13]], "example": [1, 31]}, {"END": [67, 68], "A'": [68, 69], "V'": [33, 34], "Q": [62, 65], "K'": [36, 38], "R": [66, 67], "K": [[42, 49], [45, 52]], "V": [[39, 46], [40, 47]], "example": [32, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Betty likes Canberra. Nancy likes Canberra. Edward likes Vancouver. >. The one who wants to go to Canberra is not the boy\n < Nancy likes Vancouver. Joseph likes Osaka. Donna likes Vancouver. >. The one who wants to go to Vancouver is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [16, 17], "Q": [31, 34], "K'": [19, 21], "R": [35, 36], "K": [[5, 12], [8, 15]], "V": [[2, 9], [3, 10]], "example": [1, 38]}, {"END": [72, 73], "A'": [73, 74], "V'": [46, 47], "Q": [68, 70], "K'": [49, 51], "R": [71, 72], "K": [[43, 56], [45, 58]], "V": [[40, 52], [41, 54]], "example": [39, 74]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Manchester. Daniel likes Bangkok. Ronald likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: Yes\n Premise: < Mark likes Birmingham. Helen likes Shanghai. Maria likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [5, 6], "Q": [50, 53], "K'": [8, 9], "R": [54, 55], "K": [[13, 21], [16, 24]], "V": [[10, 17], [11, 19]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [66, 67], "Q": [109, 111], "K'": [69, 71], "R": [112, 113], "K": [[75, 81], [77, 83]], "V": [[72, 78], [73, 79]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Manchester. Daniel likes Bangkok. Ronald likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: Yes\n Premise: < Mark likes Birmingham. Helen likes Shanghai. Maria likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [5, 6], "Q": [50, 53], "K'": [8, 9], "R": [54, 55], "K": [[13, 21], [16, 24]], "V": [[10, 17], [11, 19]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [66, 67], "Q": [109, 111], "K'": [69, 71], "R": [112, 113], "K": [[75, 81], [77, 83]], "V": [[72, 78], [73, 79]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes Kyoto. Kimberly likes Munich. Kenneth likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is not the boy? Answer: No\n Premise: < Lisa likes Bangkok. Jennifer likes Bangkok. Donald likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [11, 14], "Q": [50, 52], "K'": [16, 18], "R": [53, 54], "K": [[8, 22], [10, 24]], "V": [[5, 19], [6, 20]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [80, 81], "Q": [112, 115], "K'": [83, 86], "R": [116, 117], "K": [[68, 76], [71, 79]], "V": [[65, 72], [66, 74]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes Kyoto. Kimberly likes Munich. Kenneth likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is not the boy? Answer: No\n Premise: < Lisa likes Bangkok. Jennifer likes Bangkok. Donald likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [11, 14], "Q": [50, 52], "K'": [16, 18], "R": [53, 54], "K": [[8, 22], [10, 24]], "V": [[5, 19], [6, 20]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [80, 81], "Q": [112, 115], "K'": [83, 86], "R": [116, 117], "K": [[68, 76], [71, 79]], "V": [[65, 72], [66, 74]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Moscow. Nancy likes Busan. Sharon likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Busan is not the girl? Answer: No\n Premise: < Robert likes Lyon. Karen likes Seoul. Donna likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 6], "Q": [48, 50], "K'": [8, 9], "R": [51, 52], "K": [[13, 20], [15, 22]], "V": [[10, 16], [11, 18]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [63, 64], "Q": [107, 109], "K'": [66, 67], "R": [110, 111], "K": [[72, 79], [74, 81]], "V": [[68, 75], [70, 77]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Moscow. Nancy likes Busan. Sharon likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Busan is not the girl? Answer: No\n Premise: < Robert likes Lyon. Karen likes Seoul. Donna likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 6], "Q": [48, 50], "K'": [8, 9], "R": [51, 52], "K": [[13, 20], [15, 22]], "V": [[10, 16], [11, 18]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [63, 64], "Q": [107, 109], "K'": [66, 67], "R": [110, 111], "K": [[72, 79], [74, 81]], "V": [[68, 75], [70, 77]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel likes Saint Petersburg. Ronald likes Saint Petersburg. Susan likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Petersburg is not the boy? Answer: No\n Premise: < Karen likes Bangkok. Paul likes New York. Kimberly likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [18, 19], "Q": [50, 52], "K'": [21, 24], "R": [53, 54], "K": [[8, 15], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 60]}, {"END": [122, 123], "A'": [118, 120], "V'": [73, 74], "Q": [113, 116], "K'": [76, 78], "R": [117, 118], "K": [[69, 84], [72, 87]], "V": [[65, 79], [67, 82]], "example": [61, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel likes Saint Petersburg. Ronald likes Saint Petersburg. Susan likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Petersburg is not the boy? Answer: No\n Premise: < Karen likes Bangkok. Paul likes New York. Kimberly likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [18, 19], "Q": [50, 52], "K'": [21, 24], "R": [53, 54], "K": [[8, 15], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 60]}, {"END": [122, 123], "A'": [118, 120], "V'": [73, 74], "Q": [113, 116], "K'": [76, 78], "R": [117, 118], "K": [[69, 84], [72, 87]], "V": [[65, 79], [67, 82]], "example": [61, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth likes Moscow. William likes Sydney. Laura likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not the girl? Answer: No\n Premise: < Laura likes Mumbai. Charles likes Lyon. Nancy likes Mumbai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mumbai is not the boy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [10, 11], "Q": [45, 46], "K'": [13, 14], "R": [47, 48], "K": [[8, 18], [9, 19]], "V": [[5, 15], [6, 16]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [66, 67], "Q": [103, 106], "K'": [69, 70], "R": [107, 108], "K": [[62, 74], [65, 77]], "V": [[59, 71], [60, 72]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth likes Moscow. William likes Sydney. Laura likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not the girl? Answer: No\n Premise: < Laura likes Mumbai. Charles likes Lyon. Nancy likes Mumbai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mumbai is not the girl? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [10, 11], "Q": [45, 46], "K'": [13, 14], "R": [47, 48], "K": [[8, 18], [9, 19]], "V": [[5, 15], [6, 16]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [66, 67], "Q": [103, 106], "K'": [69, 70], "R": [107, 108], "K": [[62, 74], [65, 77]], "V": [[59, 71], [60, 72]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donald likes Chiang Mai. Laura likes Geneva. Karen likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not the boy? Answer: Yes\n Premise: < Betty likes Canberra. Nancy likes Canberra. Edward likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [5, 6], "Q": [50, 52], "K'": [8, 11], "R": [53, 54], "K": [[15, 22], [17, 24]], "V": [[12, 18], [13, 20]], "example": [1, 60]}, {"END": [119, 120], "A'": [115, 117], "V'": [79, 80], "Q": [110, 113], "K'": [82, 84], "R": [114, 115], "K": [[68, 75], [71, 78]], "V": [[65, 72], [66, 73]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donald likes Chiang Mai. Laura likes Geneva. Karen likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not the boy? Answer: Yes\n Premise: < Betty likes Canberra. Nancy likes Canberra. Edward likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [5, 6], "Q": [50, 52], "K'": [8, 11], "R": [53, 54], "K": [[15, 22], [17, 24]], "V": [[12, 18], [13, 20]], "example": [1, 60]}, {"END": [119, 120], "A'": [115, 117], "V'": [79, 80], "Q": [110, 113], "K'": [82, 84], "R": [114, 115], "K": [[68, 75], [71, 78]], "V": [[65, 72], [66, 73]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Bras\u00edlia. Michael likes Bras\u00edlia. Nancy likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is not the girl? Answer: Yes\n Premise: < Thomas likes Barcelona. Elizabeth likes Munich. Sandra likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Munich is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [17, 18], "Q": [48, 50], "K'": [20, 22], "R": [51, 52], "K": [[8, 14], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 58]}, {"END": [114, 115], "A'": [110, 112], "V'": [63, 64], "Q": [106, 108], "K'": [66, 67], "R": [109, 110], "K": [[71, 78], [73, 80]], "V": [[68, 74], [69, 76]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Bras\u00edlia. Michael likes Bras\u00edlia. Nancy likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is not the girl? Answer: Yes\n Premise: < Thomas likes Barcelona. Elizabeth likes Munich. Sandra likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Munich is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [17, 18], "Q": [48, 50], "K'": [20, 22], "R": [51, 52], "K": [[8, 14], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 58]}, {"END": [114, 115], "A'": [110, 112], "V'": [63, 64], "Q": [106, 108], "K'": [66, 67], "R": [109, 110], "K": [[71, 78], [73, 80]], "V": [[68, 74], [69, 76]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth likes Canberra. Betty likes Canberra. David likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n Premise: < John likes Valencia. Mary likes Bern. Karen likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bern is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [19, 20], "Q": [50, 53], "K'": [22, 24], "R": [54, 55], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [115, 116], "A'": [111, 113], "V'": [66, 67], "Q": [108, 109], "K'": [69, 71], "R": [110, 111], "K": [[75, 81], [76, 82]], "V": [[72, 77], [73, 79]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth likes Canberra. Betty likes Canberra. David likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n Premise: < John likes Valencia. Mary likes Bern. Karen likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bern is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [19, 20], "Q": [50, 53], "K'": [22, 24], "R": [54, 55], "K": [[8, 15], [11, 18]], "V": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [115, 116], "A'": [111, 113], "V'": [66, 67], "Q": [108, 109], "K'": [69, 71], "R": [110, 111], "K": [[75, 81], [76, 82]], "V": [[72, 77], [73, 79]], "example": [62, 117]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Manchester attracts Nancy. Bangkok attracts Daniel. Bangkok attracts Ronald. >. The one who wants to go to Bangkok is not the girl\n < Guangzhou attracts Mary. Guangzhou attracts Kimberly. Osaka attracts Joseph. >. The one who wants to go to Guangzhou is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [5, 6], "Q": [31, 34], "K'": [2, 3], "R": [35, 36], "K": [[7, 14], [10, 17]], "V": [[12, 19], [13, 21]], "example": [1, 38]}, {"END": [79, 80], "A'": [80, 81], "V'": [62, 63], "Q": [73, 77], "K'": [58, 60], "R": [78, 79], "K": [[40, 48], [44, 52]], "V": [[46, 54], [47, 57]], "example": [39, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Busan attracts Linda. Munich attracts Richard. Busan attracts Deborah. >. The one who wants to go to Busan is not the boy\n < Milan attracts Betty. Milan attracts Sarah. Hamburg attracts Brian. >. The one who wants to go to Milan is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [13, 14], "Q": [32, 34], "K'": [9, 11], "R": [35, 36], "K": [[2, 15], [4, 17]], "V": [[6, 19], [8, 22]], "example": [1, 38]}, {"END": [67, 68], "A'": [68, 69], "V'": [53, 54], "Q": [64, 65], "K'": [50, 51], "R": [66, 67], "K": [[40, 45], [41, 46]], "V": [[43, 48], [44, 49]], "example": [39, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Osaka attracts Jeff. Incheon attracts Lisa. Incheon attracts Laura. >. The one who wants to go to Incheon is not the boy\n < Barcelona attracts Richard. Seoul attracts Susan. Barcelona attracts Thomas. >. The one who wants to go to Barcelona is not the girl\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [6, 7], "Q": [31, 34], "K'": [2, 4], "R": [35, 36], "K": [[8, 15], [11, 18]], "V": [[13, 20], [14, 21]], "example": [1, 38]}, {"END": [68, 69], "A'": [69, 70], "V'": [49, 50], "Q": [65, 66], "K'": [45, 47], "R": [67, 68], "K": [[40, 51], [41, 52]], "V": [[43, 54], [44, 55]], "example": [39, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Barcelona attracts Deborah. Barcelona attracts Linda. Venice attracts Thomas. >. The one who wants to go to Barcelona is not the boy\n < Berlin attracts Michael. Berlin attracts William. Brisbane attracts Maria. >. The one who wants to go to Berlin is not the girl\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [19, 20], "Q": [30, 31], "K'": [15, 17], "R": [32, 33], "K": [[2, 9], [3, 10]], "V": [[5, 12], [8, 14]], "example": [1, 35]}, {"END": [67, 68], "A'": [68, 69], "V'": [53, 54], "Q": [64, 65], "K'": [47, 51], "R": [66, 67], "K": [[37, 42], [38, 43]], "V": [[40, 45], [41, 46]], "example": [36, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< New Delhi attracts Barbara. New Delhi attracts Lisa. Berlin attracts Joseph. >. The one who wants to go to New Delhi is not the boy\n < Seoul attracts Jason. Munich attracts Karen. Seoul attracts Kevin. >. The one who wants to go to Seoul is not the girl\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [19, 20], "Q": [30, 33], "K'": [16, 17], "R": [34, 35], "K": [[2, 9], [5, 12]], "V": [[7, 14], [8, 15]], "example": [1, 37]}, {"END": [71, 72], "A'": [72, 73], "V'": [49, 51], "Q": [67, 69], "K'": [45, 47], "R": [70, 71], "K": [[39, 52], [41, 54]], "V": [[43, 56], [44, 57]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Rome attracts Mary. Manchester attracts Brian. Manchester attracts Kenneth. >. The one who wants to go to Manchester is not the girl\n < Bangkok attracts Patricia. Zurich attracts Charles. Bangkok attracts Deborah. >. The one who wants to go to Bangkok is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [5, 6], "Q": [26, 27], "K'": [2, 3], "R": [28, 29], "K": [[7, 12], [8, 13]], "V": [[10, 15], [11, 16]], "example": [1, 31]}, {"END": [71, 72], "A'": [72, 73], "V'": [46, 47], "Q": [66, 69], "K'": [42, 44], "R": [70, 71], "K": [[33, 48], [36, 51]], "V": [[38, 53], [41, 56]], "example": [32, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Paris attracts Brian. Tokyo attracts Barbara. Tokyo attracts Lisa. >. The one who wants to go to Tokyo is not the boy\n < New York attracts Maria. Sao Paulo attracts Jeff. Sao Paulo attracts Mark. >. The one who wants to go to Sao Paulo is not the girl\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [5, 6], "Q": [26, 27], "K'": [2, 3], "R": [28, 29], "K": [[7, 12], [8, 13]], "V": [[10, 15], [11, 16]], "example": [1, 31]}, {"END": [67, 68], "A'": [68, 69], "V'": [37, 38], "Q": [62, 65], "K'": [33, 35], "R": [66, 67], "K": [[39, 46], [42, 49]], "V": [[44, 51], [45, 52]], "example": [32, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Betty. Canberra attracts Nancy. Vancouver attracts Edward. >. The one who wants to go to Canberra is not the boy\n < Vancouver attracts Nancy. Osaka attracts Joseph. Vancouver attracts Donna. >. The one who wants to go to Vancouver is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [20, 21], "Q": [31, 34], "K'": [16, 18], "R": [35, 36], "K": [[2, 9], [5, 12]], "V": [[7, 14], [8, 15]], "example": [1, 38]}, {"END": [72, 73], "A'": [73, 74], "V'": [50, 51], "Q": [68, 70], "K'": [46, 48], "R": [71, 72], "K": [[40, 52], [42, 54]], "V": [[44, 56], [45, 58]], "example": [39, 74]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Nancy. Bangkok attracts Daniel. Bangkok attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: Yes\n Premise: < Birmingham attracts Mark. Shanghai attracts Helen. Shanghai attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [8, 9], "Q": [50, 53], "K'": [5, 6], "R": [54, 55], "K": [[10, 17], [13, 20]], "V": [[15, 22], [16, 24]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [70, 71], "Q": [109, 111], "K'": [66, 68], "R": [112, 113], "K": [[72, 78], [74, 80]], "V": [[76, 82], [77, 83]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Nancy. Bangkok attracts Daniel. Bangkok attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: Yes\n Premise: < Birmingham attracts Mark. Shanghai attracts Helen. Shanghai attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shanghai is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [8, 9], "Q": [50, 53], "K'": [5, 6], "R": [54, 55], "K": [[10, 17], [13, 20]], "V": [[15, 22], [16, 24]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [70, 71], "Q": [109, 111], "K'": [66, 68], "R": [112, 113], "K": [[72, 78], [74, 80]], "V": [[76, 82], [77, 83]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kyoto attracts David. Munich attracts Kimberly. Kyoto attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is not the boy? Answer: No\n Premise: < Bangkok attracts Lisa. Bangkok attracts Jennifer. Bangalore attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [15, 18], "Q": [50, 52], "K'": [11, 13], "R": [53, 54], "K": [[5, 19], [7, 21]], "V": [[9, 23], [10, 24]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [85, 86], "Q": [112, 115], "K'": [80, 83], "R": [116, 117], "K": [[65, 72], [68, 75]], "V": [[70, 77], [71, 79]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kyoto attracts David. Munich attracts Kimberly. Kyoto attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kyoto is not the boy? Answer: No\n Premise: < Bangkok attracts Lisa. Bangkok attracts Jennifer. Bangalore attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [15, 18], "Q": [50, 52], "K'": [11, 13], "R": [53, 54], "K": [[5, 19], [7, 21]], "V": [[9, 23], [10, 24]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [85, 86], "Q": [112, 115], "K'": [80, 83], "R": [116, 117], "K": [[65, 72], [68, 75]], "V": [[70, 77], [71, 79]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Mark. Busan attracts Nancy. Busan attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Busan is not the girl? Answer: No\n Premise: < Lyon attracts Robert. Seoul attracts Karen. Seoul attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [8, 9], "Q": [48, 50], "K'": [5, 6], "R": [51, 52], "K": [[10, 16], [12, 18]], "V": [[14, 20], [15, 22]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [66, 67], "Q": [107, 109], "K'": [63, 64], "R": [110, 111], "K": [[68, 75], [70, 77]], "V": [[72, 79], [74, 81]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Mark. Busan attracts Nancy. Busan attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Busan is not the girl? Answer: No\n Premise: < Lyon attracts Robert. Seoul attracts Karen. Seoul attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Seoul is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [8, 9], "Q": [48, 50], "K'": [5, 6], "R": [51, 52], "K": [[10, 16], [12, 18]], "V": [[14, 20], [15, 22]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [66, 67], "Q": [107, 109], "K'": [63, 64], "R": [110, 111], "K": [[68, 75], [70, 77]], "V": [[72, 79], [74, 81]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Petersburg attracts Daniel. Saint Petersburg attracts Ronald. New Delhi attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Petersburg is not the boy? Answer: No\n Premise: < Bangkok attracts Karen. New York attracts Paul. Bangkok attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [23, 24], "Q": [50, 52], "K'": [18, 21], "R": [53, 54], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 17]], "example": [1, 60]}, {"END": [122, 123], "A'": [118, 120], "V'": [77, 78], "Q": [113, 116], "K'": [73, 75], "R": [117, 118], "K": [[65, 79], [68, 82]], "V": [[70, 84], [72, 87]], "example": [61, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Petersburg attracts Daniel. Saint Petersburg attracts Ronald. New Delhi attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Petersburg is not the boy? Answer: No\n Premise: < Bangkok attracts Karen. New York attracts Paul. Bangkok attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bangkok is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [23, 24], "Q": [50, 52], "K'": [18, 21], "R": [53, 54], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 17]], "example": [1, 60]}, {"END": [122, 123], "A'": [118, 120], "V'": [77, 78], "Q": [113, 116], "K'": [73, 75], "R": [117, 118], "K": [[65, 79], [68, 82]], "V": [[70, 84], [72, 87]], "example": [61, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Elizabeth. Sydney attracts William. Moscow attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not the girl? Answer: No\n Premise: < Mumbai attracts Laura. Lyon attracts Charles. Mumbai attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mumbai is not the boy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [13, 14], "Q": [45, 46], "K'": [10, 11], "R": [47, 48], "K": [[5, 15], [6, 16]], "V": [[8, 18], [9, 19]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [69, 70], "Q": [103, 106], "K'": [66, 67], "R": [107, 108], "K": [[59, 71], [62, 74]], "V": [[64, 76], [65, 77]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Moscow attracts Elizabeth. Sydney attracts William. Moscow attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Moscow is not the girl? Answer: No\n Premise: < Mumbai attracts Laura. Lyon attracts Charles. Mumbai attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mumbai is not the girl? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [13, 14], "Q": [45, 46], "K'": [10, 11], "R": [47, 48], "K": [[5, 15], [6, 16]], "V": [[8, 18], [9, 19]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [69, 70], "Q": [103, 106], "K'": [66, 67], "R": [107, 108], "K": [[59, 71], [62, 74]], "V": [[64, 76], [65, 77]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Chiang Mai attracts Donald. Geneva attracts Laura. Geneva attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not the boy? Answer: Yes\n Premise: < Canberra attracts Betty. Canberra attracts Nancy. Vancouver attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [10, 11], "Q": [50, 52], "K'": [5, 8], "R": [53, 54], "K": [[12, 18], [14, 20]], "V": [[16, 22], [17, 24]], "example": [1, 60]}, {"END": [119, 120], "A'": [115, 117], "V'": [83, 84], "Q": [110, 113], "K'": [79, 81], "R": [114, 115], "K": [[65, 72], [68, 75]], "V": [[70, 77], [71, 78]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Chiang Mai attracts Donald. Geneva attracts Laura. Geneva attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Geneva is not the boy? Answer: Yes\n Premise: < Canberra attracts Betty. Canberra attracts Nancy. Vancouver attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [10, 11], "Q": [50, 52], "K'": [5, 8], "R": [53, 54], "K": [[12, 18], [14, 20]], "V": [[16, 22], [17, 24]], "example": [1, 60]}, {"END": [119, 120], "A'": [115, 117], "V'": [83, 84], "Q": [110, 113], "K'": [79, 81], "R": [114, 115], "K": [[65, 72], [68, 75]], "V": [[70, 77], [71, 78]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts Steven. Bras\u00edlia attracts Michael. Birmingham attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is not the girl? Answer: Yes\n Premise: < Barcelona attracts Thomas. Munich attracts Elizabeth. Munich attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Munich is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [21, 22], "Q": [48, 50], "K'": [17, 19], "R": [51, 52], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 16]], "example": [1, 58]}, {"END": [114, 115], "A'": [110, 112], "V'": [66, 67], "Q": [106, 108], "K'": [63, 64], "R": [109, 110], "K": [[68, 74], [70, 76]], "V": [[72, 78], [73, 80]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts Steven. Bras\u00edlia attracts Michael. Birmingham attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bras\u00edlia is not the girl? Answer: Yes\n Premise: < Barcelona attracts Thomas. Munich attracts Elizabeth. Munich attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Munich is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [21, 22], "Q": [48, 50], "K'": [17, 19], "R": [51, 52], "K": [[5, 11], [7, 13]], "V": [[9, 15], [10, 16]], "example": [1, 58]}, {"END": [114, 115], "A'": [110, 112], "V'": [66, 67], "Q": [106, 108], "K'": [63, 64], "R": [109, 110], "K": [[68, 74], [70, 76]], "V": [[72, 78], [73, 80]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Elizabeth. Canberra attracts Betty. Osaka attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n Premise: < Valencia attracts John. Bern attracts Mary. Bern attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bern is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [23, 24], "Q": [50, 53], "K'": [19, 21], "R": [54, 55], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 61]}, {"END": [115, 116], "A'": [111, 113], "V'": [70, 71], "Q": [108, 109], "K'": [66, 68], "R": [110, 111], "K": [[72, 77], [73, 78]], "V": [[75, 80], [76, 82]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Elizabeth. Canberra attracts Betty. Osaka attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Canberra is not the girl? Answer: No\n Premise: < Valencia attracts John. Bern attracts Mary. Bern attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bern is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [23, 24], "Q": [50, 53], "K'": [19, 21], "R": [54, 55], "K": [[5, 12], [8, 15]], "V": [[10, 17], [11, 18]], "example": [1, 61]}, {"END": [115, 116], "A'": [111, 113], "V'": [70, 71], "Q": [108, 109], "K'": [66, 68], "R": [110, 111], "K": [[72, 77], [73, 78]], "V": [[75, 80], [76, 82]], "example": [62, 117]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Thailand, Canada, the United Kingdom, India and Spain.\n< Sharon likes London. Donna likes Moscow. James likes Vancouver. >. So the boy wants to go to a city of Canada\n < Margaret likes New Delhi. Nancy likes Madrid. Richard likes Bangkok. >. So the boy wants to go to a city of Thailand\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [38, 40], "Q": [44, 46], "K": [35, 36], "R": null, "K'": [[23, 29], [25, 31]], "V'": [[27, 33], [28, 34]], "example": [22, 54]}, {"END": [86, 87], "A": [87, 89], "V": [71, 74], "Q": [78, 80], "K": [68, 69], "R": null, "K'": [[56, 63], [57, 64]], "V'": [[59, 66], [62, 67]], "example": [55, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Charles likes Incheon. Susan likes Manchester. Kimberly likes Venice. >. So the boy wants to go to a city of South Korea\n < Donald likes London. Lisa likes Washington, D.C. Jennifer likes Munich. >. So the boy wants to go to a city of the United Kingdom\n", "ranges": [{"END": [54, 55], "A": [55, 57], "V": [26, 29], "Q": [46, 48], "K": [23, 24], "R": null, "K'": [[30, 35], [31, 38]], "V'": [[33, 40], [34, 42]], "example": [22, 57]}, {"END": [91, 92], "A": [92, 95], "V": [62, 63], "Q": [83, 85], "K": [59, 60], "R": null, "K'": [[64, 73], [65, 75]], "V'": [[67, 77], [72, 79]], "example": [58, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Sharon likes Seoul. Nancy likes Saint Petersburg. Mark likes Mumbai. >. So the boy wants to go to a city of India\n < Donna likes Bras\u00edlia. Karen likes Busan. Robert likes Bern. >. So the boy wants to go to a city of Switzerland\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [35, 38], "Q": [42, 44], "K": [32, 33], "R": null, "K'": [[19, 26], [21, 27]], "V'": [[23, 29], [25, 31]], "example": [18, 52]}, {"END": [84, 85], "A": [85, 86], "V": [71, 72], "Q": [76, 78], "K": [68, 69], "R": null, "K'": [[54, 61], [56, 63]], "V'": [[58, 65], [60, 67]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Ronald likes Ottawa. Nancy likes Tokyo. Joseph likes Seoul. >. So the girl wants to go to a city of Japan\n < Karen likes Los Angeles. Kevin likes Lyon. Jason likes New Delhi. >. So the girl wants to go to a city of the United States\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [33, 34], "Q": [44, 46], "K": [30, 31], "R": null, "K'": [[23, 35], [25, 36]], "V'": [[27, 38], [29, 40]], "example": [22, 54]}, {"END": [86, 87], "A": [87, 90], "V": [60, 62], "Q": [78, 80], "K": [56, 58], "R": null, "K'": [[63, 68], [64, 69]], "V'": [[66, 71], [67, 74]], "example": [55, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Susan likes Shanghai. Deborah likes Manchester. Ronald likes Zurich. >. So the boy wants to go to a city of Switzerland\n < Edward likes Ottawa. Lisa likes Incheon. Sharon likes Geneva. >. So the boy wants to go to a city of Canada\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [38, 40], "Q": [44, 46], "K": [34, 36], "R": null, "K'": [[21, 27], [22, 30]], "V'": [[24, 32], [26, 33]], "example": [20, 54]}, {"END": [87, 88], "A": [88, 89], "V": [59, 61], "Q": [79, 81], "K": [56, 57], "R": null, "K'": [[62, 69], [63, 71]], "V'": [[65, 73], [68, 75]], "example": [55, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include China, France, Italy, Japan, India and the United Kingdom.\n< Daniel likes Beijing. Christopher likes Osaka. Sandra likes Milan. >. So the girl wants to go to a city of Italy\n < Lisa likes Lyon. Daniel likes Bangalore. Joseph likes Birmingham. >. So the girl wants to go to a city of France\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [39, 40], "Q": [44, 46], "K": [35, 37], "R": null, "K'": [[22, 29], [23, 30]], "V'": [[25, 32], [28, 34]], "example": [21, 54]}, {"END": [85, 86], "A": [86, 87], "V": [59, 60], "Q": [77, 79], "K": [56, 57], "R": null, "K'": [[61, 68], [62, 69]], "V'": [[64, 71], [67, 73]], "example": [55, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include South Korea, Australia, the United States, Canada, Switzerland and India.\n< Sandra likes Ottawa. Elizabeth likes Canberra. Thomas likes Bern. >. So the boy wants to go to a city of Switzerland\n < Sarah likes Busan. Nancy likes New Delhi. Kenneth likes Washington, D.C. >. So the boy wants to go to a city of the United States\n", "ranges": [{"END": [53, 54], "A": [54, 55], "V": [40, 41], "Q": [45, 47], "K": [37, 38], "R": null, "K'": [[23, 30], [25, 31]], "V'": [[27, 33], [29, 36]], "example": [22, 55]}, {"END": [90, 91], "A": [91, 94], "V": [73, 78], "Q": [82, 84], "K": [70, 71], "R": null, "K'": [[57, 63], [58, 64]], "V'": [[60, 66], [62, 69]], "example": [56, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, Russia, France, Canada and the United Kingdom.\n< Donna likes Ottawa. Paul likes Moscow. Sarah likes Paris. >. So the boy wants to go to a city of Russia\n < David likes Birmingham. Jennifer likes Kyoto. Edward likes Vancouver. >. So the girl wants to go to a city of Japan\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [30, 31], "Q": [40, 42], "K": [27, 28], "R": null, "K'": [[20, 32], [22, 33]], "V'": [[24, 35], [26, 36]], "example": [19, 50]}, {"END": [82, 83], "A": [83, 84], "V": [62, 64], "Q": [74, 76], "K": [58, 60], "R": null, "K'": [[52, 65], [53, 66]], "V'": [[55, 68], [57, 70]], "example": [51, 84]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < Sharon likes London. Donna likes Moscow. James likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United Kingdom? Answer: No\n Premise: < Kimberly likes New Delhi. Margaret likes Madrid. Daniel likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [42, 44], "Q": [63, 65], "K": [39, 40], "R": null, "K'": [[27, 33], [29, 35]], "V'": [[31, 37], [32, 38]], "example": [22, 79]}, {"END": [136, 137], "A": [132, 134], "V": [101, 104], "Q": [123, 125], "K": [98, 99], "R": null, "K'": [[84, 93], [87, 94]], "V'": [[89, 96], [92, 97]], "example": [80, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < Sharon likes London. Donna likes Moscow. James likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United Kingdom? Answer: No\n Premise: < Kimberly likes New Delhi. Margaret likes Madrid. Daniel likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [42, 44], "Q": [63, 65], "K": [39, 40], "R": null, "K'": [[27, 33], [29, 35]], "V'": [[31, 37], [32, 38]], "example": [22, 79]}, {"END": [135, 136], "A": [132, 133], "V": [101, 104], "Q": [123, 125], "K": [98, 99], "R": null, "K'": [[84, 93], [87, 94]], "V'": [[89, 96], [92, 97]], "example": [80, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Laura likes Incheon. Elizabeth likes Brisbane. Mark likes London. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Australia? Answer: No\n Premise: < William likes Incheon. Sarah likes Bras\u00edlia. Charles likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [41, 42], "Q": [61, 63], "K": [38, 39], "R": null, "K'": [[23, 30], [24, 31]], "V'": [[26, 33], [29, 37]], "example": [18, 75]}, {"END": [131, 132], "A": [128, 129], "V": [90, 92], "Q": [119, 121], "K": [87, 88], "R": null, "K'": [[80, 93], [81, 94]], "V'": [[83, 96], [86, 100]], "example": [76, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Laura likes Incheon. Elizabeth likes Brisbane. Mark likes London. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Australia? Answer: No\n Premise: < William likes Incheon. Sarah likes Bras\u00edlia. Charles likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [41, 42], "Q": [61, 63], "K": [38, 39], "R": null, "K'": [[23, 30], [24, 31]], "V'": [[26, 33], [29, 37]], "example": [18, 75]}, {"END": [132, 133], "A": [128, 130], "V": [90, 92], "Q": [119, 121], "K": [87, 88], "R": null, "K'": [[80, 93], [81, 94]], "V'": [[83, 96], [86, 100]], "example": [76, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, India, the United States, South Korea, Canada and Spain.\nPremise: < Linda likes Washington, D.C. Helen likes Barcelona. Edward likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n Premise: < Daniel likes Ottawa. Susan likes Tokyo. Ronald likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [45, 48], "Q": [67, 69], "K": [42, 43], "R": null, "K'": [[27, 37], [29, 38]], "V'": [[31, 40], [36, 41]], "example": [22, 81]}, {"END": [134, 135], "A": [131, 132], "V": [95, 96], "Q": [122, 124], "K": [92, 93], "R": null, "K'": [[86, 97], [87, 99]], "V'": [[89, 101], [91, 103]], "example": [82, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, India, Canada, South Korea, Spain and Japan.\nPremise: < Linda likes Washington, D.C. Helen likes Barcelona. Edward likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n Premise: < Daniel likes Ottawa. Susan likes Tokyo. Ronald likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [45, 48], "Q": [67, 69], "K": [42, 43], "R": null, "K'": [[27, 37], [29, 38]], "V'": [[31, 40], [36, 41]], "example": [22, 81]}, {"END": [135, 136], "A": [131, 133], "V": [95, 96], "Q": [122, 124], "K": [92, 93], "R": null, "K'": [[86, 97], [87, 99]], "V'": [[89, 101], [91, 103]], "example": [82, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, France, Brazil, Germany, Japan and the United States.\nPremise: < John likes New York. Margaret likes Paris. Jeff likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: No\n Premise: < Laura likes Birmingham. Daniel likes Bras\u00edlia. David likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [37, 38], "Q": [62, 64], "K": [34, 35], "R": null, "K'": [[28, 39], [29, 40]], "V'": [[31, 42], [33, 43]], "example": [23, 78]}, {"END": [133, 134], "A": [128, 131], "V": [86, 88], "Q": [119, 121], "K": [83, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[92, 98], [94, 100]], "example": [79, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, the United Kingdom, Brazil, the United States, Japan and France.\nPremise: < John likes New York. Margaret likes Paris. Jeff likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: No\n Premise: < Laura likes Birmingham. Daniel likes Bras\u00edlia. David likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [37, 38], "Q": [62, 64], "K": [34, 35], "R": null, "K'": [[28, 39], [29, 40]], "V'": [[31, 42], [33, 43]], "example": [23, 78]}, {"END": [131, 132], "A": [128, 129], "V": [86, 88], "Q": [119, 121], "K": [83, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[92, 98], [94, 100]], "example": [79, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include China, Switzerland, Canada, South Korea, Russia and India.\nPremise: < Mary likes Novosibirsk. Ruth likes Seoul. Robert likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of China? Answer: Yes\n Premise: < Donna likes Geneva. Joseph likes Vancouver. Nancy likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [43, 46], "Q": [65, 67], "K": [40, 41], "R": null, "K'": [[25, 34], [26, 35]], "V'": [[28, 37], [33, 39]], "example": [20, 79]}, {"END": [134, 135], "A": [131, 132], "V": [94, 96], "Q": [122, 124], "K": [91, 92], "R": null, "K'": [[84, 97], [86, 98]], "V'": [[88, 100], [90, 103]], "example": [80, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, China, Russia, Switzerland, Canada and South Korea.\nPremise: < Mary likes Novosibirsk. Ruth likes Seoul. Robert likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of China? Answer: Yes\n Premise: < Donna likes Geneva. Joseph likes Vancouver. Nancy likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [43, 46], "Q": [65, 67], "K": [40, 41], "R": null, "K'": [[25, 34], [26, 35]], "V'": [[28, 37], [33, 39]], "example": [20, 79]}, {"END": [134, 135], "A": [131, 132], "V": [94, 96], "Q": [122, 124], "K": [91, 92], "R": null, "K'": [[84, 97], [86, 98]], "V'": [[88, 100], [90, 103]], "example": [80, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, Switzerland, India and Italy.\nPremise: < Steven likes Zurich. Michelle likes Rome. John likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Switzerland? Answer: No\n Premise: < John likes New Delhi. Barbara likes Venice. Carol likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of India? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [32, 33], "Q": [59, 61], "K": [28, 30], "R": null, "K'": [[22, 34], [23, 35]], "V'": [[25, 37], [27, 40]], "example": [17, 73]}, {"END": [127, 128], "A": [124, 125], "V": [81, 84], "Q": [115, 117], "K": [78, 79], "R": null, "K'": [[85, 91], [86, 92]], "V'": [[88, 94], [90, 96]], "example": [74, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, India, Italy and the United States.\nPremise: < Steven likes Zurich. Michelle likes Rome. John likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Switzerland? Answer: No\n Premise: < John likes New Delhi. Barbara likes Venice. Carol likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United States? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [32, 33], "Q": [59, 61], "K": [28, 30], "R": null, "K'": [[22, 34], [23, 35]], "V'": [[25, 37], [27, 40]], "example": [17, 73]}, {"END": [129, 130], "A": [124, 127], "V": [81, 84], "Q": [115, 117], "K": [78, 79], "R": null, "K'": [[85, 91], [86, 92]], "V'": [[88, 94], [90, 96]], "example": [74, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Italy, Russia, France, Japan and the United Kingdom.\nPremise: < Margaret likes Chiang Mai. Edward likes London. Barbara likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: No\n Premise: < Carol likes Florence. Jason likes Lyon. Lisa likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of France? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [37, 38], "Q": [63, 65], "K": [34, 35], "R": null, "K'": [[27, 39], [28, 40]], "V'": [[30, 42], [33, 44]], "example": [22, 78]}, {"END": [132, 133], "A": [129, 130], "V": [91, 92], "Q": [120, 122], "K": [88, 89], "R": null, "K'": [[83, 93], [84, 94]], "V'": [[86, 96], [87, 101]], "example": [79, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, the United Kingdom, Japan, France, Russia and Italy.\nPremise: < Margaret likes Chiang Mai. Edward likes London. Barbara likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: No\n Premise: < Carol likes Florence. Jason likes Lyon. Lisa likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Russia? Answer: No\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [37, 38], "Q": [63, 65], "K": [34, 35], "R": null, "K'": [[27, 39], [28, 40]], "V'": [[30, 42], [33, 44]], "example": [22, 78]}, {"END": [132, 133], "A": [129, 130], "V": [91, 92], "Q": [120, 122], "K": [88, 89], "R": null, "K'": [[83, 93], [84, 94]], "V'": [[86, 96], [87, 101]], "example": [79, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, France, the United States and Germany.\nPremise: < Kimberly likes Washington, D.C. Joseph likes Manchester. William likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: Yes\n Premise: < Thomas likes Kyoto. William likes Seoul. Maria likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [34, 39], "Q": [69, 71], "K": [29, 32], "R": null, "K'": [[40, 45], [41, 46]], "V'": [[43, 48], [44, 50]], "example": [24, 85]}, {"END": [137, 138], "A": [134, 135], "V": [105, 106], "Q": [125, 127], "K": [102, 103], "R": null, "K'": [[90, 96], [91, 97]], "V'": [[93, 99], [95, 101]], "example": [86, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, South Korea, the United States, Germany, Japan and France.\nPremise: < Kimberly likes Washington, D.C. Joseph likes Manchester. William likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: Yes\n Premise: < Thomas likes Kyoto. William likes Seoul. Maria likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [34, 39], "Q": [69, 71], "K": [29, 32], "R": null, "K'": [[40, 45], [41, 46]], "V'": [[43, 48], [44, 50]], "example": [24, 85]}, {"END": [138, 139], "A": [134, 136], "V": [105, 106], "Q": [125, 127], "K": [102, 103], "R": null, "K'": [[90, 96], [91, 97]], "V'": [[93, 99], [95, 101]], "example": [86, 140]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Thailand, Canada, the United Kingdom, India and Spain.\n< London attracts Sharon. Moscow attracts Donna. Vancouver attracts James. >. So the boy wants to go to a city of Canada\n < New Delhi attracts Margaret. Madrid attracts Nancy. Bangkok attracts Richard. >. So the boy wants to go to a city of Thailand\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [35, 37], "Q": [44, 46], "K": [39, 40], "R": null, "K'": [[26, 32], [28, 34]], "V'": [[23, 29], [24, 30]], "example": [22, 54]}, {"END": [86, 87], "A": [87, 89], "V": [68, 71], "Q": [78, 80], "K": [73, 74], "R": null, "K'": [[61, 66], [62, 67]], "V'": [[56, 63], [59, 64]], "example": [55, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Incheon attracts Charles. Manchester attracts Susan. Venice attracts Kimberly. >. So the boy wants to go to a city of South Korea\n < London attracts Donald. Washington, D.C attracts Lisa. Munich attracts Jennifer. >. So the boy wants to go to a city of the United Kingdom\n", "ranges": [{"END": [54, 55], "A": [55, 57], "V": [23, 26], "Q": [46, 48], "K": [28, 29], "R": null, "K'": [[33, 39], [34, 42]], "V'": [[30, 35], [31, 37]], "example": [22, 57]}, {"END": [91, 92], "A": [92, 95], "V": [59, 60], "Q": [83, 85], "K": [62, 63], "R": null, "K'": [[71, 77], [72, 79]], "V'": [[64, 73], [69, 75]], "example": [58, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Seoul attracts Sharon. Saint Petersburg attracts Nancy. Mumbai attracts Mark. >. So the boy wants to go to a city of India\n < Bras\u00edlia attracts Donna. Busan attracts Karen. Bern attracts Robert. >. So the boy wants to go to a city of Switzerland\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [32, 35], "Q": [42, 44], "K": [37, 38], "R": null, "K'": [[23, 30], [25, 31]], "V'": [[19, 26], [21, 28]], "example": [18, 52]}, {"END": [84, 85], "A": [85, 86], "V": [68, 69], "Q": [76, 78], "K": [71, 72], "R": null, "K'": [[58, 65], [60, 67]], "V'": [[54, 61], [56, 63]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Ottawa attracts Ronald. Tokyo attracts Nancy. Seoul attracts Joseph. >. So the girl wants to go to a city of Japan\n < Los Angeles attracts Karen. Lyon attracts Kevin. New Delhi attracts Jason. >. So the girl wants to go to a city of the United States\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [30, 31], "Q": [44, 46], "K": [33, 34], "R": null, "K'": [[27, 39], [29, 40]], "V'": [[23, 35], [25, 37]], "example": [22, 54]}, {"END": [86, 87], "A": [87, 90], "V": [56, 58], "Q": [78, 80], "K": [60, 62], "R": null, "K'": [[66, 73], [67, 74]], "V'": [[63, 68], [64, 71]], "example": [55, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Shanghai attracts Susan. Manchester attracts Deborah. Zurich attracts Ronald. >. So the boy wants to go to a city of Switzerland\n < Ottawa attracts Edward. Incheon attracts Lisa. Geneva attracts Sharon. >. So the boy wants to go to a city of Canada\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [34, 36], "Q": [44, 46], "K": [38, 40], "R": null, "K'": [[25, 30], [26, 33]], "V'": [[21, 27], [23, 28]], "example": [20, 54]}, {"END": [87, 88], "A": [88, 89], "V": [56, 58], "Q": [79, 81], "K": [60, 61], "R": null, "K'": [[67, 73], [68, 75]], "V'": [[62, 69], [65, 71]], "example": [55, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include China, France, Italy, Japan, India and the United Kingdom.\n< Beijing attracts Daniel. Osaka attracts Christopher. Milan attracts Sandra. >. So the girl wants to go to a city of Italy\n < Lyon attracts Lisa. Bangalore attracts Daniel. Birmingham attracts Joseph. >. So the girl wants to go to a city of France\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [35, 36], "Q": [44, 46], "K": [38, 40], "R": null, "K'": [[27, 33], [28, 34]], "V'": [[22, 29], [25, 31]], "example": [21, 54]}, {"END": [85, 86], "A": [86, 87], "V": [56, 57], "Q": [77, 79], "K": [59, 60], "R": null, "K'": [[66, 72], [67, 73]], "V'": [[61, 68], [64, 70]], "example": [55, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include South Korea, Australia, the United States, Canada, Switzerland and India.\n< Ottawa attracts Sandra. Canberra attracts Elizabeth. Bern attracts Thomas. >. So the boy wants to go to a city of Switzerland\n < Busan attracts Sarah. New Delhi attracts Nancy. Washington, D.C attracts Kenneth. >. So the boy wants to go to a city of the United States\n", "ranges": [{"END": [53, 54], "A": [54, 55], "V": [37, 38], "Q": [45, 47], "K": [40, 41], "R": null, "K'": [[27, 35], [29, 36]], "V'": [[23, 30], [25, 33]], "example": [22, 55]}, {"END": [90, 91], "A": [91, 94], "V": [70, 75], "Q": [82, 84], "K": [77, 78], "R": null, "K'": [[61, 68], [62, 69]], "V'": [[57, 63], [59, 66]], "example": [56, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, Russia, France, Canada and the United Kingdom.\n< Ottawa attracts Donna. Moscow attracts Paul. Paris attracts Sarah. >. So the boy wants to go to a city of Russia\n < Birmingham attracts David. Kyoto attracts Jennifer. Vancouver attracts Edward. >. So the girl wants to go to a city of Japan\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [27, 28], "Q": [40, 42], "K": [30, 31], "R": null, "K'": [[24, 35], [26, 36]], "V'": [[20, 32], [22, 33]], "example": [19, 50]}, {"END": [82, 83], "A": [83, 84], "V": [58, 60], "Q": [74, 76], "K": [62, 64], "R": null, "K'": [[56, 69], [57, 70]], "V'": [[52, 65], [54, 67]], "example": [51, 84]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < London attracts Sharon. Moscow attracts Donna. Vancouver attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Kimberly. Madrid attracts Margaret. Bangkok attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [39, 41], "Q": [63, 65], "K": [43, 44], "R": null, "K'": [[30, 36], [32, 38]], "V'": [[27, 33], [28, 34]], "example": [22, 79]}, {"END": [136, 137], "A": [132, 134], "V": [98, 101], "Q": [123, 125], "K": [103, 104], "R": null, "K'": [[89, 96], [92, 97]], "V'": [[84, 93], [87, 94]], "example": [80, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < London attracts Sharon. Moscow attracts Donna. Vancouver attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Kimberly. Madrid attracts Margaret. Bangkok attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [39, 41], "Q": [63, 65], "K": [43, 44], "R": null, "K'": [[30, 36], [32, 38]], "V'": [[27, 33], [28, 34]], "example": [22, 79]}, {"END": [135, 136], "A": [132, 133], "V": [98, 101], "Q": [123, 125], "K": [103, 104], "R": null, "K'": [[89, 96], [92, 97]], "V'": [[84, 93], [87, 94]], "example": [80, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Incheon attracts Laura. Brisbane attracts Elizabeth. London attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts William. Bras\u00edlia attracts Sarah. Brisbane attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [38, 39], "Q": [61, 63], "K": [41, 42], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[23, 30], [26, 34]], "example": [18, 75]}, {"END": [131, 132], "A": [128, 129], "V": [87, 89], "Q": [119, 121], "K": [91, 92], "R": null, "K'": [[85, 99], [86, 100]], "V'": [[80, 93], [83, 97]], "example": [76, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Incheon attracts Laura. Brisbane attracts Elizabeth. London attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts William. Bras\u00edlia attracts Sarah. Brisbane attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [38, 39], "Q": [61, 63], "K": [41, 42], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[23, 30], [26, 34]], "example": [18, 75]}, {"END": [132, 133], "A": [128, 130], "V": [87, 89], "Q": [119, 121], "K": [91, 92], "R": null, "K'": [[85, 99], [86, 100]], "V'": [[80, 93], [83, 97]], "example": [76, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, India, the United States, South Korea, Canada and Spain.\nPremise: < Washington, D.C attracts Linda. Barcelona attracts Helen. Bangalore attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n Premise: < Ottawa attracts Daniel. Tokyo attracts Susan. Seoul attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [42, 45], "Q": [67, 69], "K": [47, 48], "R": null, "K'": [[34, 40], [36, 41]], "V'": [[27, 37], [32, 38]], "example": [22, 81]}, {"END": [134, 135], "A": [131, 132], "V": [92, 93], "Q": [122, 124], "K": [95, 96], "R": null, "K'": [[90, 101], [91, 103]], "V'": [[86, 97], [88, 99]], "example": [82, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, India, Canada, South Korea, Spain and Japan.\nPremise: < Washington, D.C attracts Linda. Barcelona attracts Helen. Bangalore attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Spain? Answer: No\n Premise: < Ottawa attracts Daniel. Tokyo attracts Susan. Seoul attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [42, 45], "Q": [67, 69], "K": [47, 48], "R": null, "K'": [[34, 40], [36, 41]], "V'": [[27, 37], [32, 38]], "example": [22, 81]}, {"END": [135, 136], "A": [131, 133], "V": [92, 93], "Q": [122, 124], "K": [95, 96], "R": null, "K'": [[90, 101], [91, 103]], "V'": [[86, 97], [88, 99]], "example": [82, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, France, Brazil, Germany, Japan and the United States.\nPremise: < New York attracts John. Paris attracts Margaret. Hamburg attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: No\n Premise: < Birmingham attracts Laura. Bras\u00edlia attracts Daniel. Osaka attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [34, 35], "Q": [62, 64], "K": [37, 38], "R": null, "K'": [[32, 42], [33, 43]], "V'": [[28, 39], [30, 40]], "example": [23, 78]}, {"END": [133, 134], "A": [128, 131], "V": [83, 85], "Q": [119, 121], "K": [87, 88], "R": null, "K'": [[93, 99], [94, 100]], "V'": [[89, 95], [91, 97]], "example": [79, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, the United Kingdom, Brazil, the United States, Japan and France.\nPremise: < New York attracts John. Paris attracts Margaret. Hamburg attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: No\n Premise: < Birmingham attracts Laura. Bras\u00edlia attracts Daniel. Osaka attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [34, 35], "Q": [62, 64], "K": [37, 38], "R": null, "K'": [[32, 42], [33, 43]], "V'": [[28, 39], [30, 40]], "example": [23, 78]}, {"END": [131, 132], "A": [128, 129], "V": [83, 85], "Q": [119, 121], "K": [87, 88], "R": null, "K'": [[93, 99], [94, 100]], "V'": [[89, 95], [91, 97]], "example": [79, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include China, Switzerland, Canada, South Korea, Russia and India.\nPremise: < Novosibirsk attracts Mary. Seoul attracts Ruth. Beijing attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of China? Answer: Yes\n Premise: < Geneva attracts Donna. Vancouver attracts Joseph. Bangalore attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [40, 43], "Q": [65, 67], "K": [45, 46], "R": null, "K'": [[32, 38], [33, 39]], "V'": [[25, 34], [30, 36]], "example": [20, 79]}, {"END": [134, 135], "A": [131, 132], "V": [91, 93], "Q": [122, 124], "K": [95, 96], "R": null, "K'": [[88, 102], [90, 103]], "V'": [[84, 97], [86, 100]], "example": [80, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, China, Russia, Switzerland, Canada and South Korea.\nPremise: < Novosibirsk attracts Mary. Seoul attracts Ruth. Beijing attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of China? Answer: Yes\n Premise: < Geneva attracts Donna. Vancouver attracts Joseph. Bangalore attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [40, 43], "Q": [65, 67], "K": [45, 46], "R": null, "K'": [[32, 38], [33, 39]], "V'": [[25, 34], [30, 36]], "example": [20, 79]}, {"END": [134, 135], "A": [131, 132], "V": [91, 93], "Q": [122, 124], "K": [95, 96], "R": null, "K'": [[88, 102], [90, 103]], "V'": [[84, 97], [86, 100]], "example": [80, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, Switzerland, India and Italy.\nPremise: < Zurich attracts Steven. Rome attracts Michelle. Bangalore attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Switzerland? Answer: No\n Premise: < New Delhi attracts John. Venice attracts Barbara. New York attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of India? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [28, 29], "Q": [59, 61], "K": [31, 33], "R": null, "K'": [[26, 39], [27, 40]], "V'": [[22, 34], [24, 37]], "example": [17, 73]}, {"END": [127, 128], "A": [124, 125], "V": [78, 81], "Q": [115, 117], "K": [83, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[85, 91], [87, 93]], "example": [74, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, India, Italy and the United States.\nPremise: < Zurich attracts Steven. Rome attracts Michelle. Bangalore attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Switzerland? Answer: No\n Premise: < New Delhi attracts John. Venice attracts Barbara. New York attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of the United States? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [28, 29], "Q": [59, 61], "K": [31, 33], "R": null, "K'": [[26, 39], [27, 40]], "V'": [[22, 34], [24, 37]], "example": [17, 73]}, {"END": [129, 130], "A": [124, 127], "V": [78, 81], "Q": [115, 117], "K": [83, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[85, 91], [87, 93]], "example": [74, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Italy, Russia, France, Japan and the United Kingdom.\nPremise: < Chiang Mai attracts Margaret. London attracts Edward. Osaka attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: No\n Premise: < Florence attracts Carol. Lyon attracts Jason. Novosibirsk attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of France? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [34, 35], "Q": [63, 65], "K": [37, 38], "R": null, "K'": [[32, 43], [33, 44]], "V'": [[27, 39], [30, 41]], "example": [22, 78]}, {"END": [132, 133], "A": [129, 130], "V": [88, 89], "Q": [120, 122], "K": [91, 92], "R": null, "K'": [[86, 100], [87, 101]], "V'": [[83, 93], [84, 98]], "example": [79, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, the United Kingdom, Japan, France, Russia and Italy.\nPremise: < Chiang Mai attracts Margaret. London attracts Edward. Osaka attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Thailand? Answer: No\n Premise: < Florence attracts Carol. Lyon attracts Jason. Novosibirsk attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a city of Russia? Answer: No\n", "ranges": [{"END": [76, 77], "A": [72, 74], "V": [34, 35], "Q": [63, 65], "K": [37, 38], "R": null, "K'": [[32, 43], [33, 44]], "V'": [[27, 39], [30, 41]], "example": [22, 78]}, {"END": [132, 133], "A": [129, 130], "V": [88, 89], "Q": [120, 122], "K": [91, 92], "R": null, "K'": [[86, 100], [87, 101]], "V'": [[83, 93], [84, 98]], "example": [79, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, France, the United States and Germany.\nPremise: < Washington, D.C attracts Kimberly. Manchester attracts Joseph. Marseille attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: Yes\n Premise: < Kyoto attracts Thomas. Seoul attracts William. Berlin attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [29, 34], "Q": [69, 71], "K": [36, 39], "R": null, "K'": [[43, 49], [44, 50]], "V'": [[40, 45], [41, 47]], "example": [24, 85]}, {"END": [137, 138], "A": [134, 135], "V": [102, 103], "Q": [125, 127], "K": [105, 106], "R": null, "K'": [[94, 100], [95, 101]], "V'": [[90, 96], [92, 98]], "example": [86, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, South Korea, the United States, Germany, Japan and France.\nPremise: < Washington, D.C attracts Kimberly. Manchester attracts Joseph. Marseille attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of the United States? Answer: Yes\n Premise: < Kyoto attracts Thomas. Seoul attracts William. Berlin attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [29, 34], "Q": [69, 71], "K": [36, 39], "R": null, "K'": [[43, 49], [44, 50]], "V'": [[40, 45], [41, 47]], "example": [24, 85]}, {"END": [138, 139], "A": [134, 136], "V": [102, 103], "Q": [125, 127], "K": [105, 106], "R": null, "K'": [[94, 100], [95, 101]], "V'": [[90, 96], [92, 98]], "example": [86, 140]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Thailand, Canada, the United Kingdom, India and Spain.\n< Brian likes London. Kenneth likes Moscow. Mary likes Vancouver. >. The boys do not want to go to a city of Canada\n < Joseph likes New Delhi. Daniel likes Madrid. Maria likes Bangkok. >. The boys do not want to go to a city of Thailand\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [36, 38], "Q": [41, 43], "K'": [33, 34], "R": [44, 45], "K": [[23, 28], [24, 29]], "V": [[26, 31], [27, 32]], "example": [22, 53]}, {"END": [86, 87], "A'": [87, 89], "V'": [70, 73], "Q": [76, 78], "K'": [67, 68], "R": [79, 80], "K": [[55, 62], [56, 63]], "V": [[58, 65], [61, 66]], "example": [54, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Susan likes Incheon. Charles likes Manchester. Jason likes Venice. >. The boys do not want to go to a city of South Korea\n < Helen likes London. Christopher likes Washington, D.C. David likes Munich. >. The boys do not want to go to a city of the United Kingdom\n", "ranges": [{"END": [53, 54], "A'": [54, 56], "V'": [26, 29], "Q": [43, 45], "K'": [23, 24], "R": [46, 47], "K": [[30, 35], [31, 36]], "V": [[33, 38], [34, 40]], "example": [22, 56]}, {"END": [90, 91], "A'": [91, 94], "V'": [61, 62], "Q": [80, 82], "K'": [58, 59], "R": [83, 84], "K": [[63, 72], [64, 73]], "V": [[66, 75], [71, 77]], "example": [57, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Brian likes Seoul. Daniel likes Saint Petersburg. Betty likes Mumbai. >. The boys do not want to go to a city of India\n < Kenneth likes Bras\u00edlia. Paul likes Busan. Linda likes Bern. >. The boys do not want to go to a city of Switzerland\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [34, 37], "Q": [40, 42], "K'": [31, 32], "R": [43, 44], "K": [[19, 25], [20, 26]], "V": [[22, 28], [24, 30]], "example": [18, 52]}, {"END": [84, 85], "A'": [85, 86], "V'": [70, 71], "Q": [74, 76], "K'": [66, 68], "R": [77, 78], "K": [[54, 60], [55, 61]], "V": [[57, 63], [59, 65]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Michelle likes Ottawa. Daniel likes Tokyo. Margaret likes Seoul. >. The girls do not want to go to a city of Japan\n < Paul likes Los Angeles. Sarah likes Lyon. Kimberly likes New Delhi. >. The girls do not want to go to a city of the United States\n", "ranges": [{"END": [53, 54], "A'": [54, 55], "V'": [33, 34], "Q": [43, 45], "K'": [30, 31], "R": [46, 47], "K": [[23, 35], [25, 36]], "V": [[27, 38], [29, 40]], "example": [22, 55]}, {"END": [89, 90], "A'": [90, 93], "V'": [60, 62], "Q": [79, 81], "K'": [57, 58], "R": [82, 83], "K": [[63, 68], [64, 71]], "V": [[66, 73], [67, 76]], "example": [56, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Charles likes Shanghai. Jeff likes Manchester. Michelle likes Zurich. >. The boys do not want to go to a city of Switzerland\n < Ruth likes Ottawa. Christopher likes Incheon. Brian likes Geneva. >. The boys do not want to go to a city of Canada\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [36, 38], "Q": [41, 43], "K'": [32, 34], "R": [44, 45], "K": [[21, 27], [22, 28]], "V": [[24, 30], [26, 31]], "example": [20, 53]}, {"END": [86, 87], "A'": [87, 88], "V'": [58, 60], "Q": [76, 78], "K'": [55, 56], "R": [79, 80], "K": [[61, 68], [62, 69]], "V": [[64, 71], [67, 73]], "example": [54, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include China, France, Italy, Japan, India and the United Kingdom.\n< Nancy likes Beijing. Lisa likes Osaka. George likes Milan. >. The girls do not want to go to a city of Italy\n < Christopher likes Lyon. Nancy likes Bangalore. Margaret likes Birmingham. >. The girls do not want to go to a city of France\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [38, 39], "Q": [42, 44], "K'": [35, 36], "R": [45, 46], "K": [[22, 29], [23, 30]], "V": [[25, 32], [28, 34]], "example": [21, 54]}, {"END": [86, 87], "A'": [87, 88], "V'": [59, 60], "Q": [76, 78], "K'": [56, 57], "R": [79, 80], "K": [[61, 68], [62, 69]], "V": [[64, 71], [67, 73]], "example": [55, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include South Korea, Australia, the United States, Canada, Switzerland and India.\n< George likes Ottawa. William likes Canberra. Dorothy likes Bern. >. The boys do not want to go to a city of Switzerland\n < Kevin likes Busan. Daniel likes New Delhi. Donna likes Washington, D.C. >. The boys do not want to go to a city of the United States\n", "ranges": [{"END": [54, 55], "A'": [55, 56], "V'": [40, 41], "Q": [44, 46], "K'": [36, 38], "R": [47, 48], "K": [[23, 29], [24, 30]], "V": [[26, 32], [28, 35]], "example": [22, 56]}, {"END": [93, 94], "A'": [94, 97], "V'": [75, 80], "Q": [83, 85], "K'": [71, 73], "R": [86, 87], "K": [[58, 64], [59, 65]], "V": [[61, 67], [63, 70]], "example": [57, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, Russia, France, Canada and the United Kingdom.\n< Kenneth likes Ottawa. Karen likes Moscow. Kevin likes Paris. >. The boys do not want to go to a city of Russia\n < Jennifer likes Birmingham. David likes Kyoto. Ruth likes Vancouver. >. The girls do not want to go to a city of Japan\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [30, 31], "Q": [39, 41], "K'": [26, 28], "R": [42, 43], "K": [[20, 32], [21, 33]], "V": [[23, 35], [25, 36]], "example": [19, 51]}, {"END": [84, 85], "A'": [85, 86], "V'": [63, 65], "Q": [74, 76], "K'": [60, 61], "R": [77, 78], "K": [[53, 66], [55, 67]], "V": [[57, 69], [59, 71]], "example": [52, 86]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < Brian likes London. Kenneth likes Moscow. Mary likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United Kingdom? Answer: No\n Premise: < Jason likes New Delhi. Joseph likes Madrid. Nancy likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [40, 42], "Q": [61, 63], "K'": [37, 38], "R": [64, 65], "K": [[27, 32], [28, 33]], "V": [[30, 35], [31, 36]], "example": [22, 79]}, {"END": [136, 137], "A'": [132, 134], "V'": [99, 102], "Q": [121, 123], "K'": [96, 97], "R": [124, 125], "K": [[84, 91], [85, 92]], "V": [[87, 94], [90, 95]], "example": [80, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < Brian likes London. Kenneth likes Moscow. Mary likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United Kingdom? Answer: No\n Premise: < Jason likes New Delhi. Joseph likes Madrid. Nancy likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [40, 42], "Q": [61, 63], "K'": [37, 38], "R": [64, 65], "K": [[27, 32], [28, 33]], "V": [[30, 35], [31, 36]], "example": [22, 79]}, {"END": [135, 136], "A'": [132, 133], "V'": [99, 102], "Q": [121, 123], "K'": [96, 97], "R": [124, 125], "K": [[84, 91], [85, 92]], "V": [[87, 94], [90, 95]], "example": [80, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Anthony likes Incheon. William likes Brisbane. Betty likes London. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Australia? Answer: No\n Premise: < Elizabeth likes Incheon. Kevin likes Bras\u00edlia. Susan likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [41, 42], "Q": [61, 63], "K'": [38, 39], "R": [64, 65], "K": [[23, 30], [24, 31]], "V": [[26, 33], [29, 37]], "example": [18, 77]}, {"END": [135, 136], "A'": [132, 133], "V'": [92, 94], "Q": [121, 123], "K'": [89, 90], "R": [124, 125], "K": [[82, 95], [83, 96]], "V": [[85, 98], [88, 102]], "example": [78, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Anthony likes Incheon. William likes Brisbane. Betty likes London. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Australia? Answer: No\n Premise: < Elizabeth likes Incheon. Kevin likes Bras\u00edlia. Susan likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [41, 42], "Q": [61, 63], "K'": [38, 39], "R": [64, 65], "K": [[23, 30], [24, 31]], "V": [[26, 33], [29, 37]], "example": [18, 77]}, {"END": [136, 137], "A'": [132, 134], "V'": [92, 94], "Q": [121, 123], "K'": [89, 90], "R": [124, 125], "K": [[82, 95], [83, 96]], "V": [[85, 98], [88, 102]], "example": [78, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, India, the United States, South Korea, Canada and Spain.\nPremise: < Robert likes Washington, D.C. Donald likes Barcelona. Ruth likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n Premise: < Nancy likes Ottawa. Charles likes Tokyo. Michelle likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [44, 47], "Q": [66, 68], "K'": [41, 42], "R": [69, 70], "K": [[27, 36], [28, 37]], "V": [[30, 39], [35, 40]], "example": [22, 82]}, {"END": [137, 138], "A'": [134, 135], "V'": [96, 97], "Q": [123, 125], "K'": [93, 94], "R": [126, 127], "K": [[87, 98], [88, 100]], "V": [[90, 102], [92, 104]], "example": [83, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, India, Canada, South Korea, Spain and Japan.\nPremise: < Robert likes Washington, D.C. Donald likes Barcelona. Ruth likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n Premise: < Nancy likes Ottawa. Charles likes Tokyo. Michelle likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [44, 47], "Q": [66, 68], "K'": [41, 42], "R": [69, 70], "K": [[27, 36], [28, 37]], "V": [[30, 39], [35, 40]], "example": [22, 82]}, {"END": [138, 139], "A'": [134, 136], "V'": [96, 97], "Q": [123, 125], "K'": [93, 94], "R": [126, 127], "K": [[87, 98], [88, 100]], "V": [[90, 102], [92, 104]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, France, Brazil, Germany, Japan and the United States.\nPremise: < Patricia likes New York. Joseph likes Paris. Deborah likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: No\n Premise: < Anthony likes Birmingham. Nancy likes Bras\u00edlia. Jennifer likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [39, 40], "Q": [66, 68], "K'": [36, 37], "R": [69, 70], "K": [[28, 41], [31, 44]], "V": [[33, 46], [35, 47]], "example": [23, 84]}, {"END": [142, 143], "A'": [137, 140], "V'": [92, 94], "Q": [126, 128], "K'": [89, 90], "R": [129, 130], "K": [[95, 101], [96, 103]], "V": [[98, 105], [100, 107]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, the United Kingdom, Brazil, the United States, Japan and France.\nPremise: < Patricia likes New York. Joseph likes Paris. Deborah likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: No\n Premise: < Anthony likes Birmingham. Nancy likes Bras\u00edlia. Jennifer likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [39, 40], "Q": [66, 68], "K'": [36, 37], "R": [69, 70], "K": [[28, 41], [31, 44]], "V": [[33, 46], [35, 47]], "example": [23, 84]}, {"END": [140, 141], "A'": [137, 138], "V'": [92, 94], "Q": [126, 128], "K'": [89, 90], "R": [129, 130], "K": [[95, 101], [96, 103]], "V": [[98, 105], [100, 107]], "example": [85, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include China, Switzerland, Canada, South Korea, Russia and India.\nPremise: < James likes Novosibirsk. Edward likes Seoul. Linda likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of China? Answer: Yes\n Premise: < Kenneth likes Geneva. Margaret likes Vancouver. Daniel likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [44, 47], "Q": [66, 68], "K'": [40, 42], "R": [69, 70], "K": [[25, 34], [26, 35]], "V": [[28, 37], [33, 39]], "example": [20, 82]}, {"END": [138, 139], "A'": [135, 136], "V'": [96, 98], "Q": [124, 126], "K'": [93, 94], "R": [127, 128], "K": [[87, 99], [88, 100]], "V": [[90, 102], [92, 105]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, China, Russia, Switzerland, Canada and South Korea.\nPremise: < James likes Novosibirsk. Edward likes Seoul. Linda likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of China? Answer: Yes\n Premise: < Kenneth likes Geneva. Margaret likes Vancouver. Daniel likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [44, 47], "Q": [66, 68], "K'": [40, 42], "R": [69, 70], "K": [[25, 34], [26, 35]], "V": [[28, 37], [33, 39]], "example": [20, 82]}, {"END": [138, 139], "A'": [135, 136], "V'": [96, 98], "Q": [124, 126], "K'": [93, 94], "R": [127, 128], "K": [[87, 99], [88, 100]], "V": [[90, 102], [92, 105]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, Switzerland, India and Italy.\nPremise: < Carol likes Zurich. Ronald likes Rome. Patricia likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Switzerland? Answer: No\n Premise: < Patricia likes New Delhi. Michael likes Venice. Steven likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of India? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [32, 33], "Q": [61, 63], "K'": [28, 30], "R": [64, 65], "K": [[22, 34], [23, 37]], "V": [[25, 39], [27, 42]], "example": [17, 77]}, {"END": [135, 136], "A'": [132, 133], "V'": [87, 90], "Q": [121, 123], "K'": [82, 85], "R": [124, 125], "K": [[91, 97], [92, 98]], "V": [[94, 100], [96, 102]], "example": [78, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, India, Italy and the United States.\nPremise: < Carol likes Zurich. Ronald likes Rome. Patricia likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Switzerland? Answer: No\n Premise: < Patricia likes New Delhi. Michael likes Venice. Steven likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United States? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [32, 33], "Q": [61, 63], "K'": [28, 30], "R": [64, 65], "K": [[22, 34], [23, 37]], "V": [[25, 39], [27, 42]], "example": [17, 77]}, {"END": [137, 138], "A'": [132, 135], "V'": [87, 90], "Q": [121, 123], "K'": [82, 85], "R": [124, 125], "K": [[91, 97], [92, 98]], "V": [[94, 100], [96, 102]], "example": [78, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Italy, Russia, France, Japan and the United Kingdom.\nPremise: < Joseph likes Chiang Mai. Ruth likes London. Michael likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: No\n Premise: < Steven likes Florence. Kimberly likes Lyon. Christopher likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [74, 76], "V'": [37, 38], "Q": [63, 65], "K'": [34, 35], "R": [66, 67], "K": [[27, 39], [28, 40]], "V": [[30, 42], [33, 44]], "example": [22, 80]}, {"END": [138, 139], "A'": [135, 136], "V'": [95, 96], "Q": [124, 126], "K'": [90, 93], "R": [127, 128], "K": [[85, 97], [86, 98]], "V": [[88, 100], [89, 105]], "example": [81, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, the United Kingdom, Japan, France, Russia and Italy.\nPremise: < Joseph likes Chiang Mai. Ruth likes London. Michael likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: No\n Premise: < Steven likes Florence. Kimberly likes Lyon. Christopher likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [74, 76], "V'": [37, 38], "Q": [63, 65], "K'": [34, 35], "R": [66, 67], "K": [[27, 39], [28, 40]], "V": [[30, 42], [33, 44]], "example": [22, 80]}, {"END": [138, 139], "A'": [135, 136], "V'": [95, 96], "Q": [124, 126], "K'": [90, 93], "R": [127, 128], "K": [[85, 97], [86, 98]], "V": [[88, 100], [89, 105]], "example": [81, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, France, the United States and Germany.\nPremise: < Jason likes Washington, D.C. Margaret likes Manchester. Elizabeth likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: Yes\n Premise: < Dorothy likes Kyoto. Elizabeth likes Seoul. Richard likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [78, 81], "V'": [32, 37], "Q": [67, 69], "K'": [29, 30], "R": [70, 71], "K": [[38, 43], [39, 44]], "V": [[41, 46], [42, 48]], "example": [24, 85]}, {"END": [140, 141], "A'": [137, 138], "V'": [106, 107], "Q": [126, 128], "K'": [103, 104], "R": [129, 130], "K": [[90, 97], [92, 98]], "V": [[94, 100], [96, 102]], "example": [86, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, South Korea, the United States, Germany, Japan and France.\nPremise: < Jason likes Washington, D.C. Margaret likes Manchester. Elizabeth likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: Yes\n Premise: < Dorothy likes Kyoto. Elizabeth likes Seoul. Richard likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [78, 81], "V'": [32, 37], "Q": [67, 69], "K'": [29, 30], "R": [70, 71], "K": [[38, 43], [39, 44]], "V": [[41, 46], [42, 48]], "example": [24, 85]}, {"END": [141, 142], "A'": [137, 139], "V'": [106, 107], "Q": [126, 128], "K'": [103, 104], "R": [129, 130], "K": [[90, 97], [92, 98]], "V": [[94, 100], [96, 102]], "example": [86, 143]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Thailand, Canada, the United Kingdom, India and Spain.\n< London attracts Brian. Moscow attracts Kenneth. Vancouver attracts Mary. >. The boys do not want to go to a city of Canada\n < New Delhi attracts Joseph. Madrid attracts Daniel. Bangkok attracts Maria. >. The boys do not want to go to a city of Thailand\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [33, 35], "Q": [41, 43], "K'": [37, 38], "R": [44, 45], "K": [[26, 31], [27, 32]], "V": [[23, 28], [24, 29]], "example": [22, 53]}, {"END": [86, 87], "A'": [87, 89], "V'": [67, 70], "Q": [76, 78], "K'": [72, 73], "R": [79, 80], "K": [[60, 65], [61, 66]], "V": [[55, 62], [58, 63]], "example": [54, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Incheon attracts Susan. Manchester attracts Charles. Venice attracts Jason. >. The boys do not want to go to a city of South Korea\n < London attracts Helen. Washington, D.C attracts Christopher. Munich attracts David. >. The boys do not want to go to a city of the United Kingdom\n", "ranges": [{"END": [53, 54], "A'": [54, 56], "V'": [23, 26], "Q": [43, 45], "K'": [28, 29], "R": [46, 47], "K": [[33, 39], [34, 40]], "V": [[30, 35], [31, 37]], "example": [22, 56]}, {"END": [90, 91], "A'": [91, 94], "V'": [58, 59], "Q": [80, 82], "K'": [61, 62], "R": [83, 84], "K": [[70, 76], [71, 77]], "V": [[63, 72], [68, 74]], "example": [57, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Seoul attracts Brian. Saint Petersburg attracts Daniel. Mumbai attracts Betty. >. The boys do not want to go to a city of India\n < Bras\u00edlia attracts Kenneth. Busan attracts Paul. Bern attracts Linda. >. The boys do not want to go to a city of Switzerland\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [31, 34], "Q": [40, 42], "K'": [36, 37], "R": [43, 44], "K": [[23, 29], [24, 30]], "V": [[19, 25], [21, 27]], "example": [18, 52]}, {"END": [84, 85], "A'": [85, 86], "V'": [66, 67], "Q": [74, 76], "K'": [69, 71], "R": [77, 78], "K": [[58, 64], [59, 65]], "V": [[54, 60], [56, 62]], "example": [53, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Ottawa attracts Michelle. Tokyo attracts Daniel. Seoul attracts Margaret. >. The girls do not want to go to a city of Japan\n < Los Angeles attracts Paul. Lyon attracts Sarah. New Delhi attracts Kimberly. >. The girls do not want to go to a city of the United States\n", "ranges": [{"END": [53, 54], "A'": [54, 55], "V'": [30, 31], "Q": [43, 45], "K'": [33, 34], "R": [46, 47], "K": [[27, 39], [29, 40]], "V": [[23, 35], [25, 37]], "example": [22, 55]}, {"END": [89, 90], "A'": [90, 93], "V'": [57, 59], "Q": [79, 81], "K'": [61, 62], "R": [82, 83], "K": [[66, 73], [67, 76]], "V": [[63, 68], [64, 71]], "example": [56, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Switzerland, South Korea, Canada and China.\n< Shanghai attracts Charles. Manchester attracts Jeff. Zurich attracts Michelle. >. The boys do not want to go to a city of Switzerland\n < Ottawa attracts Ruth. Incheon attracts Christopher. Geneva attracts Brian. >. The boys do not want to go to a city of Canada\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [32, 34], "Q": [41, 43], "K'": [36, 38], "R": [44, 45], "K": [[25, 30], [26, 31]], "V": [[21, 27], [23, 28]], "example": [20, 53]}, {"END": [86, 87], "A'": [87, 88], "V'": [55, 57], "Q": [76, 78], "K'": [59, 60], "R": [79, 80], "K": [[66, 72], [67, 73]], "V": [[61, 68], [64, 70]], "example": [54, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include China, France, Italy, Japan, India and the United Kingdom.\n< Beijing attracts Nancy. Osaka attracts Lisa. Milan attracts George. >. The girls do not want to go to a city of Italy\n < Lyon attracts Christopher. Bangalore attracts Nancy. Birmingham attracts Margaret. >. The girls do not want to go to a city of France\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [35, 36], "Q": [42, 44], "K'": [38, 39], "R": [45, 46], "K": [[27, 33], [28, 34]], "V": [[22, 29], [25, 31]], "example": [21, 54]}, {"END": [86, 87], "A'": [87, 88], "V'": [56, 57], "Q": [76, 78], "K'": [59, 60], "R": [79, 80], "K": [[66, 72], [67, 73]], "V": [[61, 68], [64, 70]], "example": [55, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include South Korea, Australia, the United States, Canada, Switzerland and India.\n< Ottawa attracts George. Canberra attracts William. Bern attracts Dorothy. >. The boys do not want to go to a city of Switzerland\n < Busan attracts Kevin. New Delhi attracts Daniel. Washington, D.C attracts Donna. >. The boys do not want to go to a city of the United States\n", "ranges": [{"END": [54, 55], "A'": [55, 56], "V'": [36, 37], "Q": [44, 46], "K'": [39, 41], "R": [47, 48], "K": [[27, 34], [28, 35]], "V": [[23, 29], [25, 32]], "example": [22, 56]}, {"END": [93, 94], "A'": [94, 97], "V'": [71, 76], "Q": [83, 85], "K'": [78, 80], "R": [86, 87], "K": [[62, 69], [63, 70]], "V": [[58, 64], [60, 67]], "example": [57, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, Russia, France, Canada and the United Kingdom.\n< Ottawa attracts Kenneth. Moscow attracts Karen. Paris attracts Kevin. >. The boys do not want to go to a city of Russia\n < Birmingham attracts Jennifer. Kyoto attracts David. Vancouver attracts Ruth. >. The girls do not want to go to a city of Japan\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [26, 27], "Q": [39, 41], "K'": [29, 31], "R": [42, 43], "K": [[24, 35], [25, 36]], "V": [[20, 32], [22, 33]], "example": [19, 51]}, {"END": [84, 85], "A'": [85, 86], "V'": [60, 62], "Q": [74, 76], "K'": [64, 65], "R": [77, 78], "K": [[57, 70], [59, 71]], "V": [[53, 66], [55, 68]], "example": [52, 86]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, the United Kingdom, Spain, Russia, India and Thailand.\nPremise: < London attracts Brian. Moscow attracts Kenneth. Vancouver attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Jason. Madrid attracts Joseph. Bangkok attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [37, 39], "Q": [61, 63], "K'": [41, 42], "R": [64, 65], "K": [[30, 35], [31, 36]], "V": [[27, 32], [28, 33]], "example": [22, 79]}, {"END": [136, 137], "A'": [132, 134], "V'": [96, 99], "Q": [121, 123], "K'": [101, 102], "R": [124, 125], "K": [[89, 94], [90, 95]], "V": [[84, 91], [87, 92]], "example": [80, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, the United Kingdom, India, Thailand, Spain and Russia.\nPremise: < London attracts Brian. Moscow attracts Kenneth. Vancouver attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United Kingdom? Answer: No\n Premise: < New Delhi attracts Jason. Madrid attracts Joseph. Bangkok attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [37, 39], "Q": [61, 63], "K'": [41, 42], "R": [64, 65], "K": [[30, 35], [31, 36]], "V": [[27, 32], [28, 33]], "example": [22, 79]}, {"END": [135, 136], "A'": [132, 133], "V'": [96, 99], "Q": [121, 123], "K'": [101, 102], "R": [124, 125], "K": [[89, 94], [90, 95]], "V": [[84, 91], [87, 92]], "example": [80, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Incheon attracts Anthony. Brisbane attracts William. London attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Elizabeth. Bras\u00edlia attracts Kevin. Brisbane attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [38, 39], "Q": [61, 63], "K'": [41, 42], "R": [64, 65], "K": [[28, 36], [29, 37]], "V": [[23, 30], [26, 34]], "example": [18, 77]}, {"END": [135, 136], "A'": [132, 133], "V'": [89, 91], "Q": [121, 123], "K'": [93, 94], "R": [124, 125], "K": [[87, 101], [88, 102]], "V": [[82, 95], [85, 99]], "example": [78, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Incheon attracts Anthony. Brisbane attracts William. London attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Elizabeth. Bras\u00edlia attracts Kevin. Brisbane attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [38, 39], "Q": [61, 63], "K'": [41, 42], "R": [64, 65], "K": [[28, 36], [29, 37]], "V": [[23, 30], [26, 34]], "example": [18, 77]}, {"END": [136, 137], "A'": [132, 134], "V'": [89, 91], "Q": [121, 123], "K'": [93, 94], "R": [124, 125], "K": [[87, 101], [88, 102]], "V": [[82, 95], [85, 99]], "example": [78, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, India, the United States, South Korea, Canada and Spain.\nPremise: < Washington, D.C attracts Robert. Barcelona attracts Donald. Bangalore attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n Premise: < Ottawa attracts Nancy. Tokyo attracts Charles. Seoul attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [41, 44], "Q": [66, 68], "K'": [46, 47], "R": [69, 70], "K": [[34, 39], [35, 40]], "V": [[27, 36], [32, 37]], "example": [22, 82]}, {"END": [137, 138], "A'": [134, 135], "V'": [93, 94], "Q": [123, 125], "K'": [96, 97], "R": [126, 127], "K": [[91, 102], [92, 104]], "V": [[87, 98], [89, 100]], "example": [83, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, India, Canada, South Korea, Spain and Japan.\nPremise: < Washington, D.C attracts Robert. Barcelona attracts Donald. Bangalore attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Spain? Answer: No\n Premise: < Ottawa attracts Nancy. Tokyo attracts Charles. Seoul attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [41, 44], "Q": [66, 68], "K'": [46, 47], "R": [69, 70], "K": [[34, 39], [35, 40]], "V": [[27, 36], [32, 37]], "example": [22, 82]}, {"END": [138, 139], "A'": [134, 136], "V'": [93, 94], "Q": [123, 125], "K'": [96, 97], "R": [126, 127], "K": [[91, 102], [92, 104]], "V": [[87, 98], [89, 100]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, France, Brazil, Germany, Japan and the United States.\nPremise: < New York attracts Patricia. Paris attracts Joseph. Hamburg attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: No\n Premise: < Birmingham attracts Anthony. Bras\u00edlia attracts Nancy. Osaka attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [36, 37], "Q": [66, 68], "K'": [39, 40], "R": [69, 70], "K": [[32, 44], [35, 47]], "V": [[28, 41], [30, 42]], "example": [23, 84]}, {"END": [142, 143], "A'": [137, 140], "V'": [89, 91], "Q": [126, 128], "K'": [93, 94], "R": [129, 130], "K": [[99, 105], [100, 107]], "V": [[95, 101], [97, 103]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, the United Kingdom, Brazil, the United States, Japan and France.\nPremise: < New York attracts Patricia. Paris attracts Joseph. Hamburg attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: No\n Premise: < Birmingham attracts Anthony. Bras\u00edlia attracts Nancy. Osaka attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [36, 37], "Q": [66, 68], "K'": [39, 40], "R": [69, 70], "K": [[32, 44], [35, 47]], "V": [[28, 41], [30, 42]], "example": [23, 84]}, {"END": [140, 141], "A'": [137, 138], "V'": [89, 91], "Q": [126, 128], "K'": [93, 94], "R": [129, 130], "K": [[99, 105], [100, 107]], "V": [[95, 101], [97, 103]], "example": [85, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include China, Switzerland, Canada, South Korea, Russia and India.\nPremise: < Novosibirsk attracts James. Seoul attracts Edward. Beijing attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of China? Answer: Yes\n Premise: < Geneva attracts Kenneth. Vancouver attracts Margaret. Bangalore attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [40, 43], "Q": [66, 68], "K'": [45, 47], "R": [69, 70], "K": [[32, 38], [33, 39]], "V": [[25, 34], [30, 36]], "example": [20, 82]}, {"END": [138, 139], "A'": [135, 136], "V'": [93, 95], "Q": [124, 126], "K'": [97, 98], "R": [127, 128], "K": [[91, 104], [92, 105]], "V": [[87, 99], [89, 102]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, China, Russia, Switzerland, Canada and South Korea.\nPremise: < Novosibirsk attracts James. Seoul attracts Edward. Beijing attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of China? Answer: Yes\n Premise: < Geneva attracts Kenneth. Vancouver attracts Margaret. Bangalore attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [40, 43], "Q": [66, 68], "K'": [45, 47], "R": [69, 70], "K": [[32, 38], [33, 39]], "V": [[25, 34], [30, 36]], "example": [20, 82]}, {"END": [138, 139], "A'": [135, 136], "V'": [93, 95], "Q": [124, 126], "K'": [97, 98], "R": [127, 128], "K": [[91, 104], [92, 105]], "V": [[87, 99], [89, 102]], "example": [83, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, Switzerland, India and Italy.\nPremise: < Zurich attracts Carol. Rome attracts Ronald. Bangalore attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Switzerland? Answer: No\n Premise: < New Delhi attracts Patricia. Venice attracts Michael. New York attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of India? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [28, 29], "Q": [61, 63], "K'": [31, 33], "R": [64, 65], "K": [[26, 39], [27, 42]], "V": [[22, 34], [24, 37]], "example": [17, 77]}, {"END": [135, 136], "A'": [132, 133], "V'": [82, 85], "Q": [121, 123], "K'": [87, 90], "R": [124, 125], "K": [[95, 101], [96, 102]], "V": [[91, 97], [93, 99]], "example": [78, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, India, Italy and the United States.\nPremise: < Zurich attracts Carol. Rome attracts Ronald. Bangalore attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Switzerland? Answer: No\n Premise: < New Delhi attracts Patricia. Venice attracts Michael. New York attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of the United States? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [28, 29], "Q": [61, 63], "K'": [31, 33], "R": [64, 65], "K": [[26, 39], [27, 42]], "V": [[22, 34], [24, 37]], "example": [17, 77]}, {"END": [137, 138], "A'": [132, 135], "V'": [82, 85], "Q": [121, 123], "K'": [87, 90], "R": [124, 125], "K": [[95, 101], [96, 102]], "V": [[91, 97], [93, 99]], "example": [78, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Italy, Russia, France, Japan and the United Kingdom.\nPremise: < Chiang Mai attracts Joseph. London attracts Ruth. Osaka attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: No\n Premise: < Florence attracts Steven. Lyon attracts Kimberly. Novosibirsk attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [74, 76], "V'": [34, 35], "Q": [63, 65], "K'": [37, 38], "R": [66, 67], "K": [[32, 43], [33, 44]], "V": [[27, 39], [30, 41]], "example": [22, 80]}, {"END": [138, 139], "A'": [135, 136], "V'": [90, 91], "Q": [124, 126], "K'": [93, 96], "R": [127, 128], "K": [[88, 104], [89, 105]], "V": [[85, 97], [86, 102]], "example": [81, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, the United Kingdom, Japan, France, Russia and Italy.\nPremise: < Chiang Mai attracts Joseph. London attracts Ruth. Osaka attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Thailand? Answer: No\n Premise: < Florence attracts Steven. Lyon attracts Kimberly. Novosibirsk attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [74, 76], "V'": [34, 35], "Q": [63, 65], "K'": [37, 38], "R": [66, 67], "K": [[32, 43], [33, 44]], "V": [[27, 39], [30, 41]], "example": [22, 80]}, {"END": [138, 139], "A'": [135, 136], "V'": [90, 91], "Q": [124, 126], "K'": [93, 96], "R": [127, 128], "K": [[88, 104], [89, 105]], "V": [[85, 97], [86, 102]], "example": [81, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, France, the United States and Germany.\nPremise: < Washington, D.C attracts Jason. Manchester attracts Margaret. Marseille attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: Yes\n Premise: < Kyoto attracts Dorothy. Seoul attracts Elizabeth. Berlin attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [78, 81], "V'": [29, 34], "Q": [67, 69], "K'": [36, 37], "R": [70, 71], "K": [[41, 47], [42, 48]], "V": [[38, 43], [39, 45]], "example": [24, 85]}, {"END": [140, 141], "A'": [137, 138], "V'": [103, 104], "Q": [126, 128], "K'": [106, 107], "R": [129, 130], "K": [[94, 101], [96, 102]], "V": [[90, 97], [92, 99]], "example": [86, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, South Korea, the United States, Germany, Japan and France.\nPremise: < Washington, D.C attracts Jason. Manchester attracts Margaret. Marseille attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of the United States? Answer: Yes\n Premise: < Kyoto attracts Dorothy. Seoul attracts Elizabeth. Berlin attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [78, 81], "V'": [29, 34], "Q": [67, 69], "K'": [36, 37], "R": [70, 71], "K": [[41, 47], [42, 48]], "V": [[38, 43], [39, 45]], "example": [24, 85]}, {"END": [141, 142], "A'": [137, 139], "V'": [103, 104], "Q": [126, 128], "K'": [106, 107], "R": [129, 130], "K": [[94, 101], [96, 102]], "V": [[90, 97], [92, 99]], "example": [86, 143]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Lyon. Betty likes Paris. Thomas likes Washington, D.C. >. So who wants to go to a city of the United States? the boy\n < Edward likes Sao Paulo. Kevin likes Brisbane. Nancy likes London. >. So who wants to go to a city of the United Kingdom? the girl\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [13, 14], "Q": [33, 36], "K": [16, 21], "R": null, "K'": [[6, 11], [7, 12]], "V'": [[2, 8], [4, 9]], "example": [1, 39]}, {"END": [76, 77], "A": [77, 78], "V": [56, 57], "Q": [72, 75], "K": [59, 60], "R": null, "K'": [[44, 51], [47, 55]], "V'": [[41, 48], [42, 49]], "example": [40, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David likes Venice. Kimberly likes Bern. Kenneth likes Kyoto. >. So who wants to go to a city of Switzerland? the girl\n < Nancy likes Pattaya. Deborah likes Florence. Thomas likes Valencia. >. So who wants to go to a city of Spain? the boy\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [8, 11], "Q": [32, 33], "K": [13, 14], "R": null, "K'": [[5, 18], [7, 20]], "V'": [[2, 15], [3, 16]], "example": [1, 36]}, {"END": [71, 72], "A": [72, 73], "V": [52, 53], "Q": [69, 70], "K": [55, 57], "R": null, "K'": [[41, 50], [44, 51]], "V'": [[38, 45], [39, 48]], "example": [37, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark likes Sydney. Nancy likes Toronto. Sharon likes Berlin. >. So who wants to go to a city of Australia? the boy\n < Donna likes Florence. Christopher likes Tokyo. Richard likes Vancouver. >. So who wants to go to a city of Italy? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [29, 30], "K": [5, 6], "R": null, "K'": [[10, 16], [11, 17]], "V'": [[7, 12], [8, 14]], "example": [1, 33]}, {"END": [65, 66], "A": [66, 67], "V": [35, 37], "Q": [63, 64], "K": [39, 40], "R": null, "K'": [[44, 49], [45, 51]], "V'": [[41, 46], [42, 47]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel likes Canberra. Ronald likes Mumbai. Susan likes Berlin. >. So who wants to go to a city of Germany? the girl\n < Jason likes New York. Karen likes Vancouver. Kevin likes Moscow. >. So who wants to go to a city of Canada? the girl\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [17, 18], "Q": [33, 34], "K": [20, 21], "R": null, "K'": [[5, 13], [8, 16]], "V'": [[2, 9], [3, 11]], "example": [1, 37]}, {"END": [70, 71], "A": [71, 72], "V": [45, 47], "Q": [68, 69], "K": [49, 51], "R": null, "K'": [[42, 55], [44, 56]], "V'": [[39, 52], [40, 53]], "example": [38, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes Valencia. Margaret likes New York. John likes Toronto. >. So who wants to go to a city of the United States? the girl\n < George likes New York. Charles likes New Delhi. Mary likes Toronto. >. So who wants to go to a city of Canada? the girl\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [8, 9], "Q": [30, 33], "K": [11, 13], "R": null, "K'": [[5, 17], [7, 18]], "V'": [[2, 14], [3, 15]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [51, 52], "Q": [67, 68], "K": [54, 55], "R": null, "K'": [[41, 47], [43, 50]], "V'": [[38, 44], [39, 45]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Margaret likes Birmingham. Jason likes Los Angeles. Steven likes Incheon. >. So who wants to go to a city of the United Kingdom? the girl\n < Nancy likes Busan. Daniel likes Bangalore. Lisa likes Florence. >. So who wants to go to a city of India? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [2, 3], "Q": [32, 35], "K": [5, 7], "R": null, "K'": [[11, 17], [13, 20]], "V'": [[8, 14], [9, 15]], "example": [1, 38]}, {"END": [71, 72], "A": [72, 73], "V": [46, 47], "Q": [69, 70], "K": [49, 52], "R": null, "K'": [[43, 56], [45, 57]], "V'": [[40, 53], [41, 54]], "example": [39, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kenneth likes Tokyo. Dorothy likes Manchester. Barbara likes Guangzhou. >. So who wants to go to a city of Japan? the boy\n < Kevin likes Ottawa. Steven likes Valencia. Susan likes Venice. >. So who wants to go to a city of Italy? the girl\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [2, 3], "Q": [32, 33], "K": [5, 6], "R": null, "K'": [[11, 16], [12, 20]], "V'": [[7, 13], [9, 14]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [50, 51], "Q": [67, 68], "K": [53, 55], "R": null, "K'": [[41, 47], [43, 49]], "V'": [[38, 44], [39, 45]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sarah likes New Delhi. Kenneth likes Paris. Nancy likes Bern. >. So who wants to go to a city of France? the boy\n < Maria likes Beijing. Barbara likes New Delhi. Steven likes Kyoto. >. So who wants to go to a city of Japan? the boy\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [9, 10], "Q": [30, 31], "K": [12, 13], "R": null, "K'": [[5, 17], [8, 18]], "V'": [[2, 14], [3, 15]], "example": [1, 34]}, {"END": [69, 70], "A": [70, 71], "V": [50, 51], "Q": [67, 68], "K": [53, 55], "R": null, "K'": [[39, 46], [42, 49]], "V'": [[36, 43], [37, 44]], "example": [35, 71]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Lyon. Betty likes Paris. Thomas likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is the girl? Answer: No\n Premise: < Edward likes Chiang Mai. Kevin likes Sao Paulo. Nancy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [16, 17], "Q": [53, 56], "K": [19, 24], "R": null, "K'": [[9, 14], [10, 15]], "V'": [[5, 11], [7, 12]], "example": [1, 63]}, {"END": [121, 122], "A": [117, 119], "V": [82, 83], "Q": [115, 116], "K": [85, 86], "R": null, "K'": [[71, 78], [74, 81]], "V'": [[68, 75], [69, 76]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Lyon. Betty likes Paris. Thomas likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is the girl? Answer: No\n Premise: < Edward likes Chiang Mai. Kevin likes Sao Paulo. Nancy likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [16, 17], "Q": [53, 56], "K": [19, 24], "R": null, "K'": [[9, 14], [10, 15]], "V'": [[5, 11], [7, 12]], "example": [1, 63]}, {"END": [121, 122], "A": [117, 119], "V": [82, 83], "Q": [115, 116], "K": [85, 86], "R": null, "K'": [[71, 78], [74, 81]], "V'": [[68, 75], [69, 76]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Sydney. Lisa likes Rio de Janeiro. Anthony likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is the girl? Answer: Yes\n Premise: < Charles likes Vancouver. Sarah likes Florence. William likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [53, 54], "K": [13, 16], "R": null, "K'": [[8, 20], [9, 24]], "V'": [[5, 17], [6, 18]], "example": [1, 61]}, {"END": [117, 118], "A": [113, 115], "V": [72, 73], "Q": [111, 112], "K": [75, 76], "R": null, "K'": [[69, 80], [71, 82]], "V'": [[66, 77], [67, 78]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Sydney. Lisa likes Rio de Janeiro. Anthony likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is the girl? Answer: Yes\n Premise: < Charles likes Vancouver. Sarah likes Florence. William likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [53, 54], "K": [13, 16], "R": null, "K'": [[8, 20], [9, 24]], "V'": [[5, 17], [6, 18]], "example": [1, 61]}, {"END": [117, 118], "A": [113, 115], "V": [72, 73], "Q": [111, 112], "K": [75, 76], "R": null, "K'": [[69, 80], [71, 82]], "V'": [[66, 77], [67, 78]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donna likes Florence. Christopher likes Tokyo. Richard likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n Premise: < Ruth likes Seoul. Paul likes Sydney. Charles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 7], "Q": [50, 51], "K": [9, 10], "R": null, "K'": [[14, 19], [15, 21]], "V'": [[11, 16], [12, 17]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [63, 64], "Q": [108, 110], "K": [66, 68], "R": null, "K'": [[72, 77], [73, 79]], "V'": [[69, 74], [70, 75]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donna likes Florence. Christopher likes Tokyo. Richard likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n Premise: < Ruth likes Seoul. Paul likes Sydney. Charles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 7], "Q": [50, 51], "K": [9, 10], "R": null, "K'": [[14, 19], [15, 21]], "V'": [[11, 16], [12, 17]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [63, 64], "Q": [108, 110], "K": [66, 68], "R": null, "K'": [[72, 77], [73, 79]], "V'": [[69, 74], [70, 75]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert likes Sao Paulo. Deborah likes Incheon. William likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n Premise: < Jason likes Sao Paulo. Elizabeth likes Guangzhou. Joseph likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [12, 15], "Q": [54, 56], "K": [17, 20], "R": null, "K'": [[8, 24], [11, 25]], "V'": [[5, 21], [6, 22]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [75, 76], "Q": [117, 118], "K": [78, 82], "R": null, "K'": [[71, 86], [74, 88]], "V'": [[68, 83], [69, 84]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert likes Sao Paulo. Deborah likes Incheon. William likes Sydney. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n Premise: < Jason likes Sao Paulo. Elizabeth likes Guangzhou. Joseph likes Marseille. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [12, 15], "Q": [54, 56], "K": [17, 20], "R": null, "K'": [[8, 24], [11, 25]], "V'": [[5, 21], [6, 22]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [75, 76], "Q": [117, 118], "K": [78, 82], "R": null, "K'": [[71, 86], [74, 88]], "V'": [[68, 83], [69, 84]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < John likes Bras\u00edlia. Betty likes London. Kenneth likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is the girl? Answer: Yes\n Premise: < Nancy likes Busan. Daniel likes Bangalore. Lisa likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [11, 12], "Q": [50, 53], "K": [14, 15], "R": null, "K'": [[8, 19], [10, 21]], "V'": [[5, 16], [6, 17]], "example": [1, 60]}, {"END": [117, 118], "A": [113, 115], "V": [71, 72], "Q": [111, 112], "K": [74, 77], "R": null, "K'": [[68, 81], [70, 82]], "V'": [[65, 78], [66, 79]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < John likes Bras\u00edlia. Betty likes London. Kenneth likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is the girl? Answer: Yes\n Premise: < Nancy likes Busan. Daniel likes Bangalore. Lisa likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [11, 12], "Q": [50, 53], "K": [14, 15], "R": null, "K'": [[8, 19], [10, 21]], "V'": [[5, 16], [6, 17]], "example": [1, 60]}, {"END": [117, 118], "A": [113, 115], "V": [71, 72], "Q": [111, 112], "K": [74, 77], "R": null, "K'": [[68, 81], [70, 82]], "V'": [[65, 78], [66, 79]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Sao Paulo. Michael likes Moscow. Nancy likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n Premise: < George likes Tokyo. Robert likes Barcelona. Sharon likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [17, 18], "Q": [50, 51], "K": [20, 21], "R": null, "K'": [[8, 15], [11, 16]], "V'": [[5, 12], [6, 13]], "example": [1, 58]}, {"END": [116, 117], "A": [112, 114], "V": [73, 75], "Q": [109, 111], "K": [77, 80], "R": null, "K'": [[66, 71], [67, 72]], "V'": [[63, 68], [64, 69]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Sao Paulo. Michael likes Moscow. Nancy likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n Premise: < George likes Tokyo. Robert likes Barcelona. Sharon likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [17, 18], "Q": [50, 51], "K": [20, 21], "R": null, "K'": [[8, 15], [11, 16]], "V'": [[5, 12], [6, 13]], "example": [1, 58]}, {"END": [116, 117], "A": [112, 114], "V": [73, 75], "Q": [109, 111], "K": [77, 80], "R": null, "K'": [[66, 71], [67, 72]], "V'": [[63, 68], [64, 69]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes Toronto. Paul likes Paris. Maria likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n Premise: < Maria likes Munich. Jennifer likes Saint Petersburg. Anthony likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [15, 16], "Q": [50, 51], "K": [18, 21], "R": null, "K'": [[8, 13], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 58]}, {"END": [117, 118], "A": [113, 115], "V": [76, 77], "Q": [110, 112], "K": [79, 81], "R": null, "K'": [[66, 73], [68, 75]], "V'": [[63, 69], [64, 71]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes Toronto. Paul likes Paris. Maria likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n Premise: < Maria likes Munich. Jennifer likes Saint Petersburg. Anthony likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [15, 16], "Q": [50, 51], "K": [18, 21], "R": null, "K'": [[8, 13], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 58]}, {"END": [117, 118], "A": [113, 115], "V": [76, 77], "Q": [110, 112], "K": [79, 81], "R": null, "K'": [[66, 73], [68, 75]], "V'": [[63, 69], [64, 71]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph likes Canberra. Edward likes Rio de Janeiro. Dorothy likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: Yes\n Premise: < Christopher likes Birmingham. James likes Incheon. Deborah likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [19, 21], "Q": [55, 56], "K": [23, 26], "R": null, "K'": [[8, 15], [11, 18]], "V'": [[5, 12], [6, 13]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [81, 84], "Q": [116, 117], "K": [86, 87], "R": null, "K'": [[71, 77], [73, 80]], "V'": [[68, 74], [69, 75]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph likes Canberra. Edward likes Rio de Janeiro. Dorothy likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: Yes\n Premise: < Christopher likes Birmingham. James likes Incheon. Deborah likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [19, 21], "Q": [55, 56], "K": [23, 26], "R": null, "K'": [[8, 15], [11, 18]], "V'": [[5, 12], [6, 13]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [81, 84], "Q": [116, 117], "K": [86, 87], "R": null, "K'": [[71, 77], [73, 80]], "V'": [[68, 74], [69, 75]], "example": [64, 124]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Lyon attracts Sharon. Paris attracts Betty. Washington, D.C attracts Thomas. >. So who wants to go to a city of the United States? the boy\n < Sao Paulo attracts Edward. Brisbane attracts Kevin. London attracts Nancy. >. So who wants to go to a city of the United Kingdom? the girl\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [20, 21], "Q": [33, 36], "K": [13, 18], "R": null, "K'": [[2, 8], [3, 9]], "V'": [[5, 11], [7, 12]], "example": [1, 39]}, {"END": [76, 77], "A": [77, 78], "V": [59, 60], "Q": [72, 75], "K": [56, 57], "R": null, "K'": [[41, 48], [44, 52]], "V'": [[46, 54], [47, 55]], "example": [40, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Venice attracts David. Bern attracts Kimberly. Kyoto attracts Kenneth. >. So who wants to go to a city of Switzerland? the girl\n < Pattaya attracts Nancy. Florence attracts Deborah. Valencia attracts Thomas. >. So who wants to go to a city of Spain? the boy\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [11, 14], "Q": [32, 33], "K": [8, 9], "R": null, "K'": [[2, 15], [4, 17]], "V'": [[6, 19], [7, 20]], "example": [1, 36]}, {"END": [71, 72], "A": [72, 73], "V": [56, 57], "Q": [69, 70], "K": [52, 54], "R": null, "K'": [[38, 45], [41, 46]], "V'": [[43, 48], [44, 51]], "example": [37, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Sydney attracts Mark. Toronto attracts Nancy. Berlin attracts Sharon. >. So who wants to go to a city of Australia? the boy\n < Florence attracts Donna. Tokyo attracts Christopher. Vancouver attracts Richard. >. So who wants to go to a city of Italy? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [5, 6], "Q": [29, 30], "K": [2, 3], "R": null, "K'": [[7, 12], [8, 13]], "V'": [[10, 15], [11, 17]], "example": [1, 33]}, {"END": [65, 66], "A": [66, 67], "V": [38, 40], "Q": [63, 64], "K": [35, 36], "R": null, "K'": [[41, 46], [42, 48]], "V'": [[44, 50], [45, 51]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Daniel. Mumbai attracts Ronald. Berlin attracts Susan. >. So who wants to go to a city of Germany? the girl\n < New York attracts Jason. Vancouver attracts Karen. Moscow attracts Kevin. >. So who wants to go to a city of Canada? the girl\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [20, 21], "Q": [33, 34], "K": [17, 18], "R": null, "K'": [[2, 9], [5, 12]], "V'": [[7, 14], [8, 16]], "example": [1, 37]}, {"END": [70, 71], "A": [71, 72], "V": [49, 51], "Q": [68, 69], "K": [45, 47], "R": null, "K'": [[39, 52], [41, 53]], "V'": [[43, 55], [44, 56]], "example": [38, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Valencia attracts Jeff. New York attracts Margaret. Toronto attracts John. >. So who wants to go to a city of the United States? the girl\n < New York attracts George. New Delhi attracts Charles. Toronto attracts Mary. >. So who wants to go to a city of Canada? the girl\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [12, 13], "Q": [30, 33], "K": [8, 10], "R": null, "K'": [[2, 14], [4, 15]], "V'": [[6, 17], [7, 18]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [54, 55], "Q": [67, 68], "K": [51, 52], "R": null, "K'": [[38, 44], [40, 47]], "V'": [[42, 49], [43, 50]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Birmingham attracts Margaret. Los Angeles attracts Jason. Incheon attracts Steven. >. So who wants to go to a city of the United Kingdom? the girl\n < Busan attracts Nancy. Bangalore attracts Daniel. Florence attracts Lisa. >. So who wants to go to a city of India? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [6, 7], "Q": [32, 35], "K": [2, 4], "R": null, "K'": [[8, 14], [10, 17]], "V'": [[12, 19], [13, 20]], "example": [1, 38]}, {"END": [71, 72], "A": [72, 73], "V": [51, 52], "Q": [69, 70], "K": [46, 49], "R": null, "K'": [[40, 53], [42, 54]], "V'": [[44, 56], [45, 57]], "example": [39, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Tokyo attracts Kenneth. Manchester attracts Dorothy. Guangzhou attracts Barbara. >. So who wants to go to a city of Japan? the boy\n < Ottawa attracts Kevin. Valencia attracts Steven. Venice attracts Susan. >. So who wants to go to a city of Italy? the girl\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [5, 6], "Q": [32, 33], "K": [2, 3], "R": null, "K'": [[7, 13], [8, 17]], "V'": [[10, 19], [12, 20]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [54, 55], "Q": [67, 68], "K": [50, 52], "R": null, "K'": [[38, 44], [40, 46]], "V'": [[42, 48], [43, 49]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< New Delhi attracts Sarah. Paris attracts Kenneth. Bern attracts Nancy. >. So who wants to go to a city of France? the boy\n < Beijing attracts Maria. New Delhi attracts Barbara. Kyoto attracts Steven. >. So who wants to go to a city of Japan? the boy\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [12, 13], "Q": [30, 31], "K": [9, 10], "R": null, "K'": [[2, 14], [5, 15]], "V'": [[7, 17], [8, 18]], "example": [1, 34]}, {"END": [69, 70], "A": [70, 71], "V": [54, 55], "Q": [67, 68], "K": [50, 52], "R": null, "K'": [[36, 43], [39, 46]], "V'": [[41, 48], [42, 49]], "example": [35, 71]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Sharon. Paris attracts Betty. Washington, D.C attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is the girl? Answer: No\n Premise: < Chiang Mai attracts Edward. Sao Paulo attracts Kevin. Paris attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [23, 24], "Q": [53, 56], "K": [16, 21], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 15]], "example": [1, 63]}, {"END": [121, 122], "A": [117, 119], "V": [85, 86], "Q": [115, 116], "K": [82, 83], "R": null, "K'": [[68, 75], [71, 78]], "V'": [[73, 80], [74, 81]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Lyon attracts Sharon. Paris attracts Betty. Washington, D.C attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is the girl? Answer: No\n Premise: < Chiang Mai attracts Edward. Sao Paulo attracts Kevin. Paris attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [23, 24], "Q": [53, 56], "K": [16, 21], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 15]], "example": [1, 63]}, {"END": [121, 122], "A": [117, 119], "V": [85, 86], "Q": [115, 116], "K": [82, 83], "R": null, "K'": [[68, 75], [71, 78]], "V'": [[73, 80], [74, 81]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sydney attracts Mark. Rio de Janeiro attracts Lisa. Guangzhou attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is the girl? Answer: Yes\n Premise: < Vancouver attracts Charles. Florence attracts Sarah. Kyoto attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [15, 16], "Q": [53, 54], "K": [10, 13], "R": null, "K'": [[5, 17], [6, 21]], "V'": [[8, 23], [9, 24]], "example": [1, 61]}, {"END": [117, 118], "A": [113, 115], "V": [75, 76], "Q": [111, 112], "K": [72, 73], "R": null, "K'": [[66, 77], [68, 79]], "V'": [[70, 81], [71, 82]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sydney attracts Mark. Rio de Janeiro attracts Lisa. Guangzhou attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is the girl? Answer: Yes\n Premise: < Vancouver attracts Charles. Florence attracts Sarah. Kyoto attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [15, 16], "Q": [53, 54], "K": [10, 13], "R": null, "K'": [[5, 17], [6, 21]], "V'": [[8, 23], [9, 24]], "example": [1, 61]}, {"END": [117, 118], "A": [113, 115], "V": [75, 76], "Q": [111, 112], "K": [72, 73], "R": null, "K'": [[66, 77], [68, 79]], "V'": [[70, 81], [71, 82]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Florence attracts Donna. Tokyo attracts Christopher. Vancouver attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n Premise: < Seoul attracts Ruth. Sydney attracts Paul. Birmingham attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [8, 10], "Q": [50, 51], "K": [5, 6], "R": null, "K'": [[11, 16], [12, 18]], "V'": [[14, 20], [15, 21]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [67, 68], "Q": [108, 110], "K": [63, 65], "R": null, "K'": [[69, 74], [70, 76]], "V'": [[72, 78], [73, 79]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Florence attracts Donna. Tokyo attracts Christopher. Vancouver attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the girl? Answer: Yes\n Premise: < Seoul attracts Ruth. Sydney attracts Paul. Birmingham attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [8, 10], "Q": [50, 51], "K": [5, 6], "R": null, "K'": [[11, 16], [12, 18]], "V'": [[14, 20], [15, 21]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [67, 68], "Q": [108, 110], "K": [63, 65], "R": null, "K'": [[69, 74], [70, 76]], "V'": [[72, 78], [73, 79]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Robert. Incheon attracts Deborah. Sydney attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n Premise: < Sao Paulo attracts Jason. Guangzhou attracts Elizabeth. Marseille attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [17, 20], "Q": [54, 56], "K": [12, 15], "R": null, "K'": [[5, 21], [8, 22]], "V'": [[10, 24], [11, 25]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [81, 82], "Q": [117, 118], "K": [75, 79], "R": null, "K'": [[68, 83], [71, 85]], "V'": [[73, 87], [74, 88]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Robert. Incheon attracts Deborah. Sydney attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: No\n Premise: < Sao Paulo attracts Jason. Guangzhou attracts Elizabeth. Marseille attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [17, 20], "Q": [54, 56], "K": [12, 15], "R": null, "K'": [[5, 21], [8, 22]], "V'": [[10, 24], [11, 25]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [81, 82], "Q": [117, 118], "K": [75, 79], "R": null, "K'": [[68, 83], [71, 85]], "V'": [[73, 87], [74, 88]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts John. London attracts Betty. Osaka attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is the girl? Answer: Yes\n Premise: < Busan attracts Nancy. Bangalore attracts Daniel. Florence attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [14, 15], "Q": [50, 53], "K": [11, 12], "R": null, "K'": [[5, 16], [7, 18]], "V'": [[9, 20], [10, 21]], "example": [1, 60]}, {"END": [117, 118], "A": [113, 115], "V": [76, 77], "Q": [111, 112], "K": [71, 74], "R": null, "K'": [[65, 78], [67, 79]], "V'": [[69, 81], [70, 82]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bras\u00edlia attracts John. London attracts Betty. Osaka attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United Kingdom is the girl? Answer: Yes\n Premise: < Busan attracts Nancy. Bangalore attracts Daniel. Florence attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [14, 15], "Q": [50, 53], "K": [11, 12], "R": null, "K'": [[5, 16], [7, 18]], "V'": [[9, 20], [10, 21]], "example": [1, 60]}, {"END": [117, 118], "A": [113, 115], "V": [76, 77], "Q": [111, 112], "K": [71, 74], "R": null, "K'": [[65, 78], [67, 79]], "V'": [[69, 81], [70, 82]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Steven. Moscow attracts Michael. Florence attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n Premise: < Tokyo attracts George. Barcelona attracts Robert. Chiang Mai attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [20, 21], "Q": [50, 51], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[10, 15], [11, 16]], "example": [1, 58]}, {"END": [116, 117], "A": [112, 114], "V": [78, 80], "Q": [109, 111], "K": [73, 76], "R": null, "K'": [[63, 68], [64, 69]], "V'": [[66, 71], [67, 72]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Steven. Moscow attracts Michael. Florence attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is the boy? Answer: No\n Premise: < Tokyo attracts George. Barcelona attracts Robert. Chiang Mai attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [20, 21], "Q": [50, 51], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[10, 15], [11, 16]], "example": [1, 58]}, {"END": [116, 117], "A": [112, 114], "V": [78, 80], "Q": [109, 111], "K": [73, 76], "R": null, "K'": [[63, 68], [64, 69]], "V'": [[66, 71], [67, 72]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts David. Paris attracts Paul. Beijing attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n Premise: < Munich attracts Maria. Saint Petersburg attracts Jennifer. Busan attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [20, 21], "Q": [50, 51], "K": [15, 18], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 14]], "example": [1, 58]}, {"END": [117, 118], "A": [113, 115], "V": [80, 81], "Q": [110, 112], "K": [76, 78], "R": null, "K'": [[63, 69], [65, 71]], "V'": [[67, 73], [68, 75]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Toronto attracts David. Paris attracts Paul. Beijing attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is the girl? Answer: Yes\n Premise: < Munich attracts Maria. Saint Petersburg attracts Jennifer. Busan attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [20, 21], "Q": [50, 51], "K": [15, 18], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[8, 13], [9, 14]], "example": [1, 58]}, {"END": [117, 118], "A": [113, 115], "V": [80, 81], "Q": [110, 112], "K": [76, 78], "R": null, "K'": [[63, 69], [65, 71]], "V'": [[67, 73], [68, 75]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Joseph. Rio de Janeiro attracts Edward. New Delhi attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: Yes\n Premise: < Birmingham attracts Christopher. Incheon attracts James. Hamburg attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [24, 26], "Q": [55, 56], "K": [19, 22], "R": null, "K'": [[5, 12], [8, 15]], "V'": [[10, 17], [11, 18]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [84, 87], "Q": [116, 117], "K": [81, 82], "R": null, "K'": [[68, 74], [70, 77]], "V'": [[72, 79], [73, 80]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Canberra attracts Joseph. Rio de Janeiro attracts Edward. New Delhi attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is the girl? Answer: Yes\n Premise: < Birmingham attracts Christopher. Incheon attracts James. Hamburg attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [24, 26], "Q": [55, 56], "K": [19, 22], "R": null, "K'": [[5, 12], [8, 15]], "V'": [[10, 17], [11, 18]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [84, 87], "Q": [116, 117], "K": [81, 82], "R": null, "K'": [[68, 74], [70, 77]], "V'": [[72, 79], [73, 80]], "example": [64, 124]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra likes Los Angeles. Dorothy likes New York. Brian likes Shanghai. >. The one who wants to go to a city of the United States is not the boy\n < Edward likes Birmingham. Kevin likes London. Nancy likes Sydney. >. The one who wants to go to a city of the United Kingdom is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [16, 17], "Q": [34, 37], "K'": [19, 21], "R": [38, 39], "K": [[6, 13], [8, 15]], "V": [[2, 9], [4, 11]], "example": [1, 41]}, {"END": [76, 77], "A'": [77, 78], "V'": [54, 55], "Q": [71, 74], "K'": [57, 58], "R": [75, 76], "K": [[46, 52], [48, 53]], "V": [[43, 49], [44, 50]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David likes Zurich. Kimberly likes London. Kenneth likes Bern. >. The one who wants to go to a city of Switzerland is not the girl\n < Dorothy likes Valencia. Nancy likes Barcelona. David likes Seoul. >. The one who wants to go to a city of Spain is not the boy\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [8, 11], "Q": [32, 33], "K'": [13, 14], "R": [34, 35], "K": [[5, 18], [7, 19]], "V": [[2, 15], [3, 16]], "example": [1, 37]}, {"END": [72, 73], "A'": [73, 74], "V'": [51, 52], "Q": [69, 70], "K'": [54, 56], "R": [71, 72], "K": [[43, 49], [45, 50]], "V": [[39, 46], [41, 47]], "example": [38, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jason likes Hamburg. Patricia likes Canberra. Elizabeth likes Sydney. >. The one who wants to go to a city of Australia is not the boy\n < Jennifer likes Munich. Linda likes Berlin. Daniel likes Seoul. >. The one who wants to go to a city of Germany is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [2, 3], "Q": [33, 34], "K'": [5, 6], "R": [35, 36], "K": [[12, 19], [15, 20]], "V": [[7, 16], [10, 17]], "example": [1, 38]}, {"END": [74, 75], "A'": [75, 76], "V'": [53, 54], "Q": [71, 72], "K'": [56, 58], "R": [73, 74], "K": [[44, 51], [46, 52]], "V": [[40, 47], [42, 49]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel likes Berlin. Sharon likes Novosibirsk. Betty likes Saint Petersburg. >. The one who wants to go to a city of Russia is not the boy\n < Michelle likes Bras\u00edlia. George likes Vancouver. Elizabeth likes Sao Paulo. >. The one who wants to go to a city of Brazil is not the boy\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [2, 3], "Q": [35, 36], "K'": [5, 6], "R": [37, 38], "K": [[11, 20], [16, 22]], "V": [[7, 17], [9, 18]], "example": [1, 40]}, {"END": [77, 78], "A'": [78, 79], "V'": [49, 50], "Q": [74, 75], "K'": [52, 54], "R": [76, 77], "K": [[46, 58], [48, 61]], "V": [[42, 55], [44, 56]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Robert likes Beijing. Deborah likes Moscow. William likes Guangzhou. >. The one who wants to go to a city of China is not the girl\n < Elizabeth likes Busan. Sandra likes Incheon. Joseph likes Beijing. >. The one who wants to go to a city of South Korea is not the boy\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [9, 12], "Q": [36, 37], "K'": [14, 15], "R": [38, 39], "K": [[5, 19], [8, 23]], "V": [[2, 16], [3, 17]], "example": [1, 41]}, {"END": [80, 81], "A'": [81, 82], "V'": [57, 58], "Q": [76, 78], "K'": [60, 63], "R": [79, 80], "K": [[46, 53], [48, 56]], "V": [[43, 49], [44, 51]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Nancy likes Shanghai. David likes Moscow. Daniel likes Saint Petersburg. >. The one who wants to go to a city of Russia is not the girl\n < Margaret likes London. Kenneth likes New Delhi. Kimberly likes Birmingham. >. The one who wants to go to a city of the United Kingdom is not the boy\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [31, 32], "K'": [5, 7], "R": [33, 34], "K": [[11, 16], [12, 18]], "V": [[8, 13], [9, 14]], "example": [1, 36]}, {"END": [75, 76], "A'": [76, 77], "V'": [43, 44], "Q": [70, 73], "K'": [46, 49], "R": [74, 75], "K": [[41, 55], [42, 57]], "V": [[38, 50], [39, 53]], "example": [37, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mary likes Busan. Ruth likes Seoul. Robert likes Geneva. >. The one who wants to go to a city of South Korea is not the boy\n < Nancy likes Tokyo. Joseph likes Brisbane. Donna likes Kyoto. >. The one who wants to go to a city of Japan is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [14, 15], "Q": [32, 34], "K'": [17, 19], "R": [35, 36], "K": [[5, 11], [7, 13]], "V": [[2, 8], [3, 9]], "example": [1, 38]}, {"END": [75, 76], "A'": [76, 77], "V'": [45, 46], "Q": [72, 73], "K'": [48, 52], "R": [74, 75], "K": [[43, 57], [44, 59]], "V": [[40, 53], [41, 55]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kevin likes Novosibirsk. Steven likes Moscow. Susan likes Hamburg. >. The one who wants to go to a city of Russia is not the girl\n < Steven likes Bern. John likes Geneva. Michelle likes London. >. The one who wants to go to a city of Switzerland is not the girl\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [16, 17], "Q": [33, 34], "K'": [19, 20], "R": [35, 36], "K": [[5, 14], [10, 15]], "V": [[2, 11], [3, 12]], "example": [1, 38]}, {"END": [72, 73], "A'": [73, 74], "V'": [51, 53], "Q": [69, 70], "K'": [55, 56], "R": [71, 72], "K": [[43, 48], [44, 50]], "V": [[40, 45], [41, 46]], "example": [39, 74]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Los Angeles. Dorothy likes New York. Brian likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: No\n Premise: < Edward likes Paris. Kevin likes Lyon. Nancy likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [19, 20], "Q": [53, 56], "K'": [22, 24], "R": [57, 58], "K": [[9, 16], [11, 18]], "V": [[5, 12], [7, 14]], "example": [1, 64]}, {"END": [120, 121], "A'": [116, 118], "V'": [79, 80], "Q": [113, 114], "K'": [82, 84], "R": [115, 116], "K": [[72, 77], [73, 78]], "V": [[69, 74], [70, 75]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Los Angeles. Dorothy likes New York. Brian likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: No\n Premise: < Edward likes Paris. Kevin likes Lyon. Nancy likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [19, 20], "Q": [53, 56], "K'": [22, 24], "R": [57, 58], "K": [[9, 16], [11, 18]], "V": [[5, 12], [7, 14]], "example": [1, 64]}, {"END": [120, 121], "A'": [116, 118], "V'": [79, 80], "Q": [113, 114], "K'": [82, 84], "R": [115, 116], "K": [[72, 77], [73, 78]], "V": [[69, 74], [70, 75]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Sao Paulo. Paul likes Chiang Mai. Betty likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not the boy? Answer: Yes\n Premise: < Donna likes Osaka. Karen likes Tokyo. George likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [12, 13], "Q": [53, 54], "K'": [15, 18], "R": [55, 56], "K": [[8, 22], [11, 24]], "V": [[5, 19], [6, 20]], "example": [1, 62]}, {"END": [122, 123], "A'": [118, 120], "V'": [80, 81], "Q": [115, 116], "K'": [83, 86], "R": [117, 118], "K": [[71, 78], [73, 79]], "V": [[67, 74], [69, 76]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Sao Paulo. Paul likes Chiang Mai. Betty likes Bras\u00edlia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not the boy? Answer: Yes\n Premise: < Donna likes Osaka. Karen likes Tokyo. George likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [12, 13], "Q": [53, 54], "K'": [15, 18], "R": [55, 56], "K": [[8, 22], [11, 24]], "V": [[5, 19], [6, 20]], "example": [1, 62]}, {"END": [122, 123], "A'": [118, 120], "V'": [80, 81], "Q": [115, 116], "K'": [83, 86], "R": [117, 118], "K": [[71, 78], [73, 79]], "V": [[67, 74], [69, 76]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Busan. Linda likes Seoul. Daniel likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not the girl? Answer: No\n Premise: < Michelle likes Busan. Kenneth likes Marseille. Ronald likes Lyon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [19, 20], "Q": [53, 55], "K'": [22, 24], "R": [56, 57], "K": [[9, 16], [11, 18]], "V": [[5, 12], [7, 14]], "example": [1, 63]}, {"END": [122, 123], "A'": [118, 120], "V'": [68, 70], "Q": [115, 116], "K'": [72, 74], "R": [117, 118], "K": [[78, 85], [80, 86]], "V": [[75, 81], [76, 83]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Busan. Linda likes Seoul. Daniel likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not the girl? Answer: No\n Premise: < Michelle likes Busan. Kenneth likes Marseille. Ronald likes Lyon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [19, 20], "Q": [53, 55], "K'": [22, 24], "R": [56, 57], "K": [[9, 16], [11, 18]], "V": [[5, 12], [7, 14]], "example": [1, 63]}, {"END": [122, 123], "A'": [118, 120], "V'": [68, 70], "Q": [115, 116], "K'": [72, 74], "R": [117, 118], "K": [[78, 85], [80, 86]], "V": [[75, 81], [76, 83]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Mumbai. Kenneth likes Bangkok. Mark likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not the boy? Answer: No\n Premise: < Jeff likes New York. Margaret likes Rome. John likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [5, 6], "Q": [54, 56], "K'": [8, 11], "R": [57, 58], "K": [[15, 22], [18, 25]], "V": [[12, 19], [13, 20]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [117, 120], "K'": [78, 79], "R": [121, 122], "K": [[72, 83], [74, 88]], "V": [[69, 80], [70, 81]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Mumbai. Kenneth likes Bangkok. Mark likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not the boy? Answer: No\n Premise: < Jeff likes New York. Margaret likes Rome. John likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [5, 6], "Q": [54, 56], "K'": [8, 11], "R": [57, 58], "K": [[15, 22], [18, 25]], "V": [[12, 19], [13, 20]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [117, 120], "K'": [78, 79], "R": [121, 122], "K": [[72, 83], [74, 88]], "V": [[69, 80], [70, 81]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara likes Valencia. Sharon likes Madrid. Christopher likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Spain is not the boy? Answer: Yes\n Premise: < Donald likes Rio de Janeiro. Laura likes Munich. Karen likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [17, 18], "Q": [52, 53], "K'": [20, 23], "R": [54, 55], "K": [[8, 15], [10, 16]], "V": [[5, 11], [6, 13]], "example": [1, 61]}, {"END": [120, 121], "A'": [116, 118], "V'": [66, 67], "Q": [113, 114], "K'": [69, 72], "R": [115, 116], "K": [[76, 83], [78, 84]], "V": [[73, 79], [74, 81]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara likes Valencia. Sharon likes Madrid. Christopher likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Spain is not the boy? Answer: Yes\n Premise: < Donald likes Rio de Janeiro. Laura likes Munich. Karen likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [17, 18], "Q": [52, 53], "K'": [20, 23], "R": [54, 55], "K": [[8, 15], [10, 16]], "V": [[5, 11], [6, 13]], "example": [1, 61]}, {"END": [120, 121], "A'": [116, 118], "V'": [66, 67], "Q": [113, 114], "K'": [69, 72], "R": [115, 116], "K": [[76, 83], [78, 84]], "V": [[73, 79], [74, 81]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert likes Manchester. Lisa likes Guangzhou. Margaret likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: No\n Premise: < Carol likes Bangalore. George likes Toronto. Richard likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Canada is not the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [5, 6], "Q": [53, 54], "K'": [8, 9], "R": [55, 56], "K": [[13, 21], [17, 24]], "V": [[10, 18], [11, 19]], "example": [1, 62]}, {"END": [120, 121], "A'": [116, 118], "V'": [67, 68], "Q": [113, 114], "K'": [70, 73], "R": [115, 116], "K": [[77, 82], [78, 84]], "V": [[74, 79], [75, 80]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert likes Manchester. Lisa likes Guangzhou. Margaret likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: No\n Premise: < Carol likes Bangalore. George likes Toronto. Richard likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Canada is not the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [5, 6], "Q": [53, 54], "K'": [8, 9], "R": [55, 56], "K": [[13, 21], [17, 24]], "V": [[10, 18], [11, 19]], "example": [1, 62]}, {"END": [120, 121], "A'": [116, 118], "V'": [67, 68], "Q": [113, 114], "K'": [70, 73], "R": [115, 116], "K": [[77, 82], [78, 84]], "V": [[74, 79], [75, 80]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin likes Florence. Patricia likes Ottawa. Kenneth likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is not the boy? Answer: No\n Premise: < David likes Guangzhou. Paul likes Beijing. Maria likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [10, 13], "Q": [51, 52], "K'": [15, 17], "R": [53, 54], "K": [[8, 21], [9, 22]], "V": [[5, 18], [6, 19]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [80, 81], "Q": [114, 115], "K'": [83, 85], "R": [116, 117], "K": [[68, 76], [72, 79]], "V": [[65, 73], [66, 74]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin likes Florence. Patricia likes Ottawa. Kenneth likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is not the boy? Answer: No\n Premise: < David likes Guangzhou. Paul likes Beijing. Maria likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the boy? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [10, 13], "Q": [51, 52], "K'": [15, 17], "R": [53, 54], "K": [[8, 21], [9, 22]], "V": [[5, 18], [6, 19]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [80, 81], "Q": [114, 115], "K'": [83, 85], "R": [116, 117], "K": [[68, 76], [72, 79]], "V": [[65, 73], [66, 74]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Tokyo. David likes Florence. Lisa likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n Premise: < Carol likes New Delhi. Lisa likes Bangalore. Jason likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [10, 11], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[8, 18], [9, 20]], "V": [[5, 15], [6, 16]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [77, 78], "Q": [110, 111], "K'": [80, 81], "R": [112, 113], "K": [[66, 73], [69, 76]], "V": [[63, 70], [64, 71]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Tokyo. David likes Florence. Lisa likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n Premise: < Carol likes New Delhi. Lisa likes Bangalore. Jason likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [10, 11], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[8, 18], [9, 20]], "V": [[5, 15], [6, 16]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [77, 78], "Q": [110, 111], "K'": [80, 81], "R": [112, 113], "K": [[66, 73], [69, 76]], "V": [[63, 70], [64, 71]], "example": [59, 119]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Los Angeles attracts Sandra. New York attracts Dorothy. Shanghai attracts Brian. >. The one who wants to go to a city of the United States is not the boy\n < Birmingham attracts Edward. London attracts Kevin. Sydney attracts Nancy. >. The one who wants to go to a city of the United Kingdom is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [20, 21], "Q": [34, 37], "K'": [16, 18], "R": [38, 39], "K": [[2, 9], [4, 11]], "V": [[6, 13], [8, 15]], "example": [1, 41]}, {"END": [76, 77], "A'": [77, 78], "V'": [57, 58], "Q": [71, 74], "K'": [54, 55], "R": [75, 76], "K": [[43, 49], [45, 50]], "V": [[47, 52], [48, 53]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Zurich attracts David. London attracts Kimberly. Bern attracts Kenneth. >. The one who wants to go to a city of Switzerland is not the girl\n < Valencia attracts Dorothy. Barcelona attracts Nancy. Seoul attracts David. >. The one who wants to go to a city of Spain is not the boy\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [11, 14], "Q": [32, 33], "K'": [8, 9], "R": [34, 35], "K": [[2, 15], [4, 16]], "V": [[6, 18], [7, 19]], "example": [1, 37]}, {"END": [72, 73], "A'": [73, 74], "V'": [55, 56], "Q": [69, 70], "K'": [51, 53], "R": [71, 72], "K": [[39, 46], [41, 47]], "V": [[43, 49], [45, 50]], "example": [38, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Hamburg attracts Jason. Canberra attracts Patricia. Sydney attracts Elizabeth. >. The one who wants to go to a city of Australia is not the boy\n < Munich attracts Jennifer. Berlin attracts Linda. Seoul attracts Daniel. >. The one who wants to go to a city of Germany is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [5, 6], "Q": [33, 34], "K'": [2, 3], "R": [35, 36], "K": [[7, 16], [10, 17]], "V": [[12, 19], [15, 20]], "example": [1, 38]}, {"END": [74, 75], "A'": [75, 76], "V'": [57, 58], "Q": [71, 72], "K'": [53, 55], "R": [73, 74], "K": [[40, 47], [42, 48]], "V": [[44, 50], [46, 52]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Berlin attracts Daniel. Novosibirsk attracts Sharon. Saint Petersburg attracts Betty. >. The one who wants to go to a city of Russia is not the boy\n < Bras\u00edlia attracts Michelle. Vancouver attracts George. Sao Paulo attracts Elizabeth. >. The one who wants to go to a city of Brazil is not the boy\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [5, 6], "Q": [35, 36], "K'": [2, 3], "R": [37, 38], "K": [[7, 17], [12, 19]], "V": [[14, 21], [16, 22]], "example": [1, 40]}, {"END": [77, 78], "A'": [78, 79], "V'": [53, 54], "Q": [74, 75], "K'": [49, 51], "R": [76, 77], "K": [[42, 55], [44, 58]], "V": [[46, 60], [48, 61]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Beijing attracts Robert. Moscow attracts Deborah. Guangzhou attracts William. >. The one who wants to go to a city of China is not the girl\n < Busan attracts Elizabeth. Incheon attracts Sandra. Beijing attracts Joseph. >. The one who wants to go to a city of South Korea is not the boy\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [12, 15], "Q": [36, 37], "K'": [9, 10], "R": [38, 39], "K": [[2, 16], [5, 20]], "V": [[7, 22], [8, 23]], "example": [1, 41]}, {"END": [80, 81], "A'": [81, 82], "V'": [62, 63], "Q": [76, 78], "K'": [57, 60], "R": [79, 80], "K": [[43, 49], [45, 52]], "V": [[47, 54], [48, 56]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Shanghai attracts Nancy. Moscow attracts David. Saint Petersburg attracts Daniel. >. The one who wants to go to a city of Russia is not the girl\n < London attracts Margaret. New Delhi attracts Kenneth. Birmingham attracts Kimberly. >. The one who wants to go to a city of the United Kingdom is not the boy\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [6, 7], "Q": [31, 32], "K'": [2, 4], "R": [33, 34], "K": [[8, 13], [9, 15]], "V": [[11, 17], [12, 18]], "example": [1, 36]}, {"END": [75, 76], "A'": [76, 77], "V'": [48, 49], "Q": [70, 73], "K'": [43, 46], "R": [74, 75], "K": [[38, 50], [39, 52]], "V": [[41, 54], [42, 57]], "example": [37, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Busan attracts Mary. Seoul attracts Ruth. Geneva attracts Robert. >. The one who wants to go to a city of South Korea is not the boy\n < Tokyo attracts Nancy. Brisbane attracts Joseph. Kyoto attracts Donna. >. The one who wants to go to a city of Japan is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [18, 19], "Q": [32, 34], "K'": [14, 16], "R": [35, 36], "K": [[2, 8], [4, 10]], "V": [[6, 12], [7, 13]], "example": [1, 38]}, {"END": [75, 76], "A'": [76, 77], "V'": [51, 52], "Q": [72, 73], "K'": [45, 49], "R": [74, 75], "K": [[40, 53], [41, 55]], "V": [[43, 57], [44, 59]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Novosibirsk attracts Kevin. Moscow attracts Steven. Hamburg attracts Susan. >. The one who wants to go to a city of Russia is not the girl\n < Bern attracts Steven. Geneva attracts John. London attracts Michelle. >. The one who wants to go to a city of Switzerland is not the girl\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [19, 20], "Q": [33, 34], "K'": [16, 17], "R": [35, 36], "K": [[2, 11], [7, 12]], "V": [[9, 14], [10, 15]], "example": [1, 38]}, {"END": [72, 73], "A'": [73, 74], "V'": [54, 56], "Q": [69, 70], "K'": [51, 52], "R": [71, 72], "K": [[40, 45], [41, 47]], "V": [[43, 49], [44, 50]], "example": [39, 74]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Los Angeles attracts Sandra. New York attracts Dorothy. Shanghai attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: No\n Premise: < Paris attracts Edward. Lyon attracts Kevin. Vancouver attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [23, 24], "Q": [53, 56], "K'": [19, 21], "R": [57, 58], "K": [[5, 12], [7, 14]], "V": [[9, 16], [11, 18]], "example": [1, 64]}, {"END": [120, 121], "A'": [116, 118], "V'": [83, 84], "Q": [113, 114], "K'": [79, 81], "R": [115, 116], "K": [[69, 74], [70, 75]], "V": [[72, 77], [73, 78]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Los Angeles attracts Sandra. New York attracts Dorothy. Shanghai attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: No\n Premise: < Paris attracts Edward. Lyon attracts Kevin. Vancouver attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [23, 24], "Q": [53, 56], "K'": [19, 21], "R": [57, 58], "K": [[5, 12], [7, 14]], "V": [[9, 16], [11, 18]], "example": [1, 64]}, {"END": [120, 121], "A'": [116, 118], "V'": [83, 84], "Q": [113, 114], "K'": [79, 81], "R": [115, 116], "K": [[69, 74], [70, 75]], "V": [[72, 77], [73, 78]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Lisa. Chiang Mai attracts Paul. Bras\u00edlia attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not the boy? Answer: Yes\n Premise: < Osaka attracts Donna. Tokyo attracts Karen. Incheon attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [17, 18], "Q": [53, 54], "K'": [12, 15], "R": [55, 56], "K": [[5, 19], [8, 21]], "V": [[10, 23], [11, 24]], "example": [1, 62]}, {"END": [122, 123], "A'": [118, 120], "V'": [85, 86], "Q": [115, 116], "K'": [80, 83], "R": [117, 118], "K": [[67, 74], [69, 75]], "V": [[71, 77], [73, 79]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Sao Paulo attracts Lisa. Chiang Mai attracts Paul. Bras\u00edlia attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Brazil is not the boy? Answer: Yes\n Premise: < Osaka attracts Donna. Tokyo attracts Karen. Incheon attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [17, 18], "Q": [53, 54], "K'": [12, 15], "R": [55, 56], "K": [[5, 19], [8, 21]], "V": [[10, 23], [11, 24]], "example": [1, 62]}, {"END": [122, 123], "A'": [118, 120], "V'": [85, 86], "Q": [115, 116], "K'": [80, 83], "R": [117, 118], "K": [[67, 74], [69, 75]], "V": [[71, 77], [73, 79]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Jennifer. Seoul attracts Linda. Venice attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not the girl? Answer: No\n Premise: < Busan attracts Michelle. Marseille attracts Kenneth. Lyon attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [23, 24], "Q": [53, 55], "K'": [19, 21], "R": [56, 57], "K": [[5, 12], [7, 14]], "V": [[9, 16], [11, 18]], "example": [1, 63]}, {"END": [122, 123], "A'": [118, 120], "V'": [72, 74], "Q": [115, 116], "K'": [68, 70], "R": [117, 118], "K": [[75, 81], [77, 82]], "V": [[79, 84], [80, 86]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Busan attracts Jennifer. Seoul attracts Linda. Venice attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of South Korea is not the girl? Answer: No\n Premise: < Busan attracts Michelle. Marseille attracts Kenneth. Lyon attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of France is not the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [23, 24], "Q": [53, 55], "K'": [19, 21], "R": [56, 57], "K": [[5, 12], [7, 14]], "V": [[9, 16], [11, 18]], "example": [1, 63]}, {"END": [122, 123], "A'": [118, 120], "V'": [72, 74], "Q": [115, 116], "K'": [68, 70], "R": [117, 118], "K": [[75, 81], [77, 82]], "V": [[79, 84], [80, 86]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Mumbai attracts Margaret. Bangkok attracts Kenneth. Chiang Mai attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not the boy? Answer: No\n Premise: < New York attracts Jeff. Rome attracts Margaret. Washington, D.C attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [10, 11], "Q": [54, 56], "K'": [5, 8], "R": [57, 58], "K": [[12, 19], [15, 22]], "V": [[17, 24], [18, 25]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [78, 79], "Q": [117, 120], "K'": [75, 76], "R": [121, 122], "K": [[69, 80], [71, 85]], "V": [[73, 87], [74, 88]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Mumbai attracts Margaret. Bangkok attracts Kenneth. Chiang Mai attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Thailand is not the boy? Answer: No\n Premise: < New York attracts Jeff. Rome attracts Margaret. Washington, D.C attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of the United States is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [10, 11], "Q": [54, 56], "K'": [5, 8], "R": [57, 58], "K": [[12, 19], [15, 22]], "V": [[17, 24], [18, 25]], "example": [1, 64]}, {"END": [126, 127], "A'": [122, 124], "V'": [78, 79], "Q": [117, 120], "K'": [75, 76], "R": [121, 122], "K": [[69, 80], [71, 85]], "V": [[73, 87], [74, 88]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Barbara. Madrid attracts Sharon. Canberra attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Spain is not the boy? Answer: Yes\n Premise: < Rio de Janeiro attracts Donald. Munich attracts Laura. Hamburg attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [22, 23], "Q": [52, 53], "K'": [17, 20], "R": [54, 55], "K": [[5, 11], [7, 12]], "V": [[9, 14], [10, 16]], "example": [1, 61]}, {"END": [120, 121], "A'": [116, 118], "V'": [71, 72], "Q": [113, 114], "K'": [66, 69], "R": [115, 116], "K": [[73, 79], [75, 80]], "V": [[77, 82], [78, 84]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Barbara. Madrid attracts Sharon. Canberra attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Spain is not the boy? Answer: Yes\n Premise: < Rio de Janeiro attracts Donald. Munich attracts Laura. Hamburg attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Germany is not the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [22, 23], "Q": [52, 53], "K'": [17, 20], "R": [54, 55], "K": [[5, 11], [7, 12]], "V": [[9, 14], [10, 16]], "example": [1, 61]}, {"END": [120, 121], "A'": [116, 118], "V'": [71, 72], "Q": [113, 114], "K'": [66, 69], "R": [115, 116], "K": [[73, 79], [75, 80]], "V": [[77, 82], [78, 84]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Robert. Guangzhou attracts Lisa. Beijing attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: No\n Premise: < Bangalore attracts Carol. Toronto attracts George. Vancouver attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Canada is not the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [8, 9], "Q": [53, 54], "K'": [5, 6], "R": [55, 56], "K": [[10, 18], [14, 21]], "V": [[16, 23], [17, 24]], "example": [1, 62]}, {"END": [120, 121], "A'": [116, 118], "V'": [72, 73], "Q": [113, 114], "K'": [67, 70], "R": [115, 116], "K": [[74, 79], [75, 81]], "V": [[77, 83], [78, 84]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Robert. Guangzhou attracts Lisa. Beijing attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: No\n Premise: < Bangalore attracts Carol. Toronto attracts George. Vancouver attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Canada is not the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [8, 9], "Q": [53, 54], "K'": [5, 6], "R": [55, 56], "K": [[10, 18], [14, 21]], "V": [[16, 23], [17, 24]], "example": [1, 62]}, {"END": [120, 121], "A'": [116, 118], "V'": [72, 73], "Q": [113, 114], "K'": [67, 70], "R": [115, 116], "K": [[74, 79], [75, 81]], "V": [[77, 83], [78, 84]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Florence attracts Kevin. Ottawa attracts Patricia. Milan attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is not the boy? Answer: No\n Premise: < Guangzhou attracts David. Beijing attracts Paul. Birmingham attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the girl? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [14, 17], "Q": [51, 52], "K'": [10, 12], "R": [53, 54], "K": [[5, 18], [6, 19]], "V": [[8, 21], [9, 22]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [84, 85], "Q": [114, 115], "K'": [80, 82], "R": [116, 117], "K": [[65, 73], [69, 76]], "V": [[71, 78], [72, 79]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Florence attracts Kevin. Ottawa attracts Patricia. Milan attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Italy is not the boy? Answer: No\n Premise: < Guangzhou attracts David. Beijing attracts Paul. Birmingham attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of China is not the boy? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [14, 17], "Q": [51, 52], "K'": [10, 12], "R": [53, 54], "K": [[5, 18], [6, 19]], "V": [[8, 21], [9, 22]], "example": [1, 60]}, {"END": [121, 122], "A'": [117, 119], "V'": [84, 85], "Q": [114, 115], "K'": [80, 82], "R": [116, 117], "K": [[65, 73], [69, 76]], "V": [[71, 78], [72, 79]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Tokyo attracts Margaret. Florence attracts David. Kyoto attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n Premise: < New Delhi attracts Carol. Bangalore attracts Lisa. Manchester attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [13, 14], "Q": [49, 50], "K'": [10, 11], "R": [51, 52], "K": [[5, 15], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [80, 81], "Q": [110, 111], "K'": [77, 78], "R": [112, 113], "K": [[63, 70], [66, 73]], "V": [[68, 75], [69, 76]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_cities.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Tokyo attracts Margaret. Florence attracts David. Kyoto attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of Japan is not the girl? Answer: No\n Premise: < New Delhi attracts Carol. Bangalore attracts Lisa. Manchester attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a city of India is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [13, 14], "Q": [49, 50], "K'": [10, 11], "R": [51, 52], "K": [[5, 15], [6, 17]], "V": [[8, 19], [9, 20]], "example": [1, 58]}, {"END": [117, 118], "A'": [113, 115], "V'": [80, 81], "Q": [110, 111], "K'": [77, 78], "R": [112, 113], "K": [[63, 70], [66, 73]], "V": [[68, 75], [69, 76]], "example": [59, 119]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< David likes Circuito da Boavista. Sharon likes Mannheim City Airport. Barbara likes Madala. >. So Barbara wants to go to Madala\n < Donna likes Kosi Zone. Michael likes Boinpalle mandal. John likes Tartu Town Hall. >. So John wants to go to Tartu Town Hall\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [25, 27], "Q": [31, 32], "K": [22, 23], "R": null, "K'": [[2, 13], [3, 15]], "V'": [[5, 17], [12, 21]], "example": [1, 38]}, {"END": [74, 75], "A": [75, 80], "V": [61, 66], "Q": [70, 71], "K": [58, 59], "R": null, "K'": [[40, 48], [42, 49]], "V'": [[44, 51], [47, 57]], "example": [39, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Anthony likes Trento. Deborah likes Castleisland Desmonds GAA. Donald likes Hamilton Mountain. >. So Anthony wants to go to Trento\n < John likes DESTATIS. Laura likes Kowsar County. Jeff likes Kibungo Province. >. So Laura wants to go to Kowsar County\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [5, 7], "Q": [31, 32], "K": [2, 3], "R": null, "K'": [[8, 22], [11, 23]], "V'": [[13, 25], [21, 27]], "example": [1, 38]}, {"END": [71, 72], "A": [72, 76], "V": [50, 54], "Q": [67, 68], "K": [47, 48], "R": null, "K'": [[40, 55], [41, 56]], "V'": [[43, 58], [46, 63]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Patricia likes Konark Sun temple. Jeff likes Cappoquin. Margaret likes Helsinki City Hall. >. So Jeff wants to go to Cappoquin\n < Michelle likes Bearpaw Shale. Robert likes War in Donbass. Laura likes Tirebolu. >. So Laura wants to go to Tirebolu\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [15, 19], "Q": [32, 33], "K": [12, 13], "R": null, "K'": [[2, 20], [5, 21]], "V'": [[7, 23], [11, 28]], "example": [1, 41]}, {"END": [77, 78], "A": [78, 82], "V": [65, 69], "Q": [73, 74], "K": [62, 63], "R": null, "K'": [[43, 53], [45, 54]], "V'": [[47, 56], [52, 61]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Dorothy likes Iximche. Ronald likes Vinkeveen. Karen likes Pacentro. >. So Ronald wants to go to Vinkeveen\n < Sharon likes Chaville. Carol likes New England. Michael likes Holycross-Ballycahill GAA. >. So Michael wants to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [35, 36], "A": [36, 40], "V": [14, 18], "Q": [30, 32], "K": [10, 12], "R": null, "K'": [[2, 19], [4, 21]], "V'": [[6, 23], [9, 26]], "example": [1, 40]}, {"END": [78, 79], "A": [79, 90], "V": [59, 70], "Q": [74, 75], "K": [56, 57], "R": null, "K'": [[42, 50], [44, 51]], "V'": [[46, 53], [49, 55]], "example": [41, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Persegres Gresik United. Sarah likes Taronga Western Plains Zoo. Ronald likes Indira Gandhi International Airport. >. So Robert wants to go to Persegres Gresik United\n < Daniel likes Pinosava. Deborah likes Ticho House. Edward likes Sabratha. >. So Deborah wants to go to Ticho House\n", "ranges": [{"END": [43, 44], "A": [44, 51], "V": [5, 12], "Q": [39, 40], "K": [2, 3], "R": null, "K'": [[13, 25], [14, 27]], "V'": [[16, 29], [24, 35]], "example": [1, 51]}, {"END": [87, 88], "A": [88, 92], "V": [65, 69], "Q": [81, 84], "K": [60, 63], "R": null, "K'": [[53, 70], [54, 71]], "V'": [[56, 73], [59, 77]], "example": [52, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Shablykinsky District. Barbara likes Mbale District. Anthony likes bpost. >. So Barbara wants to go to Mbale District\n < George likes Westerburg. Richard likes AA Drink-leontien.nl. Karen likes Beauvais. >. So George wants to go to Westerburg\n", "ranges": [{"END": [32, 33], "A": [33, 37], "V": [14, 18], "Q": [28, 29], "K": [11, 12], "R": null, "K'": [[2, 19], [3, 20]], "V'": [[5, 22], [10, 24]], "example": [1, 37]}, {"END": [74, 75], "A": [75, 78], "V": [42, 45], "Q": [70, 71], "K": [39, 40], "R": null, "K'": [[46, 59], [47, 61]], "V'": [[49, 63], [58, 66]], "example": [38, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Jason likes Ghatanji. Sharon likes prefectural road. Elizabeth likes Bouygues Telecom. >. So Sharon wants to go to prefectural road\n < Carol likes Thiruvattar. Kevin likes Hohenwestedt. Karen likes Cubagua. >. So Karen wants to go to Cubagua\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [14, 18], "Q": [31, 33], "K": [10, 12], "R": null, "K'": [[2, 19], [3, 20]], "V'": [[5, 22], [9, 27]], "example": [1, 41]}, {"END": [76, 77], "A": [77, 79], "V": [65, 67], "Q": [71, 73], "K": [61, 63], "R": null, "K'": [[43, 52], [44, 53]], "V'": [[46, 55], [51, 60]], "example": [42, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Kenneth likes Aventine Hill. Linda likes Saint Gayane Church. Maria likes Scheibbs District. >. So Maria wants to go to Scheibbs District\n < Lisa likes Tinguiririca River. Patricia likes Oshawa. Donald likes KiKa. >. So Donald wants to go to KiKa\n", "ranges": [{"END": [34, 35], "A": [35, 39], "V": [22, 26], "Q": [30, 31], "K": [19, 20], "R": null, "K'": [[2, 10], [3, 12]], "V'": [[5, 14], [9, 18]], "example": [1, 39]}, {"END": [74, 75], "A": [75, 78], "V": [63, 66], "Q": [70, 71], "K": [60, 61], "R": null, "K'": [[41, 51], [42, 54]], "V'": [[44, 56], [50, 59]], "example": [40, 78]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David likes Circuito da Boavista. Sharon likes Mannheim City Airport. Barbara likes Madala. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Circuito da Boavista? Answer: No\n Premise: < Sarah likes Kosi Zone. Donna likes Boinpalle mandal. Steven likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [28, 30], "Q": [49, 50], "K": [25, 26], "R": null, "K'": [[5, 16], [6, 18]], "V'": [[8, 20], [15, 24]], "example": [1, 65]}, {"END": [127, 128], "A": [120, 125], "V": [91, 96], "Q": [115, 116], "K": [88, 89], "R": null, "K'": [[70, 77], [71, 79]], "V'": [[73, 81], [76, 87]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David likes Circuito da Boavista. Sharon likes Mannheim City Airport. Barbara likes Madala. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Circuito da Boavista? Answer: No\n Premise: < Sarah likes Kosi Zone. Donna likes Boinpalle mandal. Steven likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [28, 30], "Q": [49, 50], "K": [25, 26], "R": null, "K'": [[5, 16], [6, 18]], "V'": [[8, 20], [15, 24]], "example": [1, 65]}, {"END": [128, 129], "A": [120, 126], "V": [91, 96], "Q": [115, 116], "K": [88, 89], "R": null, "K'": [[70, 77], [71, 79]], "V'": [[73, 81], [76, 87]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Tinapa Resort. Daniel likes Aucanquilcha. John likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Kuomintang? Answer: Yes\n Premise: < Susan likes Shibganj Upazila, Bogra District. Ronald likes Neighbourhoods in Kolkata. Dorothy likes Bad Camberg. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Shibganj Upazila, Bogra District? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [55, 59], "V": [27, 31], "Q": [50, 51], "K": [24, 25], "R": null, "K'": [[5, 14], [6, 15]], "V'": [[8, 17], [13, 23]], "example": [1, 63]}, {"END": [141, 142], "A": [128, 139], "V": [71, 82], "Q": [123, 124], "K": [68, 69], "R": null, "K'": [[83, 97], [85, 99]], "V'": [[87, 101], [96, 104]], "example": [64, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Tinapa Resort. Daniel likes Aucanquilcha. John likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Kuomintang? Answer: Yes\n Premise: < Susan likes Shibganj Upazila, Bogra District. Ronald likes Neighbourhoods in Kolkata. Dorothy likes Bad Camberg. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Bad Camberg? Answer: No\n", "ranges": [{"END": [61, 62], "A": [55, 59], "V": [27, 31], "Q": [50, 51], "K": [24, 25], "R": null, "K'": [[5, 14], [6, 15]], "V'": [[8, 17], [13, 23]], "example": [1, 63]}, {"END": [133, 134], "A": [128, 131], "V": [71, 82], "Q": [123, 124], "K": [68, 69], "R": null, "K'": [[83, 97], [85, 99]], "V'": [[87, 101], [96, 104]], "example": [64, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sarah likes Trento. Margaret likes Canton of Schaffhausen. Mark likes Hultsfred Municipality. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to Trento? Answer: No\n Premise: < Ronald likes Bernheze. William likes Theni district. Mark likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [24, 30], "Q": [49, 50], "K": [21, 22], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 20]], "example": [1, 60]}, {"END": [115, 116], "A": [110, 113], "V": [76, 79], "Q": [105, 106], "K": [73, 74], "R": null, "K'": [[65, 80], [67, 81]], "V'": [[69, 83], [72, 86]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sarah likes Trento. Margaret likes Canton of Schaffhausen. Mark likes Hultsfred Municipality. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to Trento? Answer: No\n Premise: < Ronald likes Bernheze. William likes Theni district. Mark likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [24, 30], "Q": [49, 50], "K": [21, 22], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 20]], "example": [1, 60]}, {"END": [115, 116], "A": [110, 113], "V": [76, 79], "Q": [105, 106], "K": [73, 74], "R": null, "K'": [[65, 80], [67, 81]], "V'": [[69, 83], [72, 86]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Emscher. Mary likes Castrovirreyna District. Kenneth likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Manila Light Rail Transit System? Answer: No\n Premise: < Jeff likes Peremyshliany. Joseph likes public transport in Istanbul. Laura likes Ambatofinandrahana District. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Peremyshliany? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [14, 19], "Q": [49, 50], "K": [11, 12], "R": null, "K'": [[5, 20], [6, 21]], "V'": [[8, 23], [10, 30]], "example": [1, 65]}, {"END": [131, 132], "A": [124, 129], "V": [73, 78], "Q": [119, 120], "K": [70, 71], "R": null, "K'": [[79, 89], [80, 90]], "V'": [[82, 92], [88, 100]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Emscher. Mary likes Castrovirreyna District. Kenneth likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Manila Light Rail Transit System? Answer: No\n Premise: < Jeff likes Peremyshliany. Joseph likes public transport in Istanbul. Laura likes Ambatofinandrahana District. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to public transport in Istanbul? Answer: No\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [14, 19], "Q": [49, 50], "K": [11, 12], "R": null, "K'": [[5, 20], [6, 21]], "V'": [[8, 23], [10, 30]], "example": [1, 65]}, {"END": [132, 133], "A": [124, 130], "V": [73, 78], "Q": [119, 120], "K": [70, 71], "R": null, "K'": [[79, 89], [80, 90]], "V'": [[82, 92], [88, 100]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Valdemarsvik. Nancy likes Manila Light Rail Transit System. Donna likes Eurostat. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to Valdemarsvik? Answer: No\n Premise: < Brian likes Breege. Michael likes Westerburg. George likes Kretinga. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Breege? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [16, 23], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 24], [6, 26]], "V'": [[8, 28], [12, 30]], "example": [1, 62]}, {"END": [114, 115], "A": [110, 112], "V": [70, 72], "Q": [105, 106], "K": [67, 68], "R": null, "K'": [[73, 80], [74, 81]], "V'": [[76, 83], [79, 86]], "example": [63, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Valdemarsvik. Nancy likes Manila Light Rail Transit System. Donna likes Eurostat. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to Valdemarsvik? Answer: No\n Premise: < Brian likes Breege. Michael likes Westerburg. George likes Kretinga. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Westerburg? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [16, 23], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 24], [6, 26]], "V'": [[8, 28], [12, 30]], "example": [1, 62]}, {"END": [115, 116], "A": [110, 113], "V": [70, 72], "Q": [105, 106], "K": [67, 68], "R": null, "K'": [[73, 80], [74, 81]], "V'": [[76, 83], [79, 86]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Ghatanji. Laura likes prefectural road. Dorothy likes Bouygues Telecom. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to prefectural road? Answer: Yes\n Premise: < Karen likes Hohenwestedt. James likes Brandon University. Ronald likes Alfred Wegener Institute for Polar and Marine Research. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Hohenwestedt? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [16, 20], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 21], [6, 23]], "V'": [[8, 25], [12, 30]], "example": [1, 62]}, {"END": [130, 131], "A": [123, 128], "V": [71, 76], "Q": [117, 119], "K": [67, 69], "R": null, "K'": [[77, 84], [78, 86]], "V'": [[80, 88], [83, 98]], "example": [63, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Ghatanji. Laura likes prefectural road. Dorothy likes Bouygues Telecom. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to prefectural road? Answer: Yes\n Premise: < Karen likes Hohenwestedt. James likes Brandon University. Ronald likes Alfred Wegener Institute for Polar and Marine Research. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Brandon University? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [16, 20], "Q": [49, 50], "K": [13, 14], "R": null, "K'": [[5, 21], [6, 23]], "V'": [[8, 25], [12, 30]], "example": [1, 62]}, {"END": [128, 129], "A": [123, 126], "V": [71, 76], "Q": [117, 119], "K": [67, 69], "R": null, "K'": [[77, 84], [78, 86]], "V'": [[80, 88], [83, 98]], "example": [63, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Lismore GAA. Michael likes Democrats 66. Paul likes Minamishitara District, Aichi. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Democrats 66? Answer: Yes\n Premise: < Donald likes Mahalangur Himal. Helen likes Sydney Sports Ground. George likes Christian Medical College Ludhiana. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Christian Medical College Ludhiana? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [59, 64], "V": [17, 22], "Q": [54, 55], "K": [14, 15], "R": null, "K'": [[5, 23], [6, 24]], "V'": [[8, 26], [13, 35]], "example": [1, 68]}, {"END": [132, 133], "A": [124, 130], "V": [94, 100], "Q": [119, 120], "K": [91, 92], "R": null, "K'": [[73, 83], [74, 84]], "V'": [[76, 86], [82, 90]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Lismore GAA. Michael likes Democrats 66. Paul likes Minamishitara District, Aichi. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Democrats 66? Answer: Yes\n Premise: < Donald likes Mahalangur Himal. Helen likes Sydney Sports Ground. George likes Christian Medical College Ludhiana. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Sydney Sports Ground? Answer: No\n", "ranges": [{"END": [66, 67], "A": [59, 64], "V": [17, 22], "Q": [54, 55], "K": [14, 15], "R": null, "K'": [[5, 23], [6, 24]], "V'": [[8, 26], [13, 35]], "example": [1, 68]}, {"END": [130, 131], "A": [124, 128], "V": [94, 100], "Q": [119, 120], "K": [91, 92], "R": null, "K'": [[73, 83], [74, 84]], "V'": [[76, 86], [82, 90]], "example": [69, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah likes Shoranur. Richard likes K.S.V. Roeselare. George likes Aventine Hill. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Aventine Hill? Answer: Yes\n Premise: < Jeff likes Bay. Patricia likes Garibaldi Ranges. Edward likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Bay? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [60, 64], "V": [32, 36], "Q": [55, 56], "K": [29, 30], "R": null, "K'": [[5, 15], [8, 16]], "V'": [[10, 18], [14, 28]], "example": [1, 68]}, {"END": [124, 125], "A": [121, 122], "V": [76, 77], "Q": [116, 117], "K": [73, 74], "R": null, "K'": [[78, 90], [81, 91]], "V'": [[83, 93], [89, 97]], "example": [69, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah likes Shoranur. Richard likes K.S.V. Roeselare. George likes Aventine Hill. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Aventine Hill? Answer: Yes\n Premise: < Jeff likes Bay. Patricia likes Garibaldi Ranges. Edward likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Garibaldi Ranges? Answer: No\n", "ranges": [{"END": [66, 67], "A": [60, 64], "V": [32, 36], "Q": [55, 56], "K": [29, 30], "R": null, "K'": [[5, 15], [8, 16]], "V'": [[10, 18], [14, 28]], "example": [1, 68]}, {"END": [129, 130], "A": [121, 127], "V": [76, 77], "Q": [116, 117], "K": [73, 74], "R": null, "K'": [[78, 90], [81, 91]], "V'": [[83, 93], [89, 97]], "example": [69, 131]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Circuito da Boavista attracts David. Mannheim City Airport attracts Sharon. Madala attracts Barbara. >. So Barbara wants to go to Madala\n < Kosi Zone attracts Donna. Boinpalle mandal attracts Michael. Tartu Town Hall attracts John. >. So John wants to go to Tartu Town Hall\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [22, 24], "Q": [31, 32], "K": [26, 27], "R": null, "K'": [[11, 19], [12, 21]], "V'": [[2, 13], [9, 17]], "example": [1, 38]}, {"END": [74, 75], "A": [75, 80], "V": [58, 63], "Q": [70, 71], "K": [65, 66], "R": null, "K'": [[45, 56], [47, 57]], "V'": [[40, 48], [43, 54]], "example": [39, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Trento attracts Anthony. Castleisland Desmonds GAA attracts Deborah. Hamilton Mountain attracts Donald. >. So Anthony wants to go to Trento\n < DESTATIS attracts John. Kowsar County attracts Laura. Kibungo Province attracts Jeff. >. So Laura wants to go to Kowsar County\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [2, 4], "Q": [31, 32], "K": [6, 7], "R": null, "K'": [[18, 26], [21, 27]], "V'": [[8, 22], [16, 24]], "example": [1, 38]}, {"END": [71, 72], "A": [72, 76], "V": [47, 51], "Q": [67, 68], "K": [53, 54], "R": null, "K'": [[45, 62], [46, 63]], "V'": [[40, 55], [43, 60]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Konark Sun temple attracts Patricia. Cappoquin attracts Jeff. Helsinki City Hall attracts Margaret. >. So Jeff wants to go to Cappoquin\n < Bearpaw Shale attracts Michelle. War in Donbass attracts Robert. Tirebolu attracts Laura. >. So Laura wants to go to Tirebolu\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [12, 16], "Q": [32, 33], "K": [18, 19], "R": null, "K'": [[8, 27], [11, 28]], "V'": [[2, 20], [6, 25]], "example": [1, 41]}, {"END": [77, 78], "A": [78, 82], "V": [62, 66], "Q": [73, 74], "K": [68, 69], "R": null, "K'": [[50, 60], [52, 61]], "V'": [[43, 53], [48, 58]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Iximche attracts Dorothy. Vinkeveen attracts Ronald. Pacentro attracts Karen. >. So Ronald wants to go to Vinkeveen\n < Chaville attracts Sharon. New England attracts Carol. Holycross-Ballycahill GAA attracts Michael. >. So Michael wants to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [35, 36], "A": [36, 40], "V": [10, 14], "Q": [30, 32], "K": [16, 18], "R": null, "K'": [[7, 24], [9, 26]], "V'": [[2, 19], [5, 22]], "example": [1, 40]}, {"END": [78, 79], "A": [79, 90], "V": [56, 67], "Q": [74, 75], "K": [69, 70], "R": null, "K'": [[47, 54], [49, 55]], "V'": [[42, 50], [45, 52]], "example": [41, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Persegres Gresik United attracts Robert. Taronga Western Plains Zoo attracts Sarah. Indira Gandhi International Airport attracts Ronald. >. So Robert wants to go to Persegres Gresik United\n < Pinosava attracts Daniel. Ticho House attracts Deborah. Sabratha attracts Edward. >. So Deborah wants to go to Ticho House\n", "ranges": [{"END": [43, 44], "A": [44, 51], "V": [2, 9], "Q": [39, 40], "K": [11, 12], "R": null, "K'": [[23, 33], [24, 35]], "V'": [[13, 25], [21, 31]], "example": [1, 51]}, {"END": [87, 88], "A": [88, 92], "V": [60, 64], "Q": [81, 84], "K": [66, 69], "R": null, "K'": [[58, 76], [59, 77]], "V'": [[53, 70], [56, 74]], "example": [52, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shablykinsky District attracts Brian. Mbale District attracts Barbara. bpost attracts Anthony. >. So Barbara wants to go to Mbale District\n < Westerburg attracts George. AA Drink-leontien.nl attracts Richard. Beauvais attracts Karen. >. So George wants to go to Westerburg\n", "ranges": [{"END": [32, 33], "A": [33, 37], "V": [11, 15], "Q": [28, 29], "K": [17, 18], "R": null, "K'": [[9, 23], [10, 24]], "V'": [[2, 19], [7, 21]], "example": [1, 37]}, {"END": [74, 75], "A": [75, 78], "V": [39, 42], "Q": [70, 71], "K": [44, 45], "R": null, "K'": [[57, 64], [58, 66]], "V'": [[46, 59], [55, 62]], "example": [38, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ghatanji attracts Jason. prefectural road attracts Sharon. Bouygues Telecom attracts Elizabeth. >. So Sharon wants to go to prefectural road\n < Thiruvattar attracts Carol. Hohenwestedt attracts Kevin. Cubagua attracts Karen. >. So Karen wants to go to Cubagua\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [10, 14], "Q": [31, 33], "K": [16, 18], "R": null, "K'": [[8, 26], [9, 27]], "V'": [[2, 19], [6, 24]], "example": [1, 41]}, {"END": [76, 77], "A": [77, 79], "V": [61, 63], "Q": [71, 73], "K": [65, 67], "R": null, "K'": [[50, 59], [51, 60]], "V'": [[43, 52], [48, 57]], "example": [42, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Aventine Hill attracts Kenneth. Saint Gayane Church attracts Linda. Scheibbs District attracts Maria. >. So Maria wants to go to Scheibbs District\n < Tinguiririca River attracts Lisa. Oshawa attracts Patricia. KiKa attracts Donald. >. So Donald wants to go to KiKa\n", "ranges": [{"END": [34, 35], "A": [35, 39], "V": [19, 23], "Q": [30, 31], "K": [25, 26], "R": null, "K'": [[8, 16], [9, 18]], "V'": [[2, 10], [6, 14]], "example": [1, 39]}, {"END": [74, 75], "A": [75, 78], "V": [60, 63], "Q": [70, 71], "K": [65, 66], "R": null, "K'": [[49, 56], [50, 59]], "V'": [[41, 51], [47, 54]], "example": [40, 78]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Circuito da Boavista attracts David. Mannheim City Airport attracts Sharon. Madala attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Circuito da Boavista? Answer: No\n Premise: < Kosi Zone attracts Sarah. Boinpalle mandal attracts Donna. Tartu Town Hall attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [25, 27], "Q": [49, 50], "K": [29, 30], "R": null, "K'": [[14, 22], [15, 24]], "V'": [[5, 16], [12, 20]], "example": [1, 65]}, {"END": [127, 128], "A": [120, 125], "V": [88, 93], "Q": [115, 116], "K": [95, 96], "R": null, "K'": [[75, 85], [76, 87]], "V'": [[70, 77], [73, 83]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Circuito da Boavista attracts David. Mannheim City Airport attracts Sharon. Madala attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to Circuito da Boavista? Answer: No\n Premise: < Kosi Zone attracts Sarah. Boinpalle mandal attracts Donna. Tartu Town Hall attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [25, 27], "Q": [49, 50], "K": [29, 30], "R": null, "K'": [[14, 22], [15, 24]], "V'": [[5, 16], [12, 20]], "example": [1, 65]}, {"END": [128, 129], "A": [120, 126], "V": [88, 93], "Q": [115, 116], "K": [95, 96], "R": null, "K'": [[75, 85], [76, 87]], "V'": [[70, 77], [73, 83]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Brian. Aucanquilcha attracts Daniel. Kuomintang attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Kuomintang? Answer: Yes\n Premise: < Shibganj Upazila, Bogra District attracts Susan. Neighbourhoods in Kolkata attracts Ronald. Bad Camberg attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Shibganj Upazila, Bogra District? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [55, 59], "V": [24, 28], "Q": [50, 51], "K": [30, 31], "R": null, "K'": [[12, 22], [13, 23]], "V'": [[5, 14], [10, 20]], "example": [1, 63]}, {"END": [141, 142], "A": [128, 139], "V": [68, 79], "Q": [123, 124], "K": [81, 82], "R": null, "K'": [[94, 102], [96, 104]], "V'": [[83, 97], [92, 100]], "example": [64, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Brian. Aucanquilcha attracts Daniel. Kuomintang attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to Kuomintang? Answer: Yes\n Premise: < Shibganj Upazila, Bogra District attracts Susan. Neighbourhoods in Kolkata attracts Ronald. Bad Camberg attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Susan wants to go to Bad Camberg? Answer: No\n", "ranges": [{"END": [61, 62], "A": [55, 59], "V": [24, 28], "Q": [50, 51], "K": [30, 31], "R": null, "K'": [[12, 22], [13, 23]], "V'": [[5, 14], [10, 20]], "example": [1, 63]}, {"END": [133, 134], "A": [128, 131], "V": [68, 79], "Q": [123, 124], "K": [81, 82], "R": null, "K'": [[94, 102], [96, 104]], "V'": [[83, 97], [92, 100]], "example": [64, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Trento attracts Sarah. Canton of Schaffhausen attracts Margaret. Hultsfred Municipality attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to Trento? Answer: No\n Premise: < Bernheze attracts Ronald. Theni district attracts William. Entracque attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [21, 27], "Q": [49, 50], "K": [29, 30], "R": null, "K'": [[9, 19], [10, 20]], "V'": [[5, 11], [7, 17]], "example": [1, 60]}, {"END": [115, 116], "A": [110, 113], "V": [73, 76], "Q": [105, 106], "K": [78, 79], "R": null, "K'": [[70, 85], [72, 86]], "V'": [[65, 80], [68, 83]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Trento attracts Sarah. Canton of Schaffhausen attracts Margaret. Hultsfred Municipality attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to Trento? Answer: No\n Premise: < Bernheze attracts Ronald. Theni district attracts William. Entracque attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that William wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [21, 27], "Q": [49, 50], "K": [29, 30], "R": null, "K'": [[9, 19], [10, 20]], "V'": [[5, 11], [7, 17]], "example": [1, 60]}, {"END": [115, 116], "A": [110, 113], "V": [73, 76], "Q": [105, 106], "K": [78, 79], "R": null, "K'": [[70, 85], [72, 86]], "V'": [[65, 80], [68, 83]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Kevin. Castrovirreyna District attracts Mary. Manila Light Rail Transit System attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Manila Light Rail Transit System? Answer: No\n Premise: < Peremyshliany attracts Jeff. public transport in Istanbul attracts Joseph. Ambatofinandrahana District attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Peremyshliany? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [11, 16], "Q": [49, 50], "K": [18, 19], "R": null, "K'": [[9, 29], [10, 30]], "V'": [[5, 20], [7, 27]], "example": [1, 65]}, {"END": [131, 132], "A": [124, 129], "V": [70, 75], "Q": [119, 120], "K": [77, 78], "R": null, "K'": [[87, 99], [88, 100]], "V'": [[79, 89], [85, 97]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Kevin. Castrovirreyna District attracts Mary. Manila Light Rail Transit System attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that Mary wants to go to Manila Light Rail Transit System? Answer: No\n Premise: < Peremyshliany attracts Jeff. public transport in Istanbul attracts Joseph. Ambatofinandrahana District attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to public transport in Istanbul? Answer: No\n", "ranges": [{"END": [63, 64], "A": [54, 61], "V": [11, 16], "Q": [49, 50], "K": [18, 19], "R": null, "K'": [[9, 29], [10, 30]], "V'": [[5, 20], [7, 27]], "example": [1, 65]}, {"END": [132, 133], "A": [124, 130], "V": [70, 75], "Q": [119, 120], "K": [77, 78], "R": null, "K'": [[87, 99], [88, 100]], "V'": [[79, 89], [85, 97]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valdemarsvik attracts Richard. Manila Light Rail Transit System attracts Nancy. Eurostat attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to Valdemarsvik? Answer: No\n Premise: < Breege attracts Brian. Westerburg attracts Michael. Kretinga attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Breege? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [13, 20], "Q": [49, 50], "K": [22, 23], "R": null, "K'": [[11, 28], [12, 30]], "V'": [[5, 24], [9, 26]], "example": [1, 62]}, {"END": [114, 115], "A": [110, 112], "V": [67, 69], "Q": [105, 106], "K": [71, 72], "R": null, "K'": [[78, 85], [79, 86]], "V'": [[73, 80], [76, 83]], "example": [63, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valdemarsvik attracts Richard. Manila Light Rail Transit System attracts Nancy. Eurostat attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to Valdemarsvik? Answer: No\n Premise: < Breege attracts Brian. Westerburg attracts Michael. Kretinga attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to Westerburg? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [13, 20], "Q": [49, 50], "K": [22, 23], "R": null, "K'": [[11, 28], [12, 30]], "V'": [[5, 24], [9, 26]], "example": [1, 62]}, {"END": [115, 116], "A": [110, 113], "V": [67, 69], "Q": [105, 106], "K": [71, 72], "R": null, "K'": [[78, 85], [79, 86]], "V'": [[73, 80], [76, 83]], "example": [63, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ghatanji attracts Jason. prefectural road attracts Laura. Bouygues Telecom attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to prefectural road? Answer: Yes\n Premise: < Hohenwestedt attracts Karen. Brandon University attracts James. Alfred Wegener Institute for Polar and Marine Research attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Hohenwestedt? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [13, 17], "Q": [49, 50], "K": [19, 20], "R": null, "K'": [[11, 28], [12, 30]], "V'": [[5, 21], [9, 26]], "example": [1, 62]}, {"END": [130, 131], "A": [123, 128], "V": [67, 72], "Q": [117, 119], "K": [74, 76], "R": null, "K'": [[82, 96], [83, 98]], "V'": [[77, 84], [80, 94]], "example": [63, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ghatanji attracts Jason. prefectural road attracts Laura. Bouygues Telecom attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Laura wants to go to prefectural road? Answer: Yes\n Premise: < Hohenwestedt attracts Karen. Brandon University attracts James. Alfred Wegener Institute for Polar and Marine Research attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to Brandon University? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [13, 17], "Q": [49, 50], "K": [19, 20], "R": null, "K'": [[11, 28], [12, 30]], "V'": [[5, 21], [9, 26]], "example": [1, 62]}, {"END": [128, 129], "A": [123, 126], "V": [67, 72], "Q": [117, 119], "K": [74, 76], "R": null, "K'": [[82, 96], [83, 98]], "V'": [[77, 84], [80, 94]], "example": [63, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lismore GAA attracts Lisa. Democrats 66 attracts Michael. Minamishitara District, Aichi attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Democrats 66? Answer: Yes\n Premise: < Mahalangur Himal attracts Donald. Sydney Sports Ground attracts Helen. Christian Medical College Ludhiana attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Christian Medical College Ludhiana? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [59, 64], "V": [14, 19], "Q": [54, 55], "K": [21, 22], "R": null, "K'": [[12, 34], [13, 35]], "V'": [[5, 23], [10, 32]], "example": [1, 68]}, {"END": [132, 133], "A": [124, 130], "V": [91, 97], "Q": [119, 120], "K": [99, 100], "R": null, "K'": [[81, 89], [82, 90]], "V'": [[73, 83], [79, 87]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lismore GAA attracts Lisa. Democrats 66 attracts Michael. Minamishitara District, Aichi attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to Democrats 66? Answer: Yes\n Premise: < Mahalangur Himal attracts Donald. Sydney Sports Ground attracts Helen. Christian Medical College Ludhiana attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Sydney Sports Ground? Answer: No\n", "ranges": [{"END": [66, 67], "A": [59, 64], "V": [14, 19], "Q": [54, 55], "K": [21, 22], "R": null, "K'": [[12, 34], [13, 35]], "V'": [[5, 23], [10, 32]], "example": [1, 68]}, {"END": [130, 131], "A": [124, 128], "V": [91, 97], "Q": [119, 120], "K": [99, 100], "R": null, "K'": [[81, 89], [82, 90]], "V'": [[73, 83], [79, 87]], "example": [69, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Shoranur attracts Deborah. K.S.V. Roeselare attracts Richard. Aventine Hill attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Aventine Hill? Answer: Yes\n Premise: < Bay attracts Jeff. Garibaldi Ranges attracts Patricia. Koriya district attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Bay? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [60, 64], "V": [29, 33], "Q": [55, 56], "K": [35, 36], "R": null, "K'": [[11, 27], [14, 28]], "V'": [[5, 15], [9, 25]], "example": [1, 68]}, {"END": [124, 125], "A": [121, 122], "V": [73, 74], "Q": [116, 117], "K": [76, 77], "R": null, "K'": [[86, 96], [89, 97]], "V'": [[78, 90], [84, 94]], "example": [69, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Shoranur attracts Deborah. K.S.V. Roeselare attracts Richard. Aventine Hill attracts George. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to Aventine Hill? Answer: Yes\n Premise: < Bay attracts Jeff. Garibaldi Ranges attracts Patricia. Koriya district attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to Garibaldi Ranges? Answer: No\n", "ranges": [{"END": [66, 67], "A": [60, 64], "V": [29, 33], "Q": [55, 56], "K": [35, 36], "R": null, "K'": [[11, 27], [14, 28]], "V'": [[5, 15], [9, 25]], "example": [1, 68]}, {"END": [129, 130], "A": [121, 127], "V": [73, 74], "Q": [116, 117], "K": [76, 77], "R": null, "K'": [[86, 96], [89, 97]], "V'": [[78, 90], [84, 94]], "example": [69, 131]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< George likes Augustinergasse. Barbara likes Madala. Barbara likes Lannemezan. >. Barbara does not want to go to Augustinergasse\n < Mary likes Neighbourhoods in Kolkata. Christopher likes Hyderabad Deccan railway station. Christopher likes Valea lui Mihai. >. Christopher does not want to go to Neighbourhoods in Kolkata\n", "ranges": [{"END": [32, 33], "A'": [33, 37], "V'": [5, 9], "Q": [26, 27], "K'": [2, 3], "R": [28, 29], "K": [[10, 16], [11, 17]], "V": [[13, 19], [15, 23]], "example": [1, 37]}, {"END": [82, 83], "A'": [83, 92], "V'": [42, 51], "Q": [76, 77], "K'": [39, 40], "R": [78, 79], "K": [[52, 64], [53, 65]], "V": [[55, 67], [63, 73]], "example": [38, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly likes Chartered Professional Accountant. Steven likes Lake Caliraya. Kimberly likes Abbey of Echternach. >. Kimberly does not want to go to Lake Caliraya\n < Donald likes Tinapa Resort. Donald likes Aucanquilcha. Susan likes Kuomintang. >. Donald does not want to go to Kuomintang\n", "ranges": [{"END": [45, 46], "A'": [46, 51], "V'": [16, 21], "Q": [37, 40], "K'": [13, 14], "R": [41, 42], "K": [[2, 22], [5, 25]], "V": [[7, 27], [12, 34]], "example": [1, 51]}, {"END": [88, 89], "A'": [89, 93], "V'": [75, 79], "Q": [82, 83], "K'": [72, 73], "R": [84, 85], "K": [[53, 62], [54, 63]], "V": [[56, 65], [61, 71]], "example": [52, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Gasunie. Brian likes Thiruvattar. Ruth likes DESTATIS. >. Brian does not want to go to DESTATIS\n < Jeff likes Glencree. Donna likes Grianan of Aileach. Jeff likes Leap Castle. >. Jeff does not want to go to Grianan of Aileach\n", "ranges": [{"END": [33, 34], "A'": [34, 37], "V'": [21, 24], "Q": [27, 28], "K'": [18, 19], "R": [29, 30], "K": [[2, 9], [3, 10]], "V": [[5, 12], [8, 17]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 81], "V'": [50, 57], "Q": [67, 68], "K'": [46, 48], "R": [69, 70], "K": [[39, 58], [40, 59]], "V": [[42, 61], [45, 64]], "example": [38, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Trento. Robert likes Canton of Schaffhausen. Betty likes Hultsfred Municipality. >. Robert does not want to go to Hultsfred Municipality\n < Linda likes Thuringian Highland. Christopher likes Gavork-e Nalin Rural District. Christopher likes Jafara. >. Christopher does not want to go to Thuringian Highland\n", "ranges": [{"END": [36, 37], "A'": [37, 43], "V'": [21, 27], "Q": [30, 31], "K'": [18, 19], "R": [32, 33], "K": [[2, 8], [3, 9]], "V": [[5, 11], [7, 17]], "example": [1, 43]}, {"END": [84, 85], "A'": [85, 90], "V'": [49, 54], "Q": [78, 79], "K'": [45, 47], "R": [80, 81], "K": [[55, 69], [56, 70]], "V": [[58, 72], [68, 75]], "example": [44, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Michelle likes Pilis Mountains. Ronald likes Ichchapuram. Michelle likes Western Bug. >. Michelle does not want to go to Ichchapuram\n < Kenneth likes Emscher. Margaret likes Castrovirreyna District. Kenneth likes Manila Light Rail Transit System. >. Kenneth does not want to go to Castrovirreyna District\n", "ranges": [{"END": [36, 37], "A'": [37, 42], "V'": [14, 19], "Q": [29, 31], "K'": [10, 12], "R": [32, 33], "K": [[2, 20], [4, 22]], "V": [[6, 24], [9, 26]], "example": [1, 42]}, {"END": [78, 79], "A'": [79, 84], "V'": [53, 58], "Q": [72, 73], "K'": [50, 51], "R": [74, 75], "K": [[44, 59], [45, 60]], "V": [[47, 62], [49, 69]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Kevin likes Greater Rio de Janeiro. Carol likes Larsmo. Carol likes Ljig. >. Carol does not want to go to Greater Rio de Janeiro\n < Daniel likes Pinosava. Laura likes Ticho House. Daniel likes Sabratha. >. Daniel does not want to go to Ticho House\n", "ranges": [{"END": [32, 33], "A'": [33, 38], "V'": [5, 10], "Q": [26, 27], "K'": [2, 3], "R": [28, 29], "K": [[11, 17], [12, 18]], "V": [[14, 20], [16, 23]], "example": [1, 38]}, {"END": [71, 72], "A'": [72, 76], "V'": [50, 54], "Q": [65, 66], "K'": [47, 48], "R": [67, 68], "K": [[40, 55], [41, 56]], "V": [[43, 58], [46, 62]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Barbara likes Valdemarsvik. Joseph likes Manila Light Rail Transit System. Barbara likes Eurostat. >. Barbara does not want to go to Manila Light Rail Transit System\n < Daniel likes Gavork-e Nalin Rural District. Daniel likes Bad Camberg. Susan likes Calw. >. Daniel does not want to go to Calw\n", "ranges": [{"END": [35, 36], "A'": [36, 43], "V'": [13, 20], "Q": [29, 30], "K'": [10, 11], "R": [31, 32], "K": [[2, 21], [3, 22]], "V": [[5, 24], [9, 26]], "example": [1, 43]}, {"END": [80, 81], "A'": [81, 83], "V'": [69, 71], "Q": [74, 75], "K'": [66, 67], "R": [76, 77], "K": [[45, 59], [46, 60]], "V": [[48, 62], [58, 65]], "example": [44, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Buchan. Patricia likes Waurn Ponds. Patricia likes Bhinmal. >. Patricia does not want to go to Buchan\n < Sandra likes Zwiefalten. Joseph likes Ghatanji. Sandra likes CFMJ. >. Sandra does not want to go to Ghatanji\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [5, 7], "Q": [29, 32], "K'": [2, 3], "R": [33, 34], "K": [[8, 18], [11, 21]], "V": [[13, 23], [17, 26]], "example": [1, 40]}, {"END": [76, 77], "A'": [77, 81], "V'": [54, 58], "Q": [69, 71], "K'": [51, 52], "R": [72, 73], "K": [[42, 59], [44, 61]], "V": [[46, 63], [50, 66]], "example": [41, 81]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Augustinergasse. Barbara likes Madala. Barbara likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Augustinergasse? Answer: Yes\n Premise: < Lisa likes Ledaal. David likes Hyderabad Deccan railway station. David likes Valea lui Mihai. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Ledaal? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [8, 12], "Q": [45, 46], "K'": [5, 6], "R": [47, 48], "K": [[13, 19], [14, 20]], "V": [[16, 22], [18, 26]], "example": [1, 60]}, {"END": [124, 125], "A'": [119, 122], "V'": [68, 71], "Q": [112, 113], "K'": [65, 66], "R": [114, 115], "K": [[72, 84], [73, 85]], "V": [[75, 87], [83, 93]], "example": [61, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George likes Augustinergasse. Barbara likes Madala. Barbara likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Augustinergasse? Answer: Yes\n Premise: < Lisa likes Ledaal. David likes Hyderabad Deccan railway station. David likes Valea lui Mihai. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Hyderabad Deccan railway station? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [8, 12], "Q": [45, 46], "K'": [5, 6], "R": [47, 48], "K": [[13, 19], [14, 20]], "V": [[16, 22], [18, 26]], "example": [1, 60]}, {"END": [129, 130], "A'": [119, 127], "V'": [68, 71], "Q": [112, 113], "K'": [65, 66], "R": [114, 115], "K": [[72, 84], [73, 85]], "V": [[75, 87], [83, 93]], "example": [61, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes Mannheim City Airport. Anthony likes Santo Stefano d'Aveto. Anthony likes Staatliche Antikensammlungen. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Mannheim City Airport? Answer: Yes\n Premise: < Dorothy likes Greater Rio de Janeiro. Kevin likes Mediolanum Forum. Dorothy likes Toronto Police Service. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Mediolanum Forum? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [8, 12], "Q": [55, 56], "K'": [5, 6], "R": [57, 58], "K": [[13, 25], [14, 26]], "V": [[16, 28], [24, 36]], "example": [1, 70]}, {"END": [133, 134], "A'": [127, 131], "V'": [88, 92], "Q": [119, 121], "K'": [85, 86], "R": [122, 123], "K": [[75, 93], [77, 95]], "V": [[79, 97], [84, 100]], "example": [71, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria likes Mannheim City Airport. Anthony likes Santo Stefano d'Aveto. Anthony likes Staatliche Antikensammlungen. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Mannheim City Airport? Answer: Yes\n Premise: < Dorothy likes Greater Rio de Janeiro. Kevin likes Mediolanum Forum. Dorothy likes Toronto Police Service. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Greater Rio de Janeiro? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [8, 12], "Q": [55, 56], "K'": [5, 6], "R": [57, 58], "K": [[13, 25], [14, 26]], "V": [[16, 28], [24, 36]], "example": [1, 70]}, {"END": [134, 135], "A'": [127, 132], "V'": [88, 92], "Q": [119, 121], "K'": [85, 86], "R": [122, 123], "K": [[75, 93], [77, 95]], "V": [[79, 97], [84, 100]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Glencree. Donna likes Grianan of Aileach. Jeff likes Leap Castle. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Glencree? Answer: No\n Premise: < Laura likes Fischenthal. Laura likes public transport in Istanbul. Brian likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Hellenic Police? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [16, 23], "Q": [49, 50], "K'": [12, 14], "R": [51, 52], "K": [[5, 24], [6, 25]], "V": [[8, 27], [11, 30]], "example": [1, 63]}, {"END": [125, 126], "A'": [119, 123], "V'": [89, 93], "Q": [112, 113], "K'": [86, 87], "R": [114, 115], "K": [[68, 76], [69, 77]], "V": [[71, 79], [75, 85]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Glencree. Donna likes Grianan of Aileach. Jeff likes Leap Castle. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Glencree? Answer: No\n Premise: < Laura likes Fischenthal. Laura likes public transport in Istanbul. Brian likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Fischenthal? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [16, 23], "Q": [49, 50], "K'": [12, 14], "R": [51, 52], "K": [[5, 24], [6, 25]], "V": [[8, 27], [11, 30]], "example": [1, 63]}, {"END": [125, 126], "A'": [119, 123], "V'": [89, 93], "Q": [112, 113], "K'": [86, 87], "R": [114, 115], "K": [[68, 76], [69, 77]], "V": [[71, 79], [75, 85]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Iximche. Donald likes Vinkeveen. Susan likes Pacentro. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Vinkeveen? Answer: Yes\n Premise: < Helen likes Borghetto di Vara. Helen likes Lajran Rural District. Mark likes FC Gorodeya. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to FC Gorodeya? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [15, 19], "Q": [45, 46], "K'": [12, 13], "R": [47, 48], "K": [[5, 20], [6, 21]], "V": [[8, 23], [11, 26]], "example": [1, 60]}, {"END": [124, 125], "A'": [118, 122], "V'": [88, 92], "Q": [111, 112], "K'": [85, 86], "R": [113, 114], "K": [[65, 75], [66, 76]], "V": [[68, 78], [74, 84]], "example": [61, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Iximche. Donald likes Vinkeveen. Susan likes Pacentro. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Vinkeveen? Answer: Yes\n Premise: < Helen likes Borghetto di Vara. Helen likes Lajran Rural District. Mark likes FC Gorodeya. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Borghetto di Vara? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [15, 19], "Q": [45, 46], "K'": [12, 13], "R": [47, 48], "K": [[5, 20], [6, 21]], "V": [[8, 23], [11, 26]], "example": [1, 60]}, {"END": [126, 127], "A'": [118, 124], "V'": [88, 92], "Q": [111, 112], "K'": [85, 86], "R": [113, 114], "K": [[65, 75], [66, 76]], "V": [[68, 78], [74, 84]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Dawa River. Steven likes Roman Catholic Archdiocese of Lucca. Ruth likes ERT World. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to ERT World? Answer: No\n Premise: < Deborah likes Manila Bay. William likes Toronto Police Service. Deborah likes Abu Ghosh. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Toronto Police Service? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [15, 24], "Q": [50, 51], "K'": [12, 13], "R": [52, 53], "K": [[5, 25], [6, 26]], "V": [[8, 28], [11, 31]], "example": [1, 64]}, {"END": [127, 128], "A'": [122, 125], "V'": [81, 84], "Q": [113, 116], "K'": [78, 79], "R": [117, 118], "K": [[69, 85], [72, 88]], "V": [[74, 90], [77, 94]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth likes Dawa River. Steven likes Roman Catholic Archdiocese of Lucca. Ruth likes ERT World. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to ERT World? Answer: No\n Premise: < Deborah likes Manila Bay. William likes Toronto Police Service. Deborah likes Abu Ghosh. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Manila Bay? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [15, 24], "Q": [50, 51], "K'": [12, 13], "R": [52, 53], "K": [[5, 25], [6, 26]], "V": [[8, 28], [11, 31]], "example": [1, 64]}, {"END": [127, 128], "A'": [122, 125], "V'": [81, 84], "Q": [113, 116], "K'": [78, 79], "R": [117, 118], "K": [[69, 85], [72, 88]], "V": [[74, 90], [77, 94]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony likes La famille Plouffe. Anthony likes Kazinga Channel. Susan likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Kazinga Channel? Answer: No\n Premise: < Michael likes Hogeschool Gent. Michael likes Lindholm station. Jennifer likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Annweiler am Trifels? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [55, 59], "V'": [25, 29], "Q": [48, 49], "K'": [22, 23], "R": [50, 51], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 21]], "example": [1, 63]}, {"END": [129, 130], "A'": [120, 127], "V'": [87, 94], "Q": [113, 114], "K'": [83, 85], "R": [115, 116], "K": [[68, 76], [69, 77]], "V": [[71, 79], [75, 82]], "example": [64, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony likes La famille Plouffe. Anthony likes Kazinga Channel. Susan likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Kazinga Channel? Answer: No\n Premise: < Michael likes Hogeschool Gent. Michael likes Lindholm station. Jennifer likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Hogeschool Gent? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [55, 59], "V'": [25, 29], "Q": [48, 49], "K'": [22, 23], "R": [50, 51], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 21]], "example": [1, 63]}, {"END": [126, 127], "A'": [120, 124], "V'": [87, 94], "Q": [113, 114], "K'": [83, 85], "R": [115, 116], "K": [[68, 76], [69, 77]], "V": [[71, 79], [75, 82]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Sidhi district. Laura likes Porto Azzurro. Laura likes Ikaalinen. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Sidhi district? Answer: Yes\n Premise: < Michael likes 2004 Indian Ocean earthquake. Nancy likes Khasavyurt. Michael likes Penna Ahobilam. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Khasavyurt? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [8, 11], "Q": [47, 48], "K'": [5, 6], "R": [49, 50], "K": [[12, 21], [13, 22]], "V": [[15, 24], [20, 28]], "example": [1, 61]}, {"END": [128, 129], "A'": [122, 126], "V'": [83, 87], "Q": [115, 116], "K'": [80, 81], "R": [117, 118], "K": [[66, 88], [67, 89]], "V": [[70, 91], [79, 96]], "example": [62, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Sidhi district. Laura likes Porto Azzurro. Laura likes Ikaalinen. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Sidhi district? Answer: Yes\n Premise: < Michael likes 2004 Indian Ocean earthquake. Nancy likes Khasavyurt. Michael likes Penna Ahobilam. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to 2004 Indian Ocean earthquake? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [8, 11], "Q": [47, 48], "K'": [5, 6], "R": [49, 50], "K": [[12, 21], [13, 22]], "V": [[15, 24], [20, 28]], "example": [1, 61]}, {"END": [134, 135], "A'": [123, 132], "V'": [83, 87], "Q": [115, 116], "K'": [80, 81], "R": [117, 118], "K": [[66, 88], [67, 89]], "V": [[70, 91], [79, 96]], "example": [62, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna likes Papanasam. Michael likes Band-e Kaisar. Michael likes Vukov Spomenik. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Papanasam? Answer: Yes\n Premise: < Richard likes Atromitos Piraeus F.C. Richard likes Kyoto University. Sandra likes Lismore GAA. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Lismore GAA? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [9, 12], "Q": [50, 51], "K'": [5, 7], "R": [52, 53], "K": [[13, 22], [14, 23]], "V": [[16, 25], [21, 31]], "example": [1, 64]}, {"END": [131, 132], "A'": [124, 129], "V'": [93, 98], "Q": [117, 118], "K'": [89, 91], "R": [119, 120], "K": [[69, 82], [70, 83]], "V": [[72, 85], [81, 88]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna likes Papanasam. Michael likes Band-e Kaisar. Michael likes Vukov Spomenik. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Papanasam? Answer: Yes\n Premise: < Richard likes Atromitos Piraeus F.C. Richard likes Kyoto University. Sandra likes Lismore GAA. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Kyoto University? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [9, 12], "Q": [50, 51], "K'": [5, 7], "R": [52, 53], "K": [[13, 22], [14, 23]], "V": [[16, 25], [21, 31]], "example": [1, 64]}, {"END": [129, 130], "A'": [124, 127], "V'": [93, 98], "Q": [117, 118], "K'": [89, 91], "R": [119, 120], "K": [[69, 82], [70, 83]], "V": [[72, 85], [81, 88]], "example": [65, 131]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Augustinergasse attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Barbara does not want to go to Augustinergasse\n < Neighbourhoods in Kolkata attracts Mary. Hyderabad Deccan railway station attracts Christopher. Valea lui Mihai attracts Christopher. >. Christopher does not want to go to Neighbourhoods in Kolkata\n", "ranges": [{"END": [32, 33], "A'": [33, 37], "V'": [2, 6], "Q": [26, 27], "K'": [8, 9], "R": [28, 29], "K": [[14, 22], [15, 23]], "V": [[10, 16], [12, 20]], "example": [1, 37]}, {"END": [82, 83], "A'": [83, 92], "V'": [39, 48], "Q": [76, 77], "K'": [50, 51], "R": [78, 79], "K": [[62, 72], [63, 73]], "V": [[52, 64], [60, 70]], "example": [38, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Chartered Professional Accountant attracts Kimberly. Lake Caliraya attracts Steven. Abbey of Echternach attracts Kimberly. >. Kimberly does not want to go to Lake Caliraya\n < Tinapa Resort attracts Donald. Aucanquilcha attracts Donald. Kuomintang attracts Susan. >. Donald does not want to go to Kuomintang\n", "ranges": [{"END": [45, 46], "A'": [46, 51], "V'": [13, 18], "Q": [37, 40], "K'": [20, 21], "R": [41, 42], "K": [[9, 31], [12, 34]], "V": [[2, 22], [7, 29]], "example": [1, 51]}, {"END": [88, 89], "A'": [89, 93], "V'": [72, 76], "Q": [82, 83], "K'": [78, 79], "R": [84, 85], "K": [[60, 70], [61, 71]], "V": [[53, 62], [58, 68]], "example": [52, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Gasunie attracts Brian. Thiruvattar attracts Brian. DESTATIS attracts Ruth. >. Brian does not want to go to DESTATIS\n < Glencree attracts Jeff. Grianan of Aileach attracts Donna. Leap Castle attracts Jeff. >. Jeff does not want to go to Grianan of Aileach\n", "ranges": [{"END": [33, 34], "A'": [34, 37], "V'": [18, 21], "Q": [27, 28], "K'": [23, 24], "R": [29, 30], "K": [[7, 16], [8, 17]], "V": [[2, 9], [5, 14]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 81], "V'": [46, 53], "Q": [67, 68], "K'": [55, 57], "R": [69, 70], "K": [[44, 63], [45, 64]], "V": [[39, 58], [42, 61]], "example": [38, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Trento attracts Robert. Canton of Schaffhausen attracts Robert. Hultsfred Municipality attracts Betty. >. Robert does not want to go to Hultsfred Municipality\n < Thuringian Highland attracts Linda. Gavork-e Nalin Rural District attracts Christopher. Jafara attracts Christopher. >. Christopher does not want to go to Thuringian Highland\n", "ranges": [{"END": [36, 37], "A'": [37, 43], "V'": [18, 24], "Q": [30, 31], "K'": [26, 27], "R": [32, 33], "K": [[6, 16], [7, 17]], "V": [[2, 8], [4, 14]], "example": [1, 43]}, {"END": [84, 85], "A'": [85, 90], "V'": [45, 50], "Q": [78, 79], "K'": [52, 54], "R": [80, 81], "K": [[67, 74], [68, 75]], "V": [[55, 69], [65, 72]], "example": [44, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Pilis Mountains attracts Michelle. Ichchapuram attracts Ronald. Western Bug attracts Michelle. >. Michelle does not want to go to Ichchapuram\n < Emscher attracts Kenneth. Castrovirreyna District attracts Margaret. Manila Light Rail Transit System attracts Kenneth. >. Kenneth does not want to go to Castrovirreyna District\n", "ranges": [{"END": [36, 37], "A'": [37, 42], "V'": [10, 15], "Q": [29, 31], "K'": [17, 19], "R": [32, 33], "K": [[7, 24], [9, 26]], "V": [[2, 20], [5, 22]], "example": [1, 42]}, {"END": [78, 79], "A'": [79, 84], "V'": [50, 55], "Q": [72, 73], "K'": [57, 58], "R": [74, 75], "K": [[48, 68], [49, 69]], "V": [[44, 59], [46, 66]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Greater Rio de Janeiro attracts Kevin. Larsmo attracts Carol. Ljig attracts Carol. >. Carol does not want to go to Greater Rio de Janeiro\n < Pinosava attracts Daniel. Ticho House attracts Laura. Sabratha attracts Daniel. >. Daniel does not want to go to Ticho House\n", "ranges": [{"END": [32, 33], "A'": [33, 38], "V'": [2, 7], "Q": [26, 27], "K'": [9, 10], "R": [28, 29], "K": [[15, 22], [16, 23]], "V": [[11, 17], [13, 20]], "example": [1, 38]}, {"END": [71, 72], "A'": [72, 76], "V'": [47, 51], "Q": [65, 66], "K'": [53, 54], "R": [67, 68], "K": [[45, 61], [46, 62]], "V": [[40, 55], [43, 59]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Valdemarsvik attracts Barbara. Manila Light Rail Transit System attracts Joseph. Eurostat attracts Barbara. >. Barbara does not want to go to Manila Light Rail Transit System\n < Gavork-e Nalin Rural District attracts Daniel. Bad Camberg attracts Daniel. Calw attracts Susan. >. Daniel does not want to go to Calw\n", "ranges": [{"END": [35, 36], "A'": [36, 43], "V'": [10, 17], "Q": [29, 30], "K'": [19, 20], "R": [31, 32], "K": [[8, 25], [9, 26]], "V": [[2, 21], [6, 23]], "example": [1, 43]}, {"END": [80, 81], "A'": [81, 83], "V'": [66, 68], "Q": [74, 75], "K'": [70, 71], "R": [76, 77], "K": [[57, 64], [58, 65]], "V": [[45, 59], [55, 62]], "example": [44, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Buchan attracts Mark. Waurn Ponds attracts Patricia. Bhinmal attracts Patricia. >. Patricia does not want to go to Buchan\n < Zwiefalten attracts Sandra. Ghatanji attracts Joseph. CFMJ attracts Sandra. >. Sandra does not want to go to Ghatanji\n", "ranges": [{"END": [37, 38], "A'": [38, 40], "V'": [2, 4], "Q": [29, 32], "K'": [6, 7], "R": [33, 34], "K": [[14, 23], [17, 26]], "V": [[8, 18], [12, 21]], "example": [1, 40]}, {"END": [76, 77], "A'": [77, 81], "V'": [51, 55], "Q": [69, 71], "K'": [57, 58], "R": [72, 73], "K": [[48, 64], [50, 66]], "V": [[42, 59], [46, 62]], "example": [41, 81]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Augustinergasse attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Augustinergasse? Answer: Yes\n Premise: < Ledaal attracts Lisa. Hyderabad Deccan railway station attracts David. Valea lui Mihai attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Ledaal? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [5, 9], "Q": [45, 46], "K'": [11, 12], "R": [47, 48], "K": [[17, 25], [18, 26]], "V": [[13, 19], [15, 23]], "example": [1, 60]}, {"END": [124, 125], "A'": [119, 122], "V'": [65, 68], "Q": [112, 113], "K'": [70, 71], "R": [114, 115], "K": [[82, 92], [83, 93]], "V": [[72, 84], [80, 90]], "example": [61, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Augustinergasse attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to Augustinergasse? Answer: Yes\n Premise: < Ledaal attracts Lisa. Hyderabad Deccan railway station attracts David. Valea lui Mihai attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to Hyderabad Deccan railway station? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [5, 9], "Q": [45, 46], "K'": [11, 12], "R": [47, 48], "K": [[17, 25], [18, 26]], "V": [[13, 19], [15, 23]], "example": [1, 60]}, {"END": [129, 130], "A'": [119, 127], "V'": [65, 68], "Q": [112, 113], "K'": [70, 71], "R": [114, 115], "K": [[82, 92], [83, 93]], "V": [[72, 84], [80, 90]], "example": [61, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mannheim City Airport attracts Maria. Santo Stefano d'Aveto attracts Anthony. Staatliche Antikensammlungen attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Mannheim City Airport? Answer: Yes\n Premise: < Greater Rio de Janeiro attracts Dorothy. Mediolanum Forum attracts Kevin. Toronto Police Service attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Mediolanum Forum? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [5, 9], "Q": [55, 56], "K'": [11, 12], "R": [57, 58], "K": [[23, 35], [24, 36]], "V": [[13, 25], [21, 33]], "example": [1, 70]}, {"END": [133, 134], "A'": [127, 131], "V'": [85, 89], "Q": [119, 121], "K'": [91, 92], "R": [122, 123], "K": [[82, 98], [84, 100]], "V": [[75, 93], [80, 96]], "example": [71, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mannheim City Airport attracts Maria. Santo Stefano d'Aveto attracts Anthony. Staatliche Antikensammlungen attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Mannheim City Airport? Answer: Yes\n Premise: < Greater Rio de Janeiro attracts Dorothy. Mediolanum Forum attracts Kevin. Toronto Police Service attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not want to go to Greater Rio de Janeiro? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [5, 9], "Q": [55, 56], "K'": [11, 12], "R": [57, 58], "K": [[23, 35], [24, 36]], "V": [[13, 25], [21, 33]], "example": [1, 70]}, {"END": [134, 135], "A'": [127, 132], "V'": [85, 89], "Q": [119, 121], "K'": [91, 92], "R": [122, 123], "K": [[82, 98], [84, 100]], "V": [[75, 93], [80, 96]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Glencree attracts Jeff. Grianan of Aileach attracts Donna. Leap Castle attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Glencree? Answer: No\n Premise: < Fischenthal attracts Laura. public transport in Istanbul attracts Laura. Hellenic Police attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Hellenic Police? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [12, 19], "Q": [49, 50], "K'": [21, 23], "R": [51, 52], "K": [[10, 29], [11, 30]], "V": [[5, 24], [8, 27]], "example": [1, 63]}, {"END": [125, 126], "A'": [119, 123], "V'": [86, 90], "Q": [112, 113], "K'": [92, 93], "R": [114, 115], "K": [[74, 84], [75, 85]], "V": [[68, 76], [72, 82]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Glencree attracts Jeff. Grianan of Aileach attracts Donna. Leap Castle attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to Glencree? Answer: No\n Premise: < Fischenthal attracts Laura. public transport in Istanbul attracts Laura. Hellenic Police attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Fischenthal? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [12, 19], "Q": [49, 50], "K'": [21, 23], "R": [51, 52], "K": [[10, 29], [11, 30]], "V": [[5, 24], [8, 27]], "example": [1, 63]}, {"END": [125, 126], "A'": [119, 123], "V'": [86, 90], "Q": [112, 113], "K'": [92, 93], "R": [114, 115], "K": [[74, 84], [75, 85]], "V": [[68, 76], [72, 82]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Iximche attracts Susan. Vinkeveen attracts Donald. Pacentro attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Vinkeveen? Answer: Yes\n Premise: < Borghetto di Vara attracts Helen. Lajran Rural District attracts Helen. FC Gorodeya attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to FC Gorodeya? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [12, 16], "Q": [45, 46], "K'": [18, 19], "R": [47, 48], "K": [[10, 25], [11, 26]], "V": [[5, 20], [8, 23]], "example": [1, 60]}, {"END": [124, 125], "A'": [118, 122], "V'": [85, 89], "Q": [111, 112], "K'": [91, 92], "R": [113, 114], "K": [[73, 83], [74, 84]], "V": [[65, 75], [71, 81]], "example": [61, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Iximche attracts Susan. Vinkeveen attracts Donald. Pacentro attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not want to go to Vinkeveen? Answer: Yes\n Premise: < Borghetto di Vara attracts Helen. Lajran Rural District attracts Helen. FC Gorodeya attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not want to go to Borghetto di Vara? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [12, 16], "Q": [45, 46], "K'": [18, 19], "R": [47, 48], "K": [[10, 25], [11, 26]], "V": [[5, 20], [8, 23]], "example": [1, 60]}, {"END": [126, 127], "A'": [118, 124], "V'": [85, 89], "Q": [111, 112], "K'": [91, 92], "R": [113, 114], "K": [[73, 83], [74, 84]], "V": [[65, 75], [71, 81]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Dawa River attracts Ruth. Roman Catholic Archdiocese of Lucca attracts Steven. ERT World attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to ERT World? Answer: No\n Premise: < Manila Bay attracts Deborah. Toronto Police Service attracts William. Abu Ghosh attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Toronto Police Service? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [12, 21], "Q": [50, 51], "K'": [23, 24], "R": [52, 53], "K": [[10, 30], [11, 31]], "V": [[5, 25], [8, 28]], "example": [1, 64]}, {"END": [127, 128], "A'": [122, 125], "V'": [78, 81], "Q": [113, 116], "K'": [83, 84], "R": [117, 118], "K": [[74, 91], [77, 94]], "V": [[69, 85], [72, 89]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Dawa River attracts Ruth. Roman Catholic Archdiocese of Lucca attracts Steven. ERT World attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not want to go to ERT World? Answer: No\n Premise: < Manila Bay attracts Deborah. Toronto Police Service attracts William. Abu Ghosh attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to Manila Bay? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [12, 21], "Q": [50, 51], "K'": [23, 24], "R": [52, 53], "K": [[10, 30], [11, 31]], "V": [[5, 25], [8, 28]], "example": [1, 64]}, {"END": [127, 128], "A'": [122, 125], "V'": [78, 81], "Q": [113, 116], "K'": [83, 84], "R": [117, 118], "K": [[74, 91], [77, 94]], "V": [[69, 85], [72, 89]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < La famille Plouffe attracts Anthony. Kazinga Channel attracts Anthony. Nimmitabel attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Kazinga Channel? Answer: No\n Premise: < Hogeschool Gent attracts Michael. Lindholm station attracts Michael. Annweiler am Trifels attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Annweiler am Trifels? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [55, 59], "V'": [22, 26], "Q": [48, 49], "K'": [28, 29], "R": [50, 51], "K": [[12, 20], [13, 21]], "V": [[5, 14], [10, 18]], "example": [1, 63]}, {"END": [129, 130], "A'": [120, 127], "V'": [83, 90], "Q": [113, 114], "K'": [92, 94], "R": [115, 116], "K": [[74, 81], [75, 82]], "V": [[68, 76], [72, 79]], "example": [64, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < La famille Plouffe attracts Anthony. Kazinga Channel attracts Anthony. Nimmitabel attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not want to go to Kazinga Channel? Answer: No\n Premise: < Hogeschool Gent attracts Michael. Lindholm station attracts Michael. Annweiler am Trifels attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Hogeschool Gent? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [55, 59], "V'": [22, 26], "Q": [48, 49], "K'": [28, 29], "R": [50, 51], "K": [[12, 20], [13, 21]], "V": [[5, 14], [10, 18]], "example": [1, 63]}, {"END": [126, 127], "A'": [120, 124], "V'": [83, 90], "Q": [113, 114], "K'": [92, 94], "R": [115, 116], "K": [[74, 81], [75, 82]], "V": [[68, 76], [72, 79]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sidhi district attracts Jeff. Porto Azzurro attracts Laura. Ikaalinen attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Sidhi district? Answer: Yes\n Premise: < 2004 Indian Ocean earthquake attracts Michael. Khasavyurt attracts Nancy. Penna Ahobilam attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Khasavyurt? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [5, 8], "Q": [47, 48], "K'": [10, 11], "R": [49, 50], "K": [[19, 27], [20, 28]], "V": [[12, 21], [17, 25]], "example": [1, 61]}, {"END": [128, 129], "A'": [122, 126], "V'": [80, 84], "Q": [115, 116], "K'": [86, 87], "R": [117, 118], "K": [[78, 95], [79, 96]], "V": [[67, 88], [76, 93]], "example": [62, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sidhi district attracts Jeff. Porto Azzurro attracts Laura. Ikaalinen attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to Sidhi district? Answer: Yes\n Premise: < 2004 Indian Ocean earthquake attracts Michael. Khasavyurt attracts Nancy. Penna Ahobilam attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to 2004 Indian Ocean earthquake? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [5, 8], "Q": [47, 48], "K'": [10, 11], "R": [49, 50], "K": [[19, 27], [20, 28]], "V": [[12, 21], [17, 25]], "example": [1, 61]}, {"END": [134, 135], "A'": [123, 132], "V'": [80, 84], "Q": [115, 116], "K'": [86, 87], "R": [117, 118], "K": [[78, 95], [79, 96]], "V": [[67, 88], [76, 93]], "example": [62, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Papanasam attracts Donna. Band-e Kaisar attracts Michael. Vukov Spomenik attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Papanasam? Answer: Yes\n Premise: < Atromitos Piraeus F.C attracts Richard. Kyoto University attracts Richard. Lismore GAA attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Lismore GAA? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [5, 8], "Q": [50, 51], "K'": [10, 12], "R": [52, 53], "K": [[20, 30], [21, 31]], "V": [[13, 22], [18, 28]], "example": [1, 64]}, {"END": [131, 132], "A'": [124, 129], "V'": [89, 94], "Q": [117, 118], "K'": [96, 98], "R": [119, 120], "K": [[80, 87], [81, 88]], "V": [[69, 82], [78, 85]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Papanasam attracts Donna. Band-e Kaisar attracts Michael. Vukov Spomenik attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not want to go to Papanasam? Answer: Yes\n Premise: < Atromitos Piraeus F.C attracts Richard. Kyoto University attracts Richard. Lismore GAA attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not want to go to Kyoto University? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [5, 8], "Q": [50, 51], "K'": [10, 12], "R": [52, 53], "K": [[20, 30], [21, 31]], "V": [[13, 22], [18, 28]], "example": [1, 64]}, {"END": [129, 130], "A'": [124, 127], "V'": [89, 94], "Q": [117, 118], "K'": [96, 98], "R": [119, 120], "K": [[80, 87], [81, 88]], "V": [[69, 82], [78, 85]], "example": [65, 131]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Ust-Katav. Richard likes Instituto Pedro Nunes. Kevin likes Bilecik Province. >. So who wants to go to Bilecik Province? Kevin\n < Sandra likes Selbu. Kevin likes Autonomous District Lok Sabha constituency. Elizabeth likes Foundation for a Free Information Infrastructure. >. So who wants to go to Foundation for a Free Information Infrastructure? Elizabeth\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [21, 22], "Q": [38, 43], "K": [24, 29], "R": null, "K'": [[6, 16], [12, 20]], "V'": [[2, 13], [4, 14]], "example": [1, 45]}, {"END": [95, 96], "A": [96, 97], "V": [67, 68], "Q": [87, 95], "K": [70, 78], "R": null, "K'": [[51, 57], [53, 66]], "V'": [[47, 54], [49, 55]], "example": [46, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jeff likes Lake Caliraya. Donald likes Abbey of Echternach. Sarah likes Chartered Professional Accountant. >. So who wants to go to Lake Caliraya? Jeff\n < Ronald likes Annweiler am Trifels. Susan likes Electoral district of Wantirna. Dorothy likes Mediolanum Forum. >. So who wants to go to Electoral district of Wantirna? Susan\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [2, 3], "Q": [39, 44], "K": [5, 10], "R": null, "K'": [[14, 25], [21, 30]], "V'": [[11, 22], [12, 23]], "example": [1, 46]}, {"END": [97, 98], "A": [98, 99], "V": [60, 61], "Q": [89, 97], "K": [63, 71], "R": null, "K'": [[52, 76], [59, 80]], "V'": [[48, 72], [50, 74]], "example": [47, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven likes Abu Ghosh. Brian likes Trento. Ruth likes Taksim Military Barracks. >. So who wants to go to Trento? Brian\n < William likes Hellenic Police. Kimberly likes Hultsfred Municipality. Barbara likes Wakefield Park. >. So who wants to go to Wakefield Park? Barbara\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [10, 11], "Q": [34, 36], "K": [13, 15], "R": null, "K'": [[5, 19], [9, 25]], "V'": [[2, 16], [3, 17]], "example": [1, 38]}, {"END": [80, 81], "A": [81, 82], "V": [60, 61], "Q": [76, 80], "K": [63, 67], "R": null, "K'": [[43, 53], [47, 59]], "V'": [[40, 48], [41, 51]], "example": [39, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Betty likes Jafara. Margaret likes Thuringian Highland. Mary likes Gavork-e Nalin Rural District. >. So who wants to go to Thuringian Highland? Margaret\n < Kenneth likes Western Bug. Donna likes Pilis Mountains. Brian likes Ichchapuram. >. So who wants to go to Ichchapuram? Brian\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [9, 10], "Q": [40, 45], "K": [12, 17], "R": null, "K'": [[5, 21], [8, 31]], "V'": [[2, 18], [3, 19]], "example": [1, 47]}, {"END": [85, 86], "A": [86, 87], "V": [63, 64], "Q": [80, 85], "K": [66, 71], "R": null, "K'": [[52, 59], [54, 62]], "V'": [[49, 55], [50, 57]], "example": [48, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes New Era University. Donna likes Dawa River. Joseph likes Zwiefalten. >. So who wants to go to New Era University? Carol\n < Michelle likes Soalala. Helen likes Central Black Forest. Joseph likes Toronto Police Service. >. So who wants to go to Soalala? Michelle\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [2, 3], "Q": [33, 36], "K": [5, 8], "R": null, "K'": [[13, 20], [16, 24]], "V'": [[9, 17], [11, 18]], "example": [1, 38]}, {"END": [73, 74], "A": [74, 76], "V": [40, 42], "Q": [70, 73], "K": [44, 47], "R": null, "K'": [[51, 58], [54, 61]], "V'": [[48, 55], [49, 56]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David likes 1960 Summer Olympics. Carol likes Bobolice. Maria likes Manila Light Rail Transit System. >. So who wants to go to Bobolice? Carol\n < Ronald likes Calw. Ruth likes Bad Camberg. Anthony likes Gavork-e Nalin Rural District. >. So who wants to go to Calw? Ronald\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [13, 14], "Q": [39, 42], "K": [16, 19], "R": null, "K'": [[6, 23], [12, 30]], "V'": [[2, 20], [3, 21]], "example": [1, 44]}, {"END": [84, 85], "A": [85, 87], "V": [46, 48], "Q": [82, 84], "K": [50, 52], "R": null, "K'": [[56, 63], [59, 73]], "V'": [[53, 60], [54, 61]], "example": [45, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael likes Buchans. Sandra likes Castrovirreyna District. Daniel likes Nuri. >. So who wants to go to Castrovirreyna District? Sandra\n < Kevin likes 2004 Indian Ocean earthquake. Ronald likes Boinpalle mandal. Elizabeth likes Alpokalja. >. So who wants to go to Alpokalja? Elizabeth\n", "ranges": [{"END": [37, 38], "A": [38, 40], "V": [8, 10], "Q": [32, 37], "K": [12, 17], "R": null, "K'": [[5, 21], [7, 23]], "V'": [[2, 18], [3, 19]], "example": [1, 40]}, {"END": [87, 88], "A": [88, 89], "V": [67, 68], "Q": [83, 87], "K": [70, 74], "R": null, "K'": [[46, 60], [55, 66]], "V'": [[42, 56], [43, 58]], "example": [41, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Patricia likes Jemappes. Richard likes Battle of Montereau. Paul likes Waurn Ponds. >. So who wants to go to Jemappes? Patricia\n < Mary likes Welschnofen. Richard likes Aucanquilcha. Michael likes Wanne-Eickel Central Station. >. So who wants to go to Welschnofen? Mary\n", "ranges": [{"END": [41, 42], "A": [42, 45], "V": [2, 5], "Q": [37, 41], "K": [7, 11], "R": null, "K'": [[15, 24], [20, 28]], "V'": [[12, 21], [13, 22]], "example": [1, 45]}, {"END": [89, 90], "A": [90, 91], "V": [47, 48], "Q": [85, 89], "K": [50, 54], "R": null, "K'": [[58, 68], [64, 76]], "V'": [[55, 65], [56, 66]], "example": [46, 91]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Richard likes Instituto Pedro Nunes. Kevin likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is Sharon? Answer: No\n Premise: < Sandra likes Al-Hasakah Governorate. Kevin likes Selbu. Elizabeth likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is Elizabeth? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [24, 25], "Q": [58, 63], "K": [27, 32], "R": null, "K'": [[9, 19], [15, 23]], "V'": [[5, 16], [7, 17]], "example": [1, 70]}, {"END": [134, 135], "A": [131, 132], "V": [93, 94], "Q": [126, 130], "K": [96, 100], "R": null, "K'": [[79, 90], [86, 92]], "V'": [[75, 87], [77, 88]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Richard likes Instituto Pedro Nunes. Kevin likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is Sharon? Answer: No\n Premise: < Sandra likes Al-Hasakah Governorate. Kevin likes Selbu. Elizabeth likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is Kevin? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [24, 25], "Q": [58, 63], "K": [27, 32], "R": null, "K'": [[9, 19], [15, 23]], "V'": [[5, 16], [7, 17]], "example": [1, 70]}, {"END": [134, 135], "A": [131, 132], "V": [93, 94], "Q": [126, 130], "K": [96, 100], "R": null, "K'": [[79, 90], [86, 92]], "V'": [[75, 87], [77, 88]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes regiopolis. Linda likes Beckingen. Kenneth likes Adare Manor. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is Christopher? Answer: Yes\n Premise: < Deborah likes Kowsar County. Kevin likes DESTATIS. John likes Kibungo Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kowsar County is Deborah? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [5, 6], "Q": [53, 57], "K": [8, 12], "R": null, "K'": [[17, 23], [19, 27]], "V'": [[13, 20], [15, 21]], "example": [1, 63]}, {"END": [129, 130], "A": [124, 127], "V": [68, 71], "Q": [119, 123], "K": [73, 77], "R": null, "K'": [[81, 88], [84, 93]], "V'": [[78, 85], [79, 86]], "example": [64, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes regiopolis. Linda likes Beckingen. Kenneth likes Adare Manor. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is Christopher? Answer: Yes\n Premise: < Deborah likes Kowsar County. Kevin likes DESTATIS. John likes Kibungo Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kowsar County is John? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [5, 6], "Q": [53, 57], "K": [8, 12], "R": null, "K'": [[17, 23], [19, 27]], "V'": [[13, 20], [15, 21]], "example": [1, 63]}, {"END": [127, 128], "A": [124, 125], "V": [68, 71], "Q": [119, 123], "K": [73, 77], "R": null, "K'": [[81, 88], [84, 93]], "V'": [[78, 85], [79, 86]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sarnaki. Edward likes Taksim Military Barracks. Robert likes Cunter. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Cunter is Mary? Answer: No\n Premise: < Susan likes Hispaniola. Steven likes Albertis Castle. Betty likes Veyrier. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hispaniola is Susan? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [22, 23], "Q": [53, 55], "K": [25, 27], "R": null, "K'": [[8, 15], [11, 21]], "V'": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [121, 122], "A": [118, 119], "V": [66, 67], "Q": [113, 117], "K": [69, 73], "R": null, "K'": [[77, 84], [80, 87]], "V'": [[74, 81], [75, 82]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sarnaki. Edward likes Taksim Military Barracks. Robert likes Cunter. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Cunter is Mary? Answer: No\n Premise: < Susan likes Hispaniola. Steven likes Albertis Castle. Betty likes Veyrier. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hispaniola is Steven? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [22, 23], "Q": [53, 55], "K": [25, 27], "R": null, "K'": [[8, 15], [11, 21]], "V'": [[5, 12], [6, 13]], "example": [1, 61]}, {"END": [121, 122], "A": [118, 119], "V": [66, 67], "Q": [113, 117], "K": [69, 73], "R": null, "K'": [[77, 84], [80, 87]], "V'": [[74, 81], [75, 82]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth likes Western Bug. Donna likes Pilis Mountains. Brian likes St Lucia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to St Lucia is Kenneth? Answer: No\n Premise: < Sarah likes Rock al Parque. Jeff likes Gmina Konarzyny. Patricia likes Larsmo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Gmina Konarzyny is Jeff? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [19, 20], "Q": [51, 54], "K": [22, 25], "R": null, "K'": [[8, 15], [10, 18]], "V'": [[5, 11], [6, 13]], "example": [1, 60]}, {"END": [126, 127], "A": [123, 124], "V": [73, 74], "Q": [116, 122], "K": [76, 82], "R": null, "K'": [[68, 88], [72, 90]], "V'": [[65, 83], [66, 86]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth likes Western Bug. Donna likes Pilis Mountains. Brian likes St Lucia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to St Lucia is Kenneth? Answer: No\n Premise: < Sarah likes Rock al Parque. Jeff likes Gmina Konarzyny. Patricia likes Larsmo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Gmina Konarzyny is Patricia? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [19, 20], "Q": [51, 54], "K": [22, 25], "R": null, "K'": [[8, 15], [10, 18]], "V'": [[5, 11], [6, 13]], "example": [1, 60]}, {"END": [128, 129], "A": [123, 126], "V": [73, 74], "Q": [116, 122], "K": [76, 82], "R": null, "K'": [[68, 88], [72, 90]], "V'": [[65, 83], [66, 86]], "example": [61, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Sabratha. Nancy likes Ticho House. Margaret likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ticho House is Nancy? Answer: Yes\n Premise: < Jason likes Mbale District. George likes bpost. Michael likes Shablykinsky District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mbale District is Jason? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [13, 14], "Q": [53, 57], "K": [16, 20], "R": null, "K'": [[8, 24], [12, 27]], "V'": [[5, 21], [6, 22]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [68, 69], "Q": [116, 120], "K": [71, 75], "R": null, "K'": [[79, 85], [81, 90]], "V'": [[76, 82], [77, 83]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason likes Sabratha. Nancy likes Ticho House. Margaret likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ticho House is Nancy? Answer: Yes\n Premise: < Jason likes Mbale District. George likes bpost. Michael likes Shablykinsky District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mbale District is George? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [13, 14], "Q": [53, 57], "K": [16, 20], "R": null, "K'": [[8, 24], [12, 27]], "V'": [[5, 21], [6, 22]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [68, 69], "Q": [116, 120], "K": [71, 75], "R": null, "K'": [[79, 85], [81, 90]], "V'": [[76, 82], [77, 83]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura likes Lund Municipality. Jason likes Club Aurora. Dorothy likes Taronga Western Plains Zoo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lund Municipality is Laura? Answer: Yes\n Premise: < James likes Zwiefalten. Ronald likes CFMJ. Karen likes Ghatanji. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is Karen? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [5, 6], "Q": [57, 60], "K": [8, 11], "R": null, "K'": [[15, 23], [18, 31]], "V'": [[12, 19], [13, 21]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [87, 89], "Q": [121, 125], "K": [91, 95], "R": null, "K'": [[74, 83], [78, 86]], "V'": [[71, 79], [72, 81]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura likes Lund Municipality. Jason likes Club Aurora. Dorothy likes Taronga Western Plains Zoo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lund Municipality is Laura? Answer: Yes\n Premise: < James likes Zwiefalten. Ronald likes CFMJ. Karen likes Ghatanji. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is Ronald? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [5, 6], "Q": [57, 60], "K": [8, 11], "R": null, "K'": [[15, 23], [18, 31]], "V'": [[12, 19], [13, 21]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [87, 89], "Q": [121, 125], "K": [91, 95], "R": null, "K'": [[74, 83], [78, 86]], "V'": [[71, 79], [72, 81]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Jemappes. Richard likes Battle of Montereau. Paul likes Waurn Ponds. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Jemappes is Paul? Answer: No\n Premise: < Mary likes Didymoteicho. Richard likes Lahti. Michael likes CNH Industrial. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Didymoteicho is Mary? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [5, 8], "Q": [57, 61], "K": [10, 14], "R": null, "K'": [[18, 27], [23, 31]], "V'": [[15, 24], [16, 25]], "example": [1, 67]}, {"END": [131, 132], "A": [128, 129], "V": [72, 73], "Q": [122, 127], "K": [75, 80], "R": null, "K'": [[84, 91], [87, 96]], "V'": [[81, 88], [82, 89]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Jemappes. Richard likes Battle of Montereau. Paul likes Waurn Ponds. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Jemappes is Paul? Answer: No\n Premise: < Mary likes Didymoteicho. Richard likes Lahti. Michael likes CNH Industrial. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Didymoteicho is Richard? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [5, 8], "Q": [57, 61], "K": [10, 14], "R": null, "K'": [[18, 27], [23, 31]], "V'": [[15, 24], [16, 25]], "example": [1, 67]}, {"END": [131, 132], "A": [128, 129], "V": [72, 73], "Q": [122, 127], "K": [75, 80], "R": null, "K'": [[84, 91], [87, 96]], "V'": [[81, 88], [82, 89]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Umarex. Deborah likes National Congress of Brasil. John likes Haut Atlas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Umarex is Margaret? Answer: Yes\n Premise: < Patricia likes Eibenstock. Edward likes Astrid Lindgren Memorial Award. Jeff likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shoranur is Jeff? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [5, 6], "Q": [53, 56], "K": [8, 11], "R": null, "K'": [[17, 25], [21, 27]], "V'": [[12, 22], [15, 23]], "example": [1, 62]}, {"END": [128, 129], "A": [125, 126], "V": [87, 88], "Q": [120, 124], "K": [90, 94], "R": null, "K'": [[72, 79], [75, 86]], "V'": [[67, 76], [70, 77]], "example": [63, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Umarex. Deborah likes National Congress of Brasil. John likes Haut Atlas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Umarex is Margaret? Answer: Yes\n Premise: < Patricia likes Eibenstock. Edward likes Astrid Lindgren Memorial Award. Jeff likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shoranur is Edward? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [5, 6], "Q": [53, 56], "K": [8, 11], "R": null, "K'": [[17, 25], [21, 27]], "V'": [[12, 22], [15, 23]], "example": [1, 62]}, {"END": [128, 129], "A": [125, 126], "V": [87, 88], "Q": [120, 124], "K": [90, 94], "R": null, "K'": [[72, 79], [75, 86]], "V'": [[67, 76], [70, 77]], "example": [63, 130]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Richard. Bilecik Province attracts Kevin. >. So who wants to go to Bilecik Province? Kevin\n < Selbu attracts Sandra. Autonomous District Lok Sabha constituency attracts Kevin. Foundation for a Free Information Infrastructure attracts Elizabeth. >. So who wants to go to Foundation for a Free Information Infrastructure? Elizabeth\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [28, 29], "Q": [38, 43], "K": [21, 26], "R": null, "K'": [[2, 13], [8, 17]], "V'": [[10, 19], [12, 20]], "example": [1, 45]}, {"END": [95, 96], "A": [96, 97], "V": [77, 78], "Q": [87, 95], "K": [67, 75], "R": null, "K'": [[47, 54], [49, 63]], "V'": [[51, 65], [53, 66]], "example": [46, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Lake Caliraya attracts Jeff. Abbey of Echternach attracts Donald. Chartered Professional Accountant attracts Sarah. >. So who wants to go to Lake Caliraya? Jeff\n < Annweiler am Trifels attracts Ronald. Electoral district of Wantirna attracts Susan. Mediolanum Forum attracts Dorothy. >. So who wants to go to Electoral district of Wantirna? Susan\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [9, 10], "Q": [39, 44], "K": [2, 7], "R": null, "K'": [[11, 22], [18, 27]], "V'": [[20, 29], [21, 30]], "example": [1, 46]}, {"END": [97, 98], "A": [98, 99], "V": [70, 71], "Q": [89, 97], "K": [60, 68], "R": null, "K'": [[48, 72], [55, 76]], "V'": [[57, 78], [59, 80]], "example": [47, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Abu Ghosh attracts Steven. Trento attracts Brian. Taksim Military Barracks attracts Ruth. >. So who wants to go to Trento? Brian\n < Hellenic Police attracts William. Hultsfred Municipality attracts Kimberly. Wakefield Park attracts Barbara. >. So who wants to go to Wakefield Park? Barbara\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [14, 15], "Q": [34, 36], "K": [10, 12], "R": null, "K'": [[2, 16], [6, 22]], "V'": [[8, 24], [9, 25]], "example": [1, 38]}, {"END": [80, 81], "A": [81, 82], "V": [66, 67], "Q": [76, 80], "K": [60, 64], "R": null, "K'": [[40, 48], [44, 54]], "V'": [[46, 56], [47, 59]], "example": [39, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Jafara attracts Betty. Thuringian Highland attracts Margaret. Gavork-e Nalin Rural District attracts Mary. >. So who wants to go to Thuringian Highland? Margaret\n < Western Bug attracts Kenneth. Pilis Mountains attracts Donna. Ichchapuram attracts Brian. >. So who wants to go to Ichchapuram? Brian\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [16, 17], "Q": [40, 45], "K": [9, 14], "R": null, "K'": [[2, 18], [5, 28]], "V'": [[7, 30], [8, 31]], "example": [1, 47]}, {"END": [85, 86], "A": [86, 87], "V": [70, 71], "Q": [80, 85], "K": [63, 68], "R": null, "K'": [[49, 55], [51, 58]], "V'": [[53, 60], [54, 62]], "example": [48, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< New Era University attracts Carol. Dawa River attracts Donna. Zwiefalten attracts Joseph. >. So who wants to go to New Era University? Carol\n < Soalala attracts Michelle. Central Black Forest attracts Helen. Toronto Police Service attracts Joseph. >. So who wants to go to Soalala? Michelle\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [7, 8], "Q": [33, 36], "K": [2, 5], "R": null, "K'": [[9, 17], [12, 21]], "V'": [[14, 23], [16, 24]], "example": [1, 38]}, {"END": [73, 74], "A": [74, 76], "V": [45, 47], "Q": [70, 73], "K": [40, 43], "R": null, "K'": [[48, 55], [51, 58]], "V'": [[53, 60], [54, 61]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< 1960 Summer Olympics attracts David. Bobolice attracts Carol. Manila Light Rail Transit System attracts Maria. >. So who wants to go to Bobolice? Carol\n < Calw attracts Ronald. Bad Camberg attracts Ruth. Gavork-e Nalin Rural District attracts Anthony. >. So who wants to go to Calw? Ronald\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [18, 19], "Q": [39, 42], "K": [13, 16], "R": null, "K'": [[3, 20], [9, 27]], "V'": [[11, 29], [12, 30]], "example": [1, 44]}, {"END": [84, 85], "A": [85, 87], "V": [50, 52], "Q": [82, 84], "K": [46, 48], "R": null, "K'": [[53, 60], [56, 70]], "V'": [[58, 72], [59, 73]], "example": [45, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Buchans attracts Michael. Castrovirreyna District attracts Sandra. Nuri attracts Daniel. >. So who wants to go to Castrovirreyna District? Sandra\n < 2004 Indian Ocean earthquake attracts Kevin. Boinpalle mandal attracts Ronald. Alpokalja attracts Elizabeth. >. So who wants to go to Alpokalja? Elizabeth\n", "ranges": [{"END": [37, 38], "A": [38, 40], "V": [15, 17], "Q": [32, 37], "K": [8, 13], "R": null, "K'": [[2, 18], [4, 20]], "V'": [[6, 22], [7, 23]], "example": [1, 40]}, {"END": [87, 88], "A": [88, 89], "V": [73, 74], "Q": [83, 87], "K": [67, 71], "R": null, "K'": [[43, 56], [52, 62]], "V'": [[54, 64], [55, 66]], "example": [41, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Jemappes attracts Patricia. Battle of Montereau attracts Richard. Waurn Ponds attracts Paul. >. So who wants to go to Jemappes? Patricia\n < Welschnofen attracts Mary. Aucanquilcha attracts Richard. Wanne-Eickel Central Station attracts Michael. >. So who wants to go to Welschnofen? Mary\n", "ranges": [{"END": [41, 42], "A": [42, 45], "V": [8, 11], "Q": [37, 41], "K": [2, 6], "R": null, "K'": [[12, 21], [17, 25]], "V'": [[19, 27], [20, 28]], "example": [1, 45]}, {"END": [89, 90], "A": [90, 91], "V": [53, 54], "Q": [85, 89], "K": [47, 51], "R": null, "K'": [[55, 65], [61, 73]], "V'": [[63, 75], [64, 76]], "example": [46, 91]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Richard. Bilecik Province attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is Sharon? Answer: No\n Premise: < Al-Hasakah Governorate attracts Sandra. Selbu attracts Kevin. Koriya district attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is Elizabeth? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [31, 32], "Q": [58, 63], "K": [24, 29], "R": null, "K'": [[5, 16], [11, 20]], "V'": [[13, 22], [15, 23]], "example": [1, 70]}, {"END": [134, 135], "A": [131, 132], "V": [99, 100], "Q": [126, 130], "K": [93, 97], "R": null, "K'": [[75, 87], [82, 89]], "V'": [[84, 91], [86, 92]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Richard. Bilecik Province attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is Sharon? Answer: No\n Premise: < Al-Hasakah Governorate attracts Sandra. Selbu attracts Kevin. Koriya district attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is Kevin? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [31, 32], "Q": [58, 63], "K": [24, 29], "R": null, "K'": [[5, 16], [11, 20]], "V'": [[13, 22], [15, 23]], "example": [1, 70]}, {"END": [134, 135], "A": [131, 132], "V": [99, 100], "Q": [126, 130], "K": [93, 97], "R": null, "K'": [[75, 87], [82, 89]], "V'": [[84, 91], [86, 92]], "example": [71, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < regiopolis attracts Christopher. Beckingen attracts Linda. Adare Manor attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is Christopher? Answer: Yes\n Premise: < Kowsar County attracts Deborah. DESTATIS attracts Kevin. Kibungo Province attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kowsar County is Deborah? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [11, 12], "Q": [53, 57], "K": [5, 9], "R": null, "K'": [[13, 20], [15, 24]], "V'": [[17, 26], [19, 27]], "example": [1, 63]}, {"END": [129, 130], "A": [124, 127], "V": [74, 77], "Q": [119, 123], "K": [68, 72], "R": null, "K'": [[78, 85], [81, 90]], "V'": [[83, 92], [84, 93]], "example": [64, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < regiopolis attracts Christopher. Beckingen attracts Linda. Adare Manor attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is Christopher? Answer: Yes\n Premise: < Kowsar County attracts Deborah. DESTATIS attracts Kevin. Kibungo Province attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kowsar County is John? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [11, 12], "Q": [53, 57], "K": [5, 9], "R": null, "K'": [[13, 20], [15, 24]], "V'": [[17, 26], [19, 27]], "example": [1, 63]}, {"END": [127, 128], "A": [124, 125], "V": [74, 77], "Q": [119, 123], "K": [68, 72], "R": null, "K'": [[78, 85], [81, 90]], "V'": [[83, 92], [84, 93]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sarnaki attracts Mary. Taksim Military Barracks attracts Edward. Cunter attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Cunter is Mary? Answer: No\n Premise: < Hispaniola attracts Susan. Albertis Castle attracts Steven. Veyrier attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hispaniola is Susan? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [26, 27], "Q": [53, 55], "K": [22, 24], "R": null, "K'": [[5, 12], [8, 18]], "V'": [[10, 20], [11, 21]], "example": [1, 61]}, {"END": [121, 122], "A": [118, 119], "V": [72, 73], "Q": [113, 117], "K": [66, 70], "R": null, "K'": [[74, 81], [77, 84]], "V'": [[79, 86], [80, 87]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sarnaki attracts Mary. Taksim Military Barracks attracts Edward. Cunter attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Cunter is Mary? Answer: No\n Premise: < Hispaniola attracts Susan. Albertis Castle attracts Steven. Veyrier attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hispaniola is Steven? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [26, 27], "Q": [53, 55], "K": [22, 24], "R": null, "K'": [[5, 12], [8, 18]], "V'": [[10, 20], [11, 21]], "example": [1, 61]}, {"END": [121, 122], "A": [118, 119], "V": [72, 73], "Q": [113, 117], "K": [66, 70], "R": null, "K'": [[74, 81], [77, 84]], "V'": [[79, 86], [80, 87]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Western Bug attracts Kenneth. Pilis Mountains attracts Donna. St Lucia attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to St Lucia is Kenneth? Answer: No\n Premise: < Rock al Parque attracts Sarah. Gmina Konarzyny attracts Jeff. Larsmo attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Gmina Konarzyny is Jeff? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [24, 25], "Q": [51, 54], "K": [19, 22], "R": null, "K'": [[5, 11], [7, 14]], "V'": [[9, 16], [10, 18]], "example": [1, 60]}, {"END": [126, 127], "A": [123, 124], "V": [81, 82], "Q": [116, 122], "K": [73, 79], "R": null, "K'": [[65, 83], [69, 85]], "V'": [[71, 87], [72, 90]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Western Bug attracts Kenneth. Pilis Mountains attracts Donna. St Lucia attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to St Lucia is Kenneth? Answer: No\n Premise: < Rock al Parque attracts Sarah. Gmina Konarzyny attracts Jeff. Larsmo attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Gmina Konarzyny is Patricia? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [24, 25], "Q": [51, 54], "K": [19, 22], "R": null, "K'": [[5, 11], [7, 14]], "V'": [[9, 16], [10, 18]], "example": [1, 60]}, {"END": [128, 129], "A": [123, 126], "V": [81, 82], "Q": [116, 122], "K": [73, 79], "R": null, "K'": [[65, 83], [69, 85]], "V'": [[71, 87], [72, 90]], "example": [61, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sabratha attracts Jason. Ticho House attracts Nancy. Pinosava attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ticho House is Nancy? Answer: Yes\n Premise: < Mbale District attracts Jason. bpost attracts George. Shablykinsky District attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mbale District is Jason? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [19, 20], "Q": [53, 57], "K": [13, 17], "R": null, "K'": [[5, 21], [9, 24]], "V'": [[11, 26], [12, 27]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [74, 75], "Q": [116, 120], "K": [68, 72], "R": null, "K'": [[76, 82], [78, 87]], "V'": [[80, 89], [81, 90]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sabratha attracts Jason. Ticho House attracts Nancy. Pinosava attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ticho House is Nancy? Answer: Yes\n Premise: < Mbale District attracts Jason. bpost attracts George. Shablykinsky District attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mbale District is George? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [19, 20], "Q": [53, 57], "K": [13, 17], "R": null, "K'": [[5, 21], [9, 24]], "V'": [[11, 26], [12, 27]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [74, 75], "Q": [116, 120], "K": [68, 72], "R": null, "K'": [[76, 82], [78, 87]], "V'": [[80, 89], [81, 90]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lund Municipality attracts Laura. Club Aurora attracts Jason. Taronga Western Plains Zoo attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lund Municipality is Laura? Answer: Yes\n Premise: < Zwiefalten attracts James. CFMJ attracts Ronald. Ghatanji attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is Karen? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [10, 11], "Q": [57, 60], "K": [5, 8], "R": null, "K'": [[12, 19], [15, 27]], "V'": [[17, 29], [18, 31]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [93, 95], "Q": [121, 125], "K": [87, 91], "R": null, "K'": [[71, 79], [75, 82]], "V'": [[77, 84], [78, 86]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lund Municipality attracts Laura. Club Aurora attracts Jason. Taronga Western Plains Zoo attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lund Municipality is Laura? Answer: Yes\n Premise: < Zwiefalten attracts James. CFMJ attracts Ronald. Ghatanji attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is Ronald? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [10, 11], "Q": [57, 60], "K": [5, 8], "R": null, "K'": [[12, 19], [15, 27]], "V'": [[17, 29], [18, 31]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [93, 95], "Q": [121, 125], "K": [87, 91], "R": null, "K'": [[71, 79], [75, 82]], "V'": [[77, 84], [78, 86]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Jemappes attracts Patricia. Battle of Montereau attracts Richard. Waurn Ponds attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Jemappes is Paul? Answer: No\n Premise: < Didymoteicho attracts Mary. Lahti attracts Richard. CNH Industrial attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Didymoteicho is Mary? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [11, 14], "Q": [57, 61], "K": [5, 9], "R": null, "K'": [[15, 24], [20, 28]], "V'": [[22, 30], [23, 31]], "example": [1, 67]}, {"END": [131, 132], "A": [128, 129], "V": [79, 80], "Q": [122, 127], "K": [72, 77], "R": null, "K'": [[81, 88], [84, 93]], "V'": [[86, 95], [87, 96]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Jemappes attracts Patricia. Battle of Montereau attracts Richard. Waurn Ponds attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Jemappes is Paul? Answer: No\n Premise: < Didymoteicho attracts Mary. Lahti attracts Richard. CNH Industrial attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Didymoteicho is Richard? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [11, 14], "Q": [57, 61], "K": [5, 9], "R": null, "K'": [[15, 24], [20, 28]], "V'": [[22, 30], [23, 31]], "example": [1, 67]}, {"END": [131, 132], "A": [128, 129], "V": [79, 80], "Q": [122, 127], "K": [72, 77], "R": null, "K'": [[81, 88], [84, 93]], "V'": [[86, 95], [87, 96]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Umarex attracts Margaret. National Congress of Brasil attracts Deborah. Haut Atlas attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Umarex is Margaret? Answer: Yes\n Premise: < Eibenstock attracts Patricia. Astrid Lindgren Memorial Award attracts Edward. Shoranur attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shoranur is Jeff? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [10, 11], "Q": [53, 56], "K": [5, 8], "R": null, "K'": [[12, 22], [16, 24]], "V'": [[18, 26], [21, 27]], "example": [1, 62]}, {"END": [128, 129], "A": [125, 126], "V": [93, 94], "Q": [120, 124], "K": [87, 91], "R": null, "K'": [[67, 76], [70, 83]], "V'": [[72, 85], [75, 86]], "example": [63, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Umarex attracts Margaret. National Congress of Brasil attracts Deborah. Haut Atlas attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Umarex is Margaret? Answer: Yes\n Premise: < Eibenstock attracts Patricia. Astrid Lindgren Memorial Award attracts Edward. Shoranur attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Shoranur is Edward? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [10, 11], "Q": [53, 56], "K": [5, 8], "R": null, "K'": [[12, 22], [16, 24]], "V'": [[18, 26], [21, 27]], "example": [1, 62]}, {"END": [128, 129], "A": [125, 126], "V": [93, 94], "Q": [120, 124], "K": [87, 91], "R": null, "K'": [[67, 76], [70, 83]], "V'": [[72, 85], [75, 86]], "example": [63, 130]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Central Black Forest. Kevin likes Bilecik Province. Kenneth likes Bilecik Province. >. The one who wants to go to Bilecik Province is not Mark\n < Kevin likes Calw. Paul likes Komarichsky District. Susan likes Komarichsky District. >. The one who wants to go to Komarichsky District is not Kevin\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [2, 3], "Q": [36, 41], "K'": [5, 8], "R": [42, 43], "K": [[12, 21], [17, 26]], "V": [[9, 18], [10, 19]], "example": [1, 44]}, {"END": [85, 86], "A'": [86, 87], "V'": [46, 47], "Q": [79, 84], "K'": [49, 51], "R": [85, 86], "K": [[55, 64], [60, 69]], "V": [[52, 61], [53, 62]], "example": [45, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donald likes Presbyterian High School. Anthony likes Nagoya University. Deborah likes Presbyterian High School. >. The one who wants to go to Presbyterian High School is not Anthony\n < Christopher likes Hamilton Mountain. Linda likes Castleisland Desmonds GAA. Kenneth likes Castleisland Desmonds GAA. >. The one who wants to go to Castleisland Desmonds GAA is not Christopher\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [12, 13], "Q": [41, 47], "K'": [15, 19], "R": [48, 49], "K": [[5, 25], [11, 31]], "V": [[2, 20], [3, 23]], "example": [1, 50]}, {"END": [101, 102], "A'": [102, 103], "V'": [52, 53], "Q": [92, 100], "K'": [55, 57], "R": [101, 102], "K": [[62, 74], [70, 82]], "V": [[58, 71], [60, 72]], "example": [51, 103]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth likes Holycross-Ballycahill GAA. Michael likes Holycross-Ballycahill GAA. Ronald likes Ayn Halaqim Subdistrict. >. The one who wants to go to Holycross-Ballycahill GAA is not Ronald\n < Jeff likes Trento. Brian likes Olten railway station. Donald likes Trento. >. The one who wants to go to Trento is not Brian\n", "ranges": [{"END": [67, 68], "A'": [68, 70], "V'": [32, 34], "Q": [55, 66], "K'": [36, 45], "R": [67, 68], "K": [[5, 20], [16, 31]], "V": [[2, 17], [3, 18]], "example": [1, 70]}, {"END": [104, 105], "A'": [105, 106], "V'": [78, 79], "Q": [101, 103], "K'": [81, 85], "R": [104, 105], "K": [[75, 89], [77, 91]], "V": [[72, 86], [73, 87]], "example": [71, 106]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mary likes E.ON Sverige. Edward likes E.ON Sverige. Robert likes Capoeira. >. The one who wants to go to E.ON Sverige is not Robert\n < Ronald likes Hamilton Mountain. Karen likes Komarichsky District. Dorothy likes Komarichsky District. >. The one who wants to go to Komarichsky District is not Ronald\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [18, 19], "Q": [34, 38], "K'": [21, 24], "R": [39, 40], "K": [[5, 13], [9, 17]], "V": [[2, 10], [3, 11]], "example": [1, 41]}, {"END": [85, 86], "A'": [86, 88], "V'": [43, 45], "Q": [79, 84], "K'": [47, 49], "R": [85, 86], "K": [[54, 64], [59, 69]], "V": [[50, 60], [52, 62]], "example": [42, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes Trans-Sahara Highway. Michael likes Avord. Sharon likes Trans-Sahara Highway. >. The one who wants to go to Trans-Sahara Highway is not Michael\n < Daniel likes Chaville. Sharon likes Rio Quente. Anthony likes Chaville. >. The one who wants to go to Chaville is not Sharon\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [12, 13], "Q": [38, 44], "K'": [15, 17], "R": [45, 46], "K": [[5, 22], [11, 28]], "V": [[2, 18], [3, 20]], "example": [1, 47]}, {"END": [84, 85], "A'": [85, 87], "V'": [56, 58], "Q": [80, 83], "K'": [60, 63], "R": [84, 85], "K": [[52, 67], [55, 70]], "V": [[49, 64], [50, 65]], "example": [48, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda likes Atromitos Piraeus F.C. Kimberly likes Persegres Gresik United. Helen likes Persegres Gresik United. >. The one who wants to go to Persegres Gresik United is not Linda\n < Michelle likes Cork GAA. Helen likes Central Black Forest. Joseph likes Central Black Forest. >. The one who wants to go to Central Black Forest is not Michelle\n", "ranges": [{"END": [57, 58], "A'": [58, 60], "V'": [2, 4], "Q": [49, 56], "K'": [6, 15], "R": [57, 58], "K": [[21, 32], [28, 39]], "V": [[16, 29], [19, 30]], "example": [1, 60]}, {"END": [98, 99], "A'": [99, 101], "V'": [62, 64], "Q": [94, 97], "K'": [66, 70], "R": [98, 99], "K": [[74, 81], [77, 84]], "V": [[71, 78], [72, 79]], "example": [61, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna likes Bobolice. Sharon likes Hyderabad Deccan railway station. Laura likes Bobolice. >. The one who wants to go to Bobolice is not Sharon\n < Michael likes Nagoya University. Joseph likes Central Black Forest. Karen likes Central Black Forest. >. The one who wants to go to Central Black Forest is not Michael\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [10, 12], "Q": [39, 42], "K'": [14, 22], "R": [43, 44], "K": [[6, 26], [9, 29]], "V": [[2, 23], [4, 24]], "example": [1, 46]}, {"END": [84, 85], "A'": [85, 86], "V'": [48, 49], "Q": [80, 83], "K'": [51, 55], "R": [84, 85], "K": [[59, 67], [62, 70]], "V": [[56, 63], [57, 65]], "example": [47, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Joseph likes Erbil SC. Patricia likes Cayeux-sur-Mer. Laura likes Erbil SC. >. The one who wants to go to Erbil SC is not Patricia\n < Sandra likes Nuri. Donna likes Nuri. Margaret likes Buchans. >. The one who wants to go to Nuri is not Margaret\n", "ranges": [{"END": [42, 43], "A'": [43, 46], "V'": [9, 12], "Q": [38, 41], "K'": [14, 21], "R": [42, 43], "K": [[5, 25], [8, 28]], "V": [[2, 22], [3, 23]], "example": [1, 46]}, {"END": [80, 81], "A'": [81, 82], "V'": [62, 63], "Q": [77, 79], "K'": [65, 67], "R": [80, 81], "K": [[52, 59], [54, 61]], "V": [[48, 55], [50, 57]], "example": [47, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Central Black Forest. Kevin likes Bilecik Province. Kenneth likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Mark? Answer: Yes\n Premise: < Nancy likes Saint-Jacques-de-la-Lande. Paul likes Arsk. Susan likes Arsk. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not Nancy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [5, 6], "Q": [55, 60], "K'": [8, 11], "R": [61, 62], "K": [[15, 24], [20, 29]], "V": [[12, 21], [13, 22]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [72, 73], "Q": [124, 126], "K'": [75, 86], "R": [127, 128], "K": [[90, 96], [92, 98]], "V": [[87, 93], [88, 94]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Central Black Forest. Kevin likes Bilecik Province. Kenneth likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Mark? Answer: Yes\n Premise: < Nancy likes Saint-Jacques-de-la-Lande. Paul likes Arsk. Susan likes Arsk. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not Paul? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [5, 6], "Q": [55, 60], "K'": [8, 11], "R": [61, 62], "K": [[15, 24], [20, 29]], "V": [[12, 21], [13, 22]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [72, 73], "Q": [124, 126], "K'": [75, 86], "R": [127, 128], "K": [[90, 96], [92, 98]], "V": [[87, 93], [88, 94]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Yadagirigutta Temple. Mary likes Lake Caliraya. Daniel likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lake Caliraya is not Richard? Answer: Yes\n Premise: < Susan likes Aucanquilcha. Jeff likes Tinapa Resort. Edward likes Aucanquilcha. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Aucanquilcha is not Jeff? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [5, 6], "Q": [60, 65], "K'": [8, 16], "R": [66, 67], "K": [[20, 29], [25, 34]], "V": [[17, 26], [18, 27]], "example": [1, 72]}, {"END": [142, 143], "A'": [139, 140], "V'": [87, 88], "Q": [131, 137], "K'": [90, 95], "R": [138, 139], "K": [[80, 99], [86, 105]], "V": [[77, 96], [78, 97]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Yadagirigutta Temple. Mary likes Lake Caliraya. Daniel likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lake Caliraya is not Richard? Answer: Yes\n Premise: < Susan likes Aucanquilcha. Jeff likes Tinapa Resort. Edward likes Aucanquilcha. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Aucanquilcha is not Susan? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [5, 6], "Q": [60, 65], "K'": [8, 16], "R": [66, 67], "K": [[20, 29], [25, 34]], "V": [[17, 26], [18, 27]], "example": [1, 72]}, {"END": [142, 143], "A'": [139, 140], "V'": [87, 88], "Q": [131, 137], "K'": [90, 95], "R": [138, 139], "K": [[80, 99], [86, 105]], "V": [[77, 96], [78, 97]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Trento. Brian likes Olten railway station. Donald likes Trento. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Trento is not Jeff? Answer: No\n Premise: < Mark likes Wakefield Park. Margaret likes Wakefield Park. Michelle likes Erbil SC. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Wakefield Park is not Michelle? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [11, 12], "Q": [50, 52], "K'": [14, 18], "R": [53, 54], "K": [[8, 22], [10, 24]], "V": [[5, 19], [6, 20]], "example": [1, 59]}, {"END": [123, 124], "A'": [119, 121], "V'": [80, 82], "Q": [113, 117], "K'": [84, 87], "R": [118, 119], "K": [[67, 75], [71, 79]], "V": [[64, 72], [65, 73]], "example": [60, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff likes Trento. Brian likes Olten railway station. Donald likes Trento. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Trento is not Jeff? Answer: No\n Premise: < Mark likes Wakefield Park. Margaret likes Wakefield Park. Michelle likes Erbil SC. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Wakefield Park is not Mark? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [11, 12], "Q": [50, 52], "K'": [14, 18], "R": [53, 54], "K": [[8, 22], [10, 24]], "V": [[5, 19], [6, 20]], "example": [1, 59]}, {"END": [122, 123], "A'": [119, 120], "V'": [80, 82], "Q": [113, 117], "K'": [84, 87], "R": [118, 119], "K": [[67, 75], [71, 79]], "V": [[64, 72], [65, 73]], "example": [60, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Mirbag-e Shomali Rural District. Margaret likes Alcanena Municipality. Mary likes Mirbag-e Shomali Rural District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mirbag-e Shomali Rural District is not Margaret? Answer: Yes\n Premise: < Mary likes Bhamdoun. Karen likes Bhamdoun. Helen likes Lipscani. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not Helen? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [19, 20], "Q": [67, 77], "K'": [22, 27], "R": [78, 79], "K": [[8, 31], [18, 41]], "V": [[5, 28], [6, 29]], "example": [1, 84]}, {"END": [148, 149], "A'": [145, 146], "V'": [106, 107], "Q": [139, 143], "K'": [109, 113], "R": [144, 145], "K": [[92, 101], [96, 105]], "V": [[89, 97], [90, 99]], "example": [85, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Mirbag-e Shomali Rural District. Margaret likes Alcanena Municipality. Mary likes Mirbag-e Shomali Rural District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mirbag-e Shomali Rural District is not Margaret? Answer: Yes\n Premise: < Mary likes Bhamdoun. Karen likes Bhamdoun. Helen likes Lipscani. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not Mary? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [19, 20], "Q": [67, 77], "K'": [22, 27], "R": [78, 79], "K": [[8, 31], [18, 41]], "V": [[5, 28], [6, 29]], "example": [1, 84]}, {"END": [148, 149], "A'": [145, 146], "V'": [106, 107], "Q": [139, 143], "K'": [109, 113], "R": [144, 145], "K": [[92, 101], [96, 105]], "V": [[89, 97], [90, 99]], "example": [85, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Piedecuesta. Ronald likes VR warehouses. Sarah likes Piedecuesta. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is not Ronald? Answer: Yes\n Premise: < Edward likes Peremyshliany. Deborah likes Electoral district of Wantirna. Daniel likes Peremyshliany. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Peremyshliany is not Deborah? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [14, 16], "Q": [59, 64], "K'": [18, 24], "R": [65, 66], "K": [[8, 28], [13, 33]], "V": [[5, 25], [6, 26]], "example": [1, 72]}, {"END": [146, 147], "A'": [141, 144], "V'": [86, 89], "Q": [134, 139], "K'": [91, 99], "R": [140, 141], "K": [[80, 103], [85, 108]], "V": [[77, 100], [78, 101]], "example": [73, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Piedecuesta. Ronald likes VR warehouses. Sarah likes Piedecuesta. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is not Ronald? Answer: Yes\n Premise: < Edward likes Peremyshliany. Deborah likes Electoral district of Wantirna. Daniel likes Peremyshliany. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Peremyshliany is not Daniel? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [14, 16], "Q": [59, 64], "K'": [18, 24], "R": [65, 66], "K": [[8, 28], [13, 33]], "V": [[5, 25], [6, 26]], "example": [1, 72]}, {"END": [144, 145], "A'": [141, 142], "V'": [86, 89], "Q": [134, 139], "K'": [91, 99], "R": [140, 141], "K": [[80, 103], [85, 108]], "V": [[77, 100], [78, 101]], "example": [73, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Bilecik Province. Anthony likes Dent Island Light. Deborah likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Charles? Answer: No\n Premise: < John likes Croom, County Limerick. Michael likes Art Gallery of Ontario. Helen likes Croom, County Limerick. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Croom, County Limerick is not Michael? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [14, 15], "Q": [58, 63], "K'": [17, 21], "R": [64, 65], "K": [[8, 27], [13, 32]], "V": [[5, 22], [6, 25]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [86, 87], "Q": [130, 137], "K'": [89, 93], "R": [138, 139], "K": [[78, 97], [85, 104]], "V": [[75, 94], [76, 95]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Bilecik Province. Anthony likes Dent Island Light. Deborah likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Charles? Answer: No\n Premise: < John likes Croom, County Limerick. Michael likes Art Gallery of Ontario. Helen likes Croom, County Limerick. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Croom, County Limerick is not John? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [14, 15], "Q": [58, 63], "K'": [17, 21], "R": [64, 65], "K": [[8, 27], [13, 32]], "V": [[5, 22], [6, 25]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [86, 87], "Q": [130, 137], "K'": [89, 93], "R": [138, 139], "K": [[78, 97], [85, 104]], "V": [[75, 94], [76, 95]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Minamishitara District, Aichi. Jason likes Sabburah Subdistrict. Elizabeth likes Sabburah Subdistrict. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sabburah Subdistrict is not Sharon? Answer: Yes\n Premise: < Carol likes Ghatanji. David likes Drumheller-Stettler. Michael likes Ghatanji. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is not David? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [5, 7], "Q": [64, 70], "K'": [9, 18], "R": [71, 72], "K": [[22, 32], [28, 38]], "V": [[19, 29], [20, 30]], "example": [1, 78]}, {"END": [145, 146], "A'": [142, 143], "V'": [91, 92], "Q": [136, 140], "K'": [94, 102], "R": [141, 142], "K": [[86, 106], [90, 110]], "V": [[83, 103], [84, 104]], "example": [79, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Minamishitara District, Aichi. Jason likes Sabburah Subdistrict. Elizabeth likes Sabburah Subdistrict. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sabburah Subdistrict is not Sharon? Answer: Yes\n Premise: < Carol likes Ghatanji. David likes Drumheller-Stettler. Michael likes Ghatanji. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is not Carol? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [5, 7], "Q": [64, 70], "K'": [9, 18], "R": [71, 72], "K": [[22, 32], [28, 38]], "V": [[19, 29], [20, 30]], "example": [1, 78]}, {"END": [145, 146], "A'": [142, 143], "V'": [91, 92], "Q": [136, 140], "K'": [94, 102], "R": [141, 142], "K": [[86, 106], [90, 110]], "V": [[83, 103], [84, 104]], "example": [79, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven likes Cork GAA. Karen likes Panagarh. Helen likes Panagarh. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Panagarh is not Steven? Answer: Yes\n Premise: < Patricia likes Hersbruck. Lisa likes Hersbruck. Donald likes Lambunao. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is not Donald? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [5, 6], "Q": [53, 56], "K'": [8, 12], "R": [57, 58], "K": [[17, 24], [20, 27]], "V": [[13, 21], [15, 22]], "example": [1, 63]}, {"END": [127, 128], "A'": [124, 125], "V'": [86, 87], "Q": [118, 122], "K'": [89, 92], "R": [123, 124], "K": [[73, 81], [77, 85]], "V": [[68, 78], [71, 79]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven likes Cork GAA. Karen likes Panagarh. Helen likes Panagarh. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Panagarh is not Steven? Answer: Yes\n Premise: < Patricia likes Hersbruck. Lisa likes Hersbruck. Donald likes Lambunao. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is not Lisa? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [5, 6], "Q": [53, 56], "K'": [8, 12], "R": [57, 58], "K": [[17, 24], [20, 27]], "V": [[13, 21], [15, 22]], "example": [1, 63]}, {"END": [127, 128], "A'": [124, 125], "V'": [86, 87], "Q": [118, 122], "K'": [89, 92], "R": [123, 124], "K": [[73, 81], [77, 85]], "V": [[68, 78], [71, 79]], "example": [64, 129]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Central Black Forest attracts Mark. Bilecik Province attracts Kevin. Bilecik Province attracts Kenneth. >. The one who wants to go to Bilecik Province is not Mark\n < Calw attracts Kevin. Komarichsky District attracts Paul. Komarichsky District attracts Susan. >. The one who wants to go to Komarichsky District is not Kevin\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [7, 8], "Q": [36, 41], "K'": [2, 5], "R": [42, 43], "K": [[9, 18], [14, 23]], "V": [[16, 25], [17, 26]], "example": [1, 44]}, {"END": [85, 86], "A'": [86, 87], "V'": [50, 51], "Q": [79, 84], "K'": [46, 48], "R": [85, 86], "K": [[52, 61], [57, 66]], "V": [[59, 68], [60, 69]], "example": [45, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Presbyterian High School attracts Donald. Nagoya University attracts Anthony. Presbyterian High School attracts Deborah. >. The one who wants to go to Presbyterian High School is not Anthony\n < Hamilton Mountain attracts Christopher. Castleisland Desmonds GAA attracts Linda. Castleisland Desmonds GAA attracts Kenneth. >. The one who wants to go to Castleisland Desmonds GAA is not Christopher\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [18, 19], "Q": [41, 47], "K'": [12, 16], "R": [48, 49], "K": [[2, 20], [8, 26]], "V": [[10, 28], [11, 31]], "example": [1, 50]}, {"END": [101, 102], "A'": [102, 103], "V'": [56, 57], "Q": [92, 100], "K'": [52, 54], "R": [101, 102], "K": [[58, 71], [66, 79]], "V": [[68, 81], [70, 82]], "example": [51, 103]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Holycross-Ballycahill GAA attracts Ruth. Holycross-Ballycahill GAA attracts Michael. Ayn Halaqim Subdistrict attracts Ronald. >. The one who wants to go to Holycross-Ballycahill GAA is not Ronald\n < Trento attracts Jeff. Olten railway station attracts Brian. Trento attracts Donald. >. The one who wants to go to Trento is not Brian\n", "ranges": [{"END": [67, 68], "A'": [68, 70], "V'": [43, 45], "Q": [55, 66], "K'": [32, 41], "R": [67, 68], "K": [[2, 17], [13, 28]], "V": [[15, 30], [16, 31]], "example": [1, 70]}, {"END": [104, 105], "A'": [105, 106], "V'": [84, 85], "Q": [101, 103], "K'": [78, 82], "R": [104, 105], "K": [[72, 86], [74, 88]], "V": [[76, 90], [77, 91]], "example": [71, 106]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< E.ON Sverige attracts Mary. E.ON Sverige attracts Edward. Capoeira attracts Robert. >. The one who wants to go to E.ON Sverige is not Robert\n < Hamilton Mountain attracts Ronald. Komarichsky District attracts Karen. Komarichsky District attracts Dorothy. >. The one who wants to go to Komarichsky District is not Ronald\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [23, 24], "Q": [34, 38], "K'": [18, 21], "R": [39, 40], "K": [[2, 10], [6, 14]], "V": [[8, 16], [9, 17]], "example": [1, 41]}, {"END": [85, 86], "A'": [86, 88], "V'": [47, 49], "Q": [79, 84], "K'": [43, 45], "R": [85, 86], "K": [[50, 60], [55, 65]], "V": [[57, 67], [59, 69]], "example": [42, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Trans-Sahara Highway attracts Carol. Avord attracts Michael. Trans-Sahara Highway attracts Sharon. >. The one who wants to go to Trans-Sahara Highway is not Michael\n < Chaville attracts Daniel. Rio Quente attracts Sharon. Chaville attracts Anthony. >. The one who wants to go to Chaville is not Sharon\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [16, 17], "Q": [38, 44], "K'": [12, 14], "R": [45, 46], "K": [[2, 18], [8, 24]], "V": [[10, 26], [11, 28]], "example": [1, 47]}, {"END": [84, 85], "A'": [85, 87], "V'": [61, 63], "Q": [80, 83], "K'": [56, 59], "R": [84, 85], "K": [[49, 64], [52, 67]], "V": [[54, 69], [55, 70]], "example": [48, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Atromitos Piraeus F.C attracts Linda. Persegres Gresik United attracts Kimberly. Persegres Gresik United attracts Helen. >. The one who wants to go to Persegres Gresik United is not Linda\n < Cork GAA attracts Michelle. Central Black Forest attracts Helen. Central Black Forest attracts Joseph. >. The one who wants to go to Central Black Forest is not Michelle\n", "ranges": [{"END": [57, 58], "A'": [58, 60], "V'": [13, 15], "Q": [49, 56], "K'": [2, 11], "R": [57, 58], "K": [[16, 29], [23, 36]], "V": [[25, 38], [28, 39]], "example": [1, 60]}, {"END": [98, 99], "A'": [99, 101], "V'": [68, 70], "Q": [94, 97], "K'": [62, 66], "R": [98, 99], "K": [[71, 78], [74, 81]], "V": [[76, 83], [77, 84]], "example": [61, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Bobolice attracts Donna. Hyderabad Deccan railway station attracts Sharon. Bobolice attracts Laura. >. The one who wants to go to Bobolice is not Sharon\n < Nagoya University attracts Michael. Central Black Forest attracts Joseph. Central Black Forest attracts Karen. >. The one who wants to go to Central Black Forest is not Michael\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [20, 22], "Q": [39, 42], "K'": [10, 18], "R": [43, 44], "K": [[2, 23], [5, 26]], "V": [[7, 28], [9, 29]], "example": [1, 46]}, {"END": [84, 85], "A'": [85, 86], "V'": [54, 55], "Q": [80, 83], "K'": [48, 52], "R": [84, 85], "K": [[56, 63], [59, 66]], "V": [[61, 68], [62, 70]], "example": [47, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Erbil SC attracts Joseph. Cayeux-sur-Mer attracts Patricia. Erbil SC attracts Laura. >. The one who wants to go to Erbil SC is not Patricia\n < Nuri attracts Sandra. Nuri attracts Donna. Buchans attracts Margaret. >. The one who wants to go to Nuri is not Margaret\n", "ranges": [{"END": [42, 43], "A'": [43, 46], "V'": [18, 21], "Q": [38, 41], "K'": [9, 16], "R": [42, 43], "K": [[2, 22], [5, 25]], "V": [[7, 27], [8, 28]], "example": [1, 46]}, {"END": [80, 81], "A'": [81, 82], "V'": [66, 67], "Q": [77, 79], "K'": [62, 64], "R": [80, 81], "K": [[48, 55], [50, 57]], "V": [[52, 59], [54, 61]], "example": [47, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Mark. Bilecik Province attracts Kevin. Bilecik Province attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Mark? Answer: Yes\n Premise: < Saint-Jacques-de-la-Lande attracts Nancy. Arsk attracts Paul. Arsk attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not Nancy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [10, 11], "Q": [55, 60], "K'": [5, 8], "R": [61, 62], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 29]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [85, 86], "Q": [124, 126], "K'": [72, 83], "R": [127, 128], "K": [[87, 93], [89, 95]], "V": [[91, 97], [92, 98]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Mark. Bilecik Province attracts Kevin. Bilecik Province attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Mark? Answer: Yes\n Premise: < Saint-Jacques-de-la-Lande attracts Nancy. Arsk attracts Paul. Arsk attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not Paul? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [10, 11], "Q": [55, 60], "K'": [5, 8], "R": [61, 62], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 29]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [85, 86], "Q": [124, 126], "K'": [72, 83], "R": [127, 128], "K": [[87, 93], [89, 95]], "V": [[91, 97], [92, 98]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Yadagirigutta Temple attracts Richard. Lake Caliraya attracts Mary. Lake Caliraya attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lake Caliraya is not Richard? Answer: Yes\n Premise: < Aucanquilcha attracts Susan. Tinapa Resort attracts Jeff. Aucanquilcha attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Aucanquilcha is not Jeff? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [15, 16], "Q": [60, 65], "K'": [5, 13], "R": [66, 67], "K": [[17, 26], [22, 31]], "V": [[24, 33], [25, 34]], "example": [1, 72]}, {"END": [142, 143], "A'": [139, 140], "V'": [94, 95], "Q": [131, 137], "K'": [87, 92], "R": [138, 139], "K": [[77, 96], [83, 102]], "V": [[85, 104], [86, 105]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Yadagirigutta Temple attracts Richard. Lake Caliraya attracts Mary. Lake Caliraya attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lake Caliraya is not Richard? Answer: Yes\n Premise: < Aucanquilcha attracts Susan. Tinapa Resort attracts Jeff. Aucanquilcha attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Aucanquilcha is not Susan? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [15, 16], "Q": [60, 65], "K'": [5, 13], "R": [66, 67], "K": [[17, 26], [22, 31]], "V": [[24, 33], [25, 34]], "example": [1, 72]}, {"END": [142, 143], "A'": [139, 140], "V'": [94, 95], "Q": [131, 137], "K'": [87, 92], "R": [138, 139], "K": [[77, 96], [83, 102]], "V": [[85, 104], [86, 105]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Trento attracts Jeff. Olten railway station attracts Brian. Trento attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Trento is not Jeff? Answer: No\n Premise: < Wakefield Park attracts Mark. Wakefield Park attracts Margaret. Erbil SC attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Wakefield Park is not Michelle? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [17, 18], "Q": [50, 52], "K'": [11, 15], "R": [53, 54], "K": [[5, 19], [7, 21]], "V": [[9, 23], [10, 24]], "example": [1, 59]}, {"END": [123, 124], "A'": [119, 121], "V'": [85, 87], "Q": [113, 117], "K'": [80, 83], "R": [118, 119], "K": [[64, 72], [68, 76]], "V": [[70, 78], [71, 79]], "example": [60, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Trento attracts Jeff. Olten railway station attracts Brian. Trento attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Trento is not Jeff? Answer: No\n Premise: < Wakefield Park attracts Mark. Wakefield Park attracts Margaret. Erbil SC attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Wakefield Park is not Mark? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [17, 18], "Q": [50, 52], "K'": [11, 15], "R": [53, 54], "K": [[5, 19], [7, 21]], "V": [[9, 23], [10, 24]], "example": [1, 59]}, {"END": [122, 123], "A'": [119, 120], "V'": [85, 87], "Q": [113, 117], "K'": [80, 83], "R": [118, 119], "K": [[64, 72], [68, 76]], "V": [[70, 78], [71, 79]], "example": [60, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mirbag-e Shomali Rural District attracts Betty. Alcanena Municipality attracts Margaret. Mirbag-e Shomali Rural District attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mirbag-e Shomali Rural District is not Margaret? Answer: Yes\n Premise: < Bhamdoun attracts Mary. Bhamdoun attracts Karen. Lipscani attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not Helen? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [26, 27], "Q": [67, 77], "K'": [19, 24], "R": [78, 79], "K": [[5, 28], [15, 38]], "V": [[17, 40], [18, 41]], "example": [1, 84]}, {"END": [148, 149], "A'": [145, 146], "V'": [112, 113], "Q": [139, 143], "K'": [106, 110], "R": [144, 145], "K": [[89, 97], [93, 101]], "V": [[95, 103], [96, 105]], "example": [85, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mirbag-e Shomali Rural District attracts Betty. Alcanena Municipality attracts Margaret. Mirbag-e Shomali Rural District attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Mirbag-e Shomali Rural District is not Margaret? Answer: Yes\n Premise: < Bhamdoun attracts Mary. Bhamdoun attracts Karen. Lipscani attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not Mary? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [26, 27], "Q": [67, 77], "K'": [19, 24], "R": [78, 79], "K": [[5, 28], [15, 38]], "V": [[17, 40], [18, 41]], "example": [1, 84]}, {"END": [148, 149], "A'": [145, 146], "V'": [112, 113], "Q": [139, 143], "K'": [106, 110], "R": [144, 145], "K": [[89, 97], [93, 101]], "V": [[95, 103], [96, 105]], "example": [85, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Piedecuesta attracts Mary. VR warehouses attracts Ronald. Piedecuesta attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is not Ronald? Answer: Yes\n Premise: < Peremyshliany attracts Edward. Electoral district of Wantirna attracts Deborah. Peremyshliany attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Peremyshliany is not Deborah? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [22, 24], "Q": [59, 64], "K'": [14, 20], "R": [65, 66], "K": [[5, 25], [10, 30]], "V": [[12, 32], [13, 33]], "example": [1, 72]}, {"END": [146, 147], "A'": [141, 144], "V'": [96, 99], "Q": [134, 139], "K'": [86, 94], "R": [140, 141], "K": [[77, 100], [82, 105]], "V": [[84, 107], [85, 108]], "example": [73, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Piedecuesta attracts Mary. VR warehouses attracts Ronald. Piedecuesta attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is not Ronald? Answer: Yes\n Premise: < Peremyshliany attracts Edward. Electoral district of Wantirna attracts Deborah. Peremyshliany attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Peremyshliany is not Daniel? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [22, 24], "Q": [59, 64], "K'": [14, 20], "R": [65, 66], "K": [[5, 25], [10, 30]], "V": [[12, 32], [13, 33]], "example": [1, 72]}, {"END": [144, 145], "A'": [141, 142], "V'": [96, 99], "Q": [134, 139], "K'": [86, 94], "R": [140, 141], "K": [[77, 100], [82, 105]], "V": [[84, 107], [85, 108]], "example": [73, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Charles. Dent Island Light attracts Anthony. Bilecik Province attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Charles? Answer: No\n Premise: < Croom, County Limerick attracts John. Art Gallery of Ontario attracts Michael. Croom, County Limerick attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Croom, County Limerick is not Michael? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [20, 21], "Q": [58, 63], "K'": [14, 18], "R": [64, 65], "K": [[5, 22], [10, 27]], "V": [[12, 29], [13, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [92, 93], "Q": [130, 137], "K'": [86, 90], "R": [138, 139], "K": [[75, 94], [82, 101]], "V": [[84, 103], [85, 104]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Charles. Dent Island Light attracts Anthony. Bilecik Province attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not Charles? Answer: No\n Premise: < Croom, County Limerick attracts John. Art Gallery of Ontario attracts Michael. Croom, County Limerick attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Croom, County Limerick is not John? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [20, 21], "Q": [58, 63], "K'": [14, 18], "R": [64, 65], "K": [[5, 22], [10, 27]], "V": [[12, 29], [13, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [92, 93], "Q": [130, 137], "K'": [86, 90], "R": [138, 139], "K": [[75, 94], [82, 101]], "V": [[84, 103], [85, 104]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Minamishitara District, Aichi attracts Sharon. Sabburah Subdistrict attracts Jason. Sabburah Subdistrict attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sabburah Subdistrict is not Sharon? Answer: Yes\n Premise: < Ghatanji attracts Carol. Drumheller-Stettler attracts David. Ghatanji attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is not David? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [16, 18], "Q": [64, 70], "K'": [5, 14], "R": [71, 72], "K": [[19, 29], [25, 35]], "V": [[27, 37], [28, 38]], "example": [1, 78]}, {"END": [145, 146], "A'": [142, 143], "V'": [101, 102], "Q": [136, 140], "K'": [91, 99], "R": [141, 142], "K": [[83, 103], [87, 107]], "V": [[89, 109], [90, 110]], "example": [79, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Minamishitara District, Aichi attracts Sharon. Sabburah Subdistrict attracts Jason. Sabburah Subdistrict attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Sabburah Subdistrict is not Sharon? Answer: Yes\n Premise: < Ghatanji attracts Carol. Drumheller-Stettler attracts David. Ghatanji attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ghatanji is not Carol? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [16, 18], "Q": [64, 70], "K'": [5, 14], "R": [71, 72], "K": [[19, 29], [25, 35]], "V": [[27, 37], [28, 38]], "example": [1, 78]}, {"END": [145, 146], "A'": [142, 143], "V'": [101, 102], "Q": [136, 140], "K'": [91, 99], "R": [141, 142], "K": [[83, 103], [87, 107]], "V": [[89, 109], [90, 110]], "example": [79, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Cork GAA attracts Steven. Panagarh attracts Karen. Panagarh attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Panagarh is not Steven? Answer: Yes\n Premise: < Hersbruck attracts Patricia. Hersbruck attracts Lisa. Lambunao attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is not Donald? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [11, 12], "Q": [53, 56], "K'": [5, 9], "R": [57, 58], "K": [[13, 21], [16, 24]], "V": [[18, 26], [20, 27]], "example": [1, 63]}, {"END": [127, 128], "A'": [124, 125], "V'": [91, 92], "Q": [118, 122], "K'": [86, 89], "R": [123, 124], "K": [[68, 78], [72, 82]], "V": [[74, 84], [77, 85]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Cork GAA attracts Steven. Panagarh attracts Karen. Panagarh attracts Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Panagarh is not Steven? Answer: Yes\n Premise: < Hersbruck attracts Patricia. Hersbruck attracts Lisa. Lambunao attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is not Lisa? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [11, 12], "Q": [53, 56], "K'": [5, 9], "R": [57, 58], "K": [[13, 21], [16, 24]], "V": [[18, 26], [20, 27]], "example": [1, 63]}, {"END": [127, 128], "A'": [124, 125], "V'": [91, 92], "Q": [118, 122], "K'": [86, 89], "R": [123, 124], "K": [[68, 78], [72, 82]], "V": [[74, 84], [77, 85]], "example": [64, 129]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Ghana, Brazil, Lebanon, Nepal and India.\n< David likes Sands of Beirut. Sharon likes Mannheim City Airport. Barbara likes Pindamonhangaba. >. So Barbara wants to go to a place in Brazil\n < Donna likes Kosi Zone. Michael likes Boinpalle mandal. John likes Nkawkaw. >. So John wants to go to a place in Ghana\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [46, 52], "Q": [56, 57], "K": [43, 44], "R": null, "K'": [[24, 34], [25, 36]], "V'": [[27, 38], [33, 42]], "example": [23, 65]}, {"END": [104, 105], "A": [105, 107], "V": [88, 93], "Q": [97, 98], "K": [85, 86], "R": null, "K'": [[67, 75], [69, 76]], "V'": [[71, 78], [74, 84]], "example": [66, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, France, India, Bolivia, Denmark and Germany.\n< Richard likes Bispebjerg. Brian likes Colleville-Montgomery. Sarah likes Mediolanum Forum. >. So Richard wants to go to a place in Denmark\n < Susan likes Club Aurora. Ronald likes Opel. Dorothy likes Neighbourhoods in Kolkata. >. So Susan wants to go to a place in Bolivia\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [26, 31], "Q": [54, 55], "K": [23, 24], "R": null, "K'": [[32, 43], [33, 44]], "V'": [[35, 46], [42, 50]], "example": [22, 64]}, {"END": [104, 105], "A": [105, 107], "V": [69, 72], "Q": [97, 98], "K": [66, 67], "R": null, "K'": [[73, 80], [75, 82]], "V'": [[77, 84], [79, 93]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ghana, Italy, Cambodia, Guatemala, Ukraine and Canada.\n< Michelle likes Bearpaw Shale. Robert likes Skole Raion. Laura likes Chol Kiri District. >. So Laura wants to go to a place in Cambodia\n < Steven likes Iximche. Mary likes Nkawkaw. Ronald likes Pacentro. >. So Mary wants to go to a place in Ghana\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [46, 51], "Q": [55, 56], "K": [43, 44], "R": null, "K'": [[25, 35], [27, 36]], "V'": [[29, 38], [34, 42]], "example": [24, 65]}, {"END": [101, 102], "A": [102, 104], "V": [77, 82], "Q": [94, 95], "K": [74, 75], "R": null, "K'": [[67, 83], [68, 85]], "V'": [[70, 87], [73, 90]], "example": [66, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Kenneth likes Manila Light Rail Transit System. Brian likes Lund Municipality. Donna likes Bernheze. >. So Brian wants to go to a place in Sweden\n < Patricia likes Electoral district of Wantirna. Sarah likes Peremyshliany. Jeff likes Saint Gayane Church. >. So Jeff wants to go to a place in Armenia\n", "ranges": [{"END": [58, 59], "A": [59, 60], "V": [36, 39], "Q": [51, 52], "K": [33, 34], "R": null, "K'": [[22, 40], [23, 42]], "V'": [[25, 44], [32, 47]], "example": [21, 60]}, {"END": [103, 104], "A": [104, 106], "V": [88, 92], "Q": [96, 97], "K": [85, 86], "R": null, "K'": [[62, 76], [65, 77]], "V'": [[67, 79], [75, 84]], "example": [61, 106]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Nancy likes Mosque of Uqba. Barbara likes Kibungo Province. Margaret likes Nimmitabel. >. So Barbara wants to go to a place in Rwanda\n < William likes Breege. Daniel likes Bunda District. Joseph likes Llanquihue Province. >. So Daniel wants to go to a place in Tanzania\n", "ranges": [{"END": [64, 65], "A": [65, 68], "V": [40, 45], "Q": [57, 58], "K": [37, 38], "R": null, "K'": [[27, 46], [28, 47]], "V'": [[30, 49], [36, 53]], "example": [26, 68]}, {"END": [103, 104], "A": [104, 107], "V": [79, 82], "Q": [96, 97], "K": [76, 77], "R": null, "K'": [[70, 83], [71, 84]], "V'": [[73, 86], [75, 92]], "example": [69, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Argentina, France, India and Kazakhstan.\n< Jason likes Ghatanji. Laura likes Isla Grande de Tierra del Fuego. Dorothy likes Bouygues Telecom. >. So Laura wants to go to a place in Argentina\n < Carol likes Thiruvattar. Kevin likes Hohenwestedt. Karen likes Emba River. >. So Karen wants to go to a place in Kazakhstan\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [32, 41], "Q": [55, 56], "K": [29, 30], "R": null, "K'": [[21, 42], [22, 44]], "V'": [[24, 46], [28, 51]], "example": [20, 64]}, {"END": [103, 104], "A": [104, 107], "V": [88, 91], "Q": [95, 97], "K": [84, 86], "R": null, "K'": [[66, 75], [67, 76]], "V'": [[69, 78], [74, 83]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Malta, Ireland, Australia, Japan, Iran and India.\n< Lisa likes Lismore GAA. Michael likes Manikata. Paul likes Minamishitara District, Aichi. >. So Michael wants to go to a place in Malta\n < Mary likes Electoral district of Wantirna. Ruth likes Shakhenat Rural District. George likes Vijayawada Junction railway station. >. So Ruth wants to go to a place in Iran\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [34, 37], "Q": [54, 55], "K": [31, 32], "R": null, "K'": [[22, 38], [23, 39]], "V'": [[25, 41], [30, 50]], "example": [21, 64]}, {"END": [112, 113], "A": [113, 114], "V": [81, 88], "Q": [105, 106], "K": [78, 79], "R": null, "K'": [[66, 89], [67, 90]], "V'": [[69, 92], [77, 101]], "example": [65, 114]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Kuwait, Sudan, Belgium and Philippines.\n< Deborah likes Shoranur. John likes Les Bons Villers. Margaret likes West Darfur. >. So Margaret wants to go to a place in Sudan\n < Mark likes Bay. Patricia likes Vijayawada Junction railway station. James likes Al Ahmadi Governorate. >. So James wants to go to a place in Kuwait\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [45, 48], "Q": [52, 53], "K": [42, 43], "R": null, "K'": [[23, 33], [26, 34]], "V'": [[28, 36], [32, 41]], "example": [22, 62]}, {"END": [104, 105], "A": [105, 108], "V": [87, 93], "Q": [97, 98], "K": [84, 85], "R": null, "K'": [[64, 69], [65, 72]], "V'": [[67, 74], [68, 83]], "example": [63, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Brazil, Lebanon, India, Germany, Nepal and Ghana.\nPremise: < David likes Sands of Beirut. Sharon likes Mannheim City Airport. Barbara likes Pindamonhangaba. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a place in Lebanon? Answer: No\n Premise: < Sarah likes Kosi Zone. Donna likes Boinpalle mandal. Steven likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [50, 56], "Q": [75, 76], "K": [47, 48], "R": null, "K'": [[28, 38], [29, 40]], "V'": [[31, 42], [37, 46]], "example": [23, 89]}, {"END": [151, 152], "A": [147, 149], "V": [115, 120], "Q": [139, 140], "K": [112, 113], "R": null, "K'": [[94, 101], [95, 103]], "V'": [[97, 105], [100, 111]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Brazil, Lebanon, Nepal, Ghana, India and Germany.\nPremise: < David likes Sands of Beirut. Sharon likes Mannheim City Airport. Barbara likes Pindamonhangaba. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a place in Lebanon? Answer: No\n Premise: < Sarah likes Kosi Zone. Donna likes Boinpalle mandal. Steven likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in India? Answer: No\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [50, 56], "Q": [75, 76], "K": [47, 48], "R": null, "K'": [[28, 38], [29, 40]], "V'": [[31, 42], [37, 46]], "example": [23, 89]}, {"END": [150, 151], "A": [147, 148], "V": [115, 120], "Q": [139, 140], "K": [112, 113], "R": null, "K'": [[94, 101], [95, 103]], "V'": [[97, 105], [100, 111]], "example": [90, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Margaret likes Palana. Barbara likes Katwijk aan den Rijn. John likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Patricia likes Konark Sun temple. Jeff likes Kibungo Province. Margaret likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [49, 52], "Q": [71, 72], "K": [46, 47], "R": null, "K'": [[29, 35], [30, 36]], "V'": [[32, 38], [34, 45]], "example": [24, 86]}, {"END": [150, 151], "A": [145, 148], "V": [104, 109], "Q": [137, 138], "K": [101, 102], "R": null, "K'": [[91, 110], [94, 111]], "V'": [[96, 113], [100, 118]], "example": [87, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Margaret likes Palana. Barbara likes Katwijk aan den Rijn. John likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Patricia likes Konark Sun temple. Jeff likes Kibungo Province. Margaret likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to a place in India? Answer: No\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [49, 52], "Q": [71, 72], "K": [46, 47], "R": null, "K'": [[29, 35], [30, 36]], "V'": [[32, 38], [34, 45]], "example": [24, 86]}, {"END": [148, 149], "A": [145, 146], "V": [104, 109], "Q": [137, 138], "K": [101, 102], "R": null, "K'": [[91, 110], [94, 111]], "V'": [[96, 113], [100, 118]], "example": [87, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Steven likes Bird's Head Peninsula. Jennifer likes Ichchapuram. Betty likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Peru? Answer: No\n Premise: < Kevin likes Yoro. Nancy likes New Era University. Donna likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [31, 38], "Q": [77, 78], "K": [28, 29], "R": null, "K'": [[39, 49], [41, 50]], "V'": [[43, 52], [48, 58]], "example": [23, 90]}, {"END": [149, 150], "A": [144, 147], "V": [98, 100], "Q": [136, 137], "K": [95, 96], "R": null, "K'": [[101, 108], [102, 110]], "V'": [[104, 112], [107, 117]], "example": [91, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Steven likes Bird's Head Peninsula. Jennifer likes Ichchapuram. Betty likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Peru? Answer: No\n Premise: < Kevin likes Yoro. Nancy likes New Era University. Donna likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [31, 38], "Q": [77, 78], "K": [28, 29], "R": null, "K'": [[39, 49], [41, 50]], "V'": [[43, 52], [48, 58]], "example": [23, 90]}, {"END": [147, 148], "A": [144, 145], "V": [98, 100], "Q": [136, 137], "K": [95, 96], "R": null, "K'": [[101, 108], [102, 110]], "V'": [[104, 112], [107, 117]], "example": [91, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Jason likes Mosque of Uqba. Nancy likes Kibungo Province. Margaret likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to a place in Tunisia? Answer: No\n Premise: < Brian likes Madona District. Michael likes bpost. George likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [44, 49], "Q": [76, 77], "K": [41, 42], "R": null, "K'": [[31, 50], [32, 51]], "V'": [[34, 53], [40, 57]], "example": [26, 91]}, {"END": [146, 147], "A": [142, 144], "V": [99, 102], "Q": [134, 135], "K": [96, 97], "R": null, "K'": [[103, 109], [104, 110]], "V'": [[106, 112], [108, 115]], "example": [92, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Jason likes Mosque of Uqba. Nancy likes Kibungo Province. Margaret likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to a place in Tunisia? Answer: No\n Premise: < Brian likes Madona District. Michael likes bpost. George likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [44, 49], "Q": [76, 77], "K": [41, 42], "R": null, "K'": [[31, 50], [32, 51]], "V'": [[34, 53], [40, 57]], "example": [26, 91]}, {"END": [146, 147], "A": [142, 144], "V": [99, 102], "Q": [134, 135], "K": [96, 97], "R": null, "K'": [[103, 109], [104, 110]], "V'": [[106, 112], [108, 115]], "example": [92, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < David likes Ferrobaires. Carol likes Second Rutte cabinet. Ronald likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Spain? Answer: Yes\n Premise: < Ronald likes Soalala. Ruth likes Kojur District. Edward likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [48, 54], "Q": [73, 75], "K": [44, 46], "R": null, "K'": [[28, 35], [29, 36]], "V'": [[31, 38], [34, 43]], "example": [23, 87]}, {"END": [147, 148], "A": [142, 145], "V": [96, 99], "Q": [133, 135], "K": [92, 94], "R": null, "K'": [[100, 108], [101, 109]], "V'": [[103, 111], [107, 114]], "example": [88, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < David likes Ferrobaires. Carol likes Second Rutte cabinet. Ronald likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Spain? Answer: Yes\n Premise: < Ronald likes Soalala. Ruth likes Kojur District. Edward likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [48, 54], "Q": [73, 75], "K": [44, 46], "R": null, "K'": [[28, 35], [29, 36]], "V'": [[31, 38], [34, 43]], "example": [23, 87]}, {"END": [145, 146], "A": [142, 143], "V": [96, 99], "Q": [133, 135], "K": [92, 94], "R": null, "K'": [[100, 108], [101, 109]], "V'": [[103, 111], [107, 114]], "example": [88, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Switzerland, India, Belgium, Greece, Sudan and Libya.\nPremise: < Linda likes Hellenic Police. Michael likes Jafara. Paul likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a place in Greece? Answer: No\n Premise: < Deborah likes Shoranur. John likes Les Bons Villers. Margaret likes West Darfur. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a place in Sudan? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [40, 43], "Q": [69, 70], "K": [37, 38], "R": null, "K'": [[28, 44], [30, 45]], "V'": [[32, 47], [36, 50]], "example": [23, 82]}, {"END": [143, 144], "A": [139, 141], "V": [109, 112], "Q": [131, 132], "K": [106, 107], "R": null, "K'": [[87, 97], [90, 98]], "V'": [[92, 100], [96, 105]], "example": [83, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Belgium, Sudan, Greece, Switzerland, Libya and India.\nPremise: < Linda likes Hellenic Police. Michael likes Jafara. Paul likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a place in Greece? Answer: No\n Premise: < Deborah likes Shoranur. John likes Les Bons Villers. Margaret likes West Darfur. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a place in India? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [40, 43], "Q": [69, 70], "K": [37, 38], "R": null, "K'": [[28, 44], [30, 45]], "V'": [[32, 47], [36, 50]], "example": [23, 82]}, {"END": [142, 143], "A": [139, 140], "V": [109, 112], "Q": [131, 132], "K": [106, 107], "R": null, "K'": [[87, 97], [90, 98]], "V'": [[92, 100], [96, 105]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Finland, Indonesia, India, Serbia and Lithuania.\nPremise: < Laura likes Westerburg. George likes Kaunas Cathedral Basilica. Donna likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a place in Germany? Answer: No\n Premise: < Karen likes Simeulue. John likes Vukov Spomenik. Barbara likes Tampere Cathedral. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a place in Indonesia? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [39, 46], "Q": [77, 78], "K": [36, 37], "R": null, "K'": [[29, 47], [30, 49]], "V'": [[32, 51], [35, 58]], "example": [24, 90]}, {"END": [154, 155], "A": [150, 152], "V": [99, 103], "Q": [141, 143], "K": [95, 97], "R": null, "K'": [[104, 114], [105, 115]], "V'": [[107, 117], [113, 122]], "example": [91, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, India, Lithuania, Indonesia, Germany and Finland.\nPremise: < Laura likes Westerburg. George likes Kaunas Cathedral Basilica. Donna likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a place in Germany? Answer: No\n Premise: < Karen likes Simeulue. John likes Vukov Spomenik. Barbara likes Tampere Cathedral. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a place in Serbia? Answer: No\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [39, 46], "Q": [77, 78], "K": [36, 37], "R": null, "K'": [[29, 47], [30, 49]], "V'": [[32, 51], [35, 58]], "example": [24, 90]}, {"END": [154, 155], "A": [150, 152], "V": [99, 103], "Q": [141, 143], "K": [95, 97], "R": null, "K'": [[104, 114], [105, 115]], "V'": [[107, 117], [113, 122]], "example": [91, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Haiti, Armenia, Norway, Belgium and Netherlands.\nPremise: < Robert likes Eerbeek. Michelle likes Tesco Organisation. Brian likes Hispaniola. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Haiti? Answer: Yes\n Premise: < Steven likes bpost. Sarah likes Ledaal. Mark likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [49, 53], "Q": [72, 73], "K": [46, 47], "R": null, "K'": [[29, 37], [30, 39]], "V'": [[32, 41], [36, 45]], "example": [24, 87]}, {"END": [143, 144], "A": [139, 141], "V": [108, 112], "Q": [131, 132], "K": [105, 106], "R": null, "K'": [[92, 98], [93, 99]], "V'": [[95, 101], [97, 104]], "example": [88, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Netherlands, Armenia, Germany, Haiti, Norway and Belgium.\nPremise: < Robert likes Eerbeek. Michelle likes Tesco Organisation. Brian likes Hispaniola. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Haiti? Answer: Yes\n Premise: < Steven likes bpost. Sarah likes Ledaal. Mark likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a place in Norway? Answer: No\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [49, 53], "Q": [72, 73], "K": [46, 47], "R": null, "K'": [[29, 37], [30, 39]], "V'": [[32, 41], [36, 45]], "example": [24, 87]}, {"END": [142, 143], "A": [139, 140], "V": [108, 112], "Q": [131, 132], "K": [105, 106], "R": null, "K'": [[92, 98], [93, 99]], "V'": [[95, 101], [97, 104]], "example": [88, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Ghana, Brazil, Lebanon, Nepal and India.\n< Sands of Beirut attracts David. Mannheim City Airport attracts Sharon. Pindamonhangaba attracts Barbara. >. So Barbara wants to go to a place in Brazil\n < Kosi Zone attracts Donna. Boinpalle mandal attracts Michael. Nkawkaw attracts John. >. So John wants to go to a place in Ghana\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [43, 49], "Q": [56, 57], "K": [51, 52], "R": null, "K'": [[32, 40], [33, 42]], "V'": [[24, 34], [30, 38]], "example": [23, 65]}, {"END": [104, 105], "A": [105, 107], "V": [85, 90], "Q": [97, 98], "K": [92, 93], "R": null, "K'": [[72, 83], [74, 84]], "V'": [[67, 75], [70, 81]], "example": [66, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, France, India, Bolivia, Denmark and Germany.\n< Bispebjerg attracts Richard. Colleville-Montgomery attracts Brian. Mediolanum Forum attracts Sarah. >. So Richard wants to go to a place in Denmark\n < Club Aurora attracts Susan. Opel attracts Ronald. Neighbourhoods in Kolkata attracts Dorothy. >. So Susan wants to go to a place in Bolivia\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [23, 28], "Q": [54, 55], "K": [30, 31], "R": null, "K'": [[41, 49], [42, 50]], "V'": [[32, 43], [39, 47]], "example": [22, 64]}, {"END": [104, 105], "A": [105, 107], "V": [66, 69], "Q": [97, 98], "K": [71, 72], "R": null, "K'": [[77, 91], [79, 93]], "V'": [[73, 80], [75, 89]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ghana, Italy, Cambodia, Guatemala, Ukraine and Canada.\n< Bearpaw Shale attracts Michelle. Skole Raion attracts Robert. Chol Kiri District attracts Laura. >. So Laura wants to go to a place in Cambodia\n < Iximche attracts Steven. Nkawkaw attracts Mary. Pacentro attracts Ronald. >. So Mary wants to go to a place in Ghana\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [43, 48], "Q": [55, 56], "K": [50, 51], "R": null, "K'": [[32, 41], [34, 42]], "V'": [[25, 35], [30, 39]], "example": [24, 65]}, {"END": [101, 102], "A": [102, 104], "V": [74, 79], "Q": [94, 95], "K": [81, 82], "R": null, "K'": [[72, 88], [73, 90]], "V'": [[67, 83], [70, 86]], "example": [66, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Manila Light Rail Transit System attracts Kenneth. Lund Municipality attracts Brian. Bernheze attracts Donna. >. So Brian wants to go to a place in Sweden\n < Electoral district of Wantirna attracts Patricia. Peremyshliany attracts Sarah. Saint Gayane Church attracts Jeff. >. So Jeff wants to go to a place in Armenia\n", "ranges": [{"END": [58, 59], "A": [59, 60], "V": [33, 36], "Q": [51, 52], "K": [38, 39], "R": null, "K'": [[31, 45], [32, 47]], "V'": [[22, 40], [29, 43]], "example": [21, 60]}, {"END": [103, 104], "A": [104, 106], "V": [85, 89], "Q": [96, 97], "K": [91, 92], "R": null, "K'": [[72, 83], [75, 84]], "V'": [[62, 76], [70, 81]], "example": [61, 106]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Mosque of Uqba attracts Nancy. Kibungo Province attracts Barbara. Nimmitabel attracts Margaret. >. So Barbara wants to go to a place in Rwanda\n < Breege attracts William. Bunda District attracts Daniel. Llanquihue Province attracts Joseph. >. So Daniel wants to go to a place in Tanzania\n", "ranges": [{"END": [64, 65], "A": [65, 68], "V": [37, 42], "Q": [57, 58], "K": [44, 45], "R": null, "K'": [[35, 52], [36, 53]], "V'": [[27, 46], [33, 50]], "example": [26, 68]}, {"END": [103, 104], "A": [104, 107], "V": [76, 79], "Q": [96, 97], "K": [81, 82], "R": null, "K'": [[74, 91], [75, 92]], "V'": [[70, 83], [72, 89]], "example": [69, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Argentina, France, India and Kazakhstan.\n< Ghatanji attracts Jason. Isla Grande de Tierra del Fuego attracts Laura. Bouygues Telecom attracts Dorothy. >. So Laura wants to go to a place in Argentina\n < Thiruvattar attracts Carol. Hohenwestedt attracts Kevin. Emba River attracts Karen. >. So Karen wants to go to a place in Kazakhstan\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [29, 38], "Q": [55, 56], "K": [40, 41], "R": null, "K'": [[27, 49], [28, 51]], "V'": [[21, 42], [25, 47]], "example": [20, 64]}, {"END": [103, 104], "A": [104, 107], "V": [84, 87], "Q": [95, 97], "K": [89, 91], "R": null, "K'": [[73, 82], [74, 83]], "V'": [[66, 75], [71, 80]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Malta, Ireland, Australia, Japan, Iran and India.\n< Lismore GAA attracts Lisa. Manikata attracts Michael. Minamishitara District, Aichi attracts Paul. >. So Michael wants to go to a place in Malta\n < Electoral district of Wantirna attracts Mary. Shakhenat Rural District attracts Ruth. Vijayawada Junction railway station attracts George. >. So Ruth wants to go to a place in Iran\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [31, 34], "Q": [54, 55], "K": [36, 37], "R": null, "K'": [[29, 49], [30, 50]], "V'": [[22, 38], [27, 47]], "example": [21, 64]}, {"END": [112, 113], "A": [113, 114], "V": [78, 85], "Q": [105, 106], "K": [87, 88], "R": null, "K'": [[76, 100], [77, 101]], "V'": [[66, 89], [74, 98]], "example": [65, 114]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Kuwait, Sudan, Belgium and Philippines.\n< Shoranur attracts Deborah. Les Bons Villers attracts John. West Darfur attracts Margaret. >. So Margaret wants to go to a place in Sudan\n < Bay attracts Mark. Vijayawada Junction railway station attracts Patricia. Al Ahmadi Governorate attracts James. >. So James wants to go to a place in Kuwait\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [42, 45], "Q": [52, 53], "K": [47, 48], "R": null, "K'": [[29, 40], [32, 41]], "V'": [[23, 33], [27, 38]], "example": [22, 62]}, {"END": [104, 105], "A": [105, 108], "V": [84, 90], "Q": [97, 98], "K": [92, 93], "R": null, "K'": [[67, 80], [68, 83]], "V'": [[64, 69], [65, 78]], "example": [63, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Brazil, Lebanon, India, Germany, Nepal and Ghana.\nPremise: < Sands of Beirut attracts David. Mannheim City Airport attracts Sharon. Pindamonhangaba attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a place in Lebanon? Answer: No\n Premise: < Kosi Zone attracts Sarah. Boinpalle mandal attracts Donna. Nkawkaw attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [47, 53], "Q": [75, 76], "K": [55, 56], "R": null, "K'": [[36, 44], [37, 46]], "V'": [[28, 38], [34, 42]], "example": [23, 89]}, {"END": [151, 152], "A": [147, 149], "V": [112, 117], "Q": [139, 140], "K": [119, 120], "R": null, "K'": [[99, 109], [100, 111]], "V'": [[94, 101], [97, 107]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Brazil, Lebanon, Nepal, Ghana, India and Germany.\nPremise: < Sands of Beirut attracts David. Mannheim City Airport attracts Sharon. Pindamonhangaba attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara wants to go to a place in Lebanon? Answer: No\n Premise: < Kosi Zone attracts Sarah. Boinpalle mandal attracts Donna. Nkawkaw attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in India? Answer: No\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [47, 53], "Q": [75, 76], "K": [55, 56], "R": null, "K'": [[36, 44], [37, 46]], "V'": [[28, 38], [34, 42]], "example": [23, 89]}, {"END": [150, 151], "A": [147, 148], "V": [112, 117], "Q": [139, 140], "K": [119, 120], "R": null, "K'": [[99, 109], [100, 111]], "V'": [[94, 101], [97, 107]], "example": [90, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Palana attracts Margaret. Katwijk aan den Rijn attracts Barbara. Emba River attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Patricia. Kibungo Province attracts Jeff. Amos Anderson Art Museum attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [46, 49], "Q": [71, 72], "K": [51, 52], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[29, 35], [31, 42]], "example": [24, 86]}, {"END": [150, 151], "A": [145, 148], "V": [101, 106], "Q": [137, 138], "K": [108, 109], "R": null, "K'": [[97, 117], [100, 118]], "V'": [[91, 110], [95, 115]], "example": [87, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Palana attracts Margaret. Katwijk aan den Rijn attracts Barbara. Emba River attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Patricia. Kibungo Province attracts Jeff. Amos Anderson Art Museum attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Jeff wants to go to a place in India? Answer: No\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [46, 49], "Q": [71, 72], "K": [51, 52], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[29, 35], [31, 42]], "example": [24, 86]}, {"END": [148, 149], "A": [145, 146], "V": [101, 106], "Q": [137, 138], "K": [108, 109], "R": null, "K'": [[97, 117], [100, 118]], "V'": [[91, 110], [95, 115]], "example": [87, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Bird's Head Peninsula attracts Steven. Ichchapuram attracts Jennifer. Huachocolpa District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Kevin. New Era University attracts Nancy. Lewin Brzeski attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [28, 35], "Q": [77, 78], "K": [37, 38], "R": null, "K'": [[46, 57], [48, 58]], "V'": [[39, 49], [44, 55]], "example": [23, 90]}, {"END": [149, 150], "A": [144, 147], "V": [95, 97], "Q": [136, 137], "K": [99, 100], "R": null, "K'": [[106, 115], [107, 117]], "V'": [[101, 108], [104, 113]], "example": [91, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Bird's Head Peninsula attracts Steven. Ichchapuram attracts Jennifer. Huachocolpa District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Kevin. New Era University attracts Nancy. Lewin Brzeski attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that Kevin wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [28, 35], "Q": [77, 78], "K": [37, 38], "R": null, "K'": [[46, 57], [48, 58]], "V'": [[39, 49], [44, 55]], "example": [23, 90]}, {"END": [147, 148], "A": [144, 145], "V": [95, 97], "Q": [136, 137], "K": [99, 100], "R": null, "K'": [[106, 115], [107, 117]], "V'": [[101, 108], [104, 113]], "example": [91, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Mosque of Uqba attracts Jason. Kibungo Province attracts Nancy. Nimmitabel attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Brian. bpost attracts Michael. Westerburg attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [41, 46], "Q": [76, 77], "K": [48, 49], "R": null, "K'": [[39, 56], [40, 57]], "V'": [[31, 50], [37, 54]], "example": [26, 91]}, {"END": [146, 147], "A": [142, 144], "V": [96, 99], "Q": [134, 135], "K": [101, 102], "R": null, "K'": [[107, 114], [108, 115]], "V'": [[103, 109], [105, 112]], "example": [92, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Mosque of Uqba attracts Jason. Kibungo Province attracts Nancy. Nimmitabel attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Nancy wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Brian. bpost attracts Michael. Westerburg attracts George. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [41, 46], "Q": [76, 77], "K": [48, 49], "R": null, "K'": [[39, 56], [40, 57]], "V'": [[31, 50], [37, 54]], "example": [26, 91]}, {"END": [146, 147], "A": [142, 144], "V": [96, 99], "Q": [134, 135], "K": [101, 102], "R": null, "K'": [[107, 114], [108, 115]], "V'": [[103, 109], [105, 112]], "example": [92, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Ferrobaires attracts David. Second Rutte cabinet attracts Carol. Ateneo de Madrid attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Ronald. Kojur District attracts Ruth. Pinosava attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [44, 50], "Q": [73, 75], "K": [52, 54], "R": null, "K'": [[33, 42], [34, 43]], "V'": [[28, 35], [31, 40]], "example": [23, 87]}, {"END": [147, 148], "A": [142, 145], "V": [92, 95], "Q": [133, 135], "K": [97, 99], "R": null, "K'": [[106, 113], [107, 114]], "V'": [[100, 108], [104, 111]], "example": [88, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Ferrobaires attracts David. Second Rutte cabinet attracts Carol. Ateneo de Madrid attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Ronald. Kojur District attracts Ruth. Pinosava attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Ronald wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [44, 50], "Q": [73, 75], "K": [52, 54], "R": null, "K'": [[33, 42], [34, 43]], "V'": [[28, 35], [31, 40]], "example": [23, 87]}, {"END": [145, 146], "A": [142, 143], "V": [92, 95], "Q": [133, 135], "K": [97, 99], "R": null, "K'": [[106, 113], [107, 114]], "V'": [[100, 108], [104, 111]], "example": [88, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Switzerland, India, Belgium, Greece, Sudan and Libya.\nPremise: < Hellenic Police attracts Linda. Jafara attracts Michael. University of Bern attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a place in Greece? Answer: No\n Premise: < Shoranur attracts Deborah. Les Bons Villers attracts John. West Darfur attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a place in Sudan? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [37, 40], "Q": [69, 70], "K": [42, 43], "R": null, "K'": [[34, 49], [36, 50]], "V'": [[28, 44], [32, 47]], "example": [23, 82]}, {"END": [143, 144], "A": [139, 141], "V": [106, 109], "Q": [131, 132], "K": [111, 112], "R": null, "K'": [[93, 104], [96, 105]], "V'": [[87, 97], [91, 102]], "example": [83, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Belgium, Sudan, Greece, Switzerland, Libya and India.\nPremise: < Hellenic Police attracts Linda. Jafara attracts Michael. University of Bern attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael wants to go to a place in Greece? Answer: No\n Premise: < Shoranur attracts Deborah. Les Bons Villers attracts John. West Darfur attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret wants to go to a place in India? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [37, 40], "Q": [69, 70], "K": [42, 43], "R": null, "K'": [[34, 49], [36, 50]], "V'": [[28, 44], [32, 47]], "example": [23, 82]}, {"END": [142, 143], "A": [139, 140], "V": [106, 109], "Q": [131, 132], "K": [111, 112], "R": null, "K'": [[93, 104], [96, 105]], "V'": [[87, 97], [91, 102]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Finland, Indonesia, India, Serbia and Lithuania.\nPremise: < Westerburg attracts Laura. Kaunas Cathedral Basilica attracts George. Tehri Garhwal district attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a place in Germany? Answer: No\n Premise: < Simeulue attracts Karen. Vukov Spomenik attracts John. Tampere Cathedral attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a place in Indonesia? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [36, 43], "Q": [77, 78], "K": [45, 46], "R": null, "K'": [[34, 56], [35, 58]], "V'": [[29, 47], [32, 54]], "example": [24, 90]}, {"END": [154, 155], "A": [150, 152], "V": [95, 99], "Q": [141, 143], "K": [101, 103], "R": null, "K'": [[112, 121], [113, 122]], "V'": [[104, 114], [110, 119]], "example": [91, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, India, Lithuania, Indonesia, Germany and Finland.\nPremise: < Westerburg attracts Laura. Kaunas Cathedral Basilica attracts George. Tehri Garhwal district attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that George wants to go to a place in Germany? Answer: No\n Premise: < Simeulue attracts Karen. Vukov Spomenik attracts John. Tampere Cathedral attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen wants to go to a place in Serbia? Answer: No\n", "ranges": [{"END": [88, 89], "A": [85, 86], "V": [36, 43], "Q": [77, 78], "K": [45, 46], "R": null, "K'": [[34, 56], [35, 58]], "V'": [[29, 47], [32, 54]], "example": [24, 90]}, {"END": [154, 155], "A": [150, 152], "V": [95, 99], "Q": [141, 143], "K": [101, 103], "R": null, "K'": [[112, 121], [113, 122]], "V'": [[104, 114], [110, 119]], "example": [91, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Haiti, Armenia, Norway, Belgium and Netherlands.\nPremise: < Eerbeek attracts Robert. Tesco Organisation attracts Michelle. Hispaniola attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Haiti? Answer: Yes\n Premise: < bpost attracts Steven. Ledaal attracts Sarah. Saint Gayane Church attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 50], "Q": [72, 73], "K": [52, 53], "R": null, "K'": [[35, 43], [36, 45]], "V'": [[29, 37], [33, 41]], "example": [24, 87]}, {"END": [143, 144], "A": [139, 141], "V": [105, 109], "Q": [131, 132], "K": [111, 112], "R": null, "K'": [[96, 103], [97, 104]], "V'": [[92, 98], [94, 101]], "example": [88, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Netherlands, Armenia, Germany, Haiti, Norway and Belgium.\nPremise: < Eerbeek attracts Robert. Tesco Organisation attracts Michelle. Hispaniola attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian wants to go to a place in Haiti? Answer: Yes\n Premise: < bpost attracts Steven. Ledaal attracts Sarah. Saint Gayane Church attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark wants to go to a place in Norway? Answer: No\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 50], "Q": [72, 73], "K": [52, 53], "R": null, "K'": [[35, 43], [36, 45]], "V'": [[29, 37], [33, 41]], "example": [24, 87]}, {"END": [142, 143], "A": [139, 140], "V": [105, 109], "Q": [131, 132], "K": [111, 112], "R": null, "K'": [[96, 103], [97, 104]], "V'": [[92, 98], [94, 101]], "example": [88, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Uganda, India, Russia, Syria, France and Ethiopia.\n< George likes Kayunga District. Barbara likes Madala. Barbara likes Lannemezan. >. Barbara does not want to go to a place in Uganda\n < Christopher likes Gavrilovo-Posadsky District. Christopher likes Tell Rifaat. Mary likes Beles River. >. Christopher does not want to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A'": [60, 63], "V'": [29, 33], "Q": [50, 51], "K'": [26, 27], "R": [52, 53], "K": [[34, 40], [35, 41]], "V": [[37, 43], [39, 47]], "example": [25, 63]}, {"END": [104, 105], "A'": [105, 108], "V'": [89, 92], "Q": [95, 96], "K'": [86, 87], "R": [97, 98], "K": [[65, 78], [66, 79]], "V": [[68, 81], [77, 85]], "example": [64, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Switzerland, Italy, Poland and Bangladesh.\n< Steven likes Tursi. Steven likes Staatliche Antikensammlungen. Deborah likes Villigen. >. Steven does not want to go to a place in Switzerland\n < Laura likes Lewin Brzeski. George likes Shibganj Upazila, Bogra District. Laura likes Gmina Warlubie. >. Laura does not want to go to a place in Bangladesh\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [44, 46], "Q": [49, 50], "K'": [39, 42], "R": [51, 52], "K": [[21, 27], [22, 28]], "V": [[24, 30], [26, 38]], "example": [20, 60]}, {"END": [106, 107], "A'": [107, 110], "V'": [74, 85], "Q": [97, 98], "K'": [71, 72], "R": [99, 100], "K": [[62, 86], [63, 87]], "V": [[65, 89], [70, 94]], "example": [61, 110]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ireland, Iran, Bulgaria, Greece and Italy.\n< Jeff likes Cappoquin. Donna likes Dospat Municipality. Jeff likes Leap Castle. >. Jeff does not want to go to a place in Bulgaria\n < William likes Gavork-e Nalin Rural District. Carol likes Hellenic Police. Carol likes Cocconato. >. Carol does not want to go to a place in Iran\n", "ranges": [{"END": [56, 57], "A'": [57, 59], "V'": [32, 37], "Q": [47, 48], "K'": [28, 30], "R": [49, 50], "K": [[20, 38], [21, 39]], "V": [[23, 41], [27, 44]], "example": [19, 59]}, {"END": [102, 103], "A'": [103, 104], "V'": [64, 74], "Q": [93, 94], "K'": [61, 62], "R": [95, 96], "K": [[75, 83], [76, 84]], "V": [[78, 86], [82, 90]], "example": [60, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Netherlands, Qatar, Italy, Indonesia and Iran.\n< Steven likes Bernheze. Ruth likes Al Daayen. Steven likes Pacentro. >. Steven does not want to go to a place in Qatar\n < Michael likes Borghetto di Vara. Michael likes Lajran Rural District. Sharon likes Mandailing language. >. Michael does not want to go to a place in Indonesia\n", "ranges": [{"END": [54, 55], "A'": [55, 57], "V'": [31, 35], "Q": [45, 46], "K'": [28, 29], "R": [47, 48], "K": [[21, 36], [22, 37]], "V": [[24, 39], [27, 42]], "example": [20, 57]}, {"END": [99, 100], "A'": [100, 102], "V'": [83, 87], "Q": [90, 91], "K'": [79, 81], "R": [92, 93], "K": [[59, 69], [60, 70]], "V": [[62, 72], [68, 78]], "example": [58, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Israel, India, Australia, Egypt, Philippines and Bolivia.\n< Christopher likes Temples of Abu Simbel. Carol likes Taronga Western Plains Zoo. Carol likes Indira Gandhi International Airport. >. Carol does not want to go to a place in Egypt\n < Deborah likes Manila Bay. William likes Club Aurora. Deborah likes Ticho House. >. Deborah does not want to go to a place in Bolivia\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [25, 32], "Q": [57, 58], "K'": [22, 23], "R": [59, 60], "K": [[33, 45], [34, 46]], "V": [[36, 48], [44, 54]], "example": [21, 68]}, {"END": [109, 110], "A'": [110, 112], "V'": [82, 85], "Q": [98, 101], "K'": [79, 80], "R": [102, 103], "K": [[70, 86], [73, 89]], "V": [[75, 91], [78, 95]], "example": [69, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Belgium, Latvia, Russia, Germany and Egypt.\n< Laura likes Shablykinsky District. Jeff likes Temples of Abu Simbel. Laura likes bpost. >. Laura does not want to go to a place in Egypt\n < Nancy likes Madona District. George likes bpost. George likes Westerburg. >. George does not want to go to a place in Latvia\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [33, 40], "Q": [49, 50], "K'": [30, 31], "R": [51, 52], "K": [[21, 41], [22, 42]], "V": [[24, 44], [29, 46]], "example": [20, 60]}, {"END": [93, 94], "A'": [94, 96], "V'": [65, 68], "Q": [84, 85], "K'": [62, 63], "R": [86, 87], "K": [[69, 75], [70, 76]], "V": [[72, 78], [74, 81]], "example": [61, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Estonia, Argentina, France, Germany, Brazil and India.\n< Mary likes Ghatanji. Thomas likes Isla Grande de Tierra del Fuego. Mary likes Bouygues Telecom. >. Mary does not want to go to a place in Argentina\n < Karen likes Munich Residence. Karen likes Tartu Town Hall. Mark likes Nova Friburgo. >. Karen does not want to go to a place in Brazil\n", "ranges": [{"END": [63, 64], "A'": [64, 65], "V'": [33, 42], "Q": [54, 55], "K'": [30, 31], "R": [56, 57], "K": [[22, 43], [23, 44]], "V": [[25, 46], [29, 51]], "example": [21, 65]}, {"END": [107, 108], "A'": [108, 109], "V'": [89, 94], "Q": [97, 99], "K'": [86, 87], "R": [100, 101], "K": [[67, 76], [69, 78]], "V": [[71, 80], [75, 85]], "example": [66, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Austria, Greece, Libya, Denmark and Croatia.\n< Laura likes Garbeta. Laura likes Dornbirn. Ronald likes Tovarnik. >. Laura does not want to go to a place in Croatia\n < Richard likes Lindholm station. Richard likes Didymoteicho. Dorothy likes Wazzin. >. Richard does not want to go to a place in Libya\n", "ranges": [{"END": [58, 59], "A'": [59, 61], "V'": [42, 46], "Q": [49, 50], "K'": [38, 40], "R": [51, 52], "K": [[24, 30], [25, 31]], "V": [[27, 33], [29, 37]], "example": [23, 61]}, {"END": [98, 99], "A'": [99, 101], "V'": [83, 86], "Q": [89, 90], "K'": [79, 81], "R": [91, 92], "K": [[63, 70], [64, 71]], "V": [[66, 73], [69, 78]], "example": [62, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include France, Romania, Uganda, Yemen and India.\nPremise: < George likes Kayunga District. Barbara likes Madala. Barbara likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a place in Uganda? Answer: Yes\n Premise: < Lisa likes Aden. David likes Hyderabad Deccan railway station. David likes Lipscani. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a place in Yemen? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [30, 34], "Q": [67, 68], "K'": [27, 28], "R": [69, 70], "K": [[35, 41], [36, 42]], "V": [[38, 44], [40, 48]], "example": [22, 84]}, {"END": [147, 148], "A'": [143, 145], "V'": [92, 94], "Q": [133, 134], "K'": [89, 90], "R": [135, 136], "K": [[95, 107], [96, 108]], "V": [[98, 110], [106, 114]], "example": [85, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Yemen, Uganda, India, France and Romania.\nPremise: < George likes Kayunga District. Barbara likes Madala. Barbara likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a place in Uganda? Answer: Yes\n Premise: < Lisa likes Aden. David likes Hyderabad Deccan railway station. David likes Lipscani. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [30, 34], "Q": [67, 68], "K'": [27, 28], "R": [69, 70], "K": [[35, 41], [36, 42]], "V": [[38, 44], [40, 48]], "example": [22, 84]}, {"END": [146, 147], "A'": [143, 144], "V'": [92, 94], "Q": [133, 134], "K'": [89, 90], "R": [135, 136], "K": [[95, 107], [96, 108]], "V": [[98, 110], [106, 114]], "example": [85, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Japan, Italy, Latvia and Canada.\nPremise: < Christopher likes Minamiarupusu. Sharon likes Desolation Lava Field. Christopher likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Japan? Answer: No\n Premise: < Dorothy likes Eirodziesma. Christopher likes Opel. Christopher likes Sommariva del Bosco. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [38, 43], "Q": [73, 74], "K'": [34, 36], "R": [75, 76], "K": [[24, 44], [25, 45]], "V": [[27, 47], [33, 54]], "example": [19, 88]}, {"END": [152, 153], "A'": [148, 150], "V'": [97, 102], "Q": [138, 139], "K'": [93, 95], "R": [140, 141], "K": [[103, 109], [104, 110]], "V": [[106, 112], [108, 119]], "example": [89, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Germany, Italy, Japan and Canada.\nPremise: < Christopher likes Minamiarupusu. Sharon likes Desolation Lava Field. Christopher likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Japan? Answer: No\n Premise: < Dorothy likes Eirodziesma. Christopher likes Opel. Christopher likes Sommariva del Bosco. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Germany? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [38, 43], "Q": [73, 74], "K'": [34, 36], "R": [75, 76], "K": [[24, 44], [25, 45]], "V": [[27, 47], [33, 54]], "example": [19, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [97, 102], "Q": [138, 139], "K'": [93, 95], "R": [140, 141], "K": [[103, 109], [104, 110]], "V": [[106, 112], [108, 119]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Switzerland, Denmark, France, Canada and Japan.\nPremise: < Jeff likes Vaujany. Deborah likes Fukuno, Toyama. Deborah likes Art Gallery of Ontario. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to a place in Japan? Answer: No\n Premise: < Michael likes Guldborg. Margaret likes Capolago. Margaret likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a place in Denmark? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [27, 31], "Q": [72, 75], "K'": [24, 25], "R": [76, 77], "K": [[32, 44], [35, 47]], "V": [[37, 49], [43, 53]], "example": [19, 89]}, {"END": [148, 149], "A'": [144, 146], "V'": [97, 100], "Q": [134, 135], "K'": [94, 95], "R": [136, 137], "K": [[101, 108], [102, 109]], "V": [[104, 111], [107, 115]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Japan, Denmark, Canada, France and Switzerland.\nPremise: < Jeff likes Vaujany. Deborah likes Fukuno, Toyama. Deborah likes Art Gallery of Ontario. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to a place in Japan? Answer: No\n Premise: < Michael likes Guldborg. Margaret likes Capolago. Margaret likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a place in France? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [27, 31], "Q": [72, 75], "K'": [24, 25], "R": [76, 77], "K": [[32, 44], [35, 47]], "V": [[37, 49], [43, 53]], "example": [19, 89]}, {"END": [147, 148], "A'": [144, 145], "V'": [97, 100], "Q": [134, 135], "K'": [94, 95], "R": [136, 137], "K": [[101, 108], [102, 109]], "V": [[104, 111], [107, 115]], "example": [90, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Tunisia, Hungary, Argentina, Ukraine and Spain.\nPremise: < Kimberly likes Pilis Mountains. Jeff likes Kaniv Reservoir. Jeff likes Ferrobaires. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a place in Hungary? Answer: Yes\n Premise: < Carol likes Tartessos. Edward likes Orpheus Island National Park. Edward likes Mosque of Uqba. >. Answer with Yes or No. Can it be inferred from the premise that Edward does not want to go to a place in Spain? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [33, 36], "Q": [71, 72], "K'": [28, 31], "R": [73, 74], "K": [[37, 46], [38, 47]], "V": [[40, 49], [45, 52]], "example": [23, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [95, 99], "Q": [138, 139], "K'": [92, 93], "R": [140, 141], "K": [[100, 110], [101, 111]], "V": [[103, 113], [109, 119]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Argentina, Tunisia, Ukraine, Hungary, Australia and Spain.\nPremise: < Kimberly likes Pilis Mountains. Jeff likes Kaniv Reservoir. Jeff likes Ferrobaires. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a place in Hungary? Answer: Yes\n Premise: < Carol likes Tartessos. Edward likes Orpheus Island National Park. Edward likes Mosque of Uqba. >. Answer with Yes or No. Can it be inferred from the premise that Edward does not want to go to a place in Australia? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [33, 36], "Q": [71, 72], "K'": [28, 31], "R": [73, 74], "K": [[37, 46], [38, 47]], "V": [[40, 49], [45, 52]], "example": [23, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [95, 99], "Q": [138, 139], "K'": [92, 93], "R": [140, 141], "K": [[100, 110], [101, 111]], "V": [[103, 113], [109, 119]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include France, Liberia, Netherlands, Ukraine, Italy and Norway.\nPremise: < Sharon likes Sapo National Park. John likes Vrienden van het Platteland. John likes Guillaumes. >. Answer with Yes or No. Can it be inferred from the premise that John does not want to go to a place in Liberia? Answer: Yes\n Premise: < Jeff likes Hornnes. Laura likes Borghetto di Vara. Laura likes Putyvl. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to a place in Norway? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [30, 35], "Q": [73, 74], "K'": [26, 28], "R": [75, 76], "K": [[36, 48], [37, 49]], "V": [[39, 51], [47, 54]], "example": [21, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [97, 99], "Q": [135, 136], "K'": [94, 95], "R": [137, 138], "K": [[100, 110], [101, 111]], "V": [[103, 113], [109, 116]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ukraine, Liberia, Netherlands, Italy, France and Norway.\nPremise: < Sharon likes Sapo National Park. John likes Vrienden van het Platteland. John likes Guillaumes. >. Answer with Yes or No. Can it be inferred from the premise that John does not want to go to a place in Liberia? Answer: Yes\n Premise: < Jeff likes Hornnes. Laura likes Borghetto di Vara. Laura likes Putyvl. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to a place in Italy? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [30, 35], "Q": [73, 74], "K'": [26, 28], "R": [75, 76], "K": [[36, 48], [37, 49]], "V": [[39, 51], [47, 54]], "example": [21, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [97, 99], "Q": [135, 136], "K'": [94, 95], "R": [137, 138], "K": [[100, 110], [101, 111]], "V": [[103, 113], [109, 116]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, India, Serbia, Italy, Japan and Haiti.\nPremise: < Ronald likes Nimmitabel. Ronald likes Papanasam. Margaret likes Hispaniola. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in India? Answer: No\n Premise: < Paul likes Minamishitara District, Aichi. Sandra likes Pinosava. Paul likes Welschnofen. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not want to go to a place in Serbia? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [48, 52], "Q": [71, 73], "K'": [45, 46], "R": [74, 75], "K": [[28, 37], [30, 39]], "V": [[32, 41], [36, 44]], "example": [23, 87]}, {"END": [153, 154], "A'": [149, 151], "V'": [109, 112], "Q": [139, 140], "K'": [105, 107], "R": [141, 142], "K": [[92, 113], [93, 114]], "V": [[95, 116], [104, 120]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Haiti, Japan, India, Australia, Serbia and Italy.\nPremise: < Ronald likes Nimmitabel. Ronald likes Papanasam. Margaret likes Hispaniola. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in India? Answer: No\n Premise: < Paul likes Minamishitara District, Aichi. Sandra likes Pinosava. Paul likes Welschnofen. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not want to go to a place in Japan? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [48, 52], "Q": [71, 73], "K'": [45, 46], "R": [74, 75], "K": [[28, 37], [30, 39]], "V": [[32, 41], [36, 44]], "example": [23, 87]}, {"END": [152, 153], "A'": [149, 150], "V'": [109, 112], "Q": [139, 140], "K'": [105, 107], "R": [141, 142], "K": [[92, 113], [93, 114]], "V": [[95, 116], [104, 120]], "example": [88, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Indonesia, Japan, Switzerland, Sweden and Pakistan.\nPremise: < George likes Minamishitara District, Aichi. George likes TUIfly Nordic. Elizabeth likes Canton of Schaffhausen. >. Answer with Yes or No. Can it be inferred from the premise that George does not want to go to a place in Switzerland? Answer: Yes\n Premise: < Robert likes Minamishitara District, Aichi. Robert likes Lodhran Tehsil. Karen likes Persegres Gresik United. >. Answer with Yes or No. Can it be inferred from the premise that Robert does not want to go to a place in Indonesia? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [49, 55], "Q": [74, 75], "K'": [46, 47], "R": [76, 77], "K": [[24, 37], [25, 38]], "V": [[27, 40], [36, 45]], "example": [19, 89]}, {"END": [162, 163], "A'": [158, 160], "V'": [122, 129], "Q": [148, 149], "K'": [118, 120], "R": [150, 151], "K": [[94, 107], [95, 108]], "V": [[97, 110], [106, 117]], "example": [90, 164]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Pakistan, Sweden, Japan, Switzerland and Indonesia.\nPremise: < George likes Minamishitara District, Aichi. George likes TUIfly Nordic. Elizabeth likes Canton of Schaffhausen. >. Answer with Yes or No. Can it be inferred from the premise that George does not want to go to a place in Switzerland? Answer: Yes\n Premise: < Robert likes Minamishitara District, Aichi. Robert likes Lodhran Tehsil. Karen likes Persegres Gresik United. >. Answer with Yes or No. Can it be inferred from the premise that Robert does not want to go to a place in Japan? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [49, 55], "Q": [74, 75], "K'": [46, 47], "R": [76, 77], "K": [[24, 37], [25, 38]], "V": [[27, 40], [36, 45]], "example": [19, 89]}, {"END": [161, 162], "A'": [158, 159], "V'": [122, 129], "Q": [148, 149], "K'": [118, 120], "R": [150, 151], "K": [[94, 107], [95, 108]], "V": [[97, 110], [106, 117]], "example": [90, 163]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include France, India, Guatemala, Iran, Finland and Romania.\nPremise: < Ronald likes Le Puy Foot 43 Auvergne. Kimberly likes Laslea. Ronald likes Vardasht Rural District. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in Iran? Answer: No\n Premise: < Edward likes Iximche. Betty likes Amos Anderson Art Museum. Betty likes Kottarakkara. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a place in Guatemala? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [49, 51], "Q": [82, 84], "K'": [44, 47], "R": [85, 86], "K": [[28, 52], [30, 54]], "V": [[32, 56], [43, 63]], "example": [23, 98]}, {"END": [162, 163], "A'": [157, 160], "V'": [106, 109], "Q": [147, 148], "K'": [103, 104], "R": [149, 150], "K": [[110, 119], [111, 120]], "V": [[113, 122], [118, 128]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Finland, Iran, Romania, Guatemala, France and India.\nPremise: < Ronald likes Le Puy Foot 43 Auvergne. Kimberly likes Laslea. Ronald likes Vardasht Rural District. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in Iran? Answer: No\n Premise: < Edward likes Iximche. Betty likes Amos Anderson Art Museum. Betty likes Kottarakkara. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a place in Finland? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [49, 51], "Q": [82, 84], "K'": [44, 47], "R": [85, 86], "K": [[28, 52], [30, 54]], "V": [[32, 56], [43, 63]], "example": [23, 98]}, {"END": [160, 161], "A'": [157, 158], "V'": [106, 109], "Q": [147, 148], "K'": [103, 104], "R": [149, 150], "K": [[110, 119], [111, 120]], "V": [[113, 122], [118, 128]], "example": [99, 162]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Uganda, India, Russia, Syria, France and Ethiopia.\n< Kayunga District attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Barbara does not want to go to a place in Uganda\n < Gavrilovo-Posadsky District attracts Christopher. Tell Rifaat attracts Christopher. Beles River attracts Mary. >. Christopher does not want to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A'": [60, 63], "V'": [26, 30], "Q": [50, 51], "K'": [32, 33], "R": [52, 53], "K": [[38, 46], [39, 47]], "V": [[34, 40], [36, 44]], "example": [25, 63]}, {"END": [104, 105], "A'": [105, 108], "V'": [86, 89], "Q": [95, 96], "K'": [91, 92], "R": [97, 98], "K": [[76, 84], [77, 85]], "V": [[65, 78], [74, 82]], "example": [64, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Switzerland, Italy, Poland and Bangladesh.\n< Tursi attracts Steven. Staatliche Antikensammlungen attracts Steven. Villigen attracts Deborah. >. Steven does not want to go to a place in Switzerland\n < Lewin Brzeski attracts Laura. Shibganj Upazila, Bogra District attracts George. Gmina Warlubie attracts Laura. >. Laura does not want to go to a place in Bangladesh\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [39, 41], "Q": [49, 50], "K'": [43, 46], "R": [51, 52], "K": [[25, 37], [26, 38]], "V": [[21, 27], [23, 35]], "example": [20, 60]}, {"END": [106, 107], "A'": [107, 110], "V'": [71, 82], "Q": [97, 98], "K'": [84, 85], "R": [99, 100], "K": [[69, 93], [70, 94]], "V": [[62, 86], [67, 91]], "example": [61, 110]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ireland, Iran, Bulgaria, Greece and Italy.\n< Cappoquin attracts Jeff. Dospat Municipality attracts Donna. Leap Castle attracts Jeff. >. Jeff does not want to go to a place in Bulgaria\n < Gavork-e Nalin Rural District attracts William. Hellenic Police attracts Carol. Cocconato attracts Carol. >. Carol does not want to go to a place in Iran\n", "ranges": [{"END": [56, 57], "A'": [57, 59], "V'": [28, 33], "Q": [47, 48], "K'": [35, 37], "R": [49, 50], "K": [[26, 43], [27, 44]], "V": [[20, 38], [24, 41]], "example": [19, 59]}, {"END": [102, 103], "A'": [103, 104], "V'": [61, 71], "Q": [93, 94], "K'": [73, 74], "R": [95, 96], "K": [[81, 89], [82, 90]], "V": [[75, 83], [79, 87]], "example": [60, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Netherlands, Qatar, Italy, Indonesia and Iran.\n< Bernheze attracts Steven. Al Daayen attracts Ruth. Pacentro attracts Steven. >. Steven does not want to go to a place in Qatar\n < Borghetto di Vara attracts Michael. Lajran Rural District attracts Michael. Mandailing language attracts Sharon. >. Michael does not want to go to a place in Indonesia\n", "ranges": [{"END": [54, 55], "A'": [55, 57], "V'": [28, 32], "Q": [45, 46], "K'": [34, 35], "R": [47, 48], "K": [[26, 41], [27, 42]], "V": [[21, 36], [24, 39]], "example": [20, 57]}, {"END": [99, 100], "A'": [100, 102], "V'": [79, 83], "Q": [90, 91], "K'": [85, 87], "R": [92, 93], "K": [[67, 77], [68, 78]], "V": [[59, 69], [65, 75]], "example": [58, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Israel, India, Australia, Egypt, Philippines and Bolivia.\n< Temples of Abu Simbel attracts Christopher. Taronga Western Plains Zoo attracts Carol. Indira Gandhi International Airport attracts Carol. >. Carol does not want to go to a place in Egypt\n < Manila Bay attracts Deborah. Club Aurora attracts William. Ticho House attracts Deborah. >. Deborah does not want to go to a place in Bolivia\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [22, 29], "Q": [57, 58], "K'": [31, 32], "R": [59, 60], "K": [[43, 53], [44, 54]], "V": [[33, 45], [41, 51]], "example": [21, 68]}, {"END": [109, 110], "A'": [110, 112], "V'": [79, 82], "Q": [98, 101], "K'": [84, 85], "R": [102, 103], "K": [[75, 92], [78, 95]], "V": [[70, 86], [73, 90]], "example": [69, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Belgium, Latvia, Russia, Germany and Egypt.\n< Shablykinsky District attracts Laura. Temples of Abu Simbel attracts Jeff. bpost attracts Laura. >. Laura does not want to go to a place in Egypt\n < Madona District attracts Nancy. bpost attracts George. Westerburg attracts George. >. George does not want to go to a place in Latvia\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [30, 37], "Q": [49, 50], "K'": [39, 40], "R": [51, 52], "K": [[28, 45], [29, 46]], "V": [[21, 41], [26, 43]], "example": [20, 60]}, {"END": [93, 94], "A'": [94, 96], "V'": [62, 65], "Q": [84, 85], "K'": [67, 68], "R": [86, 87], "K": [[73, 80], [74, 81]], "V": [[69, 75], [71, 78]], "example": [61, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Estonia, Argentina, France, Germany, Brazil and India.\n< Ghatanji attracts Mary. Isla Grande de Tierra del Fuego attracts Thomas. Bouygues Telecom attracts Mary. >. Mary does not want to go to a place in Argentina\n < Munich Residence attracts Karen. Tartu Town Hall attracts Karen. Nova Friburgo attracts Mark. >. Karen does not want to go to a place in Brazil\n", "ranges": [{"END": [63, 64], "A'": [64, 65], "V'": [30, 39], "Q": [54, 55], "K'": [41, 42], "R": [56, 57], "K": [[28, 50], [29, 51]], "V": [[22, 43], [26, 48]], "example": [21, 65]}, {"END": [107, 108], "A'": [108, 109], "V'": [86, 91], "Q": [97, 99], "K'": [93, 94], "R": [100, 101], "K": [[73, 83], [75, 85]], "V": [[67, 76], [71, 81]], "example": [66, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Austria, Greece, Libya, Denmark and Croatia.\n< Garbeta attracts Laura. Dornbirn attracts Laura. Tovarnik attracts Ronald. >. Laura does not want to go to a place in Croatia\n < Lindholm station attracts Richard. Didymoteicho attracts Richard. Wazzin attracts Dorothy. >. Richard does not want to go to a place in Libya\n", "ranges": [{"END": [58, 59], "A'": [59, 61], "V'": [38, 42], "Q": [49, 50], "K'": [44, 46], "R": [51, 52], "K": [[28, 36], [29, 37]], "V": [[24, 30], [26, 34]], "example": [23, 61]}, {"END": [98, 99], "A'": [99, 101], "V'": [79, 82], "Q": [89, 90], "K'": [84, 86], "R": [91, 92], "K": [[68, 77], [69, 78]], "V": [[63, 70], [66, 75]], "example": [62, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include France, Romania, Uganda, Yemen and India.\nPremise: < Kayunga District attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a place in Uganda? Answer: Yes\n Premise: < Aden attracts Lisa. Hyderabad Deccan railway station attracts David. Lipscani attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a place in Yemen? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [27, 31], "Q": [67, 68], "K'": [33, 34], "R": [69, 70], "K": [[39, 47], [40, 48]], "V": [[35, 41], [37, 45]], "example": [22, 84]}, {"END": [147, 148], "A'": [143, 145], "V'": [89, 91], "Q": [133, 134], "K'": [93, 94], "R": [135, 136], "K": [[105, 113], [106, 114]], "V": [[95, 107], [103, 111]], "example": [85, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Yemen, Uganda, India, France and Romania.\nPremise: < Kayunga District attracts George. Madala attracts Barbara. Lannemezan attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not want to go to a place in Uganda? Answer: Yes\n Premise: < Aden attracts Lisa. Hyderabad Deccan railway station attracts David. Lipscani attracts David. >. Answer with Yes or No. Can it be inferred from the premise that David does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [27, 31], "Q": [67, 68], "K'": [33, 34], "R": [69, 70], "K": [[39, 47], [40, 48]], "V": [[35, 41], [37, 45]], "example": [22, 84]}, {"END": [146, 147], "A'": [143, 144], "V'": [89, 91], "Q": [133, 134], "K'": [93, 94], "R": [135, 136], "K": [[105, 113], [106, 114]], "V": [[95, 107], [103, 111]], "example": [85, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Japan, Italy, Latvia and Canada.\nPremise: < Minamiarupusu attracts Christopher. Desolation Lava Field attracts Sharon. Annweiler am Trifels attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Japan? Answer: No\n Premise: < Eirodziesma attracts Dorothy. Opel attracts Christopher. Sommariva del Bosco attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [34, 39], "Q": [73, 74], "K'": [41, 43], "R": [75, 76], "K": [[32, 53], [33, 54]], "V": [[24, 44], [30, 51]], "example": [19, 88]}, {"END": [152, 153], "A'": [148, 150], "V'": [93, 98], "Q": [138, 139], "K'": [100, 102], "R": [140, 141], "K": [[107, 118], [108, 119]], "V": [[103, 109], [105, 116]], "example": [89, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Germany, Italy, Japan and Canada.\nPremise: < Minamiarupusu attracts Christopher. Desolation Lava Field attracts Sharon. Annweiler am Trifels attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Japan? Answer: No\n Premise: < Eirodziesma attracts Dorothy. Opel attracts Christopher. Sommariva del Bosco attracts Christopher. >. Answer with Yes or No. Can it be inferred from the premise that Christopher does not want to go to a place in Germany? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [34, 39], "Q": [73, 74], "K'": [41, 43], "R": [75, 76], "K": [[32, 53], [33, 54]], "V": [[24, 44], [30, 51]], "example": [19, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [93, 98], "Q": [138, 139], "K'": [100, 102], "R": [140, 141], "K": [[107, 118], [108, 119]], "V": [[103, 109], [105, 116]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Switzerland, Denmark, France, Canada and Japan.\nPremise: < Vaujany attracts Jeff. Fukuno, Toyama attracts Deborah. Art Gallery of Ontario attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to a place in Japan? Answer: No\n Premise: < Guldborg attracts Michael. Capolago attracts Margaret. Lannemezan attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a place in Denmark? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [24, 28], "Q": [72, 75], "K'": [30, 31], "R": [76, 77], "K": [[40, 50], [43, 53]], "V": [[32, 44], [38, 48]], "example": [19, 89]}, {"END": [148, 149], "A'": [144, 146], "V'": [94, 97], "Q": [134, 135], "K'": [99, 100], "R": [136, 137], "K": [[106, 114], [107, 115]], "V": [[101, 108], [104, 112]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Japan, Denmark, Canada, France and Switzerland.\nPremise: < Vaujany attracts Jeff. Fukuno, Toyama attracts Deborah. Art Gallery of Ontario attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not want to go to a place in Japan? Answer: No\n Premise: < Guldborg attracts Michael. Capolago attracts Margaret. Lannemezan attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret does not want to go to a place in France? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [24, 28], "Q": [72, 75], "K'": [30, 31], "R": [76, 77], "K": [[40, 50], [43, 53]], "V": [[32, 44], [38, 48]], "example": [19, 89]}, {"END": [147, 148], "A'": [144, 145], "V'": [94, 97], "Q": [134, 135], "K'": [99, 100], "R": [136, 137], "K": [[106, 114], [107, 115]], "V": [[101, 108], [104, 112]], "example": [90, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Tunisia, Hungary, Argentina, Ukraine and Spain.\nPremise: < Pilis Mountains attracts Kimberly. Kaniv Reservoir attracts Jeff. Ferrobaires attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a place in Hungary? Answer: Yes\n Premise: < Tartessos attracts Carol. Orpheus Island National Park attracts Edward. Mosque of Uqba attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Edward does not want to go to a place in Spain? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [28, 31], "Q": [71, 72], "K'": [33, 36], "R": [73, 74], "K": [[44, 51], [45, 52]], "V": [[37, 46], [42, 49]], "example": [23, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [92, 96], "Q": [138, 139], "K'": [98, 99], "R": [140, 141], "K": [[108, 118], [109, 119]], "V": [[100, 110], [106, 116]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Argentina, Tunisia, Ukraine, Hungary, Australia and Spain.\nPremise: < Pilis Mountains attracts Kimberly. Kaniv Reservoir attracts Jeff. Ferrobaires attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not want to go to a place in Hungary? Answer: Yes\n Premise: < Tartessos attracts Carol. Orpheus Island National Park attracts Edward. Mosque of Uqba attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that Edward does not want to go to a place in Australia? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [28, 31], "Q": [71, 72], "K'": [33, 36], "R": [73, 74], "K": [[44, 51], [45, 52]], "V": [[37, 46], [42, 49]], "example": [23, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [92, 96], "Q": [138, 139], "K'": [98, 99], "R": [140, 141], "K": [[108, 118], [109, 119]], "V": [[100, 110], [106, 116]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include France, Liberia, Netherlands, Ukraine, Italy and Norway.\nPremise: < Sapo National Park attracts Sharon. Vrienden van het Platteland attracts John. Guillaumes attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John does not want to go to a place in Liberia? Answer: Yes\n Premise: < Hornnes attracts Jeff. Borghetto di Vara attracts Laura. Putyvl attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to a place in Norway? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [26, 31], "Q": [73, 74], "K'": [33, 35], "R": [75, 76], "K": [[46, 53], [47, 54]], "V": [[36, 48], [44, 51]], "example": [21, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [94, 96], "Q": [135, 136], "K'": [98, 99], "R": [137, 138], "K": [[108, 115], [109, 116]], "V": [[100, 110], [106, 113]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ukraine, Liberia, Netherlands, Italy, France and Norway.\nPremise: < Sapo National Park attracts Sharon. Vrienden van het Platteland attracts John. Guillaumes attracts John. >. Answer with Yes or No. Can it be inferred from the premise that John does not want to go to a place in Liberia? Answer: Yes\n Premise: < Hornnes attracts Jeff. Borghetto di Vara attracts Laura. Putyvl attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not want to go to a place in Italy? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [26, 31], "Q": [73, 74], "K'": [33, 35], "R": [75, 76], "K": [[46, 53], [47, 54]], "V": [[36, 48], [44, 51]], "example": [21, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [94, 96], "Q": [135, 136], "K'": [98, 99], "R": [137, 138], "K": [[108, 115], [109, 116]], "V": [[100, 110], [106, 113]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, India, Serbia, Italy, Japan and Haiti.\nPremise: < Nimmitabel attracts Ronald. Papanasam attracts Ronald. Hispaniola attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in India? Answer: No\n Premise: < Minamishitara District, Aichi attracts Paul. Pinosava attracts Sandra. Welschnofen attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not want to go to a place in Serbia? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [45, 49], "Q": [71, 73], "K'": [51, 52], "R": [74, 75], "K": [[34, 42], [36, 44]], "V": [[28, 37], [32, 40]], "example": [23, 87]}, {"END": [153, 154], "A'": [149, 151], "V'": [105, 108], "Q": [139, 140], "K'": [110, 112], "R": [141, 142], "K": [[103, 119], [104, 120]], "V": [[92, 113], [101, 117]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Haiti, Japan, India, Australia, Serbia and Italy.\nPremise: < Nimmitabel attracts Ronald. Papanasam attracts Ronald. Hispaniola attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in India? Answer: No\n Premise: < Minamishitara District, Aichi attracts Paul. Pinosava attracts Sandra. Welschnofen attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not want to go to a place in Japan? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [45, 49], "Q": [71, 73], "K'": [51, 52], "R": [74, 75], "K": [[34, 42], [36, 44]], "V": [[28, 37], [32, 40]], "example": [23, 87]}, {"END": [152, 153], "A'": [149, 150], "V'": [105, 108], "Q": [139, 140], "K'": [110, 112], "R": [141, 142], "K": [[103, 119], [104, 120]], "V": [[92, 113], [101, 117]], "example": [88, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Indonesia, Japan, Switzerland, Sweden and Pakistan.\nPremise: < Minamishitara District, Aichi attracts George. TUIfly Nordic attracts George. Canton of Schaffhausen attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that George does not want to go to a place in Switzerland? Answer: Yes\n Premise: < Minamishitara District, Aichi attracts Robert. Lodhran Tehsil attracts Robert. Persegres Gresik United attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that Robert does not want to go to a place in Indonesia? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [46, 52], "Q": [74, 75], "K'": [54, 55], "R": [76, 77], "K": [[35, 44], [36, 45]], "V": [[24, 37], [33, 42]], "example": [19, 89]}, {"END": [162, 163], "A'": [158, 160], "V'": [118, 125], "Q": [148, 149], "K'": [127, 129], "R": [150, 151], "K": [[105, 116], [106, 117]], "V": [[94, 107], [103, 114]], "example": [90, 164]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Pakistan, Sweden, Japan, Switzerland and Indonesia.\nPremise: < Minamishitara District, Aichi attracts George. TUIfly Nordic attracts George. Canton of Schaffhausen attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that George does not want to go to a place in Switzerland? Answer: Yes\n Premise: < Minamishitara District, Aichi attracts Robert. Lodhran Tehsil attracts Robert. Persegres Gresik United attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that Robert does not want to go to a place in Japan? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [46, 52], "Q": [74, 75], "K'": [54, 55], "R": [76, 77], "K": [[35, 44], [36, 45]], "V": [[24, 37], [33, 42]], "example": [19, 89]}, {"END": [161, 162], "A'": [158, 159], "V'": [118, 125], "Q": [148, 149], "K'": [127, 129], "R": [150, 151], "K": [[105, 116], [106, 117]], "V": [[94, 107], [103, 114]], "example": [90, 163]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include France, India, Guatemala, Iran, Finland and Romania.\nPremise: < Le Puy Foot 43 Auvergne attracts Ronald. Laslea attracts Kimberly. Vardasht Rural District attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in Iran? Answer: No\n Premise: < Iximche attracts Edward. Amos Anderson Art Museum attracts Betty. Kottarakkara attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a place in Guatemala? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [44, 46], "Q": [82, 84], "K'": [48, 51], "R": [85, 86], "K": [[41, 61], [43, 63]], "V": [[28, 52], [39, 59]], "example": [23, 98]}, {"END": [162, 163], "A'": [157, 160], "V'": [103, 106], "Q": [147, 148], "K'": [108, 109], "R": [149, 150], "K": [[117, 127], [118, 128]], "V": [[110, 119], [115, 125]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Finland, Iran, Romania, Guatemala, France and India.\nPremise: < Le Puy Foot 43 Auvergne attracts Ronald. Laslea attracts Kimberly. Vardasht Rural District attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not want to go to a place in Iran? Answer: No\n Premise: < Iximche attracts Edward. Amos Anderson Art Museum attracts Betty. Kottarakkara attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not want to go to a place in Finland? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [44, 46], "Q": [82, 84], "K'": [48, 51], "R": [85, 86], "K": [[41, 61], [43, 63]], "V": [[28, 52], [39, 59]], "example": [23, 98]}, {"END": [160, 161], "A'": [157, 158], "V'": [103, 106], "Q": [147, 148], "K'": [108, 109], "R": [149, 150], "K": [[117, 127], [118, 128]], "V": [[110, 119], [115, 125]], "example": [99, 162]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Ust-Katav. Richard likes Leiria. Kevin likes Chol Kiri District. >. So who wants to go to a place in Cambodia? Kevin\n < Sandra likes Fawkner. Kevin likes Neighbourhoods in Kolkata. Elizabeth likes Fischenthal. >. So who wants to go to a place in Switzerland? Elizabeth\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [20, 21], "Q": [40, 42], "K": [23, 28], "R": null, "K'": [[6, 16], [12, 19]], "V'": [[2, 13], [4, 14]], "example": [1, 44]}, {"END": [87, 88], "A": [88, 89], "V": [67, 68], "Q": [86, 87], "K": [70, 74], "R": null, "K'": [[50, 57], [53, 66]], "V'": [[46, 54], [48, 55]], "example": [45, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jeff likes Chu Lai Base Area. Donald likes Erbil SC. Sarah likes The Forks, Winnipeg. >. So who wants to go to a place in Vietnam? Jeff\n < Ronald likes Annweiler am Trifels. Susan likes Sapo National Park. Dorothy likes Mediolanum Forum. >. So who wants to go to a place in Liberia? Susan\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [2, 3], "Q": [43, 44], "K": [5, 11], "R": null, "K'": [[15, 22], [18, 31]], "V'": [[12, 19], [13, 20]], "example": [1, 46]}, {"END": [91, 92], "A": [92, 93], "V": [60, 61], "Q": [89, 91], "K": [63, 68], "R": null, "K'": [[52, 73], [59, 77]], "V'": [[48, 69], [50, 71]], "example": [47, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven likes Ticho House. Brian likes Cubagua. Ruth likes Narman. >. So who wants to go to a place in Venezuela? Brian\n < William likes Hellenic Police. Kimberly likes Hultsfred Municipality. Barbara likes Sapo National Park. >. So who wants to go to a place in Liberia? Barbara\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [10, 11], "Q": [33, 34], "K": [13, 15], "R": null, "K'": [[5, 19], [9, 21]], "V'": [[2, 16], [3, 17]], "example": [1, 36]}, {"END": [80, 81], "A": [81, 82], "V": [58, 59], "Q": [78, 80], "K": [61, 66], "R": null, "K'": [[41, 51], [45, 57]], "V'": [[38, 46], [39, 49]], "example": [37, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Betty likes Piedecuesta. Margaret likes Palladam. Mary likes public transport in Istanbul. >. So who wants to go to a place in India? Margaret\n < Kenneth likes St Lucia. Donna likes Madona District. Brian likes Garkan Rural District. >. So who wants to go to a place in Iran? Brian\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [11, 12], "Q": [40, 41], "K": [14, 18], "R": null, "K'": [[5, 22], [10, 28]], "V'": [[2, 19], [3, 20]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 84], "V": [60, 61], "Q": [81, 82], "K": [63, 69], "R": null, "K'": [[48, 56], [51, 59]], "V'": [[45, 52], [46, 54]], "example": [44, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol likes Langtang National Park. Donna likes Kazinga Channel. Joseph likes Zwiefalten. >. So who wants to go to a place in Nepal? Carol\n < Michelle likes Guelma Province. Helen likes Central Black Forest. Joseph likes Toronto Police Service. >. So who wants to go to a place in Algeria? Michelle\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [2, 3], "Q": [39, 41], "K": [5, 10], "R": null, "K'": [[15, 23], [19, 27]], "V'": [[11, 20], [13, 21]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 85], "V": [45, 47], "Q": [79, 82], "K": [49, 53], "R": null, "K'": [[57, 64], [60, 67]], "V'": [[54, 61], [55, 62]], "example": [44, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David likes 1960 Summer Olympics. Carol likes Suwayq. Maria likes Manila Light Rail Transit System. >. So who wants to go to a place in Oman? Carol\n < Ronald likes Acolman Municipality. Ruth likes Annweiler am Trifels. Anthony likes Band-e Kaisar. >. So who wants to go to a place in Mexico? Ronald\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [13, 14], "Q": [42, 44], "K": [16, 19], "R": null, "K'": [[6, 23], [12, 30]], "V'": [[2, 20], [3, 21]], "example": [1, 46]}, {"END": [90, 91], "A": [91, 93], "V": [48, 50], "Q": [89, 90], "K": [52, 57], "R": null, "K'": [[61, 72], [68, 77]], "V'": [[58, 69], [59, 70]], "example": [47, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael likes Buchans. Sandra likes Haut Atlas. Daniel likes Nuri. >. So who wants to go to a place in Morocco? Sandra\n < Kevin likes Alpokalja. Ronald likes Boinpalle mandal. Elizabeth likes Mosque of Uqba. >. So who wants to go to a place in Tunisia? Elizabeth\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [8, 10], "Q": [32, 35], "K": [12, 14], "R": null, "K'": [[5, 18], [7, 20]], "V'": [[2, 15], [3, 16]], "example": [1, 38]}, {"END": [83, 84], "A": [84, 85], "V": [59, 60], "Q": [80, 83], "K": [62, 68], "R": null, "K'": [[43, 52], [47, 58]], "V'": [[40, 48], [41, 50]], "example": [39, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Patricia likes Roman Catholic Archdiocese of Ljubljana. Richard likes Battle of Montereau. Paul likes Nimmitabel. >. So who wants to go to a place in Slovenia? Patricia\n < Mary likes West Darfur. Richard likes Wellington Island. Michael likes Wanne-Eickel Central Station. >. So who wants to go to a place in Sudan? Mary\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [2, 5], "Q": [47, 49], "K": [7, 18], "R": null, "K'": [[22, 31], [27, 35]], "V'": [[19, 28], [20, 29]], "example": [1, 53]}, {"END": [94, 95], "A": [95, 96], "V": [55, 56], "Q": [92, 94], "K": [58, 61], "R": null, "K'": [[65, 72], [68, 80]], "V'": [[62, 69], [63, 70]], "example": [54, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Richard likes Leiria. Kevin likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is Sharon? Answer: No\n Premise: < Sandra likes Al-Hasakah Governorate. Kevin likes Ledaal. Elizabeth likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Elizabeth? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [23, 24], "Q": [60, 62], "K": [26, 31], "R": null, "K'": [[9, 19], [15, 22]], "V'": [[5, 16], [7, 17]], "example": [1, 69]}, {"END": [135, 136], "A": [132, 133], "V": [93, 94], "Q": [129, 131], "K": [96, 100], "R": null, "K'": [[78, 89], [85, 92]], "V'": [[74, 86], [76, 87]], "example": [70, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Richard likes Leiria. Kevin likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is Sharon? Answer: No\n Premise: < Sandra likes Al-Hasakah Governorate. Kevin likes Ledaal. Elizabeth likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Kevin? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [23, 24], "Q": [60, 62], "K": [26, 31], "R": null, "K'": [[9, 19], [15, 22]], "V'": [[5, 16], [7, 17]], "example": [1, 69]}, {"END": [135, 136], "A": [132, 133], "V": [93, 94], "Q": [129, 131], "K": [96, 100], "R": null, "K'": [[78, 89], [85, 92]], "V'": [[74, 86], [76, 87]], "example": [70, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Villigen. Linda likes Staatliche Antikensammlungen. Kenneth likes Tursi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is Christopher? Answer: Yes\n Premise: < Deborah likes Hrtkovci. Kevin likes DESTATIS. John likes Hadzhidimovo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is Deborah? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [5, 6], "Q": [58, 59], "K": [8, 10], "R": null, "K'": [[15, 27], [23, 29]], "V'": [[11, 24], [13, 25]], "example": [1, 65]}, {"END": [132, 133], "A": [127, 130], "V": [70, 73], "Q": [124, 126], "K": [75, 79], "R": null, "K'": [[83, 90], [86, 95]], "V'": [[80, 87], [81, 88]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Villigen. Linda likes Staatliche Antikensammlungen. Kenneth likes Tursi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is Christopher? Answer: Yes\n Premise: < Deborah likes Hrtkovci. Kevin likes DESTATIS. John likes Hadzhidimovo. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is John? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [5, 6], "Q": [58, 59], "K": [8, 10], "R": null, "K'": [[15, 27], [23, 29]], "V'": [[11, 24], [13, 25]], "example": [1, 65]}, {"END": [130, 131], "A": [127, 128], "V": [70, 73], "Q": [124, 126], "K": [75, 79], "R": null, "K'": [[83, 90], [86, 95]], "V'": [[80, 87], [81, 88]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sarnaki. Edward likes Taksim Military Barracks. Robert likes Dawa River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is Mary? Answer: No\n Premise: < Betty likes Thuringian Highland. Steven likes Iximche. Jennifer likes Veyrier. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Guatemala is Steven? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [22, 23], "Q": [57, 59], "K": [25, 28], "R": null, "K'": [[8, 15], [11, 21]], "V'": [[5, 12], [6, 13]], "example": [1, 65]}, {"END": [129, 130], "A": [126, 127], "V": [79, 80], "Q": [122, 125], "K": [82, 85], "R": null, "K'": [[73, 90], [78, 93]], "V'": [[70, 86], [71, 88]], "example": [66, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary likes Sarnaki. Edward likes Taksim Military Barracks. Robert likes Dawa River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is Mary? Answer: No\n Premise: < Betty likes Thuringian Highland. Steven likes Iximche. Jennifer likes Veyrier. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Guatemala is Betty? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [22, 23], "Q": [57, 59], "K": [25, 28], "R": null, "K'": [[8, 15], [11, 21]], "V'": [[5, 12], [6, 13]], "example": [1, 65]}, {"END": [129, 130], "A": [126, 127], "V": [79, 80], "Q": [122, 125], "K": [82, 85], "R": null, "K'": [[73, 90], [78, 93]], "V'": [[70, 86], [71, 88]], "example": [66, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Kondotty. Sharon likes Idalium. Anthony likes Chaville. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is Sharon? Answer: Yes\n Premise: < Laura likes Taronga Western Plains Zoo. Kimberly likes Atromitos Piraeus F.C. Ruth likes Casiquiare canal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is Ruth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [13, 15], "Q": [56, 59], "K": [17, 20], "R": null, "K'": [[8, 24], [12, 27]], "V'": [[5, 21], [6, 22]], "example": [1, 66]}, {"END": [140, 141], "A": [137, 138], "V": [98, 99], "Q": [135, 136], "K": [101, 106], "R": null, "K'": [[74, 88], [82, 97]], "V'": [[71, 83], [72, 86]], "example": [67, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Kondotty. Sharon likes Idalium. Anthony likes Chaville. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is Sharon? Answer: Yes\n Premise: < Laura likes Taronga Western Plains Zoo. Kimberly likes Atromitos Piraeus F.C. Ruth likes Casiquiare canal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is Kimberly? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [13, 15], "Q": [56, 59], "K": [17, 20], "R": null, "K'": [[8, 24], [12, 27]], "V'": [[5, 21], [6, 22]], "example": [1, 66]}, {"END": [142, 143], "A": [137, 140], "V": [98, 99], "Q": [135, 136], "K": [101, 106], "R": null, "K'": [[74, 88], [82, 97]], "V'": [[71, 83], [72, 86]], "example": [67, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Velbert. Anthony likes Bird's Head Peninsula. Deborah likes Dent Island Light. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is Charles? Answer: No\n Premise: < John likes Stara Zagora. Ronald likes Gobardanga. Deborah likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is John? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [11, 12], "Q": [60, 62], "K": [14, 21], "R": null, "K'": [[8, 27], [10, 31]], "V'": [[5, 22], [6, 25]], "example": [1, 68]}, {"END": [132, 133], "A": [129, 130], "V": [73, 74], "Q": [126, 128], "K": [76, 80], "R": null, "K'": [[85, 95], [89, 97]], "V'": [[81, 90], [83, 93]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Velbert. Anthony likes Bird's Head Peninsula. Deborah likes Dent Island Light. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is Charles? Answer: No\n Premise: < John likes Stara Zagora. Ronald likes Gobardanga. Deborah likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is Ronald? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [11, 12], "Q": [60, 62], "K": [14, 21], "R": null, "K'": [[8, 27], [10, 31]], "V'": [[5, 22], [6, 25]], "example": [1, 68]}, {"END": [133, 134], "A": [129, 131], "V": [73, 74], "Q": [126, 128], "K": [76, 80], "R": null, "K'": [[85, 95], [89, 97]], "V'": [[81, 90], [83, 93]], "example": [69, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra likes Khmilnyk. Donna likes Sidhi district. Betty likes Soalala District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is Betty? Answer: Yes\n Premise: < Dorothy likes Alpokalja. Margaret likes Jan Amora. James likes Peremyshliany. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ukraine is James? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [23, 24], "Q": [59, 62], "K": [26, 30], "R": null, "K'": [[9, 19], [14, 22]], "V'": [[5, 15], [7, 17]], "example": [1, 68]}, {"END": [131, 132], "A": [128, 129], "V": [89, 90], "Q": [126, 127], "K": [92, 97], "R": null, "K'": [[77, 85], [81, 88]], "V'": [[73, 82], [75, 83]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra likes Khmilnyk. Donna likes Sidhi district. Betty likes Soalala District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is Betty? Answer: Yes\n Premise: < Dorothy likes Alpokalja. Margaret likes Jan Amora. James likes Peremyshliany. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ukraine is Margaret? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [23, 24], "Q": [59, 62], "K": [26, 30], "R": null, "K'": [[9, 19], [14, 22]], "V'": [[5, 15], [7, 17]], "example": [1, 68]}, {"END": [131, 132], "A": [128, 129], "V": [89, 90], "Q": [126, 127], "K": [92, 97], "R": null, "K'": [[77, 85], [81, 88]], "V'": [[73, 82], [75, 83]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Roman Catholic Archdiocese of Ljubljana. Richard likes Battle of Montereau. Paul likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Slovenia is Paul? Answer: No\n Premise: < Mary likes Pampilhosa da Serra. Richard likes Tinguiririca River. Michael likes Wanne-Eickel Central Station. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is Mary? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [5, 8], "Q": [67, 69], "K": [10, 21], "R": null, "K'": [[25, 34], [30, 38]], "V'": [[22, 31], [23, 32]], "example": [1, 75]}, {"END": [147, 148], "A": [144, 145], "V": [80, 81], "Q": [142, 143], "K": [83, 91], "R": null, "K'": [[95, 105], [101, 113]], "V'": [[92, 102], [93, 103]], "example": [76, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia likes Roman Catholic Archdiocese of Ljubljana. Richard likes Battle of Montereau. Paul likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Slovenia is Paul? Answer: No\n Premise: < Mary likes Pampilhosa da Serra. Richard likes Tinguiririca River. Michael likes Wanne-Eickel Central Station. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is Richard? Answer: No\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [5, 8], "Q": [67, 69], "K": [10, 21], "R": null, "K'": [[25, 34], [30, 38]], "V'": [[22, 31], [23, 32]], "example": [1, 75]}, {"END": [147, 148], "A": [144, 145], "V": [80, 81], "Q": [142, 143], "K": [83, 91], "R": null, "K'": [[95, 105], [101, 113]], "V'": [[92, 102], [93, 103]], "example": [76, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Lerik District. Deborah likes Greater Rio de Janeiro. John likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Azerbaijan is Margaret? Answer: Yes\n Premise: < Patricia likes Eibenstock. Edward likes Astrid Lindgren Memorial Award. Jeff likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Jeff? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [5, 6], "Q": [59, 64], "K": [8, 12], "R": null, "K'": [[18, 27], [23, 30]], "V'": [[13, 24], [16, 25]], "example": [1, 70]}, {"END": [137, 138], "A": [134, 135], "V": [95, 96], "Q": [131, 133], "K": [98, 102], "R": null, "K'": [[80, 87], [83, 94]], "V'": [[75, 84], [78, 85]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Lerik District. Deborah likes Greater Rio de Janeiro. John likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Azerbaijan is Margaret? Answer: Yes\n Premise: < Patricia likes Eibenstock. Edward likes Astrid Lindgren Memorial Award. Jeff likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Edward? Answer: No\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [5, 6], "Q": [59, 64], "K": [8, 12], "R": null, "K'": [[18, 27], [23, 30]], "V'": [[13, 24], [16, 25]], "example": [1, 70]}, {"END": [137, 138], "A": [134, 135], "V": [95, 96], "Q": [131, 133], "K": [98, 102], "R": null, "K'": [[80, 87], [83, 94]], "V'": [[75, 84], [78, 85]], "example": [71, 139]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ust-Katav attracts Sharon. Leiria attracts Richard. Chol Kiri District attracts Kevin. >. So who wants to go to a place in Cambodia? Kevin\n < Fawkner attracts Sandra. Neighbourhoods in Kolkata attracts Kevin. Fischenthal attracts Elizabeth. >. So who wants to go to a place in Switzerland? Elizabeth\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [27, 28], "Q": [40, 42], "K": [20, 25], "R": null, "K'": [[2, 13], [8, 16]], "V'": [[10, 18], [12, 19]], "example": [1, 44]}, {"END": [87, 88], "A": [88, 89], "V": [73, 74], "Q": [86, 87], "K": [67, 71], "R": null, "K'": [[46, 54], [49, 63]], "V'": [[51, 65], [53, 66]], "example": [45, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Chu Lai Base Area attracts Jeff. Erbil SC attracts Donald. The Forks, Winnipeg attracts Sarah. >. So who wants to go to a place in Vietnam? Jeff\n < Annweiler am Trifels attracts Ronald. Sapo National Park attracts Susan. Mediolanum Forum attracts Dorothy. >. So who wants to go to a place in Liberia? Susan\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [10, 11], "Q": [43, 44], "K": [2, 8], "R": null, "K'": [[12, 19], [15, 28]], "V'": [[17, 30], [18, 31]], "example": [1, 46]}, {"END": [91, 92], "A": [92, 93], "V": [67, 68], "Q": [89, 91], "K": [60, 65], "R": null, "K'": [[48, 69], [55, 73]], "V'": [[57, 75], [59, 77]], "example": [47, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ticho House attracts Steven. Cubagua attracts Brian. Narman attracts Ruth. >. So who wants to go to a place in Venezuela? Brian\n < Hellenic Police attracts William. Hultsfred Municipality attracts Kimberly. Sapo National Park attracts Barbara. >. So who wants to go to a place in Liberia? Barbara\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [14, 15], "Q": [33, 34], "K": [10, 12], "R": null, "K'": [[2, 16], [6, 18]], "V'": [[8, 20], [9, 21]], "example": [1, 36]}, {"END": [80, 81], "A": [81, 82], "V": [65, 66], "Q": [78, 80], "K": [58, 63], "R": null, "K'": [[38, 46], [42, 52]], "V'": [[44, 54], [45, 57]], "example": [37, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Piedecuesta attracts Betty. Palladam attracts Margaret. public transport in Istanbul attracts Mary. >. So who wants to go to a place in India? Margaret\n < St Lucia attracts Kenneth. Madona District attracts Donna. Garkan Rural District attracts Brian. >. So who wants to go to a place in Iran? Brian\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [17, 18], "Q": [40, 41], "K": [11, 15], "R": null, "K'": [[2, 19], [7, 25]], "V'": [[9, 27], [10, 28]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 84], "V": [68, 69], "Q": [81, 82], "K": [60, 66], "R": null, "K'": [[45, 52], [48, 55]], "V'": [[50, 57], [51, 59]], "example": [44, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Langtang National Park attracts Carol. Kazinga Channel attracts Donna. Zwiefalten attracts Joseph. >. So who wants to go to a place in Nepal? Carol\n < Guelma Province attracts Michelle. Central Black Forest attracts Helen. Toronto Police Service attracts Joseph. >. So who wants to go to a place in Algeria? Michelle\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [9, 10], "Q": [39, 41], "K": [2, 7], "R": null, "K'": [[11, 20], [15, 24]], "V'": [[17, 26], [19, 27]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 85], "V": [51, 53], "Q": [79, 82], "K": [45, 49], "R": null, "K'": [[54, 61], [57, 64]], "V'": [[59, 66], [60, 67]], "example": [44, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< 1960 Summer Olympics attracts David. Suwayq attracts Carol. Manila Light Rail Transit System attracts Maria. >. So who wants to go to a place in Oman? Carol\n < Acolman Municipality attracts Ronald. Annweiler am Trifels attracts Ruth. Band-e Kaisar attracts Anthony. >. So who wants to go to a place in Mexico? Ronald\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [18, 19], "Q": [42, 44], "K": [13, 16], "R": null, "K'": [[3, 20], [9, 27]], "V'": [[11, 29], [12, 30]], "example": [1, 46]}, {"END": [90, 91], "A": [91, 93], "V": [55, 57], "Q": [89, 90], "K": [48, 53], "R": null, "K'": [[58, 69], [65, 74]], "V'": [[67, 76], [68, 77]], "example": [47, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Buchans attracts Michael. Haut Atlas attracts Sandra. Nuri attracts Daniel. >. So who wants to go to a place in Morocco? Sandra\n < Alpokalja attracts Kevin. Boinpalle mandal attracts Ronald. Mosque of Uqba attracts Elizabeth. >. So who wants to go to a place in Tunisia? Elizabeth\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [12, 14], "Q": [32, 35], "K": [8, 10], "R": null, "K'": [[2, 15], [4, 17]], "V'": [[6, 19], [7, 20]], "example": [1, 38]}, {"END": [83, 84], "A": [84, 85], "V": [67, 68], "Q": [80, 83], "K": [59, 65], "R": null, "K'": [[40, 48], [44, 54]], "V'": [[46, 56], [47, 58]], "example": [39, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Roman Catholic Archdiocese of Ljubljana attracts Patricia. Battle of Montereau attracts Richard. Nimmitabel attracts Paul. >. So who wants to go to a place in Slovenia? Patricia\n < West Darfur attracts Mary. Wellington Island attracts Richard. Wanne-Eickel Central Station attracts Michael. >. So who wants to go to a place in Sudan? Mary\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [15, 18], "Q": [47, 49], "K": [2, 13], "R": null, "K'": [[19, 28], [24, 32]], "V'": [[26, 34], [27, 35]], "example": [1, 53]}, {"END": [94, 95], "A": [95, 96], "V": [60, 61], "Q": [92, 94], "K": [55, 58], "R": null, "K'": [[62, 69], [65, 77]], "V'": [[67, 79], [68, 80]], "example": [54, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Leiria attracts Richard. Chol Kiri District attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is Sharon? Answer: No\n Premise: < Al-Hasakah Governorate attracts Sandra. Ledaal attracts Kevin. Al Daayen attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Elizabeth? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [30, 31], "Q": [60, 62], "K": [23, 28], "R": null, "K'": [[5, 16], [11, 19]], "V'": [[13, 21], [15, 22]], "example": [1, 69]}, {"END": [135, 136], "A": [132, 133], "V": [99, 100], "Q": [129, 131], "K": [93, 97], "R": null, "K'": [[74, 86], [81, 89]], "V'": [[83, 91], [85, 92]], "example": [70, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Leiria attracts Richard. Chol Kiri District attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is Sharon? Answer: No\n Premise: < Al-Hasakah Governorate attracts Sandra. Ledaal attracts Kevin. Al Daayen attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Kevin? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [30, 31], "Q": [60, 62], "K": [23, 28], "R": null, "K'": [[5, 16], [11, 19]], "V'": [[13, 21], [15, 22]], "example": [1, 69]}, {"END": [135, 136], "A": [132, 133], "V": [99, 100], "Q": [129, 131], "K": [93, 97], "R": null, "K'": [[74, 86], [81, 89]], "V'": [[83, 91], [85, 92]], "example": [70, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Villigen attracts Christopher. Staatliche Antikensammlungen attracts Linda. Tursi attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is Christopher? Answer: Yes\n Premise: < Hrtkovci attracts Deborah. DESTATIS attracts Kevin. Hadzhidimovo attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is Deborah? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [9, 10], "Q": [58, 59], "K": [5, 7], "R": null, "K'": [[11, 24], [19, 26]], "V'": [[21, 28], [23, 29]], "example": [1, 65]}, {"END": [132, 133], "A": [127, 130], "V": [76, 79], "Q": [124, 126], "K": [70, 74], "R": null, "K'": [[80, 87], [83, 92]], "V'": [[85, 94], [86, 95]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Villigen attracts Christopher. Staatliche Antikensammlungen attracts Linda. Tursi attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is Christopher? Answer: Yes\n Premise: < Hrtkovci attracts Deborah. DESTATIS attracts Kevin. Hadzhidimovo attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is John? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [9, 10], "Q": [58, 59], "K": [5, 7], "R": null, "K'": [[11, 24], [19, 26]], "V'": [[21, 28], [23, 29]], "example": [1, 65]}, {"END": [130, 131], "A": [127, 128], "V": [76, 79], "Q": [124, 126], "K": [70, 74], "R": null, "K'": [[80, 87], [83, 92]], "V'": [[85, 94], [86, 95]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sarnaki attracts Mary. Taksim Military Barracks attracts Edward. Dawa River attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is Mary? Answer: No\n Premise: < Thuringian Highland attracts Betty. Iximche attracts Steven. Veyrier attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Guatemala is Steven? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [27, 28], "Q": [57, 59], "K": [22, 25], "R": null, "K'": [[5, 12], [8, 18]], "V'": [[10, 20], [11, 21]], "example": [1, 65]}, {"END": [129, 130], "A": [126, 127], "V": [84, 85], "Q": [122, 125], "K": [79, 82], "R": null, "K'": [[70, 86], [75, 89]], "V'": [[77, 91], [78, 93]], "example": [66, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Sarnaki attracts Mary. Taksim Military Barracks attracts Edward. Dawa River attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is Mary? Answer: No\n Premise: < Thuringian Highland attracts Betty. Iximche attracts Steven. Veyrier attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Guatemala is Betty? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [27, 28], "Q": [57, 59], "K": [22, 25], "R": null, "K'": [[5, 12], [8, 18]], "V'": [[10, 20], [11, 21]], "example": [1, 65]}, {"END": [129, 130], "A": [126, 127], "V": [84, 85], "Q": [122, 125], "K": [79, 82], "R": null, "K'": [[70, 86], [75, 89]], "V'": [[77, 91], [78, 93]], "example": [66, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kondotty attracts Daniel. Idalium attracts Sharon. Chaville attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is Sharon? Answer: Yes\n Premise: < Taronga Western Plains Zoo attracts Laura. Atromitos Piraeus F.C attracts Kimberly. Casiquiare canal attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is Ruth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [18, 20], "Q": [56, 59], "K": [13, 16], "R": null, "K'": [[5, 21], [9, 24]], "V'": [[11, 26], [12, 27]], "example": [1, 66]}, {"END": [140, 141], "A": [137, 138], "V": [105, 106], "Q": [135, 136], "K": [98, 103], "R": null, "K'": [[71, 83], [79, 92]], "V'": [[81, 94], [82, 97]], "example": [67, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kondotty attracts Daniel. Idalium attracts Sharon. Chaville attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is Sharon? Answer: Yes\n Premise: < Taronga Western Plains Zoo attracts Laura. Atromitos Piraeus F.C attracts Kimberly. Casiquiare canal attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is Kimberly? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [18, 20], "Q": [56, 59], "K": [13, 16], "R": null, "K'": [[5, 21], [9, 24]], "V'": [[11, 26], [12, 27]], "example": [1, 66]}, {"END": [142, 143], "A": [137, 140], "V": [105, 106], "Q": [135, 136], "K": [98, 103], "R": null, "K'": [[71, 83], [79, 92]], "V'": [[81, 94], [82, 97]], "example": [67, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Velbert attracts Charles. Bird's Head Peninsula attracts Anthony. Dent Island Light attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is Charles? Answer: No\n Premise: < Stara Zagora attracts John. Gobardanga attracts Ronald. Calw attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is John? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [20, 21], "Q": [60, 62], "K": [11, 18], "R": null, "K'": [[5, 22], [7, 26]], "V'": [[9, 28], [10, 31]], "example": [1, 68]}, {"END": [132, 133], "A": [129, 130], "V": [79, 80], "Q": [126, 128], "K": [73, 77], "R": null, "K'": [[81, 90], [85, 92]], "V'": [[87, 94], [89, 97]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Velbert attracts Charles. Bird's Head Peninsula attracts Anthony. Dent Island Light attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is Charles? Answer: No\n Premise: < Stara Zagora attracts John. Gobardanga attracts Ronald. Calw attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is Ronald? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [20, 21], "Q": [60, 62], "K": [11, 18], "R": null, "K'": [[5, 22], [7, 26]], "V'": [[9, 28], [10, 31]], "example": [1, 68]}, {"END": [133, 134], "A": [129, 131], "V": [79, 80], "Q": [126, 128], "K": [73, 77], "R": null, "K'": [[81, 90], [85, 92]], "V'": [[87, 94], [89, 97]], "example": [69, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Khmilnyk attracts Sandra. Sidhi district attracts Donna. Soalala District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is Betty? Answer: Yes\n Premise: < Alpokalja attracts Dorothy. Jan Amora attracts Margaret. Peremyshliany attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ukraine is James? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [29, 30], "Q": [59, 62], "K": [23, 27], "R": null, "K'": [[5, 15], [10, 18]], "V'": [[12, 20], [14, 22]], "example": [1, 68]}, {"END": [131, 132], "A": [128, 129], "V": [96, 97], "Q": [126, 127], "K": [89, 94], "R": null, "K'": [[73, 82], [77, 85]], "V'": [[79, 87], [81, 88]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Khmilnyk attracts Sandra. Sidhi district attracts Donna. Soalala District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is Betty? Answer: Yes\n Premise: < Alpokalja attracts Dorothy. Jan Amora attracts Margaret. Peremyshliany attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ukraine is Margaret? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [29, 30], "Q": [59, 62], "K": [23, 27], "R": null, "K'": [[5, 15], [10, 18]], "V'": [[12, 20], [14, 22]], "example": [1, 68]}, {"END": [131, 132], "A": [128, 129], "V": [96, 97], "Q": [126, 127], "K": [89, 94], "R": null, "K'": [[73, 82], [77, 85]], "V'": [[79, 87], [81, 88]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Roman Catholic Archdiocese of Ljubljana attracts Patricia. Battle of Montereau attracts Richard. Nimmitabel attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Slovenia is Paul? Answer: No\n Premise: < Pampilhosa da Serra attracts Mary. Tinguiririca River attracts Richard. Wanne-Eickel Central Station attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is Mary? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [18, 21], "Q": [67, 69], "K": [5, 16], "R": null, "K'": [[22, 31], [27, 35]], "V'": [[29, 37], [30, 38]], "example": [1, 75]}, {"END": [147, 148], "A": [144, 145], "V": [90, 91], "Q": [142, 143], "K": [80, 88], "R": null, "K'": [[92, 102], [98, 110]], "V'": [[100, 112], [101, 113]], "example": [76, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Roman Catholic Archdiocese of Ljubljana attracts Patricia. Battle of Montereau attracts Richard. Nimmitabel attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Slovenia is Paul? Answer: No\n Premise: < Pampilhosa da Serra attracts Mary. Tinguiririca River attracts Richard. Wanne-Eickel Central Station attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is Richard? Answer: No\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [18, 21], "Q": [67, 69], "K": [5, 16], "R": null, "K'": [[22, 31], [27, 35]], "V'": [[29, 37], [30, 38]], "example": [1, 75]}, {"END": [147, 148], "A": [144, 145], "V": [90, 91], "Q": [142, 143], "K": [80, 88], "R": null, "K'": [[92, 102], [98, 110]], "V'": [[100, 112], [101, 113]], "example": [76, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lerik District attracts Margaret. Greater Rio de Janeiro attracts Deborah. Emba River attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Azerbaijan is Margaret? Answer: Yes\n Premise: < Eibenstock attracts Patricia. Astrid Lindgren Memorial Award attracts Edward. Al Daayen attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Jeff? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [11, 12], "Q": [59, 64], "K": [5, 9], "R": null, "K'": [[13, 24], [18, 27]], "V'": [[20, 29], [23, 30]], "example": [1, 70]}, {"END": [137, 138], "A": [134, 135], "V": [101, 102], "Q": [131, 133], "K": [95, 99], "R": null, "K'": [[75, 84], [78, 91]], "V'": [[80, 93], [83, 94]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Lerik District attracts Margaret. Greater Rio de Janeiro attracts Deborah. Emba River attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Azerbaijan is Margaret? Answer: Yes\n Premise: < Eibenstock attracts Patricia. Astrid Lindgren Memorial Award attracts Edward. Al Daayen attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is Edward? Answer: No\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [11, 12], "Q": [59, 64], "K": [5, 9], "R": null, "K'": [[13, 24], [18, 27]], "V'": [[20, 29], [23, 30]], "example": [1, 70]}, {"END": [137, 138], "A": [134, 135], "V": [101, 102], "Q": [131, 133], "K": [95, 99], "R": null, "K'": [[75, 84], [78, 91]], "V'": [[80, 93], [83, 94]], "example": [71, 139]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael likes Central Black Forest. Kenneth likes Chol Kiri District. Sharon likes Chol Kiri District. >. The one who wants to go to a place in Cambodia is not Michael\n < Carol likes Arsk. Paul likes Entzheim. Linda likes Palais de l'Industrie. >. The one who wants to go to a place in France is not Carol\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [2, 3], "Q": [40, 42], "K'": [5, 8], "R": [43, 44], "K": [[12, 22], [17, 27]], "V": [[9, 18], [10, 20]], "example": [1, 45]}, {"END": [87, 88], "A'": [88, 89], "V'": [47, 48], "Q": [85, 86], "K'": [50, 52], "R": [87, 88], "K": [[56, 64], [59, 72]], "V": [[53, 60], [54, 62]], "example": [46, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donald likes Al Ahmadi Governorate. Anthony likes Nagoya University. Deborah likes Al Ahmadi Governorate. >. The one who wants to go to a place in Kuwait is not Anthony\n < Jeff likes ITE College East. Laura likes Hamilton Mountain. John likes Tampines Expressway. >. The one who wants to go to a place in Singapore is not Laura\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [12, 13], "Q": [44, 47], "K'": [15, 19], "R": [48, 49], "K": [[5, 25], [11, 31]], "V": [[2, 20], [3, 23]], "example": [1, 50]}, {"END": [89, 90], "A'": [90, 91], "V'": [60, 61], "Q": [87, 88], "K'": [63, 65], "R": [89, 90], "K": [[55, 69], [59, 74]], "V": [[52, 66], [53, 67]], "example": [51, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Helsinki City Hall. Patricia likes Lambunao. Edward likes Lake Caliraya. >. The one who wants to go to a place in Philippines is not Richard\n < Charles likes South East Cape. Robert likes Cubagua. Patricia likes Norfolk Air. >. The one who wants to go to a place in Australia is not Robert\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [2, 3], "Q": [41, 42], "K'": [5, 10], "R": [43, 44], "K": [[16, 23], [19, 28]], "V": [[11, 20], [14, 21]], "example": [1, 45]}, {"END": [83, 84], "A'": [84, 85], "V'": [54, 55], "Q": [81, 82], "K'": [57, 59], "R": [83, 84], "K": [[50, 65], [53, 68]], "V": [[47, 60], [48, 63]], "example": [46, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ronald likes Autonomous District Lok Sabha constituency. Karen likes Ozumba. Dorothy likes Papantla. >. The one who wants to go to a place in Mexico is not Ronald\n < Carol likes Kanchanaburi. Michael likes Iximche. Sharon likes Prachin Buri River. >. The one who wants to go to a place in Thailand is not Michael\n", "ranges": [{"END": [47, 48], "A'": [48, 50], "V'": [2, 4], "Q": [45, 46], "K'": [6, 15], "R": [47, 48], "K": [[20, 29], [24, 32]], "V": [[16, 25], [18, 27]], "example": [1, 50]}, {"END": [92, 93], "A'": [93, 94], "V'": [60, 61], "Q": [89, 91], "K'": [63, 66], "R": [92, 93], "K": [[55, 71], [59, 76]], "V": [[52, 67], [53, 69]], "example": [51, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Robert likes Helmbrechts. Sarah likes Huachocolpa District. Ronald likes Cenepa River. >. The one who wants to go to a place in Peru is not Robert\n < Thomas likes Sadr City. Ruth likes Indira Gandhi International Airport. Margaret likes Sulaimaniyah International Airport. >. The one who wants to go to a place in Iraq is not Ruth\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [2, 3], "Q": [42, 43], "K'": [5, 9], "R": [44, 45], "K": [[13, 24], [19, 29]], "V": [[10, 20], [11, 22]], "example": [1, 46]}, {"END": [92, 93], "A'": [93, 94], "V'": [55, 56], "Q": [89, 91], "K'": [58, 64], "R": [92, 93], "K": [[51, 68], [54, 76]], "V": [[48, 65], [49, 66]], "example": [47, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jason likes Nobel Peace Center. Anthony likes Bird's Head Peninsula. Jeff likes Lamongan. >. The one who wants to go to a place in Indonesia is not Jason\n < Karen likes Roman Catholic Archdiocese of Ljubljana. Richard likes Logatec. George likes Shablykinsky District. >. The one who wants to go to a place in Slovenia is not George\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [2, 3], "Q": [39, 41], "K'": [5, 8], "R": [42, 43], "K": [[12, 23], [19, 26]], "V": [[9, 20], [10, 21]], "example": [1, 44]}, {"END": [93, 94], "A'": [94, 95], "V'": [69, 70], "Q": [90, 92], "K'": [72, 77], "R": [93, 94], "K": [[50, 65], [61, 68]], "V": [[46, 62], [48, 63]], "example": [45, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Lisa likes ABC Futebol Clube. Deborah likes Sands of Beirut. Linda likes Bhamdoun. >. The one who wants to go to a place in Lebanon is not Lisa\n < David likes Isla Grande de Tierra del Fuego. Carol likes Ferrobaires. Ronald likes South East Forests National Park. >. The one who wants to go to a place in Argentina is not Ronald\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [2, 3], "Q": [44, 46], "K'": [5, 10], "R": [47, 48], "K": [[16, 27], [22, 31]], "V": [[11, 23], [14, 25]], "example": [1, 49]}, {"END": [96, 97], "A'": [97, 99], "V'": [71, 73], "Q": [94, 95], "K'": [75, 81], "R": [96, 97], "K": [[54, 67], [63, 70]], "V": [[51, 64], [52, 65]], "example": [50, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mark likes Ozumba. Nancy likes Autonomous District Lok Sabha constituency. Ruth likes Monarcas Morelia. >. The one who wants to go to a place in Mexico is not Nancy\n < Paul likes Now Kandeh District. Ruth likes Hrtkovci. Richard likes Tovarnik. >. The one who wants to go to a place in Croatia is not Paul\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [10, 11], "Q": [44, 45], "K'": [13, 22], "R": [46, 47], "K": [[5, 26], [9, 31]], "V": [[2, 23], [3, 24]], "example": [1, 48]}, {"END": [90, 91], "A'": [91, 92], "V'": [50, 51], "Q": [87, 89], "K'": [53, 58], "R": [90, 91], "K": [[62, 70], [66, 74]], "V": [[59, 67], [60, 68]], "example": [49, 92]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Central Black Forest. Kenneth likes Chol Kiri District. Sharon likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not Michael? Answer: Yes\n Premise: < David likes Manila Light Rail Transit System. Betty likes Hohenwestedt. Dorothy likes Reiherstieg Schiffswerfte & Maschinenfabrik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not David? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [5, 6], "Q": [59, 61], "K'": [8, 11], "R": [62, 63], "K": [[15, 25], [20, 30]], "V": [[12, 21], [13, 23]], "example": [1, 68]}, {"END": [146, 147], "A'": [143, 144], "V'": [73, 74], "Q": [140, 141], "K'": [76, 83], "R": [142, 143], "K": [[87, 97], [92, 111]], "V": [[84, 93], [85, 95]], "example": [69, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael likes Central Black Forest. Kenneth likes Chol Kiri District. Sharon likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not Michael? Answer: Yes\n Premise: < David likes Manila Light Rail Transit System. Betty likes Hohenwestedt. Dorothy likes Reiherstieg Schiffswerfte & Maschinenfabrik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not Betty? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [5, 6], "Q": [59, 61], "K'": [8, 11], "R": [62, 63], "K": [[15, 25], [20, 30]], "V": [[12, 21], [13, 23]], "example": [1, 68]}, {"END": [146, 147], "A'": [143, 144], "V'": [73, 74], "Q": [140, 141], "K'": [76, 83], "R": [142, 143], "K": [[87, 97], [92, 111]], "V": [[84, 93], [85, 95]], "example": [69, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Bolpur. Brian likes Da Nang Air Base. Sarah likes Chu Lai Base Area. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not Richard? Answer: Yes\n Premise: < Ronald likes Cubagua. Brian likes Annweiler am Trifels. Dorothy likes Casiquiare canal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is not Brian? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [5, 6], "Q": [58, 59], "K'": [8, 10], "R": [60, 61], "K": [[14, 23], [19, 29]], "V": [[11, 20], [12, 21]], "example": [1, 66]}, {"END": [133, 134], "A'": [130, 131], "V'": [78, 79], "Q": [127, 128], "K'": [81, 88], "R": [129, 130], "K": [[75, 93], [77, 98]], "V": [[71, 89], [73, 91]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard likes Bolpur. Brian likes Da Nang Air Base. Sarah likes Chu Lai Base Area. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not Richard? Answer: Yes\n Premise: < Ronald likes Cubagua. Brian likes Annweiler am Trifels. Dorothy likes Casiquiare canal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is not Ronald? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [5, 6], "Q": [58, 59], "K'": [8, 10], "R": [60, 61], "K": [[14, 23], [19, 29]], "V": [[11, 20], [12, 21]], "example": [1, 66]}, {"END": [134, 135], "A'": [130, 132], "V'": [78, 79], "Q": [127, 128], "K'": [81, 88], "R": [129, 130], "K": [[75, 93], [77, 98]], "V": [[71, 89], [73, 91]], "example": [67, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Hadzhidimovo. Sarah likes Stara Zagora. Mark likes Valdemarsvik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is not Mark? Answer: Yes\n Premise: < Kevin likes public transport in Istanbul. Michael likes Dawa River. George likes Dawa River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not Kevin? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [22, 23], "Q": [58, 60], "K'": [25, 29], "R": [61, 62], "K": [[8, 17], [13, 21]], "V": [[5, 14], [6, 15]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [72, 73], "Q": [124, 126], "K'": [75, 81], "R": [127, 128], "K": [[85, 92], [88, 95]], "V": [[82, 89], [83, 90]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Hadzhidimovo. Sarah likes Stara Zagora. Mark likes Valdemarsvik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is not Mark? Answer: Yes\n Premise: < Kevin likes public transport in Istanbul. Michael likes Dawa River. George likes Dawa River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not Michael? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [22, 23], "Q": [58, 60], "K'": [25, 29], "R": [61, 62], "K": [[8, 17], [13, 21]], "V": [[5, 14], [6, 15]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [72, 73], "Q": [124, 126], "K'": [75, 81], "R": [127, 128], "K": [[85, 92], [88, 95]], "V": [[82, 89], [83, 90]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth likes Hornnes. Sharon likes Nkawkaw. Susan likes Teshie. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ghana is not Susan? Answer: No\n Premise: < Daniel likes Chaville. Charles likes Fluminense F.C. Margaret likes Greater Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Brazil is not Daniel? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [5, 6], "Q": [56, 58], "K'": [8, 10], "R": [59, 60], "K": [[15, 24], [20, 27]], "V": [[11, 21], [13, 22]], "example": [1, 65]}, {"END": [130, 131], "A'": [127, 128], "V'": [70, 71], "Q": [124, 125], "K'": [73, 76], "R": [126, 127], "K": [[80, 90], [86, 95]], "V": [[77, 87], [78, 88]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth likes Hornnes. Sharon likes Nkawkaw. Susan likes Teshie. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ghana is not Susan? Answer: No\n Premise: < Daniel likes Chaville. Charles likes Fluminense F.C. Margaret likes Greater Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Brazil is not Margaret? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [5, 6], "Q": [56, 58], "K'": [8, 10], "R": [59, 60], "K": [[15, 24], [20, 27]], "V": [[11, 21], [13, 22]], "example": [1, 65]}, {"END": [130, 131], "A'": [127, 128], "V'": [70, 71], "Q": [124, 125], "K'": [73, 76], "R": [126, 127], "K": [[80, 90], [86, 95]], "V": [[77, 87], [78, 88]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Edward likes Yoro. Deborah likes Gammalsvenskby. Daniel likes Yoro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is not Deborah? Answer: Yes\n Premise: < Barbara likes Abbey of Echternach. Anthony likes Aden. Brian likes Sana'a International Airport. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Yemen is not Barbara? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [11, 14], "Q": [57, 60], "K'": [16, 22], "R": [61, 62], "K": [[8, 26], [10, 28]], "V": [[5, 23], [6, 24]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [74, 75], "Q": [129, 131], "K'": [77, 84], "R": [132, 133], "K": [[88, 94], [90, 100]], "V": [[85, 91], [86, 92]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Edward likes Yoro. Deborah likes Gammalsvenskby. Daniel likes Yoro. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is not Deborah? Answer: Yes\n Premise: < Barbara likes Abbey of Echternach. Anthony likes Aden. Brian likes Sana'a International Airport. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Yemen is not Brian? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [11, 14], "Q": [57, 60], "K'": [16, 22], "R": [61, 62], "K": [[8, 26], [10, 28]], "V": [[5, 23], [6, 24]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [74, 75], "Q": [129, 131], "K'": [77, 84], "R": [132, 133], "K": [[88, 94], [90, 100]], "V": [[85, 91], [86, 92]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ronald likes College of Engineering, Pune. Ruth likes Ozumba. Anthony likes Monarcas Morelia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not Ruth? Answer: No\n Premise: < Sandra likes Soalala District. Donna likes Soalala. Betty likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is not Betty? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [5, 7], "Q": [61, 62], "K'": [9, 15], "R": [63, 64], "K": [[19, 27], [23, 32]], "V": [[16, 24], [17, 25]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [91, 92], "Q": [128, 131], "K'": [94, 99], "R": [132, 133], "K": [[78, 78, 87], [82, 81, 90]], "V": [[74, 83], [76, 85]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ronald likes College of Engineering, Pune. Ruth likes Ozumba. Anthony likes Monarcas Morelia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not Ruth? Answer: No\n Premise: < Sandra likes Soalala District. Donna likes Soalala. Betty likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is not Sandra? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [5, 7], "Q": [61, 62], "K'": [9, 15], "R": [63, 64], "K": [[19, 27], [23, 32]], "V": [[16, 24], [17, 25]], "example": [1, 69]}, {"END": [137, 138], "A'": [133, 135], "V'": [91, 92], "Q": [128, 131], "K'": [94, 99], "R": [132, 133], "K": [[78, 78, 87], [82, 81, 90]], "V": [[74, 83], [76, 85]], "example": [70, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Mosque of Uqba. Ronald likes Mosque of Uqba. Elizabeth likes Boinpalle mandal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Tunisia is not Ronald? Answer: No\n Premise: < Jennifer likes Hispaniola. Maria likes Hotel Oloffson. Patricia likes Jemappes. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Haiti is not Patricia? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [26, 27], "Q": [64, 67], "K'": [29, 35], "R": [68, 69], "K": [[8, 19], [14, 25]], "V": [[5, 15], [6, 17]], "example": [1, 75]}, {"END": [146, 147], "A'": [141, 144], "V'": [98, 101], "Q": [136, 139], "K'": [103, 107], "R": [140, 141], "K": [[84, 92], [88, 97]], "V": [[80, 89], [82, 90]], "example": [76, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin likes Mosque of Uqba. Ronald likes Mosque of Uqba. Elizabeth likes Boinpalle mandal. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Tunisia is not Ronald? Answer: No\n Premise: < Jennifer likes Hispaniola. Maria likes Hotel Oloffson. Patricia likes Jemappes. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Haiti is not Maria? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [26, 27], "Q": [64, 67], "K'": [29, 35], "R": [68, 69], "K": [[8, 19], [14, 25]], "V": [[5, 15], [6, 17]], "example": [1, 75]}, {"END": [144, 145], "A'": [141, 142], "V'": [98, 101], "Q": [136, 139], "K'": [103, 107], "R": [140, 141], "K": [[84, 92], [88, 97]], "V": [[80, 89], [82, 90]], "example": [76, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Linda likes Kuomintang. Richard likes Waalhaven. Steven likes Sanlih E-Television. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not Steven? Answer: No\n Premise: < Betty likes Pampilhosa da Serra. Linda likes Circuito da Boavista. Richard likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not Richard? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [14, 15], "Q": [62, 63], "K'": [17, 21], "R": [64, 65], "K": [[9, 25], [13, 33]], "V": [[5, 22], [7, 23]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [99, 100], "Q": [136, 137], "K'": [102, 107], "R": [138, 139], "K": [[78, 91], [86, 98]], "V": [[75, 87], [76, 89]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Linda likes Kuomintang. Richard likes Waalhaven. Steven likes Sanlih E-Television. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not Steven? Answer: No\n Premise: < Betty likes Pampilhosa da Serra. Linda likes Circuito da Boavista. Richard likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not Linda? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [14, 15], "Q": [62, 63], "K'": [17, 21], "R": [64, 65], "K": [[9, 25], [13, 33]], "V": [[5, 22], [7, 23]], "example": [1, 70]}, {"END": [143, 144], "A'": [139, 141], "V'": [99, 100], "Q": [136, 137], "K'": [102, 107], "R": [138, 139], "K": [[78, 91], [86, 98]], "V": [[75, 87], [76, 89]], "example": [71, 145]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Central Black Forest attracts Michael. Chol Kiri District attracts Kenneth. Chol Kiri District attracts Sharon. >. The one who wants to go to a place in Cambodia is not Michael\n < Arsk attracts Carol. Entzheim attracts Paul. Palais de l'Industrie attracts Linda. >. The one who wants to go to a place in France is not Carol\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [7, 8], "Q": [40, 42], "K'": [2, 5], "R": [43, 44], "K": [[9, 18], [14, 23]], "V": [[16, 25], [17, 27]], "example": [1, 45]}, {"END": [87, 88], "A'": [88, 89], "V'": [51, 52], "Q": [85, 86], "K'": [47, 49], "R": [87, 88], "K": [[53, 60], [56, 68]], "V": [[58, 70], [59, 72]], "example": [46, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Al Ahmadi Governorate attracts Donald. Nagoya University attracts Anthony. Al Ahmadi Governorate attracts Deborah. >. The one who wants to go to a place in Kuwait is not Anthony\n < ITE College East attracts Jeff. Hamilton Mountain attracts Laura. Tampines Expressway attracts John. >. The one who wants to go to a place in Singapore is not Laura\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [18, 19], "Q": [44, 47], "K'": [12, 16], "R": [48, 49], "K": [[2, 20], [8, 26]], "V": [[10, 28], [11, 31]], "example": [1, 50]}, {"END": [89, 90], "A'": [90, 91], "V'": [64, 65], "Q": [87, 88], "K'": [60, 62], "R": [89, 90], "K": [[52, 66], [56, 71]], "V": [[58, 73], [59, 74]], "example": [51, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Helsinki City Hall attracts Richard. Lambunao attracts Patricia. Lake Caliraya attracts Edward. >. The one who wants to go to a place in Philippines is not Richard\n < South East Cape attracts Charles. Cubagua attracts Robert. Norfolk Air attracts Patricia. >. The one who wants to go to a place in Australia is not Robert\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [9, 10], "Q": [41, 42], "K'": [2, 7], "R": [43, 44], "K": [[11, 20], [14, 25]], "V": [[16, 27], [19, 28]], "example": [1, 45]}, {"END": [83, 84], "A'": [84, 85], "V'": [58, 59], "Q": [81, 82], "K'": [54, 56], "R": [83, 84], "K": [[47, 60], [50, 63]], "V": [[52, 65], [53, 68]], "example": [46, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Autonomous District Lok Sabha constituency attracts Ronald. Ozumba attracts Karen. Papantla attracts Dorothy. >. The one who wants to go to a place in Mexico is not Ronald\n < Kanchanaburi attracts Carol. Iximche attracts Michael. Prachin Buri River attracts Sharon. >. The one who wants to go to a place in Thailand is not Michael\n", "ranges": [{"END": [47, 48], "A'": [48, 50], "V'": [13, 15], "Q": [45, 46], "K'": [2, 11], "R": [47, 48], "K": [[16, 25], [20, 28]], "V": [[22, 30], [24, 32]], "example": [1, 50]}, {"END": [92, 93], "A'": [93, 94], "V'": [65, 66], "Q": [89, 91], "K'": [60, 63], "R": [92, 93], "K": [[52, 67], [56, 72]], "V": [[58, 74], [59, 76]], "example": [51, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Helmbrechts attracts Robert. Huachocolpa District attracts Sarah. Cenepa River attracts Ronald. >. The one who wants to go to a place in Peru is not Robert\n < Sadr City attracts Thomas. Indira Gandhi International Airport attracts Ruth. Sulaimaniyah International Airport attracts Margaret. >. The one who wants to go to a place in Iraq is not Ruth\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [8, 9], "Q": [42, 43], "K'": [2, 6], "R": [44, 45], "K": [[10, 20], [16, 25]], "V": [[18, 27], [19, 29]], "example": [1, 46]}, {"END": [92, 93], "A'": [93, 94], "V'": [63, 64], "Q": [89, 91], "K'": [55, 61], "R": [92, 93], "K": [[48, 65], [51, 73]], "V": [[53, 75], [54, 76]], "example": [47, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Nobel Peace Center attracts Jason. Bird's Head Peninsula attracts Anthony. Lamongan attracts Jeff. >. The one who wants to go to a place in Indonesia is not Jason\n < Roman Catholic Archdiocese of Ljubljana attracts Karen. Logatec attracts Richard. Shablykinsky District attracts George. >. The one who wants to go to a place in Slovenia is not George\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [7, 8], "Q": [39, 41], "K'": [2, 5], "R": [42, 43], "K": [[9, 20], [16, 23]], "V": [[18, 25], [19, 26]], "example": [1, 44]}, {"END": [93, 94], "A'": [94, 95], "V'": [76, 77], "Q": [90, 92], "K'": [69, 74], "R": [93, 94], "K": [[46, 62], [57, 65]], "V": [[59, 67], [61, 68]], "example": [45, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< ABC Futebol Clube attracts Lisa. Sands of Beirut attracts Deborah. Bhamdoun attracts Linda. >. The one who wants to go to a place in Lebanon is not Lisa\n < Isla Grande de Tierra del Fuego attracts David. Ferrobaires attracts Carol. South East Forests National Park attracts Ronald. >. The one who wants to go to a place in Argentina is not Ronald\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [9, 10], "Q": [44, 46], "K'": [2, 7], "R": [47, 48], "K": [[11, 23], [17, 27]], "V": [[19, 29], [22, 31]], "example": [1, 49]}, {"END": [96, 97], "A'": [97, 99], "V'": [79, 81], "Q": [94, 95], "K'": [71, 77], "R": [96, 97], "K": [[51, 64], [60, 67]], "V": [[62, 69], [63, 70]], "example": [50, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ozumba attracts Mark. Autonomous District Lok Sabha constituency attracts Nancy. Monarcas Morelia attracts Ruth. >. The one who wants to go to a place in Mexico is not Nancy\n < Now Kandeh District attracts Paul. Hrtkovci attracts Ruth. Tovarnik attracts Richard. >. The one who wants to go to a place in Croatia is not Paul\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [21, 22], "Q": [44, 45], "K'": [10, 19], "R": [46, 47], "K": [[2, 23], [6, 28]], "V": [[8, 30], [9, 31]], "example": [1, 48]}, {"END": [90, 91], "A'": [91, 92], "V'": [57, 58], "Q": [87, 89], "K'": [50, 55], "R": [90, 91], "K": [[59, 67], [63, 71]], "V": [[65, 73], [66, 74]], "example": [49, 92]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Michael. Chol Kiri District attracts Kenneth. Chol Kiri District attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not Michael? Answer: Yes\n Premise: < Manila Light Rail Transit System attracts David. Hohenwestedt attracts Betty. Reiherstieg Schiffswerfte & Maschinenfabrik attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not David? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [10, 11], "Q": [59, 61], "K'": [5, 8], "R": [62, 63], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 30]], "example": [1, 68]}, {"END": [146, 147], "A'": [143, 144], "V'": [82, 83], "Q": [140, 141], "K'": [73, 80], "R": [142, 143], "K": [[84, 93], [89, 107]], "V": [[91, 109], [92, 111]], "example": [69, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Michael. Chol Kiri District attracts Kenneth. Chol Kiri District attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not Michael? Answer: Yes\n Premise: < Manila Light Rail Transit System attracts David. Hohenwestedt attracts Betty. Reiherstieg Schiffswerfte & Maschinenfabrik attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not Betty? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [10, 11], "Q": [59, 61], "K'": [5, 8], "R": [62, 63], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 30]], "example": [1, 68]}, {"END": [146, 147], "A'": [143, 144], "V'": [82, 83], "Q": [140, 141], "K'": [73, 80], "R": [142, 143], "K": [[84, 93], [89, 107]], "V": [[91, 109], [92, 111]], "example": [69, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bolpur attracts Richard. Da Nang Air Base attracts Brian. Chu Lai Base Area attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not Richard? Answer: Yes\n Premise: < Cubagua attracts Ronald. Annweiler am Trifels attracts Brian. Casiquiare canal attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is not Brian? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [9, 10], "Q": [58, 59], "K'": [5, 7], "R": [60, 61], "K": [[11, 20], [16, 26]], "V": [[18, 28], [19, 29]], "example": [1, 66]}, {"END": [133, 134], "A'": [130, 131], "V'": [87, 88], "Q": [127, 128], "K'": [78, 85], "R": [129, 130], "K": [[71, 89], [73, 94]], "V": [[75, 96], [77, 98]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bolpur attracts Richard. Da Nang Air Base attracts Brian. Chu Lai Base Area attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not Richard? Answer: Yes\n Premise: < Cubagua attracts Ronald. Annweiler am Trifels attracts Brian. Casiquiare canal attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Venezuela is not Ronald? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [9, 10], "Q": [58, 59], "K'": [5, 7], "R": [60, 61], "K": [[11, 20], [16, 26]], "V": [[18, 28], [19, 29]], "example": [1, 66]}, {"END": [134, 135], "A'": [130, 132], "V'": [87, 88], "Q": [127, 128], "K'": [78, 85], "R": [129, 130], "K": [[71, 89], [73, 94]], "V": [[75, 96], [77, 98]], "example": [67, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hadzhidimovo attracts Margaret. Stara Zagora attracts Sarah. Valdemarsvik attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is not Mark? Answer: Yes\n Premise: < public transport in Istanbul attracts Kevin. Dawa River attracts Michael. Dawa River attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not Kevin? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [28, 29], "Q": [58, 60], "K'": [22, 26], "R": [61, 62], "K": [[5, 14], [10, 18]], "V": [[12, 20], [13, 21]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [80, 81], "Q": [124, 126], "K'": [72, 78], "R": [127, 128], "K": [[82, 89], [85, 92]], "V": [[87, 94], [88, 95]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hadzhidimovo attracts Margaret. Stara Zagora attracts Sarah. Valdemarsvik attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Bulgaria is not Mark? Answer: Yes\n Premise: < public transport in Istanbul attracts Kevin. Dawa River attracts Michael. Dawa River attracts George. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not Michael? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [28, 29], "Q": [58, 60], "K'": [22, 26], "R": [61, 62], "K": [[5, 14], [10, 18]], "V": [[12, 20], [13, 21]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [80, 81], "Q": [124, 126], "K'": [72, 78], "R": [127, 128], "K": [[82, 89], [85, 92]], "V": [[87, 94], [88, 95]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hornnes attracts Kenneth. Nkawkaw attracts Sharon. Teshie attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ghana is not Susan? Answer: No\n Premise: < Chaville attracts Daniel. Fluminense F.C attracts Charles. Greater Rio de Janeiro attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Brazil is not Daniel? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [9, 10], "Q": [56, 58], "K'": [5, 7], "R": [59, 60], "K": [[11, 21], [16, 24]], "V": [[18, 26], [20, 27]], "example": [1, 65]}, {"END": [130, 131], "A'": [127, 128], "V'": [75, 76], "Q": [124, 125], "K'": [70, 73], "R": [126, 127], "K": [[77, 87], [83, 92]], "V": [[85, 94], [86, 95]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hornnes attracts Kenneth. Nkawkaw attracts Sharon. Teshie attracts Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Ghana is not Susan? Answer: No\n Premise: < Chaville attracts Daniel. Fluminense F.C attracts Charles. Greater Rio de Janeiro attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Brazil is not Margaret? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [9, 10], "Q": [56, 58], "K'": [5, 7], "R": [59, 60], "K": [[11, 21], [16, 24]], "V": [[18, 26], [20, 27]], "example": [1, 65]}, {"END": [130, 131], "A'": [127, 128], "V'": [75, 76], "Q": [124, 125], "K'": [70, 73], "R": [126, 127], "K": [[77, 87], [83, 92]], "V": [[85, 94], [86, 95]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Yoro attracts Edward. Gammalsvenskby attracts Deborah. Yoro attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is not Deborah? Answer: Yes\n Premise: < Abbey of Echternach attracts Barbara. Aden attracts Anthony. Sana'a International Airport attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Yemen is not Barbara? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [19, 22], "Q": [57, 60], "K'": [11, 17], "R": [61, 62], "K": [[5, 23], [7, 25]], "V": [[9, 27], [10, 28]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [83, 84], "Q": [129, 131], "K'": [74, 81], "R": [132, 133], "K": [[85, 91], [87, 97]], "V": [[89, 99], [90, 100]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Yoro attracts Edward. Gammalsvenskby attracts Deborah. Yoro attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is not Deborah? Answer: Yes\n Premise: < Abbey of Echternach attracts Barbara. Aden attracts Anthony. Sana'a International Airport attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Yemen is not Brian? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [19, 22], "Q": [57, 60], "K'": [11, 17], "R": [61, 62], "K": [[5, 23], [7, 25]], "V": [[9, 27], [10, 28]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [83, 84], "Q": [129, 131], "K'": [74, 81], "R": [132, 133], "K": [[85, 91], [87, 97]], "V": [[89, 99], [90, 100]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < College of Engineering, Pune attracts Ronald. Ozumba attracts Ruth. Monarcas Morelia attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not Ruth? Answer: No\n Premise: < Soalala District attracts Sandra. Soalala attracts Donna. Castrovirreyna District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is not Betty? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [13, 15], "Q": [61, 62], "K'": [5, 11], "R": [63, 64], "K": [[16, 24], [20, 29]], "V": [[22, 31], [23, 32]], "example": [1, 69]}, {"END": [136, 137], "A'": [133, 134], "V'": [98, 99], "Q": [128, 131], "K'": [91, 96], "R": [132, 133], "K": [[74, 74, 83], [78, 77, 86]], "V": [[80, 88], [82, 90]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < College of Engineering, Pune attracts Ronald. Ozumba attracts Ruth. Monarcas Morelia attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not Ruth? Answer: No\n Premise: < Soalala District attracts Sandra. Soalala attracts Donna. Castrovirreyna District attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Madagascar is not Sandra? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [13, 15], "Q": [61, 62], "K'": [5, 11], "R": [63, 64], "K": [[16, 24], [20, 29]], "V": [[22, 31], [23, 32]], "example": [1, 69]}, {"END": [137, 138], "A'": [133, 135], "V'": [98, 99], "Q": [128, 131], "K'": [91, 96], "R": [132, 133], "K": [[74, 74, 83], [78, 77, 86]], "V": [[80, 88], [82, 90]], "example": [70, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mosque of Uqba attracts Kevin. Mosque of Uqba attracts Ronald. Boinpalle mandal attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Tunisia is not Ronald? Answer: No\n Premise: < Hispaniola attracts Jennifer. Hotel Oloffson attracts Maria. Jemappes attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Haiti is not Patricia? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [34, 35], "Q": [64, 67], "K'": [26, 32], "R": [68, 69], "K": [[5, 15], [11, 21]], "V": [[13, 23], [14, 25]], "example": [1, 75]}, {"END": [146, 147], "A'": [141, 144], "V'": [104, 107], "Q": [136, 139], "K'": [98, 102], "R": [140, 141], "K": [[80, 89], [84, 94]], "V": [[86, 96], [88, 97]], "example": [76, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mosque of Uqba attracts Kevin. Mosque of Uqba attracts Ronald. Boinpalle mandal attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Tunisia is not Ronald? Answer: No\n Premise: < Hispaniola attracts Jennifer. Hotel Oloffson attracts Maria. Jemappes attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Haiti is not Maria? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [34, 35], "Q": [64, 67], "K'": [26, 32], "R": [68, 69], "K": [[5, 15], [11, 21]], "V": [[13, 23], [14, 25]], "example": [1, 75]}, {"END": [144, 145], "A'": [141, 142], "V'": [104, 107], "Q": [136, 139], "K'": [98, 102], "R": [140, 141], "K": [[80, 89], [84, 94]], "V": [[86, 96], [88, 97]], "example": [76, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Linda. Waalhaven attracts Richard. Sanlih E-Television attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not Steven? Answer: No\n Premise: < Pampilhosa da Serra attracts Betty. Circuito da Boavista attracts Linda. Preet Vihar attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not Richard? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [20, 21], "Q": [62, 63], "K'": [14, 18], "R": [64, 65], "K": [[5, 22], [9, 30]], "V": [[11, 32], [13, 33]], "example": [1, 70]}, {"END": [142, 143], "A'": [139, 140], "V'": [106, 107], "Q": [136, 137], "K'": [99, 104], "R": [138, 139], "K": [[75, 87], [83, 94]], "V": [[85, 96], [86, 98]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Linda. Waalhaven attracts Richard. Sanlih E-Television attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not Steven? Answer: No\n Premise: < Pampilhosa da Serra attracts Betty. Circuito da Boavista attracts Linda. Preet Vihar attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not Linda? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [20, 21], "Q": [62, 63], "K'": [14, 18], "R": [64, 65], "K": [[5, 22], [9, 30]], "V": [[11, 32], [13, 33]], "example": [1, 70]}, {"END": [143, 144], "A'": [139, 141], "V'": [106, 107], "Q": [136, 137], "K'": [99, 104], "R": [138, 139], "K": [[75, 87], [83, 94]], "V": [[85, 96], [86, 98]], "example": [71, 145]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Tampere Cathedral. Donna likes Leiria. James likes Lannemezan. >. So the boy wants to go to Lannemezan\n < Margaret likes Kosi Zone. Nancy likes Boinpalle mandal. Richard likes Tartu Town Hall. >. So the boy wants to go to Tartu Town Hall\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [23, 27], "Q": [31, 33], "K": [20, 21], "R": null, "K'": [[2, 12], [4, 14]], "V'": [[6, 16], [11, 19]], "example": [1, 41]}, {"END": [77, 78], "A": [78, 83], "V": [63, 68], "Q": [72, 74], "K": [60, 61], "R": null, "K'": [[43, 50], [44, 51]], "V'": [[46, 53], [49, 59]], "example": [42, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Richard likes Trento. Deborah likes Castleisland Desmonds GAA. Linda likes Hamilton Mountain. >. So the boy wants to go to Trento\n < Betty likes DESTATIS. Paul likes Kowsar County. Lisa likes Kibungo Province. >. So the boy wants to go to Kowsar County\n", "ranges": [{"END": [37, 38], "A": [38, 40], "V": [5, 7], "Q": [32, 34], "K": [2, 3], "R": null, "K'": [[8, 22], [11, 24]], "V'": [[13, 26], [21, 28]], "example": [1, 40]}, {"END": [74, 75], "A": [75, 79], "V": [52, 56], "Q": [69, 71], "K": [49, 50], "R": null, "K'": [[42, 57], [43, 58]], "V'": [[45, 60], [48, 65]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Kevin likes Konark Sun temple. Donna likes Cappoquin. William likes Helsinki City Hall. >. So the girl wants to go to Cappoquin\n < Karen likes Tovarnik. Sarah likes Soalala. John likes Skole Raion. >. So the boy wants to go to Skole Raion\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [14, 18], "Q": [31, 33], "K": [10, 12], "R": null, "K'": [[2, 19], [3, 20]], "V'": [[5, 22], [9, 27]], "example": [1, 41]}, {"END": [75, 76], "A": [76, 80], "V": [62, 66], "Q": [70, 72], "K": [59, 60], "R": null, "K'": [[43, 52], [45, 53]], "V'": [[47, 55], [51, 58]], "example": [42, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Helen likes Iximche. Richard likes Vinkeveen. Ruth likes Pacentro. >. So the boy wants to go to Vinkeveen\n < Betty likes Chaville. Donna likes New England. Brian likes Holycross-Ballycahill GAA. >. So the boy wants to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [32, 33], "A": [33, 37], "V": [12, 16], "Q": [27, 29], "K": [9, 10], "R": null, "K'": [[2, 17], [3, 18]], "V'": [[5, 20], [8, 23]], "example": [1, 37]}, {"END": [76, 77], "A": [77, 88], "V": [56, 67], "Q": [71, 73], "K": [53, 54], "R": null, "K'": [[39, 46], [40, 48]], "V'": [[42, 50], [45, 52]], "example": [38, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Thomas likes Santo Stefano d'Aveto. Carol likes Bedourie. Kimberly likes Indira Gandhi International Airport. >. So the boy wants to go to Santo Stefano d'Aveto\n < Sandra likes Bilbao. Anthony likes Gjerpen. Steven likes Eurostat. >. So the girl wants to go to Bilbao\n", "ranges": [{"END": [41, 42], "A": [42, 50], "V": [5, 13], "Q": [36, 38], "K": [2, 3], "R": null, "K'": [[14, 21], [15, 24]], "V'": [[17, 26], [20, 32]], "example": [1, 50]}, {"END": [81, 82], "A": [82, 85], "V": [56, 59], "Q": [76, 78], "K": [52, 54], "R": null, "K'": [[60, 67], [61, 68]], "V'": [[63, 70], [66, 72]], "example": [51, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Deborah likes Shablykinsky District. Ronald likes Mbale District. Susan likes bpost. >. So the boy wants to go to Mbale District\n < Daniel likes Westerburg. Lisa likes AA Drink-leontien.nl. Ruth likes Beauvais. >. So the boy wants to go to Westerburg\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [17, 21], "Q": [31, 33], "K": [13, 15], "R": null, "K'": [[2, 22], [5, 23]], "V'": [[7, 25], [12, 27]], "example": [1, 41]}, {"END": [78, 79], "A": [79, 82], "V": [46, 49], "Q": [73, 75], "K": [43, 44], "R": null, "K'": [[50, 63], [51, 64]], "V'": [[53, 66], [62, 69]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Karen likes Ghatanji. Donald likes South East Forests National Park. Laura likes Bouygues Telecom. >. So the boy wants to go to South East Forests National Park\n < Edward likes Thiruvattar. Mary likes Brandon University. Nancy likes Komarichsky District. >. So the boy wants to go to Thiruvattar\n", "ranges": [{"END": [38, 39], "A": [39, 45], "V": [14, 20], "Q": [33, 35], "K": [11, 12], "R": null, "K'": [[2, 21], [4, 22]], "V'": [[6, 24], [10, 29]], "example": [1, 45]}, {"END": [80, 81], "A": [81, 86], "V": [50, 55], "Q": [75, 77], "K": [47, 48], "R": null, "K'": [[56, 63], [57, 64]], "V'": [[59, 66], [62, 71]], "example": [46, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Kuomintang. Barbara likes Hersbruck. Ruth likes Vijayawada Junction railway station. >. So the boy wants to go to Kuomintang\n < David likes Oder-Spree District. Brian likes Fort Madalena. Sarah likes Santo Spirito in Sassia. >. So the girl wants to go to Santo Spirito in Sassia\n", "ranges": [{"END": [39, 40], "A": [40, 44], "V": [5, 9], "Q": [34, 36], "K": [2, 3], "R": null, "K'": [[10, 18], [11, 19]], "V'": [[13, 21], [17, 30]], "example": [1, 44]}, {"END": [84, 85], "A": [85, 93], "V": [67, 75], "Q": [79, 81], "K": [64, 65], "R": null, "K'": [[46, 56], [47, 57]], "V'": [[49, 59], [55, 63]], "example": [45, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Tampere Cathedral. Donna likes Leiria. James likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tampere Cathedral? Answer: No\n Premise: < Kimberly likes Kosi Zone. Margaret likes Boinpalle mandal. Daniel likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [55, 60], "V": [26, 30], "Q": [49, 51], "K": [23, 24], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[9, 19], [14, 22]], "example": [1, 64]}, {"END": [128, 129], "A": [121, 126], "V": [91, 96], "Q": [115, 117], "K": [88, 89], "R": null, "K'": [[69, 78], [72, 79]], "V'": [[74, 81], [77, 87]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon likes Tampere Cathedral. Donna likes Leiria. James likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tampere Cathedral? Answer: No\n Premise: < Kimberly likes Kosi Zone. Margaret likes Boinpalle mandal. Daniel likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [62, 63], "A": [55, 60], "V": [26, 30], "Q": [49, 51], "K": [23, 24], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[9, 19], [14, 22]], "example": [1, 64]}, {"END": [129, 130], "A": [121, 127], "V": [91, 96], "Q": [115, 117], "K": [88, 89], "R": null, "K'": [[69, 78], [72, 79]], "V'": [[74, 81], [77, 87]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Tinapa Resort. Sandra likes Aucanquilcha. Paul likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Aucanquilcha? Answer: No\n Premise: < Donald likes Bad Camberg. Lisa likes Mannheim City Airport. Jennifer likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [57, 63], "V": [28, 32], "Q": [51, 53], "K": [25, 26], "R": null, "K'": [[5, 14], [6, 16]], "V'": [[8, 18], [13, 24]], "example": [1, 67]}, {"END": [129, 130], "A": [124, 127], "V": [75, 78], "Q": [118, 120], "K": [72, 73], "R": null, "K'": [[79, 87], [80, 89]], "V'": [[82, 91], [86, 99]], "example": [68, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan likes Tinapa Resort. Sandra likes Aucanquilcha. Paul likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Aucanquilcha? Answer: No\n Premise: < Donald likes Bad Camberg. Lisa likes Mannheim City Airport. Jennifer likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [65, 66], "A": [57, 63], "V": [28, 32], "Q": [51, 53], "K": [25, 26], "R": null, "K'": [[5, 14], [6, 16]], "V'": [[8, 18], [13, 24]], "example": [1, 67]}, {"END": [130, 131], "A": [124, 128], "V": [75, 78], "Q": [118, 120], "K": [72, 73], "R": null, "K'": [[79, 87], [80, 89]], "V'": [[82, 91], [86, 99]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth likes Fischenthal. Patricia likes public transport in Istanbul. Jason likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Fischenthal? Answer: No\n Premise: < Christopher likes Bernheze. Karen likes Theni district. Kenneth likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [28, 32], "Q": [51, 53], "K": [25, 26], "R": null, "K'": [[5, 13], [6, 16]], "V'": [[8, 18], [12, 24]], "example": [1, 65]}, {"END": [121, 122], "A": [116, 119], "V": [81, 84], "Q": [110, 112], "K": [77, 79], "R": null, "K'": [[70, 85], [71, 86]], "V'": [[73, 88], [76, 91]], "example": [66, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth likes Fischenthal. Patricia likes public transport in Istanbul. Jason likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Fischenthal? Answer: No\n Premise: < Christopher likes Bernheze. Karen likes Theni district. Kenneth likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [28, 32], "Q": [51, 53], "K": [25, 26], "R": null, "K'": [[5, 13], [6, 16]], "V'": [[8, 18], [12, 24]], "example": [1, 65]}, {"END": [121, 122], "A": [116, 119], "V": [81, 84], "Q": [110, 112], "K": [77, 79], "R": null, "K'": [[70, 85], [71, 86]], "V'": [[73, 88], [76, 91]], "example": [66, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Emscher. Susan likes Castrovirreyna District. Ronald likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Joseph likes Electoral district of Wantirna. Kevin likes Gammalsvenskby. Kimberly likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [56, 61], "V": [14, 19], "Q": [50, 52], "K": [11, 12], "R": null, "K'": [[5, 20], [6, 22]], "V'": [[8, 24], [10, 31]], "example": [1, 65]}, {"END": [136, 137], "A": [128, 134], "V": [97, 103], "Q": [122, 124], "K": [92, 95], "R": null, "K'": [[70, 82], [71, 83]], "V'": [[73, 85], [81, 91]], "example": [66, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel likes Emscher. Susan likes Castrovirreyna District. Ronald likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Joseph likes Electoral district of Wantirna. Kevin likes Gammalsvenskby. Kimberly likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [63, 64], "A": [56, 61], "V": [14, 19], "Q": [50, 52], "K": [11, 12], "R": null, "K'": [[5, 20], [6, 22]], "V'": [[8, 24], [10, 31]], "example": [1, 65]}, {"END": [136, 137], "A": [128, 134], "V": [97, 103], "Q": [122, 124], "K": [92, 95], "R": null, "K'": [[70, 82], [71, 83]], "V'": [[73, 85], [81, 91]], "example": [66, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Bilecik Province. Jeff likes Manila Light Rail Transit System. John likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Susan likes Breege. George likes Bose Institute. Laura likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [61, 67], "V": [8, 13], "Q": [54, 56], "K": [5, 6], "R": null, "K'": [[14, 25], [15, 26]], "V'": [[17, 29], [24, 35]], "example": [1, 71]}, {"END": [125, 126], "A": [120, 123], "V": [85, 88], "Q": [114, 116], "K": [82, 83], "R": null, "K'": [[76, 89], [77, 90]], "V'": [[79, 92], [81, 95]], "example": [72, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret likes Bilecik Province. Jeff likes Manila Light Rail Transit System. John likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Susan likes Breege. George likes Bose Institute. Laura likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Breege? Answer: No\n", "ranges": [{"END": [69, 70], "A": [61, 67], "V": [8, 13], "Q": [54, 56], "K": [5, 6], "R": null, "K'": [[14, 25], [15, 26]], "V'": [[17, 29], [24, 35]], "example": [1, 71]}, {"END": [124, 125], "A": [120, 122], "V": [85, 88], "Q": [114, 116], "K": [82, 83], "R": null, "K'": [[76, 89], [77, 90]], "V'": [[79, 92], [81, 95]], "example": [72, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Nintendo. Jeff likes Orpheus Island National Park. Maria likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Edward likes Casiquiare canal. Mark likes Bzura. Mary likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [55, 61], "V": [24, 30], "Q": [49, 51], "K": [21, 22], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 20]], "example": [1, 65]}, {"END": [124, 125], "A": [118, 122], "V": [89, 93], "Q": [112, 114], "K": [86, 87], "R": null, "K'": [[70, 79], [71, 80]], "V'": [[73, 82], [78, 85]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark likes Nintendo. Jeff likes Orpheus Island National Park. Maria likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Edward likes Casiquiare canal. Mark likes Bzura. Mary likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Bzura? Answer: No\n", "ranges": [{"END": [63, 64], "A": [55, 61], "V": [24, 30], "Q": [49, 51], "K": [21, 22], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[8, 14], [10, 20]], "example": [1, 65]}, {"END": [123, 124], "A": [118, 121], "V": [89, 93], "Q": [112, 114], "K": [86, 87], "R": null, "K'": [[70, 79], [71, 80]], "V'": [[73, 82], [78, 85]], "example": [66, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ronald likes Aventine Hill. Mark likes Saint Gayane Church. Maria likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Scheibbs District? Answer: Yes\n Premise: < Kevin likes Tinguiririca River. Brian likes Oshawa. Carol likes KiKa. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to KiKa? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [25, 29], "Q": [48, 50], "K": [22, 23], "R": null, "K'": [[5, 14], [7, 15]], "V'": [[9, 17], [13, 21]], "example": [1, 62]}, {"END": [120, 121], "A": [115, 118], "V": [87, 90], "Q": [109, 111], "K": [84, 85], "R": null, "K'": [[67, 77], [68, 78]], "V'": [[70, 80], [76, 83]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ronald likes Aventine Hill. Mark likes Saint Gayane Church. Maria likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Scheibbs District? Answer: Yes\n Premise: < Kevin likes Tinguiririca River. Brian likes Oshawa. Carol likes KiKa. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Oshawa? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [25, 29], "Q": [48, 50], "K": [22, 23], "R": null, "K'": [[5, 14], [7, 15]], "V'": [[9, 17], [13, 21]], "example": [1, 62]}, {"END": [120, 121], "A": [115, 118], "V": [87, 90], "Q": [109, 111], "K": [84, 85], "R": null, "K'": [[67, 77], [68, 78]], "V'": [[70, 80], [76, 83]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Rottumerplaat. Betty likes Universidad Nacional Federico Villarreal. Sarah likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Rottumerplaat? Answer: Yes\n Premise: < Paul likes Valvasone. Patricia likes Carpathian Mountains. Jennifer likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Valvasone? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [8, 13], "Q": [55, 57], "K": [5, 6], "R": null, "K'": [[14, 25], [15, 26]], "V'": [[17, 28], [24, 36]], "example": [1, 70]}, {"END": [130, 131], "A": [125, 128], "V": [78, 81], "Q": [119, 121], "K": [75, 76], "R": null, "K'": [[82, 92], [85, 94]], "V'": [[87, 96], [91, 100]], "example": [71, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher likes Rottumerplaat. Betty likes Universidad Nacional Federico Villarreal. Sarah likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Rottumerplaat? Answer: Yes\n Premise: < Paul likes Valvasone. Patricia likes Carpathian Mountains. Jennifer likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Carpathian Mountains? Answer: No\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [8, 13], "Q": [55, 57], "K": [5, 6], "R": null, "K'": [[14, 25], [15, 26]], "V'": [[17, 28], [24, 36]], "example": [1, 70]}, {"END": [131, 132], "A": [125, 129], "V": [78, 81], "Q": [119, 121], "K": [75, 76], "R": null, "K'": [[82, 92], [85, 94]], "V'": [[87, 96], [91, 100]], "example": [71, 133]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tampere Cathedral attracts Sharon. Leiria attracts Donna. Lannemezan attracts James. >. So the boy wants to go to Lannemezan\n < Kosi Zone attracts Margaret. Boinpalle mandal attracts Nancy. Tartu Town Hall attracts Richard. >. So the boy wants to go to Tartu Town Hall\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [20, 24], "Q": [31, 33], "K": [26, 27], "R": null, "K'": [[9, 17], [11, 19]], "V'": [[2, 12], [7, 15]], "example": [1, 41]}, {"END": [77, 78], "A": [78, 83], "V": [60, 65], "Q": [72, 74], "K": [67, 68], "R": null, "K'": [[48, 58], [49, 59]], "V'": [[43, 50], [46, 56]], "example": [42, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Trento attracts Richard. Castleisland Desmonds GAA attracts Deborah. Hamilton Mountain attracts Linda. >. So the boy wants to go to Trento\n < DESTATIS attracts Betty. Kowsar County attracts Paul. Kibungo Province attracts Lisa. >. So the boy wants to go to Kowsar County\n", "ranges": [{"END": [37, 38], "A": [38, 40], "V": [2, 4], "Q": [32, 34], "K": [6, 7], "R": null, "K'": [[18, 26], [21, 28]], "V'": [[8, 22], [16, 24]], "example": [1, 40]}, {"END": [74, 75], "A": [75, 79], "V": [49, 53], "Q": [69, 71], "K": [55, 56], "R": null, "K'": [[47, 64], [48, 65]], "V'": [[42, 57], [45, 62]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Konark Sun temple attracts Kevin. Cappoquin attracts Donna. Helsinki City Hall attracts William. >. So the girl wants to go to Cappoquin\n < Tovarnik attracts Karen. Soalala attracts Sarah. Skole Raion attracts John. >. So the boy wants to go to Skole Raion\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [10, 14], "Q": [31, 33], "K": [16, 18], "R": null, "K'": [[8, 26], [9, 27]], "V'": [[2, 19], [6, 24]], "example": [1, 41]}, {"END": [75, 76], "A": [76, 80], "V": [59, 63], "Q": [70, 72], "K": [65, 66], "R": null, "K'": [[49, 57], [51, 58]], "V'": [[43, 52], [47, 55]], "example": [42, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Iximche attracts Helen. Vinkeveen attracts Richard. Pacentro attracts Ruth. >. So the boy wants to go to Vinkeveen\n < Chaville attracts Betty. New England attracts Donna. Holycross-Ballycahill GAA attracts Brian. >. So the boy wants to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [32, 33], "A": [33, 37], "V": [9, 13], "Q": [27, 29], "K": [15, 16], "R": null, "K'": [[7, 22], [8, 23]], "V'": [[2, 17], [5, 20]], "example": [1, 37]}, {"END": [76, 77], "A": [77, 88], "V": [53, 64], "Q": [71, 73], "K": [66, 67], "R": null, "K'": [[44, 50], [45, 52]], "V'": [[39, 46], [42, 48]], "example": [38, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Santo Stefano d'Aveto attracts Thomas. Bedourie attracts Carol. Indira Gandhi International Airport attracts Kimberly. >. So the boy wants to go to Santo Stefano d'Aveto\n < Bilbao attracts Sandra. Gjerpen attracts Anthony. Eurostat attracts Steven. >. So the girl wants to go to Bilbao\n", "ranges": [{"END": [41, 42], "A": [42, 50], "V": [2, 10], "Q": [36, 38], "K": [12, 13], "R": null, "K'": [[19, 29], [20, 32]], "V'": [[14, 21], [17, 27]], "example": [1, 50]}, {"END": [81, 82], "A": [82, 85], "V": [52, 55], "Q": [76, 78], "K": [57, 59], "R": null, "K'": [[65, 71], [66, 72]], "V'": [[60, 67], [63, 69]], "example": [51, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shablykinsky District attracts Deborah. Mbale District attracts Ronald. bpost attracts Susan. >. So the boy wants to go to Mbale District\n < Westerburg attracts Daniel. AA Drink-leontien.nl attracts Lisa. Beauvais attracts Ruth. >. So the boy wants to go to Westerburg\n", "ranges": [{"END": [36, 37], "A": [37, 41], "V": [13, 17], "Q": [31, 33], "K": [19, 21], "R": null, "K'": [[9, 26], [12, 27]], "V'": [[2, 22], [7, 24]], "example": [1, 41]}, {"END": [78, 79], "A": [79, 82], "V": [43, 46], "Q": [73, 75], "K": [48, 49], "R": null, "K'": [[61, 68], [62, 69]], "V'": [[50, 63], [59, 66]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ghatanji attracts Karen. South East Forests National Park attracts Donald. Bouygues Telecom attracts Laura. >. So the boy wants to go to South East Forests National Park\n < Thiruvattar attracts Edward. Brandon University attracts Mary. Komarichsky District attracts Nancy. >. So the boy wants to go to Thiruvattar\n", "ranges": [{"END": [38, 39], "A": [39, 45], "V": [11, 17], "Q": [33, 35], "K": [19, 20], "R": null, "K'": [[8, 28], [10, 29]], "V'": [[2, 21], [6, 26]], "example": [1, 45]}, {"END": [80, 81], "A": [81, 86], "V": [47, 52], "Q": [75, 77], "K": [54, 55], "R": null, "K'": [[61, 70], [62, 71]], "V'": [[56, 63], [59, 68]], "example": [46, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Kuomintang attracts Brian. Hersbruck attracts Barbara. Vijayawada Junction railway station attracts Ruth. >. So the boy wants to go to Kuomintang\n < Oder-Spree District attracts David. Fort Madalena attracts Brian. Santo Spirito in Sassia attracts Sarah. >. So the girl wants to go to Santo Spirito in Sassia\n", "ranges": [{"END": [39, 40], "A": [40, 44], "V": [2, 6], "Q": [34, 36], "K": [8, 9], "R": null, "K'": [[16, 29], [17, 30]], "V'": [[10, 18], [14, 27]], "example": [1, 44]}, {"END": [84, 85], "A": [85, 93], "V": [64, 72], "Q": [79, 81], "K": [74, 75], "R": null, "K'": [[54, 62], [55, 63]], "V'": [[46, 56], [52, 60]], "example": [45, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tampere Cathedral attracts Sharon. Leiria attracts Donna. Lannemezan attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tampere Cathedral? Answer: No\n Premise: < Kosi Zone attracts Kimberly. Boinpalle mandal attracts Margaret. Tartu Town Hall attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [55, 60], "V": [23, 27], "Q": [49, 51], "K": [29, 30], "R": null, "K'": [[12, 20], [14, 22]], "V'": [[5, 15], [10, 18]], "example": [1, 64]}, {"END": [128, 129], "A": [121, 126], "V": [88, 93], "Q": [115, 117], "K": [95, 96], "R": null, "K'": [[74, 86], [77, 87]], "V'": [[69, 78], [72, 84]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tampere Cathedral attracts Sharon. Leiria attracts Donna. Lannemezan attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Tampere Cathedral? Answer: No\n Premise: < Kosi Zone attracts Kimberly. Boinpalle mandal attracts Margaret. Tartu Town Hall attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [62, 63], "A": [55, 60], "V": [23, 27], "Q": [49, 51], "K": [29, 30], "R": null, "K'": [[12, 20], [14, 22]], "V'": [[5, 15], [10, 18]], "example": [1, 64]}, {"END": [129, 130], "A": [121, 127], "V": [88, 93], "Q": [115, 117], "K": [95, 96], "R": null, "K'": [[74, 86], [77, 87]], "V'": [[69, 78], [72, 84]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Susan. Aucanquilcha attracts Sandra. Kuomintang attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Donald. Mannheim City Airport attracts Lisa. Santo Stefano d'Aveto attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [57, 63], "V": [25, 29], "Q": [51, 53], "K": [31, 32], "R": null, "K'": [[12, 22], [13, 24]], "V'": [[5, 14], [10, 20]], "example": [1, 67]}, {"END": [129, 130], "A": [124, 127], "V": [72, 75], "Q": [118, 120], "K": [77, 78], "R": null, "K'": [[85, 97], [86, 99]], "V'": [[79, 87], [83, 95]], "example": [68, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Susan. Aucanquilcha attracts Sandra. Kuomintang attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Donald. Mannheim City Airport attracts Lisa. Santo Stefano d'Aveto attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [65, 66], "A": [57, 63], "V": [25, 29], "Q": [51, 53], "K": [31, 32], "R": null, "K'": [[12, 22], [13, 24]], "V'": [[5, 14], [10, 20]], "example": [1, 67]}, {"END": [130, 131], "A": [124, 128], "V": [72, 75], "Q": [118, 120], "K": [77, 78], "R": null, "K'": [[85, 97], [86, 99]], "V'": [[79, 87], [83, 95]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Elizabeth. public transport in Istanbul attracts Patricia. Hellenic Police attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Christopher. Theni district attracts Karen. Entracque attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [25, 29], "Q": [51, 53], "K": [31, 32], "R": null, "K'": [[11, 21], [12, 24]], "V'": [[5, 13], [9, 19]], "example": [1, 65]}, {"END": [121, 122], "A": [116, 119], "V": [77, 80], "Q": [110, 112], "K": [82, 84], "R": null, "K'": [[75, 90], [76, 91]], "V'": [[70, 85], [73, 88]], "example": [66, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Elizabeth. public transport in Istanbul attracts Patricia. Hellenic Police attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Christopher. Theni district attracts Karen. Entracque attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [25, 29], "Q": [51, 53], "K": [31, 32], "R": null, "K'": [[11, 21], [12, 24]], "V'": [[5, 13], [9, 19]], "example": [1, 65]}, {"END": [121, 122], "A": [116, 119], "V": [77, 80], "Q": [110, 112], "K": [82, 84], "R": null, "K'": [[75, 90], [76, 91]], "V'": [[70, 85], [73, 88]], "example": [66, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Daniel. Castrovirreyna District attracts Susan. Manila Light Rail Transit System attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Joseph. Gammalsvenskby attracts Kevin. VR warehouses attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [56, 61], "V": [11, 16], "Q": [50, 52], "K": [18, 19], "R": null, "K'": [[9, 29], [10, 31]], "V'": [[5, 20], [7, 27]], "example": [1, 65]}, {"END": [136, 137], "A": [128, 134], "V": [92, 98], "Q": [122, 124], "K": [100, 103], "R": null, "K'": [[80, 90], [81, 91]], "V'": [[70, 82], [78, 88]], "example": [66, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Daniel. Castrovirreyna District attracts Susan. Manila Light Rail Transit System attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Joseph. Gammalsvenskby attracts Kevin. VR warehouses attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [63, 64], "A": [56, 61], "V": [11, 16], "Q": [50, 52], "K": [18, 19], "R": null, "K'": [[9, 29], [10, 31]], "V'": [[5, 20], [7, 27]], "example": [1, 65]}, {"END": [136, 137], "A": [128, 134], "V": [92, 98], "Q": [122, 124], "K": [100, 103], "R": null, "K'": [[80, 90], [81, 91]], "V'": [[70, 82], [78, 88]], "example": [66, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Margaret. Manila Light Rail Transit System attracts Jeff. 1960 Summer Olympics attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Susan. Bose Institute attracts George. Lindholm station attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [61, 67], "V": [5, 10], "Q": [54, 56], "K": [12, 13], "R": null, "K'": [[23, 34], [24, 35]], "V'": [[14, 26], [21, 32]], "example": [1, 71]}, {"END": [125, 126], "A": [120, 123], "V": [82, 85], "Q": [114, 116], "K": [87, 88], "R": null, "K'": [[80, 94], [81, 95]], "V'": [[76, 89], [78, 92]], "example": [72, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Margaret. Manila Light Rail Transit System attracts Jeff. 1960 Summer Olympics attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Susan. Bose Institute attracts George. Lindholm station attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Breege? Answer: No\n", "ranges": [{"END": [69, 70], "A": [61, 67], "V": [5, 10], "Q": [54, 56], "K": [12, 13], "R": null, "K'": [[23, 34], [24, 35]], "V'": [[14, 26], [21, 32]], "example": [1, 71]}, {"END": [124, 125], "A": [120, 122], "V": [82, 85], "Q": [114, 116], "K": [87, 88], "R": null, "K'": [[80, 94], [81, 95]], "V'": [[76, 89], [78, 92]], "example": [72, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Mark. Orpheus Island National Park attracts Jeff. Borghetto di Vara attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Edward. Bzura attracts Mark. L'Escala attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [55, 61], "V": [21, 27], "Q": [49, 51], "K": [29, 30], "R": null, "K'": [[9, 19], [10, 20]], "V'": [[5, 11], [7, 17]], "example": [1, 65]}, {"END": [124, 125], "A": [118, 122], "V": [86, 90], "Q": [112, 114], "K": [92, 93], "R": null, "K'": [[77, 84], [78, 85]], "V'": [[70, 79], [75, 82]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Mark. Orpheus Island National Park attracts Jeff. Borghetto di Vara attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Edward. Bzura attracts Mark. L'Escala attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Bzura? Answer: No\n", "ranges": [{"END": [63, 64], "A": [55, 61], "V": [21, 27], "Q": [49, 51], "K": [29, 30], "R": null, "K'": [[9, 19], [10, 20]], "V'": [[5, 11], [7, 17]], "example": [1, 65]}, {"END": [123, 124], "A": [118, 121], "V": [86, 90], "Q": [112, 114], "K": [92, 93], "R": null, "K'": [[77, 84], [78, 85]], "V'": [[70, 79], [75, 82]], "example": [66, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Ronald. Saint Gayane Church attracts Mark. Scheibbs District attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Scheibbs District? Answer: Yes\n Premise: < Tinguiririca River attracts Kevin. Oshawa attracts Brian. KiKa attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to KiKa? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [22, 26], "Q": [48, 50], "K": [28, 29], "R": null, "K'": [[11, 20], [13, 21]], "V'": [[5, 14], [9, 18]], "example": [1, 62]}, {"END": [120, 121], "A": [115, 118], "V": [84, 87], "Q": [109, 111], "K": [89, 90], "R": null, "K'": [[75, 82], [76, 83]], "V'": [[67, 77], [73, 80]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Ronald. Saint Gayane Church attracts Mark. Scheibbs District attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Scheibbs District? Answer: Yes\n Premise: < Tinguiririca River attracts Kevin. Oshawa attracts Brian. KiKa attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to Oshawa? Answer: No\n", "ranges": [{"END": [60, 61], "A": [54, 58], "V": [22, 26], "Q": [48, 50], "K": [28, 29], "R": null, "K'": [[11, 20], [13, 21]], "V'": [[5, 14], [9, 18]], "example": [1, 62]}, {"END": [120, 121], "A": [115, 118], "V": [84, 87], "Q": [109, 111], "K": [89, 90], "R": null, "K'": [[75, 82], [76, 83]], "V'": [[67, 77], [73, 80]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rottumerplaat attracts Christopher. Universidad Nacional Federico Villarreal attracts Betty. Foundation for a Free Information Infrastructure attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Rottumerplaat? Answer: Yes\n Premise: < Valvasone attracts Paul. Carpathian Mountains attracts Patricia. Scheibbs District attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Valvasone? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [5, 10], "Q": [55, 57], "K": [12, 13], "R": null, "K'": [[23, 35], [24, 36]], "V'": [[14, 25], [21, 33]], "example": [1, 70]}, {"END": [130, 131], "A": [125, 128], "V": [75, 78], "Q": [119, 121], "K": [80, 81], "R": null, "K'": [[88, 98], [91, 100]], "V'": [[82, 92], [86, 96]], "example": [71, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rottumerplaat attracts Christopher. Universidad Nacional Federico Villarreal attracts Betty. Foundation for a Free Information Infrastructure attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Rottumerplaat? Answer: Yes\n Premise: < Valvasone attracts Paul. Carpathian Mountains attracts Patricia. Scheibbs District attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to Carpathian Mountains? Answer: No\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [5, 10], "Q": [55, 57], "K": [12, 13], "R": null, "K'": [[23, 35], [24, 36]], "V'": [[14, 25], [21, 33]], "example": [1, 70]}, {"END": [131, 132], "A": [125, 129], "V": [75, 78], "Q": [119, 121], "K": [80, 81], "R": null, "K'": [[88, 98], [91, 100]], "V'": [[82, 92], [86, 96]], "example": [71, 133]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Brian likes Tampere Cathedral. Kenneth likes Leiria. Mary likes Lannemezan. >. The boys do not want to go to Lannemezan\n < Joseph likes Kosi Zone. Daniel likes Boinpalle mandal. Maria likes Tartu Town Hall. >. The boys do not want to go to Tartu Town Hall\n", "ranges": [{"END": [35, 36], "A'": [36, 40], "V'": [21, 25], "Q": [28, 30], "K'": [18, 19], "R": [31, 32], "K": [[2, 11], [3, 12]], "V": [[5, 14], [10, 17]], "example": [1, 40]}, {"END": [77, 78], "A'": [78, 83], "V'": [62, 67], "Q": [70, 72], "K'": [59, 60], "R": [73, 74], "K": [[42, 49], [43, 50]], "V": [[45, 52], [48, 58]], "example": [41, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Maria likes Trento. Jeff likes Castleisland Desmonds GAA. Robert likes Hamilton Mountain. >. The boys do not want to go to Trento\n < Mark likes DESTATIS. Karen likes Kowsar County. Christopher likes Kibungo Province. >. The boys do not want to go to Kowsar County\n", "ranges": [{"END": [35, 36], "A'": [36, 38], "V'": [5, 7], "Q": [28, 30], "K'": [2, 3], "R": [31, 32], "K": [[8, 20], [9, 21]], "V": [[11, 23], [19, 25]], "example": [1, 38]}, {"END": [74, 75], "A'": [75, 79], "V'": [51, 55], "Q": [67, 69], "K'": [47, 49], "R": [70, 71], "K": [[40, 56], [41, 57]], "V": [[43, 59], [46, 64]], "example": [39, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Sarah likes Konark Sun temple. Kenneth likes Cappoquin. Elizabeth likes Helsinki City Hall. >. The girls do not want to go to Cappoquin\n < Paul likes Tovarnik. Kevin likes Soalala. Patricia likes Skole Raion. >. The boys do not want to go to Skole Raion\n", "ranges": [{"END": [36, 37], "A'": [37, 41], "V'": [13, 17], "Q": [29, 31], "K'": [10, 11], "R": [32, 33], "K": [[2, 18], [3, 19]], "V": [[5, 21], [9, 26]], "example": [1, 41]}, {"END": [77, 78], "A'": [78, 82], "V'": [63, 67], "Q": [70, 72], "K'": [58, 61], "R": [73, 74], "K": [[43, 51], [44, 52]], "V": [[46, 54], [50, 57]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Donald likes Iximche. Maria likes Vinkeveen. Edward likes Pacentro. >. The boys do not want to go to Vinkeveen\n < Mark likes Chaville. Kenneth likes New England. Sharon likes Holycross-Ballycahill GAA. >. The boys do not want to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [33, 34], "A'": [34, 38], "V'": [12, 16], "Q": [26, 28], "K'": [9, 10], "R": [29, 30], "K": [[2, 17], [3, 18]], "V": [[5, 20], [8, 23]], "example": [1, 38]}, {"END": [78, 79], "A'": [79, 90], "V'": [57, 68], "Q": [71, 73], "K'": [53, 55], "R": [74, 75], "K": [[40, 47], [41, 48]], "V": [[43, 50], [46, 52]], "example": [39, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Dorothy likes Santo Stefano d'Aveto. Steven likes Bedourie. Jason likes Indira Gandhi International Airport. >. The boys do not want to go to Santo Stefano d'Aveto\n < George likes Bilbao. Laura likes Gjerpen. Carol likes Eurostat. >. The girls do not want to go to Bilbao\n", "ranges": [{"END": [41, 42], "A'": [42, 50], "V'": [6, 14], "Q": [34, 36], "K'": [2, 4], "R": [37, 38], "K": [[15, 22], [16, 23]], "V": [[18, 25], [21, 31]], "example": [1, 50]}, {"END": [81, 82], "A'": [82, 85], "V'": [55, 58], "Q": [74, 76], "K'": [52, 53], "R": [77, 78], "K": [[59, 66], [60, 67]], "V": [[62, 69], [65, 71]], "example": [51, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Jeff likes Shablykinsky District. Michelle likes Mbale District. Charles likes bpost. >. The boys do not want to go to Mbale District\n < Nancy likes Westerburg. Christopher likes AA Drink-leontien.nl. Edward likes Beauvais. >. The boys do not want to go to Westerburg\n", "ranges": [{"END": [35, 36], "A'": [36, 40], "V'": [15, 19], "Q": [28, 30], "K'": [11, 13], "R": [31, 32], "K": [[2, 20], [3, 21]], "V": [[5, 23], [10, 25]], "example": [1, 40]}, {"END": [78, 79], "A'": [79, 82], "V'": [45, 48], "Q": [71, 73], "K'": [42, 43], "R": [74, 75], "K": [[49, 62], [50, 63]], "V": [[52, 65], [61, 68]], "example": [41, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Paul likes Ghatanji. Helen likes South East Forests National Park. Anthony likes Bouygues Telecom. >. The boys do not want to go to South East Forests National Park\n < Ruth likes Thiruvattar. James likes Brandon University. Daniel likes Komarichsky District. >. The boys do not want to go to Thiruvattar\n", "ranges": [{"END": [38, 39], "A'": [39, 45], "V'": [13, 19], "Q": [31, 33], "K'": [10, 11], "R": [34, 35], "K": [[2, 20], [3, 21]], "V": [[5, 23], [9, 28]], "example": [1, 45]}, {"END": [81, 82], "A'": [82, 87], "V'": [50, 55], "Q": [74, 76], "K'": [47, 48], "R": [77, 78], "K": [[56, 63], [57, 64]], "V": [[59, 66], [62, 71]], "example": [46, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Sharon likes Kuomintang. Michael likes Hersbruck. Edward likes Vijayawada Junction railway station. >. The boys do not want to go to Kuomintang\n < Jennifer likes Oder-Spree District. Sharon likes Fort Madalena. Kevin likes Santo Spirito in Sassia. >. The girls do not want to go to Santo Spirito in Sassia\n", "ranges": [{"END": [41, 42], "A'": [42, 46], "V'": [6, 10], "Q": [34, 36], "K'": [2, 4], "R": [37, 38], "K": [[11, 19], [12, 20]], "V": [[14, 22], [18, 31]], "example": [1, 46]}, {"END": [89, 90], "A'": [90, 98], "V'": [71, 79], "Q": [82, 84], "K'": [68, 69], "R": [85, 86], "K": [[48, 59], [50, 61]], "V": [[52, 63], [58, 67]], "example": [47, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Tampere Cathedral. Kenneth likes Leiria. Mary likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tampere Cathedral? Answer: No\n Premise: < Jason likes Kosi Zone. Joseph likes Boinpalle mandal. Nancy likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [24, 28], "Q": [47, 49], "K'": [21, 22], "R": [50, 51], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 20]], "example": [1, 64]}, {"END": [128, 129], "A'": [121, 126], "V'": [89, 94], "Q": [113, 115], "K'": [86, 87], "R": [116, 117], "K": [[69, 76], [70, 77]], "V": [[72, 79], [75, 85]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian likes Tampere Cathedral. Kenneth likes Leiria. Mary likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tampere Cathedral? Answer: No\n Premise: < Jason likes Kosi Zone. Joseph likes Boinpalle mandal. Nancy likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [24, 28], "Q": [47, 49], "K'": [21, 22], "R": [50, 51], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 20]], "example": [1, 64]}, {"END": [129, 130], "A'": [121, 127], "V'": [89, 94], "Q": [113, 115], "K'": [86, 87], "R": [116, 117], "K": [[69, 76], [70, 77]], "V": [[72, 79], [75, 85]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Tinapa Resort. George likes Aucanquilcha. Karen likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Aucanquilcha? Answer: No\n Premise: < Helen likes Bad Camberg. Christopher likes Mannheim City Airport. David likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [28, 32], "Q": [51, 53], "K'": [24, 26], "R": [54, 55], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 23]], "example": [1, 69]}, {"END": [132, 133], "A'": [127, 130], "V'": [77, 80], "Q": [119, 121], "K'": [74, 75], "R": [122, 123], "K": [[81, 89], [82, 90]], "V": [[84, 92], [88, 100]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles likes Tinapa Resort. George likes Aucanquilcha. Karen likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Aucanquilcha? Answer: No\n Premise: < Helen likes Bad Camberg. Christopher likes Mannheim City Airport. David likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [28, 32], "Q": [51, 53], "K'": [24, 26], "R": [54, 55], "K": [[5, 14], [6, 15]], "V": [[8, 17], [13, 23]], "example": [1, 69]}, {"END": [133, 134], "A'": [127, 131], "V'": [77, 80], "Q": [119, 121], "K'": [74, 75], "R": [122, 123], "K": [[81, 89], [82, 90]], "V": [[84, 92], [88, 100]], "example": [70, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William likes Fischenthal. John likes public transport in Istanbul. Kimberly likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Fischenthal? Answer: No\n Premise: < Lisa likes Bernheze. Paul likes Theni district. Donna likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Theni district? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [59, 63], "V'": [28, 32], "Q": [51, 53], "K'": [23, 26], "R": [54, 55], "K": [[5, 13], [6, 14]], "V": [[8, 16], [12, 22]], "example": [1, 67]}, {"END": [125, 126], "A'": [120, 123], "V'": [82, 85], "Q": [112, 114], "K'": [79, 80], "R": [115, 116], "K": [[72, 86], [73, 88]], "V": [[75, 90], [78, 93]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William likes Fischenthal. John likes public transport in Istanbul. Kimberly likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Fischenthal? Answer: No\n Premise: < Lisa likes Bernheze. Paul likes Theni district. Donna likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Bernheze? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [59, 63], "V'": [28, 32], "Q": [51, 53], "K'": [23, 26], "R": [54, 55], "K": [[5, 13], [6, 14]], "V": [[8, 16], [12, 22]], "example": [1, 67]}, {"END": [125, 126], "A'": [120, 123], "V'": [82, 85], "Q": [112, 114], "K'": [79, 80], "R": [115, 116], "K": [[72, 86], [73, 88]], "V": [[75, 90], [78, 93]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy likes Emscher. Charles likes Castrovirreyna District. Michelle likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Castrovirreyna District? Answer: Yes\n Premise: < Margaret likes Electoral district of Wantirna. Sarah likes Gammalsvenskby. Jason likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [58, 63], "V'": [14, 19], "Q": [50, 52], "K'": [11, 12], "R": [53, 54], "K": [[5, 20], [6, 22]], "V": [[8, 24], [10, 31]], "example": [1, 67]}, {"END": [138, 139], "A'": [130, 136], "V'": [97, 103], "Q": [122, 124], "K'": [94, 95], "R": [125, 126], "K": [[72, 84], [73, 85]], "V": [[75, 87], [83, 93]], "example": [68, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy likes Emscher. Charles likes Castrovirreyna District. Michelle likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Castrovirreyna District? Answer: Yes\n Premise: < Margaret likes Electoral district of Wantirna. Sarah likes Gammalsvenskby. Jason likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [58, 63], "V'": [14, 19], "Q": [50, 52], "K'": [11, 12], "R": [53, 54], "K": [[5, 20], [6, 22]], "V": [[8, 24], [10, 31]], "example": [1, 67]}, {"END": [138, 139], "A'": [130, 136], "V'": [97, 103], "Q": [122, 124], "K'": [94, 95], "R": [125, 126], "K": [[72, 84], [73, 85]], "V": [[75, 87], [83, 93]], "example": [68, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph likes Bilecik Province. Deborah likes Manila Light Rail Transit System. Patricia likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Charles likes Breege. Sandra likes Bose Institute. Anthony likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [8, 13], "Q": [58, 60], "K'": [5, 6], "R": [61, 62], "K": [[14, 27], [17, 30]], "V": [[19, 33], [26, 39]], "example": [1, 77]}, {"END": [134, 135], "A'": [129, 132], "V'": [92, 95], "Q": [121, 123], "K'": [88, 90], "R": [124, 125], "K": [[82, 96], [83, 97]], "V": [[85, 99], [87, 102]], "example": [78, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph likes Bilecik Province. Deborah likes Manila Light Rail Transit System. Patricia likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Charles likes Breege. Sandra likes Bose Institute. Anthony likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Breege? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [8, 13], "Q": [58, 60], "K'": [5, 6], "R": [61, 62], "K": [[14, 27], [17, 30]], "V": [[19, 33], [26, 39]], "example": [1, 77]}, {"END": [133, 134], "A'": [129, 131], "V'": [92, 95], "Q": [121, 123], "K'": [88, 90], "R": [124, 125], "K": [[82, 96], [83, 97]], "V": [[85, 99], [87, 102]], "example": [78, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Nintendo. Deborah likes Orpheus Island National Park. Richard likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Ruth likes Casiquiare canal. Betty likes Bzura. James likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [26, 32], "Q": [51, 53], "K'": [23, 24], "R": [54, 55], "K": [[5, 11], [6, 14]], "V": [[8, 16], [10, 22]], "example": [1, 69]}, {"END": [130, 131], "A'": [124, 128], "V'": [93, 97], "Q": [116, 118], "K'": [90, 91], "R": [119, 120], "K": [[74, 83], [75, 84]], "V": [[77, 86], [82, 89]], "example": [70, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty likes Nintendo. Deborah likes Orpheus Island National Park. Richard likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Ruth likes Casiquiare canal. Betty likes Bzura. James likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Bzura? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [26, 32], "Q": [51, 53], "K'": [23, 24], "R": [54, 55], "K": [[5, 11], [6, 14]], "V": [[8, 16], [10, 22]], "example": [1, 69]}, {"END": [129, 130], "A'": [124, 127], "V'": [93, 97], "Q": [116, 118], "K'": [90, 91], "R": [119, 120], "K": [[74, 83], [75, 84]], "V": [[77, 86], [82, 89]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Aventine Hill. Betty likes Saint Gayane Church. Richard likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Scheibbs District? Answer: Yes\n Premise: < Sarah likes Tinguiririca River. Sharon likes Oshawa. Steven likes KiKa. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to KiKa? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [56, 60], "V'": [25, 29], "Q": [48, 50], "K'": [22, 23], "R": [51, 52], "K": [[5, 14], [7, 15]], "V": [[9, 17], [13, 21]], "example": [1, 64]}, {"END": [125, 126], "A'": [120, 123], "V'": [90, 93], "Q": [112, 114], "K'": [87, 88], "R": [115, 116], "K": [[69, 79], [70, 81]], "V": [[72, 83], [78, 86]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle likes Aventine Hill. Betty likes Saint Gayane Church. Richard likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Scheibbs District? Answer: Yes\n Premise: < Sarah likes Tinguiririca River. Sharon likes Oshawa. Steven likes KiKa. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Oshawa? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [56, 60], "V'": [25, 29], "Q": [48, 50], "K'": [22, 23], "R": [51, 52], "K": [[5, 14], [7, 15]], "V": [[9, 17], [13, 21]], "example": [1, 64]}, {"END": [125, 126], "A'": [120, 123], "V'": [90, 93], "Q": [112, 114], "K'": [87, 88], "R": [115, 116], "K": [[69, 79], [70, 81]], "V": [[72, 83], [78, 86]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Rottumerplaat. Mark likes Universidad Nacional Federico Villarreal. Kevin likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Rottumerplaat? Answer: Yes\n Premise: < Karen likes Valvasone. John likes Carpathian Mountains. David likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Valvasone? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [63, 68], "V'": [8, 13], "Q": [55, 57], "K'": [5, 6], "R": [58, 59], "K": [[14, 25], [15, 26]], "V": [[17, 28], [24, 36]], "example": [1, 72]}, {"END": [132, 133], "A'": [127, 130], "V'": [81, 84], "Q": [119, 121], "K'": [77, 79], "R": [122, 123], "K": [[85, 93], [86, 94]], "V": [[88, 96], [92, 100]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa likes Rottumerplaat. Mark likes Universidad Nacional Federico Villarreal. Kevin likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Rottumerplaat? Answer: Yes\n Premise: < Karen likes Valvasone. John likes Carpathian Mountains. David likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Carpathian Mountains? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [63, 68], "V'": [8, 13], "Q": [55, 57], "K'": [5, 6], "R": [58, 59], "K": [[14, 25], [15, 26]], "V": [[17, 28], [24, 36]], "example": [1, 72]}, {"END": [133, 134], "A'": [127, 131], "V'": [81, 84], "Q": [119, 121], "K'": [77, 79], "R": [122, 123], "K": [[85, 93], [86, 94]], "V": [[88, 96], [92, 100]], "example": [73, 135]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tampere Cathedral attracts Brian. Leiria attracts Kenneth. Lannemezan attracts Mary. >. The boys do not want to go to Lannemezan\n < Kosi Zone attracts Joseph. Boinpalle mandal attracts Daniel. Tartu Town Hall attracts Maria. >. The boys do not want to go to Tartu Town Hall\n", "ranges": [{"END": [35, 36], "A'": [36, 40], "V'": [18, 22], "Q": [28, 30], "K'": [24, 25], "R": [31, 32], "K": [[9, 16], [10, 17]], "V": [[2, 11], [7, 14]], "example": [1, 40]}, {"END": [77, 78], "A'": [78, 83], "V'": [59, 64], "Q": [70, 72], "K'": [66, 67], "R": [73, 74], "K": [[47, 57], [48, 58]], "V": [[42, 49], [45, 55]], "example": [41, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Trento attracts Maria. Castleisland Desmonds GAA attracts Jeff. Hamilton Mountain attracts Robert. >. The boys do not want to go to Trento\n < DESTATIS attracts Mark. Kowsar County attracts Karen. Kibungo Province attracts Christopher. >. The boys do not want to go to Kowsar County\n", "ranges": [{"END": [35, 36], "A'": [36, 38], "V'": [2, 4], "Q": [28, 30], "K'": [6, 7], "R": [31, 32], "K": [[18, 24], [19, 25]], "V": [[8, 20], [16, 22]], "example": [1, 38]}, {"END": [74, 75], "A'": [75, 79], "V'": [47, 51], "Q": [67, 69], "K'": [53, 55], "R": [70, 71], "K": [[45, 63], [46, 64]], "V": [[40, 56], [43, 61]], "example": [39, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Konark Sun temple attracts Sarah. Cappoquin attracts Kenneth. Helsinki City Hall attracts Elizabeth. >. The girls do not want to go to Cappoquin\n < Tovarnik attracts Paul. Soalala attracts Kevin. Skole Raion attracts Patricia. >. The boys do not want to go to Skole Raion\n", "ranges": [{"END": [36, 37], "A'": [37, 41], "V'": [10, 14], "Q": [29, 31], "K'": [16, 17], "R": [32, 33], "K": [[8, 25], [9, 26]], "V": [[2, 18], [6, 23]], "example": [1, 41]}, {"END": [77, 78], "A'": [78, 82], "V'": [58, 62], "Q": [70, 72], "K'": [64, 67], "R": [73, 74], "K": [[49, 56], [50, 57]], "V": [[43, 51], [47, 54]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Iximche attracts Donald. Vinkeveen attracts Maria. Pacentro attracts Edward. >. The boys do not want to go to Vinkeveen\n < Chaville attracts Mark. New England attracts Kenneth. Holycross-Ballycahill GAA attracts Sharon. >. The boys do not want to go to Holycross-Ballycahill GAA\n", "ranges": [{"END": [33, 34], "A'": [34, 38], "V'": [9, 13], "Q": [26, 28], "K'": [15, 16], "R": [29, 30], "K": [[7, 22], [8, 23]], "V": [[2, 17], [5, 20]], "example": [1, 38]}, {"END": [78, 79], "A'": [79, 90], "V'": [53, 64], "Q": [71, 73], "K'": [66, 68], "R": [74, 75], "K": [[45, 51], [46, 52]], "V": [[40, 47], [43, 49]], "example": [39, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Santo Stefano d'Aveto attracts Dorothy. Bedourie attracts Steven. Indira Gandhi International Airport attracts Jason. >. The boys do not want to go to Santo Stefano d'Aveto\n < Bilbao attracts George. Gjerpen attracts Laura. Eurostat attracts Carol. >. The girls do not want to go to Bilbao\n", "ranges": [{"END": [41, 42], "A'": [42, 50], "V'": [2, 10], "Q": [34, 36], "K'": [12, 14], "R": [37, 38], "K": [[20, 30], [21, 31]], "V": [[15, 22], [18, 28]], "example": [1, 50]}, {"END": [81, 82], "A'": [82, 85], "V'": [52, 55], "Q": [74, 76], "K'": [57, 58], "R": [77, 78], "K": [[64, 70], [65, 71]], "V": [[59, 66], [62, 68]], "example": [51, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shablykinsky District attracts Jeff. Mbale District attracts Michelle. bpost attracts Charles. >. The boys do not want to go to Mbale District\n < Westerburg attracts Nancy. AA Drink-leontien.nl attracts Christopher. Beauvais attracts Edward. >. The boys do not want to go to Westerburg\n", "ranges": [{"END": [35, 36], "A'": [36, 40], "V'": [11, 15], "Q": [28, 30], "K'": [17, 19], "R": [31, 32], "K": [[9, 24], [10, 25]], "V": [[2, 20], [7, 22]], "example": [1, 40]}, {"END": [78, 79], "A'": [79, 82], "V'": [42, 45], "Q": [71, 73], "K'": [47, 48], "R": [74, 75], "K": [[60, 67], [61, 68]], "V": [[49, 62], [58, 65]], "example": [41, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ghatanji attracts Paul. South East Forests National Park attracts Helen. Bouygues Telecom attracts Anthony. >. The boys do not want to go to South East Forests National Park\n < Thiruvattar attracts Ruth. Brandon University attracts James. Komarichsky District attracts Daniel. >. The boys do not want to go to Thiruvattar\n", "ranges": [{"END": [38, 39], "A'": [39, 45], "V'": [10, 16], "Q": [31, 33], "K'": [18, 19], "R": [34, 35], "K": [[8, 27], [9, 28]], "V": [[2, 20], [6, 25]], "example": [1, 45]}, {"END": [81, 82], "A'": [82, 87], "V'": [47, 52], "Q": [74, 76], "K'": [54, 55], "R": [77, 78], "K": [[61, 70], [62, 71]], "V": [[56, 63], [59, 68]], "example": [46, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Kuomintang attracts Sharon. Hersbruck attracts Michael. Vijayawada Junction railway station attracts Edward. >. The boys do not want to go to Kuomintang\n < Oder-Spree District attracts Jennifer. Fort Madalena attracts Sharon. Santo Spirito in Sassia attracts Kevin. >. The girls do not want to go to Santo Spirito in Sassia\n", "ranges": [{"END": [41, 42], "A'": [42, 46], "V'": [2, 6], "Q": [34, 36], "K'": [8, 10], "R": [37, 38], "K": [[17, 30], [18, 31]], "V": [[11, 19], [15, 28]], "example": [1, 46]}, {"END": [89, 90], "A'": [90, 98], "V'": [68, 76], "Q": [82, 84], "K'": [78, 79], "R": [85, 86], "K": [[56, 65], [58, 67]], "V": [[48, 59], [54, 63]], "example": [47, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tampere Cathedral attracts Brian. Leiria attracts Kenneth. Lannemezan attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tampere Cathedral? Answer: No\n Premise: < Kosi Zone attracts Jason. Boinpalle mandal attracts Joseph. Tartu Town Hall attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [21, 25], "Q": [47, 49], "K'": [27, 28], "R": [50, 51], "K": [[12, 19], [13, 20]], "V": [[5, 14], [10, 17]], "example": [1, 64]}, {"END": [128, 129], "A'": [121, 126], "V'": [86, 91], "Q": [113, 115], "K'": [93, 94], "R": [116, 117], "K": [[74, 84], [75, 85]], "V": [[69, 76], [72, 82]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tampere Cathedral attracts Brian. Leiria attracts Kenneth. Lannemezan attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Tampere Cathedral? Answer: No\n Premise: < Kosi Zone attracts Jason. Boinpalle mandal attracts Joseph. Tartu Town Hall attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [55, 60], "V'": [21, 25], "Q": [47, 49], "K'": [27, 28], "R": [50, 51], "K": [[12, 19], [13, 20]], "V": [[5, 14], [10, 17]], "example": [1, 64]}, {"END": [129, 130], "A'": [121, 127], "V'": [86, 91], "Q": [113, 115], "K'": [93, 94], "R": [116, 117], "K": [[74, 84], [75, 85]], "V": [[69, 76], [72, 82]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Charles. Aucanquilcha attracts George. Kuomintang attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Helen. Mannheim City Airport attracts Christopher. Santo Stefano d'Aveto attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [24, 28], "Q": [51, 53], "K'": [30, 32], "R": [54, 55], "K": [[12, 22], [13, 23]], "V": [[5, 14], [10, 20]], "example": [1, 69]}, {"END": [132, 133], "A'": [127, 130], "V'": [74, 77], "Q": [119, 121], "K'": [79, 80], "R": [122, 123], "K": [[87, 99], [88, 100]], "V": [[81, 89], [85, 97]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Charles. Aucanquilcha attracts George. Kuomintang attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Helen. Mannheim City Airport attracts Christopher. Santo Stefano d'Aveto attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [24, 28], "Q": [51, 53], "K'": [30, 32], "R": [54, 55], "K": [[12, 22], [13, 23]], "V": [[5, 14], [10, 20]], "example": [1, 69]}, {"END": [133, 134], "A'": [127, 131], "V'": [74, 77], "Q": [119, 121], "K'": [79, 80], "R": [122, 123], "K": [[87, 99], [88, 100]], "V": [[81, 89], [85, 97]], "example": [70, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts William. public transport in Istanbul attracts John. Hellenic Police attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Lisa. Theni district attracts Paul. Entracque attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Theni district? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [59, 63], "V'": [23, 27], "Q": [51, 53], "K'": [29, 32], "R": [54, 55], "K": [[11, 21], [12, 22]], "V": [[5, 13], [9, 19]], "example": [1, 67]}, {"END": [125, 126], "A'": [120, 123], "V'": [79, 82], "Q": [112, 114], "K'": [84, 85], "R": [115, 116], "K": [[77, 91], [78, 93]], "V": [[72, 86], [75, 89]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts William. public transport in Istanbul attracts John. Hellenic Police attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Lisa. Theni district attracts Paul. Entracque attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Bernheze? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [59, 63], "V'": [23, 27], "Q": [51, 53], "K'": [29, 32], "R": [54, 55], "K": [[11, 21], [12, 22]], "V": [[5, 13], [9, 19]], "example": [1, 67]}, {"END": [125, 126], "A'": [120, 123], "V'": [79, 82], "Q": [112, 114], "K'": [84, 85], "R": [115, 116], "K": [[77, 91], [78, 93]], "V": [[72, 86], [75, 89]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Nancy. Castrovirreyna District attracts Charles. Manila Light Rail Transit System attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Margaret. Gammalsvenskby attracts Sarah. VR warehouses attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [58, 63], "V'": [11, 16], "Q": [50, 52], "K'": [18, 19], "R": [53, 54], "K": [[9, 29], [10, 31]], "V": [[5, 20], [7, 27]], "example": [1, 67]}, {"END": [138, 139], "A'": [130, 136], "V'": [94, 100], "Q": [122, 124], "K'": [102, 103], "R": [125, 126], "K": [[82, 92], [83, 93]], "V": [[72, 84], [80, 90]], "example": [68, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Nancy. Castrovirreyna District attracts Charles. Manila Light Rail Transit System attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Margaret. Gammalsvenskby attracts Sarah. VR warehouses attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [58, 63], "V'": [11, 16], "Q": [50, 52], "K'": [18, 19], "R": [53, 54], "K": [[9, 29], [10, 31]], "V": [[5, 20], [7, 27]], "example": [1, 67]}, {"END": [138, 139], "A'": [130, 136], "V'": [94, 100], "Q": [122, 124], "K'": [102, 103], "R": [125, 126], "K": [[82, 92], [83, 93]], "V": [[72, 84], [80, 90]], "example": [68, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Joseph. Manila Light Rail Transit System attracts Deborah. 1960 Summer Olympics attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Charles. Bose Institute attracts Sandra. Lindholm station attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [5, 10], "Q": [58, 60], "K'": [12, 13], "R": [61, 62], "K": [[23, 36], [26, 39]], "V": [[14, 28], [21, 34]], "example": [1, 77]}, {"END": [134, 135], "A'": [129, 132], "V'": [88, 91], "Q": [121, 123], "K'": [93, 95], "R": [124, 125], "K": [[86, 101], [87, 102]], "V": [[82, 96], [84, 99]], "example": [78, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Joseph. Manila Light Rail Transit System attracts Deborah. 1960 Summer Olympics attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Charles. Bose Institute attracts Sandra. Lindholm station attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Breege? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [5, 10], "Q": [58, 60], "K'": [12, 13], "R": [61, 62], "K": [[23, 36], [26, 39]], "V": [[14, 28], [21, 34]], "example": [1, 77]}, {"END": [133, 134], "A'": [129, 131], "V'": [88, 91], "Q": [121, 123], "K'": [93, 95], "R": [124, 125], "K": [[86, 101], [87, 102]], "V": [[82, 96], [84, 99]], "example": [78, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Betty. Orpheus Island National Park attracts Deborah. Borghetto di Vara attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Ruth. Bzura attracts Betty. L'Escala attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [23, 29], "Q": [51, 53], "K'": [31, 32], "R": [54, 55], "K": [[9, 19], [10, 22]], "V": [[5, 11], [7, 17]], "example": [1, 69]}, {"END": [130, 131], "A'": [124, 128], "V'": [90, 94], "Q": [116, 118], "K'": [96, 97], "R": [119, 120], "K": [[81, 88], [82, 89]], "V": [[74, 83], [79, 86]], "example": [70, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Betty. Orpheus Island National Park attracts Deborah. Borghetto di Vara attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Ruth. Bzura attracts Betty. L'Escala attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Bzura? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [59, 65], "V'": [23, 29], "Q": [51, 53], "K'": [31, 32], "R": [54, 55], "K": [[9, 19], [10, 22]], "V": [[5, 11], [7, 17]], "example": [1, 69]}, {"END": [129, 130], "A'": [124, 127], "V'": [90, 94], "Q": [116, 118], "K'": [96, 97], "R": [119, 120], "K": [[81, 88], [82, 89]], "V": [[74, 83], [79, 86]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Michelle. Saint Gayane Church attracts Betty. Scheibbs District attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Scheibbs District? Answer: Yes\n Premise: < Tinguiririca River attracts Sarah. Oshawa attracts Sharon. KiKa attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to KiKa? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [56, 60], "V'": [22, 26], "Q": [48, 50], "K'": [28, 29], "R": [51, 52], "K": [[11, 20], [13, 21]], "V": [[5, 14], [9, 18]], "example": [1, 64]}, {"END": [125, 126], "A'": [120, 123], "V'": [87, 90], "Q": [112, 114], "K'": [92, 93], "R": [115, 116], "K": [[77, 84], [78, 86]], "V": [[69, 79], [75, 82]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Michelle. Saint Gayane Church attracts Betty. Scheibbs District attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Scheibbs District? Answer: Yes\n Premise: < Tinguiririca River attracts Sarah. Oshawa attracts Sharon. KiKa attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to Oshawa? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [56, 60], "V'": [22, 26], "Q": [48, 50], "K'": [28, 29], "R": [51, 52], "K": [[11, 20], [13, 21]], "V": [[5, 14], [9, 18]], "example": [1, 64]}, {"END": [125, 126], "A'": [120, 123], "V'": [87, 90], "Q": [112, 114], "K'": [92, 93], "R": [115, 116], "K": [[77, 84], [78, 86]], "V": [[69, 79], [75, 82]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rottumerplaat attracts Lisa. Universidad Nacional Federico Villarreal attracts Mark. Foundation for a Free Information Infrastructure attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Rottumerplaat? Answer: Yes\n Premise: < Valvasone attracts Karen. Carpathian Mountains attracts John. Scheibbs District attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Valvasone? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [63, 68], "V'": [5, 10], "Q": [55, 57], "K'": [12, 13], "R": [58, 59], "K": [[23, 35], [24, 36]], "V": [[14, 25], [21, 33]], "example": [1, 72]}, {"END": [132, 133], "A'": [127, 130], "V'": [77, 80], "Q": [119, 121], "K'": [82, 84], "R": [122, 123], "K": [[91, 99], [92, 100]], "V": [[85, 93], [89, 97]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rottumerplaat attracts Lisa. Universidad Nacional Federico Villarreal attracts Mark. Foundation for a Free Information Infrastructure attracts Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Rottumerplaat? Answer: Yes\n Premise: < Valvasone attracts Karen. Carpathian Mountains attracts John. Scheibbs District attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to Carpathian Mountains? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [63, 68], "V'": [5, 10], "Q": [55, 57], "K'": [12, 13], "R": [58, 59], "K": [[23, 35], [24, 36]], "V": [[14, 25], [21, 33]], "example": [1, 72]}, {"END": [133, 134], "A'": [127, 131], "V'": [77, 80], "Q": [119, 121], "K'": [82, 84], "R": [122, 123], "K": [[91, 99], [92, 100]], "V": [[85, 93], [89, 97]], "example": [73, 135]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Ust-Katav. Sandra likes Instituto Pedro Nunes. Ronald likes Bilecik Province. >. So who wants to go to Bilecik Province? the boy\n < Edward likes Selbu. Kevin likes Autonomous District Lok Sabha constituency. Nancy likes Foundation for a Free Information Infrastructure. >. So who wants to go to Foundation for a Free Information Infrastructure? the girl\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [22, 24], "Q": [40, 45], "K": [26, 31], "R": null, "K'": [[6, 17], [12, 21]], "V'": [[2, 13], [4, 15]], "example": [1, 48]}, {"END": [98, 99], "A": [99, 100], "V": [69, 70], "Q": [89, 97], "K": [72, 80], "R": null, "K'": [[53, 59], [55, 68]], "V'": [[50, 56], [51, 57]], "example": [49, 100]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jason likes Mannheim City Airport. Susan likes Eurostat. Kenneth likes regiopolis. >. So who wants to go to Eurostat? the girl\n < Dorothy likes Greater Rio de Janeiro. Nancy likes Toronto Police Service. David likes Mediolanum Forum. >. So who wants to go to Mediolanum Forum? the boy\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [10, 11], "Q": [32, 34], "K": [13, 15], "R": null, "K'": [[5, 19], [9, 23]], "V'": [[2, 16], [3, 17]], "example": [1, 37]}, {"END": [77, 78], "A": [78, 79], "V": [56, 57], "Q": [72, 76], "K": [59, 63], "R": null, "K'": [[43, 52], [48, 55]], "V'": [[39, 49], [41, 50]], "example": [38, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark likes Valdemarsvik. Nancy likes Palladam. Sharon likes Blackrock Castle. >. So who wants to go to Valdemarsvik? the boy\n < Robert likes Tirebolu. Karen likes War in Donbass. Donna likes Bearpaw Shale. >. So who wants to go to Tirebolu? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [2, 3], "Q": [34, 38], "K": [5, 9], "R": null, "K'": [[13, 22], [17, 25]], "V'": [[10, 18], [11, 20]], "example": [1, 41]}, {"END": [84, 85], "A": [85, 86], "V": [43, 44], "Q": [79, 83], "K": [46, 50], "R": null, "K'": [[55, 65], [60, 70]], "V'": [[51, 61], [53, 63]], "example": [42, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Edward likes Avord. Steven likes Capolago. Sharon likes Iximche. >. So who wants to go to Iximche? the girl\n < William likes Sydney Peace Prize. Dorothy likes Cenepa River. Patricia likes Helmbrechts. >. So who wants to go to Sydney Peace Prize? the boy\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [15, 17], "Q": [31, 34], "K": [19, 22], "R": null, "K'": [[5, 11], [7, 14]], "V'": [[2, 8], [3, 9]], "example": [1, 37]}, {"END": [78, 79], "A": [79, 80], "V": [39, 40], "Q": [74, 77], "K": [42, 45], "R": null, "K'": [[50, 61], [55, 65]], "V'": [[46, 56], [48, 59]], "example": [38, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Anthony likes VR warehouses. Carol likes Gammalsvenskby. Patricia likes Electoral district of Wantirna. >. So who wants to go to VR warehouses? the boy\n < Patricia likes Velbert. Charles likes Nobel Peace Center. Deborah likes Liverpool Range. >. So who wants to go to Nobel Peace Center? the boy\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [2, 3], "Q": [44, 50], "K": [5, 11], "R": null, "K'": [[15, 27], [21, 35]], "V'": [[12, 22], [13, 25]], "example": [1, 53]}, {"END": [90, 91], "A": [91, 92], "V": [63, 64], "Q": [86, 89], "K": [66, 69], "R": null, "K'": [[60, 75], [62, 77]], "V'": [[55, 70], [58, 73]], "example": [54, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes Calw. Betty likes Gavork-e Nalin Rural District. Deborah likes Bad Camberg. >. So who wants to go to Calw? the boy\n < Donald likes ABC Futebol Clube. Laura likes Capolago. Karen likes Buchan. >. So who wants to go to ABC Futebol Clube? the boy\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [2, 3], "Q": [39, 41], "K": [5, 7], "R": null, "K'": [[11, 27], [21, 30]], "V'": [[8, 22], [9, 25]], "example": [1, 44]}, {"END": [83, 84], "A": [84, 85], "V": [46, 47], "Q": [77, 82], "K": [49, 54], "R": null, "K'": [[58, 66], [61, 68]], "V'": [[55, 62], [56, 64]], "example": [45, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Helen likes 2004 Indian Ocean earthquake. Elizabeth likes Were Ilu. Christopher likes West Royalty, Prince Edward Island. >. So who wants to go to West Royalty, Prince Edward Island? the boy\n < Mark likes Jervis Inlet. Sharon likes Panagarh. Michelle likes Menangle Park. >. So who wants to go to Jervis Inlet? the boy\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [24, 25], "Q": [43, 50], "K": [27, 34], "R": null, "K'": [[6, 19], [15, 23]], "V'": [[2, 16], [3, 17]], "example": [1, 53]}, {"END": [92, 93], "A": [93, 94], "V": [55, 56], "Q": [87, 91], "K": [58, 62], "R": null, "K'": [[67, 75], [70, 78]], "V'": [[63, 71], [65, 73]], "example": [54, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Kyoto University. Linda likes Atromitos Piraeus F.C. Paul likes Lismore GAA. >. So who wants to go to Lismore GAA? the boy\n < Christopher likes Garabit viaduct. Nancy likes Electoral district of Wantirna. Kevin likes Nagoya University. >. So who wants to go to Electoral district of Wantirna? the girl\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [24, 25], "Q": [41, 46], "K": [27, 32], "R": null, "K'": [[6, 14], [9, 23]], "V'": [[2, 10], [4, 12]], "example": [1, 49]}, {"END": [98, 99], "A": [99, 100], "V": [61, 62], "Q": [89, 97], "K": [64, 72], "R": null, "K'": [[54, 76], [60, 80]], "V'": [[51, 73], [52, 74]], "example": [50, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Sandra likes Instituto Pedro Nunes. Ronald likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is the girl? Answer: No\n Premise: < Edward likes Al-Hasakah Governorate. Kevin likes Selbu. Nancy likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is the girl? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [25, 27], "Q": [60, 65], "K": [29, 34], "R": null, "K'": [[9, 20], [15, 24]], "V'": [[5, 16], [7, 18]], "example": [1, 72]}, {"END": [136, 137], "A": [132, 134], "V": [94, 95], "Q": [127, 131], "K": [97, 101], "R": null, "K'": [[80, 91], [87, 93]], "V'": [[77, 88], [78, 89]], "example": [73, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Sandra likes Instituto Pedro Nunes. Ronald likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is the girl? Answer: No\n Premise: < Edward likes Al-Hasakah Governorate. Kevin likes Selbu. Nancy likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is the boy? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [25, 27], "Q": [60, 65], "K": [29, 34], "R": null, "K'": [[9, 20], [15, 24]], "V'": [[5, 16], [7, 18]], "example": [1, 72]}, {"END": [136, 137], "A": [132, 134], "V": [94, 95], "Q": [127, 131], "K": [97, 101], "R": null, "K'": [[80, 91], [87, 93]], "V'": [[77, 88], [78, 89]], "example": [73, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Saint Gayane Church. Lisa likes Hamilton Mountain. Anthony likes FC Volochanin-Ratmir Vyshny Volochyok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hamilton Mountain is the boy? Answer: No\n Premise: < Paul likes Katwijk aan den Rijn. Sarah likes Yoro. Donna likes Ulpiana. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Katwijk aan den Rijn is the boy? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [68, 70], "V": [13, 14], "Q": [65, 67], "K": [16, 18], "R": null, "K'": [[8, 22], [12, 39]], "V'": [[5, 19], [6, 20]], "example": [1, 74]}, {"END": [141, 142], "A": [137, 139], "V": [79, 80], "Q": [129, 136], "K": [82, 89], "R": null, "K'": [[93, 100], [95, 103]], "V'": [[90, 96], [91, 98]], "example": [75, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Saint Gayane Church. Lisa likes Hamilton Mountain. Anthony likes FC Volochanin-Ratmir Vyshny Volochyok. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hamilton Mountain is the boy? Answer: No\n Premise: < Paul likes Katwijk aan den Rijn. Sarah likes Yoro. Donna likes Ulpiana. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Katwijk aan den Rijn is the girl? Answer: No\n", "ranges": [{"END": [72, 73], "A": [68, 70], "V": [13, 14], "Q": [65, 67], "K": [16, 18], "R": null, "K'": [[8, 22], [12, 39]], "V'": [[5, 19], [6, 20]], "example": [1, 74]}, {"END": [141, 142], "A": [137, 139], "V": [79, 80], "Q": [129, 136], "K": [82, 89], "R": null, "K'": [[93, 100], [95, 103]], "V'": [[90, 96], [91, 98]], "example": [75, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Fischenthal. Linda likes public transport in Istanbul. Daniel likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hellenic Police is the boy? Answer: Yes\n Premise: < Michelle likes Theni district. Daniel likes Entracque. Brian likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Theni district is the girl? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [25, 26], "Q": [58, 62], "K": [28, 32], "R": null, "K'": [[9, 18], [13, 24]], "V'": [[5, 14], [7, 16]], "example": [1, 69]}, {"END": [129, 130], "A": [125, 127], "V": [74, 76], "Q": [121, 124], "K": [78, 81], "R": null, "K'": [[85, 92], [88, 95]], "V'": [[82, 89], [83, 90]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Fischenthal. Linda likes public transport in Istanbul. Daniel likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hellenic Police is the boy? Answer: Yes\n Premise: < Michelle likes Theni district. Daniel likes Entracque. Brian likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Theni district is the boy? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [25, 26], "Q": [58, 62], "K": [28, 32], "R": null, "K'": [[9, 18], [13, 24]], "V'": [[5, 14], [7, 16]], "example": [1, 69]}, {"END": [129, 130], "A": [125, 127], "V": [74, 76], "Q": [121, 124], "K": [78, 81], "R": null, "K'": [[85, 92], [88, 95]], "V'": [[82, 89], [83, 90]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Piedecuesta. Kenneth likes Persegres Gresik United. Mark likes Zwiefalten. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is the boy? Answer: No\n Premise: < Jeff likes Ariake Coliseum. Margaret likes Central Black Forest. John likes Prieto Diaz. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Central Black Forest is the girl? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [5, 6], "Q": [58, 63], "K": [8, 13], "R": null, "K'": [[17, 28], [24, 32]], "V'": [[14, 25], [15, 26]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [84, 85], "Q": [124, 127], "K": [87, 90], "R": null, "K'": [[78, 94], [83, 98]], "V'": [[75, 91], [76, 92]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Piedecuesta. Kenneth likes Persegres Gresik United. Mark likes Zwiefalten. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is the boy? Answer: No\n Premise: < Jeff likes Ariake Coliseum. Margaret likes Central Black Forest. John likes Prieto Diaz. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Central Black Forest is the boy? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [5, 6], "Q": [58, 63], "K": [8, 13], "R": null, "K'": [[17, 28], [24, 32]], "V'": [[14, 25], [15, 26]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [84, 85], "Q": [124, 127], "K": [87, 90], "R": null, "K'": [[78, 94], [83, 98]], "V'": [[75, 91], [76, 92]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian likes Kuomintang. Barbara likes Gobardanga. Lisa likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kuomintang is the boy? Answer: Yes\n Premise: < William likes Bhinmal. Charles likes Waurn Ponds. Dorothy likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Capolago is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [5, 6], "Q": [52, 56], "K": [8, 12], "R": null, "K'": [[16, 24], [20, 26]], "V'": [[13, 21], [14, 22]], "example": [1, 63]}, {"END": [124, 125], "A": [120, 122], "V": [83, 85], "Q": [116, 119], "K": [87, 90], "R": null, "K'": [[71, 78], [74, 82]], "V'": [[68, 75], [69, 76]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian likes Kuomintang. Barbara likes Gobardanga. Lisa likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kuomintang is the boy? Answer: Yes\n Premise: < William likes Bhinmal. Charles likes Waurn Ponds. Dorothy likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Capolago is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [5, 6], "Q": [52, 56], "K": [8, 12], "R": null, "K'": [[16, 24], [20, 26]], "V'": [[13, 21], [14, 22]], "example": [1, 63]}, {"END": [124, 125], "A": [120, 122], "V": [83, 85], "Q": [116, 119], "K": [87, 90], "R": null, "K'": [[71, 78], [74, 82]], "V'": [[68, 75], [69, 76]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Hohenwestedt. Ronald likes Alfred Wegener Institute for Polar and Marine Research. Mark likes Brandon University. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is the girl? Answer: Yes\n Premise: < Sarah likes Hersbruck. David likes Tsubaki Grand Shrine. Brian likes Vrienden van het Platteland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [5, 6], "Q": [61, 66], "K": [8, 13], "R": null, "K'": [[18, 32], [28, 35]], "V'": [[14, 29], [16, 30]], "example": [1, 73]}, {"END": [143, 144], "A": [139, 141], "V": [78, 79], "Q": [134, 138], "K": [81, 85], "R": null, "K'": [[89, 100], [96, 108]], "V'": [[86, 97], [87, 98]], "example": [74, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Hohenwestedt. Ronald likes Alfred Wegener Institute for Polar and Marine Research. Mark likes Brandon University. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is the girl? Answer: Yes\n Premise: < Sarah likes Hersbruck. David likes Tsubaki Grand Shrine. Brian likes Vrienden van het Platteland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [5, 6], "Q": [61, 66], "K": [8, 13], "R": null, "K'": [[18, 32], [28, 35]], "V'": [[14, 29], [16, 30]], "example": [1, 73]}, {"END": [143, 144], "A": [139, 141], "V": [78, 79], "Q": [134, 138], "K": [81, 85], "R": null, "K'": [[89, 100], [96, 108]], "V'": [[86, 97], [87, 98]], "example": [74, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Preet Vihar. Nancy likes Haut Atlas. Deborah likes Yamato Museum. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Preet Vihar is the boy? Answer: Yes\n Premise: < Steven likes Cocconato. Anthony likes Astrid Lindgren Memorial Award. Sarah likes Albertis Castle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Albertis Castle is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [5, 6], "Q": [54, 59], "K": [8, 13], "R": null, "K'": [[17, 25], [19, 28]], "V'": [[14, 20], [15, 23]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [90, 91], "Q": [122, 125], "K": [93, 96], "R": null, "K'": [[74, 82], [78, 89]], "V'": [[71, 79], [72, 80]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Preet Vihar. Nancy likes Haut Atlas. Deborah likes Yamato Museum. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Preet Vihar is the boy? Answer: Yes\n Premise: < Steven likes Cocconato. Anthony likes Astrid Lindgren Memorial Award. Sarah likes Albertis Castle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Albertis Castle is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [5, 6], "Q": [54, 59], "K": [8, 13], "R": null, "K'": [[17, 25], [19, 28]], "V'": [[14, 20], [15, 23]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [90, 91], "Q": [122, 125], "K": [93, 96], "R": null, "K'": [[74, 82], [78, 89]], "V'": [[71, 79], [72, 80]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Darmstadt. Daniel likes DESTATIS. Edward likes Junnar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Darmstadt is the girl? Answer: Yes\n Premise: < Jeff likes Augusta Raurica. Sarah likes Kottarakkara. Robert likes Gobardanga. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kottarakkara is the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [5, 7], "Q": [52, 55], "K": [9, 12], "R": null, "K'": [[16, 23], [19, 26]], "V'": [[13, 20], [14, 21]], "example": [1, 62]}, {"END": [130, 131], "A": [126, 128], "V": [76, 77], "Q": [119, 125], "K": [79, 85], "R": null, "K'": [[70, 89], [75, 93]], "V'": [[67, 86], [68, 87]], "example": [63, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Darmstadt. Daniel likes DESTATIS. Edward likes Junnar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Darmstadt is the girl? Answer: Yes\n Premise: < Jeff likes Augusta Raurica. Sarah likes Kottarakkara. Robert likes Gobardanga. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kottarakkara is the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [5, 7], "Q": [52, 55], "K": [9, 12], "R": null, "K'": [[16, 23], [19, 26]], "V'": [[13, 20], [14, 21]], "example": [1, 62]}, {"END": [130, 131], "A": [126, 128], "V": [76, 77], "Q": [119, 125], "K": [79, 85], "R": null, "K'": [[70, 89], [75, 93]], "V'": [[67, 86], [68, 87]], "example": [63, 132]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Sandra. Bilecik Province attracts Ronald. >. So who wants to go to Bilecik Province? the boy\n < Selbu attracts Edward. Autonomous District Lok Sabha constituency attracts Kevin. Foundation for a Free Information Infrastructure attracts Nancy. >. So who wants to go to Foundation for a Free Information Infrastructure? the girl\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [29, 31], "Q": [40, 45], "K": [22, 27], "R": null, "K'": [[2, 13], [8, 17]], "V'": [[10, 19], [12, 21]], "example": [1, 48]}, {"END": [98, 99], "A": [99, 100], "V": [79, 80], "Q": [89, 97], "K": [69, 77], "R": null, "K'": [[50, 56], [52, 65]], "V'": [[54, 67], [55, 68]], "example": [49, 100]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Mannheim City Airport attracts Jason. Eurostat attracts Susan. regiopolis attracts Kenneth. >. So who wants to go to Eurostat? the girl\n < Greater Rio de Janeiro attracts Dorothy. Toronto Police Service attracts Nancy. Mediolanum Forum attracts David. >. So who wants to go to Mediolanum Forum? the boy\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [14, 15], "Q": [32, 34], "K": [10, 12], "R": null, "K'": [[2, 16], [6, 20]], "V'": [[8, 22], [9, 23]], "example": [1, 37]}, {"END": [77, 78], "A": [78, 79], "V": [62, 63], "Q": [72, 76], "K": [56, 60], "R": null, "K'": [[39, 49], [44, 52]], "V'": [[46, 54], [48, 55]], "example": [38, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Valdemarsvik attracts Mark. Palladam attracts Nancy. Blackrock Castle attracts Sharon. >. So who wants to go to Valdemarsvik? the boy\n < Tirebolu attracts Robert. War in Donbass attracts Karen. Bearpaw Shale attracts Donna. >. So who wants to go to Tirebolu? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [8, 9], "Q": [34, 38], "K": [2, 6], "R": null, "K'": [[10, 18], [14, 21]], "V'": [[16, 23], [17, 25]], "example": [1, 41]}, {"END": [84, 85], "A": [85, 86], "V": [49, 50], "Q": [79, 83], "K": [43, 47], "R": null, "K'": [[51, 61], [56, 66]], "V'": [[58, 68], [60, 70]], "example": [42, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Avord attracts Edward. Capolago attracts Steven. Iximche attracts Sharon. >. So who wants to go to Iximche? the girl\n < Sydney Peace Prize attracts William. Cenepa River attracts Dorothy. Helmbrechts attracts Patricia. >. So who wants to go to Sydney Peace Prize? the boy\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [20, 22], "Q": [31, 34], "K": [15, 18], "R": null, "K'": [[2, 8], [4, 11]], "V'": [[6, 13], [7, 14]], "example": [1, 37]}, {"END": [78, 79], "A": [79, 80], "V": [44, 45], "Q": [74, 77], "K": [39, 42], "R": null, "K'": [[46, 56], [51, 60]], "V'": [[53, 62], [55, 65]], "example": [38, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< VR warehouses attracts Anthony. Gammalsvenskby attracts Carol. Electoral district of Wantirna attracts Patricia. >. So who wants to go to VR warehouses? the boy\n < Velbert attracts Patricia. Nobel Peace Center attracts Charles. Liverpool Range attracts Deborah. >. So who wants to go to Nobel Peace Center? the boy\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [10, 11], "Q": [44, 50], "K": [2, 8], "R": null, "K'": [[12, 22], [18, 30]], "V'": [[20, 32], [21, 35]], "example": [1, 53]}, {"END": [90, 91], "A": [91, 92], "V": [68, 69], "Q": [86, 89], "K": [63, 66], "R": null, "K'": [[55, 70], [57, 72]], "V'": [[59, 74], [62, 77]], "example": [54, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Calw attracts Jeff. Gavork-e Nalin Rural District attracts Betty. Bad Camberg attracts Deborah. >. So who wants to go to Calw? the boy\n < ABC Futebol Clube attracts Donald. Capolago attracts Laura. Buchan attracts Karen. >. So who wants to go to ABC Futebol Clube? the boy\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [6, 7], "Q": [39, 41], "K": [2, 4], "R": null, "K'": [[8, 22], [18, 25]], "V'": [[20, 27], [21, 30]], "example": [1, 44]}, {"END": [83, 84], "A": [84, 85], "V": [53, 54], "Q": [77, 82], "K": [46, 51], "R": null, "K'": [[55, 62], [58, 64]], "V'": [[60, 66], [61, 68]], "example": [45, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< 2004 Indian Ocean earthquake attracts Helen. Were Ilu attracts Elizabeth. West Royalty, Prince Edward Island attracts Christopher. >. So who wants to go to West Royalty, Prince Edward Island? the boy\n < Jervis Inlet attracts Mark. Panagarh attracts Sharon. Menangle Park attracts Michelle. >. So who wants to go to Jervis Inlet? the boy\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [33, 34], "Q": [43, 50], "K": [24, 31], "R": null, "K'": [[3, 16], [12, 20]], "V'": [[14, 22], [15, 23]], "example": [1, 53]}, {"END": [92, 93], "A": [93, 94], "V": [61, 62], "Q": [87, 91], "K": [55, 59], "R": null, "K'": [[63, 71], [66, 74]], "V'": [[68, 76], [70, 78]], "example": [54, 94]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Kyoto University attracts Sharon. Atromitos Piraeus F.C attracts Linda. Lismore GAA attracts Paul. >. So who wants to go to Lismore GAA? the boy\n < Garabit viaduct attracts Christopher. Electoral district of Wantirna attracts Nancy. Nagoya University attracts Kevin. >. So who wants to go to Electoral district of Wantirna? the girl\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [31, 32], "Q": [41, 46], "K": [24, 29], "R": null, "K'": [[2, 10], [5, 19]], "V'": [[7, 21], [9, 23]], "example": [1, 49]}, {"END": [98, 99], "A": [99, 100], "V": [71, 72], "Q": [89, 97], "K": [61, 69], "R": null, "K'": [[51, 73], [57, 77]], "V'": [[59, 79], [60, 80]], "example": [50, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Sandra. Bilecik Province attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is the girl? Answer: No\n Premise: < Al-Hasakah Governorate attracts Edward. Selbu attracts Kevin. Koriya district attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is the girl? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [32, 34], "Q": [60, 65], "K": [25, 30], "R": null, "K'": [[5, 16], [11, 20]], "V'": [[13, 22], [15, 24]], "example": [1, 72]}, {"END": [136, 137], "A": [132, 134], "V": [100, 101], "Q": [127, 131], "K": [94, 98], "R": null, "K'": [[77, 88], [84, 90]], "V'": [[86, 92], [87, 93]], "example": [73, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Instituto Pedro Nunes attracts Sandra. Bilecik Province attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is the girl? Answer: No\n Premise: < Al-Hasakah Governorate attracts Edward. Selbu attracts Kevin. Koriya district attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Koriya district is the boy? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [32, 34], "Q": [60, 65], "K": [25, 30], "R": null, "K'": [[5, 16], [11, 20]], "V'": [[13, 22], [15, 24]], "example": [1, 72]}, {"END": [136, 137], "A": [132, 134], "V": [100, 101], "Q": [127, 131], "K": [94, 98], "R": null, "K'": [[77, 88], [84, 90]], "V'": [[86, 92], [87, 93]], "example": [73, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Gayane Church attracts Mark. Hamilton Mountain attracts Lisa. FC Volochanin-Ratmir Vyshny Volochyok attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hamilton Mountain is the boy? Answer: No\n Premise: < Katwijk aan den Rijn attracts Paul. Yoro attracts Sarah. Ulpiana attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Katwijk aan den Rijn is the boy? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [68, 70], "V": [17, 18], "Q": [65, 67], "K": [13, 15], "R": null, "K'": [[5, 19], [9, 36]], "V'": [[11, 38], [12, 39]], "example": [1, 74]}, {"END": [141, 142], "A": [137, 139], "V": [88, 89], "Q": [129, 136], "K": [79, 86], "R": null, "K'": [[90, 96], [92, 99]], "V'": [[94, 101], [95, 103]], "example": [75, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Gayane Church attracts Mark. Hamilton Mountain attracts Lisa. FC Volochanin-Ratmir Vyshny Volochyok attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hamilton Mountain is the boy? Answer: No\n Premise: < Katwijk aan den Rijn attracts Paul. Yoro attracts Sarah. Ulpiana attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Katwijk aan den Rijn is the girl? Answer: No\n", "ranges": [{"END": [72, 73], "A": [68, 70], "V": [17, 18], "Q": [65, 67], "K": [13, 15], "R": null, "K'": [[5, 19], [9, 36]], "V'": [[11, 38], [12, 39]], "example": [1, 74]}, {"END": [141, 142], "A": [137, 139], "V": [88, 89], "Q": [129, 136], "K": [79, 86], "R": null, "K'": [[90, 96], [92, 99]], "V'": [[94, 101], [95, 103]], "example": [75, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Jennifer. public transport in Istanbul attracts Linda. Hellenic Police attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hellenic Police is the boy? Answer: Yes\n Premise: < Theni district attracts Michelle. Entracque attracts Daniel. Bernheze attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Theni district is the girl? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [31, 32], "Q": [58, 62], "K": [25, 29], "R": null, "K'": [[5, 14], [9, 20]], "V'": [[11, 22], [13, 24]], "example": [1, 69]}, {"END": [129, 130], "A": [125, 127], "V": [79, 81], "Q": [121, 124], "K": [74, 77], "R": null, "K'": [[82, 89], [85, 92]], "V'": [[87, 94], [88, 95]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Jennifer. public transport in Istanbul attracts Linda. Hellenic Police attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hellenic Police is the boy? Answer: Yes\n Premise: < Theni district attracts Michelle. Entracque attracts Daniel. Bernheze attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Theni district is the boy? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [31, 32], "Q": [58, 62], "K": [25, 29], "R": null, "K'": [[5, 14], [9, 20]], "V'": [[11, 22], [13, 24]], "example": [1, 69]}, {"END": [129, 130], "A": [125, 127], "V": [79, 81], "Q": [121, 124], "K": [74, 77], "R": null, "K'": [[82, 89], [85, 92]], "V'": [[87, 94], [88, 95]], "example": [70, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Piedecuesta attracts Margaret. Persegres Gresik United attracts Kenneth. Zwiefalten attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is the boy? Answer: No\n Premise: < Ariake Coliseum attracts Jeff. Central Black Forest attracts Margaret. Prieto Diaz attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Central Black Forest is the girl? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [12, 13], "Q": [58, 63], "K": [5, 10], "R": null, "K'": [[14, 25], [21, 29]], "V'": [[23, 31], [24, 32]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [89, 90], "Q": [124, 127], "K": [84, 87], "R": null, "K'": [[75, 91], [80, 95]], "V'": [[82, 97], [83, 98]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Piedecuesta attracts Margaret. Persegres Gresik United attracts Kenneth. Zwiefalten attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Piedecuesta is the boy? Answer: No\n Premise: < Ariake Coliseum attracts Jeff. Central Black Forest attracts Margaret. Prieto Diaz attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Central Black Forest is the boy? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [12, 13], "Q": [58, 63], "K": [5, 10], "R": null, "K'": [[14, 25], [21, 29]], "V'": [[23, 31], [24, 32]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [89, 90], "Q": [124, 127], "K": [84, 87], "R": null, "K'": [[75, 91], [80, 95]], "V'": [[82, 97], [83, 98]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Brian. Gobardanga attracts Barbara. Calw attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kuomintang is the boy? Answer: Yes\n Premise: < Bhinmal attracts William. Waurn Ponds attracts Charles. Capolago attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Capolago is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [11, 12], "Q": [52, 56], "K": [5, 9], "R": null, "K'": [[13, 21], [17, 23]], "V'": [[19, 25], [20, 26]], "example": [1, 63]}, {"END": [124, 125], "A": [120, 122], "V": [88, 90], "Q": [116, 119], "K": [83, 86], "R": null, "K'": [[68, 75], [71, 79]], "V'": [[73, 81], [74, 82]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Brian. Gobardanga attracts Barbara. Calw attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kuomintang is the boy? Answer: Yes\n Premise: < Bhinmal attracts William. Waurn Ponds attracts Charles. Capolago attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Capolago is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [11, 12], "Q": [52, 56], "K": [5, 9], "R": null, "K'": [[13, 21], [17, 23]], "V'": [[19, 25], [20, 26]], "example": [1, 63]}, {"END": [124, 125], "A": [120, 122], "V": [88, 90], "Q": [116, 119], "K": [83, 86], "R": null, "K'": [[68, 75], [71, 79]], "V'": [[73, 81], [74, 82]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Hohenwestedt attracts Maria. Alfred Wegener Institute for Polar and Marine Research attracts Ronald. Brandon University attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is the girl? Answer: Yes\n Premise: < Hersbruck attracts Sarah. Tsubaki Grand Shrine attracts David. Vrienden van het Platteland attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [12, 13], "Q": [61, 66], "K": [5, 10], "R": null, "K'": [[14, 29], [24, 32]], "V'": [[26, 34], [28, 35]], "example": [1, 73]}, {"END": [143, 144], "A": [139, 141], "V": [84, 85], "Q": [134, 138], "K": [78, 82], "R": null, "K'": [[86, 97], [93, 105]], "V'": [[95, 107], [96, 108]], "example": [74, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Hohenwestedt attracts Maria. Alfred Wegener Institute for Polar and Marine Research attracts Ronald. Brandon University attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is the girl? Answer: Yes\n Premise: < Hersbruck attracts Sarah. Tsubaki Grand Shrine attracts David. Vrienden van het Platteland attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hersbruck is the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [12, 13], "Q": [61, 66], "K": [5, 10], "R": null, "K'": [[14, 29], [24, 32]], "V'": [[26, 34], [28, 35]], "example": [1, 73]}, {"END": [143, 144], "A": [139, 141], "V": [84, 85], "Q": [134, 138], "K": [78, 82], "R": null, "K'": [[86, 97], [93, 105]], "V'": [[95, 107], [96, 108]], "example": [74, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Preet Vihar attracts Christopher. Haut Atlas attracts Nancy. Yamato Museum attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Preet Vihar is the boy? Answer: Yes\n Premise: < Cocconato attracts Steven. Astrid Lindgren Memorial Award attracts Anthony. Albertis Castle attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Albertis Castle is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [12, 13], "Q": [54, 59], "K": [5, 10], "R": null, "K'": [[14, 20], [16, 23]], "V'": [[18, 25], [19, 28]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [95, 96], "Q": [122, 125], "K": [90, 93], "R": null, "K'": [[71, 79], [75, 86]], "V'": [[77, 88], [78, 89]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Preet Vihar attracts Christopher. Haut Atlas attracts Nancy. Yamato Museum attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Preet Vihar is the boy? Answer: Yes\n Premise: < Cocconato attracts Steven. Astrid Lindgren Memorial Award attracts Anthony. Albertis Castle attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Albertis Castle is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [12, 13], "Q": [54, 59], "K": [5, 10], "R": null, "K'": [[14, 20], [16, 23]], "V'": [[18, 25], [19, 28]], "example": [1, 66]}, {"END": [130, 131], "A": [126, 128], "V": [95, 96], "Q": [122, 125], "K": [90, 93], "R": null, "K'": [[71, 79], [75, 86]], "V'": [[77, 88], [78, 89]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Darmstadt attracts Sandra. DESTATIS attracts Daniel. Junnar attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Darmstadt is the girl? Answer: Yes\n Premise: < Augusta Raurica attracts Jeff. Kottarakkara attracts Sarah. Gobardanga attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kottarakkara is the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [10, 12], "Q": [52, 55], "K": [5, 8], "R": null, "K'": [[13, 20], [16, 23]], "V'": [[18, 25], [19, 26]], "example": [1, 62]}, {"END": [130, 131], "A": [126, 128], "V": [84, 85], "Q": [119, 125], "K": [76, 82], "R": null, "K'": [[67, 86], [72, 90]], "V'": [[74, 92], [75, 93]], "example": [63, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Darmstadt attracts Sandra. DESTATIS attracts Daniel. Junnar attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Darmstadt is the girl? Answer: Yes\n Premise: < Augusta Raurica attracts Jeff. Kottarakkara attracts Sarah. Gobardanga attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Kottarakkara is the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [10, 12], "Q": [52, 55], "K": [5, 8], "R": null, "K'": [[13, 20], [16, 23]], "V'": [[18, 25], [19, 26]], "example": [1, 62]}, {"END": [130, 131], "A": [126, 128], "V": [84, 85], "Q": [119, 125], "K": [76, 82], "R": null, "K'": [[67, 86], [72, 90]], "V'": [[74, 92], [75, 93]], "example": [63, 132]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Nancy likes Central Black Forest. Daniel likes Bilecik Province. Ronald likes Bilecik Province. >. The one who wants to go to Bilecik Province is not the girl\n < Mary likes Komarichsky District. Kimberly likes Komarichsky District. Joseph likes Calw. >. The one who wants to go to Komarichsky District is not the boy\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [2, 3], "Q": [37, 42], "K'": [5, 8], "R": [43, 44], "K": [[12, 22], [17, 27]], "V": [[9, 18], [10, 20]], "example": [1, 46]}, {"END": [90, 91], "A'": [91, 92], "V'": [68, 69], "Q": [83, 88], "K'": [71, 73], "R": [89, 90], "K": [[51, 62], [56, 67]], "V": [[48, 57], [49, 60]], "example": [47, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Linda likes Presbyterian High School. Richard likes Nagoya University. Deborah likes Presbyterian High School. >. The one who wants to go to Presbyterian High School is not the boy\n < Betty likes Castleisland Desmonds GAA. Sarah likes Castleisland Desmonds GAA. Brian likes Hamilton Mountain. >. The one who wants to go to Castleisland Desmonds GAA is not the boy\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [13, 14], "Q": [42, 48], "K'": [16, 20], "R": [49, 50], "K": [[6, 26], [12, 32]], "V": [[2, 21], [4, 24]], "example": [1, 52]}, {"END": [103, 104], "A'": [104, 105], "V'": [78, 79], "Q": [93, 101], "K'": [81, 83], "R": [102, 103], "K": [[57, 69], [65, 77]], "V": [[54, 66], [55, 67]], "example": [53, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes DESTATIS. Lisa likes Hadzhidimovo. Laura likes Hadzhidimovo. >. The one who wants to go to Hadzhidimovo is not the boy\n < Richard likes Ticho House. Susan likes Bilecik Province. Thomas likes Ticho House. >. The one who wants to go to Ticho House is not the girl\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [2, 3], "Q": [36, 41], "K'": [5, 8], "R": [42, 43], "K": [[12, 21], [17, 26]], "V": [[9, 18], [10, 19]], "example": [1, 45]}, {"END": [87, 88], "A'": [88, 89], "V'": [55, 56], "Q": [81, 85], "K'": [58, 63], "R": [86, 87], "K": [[50, 67], [54, 71]], "V": [[47, 64], [48, 65]], "example": [46, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Deborah likes Hellenic Police. Linda likes Hellenic Police. Thomas likes Cocconato. >. The one who wants to go to Hellenic Police is not the boy\n < Michael likes Albertis Castle. William likes Albertis Castle. Maria likes Veyrier. >. The one who wants to go to Albertis Castle is not the girl\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [21, 22], "Q": [38, 42], "K'": [24, 28], "R": [43, 44], "K": [[7, 16], [11, 20]], "V": [[2, 12], [5, 14]], "example": [1, 46]}, {"END": [83, 84], "A'": [84, 85], "V'": [62, 63], "Q": [78, 81], "K'": [65, 68], "R": [82, 83], "K": [[51, 58], [54, 61]], "V": [[48, 55], [49, 56]], "example": [47, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Barbara likes Lajran Rural District. Lisa likes Lajran Rural District. Joseph likes Borghetto di Vara. >. The one who wants to go to Lajran Rural District is not the boy\n < Karen likes Piedecuesta. Paul likes VR warehouses. Kimberly likes Piedecuesta. >. The one who wants to go to Piedecuesta is not the boy\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [22, 23], "Q": [41, 47], "K'": [25, 31], "R": [48, 49], "K": [[5, 15], [11, 21]], "V": [[2, 12], [3, 13]], "example": [1, 51]}, {"END": [100, 101], "A'": [101, 102], "V'": [63, 64], "Q": [93, 98], "K'": [66, 72], "R": [99, 100], "K": [[57, 78], [62, 83]], "V": [[53, 73], [55, 76]], "example": [52, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< John likes Soalala. Carol likes public transport in Istanbul. Kevin likes Soalala. >. The one who wants to go to Soalala is not the girl\n < Ronald likes Velbert. Susan likes Dent Island Light. Deborah likes Dent Island Light. >. The one who wants to go to Dent Island Light is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [9, 10], "Q": [35, 38], "K'": [12, 18], "R": [39, 40], "K": [[5, 22], [8, 25]], "V": [[2, 19], [3, 20]], "example": [1, 42]}, {"END": [84, 85], "A'": [85, 86], "V'": [44, 46], "Q": [78, 82], "K'": [48, 50], "R": [83, 84], "K": [[54, 64], [58, 68]], "V": [[51, 59], [52, 62]], "example": [43, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Lisa likes Kuomintang. Edward likes Art Gallery of Ontario. Sharon likes Kuomintang. >. The one who wants to go to Kuomintang is not the boy\n < Margaret likes Guillaumes. Kenneth likes ITE College East. Kimberly likes Guillaumes. >. The one who wants to go to Guillaumes is not the boy\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [10, 11], "Q": [36, 40], "K'": [13, 17], "R": [41, 42], "K": [[5, 22], [9, 26]], "V": [[2, 18], [3, 20]], "example": [1, 44]}, {"END": [84, 85], "A'": [85, 86], "V'": [53, 54], "Q": [79, 82], "K'": [56, 60], "R": [83, 84], "K": [[49, 66], [52, 69]], "V": [[46, 61], [47, 64]], "example": [45, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Lisa likes prefectural road. Daniel likes National Congress of Brasil. Linda likes prefectural road. >. The one who wants to go to prefectural road is not the boy\n < Lisa likes L'Escala. Daniel likes Waldshut-Tiengen. Jennifer likes L'Escala. >. The one who wants to go to L'Escala is not the boy\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [10, 11], "Q": [36, 40], "K'": [13, 17], "R": [41, 42], "K": [[5, 22], [9, 26]], "V": [[2, 18], [3, 20]], "example": [1, 44]}, {"END": [89, 90], "A'": [90, 91], "V'": [54, 55], "Q": [83, 87], "K'": [57, 64], "R": [88, 89], "K": [[49, 69], [53, 73]], "V": [[46, 65], [47, 67]], "example": [45, 91]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Central Black Forest. Daniel likes Bilecik Province. Ronald likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not the girl? Answer: Yes\n Premise: < Mark likes Saint-Jacques-de-la-Lande. Helen likes Arsk. Maria likes Arsk. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not the boy? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [5, 6], "Q": [56, 61], "K'": [8, 11], "R": [62, 63], "K": [[15, 25], [20, 30]], "V": [[12, 21], [13, 23]], "example": [1, 69]}, {"END": [134, 135], "A'": [130, 132], "V'": [74, 75], "Q": [126, 128], "K'": [77, 88], "R": [129, 130], "K": [[92, 98], [94, 100]], "V": [[89, 95], [90, 96]], "example": [70, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Central Black Forest. Daniel likes Bilecik Province. Ronald likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not the girl? Answer: Yes\n Premise: < Mark likes Saint-Jacques-de-la-Lande. Helen likes Arsk. Maria likes Arsk. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not the girl? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [5, 6], "Q": [56, 61], "K'": [8, 11], "R": [62, 63], "K": [[15, 25], [20, 30]], "V": [[12, 21], [13, 23]], "example": [1, 69]}, {"END": [134, 135], "A'": [130, 132], "V'": [74, 75], "Q": [126, 128], "K'": [77, 88], "R": [129, 130], "K": [[92, 98], [94, 100]], "V": [[89, 95], [90, 96]], "example": [70, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes regiopolis. Kimberly likes Fukuno, Toyama. Kenneth likes regiopolis. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is not the boy? Answer: No\n Premise: < Lisa likes Lewin Brzeski. Jennifer likes Lewin Brzeski. Donald likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lewin Brzeski is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [13, 16], "Q": [58, 62], "K'": [18, 24], "R": [63, 64], "K": [[8, 28], [12, 32]], "V": [[5, 25], [6, 26]], "example": [1, 70]}, {"END": [137, 138], "A'": [133, 135], "V'": [94, 95], "Q": [126, 131], "K'": [97, 100], "R": [132, 133], "K": [[78, 88], [83, 93]], "V": [[75, 84], [76, 86]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < David likes regiopolis. Kimberly likes Fukuno, Toyama. Kenneth likes regiopolis. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is not the boy? Answer: No\n Premise: < Lisa likes Lewin Brzeski. Jennifer likes Lewin Brzeski. Donald likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lewin Brzeski is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [13, 16], "Q": [58, 62], "K'": [18, 24], "R": [63, 64], "K": [[8, 28], [12, 32]], "V": [[5, 25], [6, 26]], "example": [1, 70]}, {"END": [137, 138], "A'": [133, 135], "V'": [94, 95], "Q": [126, 131], "K'": [97, 100], "R": [132, 133], "K": [[78, 88], [83, 93]], "V": [[75, 84], [76, 86]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Gammalsvenskby. Nancy likes Bukit Panjang Single Member Constituency. Sharon likes Bukit Panjang Single Member Constituency. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bukit Panjang Single Member Constituency is not the boy? Answer: Yes\n Premise: < Jennifer likes Skole Raion. Linda likes Skole Raion. Daniel likes Bearpaw Shale. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Skole Raion is not the boy? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [5, 6], "Q": [71, 82], "K'": [8, 14], "R": [83, 84], "K": [[18, 34], [29, 45]], "V": [[15, 30], [16, 32]], "example": [1, 90]}, {"END": [157, 158], "A'": [153, 155], "V'": [113, 114], "Q": [147, 151], "K'": [116, 121], "R": [152, 153], "K": [[99, 108], [103, 112]], "V": [[95, 104], [97, 106]], "example": [91, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark likes Gammalsvenskby. Nancy likes Bukit Panjang Single Member Constituency. Sharon likes Bukit Panjang Single Member Constituency. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bukit Panjang Single Member Constituency is not the boy? Answer: Yes\n Premise: < Jennifer likes Skole Raion. Linda likes Skole Raion. Daniel likes Bearpaw Shale. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Skole Raion is not the girl? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [5, 6], "Q": [71, 82], "K'": [8, 14], "R": [83, 84], "K": [[18, 34], [29, 45]], "V": [[15, 30], [16, 32]], "example": [1, 90]}, {"END": [157, 158], "A'": [153, 155], "V'": [113, 114], "Q": [147, 151], "K'": [116, 121], "R": [152, 153], "K": [[99, 108], [103, 112]], "V": [[95, 104], [97, 106]], "example": [91, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth likes Lipscani. Paul likes Bhamdoun. Charles likes Bhamdoun. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not the girl? Answer: Yes\n Premise: < Thomas likes Sebatik Island. Kimberly likes Castrovirreyna District. Carol likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Castrovirreyna District is not the boy? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [5, 6], "Q": [54, 58], "K'": [8, 12], "R": [59, 60], "K": [[16, 24], [20, 28]], "V": [[13, 21], [14, 22]], "example": [1, 66]}, {"END": [135, 136], "A'": [131, 133], "V'": [71, 72], "Q": [124, 129], "K'": [74, 78], "R": [130, 131], "K": [[84, 93], [89, 98]], "V": [[79, 90], [82, 91]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth likes Lipscani. Paul likes Bhamdoun. Charles likes Bhamdoun. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not the girl? Answer: Yes\n Premise: < Thomas likes Sebatik Island. Kimberly likes Castrovirreyna District. Carol likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Castrovirreyna District is not the girl? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [5, 6], "Q": [54, 58], "K'": [8, 12], "R": [59, 60], "K": [[16, 24], [20, 28]], "V": [[13, 21], [14, 22]], "example": [1, 66]}, {"END": [135, 136], "A'": [131, 133], "V'": [71, 72], "Q": [124, 129], "K'": [74, 78], "R": [130, 131], "K": [[84, 93], [89, 98]], "V": [[79, 90], [82, 91]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff likes Iruma Air Base. Margaret likes Manila Bay. John likes Iruma Air Base. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Iruma Air Base is not the girl? Answer: Yes\n Premise: < Jason likes Fort Madalena. Barbara likes 1960 Summer Olympics. Linda likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to 1960 Summer Olympics is not the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [14, 15], "Q": [55, 60], "K'": [17, 20], "R": [61, 62], "K": [[8, 24], [13, 29]], "V": [[5, 21], [6, 22]], "example": [1, 68]}, {"END": [142, 143], "A'": [138, 140], "V'": [73, 74], "Q": [130, 136], "K'": [76, 80], "R": [137, 138], "K": [[85, 97], [91, 103]], "V": [[81, 92], [82, 94]], "example": [69, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff likes Iruma Air Base. Margaret likes Manila Bay. John likes Iruma Air Base. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Iruma Air Base is not the girl? Answer: Yes\n Premise: < Jason likes Fort Madalena. Barbara likes 1960 Summer Olympics. Linda likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to 1960 Summer Olympics is not the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [14, 15], "Q": [55, 60], "K'": [17, 20], "R": [61, 62], "K": [[8, 24], [13, 29]], "V": [[5, 21], [6, 22]], "example": [1, 68]}, {"END": [142, 143], "A'": [138, 140], "V'": [73, 74], "Q": [130, 136], "K'": [76, 80], "R": [137, 138], "K": [[85, 97], [91, 103]], "V": [[81, 92], [82, 94]], "example": [69, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Guillaumes. Kenneth likes ITE College East. Kimberly likes Guillaumes. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Guillaumes is not the boy? Answer: Yes\n Premise: < George likes Borghetto di Vara. Kevin likes Borghetto di Vara. Margaret likes Kanchanaburi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Borghetto di Vara is not the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [12, 13], "Q": [54, 57], "K'": [15, 19], "R": [58, 59], "K": [[8, 25], [11, 28]], "V": [[5, 20], [6, 23]], "example": [1, 65]}, {"END": [135, 136], "A'": [131, 133], "V'": [90, 91], "Q": [123, 129], "K'": [93, 97], "R": [130, 131], "K": [[73, 83], [79, 89]], "V": [[70, 80], [71, 81]], "example": [66, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Guillaumes. Kenneth likes ITE College East. Kimberly likes Guillaumes. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Guillaumes is not the boy? Answer: Yes\n Premise: < George likes Borghetto di Vara. Kevin likes Borghetto di Vara. Margaret likes Kanchanaburi. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Borghetto di Vara is not the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [12, 13], "Q": [54, 57], "K'": [15, 19], "R": [58, 59], "K": [[8, 25], [11, 28]], "V": [[5, 20], [6, 23]], "example": [1, 65]}, {"END": [135, 136], "A'": [131, 133], "V'": [90, 91], "Q": [123, 129], "K'": [93, 97], "R": [130, 131], "K": [[73, 83], [79, 89]], "V": [[70, 80], [71, 81]], "example": [66, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kenneth likes Komarichsky District. Dorothy likes Hohenwestedt. Barbara likes Hohenwestedt. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is not the boy? Answer: Yes\n Premise: < George likes Noliko Maaseik. Dorothy likes Scheibbs District. Sandra likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Scheibbs District is not the boy? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [5, 6], "Q": [58, 63], "K'": [8, 13], "R": [64, 65], "K": [[18, 27], [23, 32]], "V": [[14, 24], [16, 25]], "example": [1, 71]}, {"END": [139, 140], "A'": [135, 137], "V'": [76, 77], "Q": [129, 133], "K'": [79, 85], "R": [134, 135], "K": [[90, 99], [94, 103]], "V": [[86, 95], [88, 97]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kenneth likes Komarichsky District. Dorothy likes Hohenwestedt. Barbara likes Hohenwestedt. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is not the boy? Answer: Yes\n Premise: < George likes Noliko Maaseik. Dorothy likes Scheibbs District. Sandra likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Scheibbs District is not the girl? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [5, 6], "Q": [58, 63], "K'": [8, 13], "R": [64, 65], "K": [[18, 27], [23, 32]], "V": [[14, 24], [16, 25]], "example": [1, 71]}, {"END": [139, 140], "A'": [135, 137], "V'": [76, 77], "Q": [129, 133], "K'": [79, 85], "R": [134, 135], "K": [[90, 99], [94, 103]], "V": [[86, 95], [88, 97]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Ulundurpet. John likes Ulundurpet. Michelle likes Augusta Raurica. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ulundurpet is not the boy? Answer: No\n Premise: < Christopher likes Capoeira. Nancy likes Saint Gayane Church. Deborah likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Gayane Church is not the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [21, 23], "Q": [56, 60], "K'": [25, 30], "R": [61, 62], "K": [[8, 16], [12, 20]], "V": [[5, 13], [6, 14]], "example": [1, 68]}, {"END": [133, 134], "A'": [129, 131], "V'": [73, 74], "Q": [123, 127], "K'": [76, 79], "R": [128, 129], "K": [[83, 93], [87, 97]], "V": [[80, 88], [81, 91]], "example": [69, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven likes Ulundurpet. John likes Ulundurpet. Michelle likes Augusta Raurica. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ulundurpet is not the boy? Answer: No\n Premise: < Christopher likes Capoeira. Nancy likes Saint Gayane Church. Deborah likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Gayane Church is not the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [21, 23], "Q": [56, 60], "K'": [25, 30], "R": [61, 62], "K": [[8, 16], [12, 20]], "V": [[5, 13], [6, 14]], "example": [1, 68]}, {"END": [133, 134], "A'": [129, 131], "V'": [73, 74], "Q": [123, 127], "K'": [76, 79], "R": [128, 129], "K": [[83, 93], [87, 97]], "V": [[80, 88], [81, 91]], "example": [69, 135]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Central Black Forest attracts Nancy. Bilecik Province attracts Daniel. Bilecik Province attracts Ronald. >. The one who wants to go to Bilecik Province is not the girl\n < Komarichsky District attracts Mary. Komarichsky District attracts Kimberly. Calw attracts Joseph. >. The one who wants to go to Komarichsky District is not the boy\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [7, 8], "Q": [37, 42], "K'": [2, 5], "R": [43, 44], "K": [[9, 18], [14, 23]], "V": [[16, 25], [17, 27]], "example": [1, 46]}, {"END": [90, 91], "A'": [91, 92], "V'": [72, 73], "Q": [83, 88], "K'": [68, 70], "R": [89, 90], "K": [[48, 57], [53, 62]], "V": [[55, 64], [56, 67]], "example": [47, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Presbyterian High School attracts Linda. Nagoya University attracts Richard. Presbyterian High School attracts Deborah. >. The one who wants to go to Presbyterian High School is not the boy\n < Castleisland Desmonds GAA attracts Betty. Castleisland Desmonds GAA attracts Sarah. Hamilton Mountain attracts Brian. >. The one who wants to go to Castleisland Desmonds GAA is not the boy\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [19, 20], "Q": [42, 48], "K'": [13, 17], "R": [49, 50], "K": [[2, 21], [8, 27]], "V": [[10, 29], [12, 32]], "example": [1, 52]}, {"END": [103, 104], "A'": [104, 105], "V'": [82, 83], "Q": [93, 101], "K'": [78, 80], "R": [102, 103], "K": [[54, 66], [62, 74]], "V": [[64, 76], [65, 77]], "example": [53, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< DESTATIS attracts Jeff. Hadzhidimovo attracts Lisa. Hadzhidimovo attracts Laura. >. The one who wants to go to Hadzhidimovo is not the boy\n < Ticho House attracts Richard. Bilecik Province attracts Susan. Ticho House attracts Thomas. >. The one who wants to go to Ticho House is not the girl\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [7, 8], "Q": [36, 41], "K'": [2, 5], "R": [42, 43], "K": [[9, 18], [14, 23]], "V": [[16, 25], [17, 26]], "example": [1, 45]}, {"END": [87, 88], "A'": [88, 89], "V'": [62, 63], "Q": [81, 85], "K'": [55, 60], "R": [86, 87], "K": [[47, 64], [51, 68]], "V": [[53, 70], [54, 71]], "example": [46, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Hellenic Police attracts Deborah. Hellenic Police attracts Linda. Cocconato attracts Thomas. >. The one who wants to go to Hellenic Police is not the boy\n < Albertis Castle attracts Michael. Albertis Castle attracts William. Veyrier attracts Maria. >. The one who wants to go to Albertis Castle is not the girl\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [27, 28], "Q": [38, 42], "K'": [21, 25], "R": [43, 44], "K": [[2, 12], [6, 16]], "V": [[8, 18], [11, 20]], "example": [1, 46]}, {"END": [83, 84], "A'": [84, 85], "V'": [67, 68], "Q": [78, 81], "K'": [62, 65], "R": [82, 83], "K": [[48, 55], [51, 58]], "V": [[53, 60], [54, 61]], "example": [47, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Lajran Rural District attracts Barbara. Lajran Rural District attracts Lisa. Borghetto di Vara attracts Joseph. >. The one who wants to go to Lajran Rural District is not the boy\n < Piedecuesta attracts Karen. VR warehouses attracts Paul. Piedecuesta attracts Kimberly. >. The one who wants to go to Piedecuesta is not the boy\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [30, 31], "Q": [41, 47], "K'": [22, 28], "R": [48, 49], "K": [[2, 12], [8, 18]], "V": [[10, 20], [11, 21]], "example": [1, 51]}, {"END": [100, 101], "A'": [101, 102], "V'": [71, 72], "Q": [93, 98], "K'": [63, 69], "R": [99, 100], "K": [[53, 73], [58, 78]], "V": [[60, 80], [62, 83]], "example": [52, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Soalala attracts John. public transport in Istanbul attracts Carol. Soalala attracts Kevin. >. The one who wants to go to Soalala is not the girl\n < Velbert attracts Ronald. Dent Island Light attracts Susan. Dent Island Light attracts Deborah. >. The one who wants to go to Dent Island Light is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [17, 18], "Q": [35, 38], "K'": [9, 15], "R": [39, 40], "K": [[2, 19], [5, 22]], "V": [[7, 24], [8, 25]], "example": [1, 42]}, {"END": [84, 85], "A'": [85, 86], "V'": [48, 50], "Q": [78, 82], "K'": [44, 46], "R": [83, 84], "K": [[51, 59], [55, 63]], "V": [[57, 65], [58, 68]], "example": [43, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Kuomintang attracts Lisa. Art Gallery of Ontario attracts Edward. Kuomintang attracts Sharon. >. The one who wants to go to Kuomintang is not the boy\n < Guillaumes attracts Margaret. ITE College East attracts Kenneth. Guillaumes attracts Kimberly. >. The one who wants to go to Guillaumes is not the boy\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [16, 17], "Q": [36, 40], "K'": [10, 14], "R": [41, 42], "K": [[2, 18], [6, 22]], "V": [[8, 24], [9, 26]], "example": [1, 44]}, {"END": [84, 85], "A'": [85, 86], "V'": [59, 60], "Q": [79, 82], "K'": [53, 57], "R": [83, 84], "K": [[46, 61], [49, 64]], "V": [[51, 66], [52, 69]], "example": [45, 86]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< prefectural road attracts Lisa. National Congress of Brasil attracts Daniel. prefectural road attracts Linda. >. The one who wants to go to prefectural road is not the boy\n < L'Escala attracts Lisa. Waldshut-Tiengen attracts Daniel. L'Escala attracts Jennifer. >. The one who wants to go to L'Escala is not the boy\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [16, 17], "Q": [36, 40], "K'": [10, 14], "R": [41, 42], "K": [[2, 18], [6, 22]], "V": [[8, 24], [9, 26]], "example": [1, 44]}, {"END": [89, 90], "A'": [90, 91], "V'": [63, 64], "Q": [83, 87], "K'": [54, 61], "R": [88, 89], "K": [[46, 65], [50, 69]], "V": [[52, 71], [53, 73]], "example": [45, 91]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Nancy. Bilecik Province attracts Daniel. Bilecik Province attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not the girl? Answer: Yes\n Premise: < Saint-Jacques-de-la-Lande attracts Mark. Arsk attracts Helen. Arsk attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not the boy? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [10, 11], "Q": [56, 61], "K'": [5, 8], "R": [62, 63], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 30]], "example": [1, 69]}, {"END": [134, 135], "A'": [130, 132], "V'": [87, 88], "Q": [126, 128], "K'": [74, 85], "R": [129, 130], "K": [[89, 95], [91, 97]], "V": [[93, 99], [94, 100]], "example": [70, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Nancy. Bilecik Province attracts Daniel. Bilecik Province attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bilecik Province is not the girl? Answer: Yes\n Premise: < Saint-Jacques-de-la-Lande attracts Mark. Arsk attracts Helen. Arsk attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Arsk is not the girl? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [10, 11], "Q": [56, 61], "K'": [5, 8], "R": [62, 63], "K": [[12, 21], [17, 26]], "V": [[19, 28], [20, 30]], "example": [1, 69]}, {"END": [134, 135], "A'": [130, 132], "V'": [87, 88], "Q": [126, 128], "K'": [74, 85], "R": [129, 130], "K": [[89, 95], [91, 97]], "V": [[93, 99], [94, 100]], "example": [70, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < regiopolis attracts David. Fukuno, Toyama attracts Kimberly. regiopolis attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is not the boy? Answer: No\n Premise: < Lewin Brzeski attracts Lisa. Lewin Brzeski attracts Jennifer. Bernheze attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lewin Brzeski is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [21, 24], "Q": [58, 62], "K'": [13, 19], "R": [63, 64], "K": [[5, 25], [9, 29]], "V": [[11, 31], [12, 32]], "example": [1, 70]}, {"END": [137, 138], "A'": [133, 135], "V'": [99, 100], "Q": [126, 131], "K'": [94, 97], "R": [132, 133], "K": [[75, 84], [80, 89]], "V": [[82, 91], [83, 93]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < regiopolis attracts David. Fukuno, Toyama attracts Kimberly. regiopolis attracts Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to regiopolis is not the boy? Answer: No\n Premise: < Lewin Brzeski attracts Lisa. Lewin Brzeski attracts Jennifer. Bernheze attracts Donald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Lewin Brzeski is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [21, 24], "Q": [58, 62], "K'": [13, 19], "R": [63, 64], "K": [[5, 25], [9, 29]], "V": [[11, 31], [12, 32]], "example": [1, 70]}, {"END": [137, 138], "A'": [133, 135], "V'": [99, 100], "Q": [126, 131], "K'": [94, 97], "R": [132, 133], "K": [[75, 84], [80, 89]], "V": [[82, 91], [83, 93]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Gammalsvenskby attracts Mark. Bukit Panjang Single Member Constituency attracts Nancy. Bukit Panjang Single Member Constituency attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bukit Panjang Single Member Constituency is not the boy? Answer: Yes\n Premise: < Skole Raion attracts Jennifer. Skole Raion attracts Linda. Bearpaw Shale attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Skole Raion is not the boy? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [13, 14], "Q": [71, 82], "K'": [5, 11], "R": [83, 84], "K": [[15, 30], [26, 41]], "V": [[28, 43], [29, 45]], "example": [1, 90]}, {"END": [157, 158], "A'": [153, 155], "V'": [120, 121], "Q": [147, 151], "K'": [113, 118], "R": [152, 153], "K": [[95, 104], [99, 108]], "V": [[101, 110], [103, 112]], "example": [91, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Gammalsvenskby attracts Mark. Bukit Panjang Single Member Constituency attracts Nancy. Bukit Panjang Single Member Constituency attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bukit Panjang Single Member Constituency is not the boy? Answer: Yes\n Premise: < Skole Raion attracts Jennifer. Skole Raion attracts Linda. Bearpaw Shale attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Skole Raion is not the girl? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [13, 14], "Q": [71, 82], "K'": [5, 11], "R": [83, 84], "K": [[15, 30], [26, 41]], "V": [[28, 43], [29, 45]], "example": [1, 90]}, {"END": [157, 158], "A'": [153, 155], "V'": [120, 121], "Q": [147, 151], "K'": [113, 118], "R": [152, 153], "K": [[95, 104], [99, 108]], "V": [[101, 110], [103, 112]], "example": [91, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Lipscani attracts Ruth. Bhamdoun attracts Paul. Bhamdoun attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not the girl? Answer: Yes\n Premise: < Sebatik Island attracts Thomas. Castrovirreyna District attracts Kimberly. Castrovirreyna District attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Castrovirreyna District is not the boy? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [11, 12], "Q": [54, 58], "K'": [5, 9], "R": [59, 60], "K": [[13, 21], [17, 25]], "V": [[19, 27], [20, 28]], "example": [1, 66]}, {"END": [135, 136], "A'": [131, 133], "V'": [77, 78], "Q": [124, 129], "K'": [71, 75], "R": [130, 131], "K": [[79, 90], [84, 95]], "V": [[86, 97], [89, 98]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Lipscani attracts Ruth. Bhamdoun attracts Paul. Bhamdoun attracts Charles. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Bhamdoun is not the girl? Answer: Yes\n Premise: < Sebatik Island attracts Thomas. Castrovirreyna District attracts Kimberly. Castrovirreyna District attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Castrovirreyna District is not the girl? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [11, 12], "Q": [54, 58], "K'": [5, 9], "R": [59, 60], "K": [[13, 21], [17, 25]], "V": [[19, 27], [20, 28]], "example": [1, 66]}, {"END": [135, 136], "A'": [131, 133], "V'": [77, 78], "Q": [124, 129], "K'": [71, 75], "R": [130, 131], "K": [[79, 90], [84, 95]], "V": [[86, 97], [89, 98]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Iruma Air Base attracts Jeff. Manila Bay attracts Margaret. Iruma Air Base attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Iruma Air Base is not the girl? Answer: Yes\n Premise: < Fort Madalena attracts Jason. 1960 Summer Olympics attracts Barbara. 1960 Summer Olympics attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to 1960 Summer Olympics is not the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [19, 20], "Q": [55, 60], "K'": [14, 17], "R": [61, 62], "K": [[5, 21], [10, 26]], "V": [[12, 28], [13, 29]], "example": [1, 68]}, {"END": [142, 143], "A'": [138, 140], "V'": [79, 80], "Q": [130, 136], "K'": [73, 77], "R": [137, 138], "K": [[82, 93], [88, 99]], "V": [[90, 101], [91, 103]], "example": [69, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Iruma Air Base attracts Jeff. Manila Bay attracts Margaret. Iruma Air Base attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Iruma Air Base is not the girl? Answer: Yes\n Premise: < Fort Madalena attracts Jason. 1960 Summer Olympics attracts Barbara. 1960 Summer Olympics attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to 1960 Summer Olympics is not the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [19, 20], "Q": [55, 60], "K'": [14, 17], "R": [61, 62], "K": [[5, 21], [10, 26]], "V": [[12, 28], [13, 29]], "example": [1, 68]}, {"END": [142, 143], "A'": [138, 140], "V'": [79, 80], "Q": [130, 136], "K'": [73, 77], "R": [137, 138], "K": [[82, 93], [88, 99]], "V": [[90, 101], [91, 103]], "example": [69, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Guillaumes attracts Margaret. ITE College East attracts Kenneth. Guillaumes attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Guillaumes is not the boy? Answer: Yes\n Premise: < Borghetto di Vara attracts George. Borghetto di Vara attracts Kevin. Kanchanaburi attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Borghetto di Vara is not the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [18, 19], "Q": [54, 57], "K'": [12, 16], "R": [58, 59], "K": [[5, 20], [8, 23]], "V": [[10, 25], [11, 28]], "example": [1, 65]}, {"END": [135, 136], "A'": [131, 133], "V'": [96, 97], "Q": [123, 129], "K'": [90, 94], "R": [130, 131], "K": [[70, 80], [76, 86]], "V": [[78, 88], [79, 89]], "example": [66, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Guillaumes attracts Margaret. ITE College East attracts Kenneth. Guillaumes attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Guillaumes is not the boy? Answer: Yes\n Premise: < Borghetto di Vara attracts George. Borghetto di Vara attracts Kevin. Kanchanaburi attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Borghetto di Vara is not the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [18, 19], "Q": [54, 57], "K'": [12, 16], "R": [58, 59], "K": [[5, 20], [8, 23]], "V": [[10, 25], [11, 28]], "example": [1, 65]}, {"END": [135, 136], "A'": [131, 133], "V'": [96, 97], "Q": [123, 129], "K'": [90, 94], "R": [130, 131], "K": [[70, 80], [76, 86]], "V": [[78, 88], [79, 89]], "example": [66, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Komarichsky District attracts Kenneth. Hohenwestedt attracts Dorothy. Hohenwestedt attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is not the boy? Answer: Yes\n Premise: < Noliko Maaseik attracts George. Scheibbs District attracts Dorothy. Scheibbs District attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Scheibbs District is not the boy? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [12, 13], "Q": [58, 63], "K'": [5, 10], "R": [64, 65], "K": [[14, 24], [19, 29]], "V": [[21, 31], [23, 32]], "example": [1, 71]}, {"END": [139, 140], "A'": [135, 137], "V'": [84, 85], "Q": [129, 133], "K'": [76, 82], "R": [134, 135], "K": [[86, 95], [90, 99]], "V": [[92, 101], [94, 103]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Komarichsky District attracts Kenneth. Hohenwestedt attracts Dorothy. Hohenwestedt attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Hohenwestedt is not the boy? Answer: Yes\n Premise: < Noliko Maaseik attracts George. Scheibbs District attracts Dorothy. Scheibbs District attracts Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Scheibbs District is not the girl? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [12, 13], "Q": [58, 63], "K'": [5, 10], "R": [64, 65], "K": [[14, 24], [19, 29]], "V": [[21, 31], [23, 32]], "example": [1, 71]}, {"END": [139, 140], "A'": [135, 137], "V'": [84, 85], "Q": [129, 133], "K'": [76, 82], "R": [134, 135], "K": [[86, 95], [90, 99]], "V": [[92, 101], [94, 103]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ulundurpet attracts Steven. Ulundurpet attracts John. Augusta Raurica attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ulundurpet is not the boy? Answer: No\n Premise: < Capoeira attracts Christopher. Saint Gayane Church attracts Nancy. Saint Gayane Church attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Gayane Church is not the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [28, 30], "Q": [56, 60], "K'": [21, 26], "R": [61, 62], "K": [[5, 13], [9, 17]], "V": [[11, 19], [12, 20]], "example": [1, 68]}, {"END": [133, 134], "A'": [129, 131], "V'": [78, 79], "Q": [123, 127], "K'": [73, 76], "R": [128, 129], "K": [[80, 88], [84, 92]], "V": [[86, 94], [87, 97]], "example": [69, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ulundurpet attracts Steven. Ulundurpet attracts John. Augusta Raurica attracts Michelle. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Ulundurpet is not the boy? Answer: No\n Premise: < Capoeira attracts Christopher. Saint Gayane Church attracts Nancy. Saint Gayane Church attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to Saint Gayane Church is not the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [28, 30], "Q": [56, 60], "K'": [21, 26], "R": [61, 62], "K": [[5, 13], [9, 17]], "V": [[11, 19], [12, 20]], "example": [1, 68]}, {"END": [133, 134], "A'": [129, 131], "V'": [78, 79], "Q": [123, 127], "K'": [73, 76], "R": [128, 129], "K": [[80, 88], [84, 92]], "V": [[86, 94], [87, 97]], "example": [69, 135]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Tunisia, Ghana, Italy, Estonia, Nepal and India.\n< Sharon likes Kadrina Rural Municipality. Donna likes Mosque of Uqba. James likes Mediolanum Forum. >. So the boy wants to go to a place in Italy\n < Margaret likes Kosi Zone. Nancy likes Boinpalle mandal. Richard likes Nkawkaw. >. So the boy wants to go to a place in Ghana\n", "ranges": [{"END": [68, 69], "A": [69, 70], "V": [52, 56], "Q": [60, 62], "K": [49, 50], "R": null, "K'": [[26, 38], [28, 40]], "V'": [[30, 42], [37, 48]], "example": [25, 70]}, {"END": [109, 110], "A": [110, 112], "V": [92, 97], "Q": [101, 103], "K": [89, 90], "R": null, "K'": [[72, 79], [73, 80]], "V'": [[75, 82], [78, 88]], "example": [71, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Charles likes Bispebjerg. Susan likes Colleville-Montgomery. Kimberly likes Mediolanum Forum. >. So the boy wants to go to a place in Denmark\n < Donald likes Eirodziesma. Lisa likes Opel. Jennifer likes Sommariva del Bosco. >. So the boy wants to go to a place in Latvia\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [24, 29], "Q": [54, 56], "K": [21, 22], "R": null, "K'": [[30, 41], [31, 44]], "V'": [[33, 46], [40, 50]], "example": [20, 65]}, {"END": [105, 106], "A": [106, 108], "V": [70, 75], "Q": [97, 99], "K": [67, 68], "R": null, "K'": [[76, 82], [77, 84]], "V'": [[79, 86], [81, 93]], "example": [66, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Sharon likes Tirebolu. Nancy likes Putyvl. Mark likes Cubagua. >. So the boy wants to go to a place in Venezuela\n < Robert likes Bunda District. Karen likes Theni district. Donna likes Vinkeveen. >. So the boy wants to go to a place in Tanzania\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [42, 44], "Q": [48, 50], "K": [39, 40], "R": null, "K'": [[23, 32], [25, 33]], "V'": [[27, 35], [31, 38]], "example": [22, 58]}, {"END": [95, 96], "A": [96, 99], "V": [63, 66], "Q": [87, 89], "K": [60, 61], "R": null, "K'": [[67, 75], [69, 77]], "V'": [[71, 79], [74, 83]], "example": [59, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Ronald likes Manila Light Rail Transit System. Nancy likes Lund Municipality. Joseph likes Bernheze. >. So the girl wants to go to a place in Sweden\n < Kevin likes Electoral district of Wantirna. Jason likes Peremyshliany. Karen likes Saint Gayane Church. >. So the girl wants to go to a place in Armenia\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [37, 40], "Q": [51, 53], "K": [34, 35], "R": null, "K'": [[22, 41], [24, 42]], "V'": [[26, 44], [33, 47]], "example": [21, 61]}, {"END": [104, 105], "A": [105, 107], "V": [88, 92], "Q": [96, 98], "K": [84, 86], "R": null, "K'": [[63, 75], [64, 76]], "V'": [[66, 78], [74, 83]], "example": [62, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Jason likes Mosque of Uqba. Elizabeth likes Kibungo Province. Joseph likes Nimmitabel. >. So the girl wants to go to a place in Rwanda\n < Laura likes Breege. Charles likes Bunda District. Nancy likes Llanquihue Province. >. So the boy wants to go to a place in Tanzania\n", "ranges": [{"END": [65, 66], "A": [66, 69], "V": [40, 45], "Q": [57, 59], "K": [37, 38], "R": null, "K'": [[27, 46], [28, 47]], "V'": [[30, 49], [36, 53]], "example": [26, 69]}, {"END": [105, 106], "A": [106, 109], "V": [80, 83], "Q": [97, 99], "K": [77, 78], "R": null, "K'": [[71, 84], [72, 85]], "V'": [[74, 87], [76, 93]], "example": [70, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Luxembourg, Canada, Ethiopia, India, Russia and France.\n< Karen likes Ghatanji. Donald likes Eurostat. Laura likes Bouygues Telecom. >. So the boy wants to go to a place in Luxembourg\n < Edward likes Jan Amora. Mary likes Jervis Inlet. Nancy likes Komarichsky District. >. So the boy wants to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [36, 38], "Q": [51, 53], "K": [33, 34], "R": null, "K'": [[24, 39], [26, 40]], "V'": [[28, 42], [32, 47]], "example": [23, 62]}, {"END": [99, 100], "A": [100, 103], "V": [67, 70], "Q": [91, 93], "K": [64, 65], "R": null, "K'": [[71, 79], [72, 80]], "V'": [[74, 82], [78, 87]], "example": [63, 103]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Dorothy likes Lindholm station. Sandra likes Didymoteicho. George likes Wazzin. >. So the boy wants to go to a place in Libya\n < Richard likes University of Bern. Daniel likes Monarcas Morelia. Sandra likes Borghetto di Vara. >. So the girl wants to go to a place in Italy\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [44, 47], "Q": [51, 53], "K": [41, 42], "R": null, "K'": [[23, 31], [25, 33]], "V'": [[27, 35], [30, 40]], "example": [22, 62]}, {"END": [102, 103], "A": [103, 104], "V": [84, 90], "Q": [94, 96], "K": [80, 82], "R": null, "K'": [[64, 71], [65, 72]], "V'": [[67, 74], [70, 79]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Israel, Belarus, Bahamas, Spain and Canada.\n< Barbara likes Geffen Award. Richard likes Valvasone. Michael likes Ateneo de Madrid. >. So the girl wants to go to a place in Israel\n < Michelle likes Free National Movement. Richard likes Western Bug. Anthony likes Habitat 67. >. So the girl wants to go to a place in Bahamas\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [27, 30], "Q": [51, 53], "K": [24, 25], "R": null, "K'": [[31, 38], [32, 39]], "V'": [[34, 41], [37, 47]], "example": [23, 61]}, {"END": [98, 99], "A": [99, 102], "V": [67, 71], "Q": [90, 92], "K": [63, 65], "R": null, "K'": [[72, 78], [73, 79]], "V'": [[75, 81], [77, 86]], "example": [62, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Estonia, India, Tunisia, Nepal and Ghana.\nPremise: < Sharon likes Kadrina Rural Municipality. Donna likes Mosque of Uqba. James likes Mediolanum Forum. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Estonia? Answer: No\n Premise: < Kimberly likes Kosi Zone. Margaret likes Boinpalle mandal. Daniel likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [56, 60], "Q": [79, 81], "K": [53, 54], "R": null, "K'": [[30, 42], [32, 44]], "V'": [[34, 46], [41, 52]], "example": [25, 94]}, {"END": [158, 159], "A": [154, 156], "V": [121, 126], "Q": [145, 147], "K": [118, 119], "R": null, "K'": [[99, 108], [102, 109]], "V'": [[104, 111], [107, 117]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Estonia, Nepal, Ghana, India and Tunisia.\nPremise: < Sharon likes Kadrina Rural Municipality. Donna likes Mosque of Uqba. James likes Mediolanum Forum. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Estonia? Answer: No\n Premise: < Kimberly likes Kosi Zone. Margaret likes Boinpalle mandal. Daniel likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in India? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [56, 60], "Q": [79, 81], "K": [53, 54], "R": null, "K'": [[30, 42], [32, 44]], "V'": [[34, 46], [41, 52]], "example": [25, 94]}, {"END": [157, 158], "A": [154, 155], "V": [121, 126], "Q": [145, 147], "K": [118, 119], "R": null, "K'": [[99, 108], [102, 109]], "V'": [[104, 111], [107, 117]], "example": [95, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Laura likes Palana. Elizabeth likes Katwijk aan den Rijn. Mark likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Kevin likes Konark Sun temple. Donna likes Kibungo Province. William likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [49, 52], "Q": [71, 73], "K": [46, 47], "R": null, "K'": [[29, 35], [30, 36]], "V'": [[32, 38], [34, 45]], "example": [24, 87]}, {"END": [151, 152], "A": [146, 149], "V": [104, 109], "Q": [137, 139], "K": [100, 102], "R": null, "K'": [[92, 110], [93, 111]], "V'": [[95, 113], [99, 118]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Laura likes Palana. Elizabeth likes Katwijk aan den Rijn. Mark likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Kevin likes Konark Sun temple. Donna likes Kibungo Province. William likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in India? Answer: No\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [49, 52], "Q": [71, 73], "K": [46, 47], "R": null, "K'": [[29, 35], [30, 36]], "V'": [[32, 38], [34, 45]], "example": [24, 87]}, {"END": [149, 150], "A": [146, 147], "V": [104, 109], "Q": [137, 139], "K": [100, 102], "R": null, "K'": [[92, 110], [93, 111]], "V'": [[95, 113], [99, 118]], "example": [88, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < William likes Bird's Head Peninsula. Barbara likes Ichchapuram. Karen likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Peru? Answer: No\n Premise: < Ronald likes Yoro. Barbara likes New Era University. Margaret likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [31, 38], "Q": [77, 79], "K": [28, 29], "R": null, "K'": [[39, 48], [40, 50]], "V'": [[42, 52], [47, 58]], "example": [23, 91]}, {"END": [151, 152], "A": [146, 149], "V": [100, 102], "Q": [137, 139], "K": [96, 98], "R": null, "K'": [[103, 110], [104, 111]], "V'": [[106, 113], [109, 118]], "example": [92, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < William likes Bird's Head Peninsula. Barbara likes Ichchapuram. Karen likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Peru? Answer: No\n Premise: < Ronald likes Yoro. Barbara likes New Era University. Margaret likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [31, 38], "Q": [77, 79], "K": [28, 29], "R": null, "K'": [[39, 48], [40, 50]], "V'": [[42, 52], [47, 58]], "example": [23, 91]}, {"END": [149, 150], "A": [146, 147], "V": [100, 102], "Q": [137, 139], "K": [96, 98], "R": null, "K'": [[103, 110], [104, 111]], "V'": [[106, 113], [109, 118]], "example": [92, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Elizabeth likes Mosque of Uqba. William likes Kibungo Province. Laura likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Tunisia? Answer: No\n Premise: < Laura likes Madona District. Daniel likes bpost. David likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [44, 49], "Q": [76, 78], "K": [41, 42], "R": null, "K'": [[31, 50], [32, 51]], "V'": [[34, 53], [40, 57]], "example": [26, 92]}, {"END": [148, 149], "A": [144, 146], "V": [100, 103], "Q": [135, 137], "K": [97, 98], "R": null, "K'": [[104, 110], [105, 111]], "V'": [[107, 113], [109, 116]], "example": [93, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Elizabeth likes Mosque of Uqba. William likes Kibungo Province. Laura likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Tunisia? Answer: No\n Premise: < Laura likes Madona District. Daniel likes bpost. David likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [44, 49], "Q": [76, 78], "K": [41, 42], "R": null, "K'": [[31, 50], [32, 51]], "V'": [[34, 53], [40, 57]], "example": [26, 92]}, {"END": [148, 149], "A": [144, 146], "V": [100, 103], "Q": [135, 137], "K": [97, 98], "R": null, "K'": [[104, 110], [105, 111]], "V'": [[107, 113], [109, 116]], "example": [93, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Mary likes Ferrobaires. Ruth likes Second Rutte cabinet. Robert likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Spain? Answer: Yes\n Premise: < Joseph likes Soalala. Donna likes Kojur District. Nancy likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [47, 53], "Q": [72, 74], "K": [44, 45], "R": null, "K'": [[28, 35], [29, 36]], "V'": [[31, 38], [34, 43]], "example": [23, 86]}, {"END": [146, 147], "A": [141, 144], "V": [94, 97], "Q": [132, 134], "K": [91, 92], "R": null, "K'": [[98, 107], [100, 108]], "V'": [[102, 110], [106, 113]], "example": [87, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Mary likes Ferrobaires. Ruth likes Second Rutte cabinet. Robert likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Spain? Answer: Yes\n Premise: < Joseph likes Soalala. Donna likes Kojur District. Nancy likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [47, 53], "Q": [72, 74], "K": [44, 45], "R": null, "K'": [[28, 35], [29, 36]], "V'": [[31, 38], [34, 43]], "example": [23, 86]}, {"END": [144, 145], "A": [141, 142], "V": [94, 97], "Q": [132, 134], "K": [91, 92], "R": null, "K'": [[98, 107], [100, 108]], "V'": [[102, 110], [106, 113]], "example": [87, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Betty likes Hellenic Police. Richard likes Jafara. Maria likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Greece? Answer: No\n Premise: < Nancy likes Albertis Castle. Christopher likes Logatec. Deborah likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [38, 41], "Q": [67, 69], "K": [35, 36], "R": null, "K'": [[27, 42], [28, 43]], "V'": [[30, 45], [34, 48]], "example": [22, 81]}, {"END": [141, 142], "A": [137, 139], "V": [96, 99], "Q": [128, 130], "K": [93, 94], "R": null, "K'": [[86, 100], [87, 103]], "V'": [[89, 105], [92, 109]], "example": [82, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Betty likes Hellenic Police. Richard likes Jafara. Maria likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Greece? Answer: No\n Premise: < Nancy likes Albertis Castle. Christopher likes Logatec. Deborah likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in India? Answer: No\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [38, 41], "Q": [67, 69], "K": [35, 36], "R": null, "K'": [[27, 42], [28, 43]], "V'": [[30, 45], [34, 48]], "example": [22, 81]}, {"END": [140, 141], "A": [137, 138], "V": [96, 99], "Q": [128, 130], "K": [93, 94], "R": null, "K'": [[86, 100], [87, 103]], "V'": [[89, 105], [92, 109]], "example": [82, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Germany, Switzerland, India and Lithuania.\nPremise: < Margaret likes Westerburg. Edward likes Kaunas Cathedral Basilica. Barbara likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Germany? Answer: No\n Premise: < Jason likes Hobart Zoo. Lisa likes Gobind Sagar. Carol likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [35, 42], "Q": [72, 74], "K": [32, 33], "R": null, "K'": [[25, 43], [26, 44]], "V'": [[28, 46], [31, 53]], "example": [20, 86]}, {"END": [145, 146], "A": [142, 143], "V": [94, 98], "Q": [133, 135], "K": [91, 92], "R": null, "K'": [[99, 108], [100, 109]], "V'": [[102, 111], [107, 114]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Lithuania, Australia, India and Switzerland.\nPremise: < Margaret likes Westerburg. Edward likes Kaunas Cathedral Basilica. Barbara likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Germany? Answer: No\n Premise: < Jason likes Hobart Zoo. Lisa likes Gobind Sagar. Carol likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [35, 42], "Q": [72, 74], "K": [32, 33], "R": null, "K'": [[25, 43], [26, 44]], "V'": [[28, 46], [31, 53]], "example": [20, 86]}, {"END": [145, 146], "A": [142, 143], "V": [94, 98], "Q": [133, 135], "K": [91, 92], "R": null, "K'": [[99, 108], [100, 109]], "V'": [[102, 111], [107, 114]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Malta, Switzerland, Armenia, Norway, Belgium and France.\nPremise: < Donald likes Noyon. Betty likes Public Broadcasting Services. Anthony likes Adliswil. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Malta? Answer: Yes\n Premise: < Donald likes bpost. Richard likes Ledaal. Kimberly likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [38, 42], "Q": [69, 71], "K": [35, 36], "R": null, "K'": [[28, 43], [29, 44]], "V'": [[31, 46], [34, 50]], "example": [23, 84]}, {"END": [143, 144], "A": [139, 141], "V": [107, 111], "Q": [130, 132], "K": [102, 105], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[92, 98], [94, 101]], "example": [85, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include France, Armenia, Malta, Switzerland, Norway and Belgium.\nPremise: < Donald likes Noyon. Betty likes Public Broadcasting Services. Anthony likes Adliswil. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Malta? Answer: Yes\n Premise: < Donald likes bpost. Richard likes Ledaal. Kimberly likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Norway? Answer: No\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [38, 42], "Q": [69, 71], "K": [35, 36], "R": null, "K'": [[28, 43], [29, 44]], "V'": [[31, 46], [34, 50]], "example": [23, 84]}, {"END": [142, 143], "A": [139, 140], "V": [107, 111], "Q": [130, 132], "K": [102, 105], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[92, 98], [94, 101]], "example": [85, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Tunisia, Ghana, Italy, Estonia, Nepal and India.\n< Kadrina Rural Municipality attracts Sharon. Mosque of Uqba attracts Donna. Mediolanum Forum attracts James. >. So the boy wants to go to a place in Italy\n < Kosi Zone attracts Margaret. Boinpalle mandal attracts Nancy. Nkawkaw attracts Richard. >. So the boy wants to go to a place in Ghana\n", "ranges": [{"END": [68, 69], "A": [69, 70], "V": [49, 53], "Q": [60, 62], "K": [55, 56], "R": null, "K'": [[35, 46], [37, 48]], "V'": [[26, 38], [33, 44]], "example": [25, 70]}, {"END": [109, 110], "A": [110, 112], "V": [89, 94], "Q": [101, 103], "K": [96, 97], "R": null, "K'": [[77, 87], [78, 88]], "V'": [[72, 79], [75, 85]], "example": [71, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Bispebjerg attracts Charles. Colleville-Montgomery attracts Susan. Mediolanum Forum attracts Kimberly. >. So the boy wants to go to a place in Denmark\n < Eirodziesma attracts Donald. Opel attracts Lisa. Sommariva del Bosco attracts Jennifer. >. So the boy wants to go to a place in Latvia\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [21, 26], "Q": [54, 56], "K": [28, 29], "R": null, "K'": [[39, 47], [40, 50]], "V'": [[30, 41], [37, 45]], "example": [20, 65]}, {"END": [105, 106], "A": [106, 108], "V": [67, 72], "Q": [97, 99], "K": [74, 75], "R": null, "K'": [[80, 91], [81, 93]], "V'": [[76, 82], [78, 89]], "example": [66, 108]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Tirebolu attracts Sharon. Putyvl attracts Nancy. Cubagua attracts Mark. >. So the boy wants to go to a place in Venezuela\n < Bunda District attracts Robert. Theni district attracts Karen. Vinkeveen attracts Donna. >. So the boy wants to go to a place in Tanzania\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [39, 41], "Q": [48, 50], "K": [43, 44], "R": null, "K'": [[29, 37], [31, 38]], "V'": [[23, 32], [27, 35]], "example": [22, 58]}, {"END": [95, 96], "A": [96, 99], "V": [60, 63], "Q": [87, 89], "K": [65, 66], "R": null, "K'": [[72, 81], [74, 83]], "V'": [[67, 75], [70, 79]], "example": [59, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Manila Light Rail Transit System attracts Ronald. Lund Municipality attracts Nancy. Bernheze attracts Joseph. >. So the girl wants to go to a place in Sweden\n < Electoral district of Wantirna attracts Kevin. Peremyshliany attracts Jason. Saint Gayane Church attracts Karen. >. So the girl wants to go to a place in Armenia\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [34, 37], "Q": [51, 53], "K": [39, 40], "R": null, "K'": [[31, 46], [33, 47]], "V'": [[22, 41], [29, 44]], "example": [21, 61]}, {"END": [104, 105], "A": [105, 107], "V": [84, 88], "Q": [96, 98], "K": [90, 92], "R": null, "K'": [[73, 82], [74, 83]], "V'": [[63, 75], [71, 80]], "example": [62, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Mosque of Uqba attracts Jason. Kibungo Province attracts Elizabeth. Nimmitabel attracts Joseph. >. So the girl wants to go to a place in Rwanda\n < Breege attracts Laura. Bunda District attracts Charles. Llanquihue Province attracts Nancy. >. So the boy wants to go to a place in Tanzania\n", "ranges": [{"END": [65, 66], "A": [66, 69], "V": [37, 42], "Q": [57, 59], "K": [44, 45], "R": null, "K'": [[35, 52], [36, 53]], "V'": [[27, 46], [33, 50]], "example": [26, 69]}, {"END": [105, 106], "A": [106, 109], "V": [77, 80], "Q": [97, 99], "K": [82, 83], "R": null, "K'": [[75, 92], [76, 93]], "V'": [[71, 84], [73, 90]], "example": [70, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Luxembourg, Canada, Ethiopia, India, Russia and France.\n< Ghatanji attracts Karen. Eurostat attracts Donald. Bouygues Telecom attracts Laura. >. So the boy wants to go to a place in Luxembourg\n < Jan Amora attracts Edward. Jervis Inlet attracts Mary. Komarichsky District attracts Nancy. >. So the boy wants to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [33, 35], "Q": [51, 53], "K": [37, 38], "R": null, "K'": [[30, 46], [32, 47]], "V'": [[24, 39], [28, 44]], "example": [23, 62]}, {"END": [99, 100], "A": [100, 103], "V": [64, 67], "Q": [91, 93], "K": [69, 70], "R": null, "K'": [[77, 86], [78, 87]], "V'": [[71, 79], [75, 84]], "example": [63, 103]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Lindholm station attracts Dorothy. Didymoteicho attracts Sandra. Wazzin attracts George. >. So the boy wants to go to a place in Libya\n < University of Bern attracts Richard. Monarcas Morelia attracts Daniel. Borghetto di Vara attracts Sandra. >. So the girl wants to go to a place in Italy\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [41, 44], "Q": [51, 53], "K": [46, 47], "R": null, "K'": [[28, 38], [30, 40]], "V'": [[23, 31], [26, 36]], "example": [22, 62]}, {"END": [102, 103], "A": [103, 104], "V": [80, 86], "Q": [94, 96], "K": [88, 90], "R": null, "K'": [[69, 78], [70, 79]], "V'": [[64, 71], [67, 76]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Israel, Belarus, Bahamas, Spain and Canada.\n< Geffen Award attracts Barbara. Valvasone attracts Richard. Ateneo de Madrid attracts Michael. >. So the girl wants to go to a place in Israel\n < Free National Movement attracts Michelle. Western Bug attracts Richard. Habitat 67 attracts Anthony. >. So the girl wants to go to a place in Bahamas\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [24, 27], "Q": [51, 53], "K": [29, 30], "R": null, "K'": [[36, 46], [37, 47]], "V'": [[31, 38], [34, 44]], "example": [23, 61]}, {"END": [98, 99], "A": [99, 102], "V": [63, 67], "Q": [90, 92], "K": [69, 71], "R": null, "K'": [[76, 85], [77, 86]], "V'": [[72, 78], [74, 83]], "example": [62, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Estonia, India, Tunisia, Nepal and Ghana.\nPremise: < Kadrina Rural Municipality attracts Sharon. Mosque of Uqba attracts Donna. Mediolanum Forum attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Estonia? Answer: No\n Premise: < Kosi Zone attracts Kimberly. Boinpalle mandal attracts Margaret. Nkawkaw attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [53, 57], "Q": [79, 81], "K": [59, 60], "R": null, "K'": [[39, 50], [41, 52]], "V'": [[30, 42], [37, 48]], "example": [25, 94]}, {"END": [158, 159], "A": [154, 156], "V": [118, 123], "Q": [145, 147], "K": [125, 126], "R": null, "K'": [[104, 116], [107, 117]], "V'": [[99, 108], [102, 114]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Estonia, Nepal, Ghana, India and Tunisia.\nPremise: < Kadrina Rural Municipality attracts Sharon. Mosque of Uqba attracts Donna. Mediolanum Forum attracts James. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Estonia? Answer: No\n Premise: < Kosi Zone attracts Kimberly. Boinpalle mandal attracts Margaret. Nkawkaw attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in India? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [53, 57], "Q": [79, 81], "K": [59, 60], "R": null, "K'": [[39, 50], [41, 52]], "V'": [[30, 42], [37, 48]], "example": [25, 94]}, {"END": [157, 158], "A": [154, 155], "V": [118, 123], "Q": [145, 147], "K": [125, 126], "R": null, "K'": [[104, 116], [107, 117]], "V'": [[99, 108], [102, 114]], "example": [95, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Palana attracts Laura. Katwijk aan den Rijn attracts Elizabeth. Emba River attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Kevin. Kibungo Province attracts Donna. Amos Anderson Art Museum attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 49], "Q": [71, 73], "K": [51, 52], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[29, 35], [31, 42]], "example": [24, 87]}, {"END": [151, 152], "A": [146, 149], "V": [100, 105], "Q": [137, 139], "K": [107, 109], "R": null, "K'": [[98, 117], [99, 118]], "V'": [[92, 110], [96, 115]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Palana attracts Laura. Katwijk aan den Rijn attracts Elizabeth. Emba River attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Kevin. Kibungo Province attracts Donna. Amos Anderson Art Museum attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in India? Answer: No\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 49], "Q": [71, 73], "K": [51, 52], "R": null, "K'": [[33, 44], [34, 45]], "V'": [[29, 35], [31, 42]], "example": [24, 87]}, {"END": [149, 150], "A": [146, 147], "V": [100, 105], "Q": [137, 139], "K": [107, 109], "R": null, "K'": [[98, 117], [99, 118]], "V'": [[92, 110], [96, 115]], "example": [88, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Bird's Head Peninsula attracts William. Ichchapuram attracts Barbara. Huachocolpa District attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Ronald. New Era University attracts Barbara. Lewin Brzeski attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [28, 35], "Q": [77, 79], "K": [37, 38], "R": null, "K'": [[46, 56], [47, 58]], "V'": [[39, 48], [44, 54]], "example": [23, 91]}, {"END": [151, 152], "A": [146, 149], "V": [96, 98], "Q": [137, 139], "K": [100, 102], "R": null, "K'": [[108, 117], [109, 118]], "V'": [[103, 110], [106, 115]], "example": [92, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Bird's Head Peninsula attracts William. Ichchapuram attracts Barbara. Huachocolpa District attracts Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Ronald. New Era University attracts Barbara. Lewin Brzeski attracts Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [28, 35], "Q": [77, 79], "K": [37, 38], "R": null, "K'": [[46, 56], [47, 58]], "V'": [[39, 48], [44, 54]], "example": [23, 91]}, {"END": [149, 150], "A": [146, 147], "V": [96, 98], "Q": [137, 139], "K": [100, 102], "R": null, "K'": [[108, 117], [109, 118]], "V'": [[103, 110], [106, 115]], "example": [92, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Mosque of Uqba attracts Elizabeth. Kibungo Province attracts William. Nimmitabel attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Laura. bpost attracts Daniel. Westerburg attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [41, 46], "Q": [76, 78], "K": [48, 49], "R": null, "K'": [[39, 56], [40, 57]], "V'": [[31, 50], [37, 54]], "example": [26, 92]}, {"END": [148, 149], "A": [144, 146], "V": [97, 100], "Q": [135, 137], "K": [102, 103], "R": null, "K'": [[108, 115], [109, 116]], "V'": [[104, 110], [106, 113]], "example": [93, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Mosque of Uqba attracts Elizabeth. Kibungo Province attracts William. Nimmitabel attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Laura. bpost attracts Daniel. Westerburg attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [41, 46], "Q": [76, 78], "K": [48, 49], "R": null, "K'": [[39, 56], [40, 57]], "V'": [[31, 50], [37, 54]], "example": [26, 92]}, {"END": [148, 149], "A": [144, 146], "V": [97, 100], "Q": [135, 137], "K": [102, 103], "R": null, "K'": [[108, 115], [109, 116]], "V'": [[104, 110], [106, 113]], "example": [93, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Ferrobaires attracts Mary. Second Rutte cabinet attracts Ruth. Ateneo de Madrid attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Joseph. Kojur District attracts Donna. Pinosava attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [44, 50], "Q": [72, 74], "K": [52, 53], "R": null, "K'": [[33, 42], [34, 43]], "V'": [[28, 35], [31, 40]], "example": [23, 86]}, {"END": [146, 147], "A": [141, 144], "V": [91, 94], "Q": [132, 134], "K": [96, 97], "R": null, "K'": [[104, 112], [106, 113]], "V'": [[98, 107], [102, 110]], "example": [87, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Ferrobaires attracts Mary. Second Rutte cabinet attracts Ruth. Ateneo de Madrid attracts Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Joseph. Kojur District attracts Donna. Pinosava attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [44, 50], "Q": [72, 74], "K": [52, 53], "R": null, "K'": [[33, 42], [34, 43]], "V'": [[28, 35], [31, 40]], "example": [23, 86]}, {"END": [144, 145], "A": [141, 142], "V": [91, 94], "Q": [132, 134], "K": [96, 97], "R": null, "K'": [[104, 112], [106, 113]], "V'": [[98, 107], [102, 110]], "example": [87, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Hellenic Police attracts Betty. Jafara attracts Richard. University of Bern attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Nancy. Logatec attracts Christopher. Shoranur attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [35, 38], "Q": [67, 69], "K": [40, 41], "R": null, "K'": [[33, 47], [34, 48]], "V'": [[27, 42], [31, 45]], "example": [22, 81]}, {"END": [141, 142], "A": [137, 139], "V": [93, 96], "Q": [128, 130], "K": [98, 99], "R": null, "K'": [[91, 106], [92, 109]], "V'": [[86, 100], [89, 104]], "example": [82, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Hellenic Police attracts Betty. Jafara attracts Richard. University of Bern attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Nancy. Logatec attracts Christopher. Shoranur attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in India? Answer: No\n", "ranges": [{"END": [79, 80], "A": [76, 77], "V": [35, 38], "Q": [67, 69], "K": [40, 41], "R": null, "K'": [[33, 47], [34, 48]], "V'": [[27, 42], [31, 45]], "example": [22, 81]}, {"END": [140, 141], "A": [137, 138], "V": [93, 96], "Q": [128, 130], "K": [98, 99], "R": null, "K'": [[91, 106], [92, 109]], "V'": [[86, 100], [89, 104]], "example": [82, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Germany, Switzerland, India and Lithuania.\nPremise: < Westerburg attracts Margaret. Kaunas Cathedral Basilica attracts Edward. Tehri Garhwal district attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Germany? Answer: No\n Premise: < Hobart Zoo attracts Jason. Gobind Sagar attracts Lisa. Capolago attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [32, 39], "Q": [72, 74], "K": [41, 42], "R": null, "K'": [[30, 52], [31, 53]], "V'": [[25, 43], [28, 50]], "example": [20, 86]}, {"END": [145, 146], "A": [142, 143], "V": [91, 95], "Q": [133, 135], "K": [97, 98], "R": null, "K'": [[106, 113], [107, 114]], "V'": [[99, 108], [104, 111]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Lithuania, Australia, India and Switzerland.\nPremise: < Westerburg attracts Margaret. Kaunas Cathedral Basilica attracts Edward. Tehri Garhwal district attracts Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Germany? Answer: No\n Premise: < Hobart Zoo attracts Jason. Gobind Sagar attracts Lisa. Capolago attracts Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy wants to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [32, 39], "Q": [72, 74], "K": [41, 42], "R": null, "K'": [[30, 52], [31, 53]], "V'": [[25, 43], [28, 50]], "example": [20, 86]}, {"END": [145, 146], "A": [142, 143], "V": [91, 95], "Q": [133, 135], "K": [97, 98], "R": null, "K'": [[106, 113], [107, 114]], "V'": [[99, 108], [104, 111]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Malta, Switzerland, Armenia, Norway, Belgium and France.\nPremise: < Noyon attracts Donald. Public Broadcasting Services attracts Betty. Adliswil attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Malta? Answer: Yes\n Premise: < bpost attracts Donald. Ledaal attracts Richard. Saint Gayane Church attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [35, 39], "Q": [69, 71], "K": [41, 42], "R": null, "K'": [[33, 49], [34, 50]], "V'": [[28, 43], [31, 47]], "example": [23, 84]}, {"END": [143, 144], "A": [139, 141], "V": [102, 106], "Q": [130, 132], "K": [108, 111], "R": null, "K'": [[93, 100], [94, 101]], "V'": [[89, 95], [91, 98]], "example": [85, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include France, Armenia, Malta, Switzerland, Norway and Belgium.\nPremise: < Noyon attracts Donald. Public Broadcasting Services attracts Betty. Adliswil attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Malta? Answer: Yes\n Premise: < bpost attracts Donald. Ledaal attracts Richard. Saint Gayane Church attracts Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl wants to go to a place in Norway? Answer: No\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [35, 39], "Q": [69, 71], "K": [41, 42], "R": null, "K'": [[33, 49], [34, 50]], "V'": [[28, 43], [31, 47]], "example": [23, 84]}, {"END": [142, 143], "A": [139, 140], "V": [102, 106], "Q": [130, 132], "K": [108, 111], "R": null, "K'": [[93, 100], [94, 101]], "V'": [[89, 95], [91, 98]], "example": [85, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Tunisia, Ghana, Italy, Estonia, Nepal and India.\n< Brian likes Kadrina Rural Municipality. Kenneth likes Mosque of Uqba. Mary likes Mediolanum Forum. >. The boys do not want to go to a place in Italy\n < Joseph likes Kosi Zone. Daniel likes Boinpalle mandal. Maria likes Nkawkaw. >. The boys do not want to go to a place in Ghana\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [50, 54], "Q": [57, 59], "K'": [47, 48], "R": [60, 61], "K": [[26, 37], [27, 38]], "V": [[29, 40], [36, 46]], "example": [25, 69]}, {"END": [109, 110], "A'": [110, 112], "V'": [91, 96], "Q": [99, 101], "K'": [88, 89], "R": [102, 103], "K": [[71, 78], [72, 79]], "V": [[74, 81], [77, 87]], "example": [70, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Susan likes Bispebjerg. Charles likes Colleville-Montgomery. Jason likes Mediolanum Forum. >. The boys do not want to go to a place in Denmark\n < Helen likes Eirodziesma. Christopher likes Opel. David likes Sommariva del Bosco. >. The boys do not want to go to a place in Latvia\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [24, 29], "Q": [51, 53], "K'": [21, 22], "R": [54, 55], "K": [[30, 41], [31, 42]], "V": [[33, 44], [40, 48]], "example": [20, 64]}, {"END": [104, 105], "A'": [105, 107], "V'": [69, 74], "Q": [94, 96], "K'": [66, 67], "R": [97, 98], "K": [[75, 81], [76, 82]], "V": [[78, 84], [80, 91]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Brian likes Tirebolu. Daniel likes Putyvl. Betty likes Cubagua. >. The boys do not want to go to a place in Venezuela\n < Linda likes Bunda District. Paul likes Theni district. Kenneth likes Vinkeveen. >. The boys do not want to go to a place in Tanzania\n", "ranges": [{"END": [56, 57], "A'": [57, 58], "V'": [41, 43], "Q": [46, 48], "K'": [38, 39], "R": [49, 50], "K": [[23, 31], [24, 32]], "V": [[26, 34], [30, 37]], "example": [22, 58]}, {"END": [95, 96], "A'": [96, 99], "V'": [64, 67], "Q": [85, 87], "K'": [60, 62], "R": [88, 89], "K": [[68, 75], [69, 76]], "V": [[71, 78], [74, 82]], "example": [59, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Michelle likes Manila Light Rail Transit System. Daniel likes Lund Municipality. Margaret likes Bernheze. >. The girls do not want to go to a place in Sweden\n < Sarah likes Electoral district of Wantirna. Kimberly likes Peremyshliany. Paul likes Saint Gayane Church. >. The girls do not want to go to a place in Armenia\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [37, 40], "Q": [50, 52], "K'": [34, 35], "R": [53, 54], "K": [[22, 41], [24, 42]], "V": [[26, 44], [33, 47]], "example": [21, 62]}, {"END": [107, 108], "A'": [108, 110], "V'": [90, 94], "Q": [97, 99], "K'": [87, 88], "R": [100, 101], "K": [[64, 76], [65, 79]], "V": [[67, 81], [75, 86]], "example": [63, 110]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Kimberly likes Mosque of Uqba. William likes Kibungo Province. Margaret likes Nimmitabel. >. The girls do not want to go to a place in Rwanda\n < Anthony likes Breege. Susan likes Bunda District. Daniel likes Llanquihue Province. >. The boys do not want to go to a place in Tanzania\n", "ranges": [{"END": [68, 69], "A'": [69, 72], "V'": [42, 47], "Q": [58, 60], "K'": [39, 40], "R": [61, 62], "K": [[27, 48], [30, 49]], "V": [[32, 51], [38, 55]], "example": [26, 72]}, {"END": [109, 110], "A'": [110, 113], "V'": [83, 86], "Q": [99, 101], "K'": [80, 81], "R": [102, 103], "K": [[74, 87], [75, 88]], "V": [[77, 90], [79, 96]], "example": [73, 113]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Luxembourg, Canada, Ethiopia, India, Russia and France.\n< Paul likes Ghatanji. Helen likes Eurostat. Anthony likes Bouygues Telecom. >. The boys do not want to go to a place in Luxembourg\n < Ruth likes Jan Amora. James likes Jervis Inlet. Daniel likes Komarichsky District. >. The boys do not want to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A'": [60, 62], "V'": [35, 37], "Q": [49, 51], "K'": [32, 33], "R": [52, 53], "K": [[24, 38], [25, 39]], "V": [[27, 41], [31, 46]], "example": [23, 62]}, {"END": [100, 101], "A'": [101, 104], "V'": [67, 70], "Q": [90, 92], "K'": [64, 65], "R": [93, 94], "K": [[71, 79], [72, 80]], "V": [[74, 82], [78, 87]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Thomas likes Lindholm station. George likes Didymoteicho. Sandra likes Wazzin. >. The boys do not want to go to a place in Libya\n < Maria likes University of Bern. Nancy likes Monarcas Morelia. George likes Borghetto di Vara. >. The girls do not want to go to a place in Italy\n", "ranges": [{"END": [59, 60], "A'": [60, 62], "V'": [43, 46], "Q": [49, 51], "K'": [39, 41], "R": [52, 53], "K": [[23, 30], [24, 31]], "V": [[26, 33], [29, 38]], "example": [22, 62]}, {"END": [102, 103], "A'": [103, 104], "V'": [83, 89], "Q": [92, 94], "K'": [80, 81], "R": [95, 96], "K": [[64, 71], [65, 72]], "V": [[67, 74], [70, 79]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Israel, Belarus, Bahamas, Spain and Canada.\n< Michael likes Geffen Award. Maria likes Valvasone. Barbara likes Ateneo de Madrid. >. The girls do not want to go to a place in Israel\n < Ronald likes Free National Movement. Maria likes Western Bug. Laura likes Habitat 67. >. The girls do not want to go to a place in Bahamas\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [27, 30], "Q": [50, 52], "K'": [24, 25], "R": [53, 54], "K": [[31, 38], [32, 39]], "V": [[34, 41], [37, 47]], "example": [23, 62]}, {"END": [100, 101], "A'": [101, 104], "V'": [68, 72], "Q": [90, 92], "K'": [64, 66], "R": [93, 94], "K": [[73, 79], [74, 80]], "V": [[76, 82], [78, 87]], "example": [63, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Estonia, India, Tunisia, Nepal and Ghana.\nPremise: < Brian likes Kadrina Rural Municipality. Kenneth likes Mosque of Uqba. Mary likes Mediolanum Forum. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Estonia? Answer: No\n Premise: < Jason likes Kosi Zone. Joseph likes Boinpalle mandal. Nancy likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [54, 58], "Q": [77, 79], "K'": [51, 52], "R": [80, 81], "K": [[30, 41], [31, 42]], "V": [[33, 44], [40, 50]], "example": [25, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [119, 124], "Q": [143, 145], "K'": [116, 117], "R": [146, 147], "K": [[99, 106], [100, 107]], "V": [[102, 109], [105, 115]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Estonia, Nepal, Ghana, India and Tunisia.\nPremise: < Brian likes Kadrina Rural Municipality. Kenneth likes Mosque of Uqba. Mary likes Mediolanum Forum. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Estonia? Answer: No\n Premise: < Jason likes Kosi Zone. Joseph likes Boinpalle mandal. Nancy likes Nkawkaw. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [54, 58], "Q": [77, 79], "K'": [51, 52], "R": [80, 81], "K": [[30, 41], [31, 42]], "V": [[33, 44], [40, 50]], "example": [25, 94]}, {"END": [157, 158], "A'": [154, 155], "V'": [119, 124], "Q": [143, 145], "K'": [116, 117], "R": [146, 147], "K": [[99, 106], [100, 107]], "V": [[102, 109], [105, 115]], "example": [95, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Anthony likes Palana. William likes Katwijk aan den Rijn. Betty likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Kazakhstan? Answer: Yes\n Premise: < Sarah likes Konark Sun temple. Kenneth likes Kibungo Province. Elizabeth likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [49, 52], "Q": [71, 73], "K'": [46, 47], "R": [74, 75], "K": [[29, 35], [30, 36]], "V": [[32, 38], [34, 45]], "example": [24, 89]}, {"END": [154, 155], "A'": [149, 152], "V'": [105, 110], "Q": [138, 140], "K'": [102, 103], "R": [141, 142], "K": [[94, 111], [95, 112]], "V": [[97, 114], [101, 119]], "example": [90, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Anthony likes Palana. William likes Katwijk aan den Rijn. Betty likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Kazakhstan? Answer: Yes\n Premise: < Sarah likes Konark Sun temple. Kenneth likes Kibungo Province. Elizabeth likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [49, 52], "Q": [71, 73], "K'": [46, 47], "R": [74, 75], "K": [[29, 35], [30, 36]], "V": [[32, 38], [34, 45]], "example": [24, 89]}, {"END": [152, 153], "A'": [149, 150], "V'": [105, 110], "Q": [138, 140], "K'": [102, 103], "R": [141, 142], "K": [[94, 111], [95, 112]], "V": [[97, 114], [101, 119]], "example": [90, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Elizabeth likes Bird's Head Peninsula. Michael likes Ichchapuram. Paul likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Peru? Answer: No\n Premise: < Michelle likes Yoro. Michael likes New Era University. Joseph likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [87, 88], "V'": [31, 38], "Q": [76, 78], "K'": [28, 29], "R": [79, 80], "K": [[39, 48], [40, 49]], "V": [[42, 51], [47, 57]], "example": [23, 92]}, {"END": [154, 155], "A'": [149, 152], "V'": [101, 103], "Q": [138, 140], "K'": [97, 99], "R": [141, 142], "K": [[104, 111], [105, 112]], "V": [[107, 114], [110, 119]], "example": [93, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Elizabeth likes Bird's Head Peninsula. Michael likes Ichchapuram. Paul likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Peru? Answer: No\n Premise: < Michelle likes Yoro. Michael likes New Era University. Joseph likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Poland? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [87, 88], "V'": [31, 38], "Q": [76, 78], "K'": [28, 29], "R": [79, 80], "K": [[39, 48], [40, 49]], "V": [[42, 51], [47, 57]], "example": [23, 92]}, {"END": [152, 153], "A'": [149, 150], "V'": [101, 103], "Q": [138, 140], "K'": [97, 99], "R": [141, 142], "K": [[104, 111], [105, 112]], "V": [[107, 114], [110, 119]], "example": [93, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < William likes Mosque of Uqba. Elizabeth likes Kibungo Province. Anthony likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Tunisia? Answer: No\n Premise: < Anthony likes Madona District. Nancy likes bpost. Jennifer likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [87, 90], "V'": [44, 49], "Q": [76, 78], "K'": [41, 42], "R": [79, 80], "K": [[31, 50], [32, 51]], "V": [[34, 53], [40, 57]], "example": [26, 94]}, {"END": [153, 154], "A'": [149, 151], "V'": [102, 105], "Q": [138, 140], "K'": [99, 100], "R": [141, 142], "K": [[106, 112], [107, 114]], "V": [[109, 116], [111, 119]], "example": [95, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < William likes Mosque of Uqba. Elizabeth likes Kibungo Province. Anthony likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Tunisia? Answer: No\n Premise: < Anthony likes Madona District. Nancy likes bpost. Jennifer likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [87, 90], "V'": [44, 49], "Q": [76, 78], "K'": [41, 42], "R": [79, 80], "K": [[31, 50], [32, 51]], "V": [[34, 53], [40, 57]], "example": [26, 94]}, {"END": [153, 154], "A'": [149, 151], "V'": [102, 105], "Q": [138, 140], "K'": [99, 100], "R": [141, 142], "K": [[106, 112], [107, 114]], "V": [[109, 116], [111, 119]], "example": [95, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < James likes Ferrobaires. Edward likes Second Rutte cabinet. Linda likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Spain? Answer: Yes\n Premise: < Margaret likes Soalala. Kenneth likes Kojur District. Daniel likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [48, 54], "Q": [73, 75], "K'": [44, 46], "R": [76, 77], "K": [[28, 35], [29, 36]], "V": [[31, 38], [34, 43]], "example": [23, 89]}, {"END": [150, 151], "A'": [145, 148], "V'": [97, 100], "Q": [134, 136], "K'": [94, 95], "R": [137, 138], "K": [[101, 109], [102, 110]], "V": [[104, 112], [108, 115]], "example": [90, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < James likes Ferrobaires. Edward likes Second Rutte cabinet. Linda likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Spain? Answer: Yes\n Premise: < Margaret likes Soalala. Kenneth likes Kojur District. Daniel likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Iran? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [48, 54], "Q": [73, 75], "K'": [44, 46], "R": [76, 77], "K": [[28, 35], [29, 36]], "V": [[31, 38], [34, 43]], "example": [23, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [97, 100], "Q": [134, 136], "K'": [94, 95], "R": [137, 138], "K": [[101, 109], [102, 110]], "V": [[104, 112], [108, 115]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Mark likes Hellenic Police. Maria likes Jafara. Richard likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Greece? Answer: No\n Premise: < Daniel likes Albertis Castle. Lisa likes Logatec. Jeff likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [38, 41], "Q": [67, 69], "K'": [35, 36], "R": [70, 71], "K": [[27, 42], [28, 43]], "V": [[30, 45], [34, 48]], "example": [22, 83]}, {"END": [143, 144], "A'": [139, 141], "V'": [98, 101], "Q": [128, 130], "K'": [95, 96], "R": [131, 132], "K": [[88, 102], [89, 103]], "V": [[91, 105], [94, 109]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Mark likes Hellenic Police. Maria likes Jafara. Richard likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Greece? Answer: No\n Premise: < Daniel likes Albertis Castle. Lisa likes Logatec. Jeff likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [38, 41], "Q": [67, 69], "K'": [35, 36], "R": [70, 71], "K": [[27, 42], [28, 43]], "V": [[30, 45], [34, 48]], "example": [22, 83]}, {"END": [142, 143], "A'": [139, 140], "V'": [98, 101], "Q": [128, 130], "K'": [95, 96], "R": [131, 132], "K": [[88, 102], [89, 103]], "V": [[91, 105], [94, 109]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Germany, Switzerland, India and Lithuania.\nPremise: < Joseph likes Westerburg. Ruth likes Kaunas Cathedral Basilica. Michael likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Germany? Answer: No\n Premise: < Kimberly likes Hobart Zoo. Christopher likes Gobind Sagar. Steven likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [35, 42], "Q": [72, 74], "K'": [32, 33], "R": [75, 76], "K": [[25, 43], [26, 44]], "V": [[28, 46], [31, 53]], "example": [20, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [98, 102], "Q": [137, 139], "K'": [93, 96], "R": [140, 141], "K": [[103, 112], [104, 113]], "V": [[106, 115], [111, 118]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Lithuania, Australia, India and Switzerland.\nPremise: < Joseph likes Westerburg. Ruth likes Kaunas Cathedral Basilica. Michael likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Germany? Answer: No\n Premise: < Kimberly likes Hobart Zoo. Christopher likes Gobind Sagar. Steven likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [35, 42], "Q": [72, 74], "K'": [32, 33], "R": [75, 76], "K": [[25, 43], [26, 44]], "V": [[28, 46], [31, 53]], "example": [20, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [98, 102], "Q": [137, 139], "K'": [93, 96], "R": [140, 141], "K": [[103, 112], [104, 113]], "V": [[106, 115], [111, 118]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Malta, Switzerland, Armenia, Norway, Belgium and France.\nPremise: < Helen likes Noyon. Mark likes Public Broadcasting Services. Laura likes Adliswil. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Malta? Answer: Yes\n Premise: < Helen likes bpost. Maria likes Ledaal. Jason likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [80, 82], "V'": [38, 42], "Q": [69, 71], "K'": [35, 36], "R": [72, 73], "K": [[28, 43], [29, 44]], "V": [[31, 46], [34, 50]], "example": [23, 86]}, {"END": [145, 146], "A'": [141, 143], "V'": [107, 111], "Q": [130, 132], "K'": [104, 105], "R": [133, 134], "K": [[91, 97], [92, 98]], "V": [[94, 100], [96, 103]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include France, Armenia, Malta, Switzerland, Norway and Belgium.\nPremise: < Helen likes Noyon. Mark likes Public Broadcasting Services. Laura likes Adliswil. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Malta? Answer: Yes\n Premise: < Helen likes bpost. Maria likes Ledaal. Jason likes Saint Gayane Church. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Norway? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [80, 82], "V'": [38, 42], "Q": [69, 71], "K'": [35, 36], "R": [72, 73], "K": [[28, 43], [29, 44]], "V": [[31, 46], [34, 50]], "example": [23, 86]}, {"END": [144, 145], "A'": [141, 142], "V'": [107, 111], "Q": [130, 132], "K'": [104, 105], "R": [133, 134], "K": [[91, 97], [92, 98]], "V": [[94, 100], [96, 103]], "example": [87, 146]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Tunisia, Ghana, Italy, Estonia, Nepal and India.\n< Kadrina Rural Municipality attracts Brian. Mosque of Uqba attracts Kenneth. Mediolanum Forum attracts Mary. >. The boys do not want to go to a place in Italy\n < Kosi Zone attracts Joseph. Boinpalle mandal attracts Daniel. Nkawkaw attracts Maria. >. The boys do not want to go to a place in Ghana\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [47, 51], "Q": [57, 59], "K'": [53, 54], "R": [60, 61], "K": [[35, 45], [36, 46]], "V": [[26, 37], [33, 43]], "example": [25, 69]}, {"END": [109, 110], "A'": [110, 112], "V'": [88, 93], "Q": [99, 101], "K'": [95, 96], "R": [102, 103], "K": [[76, 86], [77, 87]], "V": [[71, 78], [74, 84]], "example": [70, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Bispebjerg attracts Susan. Colleville-Montgomery attracts Charles. Mediolanum Forum attracts Jason. >. The boys do not want to go to a place in Denmark\n < Eirodziesma attracts Helen. Opel attracts Christopher. Sommariva del Bosco attracts David. >. The boys do not want to go to a place in Latvia\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [21, 26], "Q": [51, 53], "K'": [28, 29], "R": [54, 55], "K": [[39, 47], [40, 48]], "V": [[30, 41], [37, 45]], "example": [20, 64]}, {"END": [104, 105], "A'": [105, 107], "V'": [66, 71], "Q": [94, 96], "K'": [73, 74], "R": [97, 98], "K": [[79, 90], [80, 91]], "V": [[75, 81], [77, 88]], "example": [65, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Tirebolu attracts Brian. Putyvl attracts Daniel. Cubagua attracts Betty. >. The boys do not want to go to a place in Venezuela\n < Bunda District attracts Linda. Theni district attracts Paul. Vinkeveen attracts Kenneth. >. The boys do not want to go to a place in Tanzania\n", "ranges": [{"END": [56, 57], "A'": [57, 58], "V'": [38, 40], "Q": [46, 48], "K'": [42, 43], "R": [49, 50], "K": [[29, 36], [30, 37]], "V": [[23, 31], [27, 34]], "example": [22, 58]}, {"END": [95, 96], "A'": [96, 99], "V'": [60, 63], "Q": [85, 87], "K'": [65, 67], "R": [88, 89], "K": [[73, 81], [74, 82]], "V": [[68, 75], [71, 79]], "example": [59, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Manila Light Rail Transit System attracts Michelle. Lund Municipality attracts Daniel. Bernheze attracts Margaret. >. The girls do not want to go to a place in Sweden\n < Electoral district of Wantirna attracts Sarah. Peremyshliany attracts Kimberly. Saint Gayane Church attracts Paul. >. The girls do not want to go to a place in Armenia\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [34, 37], "Q": [50, 52], "K'": [39, 40], "R": [53, 54], "K": [[31, 46], [33, 47]], "V": [[22, 41], [29, 44]], "example": [21, 62]}, {"END": [107, 108], "A'": [108, 110], "V'": [87, 91], "Q": [97, 99], "K'": [93, 94], "R": [100, 101], "K": [[74, 83], [75, 86]], "V": [[64, 76], [72, 81]], "example": [63, 110]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Tanzania, Rwanda, Chile, Australia and Tunisia.\n< Mosque of Uqba attracts Kimberly. Kibungo Province attracts William. Nimmitabel attracts Margaret. >. The girls do not want to go to a place in Rwanda\n < Breege attracts Anthony. Bunda District attracts Susan. Llanquihue Province attracts Daniel. >. The boys do not want to go to a place in Tanzania\n", "ranges": [{"END": [68, 69], "A'": [69, 72], "V'": [39, 44], "Q": [58, 60], "K'": [46, 47], "R": [61, 62], "K": [[35, 54], [38, 55]], "V": [[27, 48], [33, 52]], "example": [26, 72]}, {"END": [109, 110], "A'": [110, 113], "V'": [80, 83], "Q": [99, 101], "K'": [85, 86], "R": [102, 103], "K": [[78, 95], [79, 96]], "V": [[74, 87], [76, 93]], "example": [73, 113]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Luxembourg, Canada, Ethiopia, India, Russia and France.\n< Ghatanji attracts Paul. Eurostat attracts Helen. Bouygues Telecom attracts Anthony. >. The boys do not want to go to a place in Luxembourg\n < Jan Amora attracts Ruth. Jervis Inlet attracts James. Komarichsky District attracts Daniel. >. The boys do not want to go to a place in Ethiopia\n", "ranges": [{"END": [59, 60], "A'": [60, 62], "V'": [32, 34], "Q": [49, 51], "K'": [36, 37], "R": [52, 53], "K": [[30, 45], [31, 46]], "V": [[24, 38], [28, 43]], "example": [23, 62]}, {"END": [100, 101], "A'": [101, 104], "V'": [64, 67], "Q": [90, 92], "K'": [69, 70], "R": [93, 94], "K": [[77, 86], [78, 87]], "V": [[71, 79], [75, 84]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Lindholm station attracts Thomas. Didymoteicho attracts George. Wazzin attracts Sandra. >. The boys do not want to go to a place in Libya\n < University of Bern attracts Maria. Monarcas Morelia attracts Nancy. Borghetto di Vara attracts George. >. The girls do not want to go to a place in Italy\n", "ranges": [{"END": [59, 60], "A'": [60, 62], "V'": [39, 42], "Q": [49, 51], "K'": [44, 46], "R": [52, 53], "K": [[28, 37], [29, 38]], "V": [[23, 30], [26, 35]], "example": [22, 62]}, {"END": [102, 103], "A'": [103, 104], "V'": [80, 86], "Q": [92, 94], "K'": [88, 89], "R": [95, 96], "K": [[69, 78], [70, 79]], "V": [[64, 71], [67, 76]], "example": [63, 104]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Israel, Belarus, Bahamas, Spain and Canada.\n< Geffen Award attracts Michael. Valvasone attracts Maria. Ateneo de Madrid attracts Barbara. >. The girls do not want to go to a place in Israel\n < Free National Movement attracts Ronald. Western Bug attracts Maria. Habitat 67 attracts Laura. >. The girls do not want to go to a place in Bahamas\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [24, 27], "Q": [50, 52], "K'": [29, 30], "R": [53, 54], "K": [[36, 46], [37, 47]], "V": [[31, 38], [34, 44]], "example": [23, 62]}, {"END": [100, 101], "A'": [101, 104], "V'": [64, 68], "Q": [90, 92], "K'": [70, 72], "R": [93, 94], "K": [[77, 86], [78, 87]], "V": [[73, 79], [75, 84]], "example": [63, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Estonia, India, Tunisia, Nepal and Ghana.\nPremise: < Kadrina Rural Municipality attracts Brian. Mosque of Uqba attracts Kenneth. Mediolanum Forum attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Estonia? Answer: No\n Premise: < Kosi Zone attracts Jason. Boinpalle mandal attracts Joseph. Nkawkaw attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Ghana? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [51, 55], "Q": [77, 79], "K'": [57, 58], "R": [80, 81], "K": [[39, 49], [40, 50]], "V": [[30, 41], [37, 47]], "example": [25, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [116, 121], "Q": [143, 145], "K'": [123, 124], "R": [146, 147], "K": [[104, 114], [105, 115]], "V": [[99, 106], [102, 112]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Estonia, Nepal, Ghana, India and Tunisia.\nPremise: < Kadrina Rural Municipality attracts Brian. Mosque of Uqba attracts Kenneth. Mediolanum Forum attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Estonia? Answer: No\n Premise: < Kosi Zone attracts Jason. Boinpalle mandal attracts Joseph. Nkawkaw attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [51, 55], "Q": [77, 79], "K'": [57, 58], "R": [80, 81], "K": [[39, 49], [40, 50]], "V": [[30, 41], [37, 47]], "example": [25, 94]}, {"END": [157, 158], "A'": [154, 155], "V'": [116, 121], "Q": [143, 145], "K'": [123, 124], "R": [146, 147], "K": [[104, 114], [105, 115]], "V": [[99, 106], [102, 112]], "example": [95, 159]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Palana attracts Anthony. Katwijk aan den Rijn attracts William. Emba River attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Sarah. Kibungo Province attracts Kenneth. Amos Anderson Art Museum attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [46, 49], "Q": [71, 73], "K'": [51, 52], "R": [74, 75], "K": [[33, 44], [34, 45]], "V": [[29, 35], [31, 42]], "example": [24, 89]}, {"END": [154, 155], "A'": [149, 152], "V'": [102, 107], "Q": [138, 140], "K'": [109, 110], "R": [141, 142], "K": [[100, 118], [101, 119]], "V": [[94, 111], [98, 116]], "example": [90, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Palana attracts Anthony. Katwijk aan den Rijn attracts William. Emba River attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts Sarah. Kibungo Province attracts Kenneth. Amos Anderson Art Museum attracts Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [46, 49], "Q": [71, 73], "K'": [51, 52], "R": [74, 75], "K": [[33, 44], [34, 45]], "V": [[29, 35], [31, 42]], "example": [24, 89]}, {"END": [152, 153], "A'": [149, 150], "V'": [102, 107], "Q": [138, 140], "K'": [109, 110], "R": [141, 142], "K": [[100, 118], [101, 119]], "V": [[94, 111], [98, 116]], "example": [90, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Bird's Head Peninsula attracts Elizabeth. Ichchapuram attracts Michael. Huachocolpa District attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Michelle. New Era University attracts Michael. Lewin Brzeski attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [87, 88], "V'": [28, 35], "Q": [76, 78], "K'": [37, 38], "R": [79, 80], "K": [[46, 56], [47, 57]], "V": [[39, 48], [44, 54]], "example": [23, 92]}, {"END": [154, 155], "A'": [149, 152], "V'": [97, 99], "Q": [138, 140], "K'": [101, 103], "R": [141, 142], "K": [[109, 118], [110, 119]], "V": [[104, 111], [107, 116]], "example": [93, 156]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Bird's Head Peninsula attracts Elizabeth. Ichchapuram attracts Michael. Huachocolpa District attracts Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Michelle. New Era University attracts Michael. Lewin Brzeski attracts Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Poland? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [87, 88], "V'": [28, 35], "Q": [76, 78], "K'": [37, 38], "R": [79, 80], "K": [[46, 56], [47, 57]], "V": [[39, 48], [44, 54]], "example": [23, 92]}, {"END": [152, 153], "A'": [149, 150], "V'": [97, 99], "Q": [138, 140], "K'": [101, 103], "R": [141, 142], "K": [[109, 118], [110, 119]], "V": [[104, 111], [107, 116]], "example": [93, 154]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Mosque of Uqba attracts William. Kibungo Province attracts Elizabeth. Nimmitabel attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Anthony. bpost attracts Nancy. Westerburg attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [87, 90], "V'": [41, 46], "Q": [76, 78], "K'": [48, 49], "R": [79, 80], "K": [[39, 56], [40, 57]], "V": [[31, 50], [37, 54]], "example": [26, 94]}, {"END": [153, 154], "A'": [149, 151], "V'": [99, 102], "Q": [138, 140], "K'": [104, 105], "R": [141, 142], "K": [[110, 117], [111, 119]], "V": [[106, 112], [108, 115]], "example": [95, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Mosque of Uqba attracts William. Kibungo Province attracts Elizabeth. Nimmitabel attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Anthony. bpost attracts Nancy. Westerburg attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [87, 90], "V'": [41, 46], "Q": [76, 78], "K'": [48, 49], "R": [79, 80], "K": [[39, 56], [40, 57]], "V": [[31, 50], [37, 54]], "example": [26, 94]}, {"END": [153, 154], "A'": [149, 151], "V'": [99, 102], "Q": [138, 140], "K'": [104, 105], "R": [141, 142], "K": [[110, 117], [111, 119]], "V": [[106, 112], [108, 115]], "example": [95, 155]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Ferrobaires attracts James. Second Rutte cabinet attracts Edward. Ateneo de Madrid attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Margaret. Kojur District attracts Kenneth. Pinosava attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [44, 50], "Q": [73, 75], "K'": [52, 54], "R": [76, 77], "K": [[33, 42], [34, 43]], "V": [[28, 35], [31, 40]], "example": [23, 89]}, {"END": [150, 151], "A'": [145, 148], "V'": [94, 97], "Q": [134, 136], "K'": [99, 100], "R": [137, 138], "K": [[107, 114], [108, 115]], "V": [[101, 109], [105, 112]], "example": [90, 152]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Ferrobaires attracts James. Second Rutte cabinet attracts Edward. Ateneo de Madrid attracts Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Margaret. Kojur District attracts Kenneth. Pinosava attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Iran? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [44, 50], "Q": [73, 75], "K'": [52, 54], "R": [76, 77], "K": [[33, 42], [34, 43]], "V": [[28, 35], [31, 40]], "example": [23, 89]}, {"END": [148, 149], "A'": [145, 146], "V'": [94, 97], "Q": [134, 136], "K'": [99, 100], "R": [137, 138], "K": [[107, 114], [108, 115]], "V": [[101, 109], [105, 112]], "example": [90, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Hellenic Police attracts Mark. Jafara attracts Maria. University of Bern attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Daniel. Logatec attracts Lisa. Shoranur attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [35, 38], "Q": [67, 69], "K'": [40, 41], "R": [70, 71], "K": [[33, 47], [34, 48]], "V": [[27, 42], [31, 45]], "example": [22, 83]}, {"END": [143, 144], "A'": [139, 141], "V'": [95, 98], "Q": [128, 130], "K'": [100, 101], "R": [131, 132], "K": [[93, 108], [94, 109]], "V": [[88, 102], [91, 106]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Hellenic Police attracts Mark. Jafara attracts Maria. University of Bern attracts Richard. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Daniel. Logatec attracts Lisa. Shoranur attracts Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in India? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [35, 38], "Q": [67, 69], "K'": [40, 41], "R": [70, 71], "K": [[33, 47], [34, 48]], "V": [[27, 42], [31, 45]], "example": [22, 83]}, {"END": [142, 143], "A'": [139, 140], "V'": [95, 98], "Q": [128, 130], "K'": [100, 101], "R": [131, 132], "K": [[93, 108], [94, 109]], "V": [[88, 102], [91, 106]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Germany, Switzerland, India and Lithuania.\nPremise: < Westerburg attracts Joseph. Kaunas Cathedral Basilica attracts Ruth. Tehri Garhwal district attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Germany? Answer: No\n Premise: < Hobart Zoo attracts Kimberly. Gobind Sagar attracts Christopher. Capolago attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [32, 39], "Q": [72, 74], "K'": [41, 42], "R": [75, 76], "K": [[30, 52], [31, 53]], "V": [[25, 43], [28, 50]], "example": [20, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [93, 97], "Q": [137, 139], "K'": [99, 102], "R": [140, 141], "K": [[110, 117], [111, 118]], "V": [[103, 112], [108, 115]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Lithuania, Australia, India and Switzerland.\nPremise: < Westerburg attracts Joseph. Kaunas Cathedral Basilica attracts Ruth. Tehri Garhwal district attracts Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Germany? Answer: No\n Premise: < Hobart Zoo attracts Kimberly. Gobind Sagar attracts Christopher. Capolago attracts Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not want to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [32, 39], "Q": [72, 74], "K'": [41, 42], "R": [75, 76], "K": [[30, 52], [31, 53]], "V": [[25, 43], [28, 50]], "example": [20, 88]}, {"END": [151, 152], "A'": [148, 149], "V'": [93, 97], "Q": [137, 139], "K'": [99, 102], "R": [140, 141], "K": [[110, 117], [111, 118]], "V": [[103, 112], [108, 115]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Malta, Switzerland, Armenia, Norway, Belgium and France.\nPremise: < Noyon attracts Helen. Public Broadcasting Services attracts Mark. Adliswil attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Malta? Answer: Yes\n Premise: < bpost attracts Helen. Ledaal attracts Maria. Saint Gayane Church attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Armenia? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [80, 82], "V'": [35, 39], "Q": [69, 71], "K'": [41, 42], "R": [72, 73], "K": [[33, 49], [34, 50]], "V": [[28, 43], [31, 47]], "example": [23, 86]}, {"END": [145, 146], "A'": [141, 143], "V'": [104, 108], "Q": [130, 132], "K'": [110, 111], "R": [133, 134], "K": [[95, 102], [96, 103]], "V": [[91, 97], [93, 100]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include France, Armenia, Malta, Switzerland, Norway and Belgium.\nPremise: < Noyon attracts Helen. Public Broadcasting Services attracts Mark. Adliswil attracts Laura. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Malta? Answer: Yes\n Premise: < bpost attracts Helen. Ledaal attracts Maria. Saint Gayane Church attracts Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not want to go to a place in Norway? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [80, 82], "V'": [35, 39], "Q": [69, 71], "K'": [41, 42], "R": [72, 73], "K": [[33, 49], [34, 50]], "V": [[28, 43], [31, 47]], "example": [23, 86]}, {"END": [144, 145], "A'": [141, 142], "V'": [104, 108], "Q": [130, 132], "K'": [110, 111], "R": [133, 134], "K": [[95, 102], [96, 103]], "V": [[91, 97], [93, 100]], "example": [87, 146]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Ust-Katav. Sandra likes Leiria. Ronald likes Chol Kiri District. >. So who wants to go to a place in Cambodia? the boy\n < Edward likes Fawkner. Kevin likes Neighbourhoods in Kolkata. Nancy likes Fischenthal. >. So who wants to go to a place in Switzerland? the girl\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [21, 23], "Q": [42, 44], "K": [25, 30], "R": null, "K'": [[6, 17], [12, 20]], "V'": [[2, 13], [4, 15]], "example": [1, 47]}, {"END": [90, 91], "A": [91, 92], "V": [69, 70], "Q": [88, 89], "K": [72, 76], "R": null, "K'": [[52, 59], [55, 68]], "V'": [[49, 56], [50, 57]], "example": [48, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David likes Trento. Kimberly likes Gammalsvenskby. Kenneth likes regiopolis. >. So who wants to go to a place in Ukraine? the girl\n < Dorothy likes Lewin Brzeski. Nancy likes Gmina Warlubie. David likes Shibganj Upazila, Bogra District. >. So who wants to go to a place in Bangladesh? the boy\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [8, 11], "Q": [39, 40], "K": [13, 19], "R": null, "K'": [[5, 23], [7, 27]], "V'": [[2, 20], [3, 21]], "example": [1, 43]}, {"END": [94, 95], "A": [95, 96], "V": [64, 65], "Q": [90, 93], "K": [67, 78], "R": null, "K'": [[49, 58], [54, 63]], "V'": [[45, 55], [47, 56]], "example": [44, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark likes Birendranagar. Nancy likes Konark Sun temple. Sharon likes Leap Castle. >. So who wants to go to a place in Nepal? the boy\n < Robert likes Chol Kiri District. Karen likes Skole Raion. Donna likes Bearpaw Shale. >. So who wants to go to a place in Cambodia? the boy\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [2, 3], "Q": [37, 39], "K": [5, 9], "R": null, "K'": [[13, 22], [17, 25]], "V'": [[10, 18], [11, 20]], "example": [1, 42]}, {"END": [86, 87], "A": [87, 88], "V": [44, 45], "Q": [83, 85], "K": [47, 52], "R": null, "K'": [[57, 66], [61, 71]], "V'": [[53, 62], [55, 64]], "example": [43, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Edward likes Avord. Steven likes Capolago. Sharon likes Guelma Province. >. So who wants to go to a place in Algeria? the girl\n < William likes Jonava District Municipality. Dorothy likes Castrovirreyna District. Patricia likes Helmbrechts. >. So who wants to go to a place in Lithuania? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [15, 17], "Q": [35, 38], "K": [19, 23], "R": null, "K'": [[5, 11], [7, 14]], "V'": [[2, 8], [3, 9]], "example": [1, 41]}, {"END": [87, 88], "A": [88, 89], "V": [43, 44], "Q": [83, 86], "K": [46, 51], "R": null, "K'": [[56, 67], [61, 71]], "V'": [[52, 62], [54, 65]], "example": [42, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Anthony likes Saint Gayane Church. Carol likes Peremyshliany. Patricia likes Electoral district of Wantirna. >. So who wants to go to a place in Armenia? the boy\n < Patricia likes Velbert. Charles likes Aden. Deborah likes Dent Island Light. >. So who wants to go to a place in Yemen? the boy\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [2, 3], "Q": [44, 46], "K": [5, 9], "R": null, "K'": [[13, 24], [18, 32]], "V'": [[10, 19], [11, 22]], "example": [1, 49]}, {"END": [89, 90], "A": [90, 91], "V": [59, 60], "Q": [86, 88], "K": [62, 64], "R": null, "K'": [[56, 70], [58, 74]], "V'": [[51, 65], [54, 68]], "example": [50, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff likes Acolman Municipality. Betty likes Band-e Kaisar. Deborah likes Annweiler am Trifels. >. So who wants to go to a place in Mexico? the boy\n < Donald likes Bogra Zilla School. Laura likes Capolago. Karen likes Buchan. >. So who wants to go to a place in Bangladesh? the boy\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [2, 3], "Q": [44, 45], "K": [5, 10], "R": null, "K'": [[14, 25], [19, 32]], "V'": [[11, 20], [12, 23]], "example": [1, 48]}, {"END": [88, 89], "A": [89, 90], "V": [50, 51], "Q": [84, 87], "K": [53, 58], "R": null, "K'": [[62, 70], [65, 72]], "V'": [[59, 66], [60, 68]], "example": [49, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Helen likes Alpokalja. Elizabeth likes Jan Amora. Christopher likes Peremyshliany. >. So who wants to go to a place in Ukraine? the boy\n < Mark likes Amos Anderson Art Museum. Sharon likes Panagarh. Michelle likes Sydney Hospital. >. So who wants to go to a place in Finland? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [17, 18], "Q": [37, 38], "K": [20, 25], "R": null, "K'": [[5, 13], [9, 16]], "V'": [[2, 10], [3, 11]], "example": [1, 41]}, {"END": [80, 81], "A": [81, 82], "V": [43, 44], "Q": [78, 79], "K": [46, 51], "R": null, "K'": [[56, 64], [59, 66]], "V'": [[52, 60], [54, 62]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon likes Welschnofen. Linda likes Didymoteicho. Paul likes Tampines Expressway. >. So who wants to go to a place in Singapore? the boy\n < Christopher likes Garabit viaduct. Nancy likes Sapo National Park. Kevin likes Nagoya University. >. So who wants to go to a place in Liberia? the girl\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [21, 22], "Q": [41, 42], "K": [24, 29], "R": null, "K'": [[6, 15], [10, 20]], "V'": [[2, 11], [4, 13]], "example": [1, 45]}, {"END": [88, 89], "A": [89, 90], "V": [57, 58], "Q": [85, 87], "K": [60, 65], "R": null, "K'": [[50, 69], [56, 73]], "V'": [[47, 66], [48, 67]], "example": [46, 90]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Sandra likes Leiria. Ronald likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is the girl? Answer: No\n Premise: < Edward likes Al-Hasakah Governorate. Kevin likes Ledaal. Nancy likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the girl? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [24, 26], "Q": [62, 64], "K": [28, 33], "R": null, "K'": [[9, 20], [15, 23]], "V'": [[5, 16], [7, 18]], "example": [1, 71]}, {"END": [137, 138], "A": [133, 135], "V": [94, 95], "Q": [130, 132], "K": [97, 101], "R": null, "K'": [[79, 90], [86, 93]], "V'": [[76, 87], [77, 88]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon likes Ust-Katav. Sandra likes Leiria. Ronald likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is the girl? Answer: No\n Premise: < Edward likes Al-Hasakah Governorate. Kevin likes Ledaal. Nancy likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the boy? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [24, 26], "Q": [62, 64], "K": [28, 33], "R": null, "K'": [[9, 20], [15, 23]], "V'": [[5, 16], [7, 18]], "example": [1, 71]}, {"END": [137, 138], "A": [133, 135], "V": [94, 95], "Q": [130, 132], "K": [97, 101], "R": null, "K'": [[79, 90], [86, 93]], "V'": [[76, 87], [77, 88]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Adliswil. Paul likes Party of National Unity. Betty likes Al Ahmadi Governorate. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Kenya is the girl? Answer: No\n Premise: < Paul likes Lake Caliraya. Sarah likes Drumheller-Stettler. Donna likes Cairo American College. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Philippines is the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [13, 14], "Q": [59, 61], "K": [16, 20], "R": null, "K'": [[8, 24], [12, 30]], "V'": [[5, 21], [6, 22]], "example": [1, 68]}, {"END": [137, 138], "A": [133, 135], "V": [73, 74], "Q": [131, 132], "K": [76, 81], "R": null, "K'": [[85, 98], [93, 102]], "V'": [[82, 94], [83, 96]], "example": [69, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Adliswil. Paul likes Party of National Unity. Betty likes Al Ahmadi Governorate. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Kenya is the girl? Answer: No\n Premise: < Paul likes Lake Caliraya. Sarah likes Drumheller-Stettler. Donna likes Cairo American College. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Philippines is the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [13, 14], "Q": [59, 61], "K": [16, 20], "R": null, "K'": [[8, 24], [12, 30]], "V'": [[5, 21], [6, 22]], "example": [1, 68]}, {"END": [137, 138], "A": [133, 135], "V": [73, 74], "Q": [131, 132], "K": [76, 81], "R": null, "K'": [[85, 98], [93, 102]], "V'": [[82, 94], [83, 96]], "example": [69, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Fischenthal. Linda likes Tirebolu. Daniel likes Alcanena Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is the boy? Answer: Yes\n Premise: < Michelle likes Al Daayen. Daniel likes Pacentro. Brian likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the girl? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [23, 24], "Q": [60, 61], "K": [26, 31], "R": null, "K'": [[9, 18], [13, 22]], "V'": [[5, 14], [7, 16]], "example": [1, 68]}, {"END": [131, 132], "A": [127, 129], "V": [73, 75], "Q": [124, 126], "K": [77, 81], "R": null, "K'": [[85, 92], [88, 95]], "V'": [[82, 89], [83, 90]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer likes Fischenthal. Linda likes Tirebolu. Daniel likes Alcanena Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is the boy? Answer: Yes\n Premise: < Michelle likes Al Daayen. Daniel likes Pacentro. Brian likes Bernheze. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the boy? Answer: No\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [23, 24], "Q": [60, 61], "K": [26, 31], "R": null, "K'": [[9, 18], [13, 22]], "V'": [[5, 14], [7, 16]], "example": [1, 68]}, {"END": [131, 132], "A": [127, 129], "V": [73, 75], "Q": [124, 126], "K": [77, 81], "R": null, "K'": [[85, 92], [88, 95]], "V'": [[82, 89], [83, 90]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Saint Gayane Church. Kenneth likes Persegres Gresik United. Mark likes Zwiefalten. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Armenia is the boy? Answer: No\n Premise: < Jeff likes Ariake Coliseum. Margaret likes Yoro. John likes Manila Bay. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is the girl? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [5, 6], "Q": [60, 62], "K": [8, 12], "R": null, "K'": [[16, 27], [23, 31]], "V'": [[13, 24], [14, 25]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [83, 84], "Q": [124, 127], "K": [86, 88], "R": null, "K'": [[77, 92], [82, 95]], "V'": [[74, 89], [75, 90]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret likes Saint Gayane Church. Kenneth likes Persegres Gresik United. Mark likes Zwiefalten. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Armenia is the boy? Answer: No\n Premise: < Jeff likes Ariake Coliseum. Margaret likes Yoro. John likes Manila Bay. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is the boy? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [5, 6], "Q": [60, 62], "K": [8, 12], "R": null, "K'": [[16, 27], [23, 31]], "V'": [[13, 24], [14, 25]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [83, 84], "Q": [124, 127], "K": [86, 88], "R": null, "K'": [[77, 92], [82, 95]], "V'": [[74, 89], [75, 90]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Bolvadin. Jeff likes Calw. Mark likes Bose Institute. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Turkey is the girl? Answer: Yes\n Premise: < William likes Bhinmal. Charles likes Nimmitabel. Dorothy likes Mandailing language. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [5, 6], "Q": [53, 54], "K": [8, 11], "R": null, "K'": [[15, 21], [17, 24]], "V'": [[12, 18], [13, 19]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [81, 83], "Q": [118, 120], "K": [85, 89], "R": null, "K'": [[69, 76], [72, 80]], "V'": [[66, 73], [67, 74]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa likes Bolvadin. Jeff likes Calw. Mark likes Bose Institute. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Turkey is the girl? Answer: Yes\n Premise: < William likes Bhinmal. Charles likes Nimmitabel. Dorothy likes Mandailing language. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [5, 6], "Q": [53, 54], "K": [8, 11], "R": null, "K'": [[15, 21], [17, 24]], "V'": [[12, 18], [13, 19]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [81, 83], "Q": [118, 120], "K": [85, 89], "R": null, "K'": [[69, 76], [72, 80]], "V'": [[66, 73], [67, 74]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Medaram. Ronald likes Munich Residence. Mark likes Gaiola. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in India is the girl? Answer: Yes\n Premise: < Sarah likes Ba F.C. David likes Tsubaki Grand Shrine. Brian likes Vrienden van het Platteland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Fiji is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [5, 6], "Q": [55, 56], "K": [8, 10], "R": null, "K'": [[15, 23], [19, 26]], "V'": [[11, 20], [13, 21]], "example": [1, 63]}, {"END": [134, 135], "A": [130, 132], "V": [68, 69], "Q": [127, 129], "K": [71, 75], "R": null, "K'": [[79, 90], [86, 98]], "V'": [[76, 87], [77, 88]], "example": [64, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria likes Medaram. Ronald likes Munich Residence. Mark likes Gaiola. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in India is the girl? Answer: Yes\n Premise: < Sarah likes Ba F.C. David likes Tsubaki Grand Shrine. Brian likes Vrienden van het Platteland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Fiji is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [5, 6], "Q": [55, 56], "K": [8, 10], "R": null, "K'": [[15, 23], [19, 26]], "V'": [[11, 20], [13, 21]], "example": [1, 63]}, {"END": [134, 135], "A": [130, 132], "V": [68, 69], "Q": [127, 129], "K": [71, 75], "R": null, "K'": [[79, 90], [86, 98]], "V'": [[76, 87], [77, 88]], "example": [64, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Kahrizak. Nancy likes Capoeira. Deborah likes Hida Mountains. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is the boy? Answer: Yes\n Premise: < Steven likes Cocconato. Anthony likes Astrid Lindgren Memorial Award. Sarah likes Idalium. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [5, 6], "Q": [57, 58], "K": [8, 12], "R": null, "K'": [[16, 25], [19, 28]], "V'": [[13, 20], [14, 23]], "example": [1, 65]}, {"END": [132, 133], "A": [128, 130], "V": [89, 90], "Q": [124, 127], "K": [92, 95], "R": null, "K'": [[73, 81], [77, 88]], "V'": [[70, 78], [71, 79]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher likes Kahrizak. Nancy likes Capoeira. Deborah likes Hida Mountains. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is the boy? Answer: Yes\n Premise: < Steven likes Cocconato. Anthony likes Astrid Lindgren Memorial Award. Sarah likes Idalium. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [5, 6], "Q": [57, 58], "K": [8, 12], "R": null, "K'": [[16, 25], [19, 28]], "V'": [[13, 20], [14, 23]], "example": [1, 65]}, {"END": [132, 133], "A": [128, 130], "V": [89, 90], "Q": [124, 127], "K": [92, 95], "R": null, "K'": [[73, 81], [77, 88]], "V'": [[70, 78], [71, 79]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Wismar. Paul likes Monarcas Morelia. Ruth likes Dwarka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is the girl? Answer: No\n Premise: < Thomas likes Kottarakkara. Karen likes Lascaris Battery. Ronald likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Malta is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [13, 14], "Q": [58, 59], "K": [16, 21], "R": null, "K'": [[9, 25], [12, 29]], "V'": [[5, 22], [7, 23]], "example": [1, 66]}, {"END": [137, 138], "A": [133, 135], "V": [81, 83], "Q": [130, 132], "K": [85, 91], "R": null, "K'": [[74, 96], [80, 101]], "V'": [[71, 92], [72, 94]], "example": [67, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra likes Wismar. Paul likes Monarcas Morelia. Ruth likes Dwarka. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is the girl? Answer: No\n Premise: < Thomas likes Kottarakkara. Karen likes Lascaris Battery. Ronald likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Malta is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [13, 14], "Q": [58, 59], "K": [16, 21], "R": null, "K'": [[9, 25], [12, 29]], "V'": [[5, 22], [7, 23]], "example": [1, 66]}, {"END": [137, 138], "A": [133, 135], "V": [81, 83], "Q": [130, 132], "K": [85, 91], "R": null, "K'": [[74, 96], [80, 101]], "V'": [[71, 92], [72, 94]], "example": [67, 139]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Ust-Katav attracts Sharon. Leiria attracts Sandra. Chol Kiri District attracts Ronald. >. So who wants to go to a place in Cambodia? the boy\n < Fawkner attracts Edward. Neighbourhoods in Kolkata attracts Kevin. Fischenthal attracts Nancy. >. So who wants to go to a place in Switzerland? the girl\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [28, 30], "Q": [42, 44], "K": [21, 26], "R": null, "K'": [[2, 13], [8, 16]], "V'": [[10, 18], [12, 20]], "example": [1, 47]}, {"END": [90, 91], "A": [91, 92], "V": [75, 76], "Q": [88, 89], "K": [69, 73], "R": null, "K'": [[49, 56], [52, 65]], "V'": [[54, 67], [55, 68]], "example": [48, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Trento attracts David. Gammalsvenskby attracts Kimberly. regiopolis attracts Kenneth. >. So who wants to go to a place in Ukraine? the girl\n < Lewin Brzeski attracts Dorothy. Gmina Warlubie attracts Nancy. Shibganj Upazila, Bogra District attracts David. >. So who wants to go to a place in Bangladesh? the boy\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [16, 19], "Q": [39, 40], "K": [8, 14], "R": null, "K'": [[2, 20], [4, 24]], "V'": [[6, 26], [7, 27]], "example": [1, 43]}, {"END": [94, 95], "A": [95, 96], "V": [77, 78], "Q": [90, 93], "K": [64, 75], "R": null, "K'": [[45, 55], [50, 60]], "V'": [[52, 62], [54, 63]], "example": [44, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Birendranagar attracts Mark. Konark Sun temple attracts Nancy. Leap Castle attracts Sharon. >. So who wants to go to a place in Nepal? the boy\n < Chol Kiri District attracts Robert. Skole Raion attracts Karen. Bearpaw Shale attracts Donna. >. So who wants to go to a place in Cambodia? the boy\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [8, 9], "Q": [37, 39], "K": [2, 6], "R": null, "K'": [[10, 18], [14, 21]], "V'": [[16, 23], [17, 25]], "example": [1, 42]}, {"END": [86, 87], "A": [87, 88], "V": [51, 52], "Q": [83, 85], "K": [44, 49], "R": null, "K'": [[53, 62], [57, 67]], "V'": [[59, 69], [61, 71]], "example": [43, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Avord attracts Edward. Capolago attracts Steven. Guelma Province attracts Sharon. >. So who wants to go to a place in Algeria? the girl\n < Jonava District Municipality attracts William. Castrovirreyna District attracts Dorothy. Helmbrechts attracts Patricia. >. So who wants to go to a place in Lithuania? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [21, 23], "Q": [35, 38], "K": [15, 19], "R": null, "K'": [[2, 8], [4, 11]], "V'": [[6, 13], [7, 14]], "example": [1, 41]}, {"END": [87, 88], "A": [88, 89], "V": [50, 51], "Q": [83, 86], "K": [43, 48], "R": null, "K'": [[52, 62], [57, 66]], "V'": [[59, 68], [61, 71]], "example": [42, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Saint Gayane Church attracts Anthony. Peremyshliany attracts Carol. Electoral district of Wantirna attracts Patricia. >. So who wants to go to a place in Armenia? the boy\n < Velbert attracts Patricia. Aden attracts Charles. Dent Island Light attracts Deborah. >. So who wants to go to a place in Yemen? the boy\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [8, 9], "Q": [44, 46], "K": [2, 6], "R": null, "K'": [[10, 19], [15, 27]], "V'": [[17, 29], [18, 32]], "example": [1, 49]}, {"END": [89, 90], "A": [90, 91], "V": [63, 64], "Q": [86, 88], "K": [59, 61], "R": null, "K'": [[51, 65], [53, 69]], "V'": [[55, 71], [58, 74]], "example": [50, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Acolman Municipality attracts Jeff. Band-e Kaisar attracts Betty. Annweiler am Trifels attracts Deborah. >. So who wants to go to a place in Mexico? the boy\n < Bogra Zilla School attracts Donald. Capolago attracts Laura. Buchan attracts Karen. >. So who wants to go to a place in Bangladesh? the boy\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [9, 10], "Q": [44, 45], "K": [2, 7], "R": null, "K'": [[11, 20], [16, 27]], "V'": [[18, 29], [19, 32]], "example": [1, 48]}, {"END": [88, 89], "A": [89, 90], "V": [57, 58], "Q": [84, 87], "K": [50, 55], "R": null, "K'": [[59, 66], [62, 68]], "V'": [[64, 70], [65, 72]], "example": [49, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Alpokalja attracts Helen. Jan Amora attracts Elizabeth. Peremyshliany attracts Christopher. >. So who wants to go to a place in Ukraine? the boy\n < Amos Anderson Art Museum attracts Mark. Panagarh attracts Sharon. Sydney Hospital attracts Michelle. >. So who wants to go to a place in Finland? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [24, 25], "Q": [37, 38], "K": [17, 22], "R": null, "K'": [[2, 10], [6, 13]], "V'": [[8, 15], [9, 16]], "example": [1, 41]}, {"END": [80, 81], "A": [81, 82], "V": [50, 51], "Q": [78, 79], "K": [43, 48], "R": null, "K'": [[52, 60], [55, 62]], "V'": [[57, 64], [59, 66]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Welschnofen attracts Sharon. Didymoteicho attracts Linda. Tampines Expressway attracts Paul. >. So who wants to go to a place in Singapore? the boy\n < Garabit viaduct attracts Christopher. Sapo National Park attracts Nancy. Nagoya University attracts Kevin. >. So who wants to go to a place in Liberia? the girl\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [28, 29], "Q": [41, 42], "K": [21, 26], "R": null, "K'": [[2, 11], [6, 16]], "V'": [[8, 18], [10, 20]], "example": [1, 45]}, {"END": [88, 89], "A": [89, 90], "V": [64, 65], "Q": [85, 87], "K": [57, 62], "R": null, "K'": [[47, 66], [53, 70]], "V'": [[55, 72], [56, 73]], "example": [46, 90]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Leiria attracts Sandra. Chol Kiri District attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is the girl? Answer: No\n Premise: < Al-Hasakah Governorate attracts Edward. Ledaal attracts Kevin. Al Daayen attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the girl? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [31, 33], "Q": [62, 64], "K": [24, 29], "R": null, "K'": [[5, 16], [11, 19]], "V'": [[13, 21], [15, 23]], "example": [1, 71]}, {"END": [137, 138], "A": [133, 135], "V": [100, 101], "Q": [130, 132], "K": [94, 98], "R": null, "K'": [[76, 87], [83, 90]], "V'": [[85, 92], [86, 93]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Ust-Katav attracts Sharon. Leiria attracts Sandra. Chol Kiri District attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is the girl? Answer: No\n Premise: < Al-Hasakah Governorate attracts Edward. Ledaal attracts Kevin. Al Daayen attracts Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the boy? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [31, 33], "Q": [62, 64], "K": [24, 29], "R": null, "K'": [[5, 16], [11, 19]], "V'": [[13, 21], [15, 23]], "example": [1, 71]}, {"END": [137, 138], "A": [133, 135], "V": [100, 101], "Q": [130, 132], "K": [94, 98], "R": null, "K'": [[76, 87], [83, 90]], "V'": [[85, 92], [86, 93]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Adliswil attracts Lisa. Party of National Unity attracts Paul. Al Ahmadi Governorate attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Kenya is the girl? Answer: No\n Premise: < Lake Caliraya attracts Paul. Drumheller-Stettler attracts Sarah. Cairo American College attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Philippines is the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [19, 20], "Q": [59, 61], "K": [13, 17], "R": null, "K'": [[5, 21], [9, 27]], "V'": [[11, 29], [12, 30]], "example": [1, 68]}, {"END": [137, 138], "A": [133, 135], "V": [80, 81], "Q": [131, 132], "K": [73, 78], "R": null, "K'": [[82, 94], [90, 98]], "V'": [[92, 100], [93, 102]], "example": [69, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Adliswil attracts Lisa. Party of National Unity attracts Paul. Al Ahmadi Governorate attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Kenya is the girl? Answer: No\n Premise: < Lake Caliraya attracts Paul. Drumheller-Stettler attracts Sarah. Cairo American College attracts Donna. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Philippines is the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [19, 20], "Q": [59, 61], "K": [13, 17], "R": null, "K'": [[5, 21], [9, 27]], "V'": [[11, 29], [12, 30]], "example": [1, 68]}, {"END": [137, 138], "A": [133, 135], "V": [80, 81], "Q": [131, 132], "K": [73, 78], "R": null, "K'": [[82, 94], [90, 98]], "V'": [[92, 100], [93, 102]], "example": [69, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Jennifer. Tirebolu attracts Linda. Alcanena Municipality attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is the boy? Answer: Yes\n Premise: < Al Daayen attracts Michelle. Pacentro attracts Daniel. Bernheze attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the girl? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [30, 31], "Q": [60, 61], "K": [23, 28], "R": null, "K'": [[5, 14], [9, 18]], "V'": [[11, 20], [13, 22]], "example": [1, 68]}, {"END": [131, 132], "A": [127, 129], "V": [79, 81], "Q": [124, 126], "K": [73, 77], "R": null, "K'": [[82, 89], [85, 92]], "V'": [[87, 94], [88, 95]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Jennifer. Tirebolu attracts Linda. Alcanena Municipality attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is the boy? Answer: Yes\n Premise: < Al Daayen attracts Michelle. Pacentro attracts Daniel. Bernheze attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Qatar is the boy? Answer: No\n", "ranges": [{"END": [66, 67], "A": [62, 64], "V": [30, 31], "Q": [60, 61], "K": [23, 28], "R": null, "K'": [[5, 14], [9, 18]], "V'": [[11, 20], [13, 22]], "example": [1, 68]}, {"END": [131, 132], "A": [127, 129], "V": [79, 81], "Q": [124, 126], "K": [73, 77], "R": null, "K'": [[82, 89], [85, 92]], "V'": [[87, 94], [88, 95]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Gayane Church attracts Margaret. Persegres Gresik United attracts Kenneth. Zwiefalten attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Armenia is the boy? Answer: No\n Premise: < Ariake Coliseum attracts Jeff. Yoro attracts Margaret. Manila Bay attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is the girl? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [11, 12], "Q": [60, 62], "K": [5, 9], "R": null, "K'": [[13, 24], [20, 28]], "V'": [[22, 30], [23, 31]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [87, 88], "Q": [124, 127], "K": [83, 85], "R": null, "K'": [[74, 89], [79, 92]], "V'": [[81, 94], [82, 95]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Saint Gayane Church attracts Margaret. Persegres Gresik United attracts Kenneth. Zwiefalten attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Armenia is the boy? Answer: No\n Premise: < Ariake Coliseum attracts Jeff. Yoro attracts Margaret. Manila Bay attracts John. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Honduras is the boy? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [11, 12], "Q": [60, 62], "K": [5, 9], "R": null, "K'": [[13, 24], [20, 28]], "V'": [[22, 30], [23, 31]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [87, 88], "Q": [124, 127], "K": [83, 85], "R": null, "K'": [[74, 89], [79, 92]], "V'": [[81, 94], [82, 95]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bolvadin attracts Lisa. Calw attracts Jeff. Bose Institute attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Turkey is the girl? Answer: Yes\n Premise: < Bhinmal attracts William. Nimmitabel attracts Charles. Mandailing language attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is the girl? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [53, 54], "K": [5, 8], "R": null, "K'": [[12, 18], [14, 21]], "V'": [[16, 23], [17, 24]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [87, 89], "Q": [118, 120], "K": [81, 85], "R": null, "K'": [[66, 73], [69, 77]], "V'": [[71, 79], [72, 80]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Bolvadin attracts Lisa. Calw attracts Jeff. Bose Institute attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Turkey is the girl? Answer: Yes\n Premise: < Bhinmal attracts William. Nimmitabel attracts Charles. Mandailing language attracts Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is the boy? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [10, 11], "Q": [53, 54], "K": [5, 8], "R": null, "K'": [[12, 18], [14, 21]], "V'": [[16, 23], [17, 24]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [87, 89], "Q": [118, 120], "K": [81, 85], "R": null, "K'": [[66, 73], [69, 77]], "V'": [[71, 79], [72, 80]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Medaram attracts Maria. Munich Residence attracts Ronald. Gaiola attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in India is the girl? Answer: Yes\n Premise: < Ba F.C attracts Sarah. Tsubaki Grand Shrine attracts David. Vrienden van het Platteland attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Fiji is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [9, 10], "Q": [55, 56], "K": [5, 7], "R": null, "K'": [[11, 20], [15, 23]], "V'": [[17, 25], [19, 26]], "example": [1, 63]}, {"END": [134, 135], "A": [130, 132], "V": [74, 75], "Q": [127, 129], "K": [68, 72], "R": null, "K'": [[76, 87], [83, 95]], "V'": [[85, 97], [86, 98]], "example": [64, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Medaram attracts Maria. Munich Residence attracts Ronald. Gaiola attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in India is the girl? Answer: Yes\n Premise: < Ba F.C attracts Sarah. Tsubaki Grand Shrine attracts David. Vrienden van het Platteland attracts Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Fiji is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [9, 10], "Q": [55, 56], "K": [5, 7], "R": null, "K'": [[11, 20], [15, 23]], "V'": [[17, 25], [19, 26]], "example": [1, 63]}, {"END": [134, 135], "A": [130, 132], "V": [74, 75], "Q": [127, 129], "K": [68, 72], "R": null, "K'": [[76, 87], [83, 95]], "V'": [[85, 97], [86, 98]], "example": [64, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kahrizak attracts Christopher. Capoeira attracts Nancy. Hida Mountains attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is the boy? Answer: Yes\n Premise: < Cocconato attracts Steven. Astrid Lindgren Memorial Award attracts Anthony. Idalium attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [11, 12], "Q": [57, 58], "K": [5, 9], "R": null, "K'": [[13, 20], [16, 23]], "V'": [[18, 25], [19, 28]], "example": [1, 65]}, {"END": [132, 133], "A": [128, 130], "V": [94, 95], "Q": [124, 127], "K": [89, 92], "R": null, "K'": [[70, 78], [74, 85]], "V'": [[76, 87], [77, 88]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kahrizak attracts Christopher. Capoeira attracts Nancy. Hida Mountains attracts Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is the boy? Answer: Yes\n Premise: < Cocconato attracts Steven. Astrid Lindgren Memorial Award attracts Anthony. Idalium attracts Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cyprus is the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [11, 12], "Q": [57, 58], "K": [5, 9], "R": null, "K'": [[13, 20], [16, 23]], "V'": [[18, 25], [19, 28]], "example": [1, 65]}, {"END": [132, 133], "A": [128, 130], "V": [94, 95], "Q": [124, 127], "K": [89, 92], "R": null, "K'": [[70, 78], [74, 85]], "V'": [[76, 87], [77, 88]], "example": [66, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Wismar attracts Sandra. Monarcas Morelia attracts Paul. Dwarka attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is the girl? Answer: No\n Premise: < Kottarakkara attracts Thomas. Lascaris Battery attracts Karen. Eirodziesma attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Malta is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [20, 21], "Q": [58, 59], "K": [13, 18], "R": null, "K'": [[5, 22], [8, 26]], "V'": [[10, 28], [12, 29]], "example": [1, 66]}, {"END": [137, 138], "A": [133, 135], "V": [89, 91], "Q": [130, 132], "K": [81, 87], "R": null, "K'": [[71, 92], [77, 97]], "V'": [[79, 99], [80, 101]], "example": [67, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Wismar attracts Sandra. Monarcas Morelia attracts Paul. Dwarka attracts Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is the girl? Answer: No\n Premise: < Kottarakkara attracts Thomas. Lascaris Battery attracts Karen. Eirodziesma attracts Ronald. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Malta is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [20, 21], "Q": [58, 59], "K": [13, 18], "R": null, "K'": [[5, 22], [8, 26]], "V'": [[10, 28], [12, 29]], "example": [1, 66]}, {"END": [137, 138], "A": [133, 135], "V": [89, 91], "Q": [130, 132], "K": [81, 87], "R": null, "K'": [[71, 92], [77, 97]], "V'": [[79, 99], [80, 101]], "example": [67, 139]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel likes Central Black Forest. Michelle likes Chol Kiri District. Sharon likes Chol Kiri District. >. The one who wants to go to a place in Cambodia is not the boy\n < Mark likes Arsk. Helen likes Entzheim. Maria likes Palais de l'Industrie. >. The one who wants to go to a place in France is not the boy\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [2, 3], "Q": [41, 43], "K'": [5, 8], "R": [44, 45], "K": [[13, 23], [18, 28]], "V": [[9, 19], [11, 21]], "example": [1, 47]}, {"END": [89, 90], "A'": [90, 91], "V'": [49, 50], "Q": [86, 87], "K'": [52, 54], "R": [88, 89], "K": [[58, 65], [61, 73]], "V": [[55, 62], [56, 63]], "example": [48, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra likes Lake Caliraya. Charles likes Kayunga District. Jason likes Mbale District. >. The one who wants to go to a place in Uganda is not the girl\n < Jason likes Sapo National Park. Charles likes Sapo National Park. Elizabeth likes Colleville-Montgomery. >. The one who wants to go to a place in Liberia is not the girl\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [2, 4], "Q": [40, 43], "K'": [6, 11], "R": [44, 45], "K": [[15, 23], [19, 27]], "V": [[12, 20], [13, 21]], "example": [1, 47]}, {"END": [94, 95], "A'": [95, 96], "V'": [67, 68], "Q": [90, 92], "K'": [70, 77], "R": [93, 94], "K": [[52, 61], [57, 66]], "V": [[49, 58], [50, 59]], "example": [48, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Thomas likes Cubagua. Maria likes Olten railway station. Kenneth likes Casiquiare canal. >. The one who wants to go to a place in Venezuela is not the girl\n < Deborah likes Mahalangur Himal. Linda likes Langtang National Park. Thomas likes Achelous River. >. The one who wants to go to a place in Nepal is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [8, 9], "Q": [37, 38], "K'": [11, 15], "R": [39, 40], "K": [[5, 19], [7, 24]], "V": [[2, 16], [3, 17]], "example": [1, 42]}, {"END": [90, 91], "A'": [91, 92], "V'": [66, 67], "Q": [86, 88], "K'": [69, 73], "R": [89, 90], "K": [[49, 60], [55, 65]], "V": [[44, 56], [47, 58]], "example": [43, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< William likes Bunda District. Kevin likes Bunda District. Karen likes House of Representatives. >. The one who wants to go to a place in Tanzania is not the girl\n < Ruth likes St Lucia. Paul likes Ulpiana. Charles likes Ulpiana. >. The one who wants to go to a place in Kosovo is not the girl\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [16, 18], "Q": [36, 39], "K'": [20, 23], "R": [40, 41], "K": [[5, 12], [8, 15]], "V": [[2, 9], [3, 10]], "example": [1, 43]}, {"END": [82, 83], "A'": [83, 84], "V'": [45, 46], "Q": [78, 80], "K'": [48, 51], "R": [81, 82], "K": [[55, 62], [58, 65]], "V": [[52, 59], [53, 60]], "example": [44, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Margaret likes New Era University. Kenneth likes Bamyan. Mark likes Tillya Tepe. >. The one who wants to go to a place in Afghanistan is not the girl\n < Kevin likes Guelma Province. Patricia likes Oshawa. James likes Guelma Province. >. The one who wants to go to a place in Algeria is not the girl\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [2, 3], "Q": [37, 39], "K'": [5, 8], "R": [40, 41], "K": [[12, 19], [15, 24]], "V": [[9, 16], [10, 17]], "example": [1, 43]}, {"END": [87, 88], "A'": [88, 89], "V'": [53, 56], "Q": [82, 85], "K'": [58, 61], "R": [86, 87], "K": [[48, 65], [52, 69]], "V": [[45, 62], [46, 63]], "example": [44, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jason likes Eurostat. Barbara likes Kibungo Province. Linda likes Kibungo Province. >. The one who wants to go to a place in Rwanda is not the boy\n < Lisa likes Calw. Jeff likes Transylvanian Plateau. Mark likes Lipscani. >. The one who wants to go to a place in Romania is not the girl\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [2, 3], "Q": [39, 42], "K'": [5, 7], "R": [43, 44], "K": [[11, 21], [16, 26]], "V": [[8, 17], [9, 19]], "example": [1, 46]}, {"END": [88, 89], "A'": [89, 90], "V'": [48, 49], "Q": [84, 86], "K'": [51, 53], "R": [87, 88], "K": [[57, 67], [63, 71]], "V": [[54, 64], [55, 65]], "example": [47, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Karen likes Nimmitabel. Thomas likes Al Daayen. William likes Al Daayen. >. The one who wants to go to a place in Qatar is not the girl\n < Nancy likes Global Television Network. Mary likes Skinnamarink TV. Edward likes Ghatanji. >. The one who wants to go to a place in Canada is not the boy\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [2, 4], "Q": [39, 41], "K'": [6, 10], "R": [42, 43], "K": [[14, 22], [18, 26]], "V": [[11, 19], [12, 20]], "example": [1, 45]}, {"END": [86, 87], "A'": [87, 88], "V'": [63, 64], "Q": [83, 84], "K'": [66, 70], "R": [85, 86], "K": [[50, 57], [53, 62]], "V": [[47, 54], [48, 55]], "example": [46, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Steven likes Kayunga District. Michael likes Mbale District. Nancy likes Ikaalinen. >. The one who wants to go to a place in Uganda is not the girl\n < Karen likes Tampines Expressway. Sharon likes Presbyterian High School. David likes Minamishitara District, Aichi. >. The one who wants to go to a place in Singapore is not the boy\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [18, 19], "Q": [38, 41], "K'": [21, 25], "R": [42, 43], "K": [[5, 13], [9, 17]], "V": [[2, 10], [3, 11]], "example": [1, 45]}, {"END": [96, 97], "A'": [97, 98], "V'": [68, 69], "Q": [93, 94], "K'": [71, 80], "R": [95, 96], "K": [[51, 61], [56, 67]], "V": [[47, 57], [49, 59]], "example": [46, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel likes Central Black Forest. Michelle likes Chol Kiri District. Sharon likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not the boy? Answer: Yes\n Premise: < Mark likes Manila Light Rail Transit System. Helen likes Hohenwestedt. Maria likes Reiherstieg Schiffswerfte & Maschinenfabrik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [5, 6], "Q": [60, 62], "K'": [8, 11], "R": [63, 64], "K": [[16, 26], [21, 31]], "V": [[12, 22], [14, 24]], "example": [1, 70]}, {"END": [148, 149], "A'": [144, 146], "V'": [75, 76], "Q": [141, 142], "K'": [78, 85], "R": [143, 144], "K": [[89, 98], [94, 112]], "V": [[86, 95], [87, 96]], "example": [71, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel likes Central Black Forest. Michelle likes Chol Kiri District. Sharon likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not the boy? Answer: Yes\n Premise: < Mark likes Manila Light Rail Transit System. Helen likes Hohenwestedt. Maria likes Reiherstieg Schiffswerfte & Maschinenfabrik. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [5, 6], "Q": [60, 62], "K'": [8, 11], "R": [63, 64], "K": [[16, 26], [21, 31]], "V": [[12, 22], [14, 24]], "example": [1, 70]}, {"END": [148, 149], "A'": [144, 146], "V'": [75, 76], "Q": [141, 142], "K'": [78, 85], "R": [143, 144], "K": [[89, 98], [94, 112]], "V": [[86, 95], [87, 96]], "example": [71, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin likes Augustinergasse. Brian likes Cunter. Jennifer likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is not the boy? Answer: No\n Premise: < Lisa likes Christian Medical College Ludhiana. George likes Tovarnik. Daniel likes Hrtkovci. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [19, 21], "Q": [55, 56], "K'": [23, 26], "R": [57, 58], "K": [[8, 16], [12, 18]], "V": [[5, 13], [6, 14]], "example": [1, 64]}, {"END": [131, 132], "A'": [127, 129], "V'": [69, 70], "Q": [123, 125], "K'": [72, 78], "R": [126, 127], "K": [[82, 90], [86, 94]], "V": [[79, 87], [80, 88]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin likes Augustinergasse. Brian likes Cunter. Jennifer likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is not the boy? Answer: No\n Premise: < Lisa likes Christian Medical College Ludhiana. George likes Tovarnik. Daniel likes Hrtkovci. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [19, 21], "Q": [55, 56], "K'": [23, 26], "R": [57, 58], "K": [[8, 16], [12, 18]], "V": [[5, 13], [6, 14]], "example": [1, 64]}, {"END": [131, 132], "A'": [127, 129], "V'": [69, 70], "Q": [123, 125], "K'": [72, 78], "R": [126, 127], "K": [[82, 90], [86, 94]], "V": [[79, 87], [80, 88]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah likes Mahalangur Himal. Linda likes Langtang National Park. Thomas likes Achelous River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Nepal is not the boy? Answer: Yes\n Premise: < Michael likes Dawa River. William likes Dawa River. Maria likes Thuringian Highland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [27, 28], "Q": [63, 65], "K'": [30, 34], "R": [66, 67], "K": [[10, 21], [16, 26]], "V": [[5, 17], [8, 19]], "example": [1, 73]}, {"END": [137, 138], "A'": [133, 135], "V'": [92, 93], "Q": [129, 131], "K'": [95, 100], "R": [132, 133], "K": [[81, 88], [84, 91]], "V": [[78, 85], [79, 86]], "example": [74, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah likes Mahalangur Himal. Linda likes Langtang National Park. Thomas likes Achelous River. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Nepal is not the boy? Answer: Yes\n Premise: < Michael likes Dawa River. William likes Dawa River. Maria likes Thuringian Highland. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [27, 28], "Q": [63, 65], "K'": [30, 34], "R": [66, 67], "K": [[10, 21], [16, 26]], "V": [[5, 17], [8, 19]], "example": [1, 73]}, {"END": [137, 138], "A'": [133, 135], "V'": [92, 93], "Q": [129, 131], "K'": [95, 100], "R": [132, 133], "K": [[81, 88], [84, 91]], "V": [[78, 85], [79, 86]], "example": [74, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < William likes Rio Quente. Dorothy likes Imperia. Patricia likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Italy is not the boy? Answer: Yes\n Premise: < Robert likes Sadr City. Deborah likes Indira Gandhi International Airport. William likes Sulaimaniyah International Airport. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iraq is not the girl? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [5, 6], "Q": [61, 62], "K'": [8, 11], "R": [63, 64], "K": [[16, 24], [18, 32]], "V": [[12, 19], [14, 22]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [82, 85], "Q": [134, 136], "K'": [87, 93], "R": [137, 138], "K": [[78, 97], [81, 105]], "V": [[75, 94], [76, 95]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < William likes Rio Quente. Dorothy likes Imperia. Patricia likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Italy is not the boy? Answer: Yes\n Premise: < Robert likes Sadr City. Deborah likes Indira Gandhi International Airport. William likes Sulaimaniyah International Airport. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iraq is not the boy? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [5, 6], "Q": [61, 62], "K'": [8, 11], "R": [63, 64], "K": [[16, 24], [18, 32]], "V": [[12, 19], [14, 22]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [82, 85], "Q": [134, 136], "K'": [87, 93], "R": [137, 138], "K": [[78, 97], [81, 105]], "V": [[75, 94], [76, 95]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < George likes Chu Lai Base Area. Charles likes Gio Linh. Mary likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not the girl? Answer: Yes\n Premise: < Thomas likes Danish Sign Language. Barbara likes Turaida. Betty likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Latvia is not the boy? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [23, 24], "Q": [62, 63], "K'": [27, 33], "R": [64, 65], "K": [[8, 18], [14, 22]], "V": [[5, 15], [6, 16]], "example": [1, 71]}, {"END": [136, 137], "A'": [132, 134], "V'": [76, 77], "Q": [128, 130], "K'": [79, 83], "R": [131, 132], "K": [[87, 94], [90, 99]], "V": [[84, 91], [85, 92]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < George likes Chu Lai Base Area. Charles likes Gio Linh. Mary likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not the girl? Answer: Yes\n Premise: < Thomas likes Danish Sign Language. Barbara likes Turaida. Betty likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Latvia is not the girl? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [23, 24], "Q": [62, 63], "K'": [27, 33], "R": [64, 65], "K": [[8, 18], [14, 22]], "V": [[5, 15], [6, 16]], "example": [1, 71]}, {"END": [136, 137], "A'": [132, 134], "V'": [76, 77], "Q": [128, 130], "K'": [79, 83], "R": [131, 132], "K": [[87, 94], [90, 99]], "V": [[84, 91], [85, 92]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Kahrizak. Mary likes Tudeshk Rural District. Edward likes Yadagirigutta Temple. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is not the boy? Answer: Yes\n Premise: < Maria likes Munich Residence. Ronald likes Ikaalinen. Mark likes Tampere Cathedral. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Finland is not the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [24, 25], "Q": [64, 65], "K'": [27, 35], "R": [66, 67], "K": [[8, 16], [12, 23]], "V": [[5, 13], [6, 14]], "example": [1, 73]}, {"END": [139, 140], "A'": [135, 137], "V'": [78, 79], "Q": [132, 133], "K'": [81, 85], "R": [134, 135], "K": [[90, 98], [94, 103]], "V": [[86, 95], [88, 96]], "example": [74, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Nancy likes Kahrizak. Mary likes Tudeshk Rural District. Edward likes Yadagirigutta Temple. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is not the boy? Answer: Yes\n Premise: < Maria likes Munich Residence. Ronald likes Ikaalinen. Mark likes Tampere Cathedral. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Finland is not the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [24, 25], "Q": [64, 65], "K'": [27, 35], "R": [66, 67], "K": [[8, 16], [12, 23]], "V": [[5, 13], [6, 14]], "example": [1, 73]}, {"END": [139, 140], "A'": [135, 137], "V'": [78, 79], "Q": [132, 133], "K'": [81, 85], "R": [134, 135], "K": [[90, 98], [94, 103]], "V": [[86, 95], [88, 96]], "example": [74, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty likes Kuomintang. Daniel likes Waalhaven. Maria likes Sanlih E-Television. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not the girl? Answer: No\n Premise: < Elizabeth likes Pampilhosa da Serra. Betty likes Circuito da Boavista. David likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [13, 14], "Q": [61, 62], "K'": [16, 20], "R": [63, 64], "K": [[8, 24], [12, 32]], "V": [[5, 21], [6, 22]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [98, 99], "Q": [135, 136], "K'": [101, 106], "R": [137, 138], "K": [[78, 90], [86, 97]], "V": [[75, 87], [76, 88]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty likes Kuomintang. Daniel likes Waalhaven. Maria likes Sanlih E-Television. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not the girl? Answer: No\n Premise: < Elizabeth likes Pampilhosa da Serra. Betty likes Circuito da Boavista. David likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [13, 14], "Q": [61, 62], "K'": [16, 20], "R": [63, 64], "K": [[8, 24], [12, 32]], "V": [[5, 21], [6, 22]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [98, 99], "Q": [135, 136], "K'": [101, 106], "R": [137, 138], "K": [[78, 90], [86, 97]], "V": [[75, 87], [76, 88]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Richard likes Persegres Gresik United. Michelle likes La Guajira Desert. Anthony likes Bird's Head Peninsula. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is not the boy? Answer: No\n Premise: < Margaret likes Monarcas Morelia. David likes Kapar. Lisa likes Campeche Bank. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not the boy? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [16, 18], "Q": [66, 68], "K'": [20, 26], "R": [69, 70], "K": [[8, 30], [15, 37]], "V": [[5, 27], [6, 28]], "example": [1, 76]}, {"END": [138, 139], "A'": [134, 136], "V'": [90, 91], "Q": [131, 132], "K'": [93, 95], "R": [133, 134], "K": [[84, 99], [89, 102]], "V": [[81, 96], [82, 97]], "example": [77, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Richard likes Persegres Gresik United. Michelle likes La Guajira Desert. Anthony likes Bird's Head Peninsula. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is not the boy? Answer: No\n Premise: < Margaret likes Monarcas Morelia. David likes Kapar. Lisa likes Campeche Bank. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not the girl? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [16, 18], "Q": [66, 68], "K'": [20, 26], "R": [69, 70], "K": [[8, 30], [15, 37]], "V": [[5, 27], [6, 28]], "example": [1, 76]}, {"END": [138, 139], "A'": [134, 136], "V'": [90, 91], "Q": [131, 132], "K'": [93, 95], "R": [133, 134], "K": [[84, 99], [89, 102]], "V": [[81, 96], [82, 97]], "example": [77, 140]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Central Black Forest attracts Daniel. Chol Kiri District attracts Michelle. Chol Kiri District attracts Sharon. >. The one who wants to go to a place in Cambodia is not the boy\n < Arsk attracts Mark. Entzheim attracts Helen. Palais de l'Industrie attracts Maria. >. The one who wants to go to a place in France is not the boy\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [7, 8], "Q": [41, 43], "K'": [2, 5], "R": [44, 45], "K": [[9, 19], [14, 24]], "V": [[16, 26], [18, 28]], "example": [1, 47]}, {"END": [89, 90], "A'": [90, 91], "V'": [53, 54], "Q": [86, 87], "K'": [49, 51], "R": [88, 89], "K": [[55, 62], [58, 70]], "V": [[60, 72], [61, 73]], "example": [48, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Lake Caliraya attracts Sandra. Kayunga District attracts Charles. Mbale District attracts Jason. >. The one who wants to go to a place in Uganda is not the girl\n < Sapo National Park attracts Jason. Sapo National Park attracts Charles. Colleville-Montgomery attracts Elizabeth. >. The one who wants to go to a place in Liberia is not the girl\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [9, 11], "Q": [40, 43], "K'": [2, 7], "R": [44, 45], "K": [[12, 20], [16, 24]], "V": [[18, 26], [19, 27]], "example": [1, 47]}, {"END": [94, 95], "A'": [95, 96], "V'": [76, 77], "Q": [90, 92], "K'": [67, 74], "R": [93, 94], "K": [[49, 58], [54, 63]], "V": [[56, 65], [57, 66]], "example": [48, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Cubagua attracts Thomas. Olten railway station attracts Maria. Casiquiare canal attracts Kenneth. >. The one who wants to go to a place in Venezuela is not the girl\n < Mahalangur Himal attracts Deborah. Langtang National Park attracts Linda. Achelous River attracts Thomas. >. The one who wants to go to a place in Nepal is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [14, 15], "Q": [37, 38], "K'": [8, 12], "R": [39, 40], "K": [[2, 16], [4, 21]], "V": [[6, 23], [7, 24]], "example": [1, 42]}, {"END": [90, 91], "A'": [91, 92], "V'": [72, 73], "Q": [86, 88], "K'": [66, 70], "R": [89, 90], "K": [[44, 56], [50, 61]], "V": [[52, 63], [55, 65]], "example": [43, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Bunda District attracts William. Bunda District attracts Kevin. House of Representatives attracts Karen. >. The one who wants to go to a place in Tanzania is not the girl\n < St Lucia attracts Ruth. Ulpiana attracts Paul. Ulpiana attracts Charles. >. The one who wants to go to a place in Kosovo is not the girl\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [21, 23], "Q": [36, 39], "K'": [16, 19], "R": [40, 41], "K": [[2, 9], [5, 12]], "V": [[7, 14], [8, 15]], "example": [1, 43]}, {"END": [82, 83], "A'": [83, 84], "V'": [50, 51], "Q": [78, 80], "K'": [45, 48], "R": [81, 82], "K": [[52, 59], [55, 62]], "V": [[57, 64], [58, 65]], "example": [44, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< New Era University attracts Margaret. Bamyan attracts Kenneth. Tillya Tepe attracts Mark. >. The one who wants to go to a place in Afghanistan is not the girl\n < Guelma Province attracts Kevin. Oshawa attracts Patricia. Guelma Province attracts James. >. The one who wants to go to a place in Algeria is not the girl\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [7, 8], "Q": [37, 39], "K'": [2, 5], "R": [40, 41], "K": [[9, 16], [12, 21]], "V": [[14, 23], [15, 24]], "example": [1, 43]}, {"END": [87, 88], "A'": [88, 89], "V'": [58, 61], "Q": [82, 85], "K'": [53, 56], "R": [86, 87], "K": [[45, 62], [49, 66]], "V": [[51, 68], [52, 69]], "example": [44, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Eurostat attracts Jason. Kibungo Province attracts Barbara. Kibungo Province attracts Linda. >. The one who wants to go to a place in Rwanda is not the boy\n < Calw attracts Lisa. Transylvanian Plateau attracts Jeff. Lipscani attracts Mark. >. The one who wants to go to a place in Romania is not the girl\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [6, 7], "Q": [39, 42], "K'": [2, 4], "R": [43, 44], "K": [[8, 17], [13, 22]], "V": [[15, 24], [16, 26]], "example": [1, 46]}, {"END": [88, 89], "A'": [89, 90], "V'": [52, 53], "Q": [84, 86], "K'": [48, 50], "R": [87, 88], "K": [[54, 64], [60, 68]], "V": [[62, 70], [63, 71]], "example": [47, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Nimmitabel attracts Karen. Al Daayen attracts Thomas. Al Daayen attracts William. >. The one who wants to go to a place in Qatar is not the girl\n < Global Television Network attracts Nancy. Skinnamarink TV attracts Mary. Ghatanji attracts Edward. >. The one who wants to go to a place in Canada is not the boy\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [8, 10], "Q": [39, 41], "K'": [2, 6], "R": [42, 43], "K": [[11, 19], [15, 23]], "V": [[17, 25], [18, 26]], "example": [1, 45]}, {"END": [86, 87], "A'": [87, 88], "V'": [69, 70], "Q": [83, 84], "K'": [63, 67], "R": [85, 86], "K": [[47, 54], [50, 59]], "V": [[52, 61], [53, 62]], "example": [46, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Kayunga District attracts Steven. Mbale District attracts Michael. Ikaalinen attracts Nancy. >. The one who wants to go to a place in Uganda is not the girl\n < Tampines Expressway attracts Karen. Presbyterian High School attracts Sharon. Minamishitara District, Aichi attracts David. >. The one who wants to go to a place in Singapore is not the boy\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [24, 25], "Q": [38, 41], "K'": [18, 22], "R": [42, 43], "K": [[2, 10], [6, 14]], "V": [[8, 16], [9, 17]], "example": [1, 45]}, {"END": [96, 97], "A'": [97, 98], "V'": [79, 80], "Q": [93, 94], "K'": [68, 77], "R": [95, 96], "K": [[47, 57], [52, 63]], "V": [[54, 65], [56, 67]], "example": [46, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Daniel. Chol Kiri District attracts Michelle. Chol Kiri District attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not the boy? Answer: Yes\n Premise: < Manila Light Rail Transit System attracts Mark. Hohenwestedt attracts Helen. Reiherstieg Schiffswerfte & Maschinenfabrik attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [10, 11], "Q": [60, 62], "K'": [5, 8], "R": [63, 64], "K": [[12, 22], [17, 27]], "V": [[19, 29], [21, 31]], "example": [1, 70]}, {"END": [148, 149], "A'": [144, 146], "V'": [84, 85], "Q": [141, 142], "K'": [75, 82], "R": [143, 144], "K": [[86, 95], [91, 109]], "V": [[93, 111], [94, 112]], "example": [71, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Central Black Forest attracts Daniel. Chol Kiri District attracts Michelle. Chol Kiri District attracts Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Cambodia is not the boy? Answer: Yes\n Premise: < Manila Light Rail Transit System attracts Mark. Hohenwestedt attracts Helen. Reiherstieg Schiffswerfte & Maschinenfabrik attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Germany is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [10, 11], "Q": [60, 62], "K'": [5, 8], "R": [63, 64], "K": [[12, 22], [17, 27]], "V": [[19, 29], [21, 31]], "example": [1, 70]}, {"END": [148, 149], "A'": [144, 146], "V'": [84, 85], "Q": [141, 142], "K'": [75, 82], "R": [143, 144], "K": [[86, 95], [91, 109]], "V": [[93, 111], [94, 112]], "example": [71, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Augustinergasse attracts Kevin. Cunter attracts Brian. Entracque attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is not the boy? Answer: No\n Premise: < Christian Medical College Ludhiana attracts Lisa. Tovarnik attracts George. Hrtkovci attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [24, 26], "Q": [55, 56], "K'": [19, 22], "R": [57, 58], "K": [[5, 13], [9, 15]], "V": [[11, 17], [12, 18]], "example": [1, 64]}, {"END": [131, 132], "A'": [127, 129], "V'": [77, 78], "Q": [123, 125], "K'": [69, 75], "R": [126, 127], "K": [[79, 87], [83, 91]], "V": [[85, 93], [86, 94]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Augustinergasse attracts Kevin. Cunter attracts Brian. Entracque attracts Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Switzerland is not the boy? Answer: No\n Premise: < Christian Medical College Ludhiana attracts Lisa. Tovarnik attracts George. Hrtkovci attracts Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Croatia is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [24, 26], "Q": [55, 56], "K'": [19, 22], "R": [57, 58], "K": [[5, 13], [9, 15]], "V": [[11, 17], [12, 18]], "example": [1, 64]}, {"END": [131, 132], "A'": [127, 129], "V'": [77, 78], "Q": [123, 125], "K'": [69, 75], "R": [126, 127], "K": [[79, 87], [83, 91]], "V": [[85, 93], [86, 94]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Mahalangur Himal attracts Deborah. Langtang National Park attracts Linda. Achelous River attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Nepal is not the boy? Answer: Yes\n Premise: < Dawa River attracts Michael. Dawa River attracts William. Thuringian Highland attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [33, 34], "Q": [63, 65], "K'": [27, 31], "R": [66, 67], "K": [[5, 17], [11, 22]], "V": [[13, 24], [16, 26]], "example": [1, 73]}, {"END": [137, 138], "A'": [133, 135], "V'": [99, 100], "Q": [129, 131], "K'": [92, 97], "R": [132, 133], "K": [[78, 85], [81, 88]], "V": [[83, 90], [84, 91]], "example": [74, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Mahalangur Himal attracts Deborah. Langtang National Park attracts Linda. Achelous River attracts Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Nepal is not the boy? Answer: Yes\n Premise: < Dawa River attracts Michael. Dawa River attracts William. Thuringian Highland attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Somalia is not the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [33, 34], "Q": [63, 65], "K'": [27, 31], "R": [66, 67], "K": [[5, 17], [11, 22]], "V": [[13, 24], [16, 26]], "example": [1, 73]}, {"END": [137, 138], "A'": [133, 135], "V'": [99, 100], "Q": [129, 131], "K'": [92, 97], "R": [132, 133], "K": [[78, 85], [81, 88]], "V": [[83, 90], [84, 91]], "example": [74, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Rio Quente attracts William. Imperia attracts Dorothy. Santo Spirito in Sassia attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Italy is not the boy? Answer: Yes\n Premise: < Sadr City attracts Robert. Indira Gandhi International Airport attracts Deborah. Sulaimaniyah International Airport attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iraq is not the girl? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [10, 11], "Q": [61, 62], "K'": [5, 8], "R": [63, 64], "K": [[12, 19], [14, 27]], "V": [[16, 29], [18, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [90, 93], "Q": [134, 136], "K'": [82, 88], "R": [137, 138], "K": [[75, 94], [78, 102]], "V": [[80, 104], [81, 105]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Rio Quente attracts William. Imperia attracts Dorothy. Santo Spirito in Sassia attracts Patricia. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Italy is not the boy? Answer: Yes\n Premise: < Sadr City attracts Robert. Indira Gandhi International Airport attracts Deborah. Sulaimaniyah International Airport attracts William. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iraq is not the boy? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [10, 11], "Q": [61, 62], "K'": [5, 8], "R": [63, 64], "K": [[12, 19], [14, 27]], "V": [[16, 29], [18, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [90, 93], "Q": [134, 136], "K'": [82, 88], "R": [137, 138], "K": [[75, 94], [78, 102]], "V": [[80, 104], [81, 105]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Chu Lai Base Area attracts George. Gio Linh attracts Charles. 1960 Summer Olympics attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not the girl? Answer: Yes\n Premise: < Danish Sign Language attracts Thomas. Turaida attracts Barbara. Eirodziesma attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Latvia is not the boy? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [32, 33], "Q": [62, 63], "K'": [24, 30], "R": [64, 65], "K": [[5, 15], [11, 19]], "V": [[13, 21], [14, 22]], "example": [1, 71]}, {"END": [136, 137], "A'": [132, 134], "V'": [82, 83], "Q": [128, 130], "K'": [76, 80], "R": [131, 132], "K": [[84, 91], [87, 96]], "V": [[89, 98], [90, 99]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Chu Lai Base Area attracts George. Gio Linh attracts Charles. 1960 Summer Olympics attracts Mary. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Vietnam is not the girl? Answer: Yes\n Premise: < Danish Sign Language attracts Thomas. Turaida attracts Barbara. Eirodziesma attracts Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Latvia is not the girl? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [32, 33], "Q": [62, 63], "K'": [24, 30], "R": [64, 65], "K": [[5, 15], [11, 19]], "V": [[13, 21], [14, 22]], "example": [1, 71]}, {"END": [136, 137], "A'": [132, 134], "V'": [82, 83], "Q": [128, 130], "K'": [76, 80], "R": [131, 132], "K": [[84, 91], [87, 96]], "V": [[89, 98], [90, 99]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kahrizak attracts Nancy. Tudeshk Rural District attracts Mary. Yadagirigutta Temple attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is not the boy? Answer: Yes\n Premise: < Munich Residence attracts Maria. Ikaalinen attracts Ronald. Tampere Cathedral attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Finland is not the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [34, 35], "Q": [64, 65], "K'": [24, 32], "R": [66, 67], "K": [[5, 13], [9, 20]], "V": [[11, 22], [12, 23]], "example": [1, 73]}, {"END": [139, 140], "A'": [135, 137], "V'": [84, 85], "Q": [132, 133], "K'": [78, 82], "R": [134, 135], "K": [[86, 95], [90, 100]], "V": [[92, 102], [94, 103]], "example": [74, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kahrizak attracts Nancy. Tudeshk Rural District attracts Mary. Yadagirigutta Temple attracts Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Iran is not the boy? Answer: Yes\n Premise: < Munich Residence attracts Maria. Ikaalinen attracts Ronald. Tampere Cathedral attracts Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Finland is not the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [34, 35], "Q": [64, 65], "K'": [24, 32], "R": [66, 67], "K": [[5, 13], [9, 20]], "V": [[11, 22], [12, 23]], "example": [1, 73]}, {"END": [139, 140], "A'": [135, 137], "V'": [84, 85], "Q": [132, 133], "K'": [78, 82], "R": [134, 135], "K": [[86, 95], [90, 100]], "V": [[92, 102], [94, 103]], "example": [74, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Betty. Waalhaven attracts Daniel. Sanlih E-Television attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not the girl? Answer: No\n Premise: < Pampilhosa da Serra attracts Elizabeth. Circuito da Boavista attracts Betty. Preet Vihar attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not the boy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [19, 20], "Q": [61, 62], "K'": [13, 17], "R": [63, 64], "K": [[5, 21], [9, 29]], "V": [[11, 31], [12, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [105, 106], "Q": [135, 136], "K'": [98, 103], "R": [137, 138], "K": [[75, 87], [83, 94]], "V": [[85, 96], [86, 97]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Kuomintang attracts Betty. Waalhaven attracts Daniel. Sanlih E-Television attracts Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Taiwan is not the girl? Answer: No\n Premise: < Pampilhosa da Serra attracts Elizabeth. Circuito da Boavista attracts Betty. Preet Vihar attracts David. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Portugal is not the girl? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [19, 20], "Q": [61, 62], "K'": [13, 17], "R": [63, 64], "K": [[5, 21], [9, 29]], "V": [[11, 31], [12, 32]], "example": [1, 70]}, {"END": [142, 143], "A'": [138, 140], "V'": [105, 106], "Q": [135, 136], "K'": [98, 103], "R": [137, 138], "K": [[75, 87], [83, 94]], "V": [[85, 96], [86, 97]], "example": [71, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Persegres Gresik United attracts Richard. La Guajira Desert attracts Michelle. Bird's Head Peninsula attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is not the boy? Answer: No\n Premise: < Monarcas Morelia attracts Margaret. Kapar attracts David. Campeche Bank attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not the boy? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [24, 26], "Q": [66, 68], "K'": [16, 22], "R": [69, 70], "K": [[5, 27], [12, 34]], "V": [[14, 36], [15, 37]], "example": [1, 76]}, {"END": [138, 139], "A'": [134, 136], "V'": [94, 95], "Q": [131, 132], "K'": [90, 92], "R": [133, 134], "K": [[81, 96], [86, 99]], "V": [[88, 101], [89, 102]], "example": [77, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][countries_of_landmarks.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Persegres Gresik United attracts Richard. La Guajira Desert attracts Michelle. Bird's Head Peninsula attracts Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Indonesia is not the boy? Answer: No\n Premise: < Monarcas Morelia attracts Margaret. Kapar attracts David. Campeche Bank attracts Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who wants to go to a place in Mexico is not the girl? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [24, 26], "Q": [66, 68], "K'": [16, 22], "R": [69, 70], "K": [[5, 27], [12, 34]], "V": [[14, 36], [15, 37]], "example": [1, 76]}, {"END": [138, 139], "A'": [134, 136], "V'": [94, 95], "Q": [131, 132], "K'": [90, 92], "R": [133, 134], "K": [[81, 96], [86, 99]], "V": [[88, 101], [89, 102]], "example": [77, 140]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< David has rabbit. Sharon has basketball. Barbara has plum. >. So Barbara owns plum\n < Donna has spaghetti. Michael has plum. John has guitar. >. So John owns guitar\n", "ranges": [{"END": [22, 23], "A": [23, 25], "V": [14, 16], "Q": [20, 21], "K": [12, 13], "R": null, "K'": [[2, 7], [3, 9]], "V'": [[4, 10], [6, 11]], "example": [1, 25]}, {"END": [48, 49], "A": [49, 50], "V": [41, 42], "Q": [46, 47], "K": [39, 40], "R": null, "K'": [[27, 34], [29, 35]], "V'": [[30, 36], [33, 38]], "example": [26, 50]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Anthony has juice. Deborah has whiskey. Donald has wine. >. So Anthony owns juice\n < John has goat. Laura has motorcycle. Jeff has guitar. >. So Laura owns motorcycle\n", "ranges": [{"END": [23, 24], "A": [24, 26], "V": [4, 6], "Q": [21, 22], "K": [2, 3], "R": null, "K'": [[7, 14], [10, 15]], "V'": [[11, 16], [13, 17]], "example": [1, 26]}, {"END": [47, 48], "A": [48, 50], "V": [35, 37], "Q": [45, 46], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[30, 40], [32, 41]], "example": [27, 50]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Patricia has orange. Jeff has soda. Margaret has football. >. So Jeff owns soda\n < Michelle has tea. Robert has baseball. Laura has sweater. >. So Laura owns sweater\n", "ranges": [{"END": [22, 23], "A": [23, 25], "V": [10, 12], "Q": [20, 21], "K": [8, 9], "R": null, "K'": [[2, 13], [5, 14]], "V'": [[6, 15], [7, 16]], "example": [1, 25]}, {"END": [46, 47], "A": [47, 49], "V": [38, 40], "Q": [44, 45], "K": [36, 37], "R": null, "K'": [[27, 32], [29, 33]], "V'": [[30, 34], [31, 35]], "example": [26, 49]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Dorothy has jersey. Ronald has underwear. Karen has hamburger. >. So Ronald owns underwear\n < Sharon has fox. Carol has mosquito. Michael has vodka. >. So Michael owns vodka\n", "ranges": [{"END": [29, 30], "A": [30, 33], "V": [12, 15], "Q": [26, 28], "K": [9, 11], "R": null, "K'": [[2, 16], [4, 18]], "V'": [[5, 19], [8, 22]], "example": [1, 33]}, {"END": [58, 59], "A": [59, 62], "V": [49, 52], "Q": [56, 57], "K": [47, 48], "R": null, "K'": [[35, 41], [37, 42]], "V'": [[38, 43], [40, 46]], "example": [34, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Robert has jeans. Sarah has beetle. Ronald has blueberries. >. So Robert owns jeans\n < Deborah has gun. Daniel has strawberries. Edward has cannon. >. So Deborah owns gun\n", "ranges": [{"END": [25, 26], "A": [26, 28], "V": [4, 6], "Q": [23, 24], "K": [2, 3], "R": null, "K'": [[7, 13], [8, 15]], "V'": [[9, 16], [12, 19]], "example": [1, 28]}, {"END": [55, 56], "A": [56, 57], "V": [34, 35], "Q": [51, 54], "K": [30, 33], "R": null, "K'": [[36, 43], [37, 44]], "V'": [[38, 45], [42, 47]], "example": [29, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Brian has dog. Carol has jeans. Anthony has pistol. >. So Carol owns jeans\n < George has goat. Richard has uniform. Karen has fox. >. So George owns goat\n", "ranges": [{"END": [21, 22], "A": [22, 24], "V": [8, 10], "Q": [19, 20], "K": [6, 7], "R": null, "K'": [[2, 11], [3, 12]], "V'": [[4, 13], [5, 15]], "example": [1, 24]}, {"END": [46, 47], "A": [47, 49], "V": [28, 30], "Q": [44, 45], "K": [26, 27], "R": null, "K'": [[31, 35], [32, 37]], "V'": [[33, 38], [34, 40]], "example": [25, 49]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Jason has blackberries. Sharon has steak. Elizabeth has wolf. >. So Sharon owns steak\n < Carol has lemon. Kevin has goat. Karen has violin. >. So Karen owns violin\n", "ranges": [{"END": [25, 26], "A": [26, 28], "V": [11, 13], "Q": [22, 24], "K": [8, 10], "R": null, "K'": [[2, 14], [3, 15]], "V'": [[4, 16], [7, 18]], "example": [1, 28]}, {"END": [52, 53], "A": [53, 55], "V": [43, 45], "Q": [49, 51], "K": [40, 42], "R": null, "K'": [[30, 35], [31, 36]], "V'": [[32, 37], [34, 39]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Maria has shotgun. Kenneth has monkey. Linda has grapes. >. So Maria owns shotgun\n < Jennifer has burger. Helen has rabbit. George has blackberries. >. So Jennifer owns burger\n", "ranges": [{"END": [24, 25], "A": [25, 27], "V": [4, 6], "Q": [22, 23], "K": [2, 3], "R": null, "K'": [[7, 12], [8, 14]], "V'": [[9, 15], [11, 18]], "example": [1, 27]}, {"END": [52, 53], "A": [53, 55], "V": [32, 34], "Q": [49, 51], "K": [29, 31], "R": null, "K'": [[35, 40], [36, 41]], "V'": [[37, 42], [39, 45]], "example": [28, 55]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David has rabbit. Sharon has basketball. Barbara has plum. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns rabbit? Answer: No\n Premise: < Sarah has spaghetti. Donna has plum. Steven has guitar. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns guitar? Answer: Yes\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [17, 19], "Q": [38, 39], "K": [15, 16], "R": null, "K'": [[5, 10], [6, 12]], "V'": [[7, 13], [9, 14]], "example": [1, 47]}, {"END": [92, 93], "A": [89, 90], "V": [66, 67], "Q": [86, 87], "K": [64, 65], "R": null, "K'": [[52, 58], [53, 60]], "V'": [[54, 61], [57, 63]], "example": [48, 94]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < David has rabbit. Sharon has basketball. Barbara has plum. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns rabbit? Answer: No\n Premise: < Sarah has spaghetti. Donna has plum. Steven has guitar. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns plum? Answer: No\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [17, 19], "Q": [38, 39], "K": [15, 16], "R": null, "K'": [[5, 10], [6, 12]], "V'": [[7, 13], [9, 14]], "example": [1, 47]}, {"END": [93, 94], "A": [89, 91], "V": [66, 67], "Q": [86, 87], "K": [64, 65], "R": null, "K'": [[52, 58], [53, 60]], "V'": [[54, 61], [57, 63]], "example": [48, 95]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John has donkey. Daniel has car. Brian has deer. >. Answer with Yes or No. Can it be inferred from the premise that John owns deer? Answer: No\n Premise: < Susan has pineapple. Ronald has monkey. Dorothy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns pineapple? Answer: Yes\n", "ranges": [{"END": [44, 45], "A": [40, 42], "V": [7, 9], "Q": [37, 38], "K": [5, 6], "R": null, "K'": [[10, 14], [11, 15]], "V'": [[12, 16], [13, 18]], "example": [1, 46]}, {"END": [95, 96], "A": [90, 93], "V": [53, 56], "Q": [87, 88], "K": [51, 52], "R": null, "K'": [[57, 63], [59, 65]], "V'": [[60, 66], [62, 68]], "example": [47, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John has donkey. Daniel has car. Brian has deer. >. Answer with Yes or No. Can it be inferred from the premise that John owns deer? Answer: No\n Premise: < Susan has pineapple. Ronald has monkey. Dorothy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns monkey? Answer: No\n", "ranges": [{"END": [44, 45], "A": [40, 42], "V": [7, 9], "Q": [37, 38], "K": [5, 6], "R": null, "K'": [[10, 14], [11, 15]], "V'": [[12, 16], [13, 18]], "example": [1, 46]}, {"END": [94, 95], "A": [90, 92], "V": [53, 56], "Q": [87, 88], "K": [51, 52], "R": null, "K'": [[57, 63], [59, 65]], "V'": [[60, 66], [62, 68]], "example": [47, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol has cocktail. Barbara has papaya. Kimberly has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns cocktail? Answer: No\n Premise: < Ronald has underwear. William has peach. Mark has burger. >. Answer with Yes or No. Can it be inferred from the premise that William owns peach? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [45, 48], "V": [20, 21], "Q": [40, 43], "K": [16, 19], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[7, 13], [10, 15]], "example": [1, 52]}, {"END": [99, 100], "A": [95, 97], "V": [66, 68], "Q": [92, 93], "K": [64, 65], "R": null, "K'": [[57, 69], [59, 70]], "V'": [[60, 71], [63, 73]], "example": [53, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol has cocktail. Barbara has papaya. Kimberly has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns cocktail? Answer: No\n Premise: < Ronald has underwear. William has peach. Mark has burger. >. Answer with Yes or No. Can it be inferred from the premise that William owns underwear? Answer: No\n", "ranges": [{"END": [50, 51], "A": [45, 48], "V": [20, 21], "Q": [40, 43], "K": [16, 19], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[7, 13], [10, 15]], "example": [1, 52]}, {"END": [100, 101], "A": [95, 98], "V": [66, 68], "Q": [92, 93], "K": [64, 65], "R": null, "K'": [[57, 69], [59, 70]], "V'": [[60, 71], [63, 73]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin has mouse. Mary has horse. Kenneth has sweater. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns horse? Answer: Yes\n Premise: < Joseph has beer. Jeff has basketball. Laura has jersey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns basketball? Answer: Yes\n", "ranges": [{"END": [42, 43], "A": [39, 40], "V": [11, 12], "Q": [36, 37], "K": [9, 10], "R": null, "K'": [[5, 13], [6, 14]], "V'": [[7, 15], [8, 17]], "example": [1, 44]}, {"END": [88, 89], "A": [85, 86], "V": [56, 57], "Q": [82, 83], "K": [54, 55], "R": null, "K'": [[49, 58], [50, 59]], "V'": [[51, 60], [53, 63]], "example": [45, 90]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kevin has mouse. Mary has horse. Kenneth has sweater. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns horse? Answer: Yes\n Premise: < Joseph has beer. Jeff has basketball. Laura has jersey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns jersey? Answer: No\n", "ranges": [{"END": [42, 43], "A": [39, 40], "V": [11, 12], "Q": [36, 37], "K": [9, 10], "R": null, "K'": [[5, 13], [6, 14]], "V'": [[7, 15], [8, 17]], "example": [1, 44]}, {"END": [90, 91], "A": [85, 88], "V": [56, 57], "Q": [82, 83], "K": [54, 55], "R": null, "K'": [[49, 58], [50, 59]], "V'": [[51, 60], [53, 63]], "example": [45, 92]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard has jeep. Sharon has squirrel. Nancy has apple. >. Answer with Yes or No. Can it be inferred from the premise that Sharon owns jeep? Answer: No\n Premise: < Brian has cat. Michael has goat. George has car. >. Answer with Yes or No. Can it be inferred from the premise that Brian owns cat? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [13, 16], "Q": [39, 41], "K": [10, 12], "R": null, "K'": [[5, 17], [6, 18]], "V'": [[7, 19], [9, 20]], "example": [1, 49]}, {"END": [91, 92], "A": [88, 89], "V": [56, 57], "Q": [85, 86], "K": [54, 55], "R": null, "K'": [[58, 63], [59, 64]], "V'": [[60, 65], [62, 66]], "example": [50, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard has jeep. Sharon has squirrel. Nancy has apple. >. Answer with Yes or No. Can it be inferred from the premise that Sharon owns jeep? Answer: No\n Premise: < Brian has cat. Michael has goat. George has car. >. Answer with Yes or No. Can it be inferred from the premise that Brian owns goat? Answer: No\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [13, 16], "Q": [39, 41], "K": [10, 12], "R": null, "K'": [[5, 17], [6, 18]], "V'": [[7, 19], [9, 20]], "example": [1, 49]}, {"END": [92, 93], "A": [88, 90], "V": [56, 57], "Q": [85, 86], "K": [54, 55], "R": null, "K'": [[58, 63], [59, 64]], "V'": [[60, 65], [62, 66]], "example": [50, 94]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason has blackberries. Laura has steak. Dorothy has wolf. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns steak? Answer: Yes\n Premise: < Karen has goat. James has beer. Ronald has cat. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns goat? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [13, 15], "Q": [40, 41], "K": [11, 12], "R": null, "K'": [[5, 16], [6, 18]], "V'": [[7, 19], [10, 21]], "example": [1, 49]}, {"END": [96, 97], "A": [92, 94], "V": [57, 59], "Q": [88, 90], "K": [54, 56], "R": null, "K'": [[60, 65], [61, 67]], "V'": [[62, 68], [64, 69]], "example": [50, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jason has blackberries. Laura has steak. Dorothy has wolf. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns steak? Answer: Yes\n Premise: < Karen has goat. James has beer. Ronald has cat. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns beer? Answer: No\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [13, 15], "Q": [40, 41], "K": [11, 12], "R": null, "K'": [[5, 16], [6, 18]], "V'": [[7, 19], [10, 21]], "example": [1, 49]}, {"END": [96, 97], "A": [92, 94], "V": [57, 59], "Q": [88, 90], "K": [54, 56], "R": null, "K'": [[60, 65], [61, 67]], "V'": [[62, 68], [64, 69]], "example": [50, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa has whiskey. Michael has costume. Paul has pizza. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns costume? Answer: Yes\n Premise: < Donald has gun. Helen has car. George has grapes. >. Answer with Yes or No. Can it be inferred from the premise that George owns grapes? Answer: Yes\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [12, 14], "Q": [38, 39], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[7, 17], [9, 19]], "example": [1, 47]}, {"END": [92, 93], "A": [87, 90], "V": [62, 65], "Q": [84, 85], "K": [60, 61], "R": null, "K'": [[52, 56], [53, 57]], "V'": [[54, 58], [55, 59]], "example": [48, 94]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa has whiskey. Michael has costume. Paul has pizza. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns costume? Answer: Yes\n Premise: < Donald has gun. Helen has car. George has grapes. >. Answer with Yes or No. Can it be inferred from the premise that George owns car? Answer: No\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [12, 14], "Q": [38, 39], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[7, 17], [9, 19]], "example": [1, 47]}, {"END": [90, 91], "A": [87, 88], "V": [62, 65], "Q": [84, 85], "K": [60, 61], "R": null, "K'": [[52, 56], [53, 57]], "V'": [[54, 58], [55, 59]], "example": [48, 92]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah has peach. Richard has pistol. George has bread. >. Answer with Yes or No. Can it be inferred from the premise that George owns bread? Answer: Yes\n Premise: < Jeff has squirrel. Patricia has kiwi. Edward has plum. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns squirrel? Answer: Yes\n", "ranges": [{"END": [45, 46], "A": [42, 43], "V": [19, 20], "Q": [39, 40], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[9, 14], [11, 16]], "example": [1, 47]}, {"END": [96, 97], "A": [91, 94], "V": [54, 57], "Q": [88, 89], "K": [52, 53], "R": null, "K'": [[58, 65], [61, 66]], "V'": [[62, 67], [64, 69]], "example": [48, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Deborah has peach. Richard has pistol. George has bread. >. Answer with Yes or No. Can it be inferred from the premise that George owns bread? Answer: Yes\n Premise: < Jeff has squirrel. Patricia has kiwi. Edward has plum. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns kiwi? Answer: No\n", "ranges": [{"END": [45, 46], "A": [42, 43], "V": [19, 20], "Q": [39, 40], "K": [17, 18], "R": null, "K'": [[5, 12], [8, 13]], "V'": [[9, 14], [11, 16]], "example": [1, 47]}, {"END": [95, 96], "A": [91, 93], "V": [54, 57], "Q": [88, 89], "K": [52, 53], "R": null, "K'": [[58, 65], [61, 66]], "V'": [[62, 67], [64, 69]], "example": [48, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The rabbit is David's. The basketball is Sharon's. The plum is Barbara's. >. So Barbara owns plum\n < The spaghetti is Donna's. The plum is Michael's. The guitar is John's. >. So John owns guitar\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [19, 21], "Q": [29, 30], "K": [22, 23], "R": null, "K'": [[6, 13], [7, 15]], "V'": [[3, 11], [5, 12]], "example": [1, 34]}, {"END": [66, 67], "A": [67, 68], "V": [55, 56], "Q": [64, 65], "K": [57, 58], "R": null, "K'": [[41, 50], [43, 51]], "V'": [[37, 47], [40, 49]], "example": [35, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The juice is Anthony's. The whiskey is Deborah's. The wine is Donald's. >. So Anthony owns juice\n < The goat is John's. The motorcycle is Laura's. The guitar is Jeff's. >. So Laura owns motorcycle\n", "ranges": [{"END": [32, 33], "A": [33, 35], "V": [3, 5], "Q": [30, 31], "K": [6, 7], "R": null, "K'": [[14, 23], [17, 24]], "V'": [[11, 21], [13, 22]], "example": [1, 35]}, {"END": [65, 66], "A": [66, 68], "V": [46, 48], "Q": [63, 64], "K": [49, 50], "R": null, "K'": [[41, 56], [42, 57]], "V'": [[38, 54], [40, 55]], "example": [36, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The orange is Patricia's. The soda is Jeff's. The football is Margaret's. >. So Jeff owns soda\n < The tea is Michelle's. The baseball is Robert's. The sweater is Laura's. >. So Laura owns sweater\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [12, 14], "Q": [29, 30], "K": [15, 16], "R": null, "K'": [[5, 22], [8, 23]], "V'": [[3, 20], [4, 21]], "example": [1, 34]}, {"END": [64, 65], "A": [65, 67], "V": [52, 54], "Q": [62, 63], "K": [55, 56], "R": null, "K'": [[39, 47], [41, 48]], "V'": [[37, 45], [38, 46]], "example": [35, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jersey is Dorothy's. The underwear is Ronald's. The hamburger is Karen's. >. So Ronald owns underwear\n < The fox is Sharon's. The mosquito is Carol's. The vodka is Michael's. >. So Michael owns vodka\n", "ranges": [{"END": [38, 39], "A": [39, 42], "V": [13, 16], "Q": [35, 37], "K": [17, 19], "R": null, "K'": [[7, 27], [9, 29]], "V'": [[3, 23], [6, 26]], "example": [1, 42]}, {"END": [76, 77], "A": [77, 80], "V": [63, 66], "Q": [74, 75], "K": [67, 68], "R": null, "K'": [[48, 58], [50, 59]], "V'": [[45, 54], [47, 57]], "example": [43, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jeans is Robert's. The beetle is Sarah's. The blueberries is Ronald's. >. So Robert owns jeans\n < The gun is Deborah's. The strawberries is Daniel's. The cannon is Edward's. >. So Deborah owns gun\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [3, 5], "Q": [32, 33], "K": [6, 7], "R": null, "K'": [[15, 24], [16, 26]], "V'": [[11, 20], [14, 23]], "example": [1, 37]}, {"END": [73, 74], "A": [74, 75], "V": [40, 41], "Q": [69, 72], "K": [42, 45], "R": null, "K'": [[54, 62], [55, 63]], "V'": [[49, 59], [53, 61]], "example": [38, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The dog is Brian's. The jeans is Carol's. The pistol is Anthony's. >. So Carol owns jeans\n < The goat is George's. The uniform is Richard's. The fox is Karen's. >. So George owns goat\n", "ranges": [{"END": [30, 31], "A": [31, 33], "V": [10, 12], "Q": [28, 29], "K": [13, 14], "R": null, "K'": [[5, 21], [6, 22]], "V'": [[3, 18], [4, 20]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 67], "V": [36, 38], "Q": [62, 63], "K": [39, 40], "R": null, "K'": [[46, 54], [47, 56]], "V'": [[44, 51], [45, 53]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Jason's. The steak is Sharon's. The wolf is Elizabeth's. >. So Sharon owns steak\n < The lemon is Carol's. The goat is Kevin's. The violin is Karen's. >. So Karen owns violin\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [12, 14], "Q": [31, 33], "K": [15, 17], "R": null, "K'": [[7, 24], [8, 25]], "V'": [[3, 21], [6, 23]], "example": [1, 37]}, {"END": [70, 71], "A": [71, 73], "V": [56, 58], "Q": [67, 69], "K": [59, 61], "R": null, "K'": [[43, 51], [44, 52]], "V'": [[40, 48], [42, 50]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The shotgun is Maria's. The monkey is Kenneth's. The grapes is Linda's. >. So Maria owns shotgun\n < The burger is Jennifer's. The rabbit is Helen's. The blackberries is George's. >. So Jennifer owns burger\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [3, 5], "Q": [31, 32], "K": [6, 7], "R": null, "K'": [[14, 23], [15, 25]], "V'": [[11, 19], [13, 22]], "example": [1, 36]}, {"END": [70, 71], "A": [71, 73], "V": [39, 41], "Q": [67, 69], "K": [42, 44], "R": null, "K'": [[51, 60], [52, 61]], "V'": [[48, 56], [50, 59]], "example": [37, 73]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is David's. The basketball is Sharon's. The plum is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns rabbit? Answer: No\n Premise: < The spaghetti is Sarah's. The plum is Donna's. The guitar is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns guitar? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [22, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[9, 16], [10, 18]], "V'": [[6, 14], [8, 15]], "example": [1, 56]}, {"END": [110, 111], "A": [107, 108], "V": [80, 81], "Q": [104, 105], "K": [82, 83], "R": null, "K'": [[66, 74], [67, 76]], "V'": [[62, 71], [65, 73]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is David's. The basketball is Sharon's. The plum is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns rabbit? Answer: No\n Premise: < The spaghetti is Sarah's. The plum is Donna's. The guitar is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns plum? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [22, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[9, 16], [10, 18]], "V'": [[6, 14], [8, 15]], "example": [1, 56]}, {"END": [111, 112], "A": [107, 109], "V": [80, 81], "Q": [104, 105], "K": [82, 83], "R": null, "K'": [[66, 74], [67, 76]], "V'": [[62, 71], [65, 73]], "example": [57, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is John's. The car is Daniel's. The deer is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that John owns deer? Answer: No\n Premise: < The pineapple is Susan's. The monkey is Ronald's. The lemon is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns pineapple? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [6, 8], "Q": [46, 47], "K": [9, 10], "R": null, "K'": [[16, 24], [17, 25]], "V'": [[14, 21], [15, 23]], "example": [1, 55]}, {"END": [113, 114], "A": [108, 111], "V": [61, 64], "Q": [105, 106], "K": [65, 66], "R": null, "K'": [[73, 82], [75, 84]], "V'": [[70, 79], [72, 81]], "example": [56, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is John's. The car is Daniel's. The deer is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that John owns deer? Answer: No\n Premise: < The pineapple is Susan's. The monkey is Ronald's. The lemon is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns monkey? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [6, 8], "Q": [46, 47], "K": [9, 10], "R": null, "K'": [[16, 24], [17, 25]], "V'": [[14, 21], [15, 23]], "example": [1, 55]}, {"END": [112, 113], "A": [108, 110], "V": [61, 64], "Q": [105, 106], "K": [65, 66], "R": null, "K'": [[73, 82], [75, 84]], "V'": [[70, 79], [72, 81]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cocktail is Carol's. The papaya is Barbara's. The mouse is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns cocktail? Answer: No\n Premise: < The underwear is Ronald's. The peach is William's. The burger is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that William owns peach? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [54, 57], "V": [23, 24], "Q": [49, 52], "K": [25, 28], "R": null, "K'": [[10, 18], [11, 19]], "V'": [[6, 15], [9, 17]], "example": [1, 61]}, {"END": [117, 118], "A": [113, 115], "V": [77, 79], "Q": [110, 111], "K": [80, 81], "R": null, "K'": [[71, 88], [73, 89]], "V'": [[67, 85], [70, 87]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cocktail is Carol's. The papaya is Barbara's. The mouse is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns cocktail? Answer: No\n Premise: < The underwear is Ronald's. The peach is William's. The burger is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that William owns underwear? Answer: No\n", "ranges": [{"END": [59, 60], "A": [54, 57], "V": [23, 24], "Q": [49, 52], "K": [25, 28], "R": null, "K'": [[10, 18], [11, 19]], "V'": [[6, 15], [9, 17]], "example": [1, 61]}, {"END": [118, 119], "A": [113, 116], "V": [77, 79], "Q": [110, 111], "K": [80, 81], "R": null, "K'": [[71, 88], [73, 89]], "V'": [[67, 85], [70, 87]], "example": [62, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Kevin's. The horse is Mary's. The sweater is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns horse? Answer: Yes\n Premise: < The beer is Joseph's. The basketball is Jeff's. The jersey is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns basketball? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [45, 46], "K": [15, 16], "R": null, "K'": [[8, 23], [9, 24]], "V'": [[6, 20], [7, 22]], "example": [1, 53]}, {"END": [106, 107], "A": [103, 104], "V": [67, 68], "Q": [100, 101], "K": [69, 70], "R": null, "K'": [[62, 78], [63, 79]], "V'": [[59, 74], [61, 77]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Kevin's. The horse is Mary's. The sweater is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns horse? Answer: Yes\n Premise: < The beer is Joseph's. The basketball is Jeff's. The jersey is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns jersey? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [45, 46], "K": [15, 16], "R": null, "K'": [[8, 23], [9, 24]], "V'": [[6, 20], [7, 22]], "example": [1, 53]}, {"END": [108, 109], "A": [103, 106], "V": [67, 68], "Q": [100, 101], "K": [69, 70], "R": null, "K'": [[62, 78], [63, 79]], "V'": [[59, 74], [61, 77]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Richard's. The squirrel is Sharon's. The apple is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that Sharon owns jeep? Answer: No\n Premise: < The cat is Brian's. The goat is Michael's. The car is George's. >. Answer with Yes or No. Can it be inferred from the premise that Brian owns cat? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [14, 17], "Q": [48, 50], "K": [18, 20], "R": null, "K'": [[9, 26], [10, 27]], "V'": [[6, 24], [8, 25]], "example": [1, 58]}, {"END": [109, 110], "A": [106, 107], "V": [64, 65], "Q": [103, 104], "K": [66, 67], "R": null, "K'": [[74, 81], [75, 82]], "V'": [[71, 79], [73, 80]], "example": [59, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Richard's. The squirrel is Sharon's. The apple is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that Sharon owns jeep? Answer: No\n Premise: < The cat is Brian's. The goat is Michael's. The car is George's. >. Answer with Yes or No. Can it be inferred from the premise that Brian owns goat? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [14, 17], "Q": [48, 50], "K": [18, 20], "R": null, "K'": [[9, 26], [10, 27]], "V'": [[6, 24], [8, 25]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [64, 65], "Q": [103, 104], "K": [66, 67], "R": null, "K'": [[74, 81], [75, 82]], "V'": [[71, 79], [73, 80]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Jason's. The steak is Laura's. The wolf is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns steak? Answer: Yes\n Premise: < The goat is Karen's. The beer is James's. The cat is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns goat? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [15, 17], "Q": [49, 50], "K": [18, 19], "R": null, "K'": [[10, 26], [11, 28]], "V'": [[6, 23], [9, 25]], "example": [1, 58]}, {"END": [114, 115], "A": [110, 112], "V": [64, 66], "Q": [106, 108], "K": [67, 69], "R": null, "K'": [[76, 83], [77, 85]], "V'": [[73, 81], [75, 82]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Jason's. The steak is Laura's. The wolf is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns steak? Answer: Yes\n Premise: < The goat is Karen's. The beer is James's. The cat is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns beer? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [15, 17], "Q": [49, 50], "K": [18, 19], "R": null, "K'": [[10, 26], [11, 28]], "V'": [[6, 23], [9, 25]], "example": [1, 58]}, {"END": [114, 115], "A": [110, 112], "V": [64, 66], "Q": [106, 108], "K": [67, 69], "R": null, "K'": [[76, 83], [77, 85]], "V'": [[73, 81], [75, 82]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Lisa's. The costume is Michael's. The pizza is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns costume? Answer: Yes\n Premise: < The gun is Donald's. The car is Helen's. The grapes is George's. >. Answer with Yes or No. Can it be inferred from the premise that George owns grapes? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [14, 16], "Q": [47, 48], "K": [17, 18], "R": null, "K'": [[9, 25], [10, 26]], "V'": [[6, 22], [8, 24]], "example": [1, 56]}, {"END": [110, 111], "A": [105, 108], "V": [76, 79], "Q": [102, 103], "K": [80, 81], "R": null, "K'": [[64, 71], [65, 72]], "V'": [[62, 69], [63, 70]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Lisa's. The costume is Michael's. The pizza is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns costume? Answer: Yes\n Premise: < The gun is Donald's. The car is Helen's. The grapes is George's. >. Answer with Yes or No. Can it be inferred from the premise that George owns car? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [14, 16], "Q": [47, 48], "K": [17, 18], "R": null, "K'": [[9, 25], [10, 26]], "V'": [[6, 22], [8, 24]], "example": [1, 56]}, {"END": [108, 109], "A": [105, 106], "V": [76, 79], "Q": [102, 103], "K": [80, 81], "R": null, "K'": [[64, 71], [65, 72]], "V'": [[62, 69], [63, 70]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The peach is Deborah's. The pistol is Richard's. The bread is George's. >. Answer with Yes or No. Can it be inferred from the premise that George owns bread? Answer: Yes\n Premise: < The squirrel is Jeff's. The kiwi is Patricia's. The plum is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns squirrel? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [51, 52], "V": [24, 25], "Q": [48, 49], "K": [26, 27], "R": null, "K'": [[9, 19], [12, 20]], "V'": [[6, 16], [8, 18]], "example": [1, 56]}, {"END": [114, 115], "A": [109, 112], "V": [62, 65], "Q": [106, 107], "K": [66, 67], "R": null, "K'": [[74, 84], [77, 85]], "V'": [[71, 81], [73, 83]], "example": [57, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The peach is Deborah's. The pistol is Richard's. The bread is George's. >. Answer with Yes or No. Can it be inferred from the premise that George owns bread? Answer: Yes\n Premise: < The squirrel is Jeff's. The kiwi is Patricia's. The plum is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff owns kiwi? Answer: No\n", "ranges": [{"END": [54, 55], "A": [51, 52], "V": [24, 25], "Q": [48, 49], "K": [26, 27], "R": null, "K'": [[9, 19], [12, 20]], "V'": [[6, 16], [8, 18]], "example": [1, 56]}, {"END": [113, 114], "A": [109, 111], "V": [62, 65], "Q": [106, 107], "K": [66, 67], "R": null, "K'": [[74, 84], [77, 85]], "V'": [[71, 81], [73, 83]], "example": [57, 115]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< George has papaya. Barbara has plum. Barbara has fox. >. Barbara does not own papaya\n < Mary has lemon. Christopher has cherries. Christopher has taxi. >. Christopher does not own lemon\n", "ranges": [{"END": [22, 23], "A'": [23, 25], "V'": [4, 6], "Q": [19, 20], "K'": [2, 3], "R": [21, 22], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 16]], "example": [1, 25]}, {"END": [47, 48], "A'": [48, 50], "V'": [29, 31], "Q": [44, 45], "K'": [27, 28], "R": [46, 47], "K": [[32, 37], [33, 38]], "V": [[34, 39], [36, 41]], "example": [26, 50]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly has rabbit. Kimberly has wine. Steven has squirrel. >. Kimberly does not own squirrel\n < Donald has juice. Kimberly has gun. Donald has cat. >. Donald does not own gun\n", "ranges": [{"END": [28, 29], "A'": [29, 32], "V'": [17, 20], "Q": [23, 26], "K'": [15, 16], "R": [27, 28], "K": [[2, 9], [5, 12]], "V": [[6, 13], [8, 14]], "example": [1, 32]}, {"END": [54, 55], "A'": [55, 56], "V'": [43, 44], "Q": [51, 52], "K'": [39, 42], "R": [53, 54], "K": [[34, 45], [35, 46]], "V": [[36, 47], [38, 48]], "example": [33, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Dorothy has cat. Christopher has rabbit. Christopher has cocktail. >. Christopher does not own cat\n < Robert has violin. Susan has uniform. Robert has baseball. >. Robert does not own uniform\n", "ranges": [{"END": [23, 24], "A'": [24, 25], "V'": [5, 6], "Q": [20, 21], "K'": [2, 4], "R": [22, 23], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 17]], "example": [1, 25]}, {"END": [45, 46], "A'": [46, 47], "V'": [34, 35], "Q": [42, 43], "K'": [32, 33], "R": [44, 45], "K": [[27, 36], [28, 37]], "V": [[29, 38], [31, 39]], "example": [26, 47]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Jeff has tea. Jeff has baseball. Donna has bus. >. Jeff does not own bus\n < Kenneth has taxi. Mary has peach. Mary has costume. >. Mary does not own taxi\n", "ranges": [{"END": [20, 21], "A'": [21, 22], "V'": [13, 14], "Q": [17, 18], "K'": [10, 12], "R": [19, 20], "K": [[2, 6], [3, 7]], "V": [[4, 8], [5, 9]], "example": [1, 22]}, {"END": [44, 45], "A'": [45, 47], "V'": [26, 28], "Q": [41, 42], "K'": [24, 25], "R": [43, 44], "K": [[29, 34], [30, 35]], "V": [[31, 36], [33, 38]], "example": [23, 47]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Kenneth has T-shirt. Kenneth has pizza. Nancy has bee. >. Kenneth does not own bee\n < Nancy has mouse. Michael has horse. Nancy has sweater. >. Nancy does not own horse\n", "ranges": [{"END": [24, 25], "A'": [25, 27], "V'": [16, 18], "Q": [21, 22], "K'": [14, 15], "R": [23, 24], "K": [[2, 9], [3, 10]], "V": [[4, 11], [8, 13]], "example": [1, 27]}, {"END": [47, 48], "A'": [48, 49], "V'": [35, 36], "Q": [44, 45], "K'": [33, 34], "R": [46, 47], "K": [[29, 37], [30, 38]], "V": [[31, 39], [32, 41]], "example": [28, 49]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Carol has elephant. Carol has baseball. Kevin has jeep. >. Carol does not own jeep\n < Lisa has rabbit. Lisa has cannon. John has strawberries. >. Lisa does not own strawberries\n", "ranges": [{"END": [22, 23], "A'": [23, 25], "V'": [14, 16], "Q": [19, 20], "K'": [12, 13], "R": [21, 22], "K": [[2, 8], [3, 9]], "V": [[4, 10], [7, 11]], "example": [1, 25]}, {"END": [49, 50], "A'": [50, 54], "V'": [39, 43], "Q": [46, 47], "K'": [37, 38], "R": [48, 49], "K": [[27, 32], [28, 33]], "V": [[29, 34], [31, 36]], "example": [26, 54]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Deborah has dog. Deborah has elephant. Joseph has tea. >. Deborah does not own tea\n < Michael has car. Ruth has pistol. Michael has deer. >. Michael does not own pistol\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [18, 19], "Q": [22, 25], "K'": [16, 17], "R": [26, 27], "K": [[2, 8], [5, 11]], "V": [[6, 12], [7, 15]], "example": [1, 29]}, {"END": [50, 51], "A'": [51, 53], "V'": [37, 39], "Q": [47, 48], "K'": [35, 36], "R": [49, 50], "K": [[31, 40], [32, 41]], "V": [[33, 42], [34, 44]], "example": [30, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Steven has baseball. Carol has apricot. Carol has burger. >. Carol does not own baseball\n < Daniel has jeans. Daniel has bus. Nancy has beer. >. Daniel does not own beer\n", "ranges": [{"END": [22, 23], "A'": [23, 24], "V'": [4, 5], "Q": [19, 20], "K'": [2, 3], "R": [21, 22], "K": [[6, 12], [7, 13]], "V": [[8, 14], [11, 16]], "example": [1, 24]}, {"END": [45, 46], "A'": [46, 48], "V'": [37, 39], "Q": [42, 43], "K'": [35, 36], "R": [44, 45], "K": [[26, 31], [27, 32]], "V": [[28, 33], [30, 34]], "example": [25, 48]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George has papaya. Barbara has plum. Barbara has fox. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own papaya? Answer: Yes\n Premise: < Lisa has grenade. David has cherries. David has taxi. >. Answer with Yes or No. Can it be inferred from the premise that David does not own grenade? Answer: Yes\n", "ranges": [{"END": [46, 47], "A'": [42, 44], "V'": [7, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[12, 17], [14, 19]], "example": [1, 48]}, {"END": [96, 97], "A'": [91, 94], "V'": [55, 58], "Q": [87, 88], "K'": [53, 54], "R": [89, 90], "K": [[59, 64], [60, 65]], "V": [[61, 66], [63, 68]], "example": [49, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George has papaya. Barbara has plum. Barbara has fox. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own papaya? Answer: Yes\n Premise: < Lisa has grenade. David has cherries. David has taxi. >. Answer with Yes or No. Can it be inferred from the premise that David does not own cherries? Answer: No\n", "ranges": [{"END": [46, 47], "A'": [42, 44], "V'": [7, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[12, 17], [14, 19]], "example": [1, 48]}, {"END": [95, 96], "A'": [91, 93], "V'": [55, 58], "Q": [87, 88], "K'": [53, 54], "R": [89, 90], "K": [[59, 64], [60, 65]], "V": [[61, 66], [63, 68]], "example": [49, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria has rabbit. Anthony has cocktail. Anthony has monkey. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own rabbit? Answer: Yes\n Premise: < Dorothy has bus. Kevin has juice. Dorothy has pineapple. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own juice? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [7, 9], "Q": [39, 40], "K'": [5, 6], "R": [41, 42], "K": [[10, 16], [11, 17]], "V": [[12, 18], [15, 20]], "example": [1, 49]}, {"END": [98, 99], "A'": [94, 96], "V'": [61, 63], "Q": [89, 91], "K'": [59, 60], "R": [92, 93], "K": [[54, 64], [56, 66]], "V": [[57, 67], [58, 70]], "example": [50, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Maria has rabbit. Anthony has cocktail. Anthony has monkey. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own rabbit? Answer: Yes\n Premise: < Dorothy has bus. Kevin has juice. Dorothy has pineapple. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own bus? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [7, 9], "Q": [39, 40], "K'": [5, 6], "R": [41, 42], "K": [[10, 16], [11, 17]], "V": [[12, 18], [15, 20]], "example": [1, 49]}, {"END": [97, 98], "A'": [94, 95], "V'": [61, 63], "Q": [89, 91], "K'": [59, 60], "R": [92, 93], "K": [[54, 64], [56, 66]], "V": [[57, 67], [58, 70]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff has juice. Donna has vodka. Jeff has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own juice? Answer: No\n Premise: < Laura has durian. Laura has jersey. Brian has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own handgun? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [44, 46], "V'": [13, 16], "Q": [40, 41], "K'": [10, 12], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 21]], "example": [1, 50]}, {"END": [97, 98], "A'": [93, 95], "V'": [68, 70], "Q": [89, 90], "K'": [66, 67], "R": [91, 92], "K": [[55, 60], [56, 61]], "V": [[57, 62], [59, 65]], "example": [51, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff has juice. Donna has vodka. Jeff has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own juice? Answer: No\n Premise: < Laura has durian. Laura has jersey. Brian has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own durian? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [44, 46], "V'": [13, 16], "Q": [40, 41], "K'": [10, 12], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 21]], "example": [1, 50]}, {"END": [97, 98], "A'": [93, 95], "V'": [68, 70], "Q": [89, 90], "K'": [66, 67], "R": [91, 92], "K": [[55, 60], [56, 61]], "V": [[57, 62], [59, 65]], "example": [51, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan has jersey. Donald has underwear. Susan has hamburger. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own underwear? Answer: Yes\n Premise: < Helen has burger. Helen has T-shirt. Mark has shirt. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not own shirt? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [45, 48], "V'": [13, 16], "Q": [41, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 17], [6, 18]], "V": [[7, 19], [10, 22]], "example": [1, 52]}, {"END": [100, 101], "A'": [96, 98], "V'": [71, 73], "Q": [92, 93], "K'": [69, 70], "R": [94, 95], "K": [[57, 62], [58, 63]], "V": [[59, 64], [61, 68]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Susan has jersey. Donald has underwear. Susan has hamburger. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own underwear? Answer: Yes\n Premise: < Helen has burger. Helen has T-shirt. Mark has shirt. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not own burger? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [45, 48], "V'": [13, 16], "Q": [41, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 17], [6, 18]], "V": [[7, 19], [10, 22]], "example": [1, 52]}, {"END": [100, 101], "A'": [96, 98], "V'": [71, 73], "Q": [92, 93], "K'": [69, 70], "R": [94, 95], "K": [[57, 62], [58, 63]], "V": [[59, 64], [61, 68]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has jacket. Steven has cocktail. Ruth has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own shotgun? Answer: No\n Premise: < Deborah has mouse. William has pineapple. Deborah has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not own pineapple? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [12, 15], "Q": [39, 40], "K'": [10, 11], "R": [41, 42], "K": [[5, 16], [6, 17]], "V": [[7, 18], [9, 20]], "example": [1, 49]}, {"END": [102, 103], "A'": [97, 100], "V'": [62, 65], "Q": [91, 94], "K'": [60, 61], "R": [95, 96], "K": [[54, 66], [57, 69]], "V": [[58, 70], [59, 72]], "example": [50, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has jacket. Steven has cocktail. Ruth has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own shotgun? Answer: No\n Premise: < Deborah has mouse. William has pineapple. Deborah has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not own mouse? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [12, 15], "Q": [39, 40], "K'": [10, 11], "R": [41, 42], "K": [[5, 16], [6, 17]], "V": [[7, 18], [9, 20]], "example": [1, 49]}, {"END": [100, 101], "A'": [97, 98], "V'": [62, 65], "Q": [91, 94], "K'": [60, 61], "R": [95, 96], "K": [[54, 66], [57, 69]], "V": [[58, 70], [59, 72]], "example": [50, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony has tea. Anthony has jacket. Susan has car. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own jacket? Answer: No\n Premise: < Jennifer has cat. Michael has revolver. Michael has goat. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own cat? Answer: Yes\n", "ranges": [{"END": [44, 45], "A'": [40, 42], "V'": [16, 17], "Q": [36, 37], "K'": [14, 15], "R": [38, 39], "K": [[5, 9], [6, 10]], "V": [[7, 11], [8, 13]], "example": [1, 46]}, {"END": [91, 92], "A'": [88, 89], "V'": [54, 55], "Q": [84, 85], "K'": [51, 53], "R": [86, 87], "K": [[56, 61], [57, 62]], "V": [[58, 63], [60, 65]], "example": [47, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Anthony has tea. Anthony has jacket. Susan has car. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own jacket? Answer: No\n Premise: < Jennifer has cat. Michael has revolver. Michael has goat. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own revolver? Answer: No\n", "ranges": [{"END": [44, 45], "A'": [40, 42], "V'": [16, 17], "Q": [36, 37], "K'": [14, 15], "R": [38, 39], "K": [[5, 9], [6, 10]], "V": [[7, 11], [8, 13]], "example": [1, 46]}, {"END": [92, 93], "A'": [88, 90], "V'": [54, 55], "Q": [84, 85], "K'": [51, 53], "R": [86, 87], "K": [[56, 61], [57, 62]], "V": [[58, 63], [60, 65]], "example": [47, 94]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff has cherries. Laura has bread. Laura has football. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own cherries? Answer: Yes\n Premise: < Michael has jeans. Nancy has dog. Michael has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own dog? Answer: Yes\n", "ranges": [{"END": [44, 45], "A'": [40, 42], "V'": [7, 9], "Q": [36, 37], "K'": [5, 6], "R": [38, 39], "K": [[10, 14], [11, 15]], "V": [[12, 16], [13, 17]], "example": [1, 46]}, {"END": [90, 91], "A'": [87, 88], "V'": [58, 59], "Q": [83, 84], "K'": [56, 57], "R": [85, 86], "K": [[51, 60], [52, 61]], "V": [[53, 62], [55, 64]], "example": [47, 92]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Jeff has cherries. Laura has bread. Laura has football. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own cherries? Answer: Yes\n Premise: < Michael has jeans. Nancy has dog. Michael has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own jeans? Answer: No\n", "ranges": [{"END": [44, 45], "A'": [40, 42], "V'": [7, 9], "Q": [36, 37], "K'": [5, 6], "R": [38, 39], "K": [[10, 14], [11, 15]], "V": [[12, 16], [13, 17]], "example": [1, 46]}, {"END": [91, 92], "A'": [87, 89], "V'": [58, 59], "Q": [83, 84], "K'": [56, 57], "R": [85, 86], "K": [[51, 60], [52, 61]], "V": [[53, 62], [55, 64]], "example": [47, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has rifle. Donna has peach. Michael has shirt. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own peach? Answer: Yes\n Premise: < Dorothy has pizza. Richard has horse. Richard has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not own pizza? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [13, 15], "Q": [39, 40], "K'": [10, 12], "R": [41, 42], "K": [[5, 16], [6, 17]], "V": [[7, 18], [9, 20]], "example": [1, 49]}, {"END": [95, 96], "A'": [91, 93], "V'": [57, 59], "Q": [87, 88], "K'": [54, 56], "R": [89, 90], "K": [[60, 64], [61, 65]], "V": [[62, 66], [63, 68]], "example": [50, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has rifle. Donna has peach. Michael has shirt. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own peach? Answer: Yes\n Premise: < Dorothy has pizza. Richard has horse. Richard has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not own horse? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [13, 15], "Q": [39, 40], "K'": [10, 12], "R": [41, 42], "K": [[5, 16], [6, 17]], "V": [[7, 18], [9, 20]], "example": [1, 49]}, {"END": [94, 95], "A'": [91, 92], "V'": [57, 59], "Q": [87, 88], "K'": [54, 56], "R": [89, 90], "K": [[60, 64], [61, 65]], "V": [[62, 66], [63, 68]], "example": [50, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The papaya is George's. The plum is Barbara's. The fox is Barbara's. >. Barbara does not own papaya\n < The lemon is Mary's. The cherries is Christopher's. The taxi is Christopher's. >. Christopher does not own lemon\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [3, 5], "Q": [28, 29], "K'": [6, 7], "R": [30, 31], "K": [[14, 22], [15, 23]], "V": [[11, 19], [13, 21]], "example": [1, 34]}, {"END": [65, 66], "A'": [66, 68], "V'": [37, 39], "Q": [62, 63], "K'": [40, 41], "R": [64, 65], "K": [[48, 56], [49, 57]], "V": [[45, 53], [47, 55]], "example": [35, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The rabbit is Kimberly's. The wine is Kimberly's. The squirrel is Steven's. >. Kimberly does not own squirrel\n < The juice is Donald's. The gun is Kimberly's. The cat is Donald's. >. Donald does not own gun\n", "ranges": [{"END": [37, 38], "A'": [38, 41], "V'": [22, 25], "Q": [32, 35], "K'": [26, 27], "R": [36, 37], "K": [[6, 15], [9, 18]], "V": [[3, 13], [5, 14]], "example": [1, 41]}, {"END": [72, 73], "A'": [73, 74], "V'": [52, 53], "Q": [69, 70], "K'": [54, 57], "R": [71, 72], "K": [[47, 63], [48, 64]], "V": [[44, 61], [46, 62]], "example": [42, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The cat is Dorothy's. The rabbit is Christopher's. The cocktail is Christopher's. >. Christopher does not own cat\n < The violin is Robert's. The uniform is Susan's. The baseball is Robert's. >. Robert does not own uniform\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [3, 4], "Q": [29, 30], "K'": [5, 7], "R": [31, 32], "K": [[14, 23], [15, 24]], "V": [[11, 19], [13, 22]], "example": [1, 34]}, {"END": [63, 64], "A'": [64, 65], "V'": [45, 46], "Q": [60, 61], "K'": [47, 48], "R": [62, 63], "K": [[40, 54], [41, 55]], "V": [[37, 52], [39, 53]], "example": [35, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The tea is Jeff's. The baseball is Jeff's. The bus is Donna's. >. Jeff does not own bus\n < The taxi is Kenneth's. The peach is Mary's. The costume is Mary's. >. Mary does not own taxi\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [17, 18], "Q": [26, 27], "K'": [19, 21], "R": [28, 29], "K": [[5, 12], [6, 13]], "V": [[3, 10], [4, 11]], "example": [1, 31]}, {"END": [62, 63], "A'": [63, 65], "V'": [34, 36], "Q": [59, 60], "K'": [37, 38], "R": [61, 62], "K": [[45, 53], [46, 54]], "V": [[42, 50], [44, 52]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< T-shirt is Kenneth's. The pizza is Kenneth's. The bee is Nancy's. >. Kenneth does not own bee\n < The mouse is Nancy's. The horse is Michael's. The sweater is Nancy's. >. Nancy does not own horse\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [20, 22], "Q": [29, 30], "K'": [23, 24], "R": [31, 32], "K": [[7, 15], [8, 16]], "V": [[2, 12], [6, 14]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 66], "V'": [45, 46], "Q": [61, 62], "K'": [47, 48], "R": [63, 64], "K": [[40, 55], [41, 56]], "V": [[38, 52], [39, 54]], "example": [36, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The elephant is Carol's. The baseball is Carol's. The jeep is Kevin's. >. Carol does not own jeep\n < The rabbit is Lisa's. The cannon is Lisa's. The strawberries is John's. >. Lisa does not own strawberries\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [19, 21], "Q": [28, 29], "K'": [22, 23], "R": [30, 31], "K": [[7, 14], [8, 15]], "V": [[3, 12], [6, 13]], "example": [1, 34]}, {"END": [67, 68], "A'": [68, 72], "V'": [53, 57], "Q": [64, 65], "K'": [58, 59], "R": [66, 67], "K": [[40, 48], [41, 49]], "V": [[37, 45], [39, 47]], "example": [35, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The dog is Deborah's. The elephant is Deborah's. The tea is Joseph's. >. Deborah does not own tea\n < The car is Michael's. The pistol is Ruth's. The deer is Michael's. >. Michael does not own pistol\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [23, 24], "Q": [31, 34], "K'": [25, 26], "R": [35, 36], "K": [[5, 16], [8, 19]], "V": [[3, 12], [4, 15]], "example": [1, 38]}, {"END": [68, 69], "A'": [69, 71], "V'": [48, 50], "Q": [65, 66], "K'": [51, 52], "R": [67, 68], "K": [[43, 59], [44, 60]], "V": [[41, 56], [42, 58]], "example": [39, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The baseball is Steven's. The apricot is Carol's. The burger is Carol's. >. Carol does not own baseball\n < The jeans is Daniel's. The bus is Daniel's. The beer is Nancy's. >. Daniel does not own beer\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [3, 4], "Q": [28, 29], "K'": [5, 6], "R": [30, 31], "K": [[14, 22], [15, 23]], "V": [[10, 19], [13, 21]], "example": [1, 33]}, {"END": [63, 64], "A'": [64, 66], "V'": [51, 53], "Q": [60, 61], "K'": [54, 55], "R": [62, 63], "K": [[39, 46], [40, 47]], "V": [[36, 44], [38, 45]], "example": [34, 66]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The papaya is George's. The plum is Barbara's. The fox is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own papaya? Answer: Yes\n Premise: < The grenade is Lisa's. The cherries is David's. The taxi is David's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own grenade? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [6, 8], "Q": [47, 48], "K'": [9, 10], "R": [49, 50], "K": [[17, 25], [18, 26]], "V": [[14, 22], [16, 24]], "example": [1, 57]}, {"END": [114, 115], "A'": [109, 112], "V'": [63, 66], "Q": [105, 106], "K'": [67, 68], "R": [107, 108], "K": [[75, 83], [76, 84]], "V": [[72, 80], [74, 82]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The papaya is George's. The plum is Barbara's. The fox is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own papaya? Answer: Yes\n Premise: < The grenade is Lisa's. The cherries is David's. The taxi is David's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own cherries? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [6, 8], "Q": [47, 48], "K'": [9, 10], "R": [49, 50], "K": [[17, 25], [18, 26]], "V": [[14, 22], [16, 24]], "example": [1, 57]}, {"END": [113, 114], "A'": [109, 111], "V'": [63, 66], "Q": [105, 106], "K'": [67, 68], "R": [107, 108], "K": [[75, 83], [76, 84]], "V": [[72, 80], [74, 82]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Maria's. The cocktail is Anthony's. The monkey is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own rabbit? Answer: Yes\n Premise: < The bus is Dorothy's. The juice is Kevin's. The pineapple is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own juice? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [6, 8], "Q": [48, 49], "K'": [9, 10], "R": [50, 51], "K": [[18, 26], [19, 27]], "V": [[14, 23], [17, 25]], "example": [1, 58]}, {"END": [116, 117], "A'": [112, 114], "V'": [72, 74], "Q": [107, 109], "K'": [75, 76], "R": [110, 111], "K": [[66, 84], [68, 86]], "V": [[64, 80], [65, 83]], "example": [59, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Maria's. The cocktail is Anthony's. The monkey is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own rabbit? Answer: Yes\n Premise: < The bus is Dorothy's. The juice is Kevin's. The pineapple is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own bus? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [6, 8], "Q": [48, 49], "K'": [9, 10], "R": [50, 51], "K": [[18, 26], [19, 27]], "V": [[14, 23], [17, 25]], "example": [1, 58]}, {"END": [115, 116], "A'": [112, 113], "V'": [72, 74], "Q": [107, 109], "K'": [75, 76], "R": [110, 111], "K": [[66, 84], [68, 86]], "V": [[64, 80], [65, 83]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The juice is Jeff's. The vodka is Donna's. The whiskey is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own juice? Answer: No\n Premise: < The durian is Laura's. The jersey is Laura's. The handgun is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own handgun? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [14, 17], "Q": [49, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 27], [10, 28]], "V": [[6, 24], [8, 26]], "example": [1, 59]}, {"END": [115, 116], "A'": [111, 113], "V'": [82, 84], "Q": [107, 108], "K'": [85, 86], "R": [109, 110], "K": [[68, 77], [69, 78]], "V": [[65, 73], [67, 76]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The juice is Jeff's. The vodka is Donna's. The whiskey is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own juice? Answer: No\n Premise: < The durian is Laura's. The jersey is Laura's. The handgun is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own durian? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [14, 17], "Q": [49, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 27], [10, 28]], "V": [[6, 24], [8, 26]], "example": [1, 59]}, {"END": [115, 116], "A'": [111, 113], "V'": [82, 84], "Q": [107, 108], "K'": [85, 86], "R": [109, 110], "K": [[68, 77], [69, 78]], "V": [[65, 73], [67, 76]], "example": [60, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jersey is Susan's. The underwear is Donald's. The hamburger is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own underwear? Answer: Yes\n Premise: < The burger is Helen's. T-shirt is Helen's. The shirt is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not own shirt? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [15, 18], "Q": [50, 51], "K'": [19, 20], "R": [52, 53], "K": [[10, 28], [11, 29]], "V": [[6, 24], [9, 27]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [84, 86], "Q": [109, 110], "K'": [87, 88], "R": [111, 112], "K": [[70, 79], [71, 80]], "V": [[67, 74], [69, 78]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jersey is Susan's. The underwear is Donald's. The hamburger is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own underwear? Answer: Yes\n Premise: < The burger is Helen's. T-shirt is Helen's. The shirt is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Helen does not own burger? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [15, 18], "Q": [50, 51], "K'": [19, 20], "R": [52, 53], "K": [[10, 28], [11, 29]], "V": [[6, 24], [9, 27]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [84, 86], "Q": [109, 110], "K'": [87, 88], "R": [111, 112], "K": [[70, 79], [71, 80]], "V": [[67, 74], [69, 78]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Ruth's. The cocktail is Steven's. The shotgun is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own shotgun? Answer: No\n Premise: < The mouse is Deborah's. The pineapple is William's. The handgun is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not own pineapple? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 17], "Q": [48, 49], "K'": [18, 19], "R": [50, 51], "K": [[9, 26], [10, 27]], "V": [[6, 23], [8, 25]], "example": [1, 58]}, {"END": [120, 121], "A'": [115, 118], "V'": [73, 76], "Q": [109, 112], "K'": [77, 78], "R": [113, 114], "K": [[66, 85], [69, 88]], "V": [[64, 82], [65, 84]], "example": [59, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Ruth's. The cocktail is Steven's. The shotgun is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own shotgun? Answer: No\n Premise: < The mouse is Deborah's. The pineapple is William's. The handgun is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that Deborah does not own mouse? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 17], "Q": [48, 49], "K'": [18, 19], "R": [50, 51], "K": [[9, 26], [10, 27]], "V": [[6, 23], [8, 25]], "example": [1, 58]}, {"END": [118, 119], "A'": [115, 116], "V'": [73, 76], "Q": [109, 112], "K'": [77, 78], "R": [113, 114], "K": [[66, 85], [69, 88]], "V": [[64, 82], [65, 84]], "example": [59, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Anthony's. The jacket is Anthony's. The car is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own jacket? Answer: No\n Premise: < The cat is Jennifer's. The revolver is Michael's. The goat is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own cat? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [21, 22], "Q": [45, 46], "K'": [23, 24], "R": [47, 48], "K": [[8, 16], [9, 17]], "V": [[6, 13], [7, 15]], "example": [1, 55]}, {"END": [109, 110], "A'": [106, 107], "V'": [61, 62], "Q": [102, 103], "K'": [63, 65], "R": [104, 105], "K": [[72, 80], [73, 81]], "V": [[69, 77], [71, 79]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Anthony's. The jacket is Anthony's. The car is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony does not own jacket? Answer: No\n Premise: < The cat is Jennifer's. The revolver is Michael's. The goat is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own revolver? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [21, 22], "Q": [45, 46], "K'": [23, 24], "R": [47, 48], "K": [[8, 16], [9, 17]], "V": [[6, 13], [7, 15]], "example": [1, 55]}, {"END": [110, 111], "A'": [106, 108], "V'": [61, 62], "Q": [102, 103], "K'": [63, 65], "R": [104, 105], "K": [[72, 80], [73, 81]], "V": [[69, 77], [71, 79]], "example": [56, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cherries is Jeff's. The bread is Laura's. The football is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own cherries? Answer: Yes\n Premise: < The jeans is Michael's. The dog is Nancy's. The lemon is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own dog? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [6, 8], "Q": [45, 46], "K'": [9, 10], "R": [47, 48], "K": [[16, 23], [17, 24]], "V": [[14, 21], [15, 22]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [69, 70], "Q": [101, 102], "K'": [71, 72], "R": [103, 104], "K": [[64, 79], [65, 80]], "V": [[61, 76], [63, 78]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cherries is Jeff's. The bread is Laura's. The football is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own cherries? Answer: Yes\n Premise: < The jeans is Michael's. The dog is Nancy's. The lemon is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own jeans? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [6, 8], "Q": [45, 46], "K'": [9, 10], "R": [47, 48], "K": [[16, 23], [17, 24]], "V": [[14, 21], [15, 22]], "example": [1, 55]}, {"END": [109, 110], "A'": [105, 107], "V'": [69, 70], "Q": [101, 102], "K'": [71, 72], "R": [103, 104], "K": [[64, 79], [65, 80]], "V": [[61, 76], [63, 78]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rifle is Michael's. The peach is Donna's. The shirt is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own peach? Answer: Yes\n Premise: < The pizza is Dorothy's. The horse is Richard's. The shotgun is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not own pizza? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 16], "Q": [48, 49], "K'": [17, 19], "R": [50, 51], "K": [[9, 26], [10, 27]], "V": [[6, 23], [8, 25]], "example": [1, 58]}, {"END": [113, 114], "A'": [109, 111], "V'": [64, 66], "Q": [105, 106], "K'": [67, 69], "R": [107, 108], "K": [[75, 83], [76, 84]], "V": [[73, 80], [74, 82]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rifle is Michael's. The peach is Donna's. The shirt is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own peach? Answer: Yes\n Premise: < The pizza is Dorothy's. The horse is Richard's. The shotgun is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Richard does not own horse? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 16], "Q": [48, 49], "K'": [17, 19], "R": [50, 51], "K": [[9, 26], [10, 27]], "V": [[6, 23], [8, 25]], "example": [1, 58]}, {"END": [112, 113], "A'": [109, 110], "V'": [64, 66], "Q": [105, 106], "K'": [67, 69], "R": [107, 108], "K": [[75, 83], [76, 84]], "V": [[73, 80], [74, 82]], "example": [59, 114]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly has lion. Sharon has papaya. Kenneth has sweater. >. So who owns sweater? Kenneth\n < Sandra has cannon. Kevin has mango. Elizabeth has pig. >. So who owns pig? Elizabeth\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [15, 16], "Q": [26, 28], "K": [17, 19], "R": null, "K'": [[6, 12], [8, 14]], "V'": [[2, 9], [5, 11]], "example": [1, 30]}, {"END": [56, 57], "A": [57, 58], "V": [43, 44], "Q": [54, 56], "K": [45, 47], "R": null, "K'": [[35, 40], [37, 42]], "V'": [[32, 38], [34, 39]], "example": [31, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has squirrel. Brian has wine. Sarah has rabbit. >. So who owns squirrel? Richard\n < Ronald has cat. Susan has bee. Dorothy has juice. >. So who owns bee? Susan\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [2, 3], "Q": [23, 26], "K": [4, 7], "R": null, "K'": [[10, 14], [11, 16]], "V'": [[8, 12], [9, 13]], "example": [1, 28]}, {"END": [54, 55], "A": [55, 56], "V": [35, 36], "Q": [52, 54], "K": [37, 39], "R": null, "K'": [[33, 43], [34, 45]], "V'": [[30, 40], [32, 42]], "example": [29, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven has handgun. Brian has juice. Ruth has jersey. >. So who owns juice? Brian\n < William has handgun. Kimberly has mouse. Barbara has bee. >. So who owns bee? Barbara\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [7, 8], "Q": [24, 26], "K": [9, 11], "R": null, "K'": [[4, 14], [6, 17]], "V'": [[2, 12], [3, 13]], "example": [1, 28]}, {"END": [54, 55], "A": [55, 56], "V": [41, 42], "Q": [52, 54], "K": [43, 45], "R": null, "K'": [[32, 39], [34, 40]], "V'": [[30, 35], [31, 38]], "example": [29, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mary has goat. Anthony has motorcycle. Joseph has tea. >. So who owns goat? Mary\n < John has T-shirt. Deborah has burger. Kenneth has shirt. >. So who owns shirt? Kenneth\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [2, 3], "Q": [22, 24], "K": [4, 6], "R": null, "K'": [[9, 14], [11, 15]], "V'": [[7, 12], [8, 13]], "example": [1, 26]}, {"END": [55, 56], "A": [56, 57], "V": [42, 43], "Q": [53, 55], "K": [44, 46], "R": null, "K'": [[30, 39], [34, 41]], "V'": [[28, 35], [29, 38]], "example": [27, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda has jeans. Kimberly has cocktail. Helen has juice. >. So who owns jeans? Linda\n < Dorothy has elephant. Nancy has steak. Deborah has apple. >. So who owns elephant? Dorothy\n", "ranges": [{"END": [29, 30], "A": [30, 32], "V": [2, 4], "Q": [27, 29], "K": [5, 7], "R": null, "K'": [[12, 18], [15, 20]], "V'": [[8, 16], [11, 17]], "example": [1, 32]}, {"END": [61, 62], "A": [62, 64], "V": [34, 36], "Q": [58, 61], "K": [37, 40], "R": null, "K'": [[43, 50], [45, 51]], "V'": [[41, 46], [42, 49]], "example": [33, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David has soda. Carol has jacket. Maria has squirrel. >. So who owns jacket? Carol\n < Ronald has sheep. Ruth has pig. Anthony has motorcycle. >. So who owns sheep? Ronald\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [7, 8], "Q": [24, 26], "K": [9, 11], "R": null, "K'": [[4, 14], [6, 17]], "V'": [[2, 12], [3, 13]], "example": [1, 28]}, {"END": [52, 53], "A": [53, 55], "V": [30, 32], "Q": [51, 52], "K": [33, 34], "R": null, "K'": [[37, 42], [39, 44]], "V'": [[35, 40], [36, 41]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael has burger. Donna has baseball. Daniel has apricot. >. So who owns baseball? Donna\n < Kevin has jeans. Ronald has plum. Elizabeth has T-shirt. >. So who owns T-shirt? Elizabeth\n", "ranges": [{"END": [25, 26], "A": [26, 28], "V": [7, 9], "Q": [24, 25], "K": [10, 11], "R": null, "K'": [[4, 14], [6, 17]], "V'": [[2, 12], [3, 13]], "example": [1, 28]}, {"END": [58, 59], "A": [59, 60], "V": [41, 42], "Q": [54, 58], "K": [43, 47], "R": null, "K'": [[32, 38], [34, 40]], "V'": [[30, 35], [31, 37]], "example": [29, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Patricia has pistol. Richard has deer. Paul has jeep. >. So who owns pistol? Patricia\n < Mary has bread. Richard has horse. Michael has basketball. >. So who owns bread? Mary\n", "ranges": [{"END": [27, 28], "A": [28, 31], "V": [2, 5], "Q": [25, 27], "K": [6, 8], "R": null, "K'": [[11, 16], [13, 18]], "V'": [[9, 14], [10, 15]], "example": [1, 31]}, {"END": [52, 53], "A": [53, 54], "V": [33, 34], "Q": [51, 52], "K": [35, 36], "R": null, "K'": [[39, 43], [40, 44]], "V'": [[37, 41], [38, 42]], "example": [32, 54]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has lion. Sharon has papaya. Kenneth has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is Kimberly? Answer: No\n Premise: < Sandra has pants. Kevin has cannon. Elizabeth has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is Elizabeth? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [49, 52], "V": [18, 19], "Q": [46, 48], "K": [20, 22], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 56]}, {"END": [106, 107], "A": [103, 104], "V": [72, 73], "Q": [100, 102], "K": [74, 76], "R": null, "K'": [[64, 69], [66, 71]], "V'": [[61, 67], [63, 68]], "example": [57, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has lion. Sharon has papaya. Kenneth has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is Kimberly? Answer: No\n Premise: < Sandra has pants. Kevin has cannon. Elizabeth has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is Kevin? Answer: No\n", "ranges": [{"END": [54, 55], "A": [49, 52], "V": [18, 19], "Q": [46, 48], "K": [20, 22], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 56]}, {"END": [106, 107], "A": [103, 104], "V": [72, 73], "Q": [100, 102], "K": [74, 76], "R": null, "K'": [[64, 69], [66, 71]], "V'": [[61, 67], [63, 68]], "example": [57, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has pig. Linda has rabbit. Kenneth has vodka. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is Christopher? Answer: Yes\n Premise: < Deborah has motorcycle. Kevin has goat. John has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is Deborah? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [5, 6], "Q": [45, 47], "K": [7, 9], "R": null, "K'": [[13, 18], [15, 21]], "V'": [[10, 16], [12, 17]], "example": [1, 53]}, {"END": [105, 106], "A": [100, 103], "V": [58, 61], "Q": [97, 99], "K": [62, 64], "R": null, "K'": [[67, 72], [69, 73]], "V'": [[65, 70], [66, 71]], "example": [54, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has pig. Linda has rabbit. Kenneth has vodka. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is Christopher? Answer: Yes\n Premise: < Deborah has motorcycle. Kevin has goat. John has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is John? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [5, 6], "Q": [45, 47], "K": [7, 9], "R": null, "K'": [[13, 18], [15, 21]], "V'": [[10, 16], [12, 17]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [58, 61], "Q": [97, 99], "K": [62, 64], "R": null, "K'": [[67, 72], [69, 73]], "V'": [[65, 70], [66, 71]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has pants. Edward has jersey. Robert has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns durian is Mary? Answer: No\n Premise: < Betty has goat. Steven has lime. Jennifer has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is Steven? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [16, 17], "Q": [44, 46], "K": [18, 20], "R": null, "K'": [[7, 12], [9, 15]], "V'": [[5, 10], [6, 11]], "example": [1, 52]}, {"END": [102, 103], "A": [99, 100], "V": [62, 63], "Q": [96, 98], "K": [64, 66], "R": null, "K'": [[59, 70], [61, 72]], "V'": [[57, 67], [58, 69]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has pants. Edward has jersey. Robert has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns durian is Mary? Answer: No\n Premise: < Betty has goat. Steven has lime. Jennifer has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is Betty? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [16, 17], "Q": [44, 46], "K": [18, 20], "R": null, "K'": [[7, 12], [9, 15]], "V'": [[5, 10], [6, 11]], "example": [1, 52]}, {"END": [102, 103], "A": [99, 100], "V": [62, 63], "Q": [96, 98], "K": [64, 66], "R": null, "K'": [[59, 70], [61, 72]], "V'": [[57, 67], [58, 69]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has plum. Sharon has burger. Anthony has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is Sharon? Answer: Yes\n Premise: < Thomas has blueberries. Ruth has juice. Margaret has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is Ruth? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [10, 12], "Q": [44, 46], "K": [13, 15], "R": null, "K'": [[7, 18], [9, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [64, 65], "Q": [97, 99], "K": [66, 68], "R": null, "K'": [[60, 71], [63, 73]], "V'": [[58, 69], [59, 70]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has plum. Sharon has burger. Anthony has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is Sharon? Answer: Yes\n Premise: < Thomas has blueberries. Ruth has juice. Margaret has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is Margaret? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [10, 12], "Q": [44, 46], "K": [13, 15], "R": null, "K'": [[7, 18], [9, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [64, 65], "Q": [97, 99], "K": [66, 68], "R": null, "K'": [[60, 71], [63, 73]], "V'": [[58, 69], [59, 70]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura has apricot. Brian has banana. Linda has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is Laura? Answer: No\n Premise: < John has vodka. Ronald has mango. Deborah has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is John? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [11, 12], "Q": [45, 47], "K": [13, 15], "R": null, "K'": [[7, 19], [10, 21]], "V'": [[5, 16], [6, 18]], "example": [1, 53]}, {"END": [106, 107], "A": [103, 104], "V": [58, 59], "Q": [99, 102], "K": [60, 63], "R": null, "K'": [[67, 74], [69, 75]], "V'": [[64, 70], [66, 73]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura has apricot. Brian has banana. Linda has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is Laura? Answer: No\n Premise: < John has vodka. Ronald has mango. Deborah has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is Ronald? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [11, 12], "Q": [45, 47], "K": [13, 15], "R": null, "K'": [[7, 19], [10, 21]], "V'": [[5, 16], [6, 18]], "example": [1, 53]}, {"END": [107, 108], "A": [103, 105], "V": [58, 59], "Q": [99, 102], "K": [60, 63], "R": null, "K'": [[67, 74], [69, 75]], "V'": [[64, 70], [66, 73]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has burger. Donna has car. Daniel has apricot. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Donna? Answer: Yes\n Premise: < Ronald has T-shirt. Donald has duck. John has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns T-shirt is Ronald? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [10, 12], "Q": [44, 45], "K": [13, 14], "R": null, "K'": [[7, 17], [9, 20]], "V'": [[5, 15], [6, 16]], "example": [1, 52]}, {"END": [107, 108], "A": [103, 105], "V": [57, 59], "Q": [98, 102], "K": [60, 64], "R": null, "K'": [[67, 72], [69, 74]], "V'": [[65, 70], [66, 71]], "example": [53, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has burger. Donna has car. Daniel has apricot. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Donna? Answer: Yes\n Premise: < Ronald has T-shirt. Donald has duck. John has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns T-shirt is Donald? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [10, 12], "Q": [44, 45], "K": [13, 14], "R": null, "K'": [[7, 17], [9, 20]], "V'": [[5, 15], [6, 16]], "example": [1, 52]}, {"END": [106, 107], "A": [103, 104], "V": [57, 59], "Q": [98, 102], "K": [60, 64], "R": null, "K'": [[67, 72], [69, 74]], "V'": [[65, 70], [66, 71]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald has meat. Betty has blackberries. Lisa has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is Donald? Answer: No\n Premise: < Sandra has elephant. Paul has sheep. Kenneth has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sheep is Paul? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [9, 10], "Q": [44, 47], "K": [11, 14], "R": null, "K'": [[7, 17], [8, 20]], "V'": [[5, 15], [6, 16]], "example": [1, 53]}, {"END": [101, 102], "A": [98, 99], "V": [65, 66], "Q": [96, 97], "K": [67, 68], "R": null, "K'": [[61, 71], [64, 72]], "V'": [[58, 69], [60, 70]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald has meat. Betty has blackberries. Lisa has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is Donald? Answer: No\n Premise: < Sandra has elephant. Paul has sheep. Kenneth has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sheep is Sandra? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [9, 10], "Q": [44, 47], "K": [11, 14], "R": null, "K'": [[7, 17], [8, 20]], "V'": [[5, 15], [6, 16]], "example": [1, 53]}, {"END": [102, 103], "A": [98, 100], "V": [65, 66], "Q": [96, 97], "K": [67, 68], "R": null, "K'": [[61, 71], [64, 72]], "V'": [[58, 69], [60, 70]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has mango. Maria has car. Steven has pig. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Maria? Answer: Yes\n Premise: < Kevin has pineapple. George has cake. Paul has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns strawberries is Paul? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [10, 11], "Q": [42, 43], "K": [12, 13], "R": null, "K'": [[7, 16], [9, 18]], "V'": [[5, 14], [6, 15]], "example": [1, 49]}, {"END": [103, 104], "A": [100, 101], "V": [65, 66], "Q": [95, 99], "K": [67, 71], "R": null, "K'": [[56, 62], [59, 64]], "V'": [[54, 60], [55, 61]], "example": [50, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has mango. Maria has car. Steven has pig. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Maria? Answer: Yes\n Premise: < Kevin has pineapple. George has cake. Paul has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns strawberries is George? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [10, 11], "Q": [42, 43], "K": [12, 13], "R": null, "K'": [[7, 16], [9, 18]], "V'": [[5, 14], [6, 15]], "example": [1, 49]}, {"END": [103, 104], "A": [100, 101], "V": [65, 66], "Q": [95, 99], "K": [67, 71], "R": null, "K'": [[56, 62], [59, 64]], "V'": [[54, 60], [55, 61]], "example": [50, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The lion is Kimberly's. The papaya is Sharon's. The sweater is Kenneth's. >. So who owns sweater? Kenneth\n < The cannon is Sandra's. The mango is Kevin's. The pig is Elizabeth's. >. So who owns pig? Elizabeth\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [25, 26], "Q": [35, 37], "K": [22, 24], "R": null, "K'": [[3, 13], [5, 15]], "V'": [[6, 16], [9, 18]], "example": [1, 39]}, {"END": [74, 75], "A": [75, 76], "V": [62, 63], "Q": [72, 74], "K": [59, 61], "R": null, "K'": [[42, 51], [44, 53]], "V'": [[45, 54], [47, 55]], "example": [40, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The squirrel is Richard's. The wine is Brian's. The rabbit is Sarah's. >. So who owns squirrel? Richard\n < The cat is Ronald's. The bee is Susan's. The juice is Dorothy's. >. So who owns bee? Susan\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [7, 8], "Q": [32, 35], "K": [3, 6], "R": null, "K'": [[12, 19], [13, 21]], "V'": [[14, 22], [15, 23]], "example": [1, 37]}, {"END": [72, 73], "A": [73, 74], "V": [51, 52], "Q": [70, 72], "K": [48, 50], "R": null, "K'": [[40, 56], [41, 58]], "V'": [[42, 59], [44, 61]], "example": [38, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The handgun is Steven's. The juice is Brian's. The jersey is Ruth's. >. So who owns juice? Brian\n < The handgun is William's. The mouse is Kimberly's. The bee is Barbara's. >. So who owns bee? Barbara\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [14, 15], "Q": [33, 35], "K": [11, 13], "R": null, "K'": [[3, 19], [5, 22]], "V'": [[6, 23], [7, 24]], "example": [1, 37]}, {"END": [72, 73], "A": [73, 74], "V": [60, 61], "Q": [70, 72], "K": [57, 59], "R": null, "K'": [[40, 48], [42, 49]], "V'": [[43, 50], [44, 53]], "example": [38, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The goat is Mary's. The motorcycle is Anthony's. The tea is Joseph's. >. So who owns goat? Mary\n < T-shirt is John's. The burger is Deborah's. The shirt is Kenneth's. >. So who owns shirt? Kenneth\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [6, 7], "Q": [31, 33], "K": [3, 5], "R": null, "K'": [[11, 19], [13, 20]], "V'": [[14, 21], [15, 22]], "example": [1, 35]}, {"END": [72, 73], "A": [73, 74], "V": [60, 61], "Q": [70, 72], "K": [57, 59], "R": null, "K'": [[37, 47], [41, 49]], "V'": [[42, 50], [43, 53]], "example": [36, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jeans is Linda's. The cocktail is Kimberly's. The juice is Helen's. >. So who owns jeans? Linda\n < The elephant is Dorothy's. The steak is Nancy's. The apple is Deborah's. >. So who owns elephant? Dorothy\n", "ranges": [{"END": [38, 39], "A": [39, 41], "V": [6, 8], "Q": [36, 38], "K": [3, 5], "R": null, "K'": [[12, 23], [15, 25]], "V'": [[16, 26], [19, 27]], "example": [1, 41]}, {"END": [79, 80], "A": [80, 82], "V": [48, 50], "Q": [76, 79], "K": [44, 47], "R": null, "K'": [[54, 62], [56, 63]], "V'": [[57, 64], [58, 67]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The soda is David's. The jacket is Carol's. The squirrel is Maria's. >. So who owns jacket? Carol\n < The sheep is Ronald's. The pig is Ruth's. The motorcycle is Anthony's. >. So who owns sheep? Ronald\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [14, 15], "Q": [33, 35], "K": [11, 13], "R": null, "K'": [[3, 19], [5, 22]], "V'": [[6, 23], [7, 24]], "example": [1, 37]}, {"END": [70, 71], "A": [71, 73], "V": [42, 44], "Q": [69, 70], "K": [40, 41], "R": null, "K'": [[48, 56], [50, 58]], "V'": [[51, 59], [52, 60]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The burger is Michael's. The baseball is Donna's. The apricot is Daniel's. >. So who owns baseball? Donna\n < The jeans is Kevin's. The plum is Ronald's. T-shirt is Elizabeth's. >. So who owns T-shirt? Elizabeth\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [13, 15], "Q": [33, 34], "K": [11, 12], "R": null, "K'": [[3, 19], [5, 22]], "V'": [[6, 23], [7, 24]], "example": [1, 37]}, {"END": [75, 76], "A": [76, 77], "V": [61, 62], "Q": [71, 75], "K": [56, 60], "R": null, "K'": [[40, 48], [42, 50]], "V'": [[43, 51], [44, 53]], "example": [38, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The pistol is Patricia's. The deer is Richard's. The jeep is Paul's. >. So who owns pistol? Patricia\n < The bread is Mary's. The horse is Richard's. The basketball is Michael's. >. So who owns bread? Mary\n", "ranges": [{"END": [36, 37], "A": [37, 40], "V": [6, 9], "Q": [34, 36], "K": [3, 5], "R": null, "K'": [[13, 21], [15, 23]], "V'": [[16, 24], [17, 25]], "example": [1, 40]}, {"END": [70, 71], "A": [71, 72], "V": [45, 46], "Q": [69, 70], "K": [43, 44], "R": null, "K'": [[50, 57], [51, 58]], "V'": [[52, 59], [53, 60]], "example": [41, 72]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Kimberly's. The papaya is Sharon's. The sweater is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is Kimberly? Answer: No\n Premise: < The pants is Sandra's. The cannon is Kevin's. The peach is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is Elizabeth? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [58, 61], "V": [28, 29], "Q": [55, 57], "K": [25, 27], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 21]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [91, 92], "Q": [118, 120], "K": [88, 90], "R": null, "K'": [[71, 80], [73, 82]], "V'": [[74, 83], [76, 84]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Kimberly's. The papaya is Sharon's. The sweater is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is Kimberly? Answer: No\n Premise: < The pants is Sandra's. The cannon is Kevin's. The peach is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is Kevin? Answer: No\n", "ranges": [{"END": [63, 64], "A": [58, 61], "V": [28, 29], "Q": [55, 57], "K": [25, 27], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 21]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [91, 92], "Q": [118, 120], "K": [88, 90], "R": null, "K'": [[71, 80], [73, 82]], "V'": [[74, 83], [76, 84]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Christopher's. The rabbit is Linda's. The vodka is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is Christopher? Answer: Yes\n Premise: < The motorcycle is Deborah's. The goat is Kevin's. The guitar is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is Deborah? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [9, 10], "Q": [54, 56], "K": [6, 8], "R": null, "K'": [[14, 23], [16, 26]], "V'": [[17, 27], [19, 28]], "example": [1, 62]}, {"END": [123, 124], "A": [118, 121], "V": [71, 74], "Q": [115, 117], "K": [68, 70], "R": null, "K'": [[78, 86], [80, 87]], "V'": [[81, 88], [82, 89]], "example": [63, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Christopher's. The rabbit is Linda's. The vodka is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is Christopher? Answer: Yes\n Premise: < The motorcycle is Deborah's. The goat is Kevin's. The guitar is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is John? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [9, 10], "Q": [54, 56], "K": [6, 8], "R": null, "K'": [[14, 23], [16, 26]], "V'": [[17, 27], [19, 28]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [71, 74], "Q": [115, 117], "K": [68, 70], "R": null, "K'": [[78, 86], [80, 87]], "V'": [[81, 88], [82, 89]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Mary's. The jersey is Edward's. The durian is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns durian is Mary? Answer: No\n Premise: < The goat is Betty's. The lime is Steven's. The durian is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is Steven? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [26, 27], "Q": [53, 55], "K": [23, 25], "R": null, "K'": [[6, 14], [8, 17]], "V'": [[9, 18], [10, 19]], "example": [1, 61]}, {"END": [120, 121], "A": [117, 118], "V": [78, 79], "Q": [114, 116], "K": [75, 77], "R": null, "K'": [[67, 83], [69, 85]], "V'": [[70, 86], [71, 88]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Mary's. The jersey is Edward's. The durian is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns durian is Mary? Answer: No\n Premise: < The goat is Betty's. The lime is Steven's. The durian is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is Betty? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [26, 27], "Q": [53, 55], "K": [23, 25], "R": null, "K'": [[6, 14], [8, 17]], "V'": [[9, 18], [10, 19]], "example": [1, 61]}, {"END": [120, 121], "A": [117, 118], "V": [78, 79], "Q": [114, 116], "K": [75, 77], "R": null, "K'": [[67, 83], [69, 85]], "V'": [[70, 86], [71, 88]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Daniel's. The burger is Sharon's. The fox is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is Sharon? Answer: Yes\n Premise: < The blueberries is Thomas's. The juice is Ruth's. The bee is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is Ruth? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [17, 19], "Q": [53, 55], "K": [14, 16], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [80, 81], "Q": [115, 117], "K": [77, 79], "R": null, "K'": [[68, 85], [71, 87]], "V'": [[72, 88], [73, 89]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Daniel's. The burger is Sharon's. The fox is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is Sharon? Answer: Yes\n Premise: < The blueberries is Thomas's. The juice is Ruth's. The bee is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is Margaret? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [17, 19], "Q": [53, 55], "K": [14, 16], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [80, 81], "Q": [115, 117], "K": [77, 79], "R": null, "K'": [[68, 85], [71, 87]], "V'": [[72, 88], [73, 89]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Laura's. The banana is Brian's. The sweater is Linda's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is Laura? Answer: No\n Premise: < The vodka is John's. The mango is Ronald's. The sheep is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is John? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [18, 19], "Q": [54, 56], "K": [15, 17], "R": null, "K'": [[6, 23], [9, 25]], "V'": [[10, 26], [11, 28]], "example": [1, 62]}, {"END": [124, 125], "A": [121, 122], "V": [72, 73], "Q": [117, 120], "K": [68, 71], "R": null, "K'": [[77, 86], [79, 87]], "V'": [[80, 88], [82, 91]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Laura's. The banana is Brian's. The sweater is Linda's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is Laura? Answer: No\n Premise: < The vodka is John's. The mango is Ronald's. The sheep is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is Ronald? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [18, 19], "Q": [54, 56], "K": [15, 17], "R": null, "K'": [[6, 23], [9, 25]], "V'": [[10, 26], [11, 28]], "example": [1, 62]}, {"END": [125, 126], "A": [121, 123], "V": [72, 73], "Q": [117, 120], "K": [68, 71], "R": null, "K'": [[77, 86], [79, 87]], "V'": [[80, 88], [82, 91]], "example": [63, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Michael's. The car is Donna's. The apricot is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Donna? Answer: Yes\n Premise: < T-shirt is Ronald's. The duck is Donald's. The tiger is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns T-shirt is Ronald? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [16, 18], "Q": [53, 54], "K": [14, 15], "R": null, "K'": [[6, 22], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 61]}, {"END": [124, 125], "A": [120, 122], "V": [71, 73], "Q": [115, 119], "K": [66, 70], "R": null, "K'": [[77, 85], [79, 87]], "V'": [[80, 88], [81, 89]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Michael's. The car is Donna's. The apricot is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Donna? Answer: Yes\n Premise: < T-shirt is Ronald's. The duck is Donald's. The tiger is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns T-shirt is Donald? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [16, 18], "Q": [53, 54], "K": [14, 15], "R": null, "K'": [[6, 22], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 61]}, {"END": [123, 124], "A": [120, 121], "V": [71, 73], "Q": [115, 119], "K": [66, 70], "R": null, "K'": [[77, 85], [79, 87]], "V'": [[80, 88], [81, 89]], "example": [62, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The meat is Donald's. The blackberries is Betty's. The grapes is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is Donald? Answer: No\n Premise: < The elephant is Sandra's. The sheep is Paul's. The wine is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sheep is Paul? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [17, 18], "Q": [53, 56], "K": [13, 16], "R": null, "K'": [[6, 22], [7, 25]], "V'": [[8, 26], [9, 27]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [80, 81], "Q": [114, 115], "K": [78, 79], "R": null, "K'": [[68, 85], [71, 86]], "V'": [[72, 87], [74, 88]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The meat is Donald's. The blackberries is Betty's. The grapes is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is Donald? Answer: No\n Premise: < The elephant is Sandra's. The sheep is Paul's. The wine is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sheep is Sandra? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [17, 18], "Q": [53, 56], "K": [13, 16], "R": null, "K'": [[6, 22], [7, 25]], "V'": [[8, 26], [9, 27]], "example": [1, 62]}, {"END": [120, 121], "A": [116, 118], "V": [80, 81], "Q": [114, 115], "K": [78, 79], "R": null, "K'": [[68, 85], [71, 86]], "V'": [[72, 87], [74, 88]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mango is Mary's. The car is Maria's. The pig is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Maria? Answer: Yes\n Premise: < The pineapple is Kevin's. The cake is George's. The strawberries is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns strawberries is Paul? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [16, 17], "Q": [51, 52], "K": [14, 15], "R": null, "K'": [[6, 21], [8, 23]], "V'": [[9, 24], [10, 25]], "example": [1, 58]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [113, 117], "K": [81, 85], "R": null, "K'": [[64, 73], [67, 75]], "V'": [[68, 76], [69, 77]], "example": [59, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mango is Mary's. The car is Maria's. The pig is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is Maria? Answer: Yes\n Premise: < The pineapple is Kevin's. The cake is George's. The strawberries is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns strawberries is George? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [16, 17], "Q": [51, 52], "K": [14, 15], "R": null, "K'": [[6, 21], [8, 23]], "V'": [[9, 24], [10, 25]], "example": [1, 58]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [113, 117], "K": [81, 85], "R": null, "K'": [[64, 73], [67, 75]], "V'": [[68, 76], [69, 77]], "example": [59, 123]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael has elephant. Kenneth has sweater. Sharon has sweater. >. The one who owns sweater is not Michael\n < Kevin has grapes. Paul has cow. Susan has cow. >. The one who owns cow is not Kevin\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [26, 28], "K'": [4, 7], "R": [29, 30], "K": [[10, 16], [12, 18]], "V": [[8, 13], [9, 15]], "example": [1, 31]}, {"END": [56, 57], "A'": [57, 58], "V'": [33, 34], "Q": [54, 55], "K'": [35, 38], "R": [56, 57], "K": [[41, 45], [42, 46]], "V": [[39, 43], [40, 44]], "example": [32, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donald has piano. Anthony has pizza. Deborah has piano. >. The one who owns piano is not Anthony\n < Christopher has meat. Linda has whiskey. Kenneth has whiskey. >. The one who owns whiskey is not Christopher\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [6, 7], "Q": [24, 25], "K'": [8, 10], "R": [26, 27], "K": [[4, 15], [5, 16]], "V": [[2, 11], [3, 14]], "example": [1, 28]}, {"END": [55, 56], "A'": [56, 57], "V'": [30, 31], "Q": [52, 54], "K'": [32, 33], "R": [55, 56], "K": [[37, 42], [39, 44]], "V": [[34, 40], [36, 41]], "example": [29, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth has vodka. Michael has vodka. Ronald has jersey. >. The one who owns vodka is not Ronald\n < Jeff has juice. Brian has papaya. Donald has juice. >. The one who owns juice is not Brian\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [14, 16], "Q": [28, 31], "K'": [17, 20], "R": [32, 33], "K": [[4, 10], [7, 13]], "V": [[2, 8], [3, 9]], "example": [1, 35]}, {"END": [62, 63], "A'": [63, 64], "V'": [42, 43], "Q": [59, 61], "K'": [44, 46], "R": [62, 63], "K": [[39, 49], [41, 51]], "V": [[37, 47], [38, 48]], "example": [36, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mark has apple. Margaret has apple. Michelle has baseball. >. The one who owns apple is not Michelle\n < Ronald has rifle. Karen has cow. Dorothy has cow. >. The one who owns cow is not Ronald\n", "ranges": [{"END": [24, 25], "A'": [25, 27], "V'": [10, 12], "Q": [22, 23], "K'": [13, 14], "R": [24, 25], "K": [[4, 8], [5, 9]], "V": [[2, 6], [3, 7]], "example": [1, 27]}, {"END": [54, 55], "A'": [55, 57], "V'": [29, 31], "Q": [52, 53], "K'": [32, 34], "R": [54, 55], "K": [[38, 43], [39, 44]], "V": [[35, 40], [37, 42]], "example": [28, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol has gun. Michael has gorilla. Sharon has gun. >. The one who owns gun is not Michael\n < Daniel has fox. Sharon has football. Anthony has fox. >. The one who owns fox is not Sharon\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [6, 7], "Q": [24, 25], "K'": [8, 11], "R": [26, 27], "K": [[4, 15], [5, 16]], "V": [[2, 12], [3, 14]], "example": [1, 28]}, {"END": [55, 56], "A'": [56, 58], "V'": [35, 37], "Q": [52, 54], "K'": [38, 39], "R": [55, 56], "K": [[32, 42], [34, 44]], "V": [[30, 40], [31, 41]], "example": [29, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda has handgun. Kimberly has jeans. Helen has jeans. >. The one who owns jeans is not Linda\n < Michelle has gun. Helen has elephant. Joseph has elephant. >. The one who owns elephant is not Michelle\n", "ranges": [{"END": [30, 31], "A'": [31, 33], "V'": [2, 4], "Q": [27, 29], "K'": [5, 7], "R": [30, 31], "K": [[12, 17], [14, 19]], "V": [[8, 15], [11, 16]], "example": [1, 33]}, {"END": [63, 64], "A'": [64, 66], "V'": [35, 37], "Q": [59, 62], "K'": [38, 39], "R": [63, 64], "K": [[42, 48], [45, 51]], "V": [[40, 46], [41, 47]], "example": [34, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna has jacket. Sharon has cherries. Laura has jacket. >. The one who owns jacket is not Sharon\n < Karen has elephant. Richard has elephant. George has beetle. >. The one who owns elephant is not George\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [8, 10], "Q": [26, 28], "K'": [11, 13], "R": [29, 30], "K": [[5, 16], [7, 18]], "V": [[2, 14], [4, 15]], "example": [1, 32]}, {"END": [64, 65], "A'": [65, 66], "V'": [47, 48], "Q": [60, 63], "K'": [49, 52], "R": [64, 65], "K": [[37, 43], [40, 46]], "V": [[34, 41], [36, 42]], "example": [33, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna has pants. Linda has shotgun. Steven has shotgun. >. The one who owns shotgun is not Donna\n < Ronald has steak. Michael has shirt. Donald has steak. >. The one who owns steak is not Michael\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [2, 4], "Q": [26, 28], "K'": [5, 7], "R": [29, 30], "K": [[11, 16], [13, 18]], "V": [[8, 14], [10, 15]], "example": [1, 32]}, {"END": [60, 61], "A'": [61, 62], "V'": [40, 41], "Q": [57, 59], "K'": [42, 44], "R": [60, 61], "K": [[37, 47], [39, 49]], "V": [[34, 45], [36, 46]], "example": [33, 62]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has elephant. Kenneth has sweater. Sharon has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not Michael? Answer: Yes\n Premise: < Nancy has blueberries. Paul has lion. Susan has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not Nancy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [45, 47], "K'": [7, 10], "R": [48, 49], "K": [[13, 19], [15, 21]], "V": [[11, 16], [12, 18]], "example": [1, 54]}, {"END": [105, 106], "A'": [102, 103], "V'": [59, 60], "Q": [98, 100], "K'": [61, 64], "R": [101, 102], "K": [[67, 72], [69, 74]], "V": [[65, 70], [66, 71]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael has elephant. Kenneth has sweater. Sharon has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not Michael? Answer: Yes\n Premise: < Nancy has blueberries. Paul has lion. Susan has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not Paul? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [45, 47], "K'": [7, 10], "R": [48, 49], "K": [[13, 19], [15, 21]], "V": [[11, 16], [12, 18]], "example": [1, 54]}, {"END": [105, 106], "A'": [102, 103], "V'": [59, 60], "Q": [98, 100], "K'": [61, 64], "R": [101, 102], "K": [[67, 72], [69, 74]], "V": [[65, 70], [66, 71]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian has squirrel. Daniel has squirrel. John has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not John? Answer: Yes\n Premise: < Susan has juice. Barbara has cat. Paul has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not Barbara? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [17, 18], "Q": [45, 48], "K'": [19, 21], "R": [49, 50], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [104, 105], "A'": [101, 102], "V'": [65, 66], "Q": [97, 99], "K'": [67, 68], "R": [100, 101], "K": [[62, 71], [64, 73]], "V": [[60, 69], [61, 70]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian has squirrel. Daniel has squirrel. John has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not John? Answer: Yes\n Premise: < Susan has juice. Barbara has cat. Paul has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not Paul? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [17, 18], "Q": [45, 48], "K'": [19, 21], "R": [49, 50], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [104, 105], "A'": [101, 102], "V'": [65, 66], "Q": [97, 99], "K'": [67, 68], "R": [100, 101], "K": [[62, 71], [64, 73]], "V": [[60, 69], [61, 70]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven has gun. Brian has piano. Ruth has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not Steven? Answer: No\n Premise: < William has mouse. Kimberly has mouse. Barbara has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Barbara? Answer: Yes\n", "ranges": [{"END": [46, 47], "A'": [43, 44], "V'": [9, 10], "Q": [40, 41], "K'": [11, 12], "R": [42, 43], "K": [[7, 15], [8, 16]], "V": [[5, 13], [6, 14]], "example": [1, 48]}, {"END": [97, 98], "A'": [94, 95], "V'": [63, 64], "Q": [91, 92], "K'": [65, 67], "R": [93, 94], "K": [[55, 61], [56, 62]], "V": [[53, 57], [54, 60]], "example": [49, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven has gun. Brian has piano. Ruth has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not Steven? Answer: No\n Premise: < William has mouse. Kimberly has mouse. Barbara has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Kimberly? Answer: No\n", "ranges": [{"END": [46, 47], "A'": [43, 44], "V'": [9, 10], "Q": [40, 41], "K'": [11, 12], "R": [42, 43], "K": [[7, 15], [8, 16]], "V": [[5, 13], [6, 14]], "example": [1, 48]}, {"END": [99, 100], "A'": [94, 97], "V'": [63, 64], "Q": [91, 92], "K'": [65, 67], "R": [93, 94], "K": [[55, 61], [56, 62]], "V": [[53, 57], [54, 60]], "example": [49, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has soda. Anthony has lime. Joseph has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not Mary? Answer: Yes\n Premise: < John has shirt. Deborah has shirt. Kenneth has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not Kenneth? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [5, 6], "Q": [43, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 52]}, {"END": [104, 105], "A'": [101, 102], "V'": [69, 70], "Q": [97, 99], "K'": [71, 73], "R": [100, 101], "K": [[59, 66], [61, 68]], "V": [[57, 62], [58, 65]], "example": [53, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has soda. Anthony has lime. Joseph has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not Mary? Answer: Yes\n Premise: < John has shirt. Deborah has shirt. Kenneth has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not Deborah? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [5, 6], "Q": [43, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 52]}, {"END": [106, 107], "A'": [101, 104], "V'": [69, 70], "Q": [97, 99], "K'": [71, 73], "R": [100, 101], "K": [[59, 66], [61, 68]], "V": [[57, 62], [58, 65]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura has beetle. Kimberly has beetle. Ruth has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not Ruth? Answer: Yes\n Premise: < Richard has mouse. Donna has mouse. Nancy has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Nancy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [19, 20], "Q": [48, 51], "K'": [21, 24], "R": [52, 53], "K": [[7, 15], [10, 18]], "V": [[5, 11], [6, 14]], "example": [1, 58]}, {"END": [107, 108], "A'": [104, 105], "V'": [72, 73], "Q": [101, 102], "K'": [74, 77], "R": [103, 104], "K": [[65, 70], [66, 71]], "V": [[63, 67], [64, 69]], "example": [59, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura has beetle. Kimberly has beetle. Ruth has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not Ruth? Answer: Yes\n Premise: < Richard has mouse. Donna has mouse. Nancy has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Richard? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [19, 20], "Q": [48, 51], "K'": [21, 24], "R": [52, 53], "K": [[7, 15], [10, 18]], "V": [[5, 11], [6, 14]], "example": [1, 58]}, {"END": [107, 108], "A'": [104, 105], "V'": [72, 73], "Q": [101, 102], "K'": [74, 77], "R": [103, 104], "K": [[65, 70], [66, 71]], "V": [[63, 67], [64, 69]], "example": [59, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has elephant. Richard has elephant. George has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not Karen? Answer: No\n Premise: < Joseph has shotgun. Linda has costume. Steven has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not Joseph? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [18, 19], "Q": [47, 50], "K'": [20, 23], "R": [51, 52], "K": [[8, 14], [11, 17]], "V": [[5, 12], [7, 13]], "example": [1, 58]}, {"END": [109, 110], "A'": [106, 107], "V'": [63, 64], "Q": [102, 104], "K'": [65, 67], "R": [105, 106], "K": [[71, 76], [73, 78]], "V": [[68, 74], [70, 75]], "example": [59, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has elephant. Richard has elephant. George has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not Karen? Answer: No\n Premise: < Joseph has shotgun. Linda has costume. Steven has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not Steven? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [18, 19], "Q": [47, 50], "K'": [20, 23], "R": [51, 52], "K": [[8, 14], [11, 17]], "V": [[5, 12], [7, 13]], "example": [1, 58]}, {"END": [109, 110], "A'": [106, 107], "V'": [63, 64], "Q": [102, 104], "K'": [65, 67], "R": [105, 106], "K": [[71, 76], [73, 78]], "V": [[68, 74], [70, 75]], "example": [59, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < James has beer. Ronald has beer. Kevin has dog. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beer is not Kevin? Answer: Yes\n Premise: < Laura has tiger. Steven has tiger. Betty has football. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns tiger is not Betty? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [16, 17], "Q": [43, 45], "K'": [18, 19], "R": [46, 47], "K": [[7, 13], [9, 15]], "V": [[5, 10], [6, 12]], "example": [1, 52]}, {"END": [101, 102], "A'": [98, 99], "V'": [67, 68], "Q": [94, 96], "K'": [69, 70], "R": [97, 98], "K": [[59, 64], [61, 66]], "V": [[57, 62], [58, 63]], "example": [53, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < James has beer. Ronald has beer. Kevin has dog. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beer is not Kevin? Answer: Yes\n Premise: < Laura has tiger. Steven has tiger. Betty has football. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns tiger is not Steven? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [16, 17], "Q": [43, 45], "K'": [18, 19], "R": [46, 47], "K": [[7, 13], [9, 15]], "V": [[5, 10], [6, 12]], "example": [1, 52]}, {"END": [101, 102], "A'": [98, 99], "V'": [67, 68], "Q": [94, 96], "K'": [69, 70], "R": [97, 98], "K": [[59, 64], [61, 66]], "V": [[57, 62], [58, 63]], "example": [53, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dorothy has revolver. Margaret has whiskey. Ruth has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns whiskey is not Dorothy? Answer: Yes\n Premise: < Lisa has blackberries. Charles has blackberries. Sandra has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not Sandra? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [5, 7], "Q": [44, 46], "K'": [8, 10], "R": [47, 48], "K": [[13, 18], [15, 20]], "V": [[11, 16], [12, 17]], "example": [1, 54]}, {"END": [108, 109], "A'": [104, 106], "V'": [71, 73], "Q": [99, 102], "K'": [74, 75], "R": [103, 104], "K": [[61, 67], [64, 70]], "V": [[59, 65], [60, 66]], "example": [55, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dorothy has revolver. Margaret has whiskey. Ruth has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns whiskey is not Dorothy? Answer: Yes\n Premise: < Lisa has blackberries. Charles has blackberries. Sandra has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not Charles? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [5, 7], "Q": [44, 46], "K'": [8, 10], "R": [47, 48], "K": [[13, 18], [15, 20]], "V": [[11, 16], [12, 17]], "example": [1, 54]}, {"END": [107, 108], "A'": [104, 105], "V'": [71, 73], "Q": [99, 102], "K'": [74, 75], "R": [103, 104], "K": [[61, 67], [64, 70]], "V": [[59, 65], [60, 66]], "example": [55, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The elephant is Michael's. The sweater is Kenneth's. The sweater is Sharon's. >. The one who owns sweater is not Michael\n < The grapes is Kevin's. The cow is Paul's. The cow is Susan's. >. The one who owns cow is not Kevin\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [7, 8], "Q": [35, 37], "K'": [3, 6], "R": [38, 39], "K": [[12, 20], [14, 22]], "V": [[15, 23], [16, 25]], "example": [1, 40]}, {"END": [74, 75], "A'": [75, 76], "V'": [47, 48], "Q": [72, 73], "K'": [43, 46], "R": [74, 75], "K": [[52, 59], [53, 60]], "V": [[54, 61], [55, 62]], "example": [41, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The piano is Donald's. The pizza is Anthony's. The piano is Deborah's. >. The one who owns piano is not Anthony\n < The meat is Christopher's. The whiskey is Linda's. The whiskey is Kenneth's. >. The one who owns whiskey is not Christopher\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [13, 14], "Q": [33, 34], "K'": [10, 12], "R": [35, 36], "K": [[3, 18], [4, 19]], "V": [[5, 20], [6, 23]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 75], "V'": [42, 43], "Q": [70, 72], "K'": [40, 41], "R": [73, 74], "K": [[47, 56], [49, 58]], "V": [[50, 59], [52, 60]], "example": [38, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The vodka is Ruth's. The vodka is Michael's. The jersey is Ronald's. >. The one who owns vodka is not Ronald\n < The juice is Jeff's. The papaya is Brian's. The juice is Donald's. >. The one who owns juice is not Brian\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [25, 27], "Q": [37, 40], "K'": [21, 24], "R": [41, 42], "K": [[3, 12], [6, 15]], "V": [[7, 16], [8, 17]], "example": [1, 44]}, {"END": [80, 81], "A'": [81, 82], "V'": [58, 59], "Q": [77, 79], "K'": [55, 57], "R": [80, 81], "K": [[47, 63], [49, 65]], "V": [[50, 66], [51, 67]], "example": [45, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The apple is Mark's. The apple is Margaret's. The baseball is Michelle's. >. The one who owns apple is not Michelle\n < The rifle is Ronald's. The cow is Karen's. The cow is Dorothy's. >. The one who owns cow is not Ronald\n", "ranges": [{"END": [33, 34], "A'": [34, 36], "V'": [19, 21], "Q": [31, 32], "K'": [17, 18], "R": [33, 34], "K": [[3, 10], [4, 11]], "V": [[5, 12], [6, 13]], "example": [1, 36]}, {"END": [72, 73], "A'": [73, 75], "V'": [42, 44], "Q": [70, 71], "K'": [39, 41], "R": [72, 73], "K": [[48, 56], [49, 57]], "V": [[50, 58], [52, 60]], "example": [37, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The gun is Carol's. The gorilla is Michael's. The gun is Sharon's. >. The one who owns gun is not Michael\n < The fox is Daniel's. The football is Sharon's. The fox is Anthony's. >. The one who owns fox is not Sharon\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [14, 15], "Q": [33, 34], "K'": [10, 13], "R": [35, 36], "K": [[3, 19], [4, 20]], "V": [[5, 21], [6, 23]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 76], "V'": [50, 52], "Q": [70, 72], "K'": [48, 49], "R": [73, 74], "K": [[40, 56], [42, 58]], "V": [[43, 59], [44, 60]], "example": [38, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The handgun is Linda's. The jeans is Kimberly's. The jeans is Helen's. >. The one who owns jeans is not Linda\n < The gun is Michelle's. The elephant is Helen's. The elephant is Joseph's. >. The one who owns elephant is not Michelle\n", "ranges": [{"END": [39, 40], "A'": [40, 42], "V'": [6, 8], "Q": [36, 38], "K'": [3, 5], "R": [39, 40], "K": [[12, 22], [14, 24]], "V": [[15, 25], [18, 26]], "example": [1, 42]}, {"END": [81, 82], "A'": [82, 84], "V'": [47, 49], "Q": [77, 80], "K'": [45, 46], "R": [81, 82], "K": [[53, 62], [56, 65]], "V": [[57, 66], [58, 67]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jacket is Donna's. The cherries is Sharon's. The jacket is Laura's. >. The one who owns jacket is not Sharon\n < The elephant is Karen's. The elephant is Richard's. The beetle is George's. >. The one who owns elephant is not George\n", "ranges": [{"END": [38, 39], "A'": [39, 41], "V'": [15, 17], "Q": [35, 37], "K'": [12, 14], "R": [38, 39], "K": [[3, 21], [5, 23]], "V": [[6, 24], [8, 25]], "example": [1, 41]}, {"END": [82, 83], "A'": [83, 84], "V'": [67, 68], "Q": [78, 81], "K'": [63, 66], "R": [82, 83], "K": [[44, 54], [47, 57]], "V": [[48, 58], [50, 59]], "example": [42, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The pants is Donna's. The shotgun is Linda's. The shotgun is Steven's. >. The one who owns shotgun is not Donna\n < The steak is Ronald's. The shirt is Michael's. The steak is Donald's. >. The one who owns steak is not Michael\n", "ranges": [{"END": [38, 39], "A'": [39, 41], "V'": [6, 8], "Q": [35, 37], "K'": [3, 5], "R": [38, 39], "K": [[12, 21], [14, 23]], "V": [[15, 24], [17, 25]], "example": [1, 41]}, {"END": [78, 79], "A'": [79, 80], "V'": [56, 57], "Q": [75, 77], "K'": [53, 55], "R": [78, 79], "K": [[44, 61], [46, 63]], "V": [[47, 64], [49, 65]], "example": [42, 80]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Michael's. The sweater is Kenneth's. The sweater is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not Michael? Answer: Yes\n Premise: < The blueberries is Nancy's. The lion is Paul's. The lion is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not Nancy? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [10, 11], "Q": [54, 56], "K'": [6, 9], "R": [57, 58], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 28]], "example": [1, 63]}, {"END": [123, 124], "A'": [120, 121], "V'": [73, 74], "Q": [116, 118], "K'": [69, 72], "R": [119, 120], "K": [[78, 86], [80, 88]], "V": [[81, 89], [82, 90]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Michael's. The sweater is Kenneth's. The sweater is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not Michael? Answer: Yes\n Premise: < The blueberries is Nancy's. The lion is Paul's. The lion is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not Paul? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [10, 11], "Q": [54, 56], "K'": [6, 9], "R": [57, 58], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 28]], "example": [1, 63]}, {"END": [123, 124], "A'": [120, 121], "V'": [73, 74], "Q": [116, 118], "K'": [69, 72], "R": [119, 120], "K": [[78, 86], [80, 88]], "V": [[81, 89], [82, 90]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Brian's. The squirrel is Daniel's. The juice is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not John? Answer: Yes\n Premise: < The juice is Susan's. The cat is Barbara's. The juice is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not Barbara? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [27, 28], "Q": [54, 57], "K'": [24, 26], "R": [58, 59], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 64]}, {"END": [122, 123], "A'": [119, 120], "V'": [80, 81], "Q": [115, 117], "K'": [78, 79], "R": [118, 119], "K": [[70, 85], [72, 87]], "V": [[73, 88], [74, 89]], "example": [65, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Brian's. The squirrel is Daniel's. The juice is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not John? Answer: Yes\n Premise: < The juice is Susan's. The cat is Barbara's. The juice is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not Paul? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [27, 28], "Q": [54, 57], "K'": [24, 26], "R": [58, 59], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 64]}, {"END": [122, 123], "A'": [119, 120], "V'": [80, 81], "Q": [115, 117], "K'": [78, 79], "R": [118, 119], "K": [[70, 85], [72, 87]], "V": [[73, 88], [74, 89]], "example": [65, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Steven's. The piano is Brian's. The gun is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not Steven? Answer: No\n Premise: < The mouse is William's. The mouse is Kimberly's. The shoes is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Barbara? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [15, 16], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[6, 20], [7, 21]], "V": [[8, 22], [9, 23]], "example": [1, 57]}, {"END": [115, 116], "A'": [112, 113], "V'": [82, 83], "Q": [109, 110], "K'": [79, 81], "R": [111, 112], "K": [[63, 70], [64, 71]], "V": [[65, 72], [66, 75]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Steven's. The piano is Brian's. The gun is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not Steven? Answer: No\n Premise: < The mouse is William's. The mouse is Kimberly's. The shoes is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Kimberly? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [15, 16], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[6, 20], [7, 21]], "V": [[8, 22], [9, 23]], "example": [1, 57]}, {"END": [117, 118], "A'": [112, 115], "V'": [82, 83], "Q": [109, 110], "K'": [79, 81], "R": [111, 112], "K": [[63, 70], [64, 71]], "V": [[65, 72], [66, 75]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Mary's. The lime is Anthony's. The lime is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not Mary? Answer: Yes\n Premise: < The shirt is John's. The shirt is Deborah's. The burger is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not Kenneth? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [9, 10], "Q": [52, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 61]}, {"END": [122, 123], "A'": [119, 120], "V'": [88, 89], "Q": [115, 117], "K'": [85, 87], "R": [118, 119], "K": [[67, 75], [69, 77]], "V": [[70, 78], [71, 81]], "example": [62, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Mary's. The lime is Anthony's. The lime is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not Mary? Answer: Yes\n Premise: < The shirt is John's. The shirt is Deborah's. The burger is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not Deborah? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [9, 10], "Q": [52, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 61]}, {"END": [124, 125], "A'": [119, 122], "V'": [88, 89], "Q": [115, 117], "K'": [85, 87], "R": [118, 119], "K": [[67, 75], [69, 77]], "V": [[70, 78], [71, 81]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The beetle is Laura's. The beetle is Kimberly's. The blueberries is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not Ruth? Answer: Yes\n Premise: < The mouse is Richard's. The mouse is Donna's. The trousers is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Nancy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [30, 31], "Q": [57, 60], "K'": [26, 29], "R": [61, 62], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 22]], "example": [1, 67]}, {"END": [125, 126], "A'": [122, 123], "V'": [92, 93], "Q": [119, 120], "K'": [88, 91], "R": [121, 122], "K": [[73, 80], [74, 81]], "V": [[75, 82], [76, 84]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The beetle is Laura's. The beetle is Kimberly's. The blueberries is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not Ruth? Answer: Yes\n Premise: < The mouse is Richard's. The mouse is Donna's. The trousers is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not Richard? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [30, 31], "Q": [57, 60], "K'": [26, 29], "R": [61, 62], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 22]], "example": [1, 67]}, {"END": [125, 126], "A'": [122, 123], "V'": [92, 93], "Q": [119, 120], "K'": [88, 91], "R": [121, 122], "K": [[73, 80], [74, 81]], "V": [[75, 82], [76, 84]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Karen's. The elephant is Richard's. The beetle is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not Karen? Answer: No\n Premise: < The shotgun is Joseph's. The costume is Linda's. The costume is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not Joseph? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [29, 30], "Q": [56, 59], "K'": [25, 28], "R": [60, 61], "K": [[6, 16], [9, 19]], "V": [[10, 20], [12, 21]], "example": [1, 67]}, {"END": [127, 128], "A'": [124, 125], "V'": [76, 77], "Q": [120, 122], "K'": [73, 75], "R": [123, 124], "K": [[81, 90], [83, 92]], "V": [[84, 93], [86, 94]], "example": [68, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Karen's. The elephant is Richard's. The beetle is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not Karen? Answer: No\n Premise: < The shotgun is Joseph's. The costume is Linda's. The costume is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not Steven? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [29, 30], "Q": [56, 59], "K'": [25, 28], "R": [60, 61], "K": [[6, 16], [9, 19]], "V": [[10, 20], [12, 21]], "example": [1, 67]}, {"END": [127, 128], "A'": [124, 125], "V'": [76, 77], "Q": [120, 122], "K'": [73, 75], "R": [123, 124], "K": [[81, 90], [83, 92]], "V": [[84, 93], [86, 94]], "example": [68, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is James's. The beer is Ronald's. The dog is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beer is not Kevin? Answer: Yes\n Premise: < The tiger is Laura's. The tiger is Steven's. The football is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns tiger is not Betty? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [25, 26], "Q": [52, 54], "K'": [23, 24], "R": [55, 56], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 61]}, {"END": [119, 120], "A'": [116, 117], "V'": [85, 86], "Q": [112, 114], "K'": [83, 84], "R": [115, 116], "K": [[67, 75], [69, 77]], "V": [[70, 78], [71, 79]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is James's. The beer is Ronald's. The dog is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beer is not Kevin? Answer: Yes\n Premise: < The tiger is Laura's. The tiger is Steven's. The football is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns tiger is not Steven? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [25, 26], "Q": [52, 54], "K'": [23, 24], "R": [55, 56], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 61]}, {"END": [119, 120], "A'": [116, 117], "V'": [85, 86], "Q": [112, 114], "K'": [83, 84], "R": [115, 116], "K": [[67, 75], [69, 77]], "V": [[70, 78], [71, 79]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Dorothy's. The whiskey is Margaret's. The whiskey is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns whiskey is not Dorothy? Answer: Yes\n Premise: < The blackberries is Lisa's. The blackberries is Charles's. The wine is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not Sandra? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [9, 11], "Q": [53, 55], "K'": [6, 8], "R": [56, 57], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 27]], "example": [1, 63]}, {"END": [126, 127], "A'": [122, 124], "V'": [89, 91], "Q": [117, 120], "K'": [87, 88], "R": [121, 122], "K": [[69, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Dorothy's. The whiskey is Margaret's. The whiskey is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns whiskey is not Dorothy? Answer: Yes\n Premise: < The blackberries is Lisa's. The blackberries is Charles's. The wine is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not Charles? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [9, 11], "Q": [53, 55], "K'": [6, 8], "R": [56, 57], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 27]], "example": [1, 63]}, {"END": [125, 126], "A'": [122, 123], "V'": [89, 91], "Q": [117, 120], "K'": [87, 88], "R": [121, 122], "K": [[69, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [64, 127]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< David has rabbit. Sharon has jacket. Barbara has bread. >. So Barbara owns a kind of food\n < Donna has spaghetti. Michael has plum. John has basketball. >. So John owns a kind of sport\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [15, 16], "Q": [20, 21], "K": [13, 14], "R": null, "K'": [[2, 7], [3, 9]], "V'": [[4, 10], [6, 12]], "example": [1, 27]}, {"END": [53, 54], "A": [54, 55], "V": [43, 44], "Q": [48, 49], "K": [41, 42], "R": null, "K'": [[29, 36], [31, 37]], "V'": [[32, 38], [35, 40]], "example": [28, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Anthony has car. Deborah has whiskey. Donald has wine. >. So Anthony owns a kind of vehicle\n < Jeff has goat. John has donkey. Laura has piano. >. So Laura owns a kind of instrument\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [4, 5], "Q": [20, 21], "K": [2, 3], "R": null, "K'": [[6, 13], [9, 14]], "V'": [[10, 15], [12, 16]], "example": [1, 27]}, {"END": [51, 52], "A": [52, 53], "V": [41, 42], "Q": [46, 47], "K": [39, 40], "R": null, "K'": [[29, 34], [30, 35]], "V'": [[31, 36], [33, 38]], "example": [28, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Margaret has baseball. Mark has mosquito. Jeff has durian. >. So Mark owns a kind of insect\n < Mary has cherries. Edward has rifle. Robert has sheep. >. So Robert owns a kind of animal\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [8, 11], "Q": [20, 21], "K": [6, 7], "R": null, "K'": [[2, 12], [3, 13]], "V'": [[4, 14], [5, 16]], "example": [1, 27]}, {"END": [51, 52], "A": [52, 53], "V": [41, 42], "Q": [46, 47], "K": [39, 40], "R": null, "K'": [[29, 34], [30, 35]], "V'": [[31, 36], [33, 38]], "example": [28, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< William has whiskey. Betty has fox. Nancy has blackberries. >. So William owns a kind of drink\n < Brian has lion. Donna has tea. Kenneth has lime. >. So Brian owns a kind of animal\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [4, 6], "Q": [21, 22], "K": [2, 3], "R": null, "K'": [[7, 12], [8, 13]], "V'": [[9, 14], [11, 17]], "example": [1, 28]}, {"END": [53, 54], "A": [54, 55], "V": [32, 34], "Q": [48, 49], "K": [30, 31], "R": null, "K'": [[35, 40], [37, 41]], "V'": [[38, 42], [39, 44]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< James has cake. Susan has pineapple. Donna has mosquito. >. So Donna owns a kind of insect\n < Richard has pants. Nancy has vodka. Donna has mouse. >. So Nancy owns a kind of drink\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [16, 19], "Q": [23, 25], "K": [13, 15], "R": null, "K'": [[2, 7], [3, 8]], "V'": [[4, 9], [6, 12]], "example": [1, 31]}, {"END": [57, 58], "A": [58, 59], "V": [40, 43], "Q": [52, 53], "K": [38, 39], "R": null, "K'": [[33, 44], [34, 46]], "V'": [[35, 47], [37, 48]], "example": [32, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< George has bee. Jason has T-shirt. Michael has deer. >. So Jason owns a kind of clothes\n < Steven has steak. Linda has mosquito. Joseph has bus. >. So Joseph owns a kind of vehicle\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [9, 13], "Q": [22, 23], "K": [7, 8], "R": null, "K'": [[2, 14], [3, 15]], "V'": [[4, 16], [6, 18]], "example": [1, 29]}, {"END": [55, 56], "A": [56, 57], "V": [45, 46], "Q": [50, 51], "K": [43, 44], "R": null, "K'": [[31, 36], [32, 38]], "V'": [[33, 39], [35, 42]], "example": [30, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Carol has lemon. David has sheep. Michael has cherries. >. So David owns a kind of animal\n < Mark has spaghetti. Steven has shotgun. Linda has grapes. >. So Mark owns a kind of food\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [9, 10], "Q": [19, 20], "K": [7, 8], "R": null, "K'": [[2, 11], [3, 12]], "V'": [[4, 13], [6, 15]], "example": [1, 26]}, {"END": [54, 55], "A": [55, 56], "V": [30, 33], "Q": [49, 50], "K": [28, 29], "R": null, "K'": [[34, 39], [35, 41]], "V'": [[36, 42], [38, 45]], "example": [27, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Jennifer has bus. Helen has rabbit. George has blackberries. >. So Jennifer owns a kind of vehicle\n < Paul has violin. Edward has monkey. Kenneth has papaya. >. So Kenneth owns a kind of fruit\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [5, 6], "Q": [21, 23], "K": [2, 4], "R": null, "K'": [[7, 12], [8, 13]], "V'": [[9, 14], [11, 17]], "example": [1, 29]}, {"END": [54, 55], "A": [55, 56], "V": [43, 45], "Q": [49, 50], "K": [41, 42], "R": null, "K'": [[31, 36], [32, 37]], "V'": [[33, 38], [35, 40]], "example": [30, 56]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < David has rabbit. Sharon has jacket. Barbara has bread. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a kind of animal? Answer: No\n Premise: < Sarah has spaghetti. Donna has plum. Steven has basketball. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [18, 19], "Q": [38, 39], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 12]], "V'": [[7, 13], [9, 15]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [68, 69], "Q": [88, 89], "K": [66, 67], "R": null, "K'": [[54, 60], [55, 62]], "V'": [[56, 63], [59, 65]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < David has rabbit. Sharon has jacket. Barbara has bread. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a kind of animal? Answer: No\n Premise: < Sarah has spaghetti. Donna has plum. Steven has basketball. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of fruit? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [18, 19], "Q": [38, 39], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 12]], "V'": [[7, 13], [9, 15]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [68, 69], "Q": [88, 89], "K": [66, 67], "R": null, "K'": [[54, 60], [55, 62]], "V'": [[56, 63], [59, 65]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < John has elephant. Daniel has piano. Brian has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that John owns a kind of fruit? Answer: No\n Premise: < Susan has handgun. Ronald has monkey. Dorothy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [7, 10], "Q": [40, 41], "K": [5, 6], "R": null, "K'": [[11, 15], [12, 16]], "V'": [[13, 17], [14, 21]], "example": [1, 51]}, {"END": [100, 101], "A": [97, 98], "V": [58, 60], "Q": [91, 92], "K": [56, 57], "R": null, "K'": [[61, 67], [63, 69]], "V'": [[64, 70], [66, 72]], "example": [52, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < John has elephant. Daniel has piano. Brian has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that John owns a kind of fruit? Answer: No\n Premise: < Susan has handgun. Ronald has monkey. Dorothy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns a kind of animal? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [7, 10], "Q": [40, 41], "K": [5, 6], "R": null, "K'": [[11, 15], [12, 16]], "V'": [[13, 17], [14, 21]], "example": [1, 51]}, {"END": [100, 101], "A": [97, 98], "V": [58, 60], "Q": [91, 92], "K": [56, 57], "R": null, "K'": [[61, 67], [63, 69]], "V'": [[64, 70], [66, 72]], "example": [52, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Carol has spaghetti. Barbara has durian. Kimberly has juice. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns a kind of food? Answer: No\n Premise: < Ronald has violin. William has spaghetti. Mark has gun. >. Answer with Yes or No. Can it be inferred from the premise that William owns a kind of food? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [20, 22], "Q": [41, 44], "K": [16, 19], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[7, 13], [10, 15]], "example": [1, 54]}, {"END": [102, 103], "A": [99, 100], "V": [67, 70], "Q": [93, 94], "K": [65, 66], "R": null, "K'": [[59, 71], [61, 72]], "V'": [[62, 73], [64, 74]], "example": [55, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Carol has spaghetti. Barbara has durian. Kimberly has juice. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns a kind of food? Answer: No\n Premise: < Ronald has violin. William has spaghetti. Mark has gun. >. Answer with Yes or No. Can it be inferred from the premise that William owns a kind of instrument? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [20, 22], "Q": [41, 44], "K": [16, 19], "R": null, "K'": [[5, 11], [6, 12]], "V'": [[7, 13], [10, 15]], "example": [1, 54]}, {"END": [102, 103], "A": [99, 100], "V": [67, 70], "Q": [93, 94], "K": [65, 66], "R": null, "K'": [[59, 71], [61, 72]], "V'": [[62, 73], [64, 74]], "example": [55, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mary has lion. Kenneth has tea. Kevin has lime. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a kind of animal? Answer: Yes\n Premise: < James has cake. Susan has pineapple. Donna has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that Donna owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [7, 9], "Q": [37, 38], "K": [5, 6], "R": null, "K'": [[10, 14], [11, 15]], "V'": [[12, 16], [13, 18]], "example": [1, 48]}, {"END": [99, 100], "A": [96, 97], "V": [67, 70], "Q": [89, 91], "K": [64, 66], "R": null, "K'": [[53, 58], [54, 59]], "V'": [[55, 60], [57, 63]], "example": [49, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mary has lion. Kenneth has tea. Kevin has lime. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a kind of animal? Answer: Yes\n Premise: < James has cake. Susan has pineapple. Donna has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that Donna owns a kind of food? Answer: No\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [7, 9], "Q": [37, 38], "K": [5, 6], "R": null, "K'": [[10, 14], [11, 15]], "V'": [[12, 16], [13, 18]], "example": [1, 48]}, {"END": [99, 100], "A": [96, 97], "V": [67, 70], "Q": [89, 91], "K": [64, 66], "R": null, "K'": [[53, 58], [54, 59]], "V'": [[55, 60], [57, 63]], "example": [49, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has dog. Carol has violin. Anthony has pistol. >. Answer with Yes or No. Can it be inferred from the premise that Carol owns a kind of instrument? Answer: Yes\n Premise: < Michael has football. Helen has costume. John has deer. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [11, 13], "Q": [37, 38], "K": [9, 10], "R": null, "K'": [[5, 14], [6, 15]], "V'": [[7, 16], [8, 18]], "example": [1, 48]}, {"END": [94, 95], "A": [91, 92], "V": [55, 56], "Q": [85, 86], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 63]], "V'": [[59, 64], [61, 66]], "example": [49, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has dog. Carol has violin. Anthony has pistol. >. Answer with Yes or No. Can it be inferred from the premise that Carol owns a kind of instrument? Answer: Yes\n Premise: < Michael has football. Helen has costume. John has deer. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns a kind of clothes? Answer: No\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [11, 13], "Q": [37, 38], "K": [9, 10], "R": null, "K'": [[5, 14], [6, 15]], "V'": [[7, 16], [8, 18]], "example": [1, 48]}, {"END": [94, 95], "A": [91, 92], "V": [55, 56], "Q": [85, 86], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 63]], "V'": [[59, 64], [61, 66]], "example": [49, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has goat. Margaret has meat. Donna has beer. >. Answer with Yes or No. Can it be inferred from the premise that Margaret owns a kind of food? Answer: Yes\n Premise: < Michael has hamburger. Ronald has pineapple. John has cake. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [13, 14], "Q": [39, 40], "K": [11, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[8, 18], [10, 20]], "example": [1, 50]}, {"END": [101, 102], "A": [98, 99], "V": [64, 67], "Q": [91, 93], "K": [61, 63], "R": null, "K'": [[55, 68], [56, 69]], "V'": [[57, 70], [60, 72]], "example": [51, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has goat. Margaret has meat. Donna has beer. >. Answer with Yes or No. Can it be inferred from the premise that Margaret owns a kind of food? Answer: Yes\n Premise: < Michael has hamburger. Ronald has pineapple. John has cake. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a kind of food? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [13, 14], "Q": [39, 40], "K": [11, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[8, 18], [10, 20]], "example": [1, 50]}, {"END": [101, 102], "A": [98, 99], "V": [64, 67], "Q": [91, 93], "K": [61, 63], "R": null, "K'": [[55, 68], [56, 69]], "V'": [[57, 70], [60, 72]], "example": [51, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has strawberries. Sandra has plum. Richard has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Richard owns a kind of animal? Answer: Yes\n Premise: < Kenneth has tiger. Paul has jacket. Sandra has steak. >. Answer with Yes or No. Can it be inferred from the premise that Paul owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [20, 21], "Q": [40, 41], "K": [18, 19], "R": null, "K'": [[5, 12], [6, 14]], "V'": [[7, 15], [11, 17]], "example": [1, 51]}, {"END": [99, 100], "A": [96, 97], "V": [63, 65], "Q": [90, 91], "K": [61, 62], "R": null, "K'": [[56, 66], [57, 68]], "V'": [[58, 69], [60, 71]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has strawberries. Sandra has plum. Richard has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Richard owns a kind of animal? Answer: Yes\n Premise: < Kenneth has tiger. Paul has jacket. Sandra has steak. >. Answer with Yes or No. Can it be inferred from the premise that Paul owns a kind of animal? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [20, 21], "Q": [40, 41], "K": [18, 19], "R": null, "K'": [[5, 12], [6, 14]], "V'": [[7, 15], [11, 17]], "example": [1, 51]}, {"END": [99, 100], "A": [96, 97], "V": [63, 65], "Q": [90, 91], "K": [61, 62], "R": null, "K'": [[56, 66], [57, 68]], "V'": [[58, 69], [60, 71]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < George has gun. Robert has watermelon. Steven has bus. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of vehicle? Answer: Yes\n Premise: < Carol has jersey. Steven has goose. Sharon has uniform. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of animal? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [18, 19], "Q": [38, 39], "K": [16, 17], "R": null, "K'": [[5, 9], [6, 10]], "V'": [[7, 11], [8, 15]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [62, 64], "Q": [88, 89], "K": [60, 61], "R": null, "K'": [[54, 65], [55, 67]], "V'": [[56, 68], [59, 69]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < George has gun. Robert has watermelon. Steven has bus. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of vehicle? Answer: Yes\n Premise: < Carol has jersey. Steven has goose. Sharon has uniform. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of clothes? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [18, 19], "Q": [38, 39], "K": [16, 17], "R": null, "K'": [[5, 9], [6, 10]], "V'": [[7, 11], [8, 15]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [62, 64], "Q": [88, 89], "K": [60, 61], "R": null, "K'": [[54, 65], [55, 67]], "V'": [[56, 68], [59, 69]], "example": [50, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The rabbit is David's. The jacket is Sharon's. The bread is Barbara's. >. So Barbara owns a kind of food\n < The spaghetti is Donna's. The plum is Michael's. The basketball is John's. >. So John owns a kind of sport\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [20, 21], "Q": [29, 30], "K": [22, 23], "R": null, "K'": [[6, 14], [7, 16]], "V'": [[3, 11], [5, 13]], "example": [1, 36]}, {"END": [71, 72], "A": [72, 73], "V": [57, 58], "Q": [66, 67], "K": [59, 60], "R": null, "K'": [[43, 52], [45, 53]], "V'": [[39, 49], [42, 51]], "example": [37, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The car is Anthony's. The whiskey is Deborah's. The wine is Donald's. >. So Anthony owns a kind of vehicle\n < The goat is Jeff's. The donkey is John's. The piano is Laura's. >. So Laura owns a kind of instrument\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [3, 4], "Q": [29, 30], "K": [5, 6], "R": null, "K'": [[13, 22], [16, 23]], "V'": [[10, 20], [12, 21]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [55, 56], "Q": [64, 65], "K": [57, 58], "R": null, "K'": [[42, 50], [43, 51]], "V'": [[39, 47], [41, 49]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The baseball is Margaret's. The mosquito is Mark's. The durian is Jeff's. >. So Mark owns a kind of insect\n < The cherries is Mary's. The rifle is Edward's. The sheep is Robert's. >. So Robert owns a kind of animal\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [10, 13], "Q": [29, 30], "K": [14, 15], "R": null, "K'": [[5, 22], [6, 23]], "V'": [[3, 19], [4, 21]], "example": [1, 36]}, {"END": [69, 70], "A": [70, 71], "V": [55, 56], "Q": [64, 65], "K": [57, 58], "R": null, "K'": [[42, 50], [43, 51]], "V'": [[39, 47], [41, 49]], "example": [37, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The whiskey is William's. The fox is Betty's. The blackberries is Nancy's. >. So William owns a kind of drink\n < The lion is Brian's. The tea is Donna's. The lime is Kenneth's. >. So Brian owns a kind of animal\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [3, 5], "Q": [30, 31], "K": [6, 7], "R": null, "K'": [[14, 23], [15, 24]], "V'": [[11, 19], [13, 22]], "example": [1, 37]}, {"END": [71, 72], "A": [72, 73], "V": [40, 42], "Q": [66, 67], "K": [43, 44], "R": null, "K'": [[50, 59], [52, 60]], "V'": [[48, 56], [49, 58]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is James's. The pineapple is Susan's. The mosquito is Donna's. >. So Donna owns a kind of insect\n < The pants is Richard's. The vodka is Nancy's. The mouse is Donna's. >. So Nancy owns a kind of drink\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [20, 23], "Q": [32, 34], "K": [24, 26], "R": null, "K'": [[6, 15], [7, 16]], "V'": [[3, 11], [5, 14]], "example": [1, 40]}, {"END": [75, 76], "A": [76, 77], "V": [51, 54], "Q": [70, 71], "K": [55, 56], "R": null, "K'": [[46, 62], [47, 64]], "V'": [[43, 60], [45, 61]], "example": [41, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bee is George's. T-shirt is Jason's. The deer is Michael's. >. So Jason owns a kind of clothes\n < The steak is Steven's. The mosquito is Linda's. The bus is Joseph's. >. So Joseph owns a kind of vehicle\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [10, 14], "Q": [30, 31], "K": [15, 16], "R": null, "K'": [[6, 23], [7, 24]], "V'": [[3, 20], [5, 22]], "example": [1, 37]}, {"END": [72, 73], "A": [73, 74], "V": [58, 59], "Q": [67, 68], "K": [60, 61], "R": null, "K'": [[43, 52], [44, 54]], "V'": [[40, 48], [42, 51]], "example": [38, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lemon is Carol's. The sheep is David's. The cherries is Michael's. >. So David owns a kind of animal\n < The spaghetti is Mark's. The shotgun is Steven's. The grapes is Linda's. >. So Mark owns a kind of food\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [11, 12], "Q": [28, 29], "K": [13, 14], "R": null, "K'": [[6, 21], [7, 22]], "V'": [[3, 18], [5, 20]], "example": [1, 35]}, {"END": [72, 73], "A": [73, 74], "V": [38, 41], "Q": [67, 68], "K": [42, 43], "R": null, "K'": [[50, 59], [51, 61]], "V'": [[47, 55], [49, 58]], "example": [36, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bus is Jennifer's. The rabbit is Helen's. The blackberries is George's. >. So Jennifer owns a kind of vehicle\n < The violin is Paul's. The monkey is Edward's. The papaya is Kenneth's. >. So Kenneth owns a kind of fruit\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [3, 4], "Q": [30, 32], "K": [5, 7], "R": null, "K'": [[14, 23], [15, 24]], "V'": [[11, 19], [13, 22]], "example": [1, 38]}, {"END": [72, 73], "A": [73, 74], "V": [57, 59], "Q": [67, 68], "K": [60, 61], "R": null, "K'": [[44, 52], [45, 53]], "V'": [[41, 49], [43, 51]], "example": [39, 74]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is David's. The jacket is Sharon's. The bread is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a kind of animal? Answer: No\n Premise: < The spaghetti is Sarah's. The plum is Donna's. The basketball is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [23, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[9, 17], [10, 19]], "V'": [[6, 14], [8, 16]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [82, 83], "Q": [106, 107], "K": [84, 85], "R": null, "K'": [[68, 76], [69, 78]], "V'": [[64, 73], [67, 75]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is David's. The jacket is Sharon's. The bread is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a kind of animal? Answer: No\n Premise: < The spaghetti is Sarah's. The plum is Donna's. The basketball is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of fruit? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [23, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[9, 17], [10, 19]], "V'": [[6, 14], [8, 16]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [82, 83], "Q": [106, 107], "K": [84, 85], "R": null, "K'": [[68, 76], [69, 78]], "V'": [[64, 73], [67, 75]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is John's. The piano is Daniel's. The watermelon is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that John owns a kind of fruit? Answer: No\n Premise: < The handgun is Susan's. The monkey is Ronald's. The lemon is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [6, 9], "Q": [49, 50], "K": [10, 11], "R": null, "K'": [[17, 27], [18, 28]], "V'": [[15, 22], [16, 26]], "example": [1, 60]}, {"END": [118, 119], "A": [115, 116], "V": [66, 68], "Q": [109, 110], "K": [69, 70], "R": null, "K'": [[77, 86], [79, 88]], "V'": [[74, 83], [76, 85]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is John's. The piano is Daniel's. The watermelon is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that John owns a kind of fruit? Answer: No\n Premise: < The handgun is Susan's. The monkey is Ronald's. The lemon is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Susan owns a kind of animal? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [6, 9], "Q": [49, 50], "K": [10, 11], "R": null, "K'": [[17, 27], [18, 28]], "V'": [[15, 22], [16, 26]], "example": [1, 60]}, {"END": [118, 119], "A": [115, 116], "V": [66, 68], "Q": [109, 110], "K": [69, 70], "R": null, "K'": [[77, 86], [79, 88]], "V'": [[74, 83], [76, 85]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The spaghetti is Carol's. The durian is Barbara's. The juice is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns a kind of food? Answer: No\n Premise: < The violin is Ronald's. The spaghetti is William's. The gun is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that William owns a kind of food? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [23, 25], "Q": [50, 53], "K": [26, 29], "R": null, "K'": [[10, 18], [11, 19]], "V'": [[6, 15], [9, 17]], "example": [1, 63]}, {"END": [120, 121], "A": [117, 118], "V": [78, 81], "Q": [111, 112], "K": [82, 83], "R": null, "K'": [[72, 89], [74, 90]], "V'": [[69, 87], [71, 88]], "example": [64, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The spaghetti is Carol's. The durian is Barbara's. The juice is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly owns a kind of food? Answer: No\n Premise: < The violin is Ronald's. The spaghetti is William's. The gun is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that William owns a kind of instrument? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [23, 25], "Q": [50, 53], "K": [26, 29], "R": null, "K'": [[10, 18], [11, 19]], "V'": [[6, 15], [9, 17]], "example": [1, 63]}, {"END": [120, 121], "A": [117, 118], "V": [78, 81], "Q": [111, 112], "K": [82, 83], "R": null, "K'": [[72, 89], [74, 90]], "V'": [[69, 87], [71, 88]], "example": [64, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Mary's. The tea is Kenneth's. The lime is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a kind of animal? Answer: Yes\n Premise: < The cake is James's. The pineapple is Susan's. The mosquito is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Donna owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [6, 8], "Q": [46, 47], "K": [9, 10], "R": null, "K'": [[16, 24], [17, 25]], "V'": [[14, 21], [15, 23]], "example": [1, 57]}, {"END": [117, 118], "A": [114, 115], "V": [80, 83], "Q": [107, 109], "K": [84, 86], "R": null, "K'": [[66, 75], [67, 76]], "V'": [[63, 71], [65, 74]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Mary's. The tea is Kenneth's. The lime is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a kind of animal? Answer: Yes\n Premise: < The cake is James's. The pineapple is Susan's. The mosquito is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Donna owns a kind of food? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [6, 8], "Q": [46, 47], "K": [9, 10], "R": null, "K'": [[16, 24], [17, 25]], "V'": [[14, 21], [15, 23]], "example": [1, 57]}, {"END": [117, 118], "A": [114, 115], "V": [80, 83], "Q": [107, 109], "K": [84, 86], "R": null, "K'": [[66, 75], [67, 76]], "V'": [[63, 71], [65, 74]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Brian's. The violin is Carol's. The pistol is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Carol owns a kind of instrument? Answer: Yes\n Premise: < The football is Michael's. The costume is Helen's. The deer is John's. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [13, 15], "Q": [46, 47], "K": [16, 17], "R": null, "K'": [[8, 24], [9, 25]], "V'": [[6, 21], [7, 23]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [63, 64], "Q": [103, 104], "K": [65, 66], "R": null, "K'": [[73, 81], [74, 82]], "V'": [[70, 78], [72, 80]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Brian's. The violin is Carol's. The pistol is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Carol owns a kind of instrument? Answer: Yes\n Premise: < The football is Michael's. The costume is Helen's. The deer is John's. >. Answer with Yes or No. Can it be inferred from the premise that Michael owns a kind of clothes? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [13, 15], "Q": [46, 47], "K": [16, 17], "R": null, "K'": [[8, 24], [9, 25]], "V'": [[6, 21], [7, 23]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [63, 64], "Q": [103, 104], "K": [65, 66], "R": null, "K'": [[73, 81], [74, 82]], "V'": [[70, 78], [72, 80]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goat is Sandra's. The meat is Margaret's. The beer is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Margaret owns a kind of food? Answer: Yes\n Premise: < The hamburger is Michael's. The pineapple is Ronald's. The cake is John's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [15, 16], "Q": [48, 49], "K": [17, 18], "R": null, "K'": [[9, 25], [11, 27]], "V'": [[6, 22], [8, 24]], "example": [1, 59]}, {"END": [119, 120], "A": [116, 117], "V": [74, 77], "Q": [109, 111], "K": [78, 80], "R": null, "K'": [[69, 87], [70, 88]], "V'": [[65, 84], [68, 86]], "example": [60, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goat is Sandra's. The meat is Margaret's. The beer is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Margaret owns a kind of food? Answer: Yes\n Premise: < The hamburger is Michael's. The pineapple is Ronald's. The cake is John's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a kind of food? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [15, 16], "Q": [48, 49], "K": [17, 18], "R": null, "K'": [[9, 25], [11, 27]], "V'": [[6, 22], [8, 24]], "example": [1, 59]}, {"END": [119, 120], "A": [116, 117], "V": [74, 77], "Q": [109, 111], "K": [78, 80], "R": null, "K'": [[69, 87], [70, 88]], "V'": [[65, 84], [68, 86]], "example": [60, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Brian's. The plum is Sandra's. The mouse is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Richard owns a kind of animal? Answer: Yes\n Premise: < The tiger is Kenneth's. The jacket is Paul's. The steak is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that Paul owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [25, 26], "Q": [49, 50], "K": [27, 28], "R": null, "K'": [[11, 19], [12, 21]], "V'": [[6, 16], [10, 18]], "example": [1, 60]}, {"END": [117, 118], "A": [114, 115], "V": [74, 76], "Q": [108, 109], "K": [77, 78], "R": null, "K'": [[69, 85], [70, 87]], "V'": [[66, 82], [68, 84]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Brian's. The plum is Sandra's. The mouse is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Richard owns a kind of animal? Answer: Yes\n Premise: < The tiger is Kenneth's. The jacket is Paul's. The steak is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that Paul owns a kind of animal? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [25, 26], "Q": [49, 50], "K": [27, 28], "R": null, "K'": [[11, 19], [12, 21]], "V'": [[6, 16], [10, 18]], "example": [1, 60]}, {"END": [117, 118], "A": [114, 115], "V": [74, 76], "Q": [108, 109], "K": [77, 78], "R": null, "K'": [[69, 85], [70, 87]], "V'": [[66, 82], [68, 84]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is George's. The watermelon is Robert's. The bus is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of vehicle? Answer: Yes\n Premise: < The jersey is Carol's. The goose is Steven's. The uniform is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of animal? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [23, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[8, 18], [9, 19]], "V'": [[6, 13], [7, 17]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [73, 75], "Q": [106, 107], "K": [76, 77], "R": null, "K'": [[68, 83], [69, 85]], "V'": [[64, 81], [67, 82]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is George's. The watermelon is Robert's. The bus is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of vehicle? Answer: Yes\n Premise: < The jersey is Carol's. The goose is Steven's. The uniform is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a kind of clothes? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [23, 24], "Q": [47, 48], "K": [25, 26], "R": null, "K'": [[8, 18], [9, 19]], "V'": [[6, 13], [7, 17]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [73, 75], "Q": [106, 107], "K": [76, 77], "R": null, "K'": [[68, 83], [69, 85]], "V'": [[64, 81], [67, 82]], "example": [59, 117]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< George has rifle. Barbara has plum. Barbara has fox. >. Barbara does not own a kind of weapon\n < Mary has hamburger. Christopher has cherries. Christopher has trousers. >. Christopher does not own a kind of food\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [4, 6], "Q": [19, 20], "K'": [2, 3], "R": [21, 22], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 16]], "example": [1, 27]}, {"END": [54, 55], "A'": [55, 56], "V'": [31, 34], "Q": [48, 49], "K'": [29, 30], "R": [50, 51], "K": [[35, 40], [36, 41]], "V": [[37, 42], [39, 45]], "example": [28, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Kimberly has rabbit. Kimberly has bread. Steven has wine. >. Kimberly does not own a kind of drink\n < Kimberly has jersey. Donald has wolf. Donald has juice. >. Donald does not own a kind of clothes\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [17, 18], "Q": [21, 24], "K'": [15, 16], "R": [25, 26], "K": [[2, 9], [5, 12]], "V": [[6, 13], [8, 14]], "example": [1, 31]}, {"END": [59, 60], "A'": [60, 61], "V'": [37, 40], "Q": [53, 54], "K'": [33, 36], "R": [55, 56], "K": [[41, 46], [42, 47]], "V": [[43, 48], [45, 50]], "example": [32, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Christopher has pizza. Elizabeth has lemon. Elizabeth has cat. >. Elizabeth does not own a kind of food\n < Barbara has baseball. Charles has mosquito. Barbara has durian. >. Barbara does not own a kind of insect\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [4, 6], "Q": [18, 19], "K'": [2, 3], "R": [20, 21], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 15]], "example": [1, 26]}, {"END": [51, 52], "A'": [52, 53], "V'": [34, 37], "Q": [45, 46], "K'": [32, 33], "R": [47, 48], "K": [[28, 38], [29, 39]], "V": [[30, 40], [31, 42]], "example": [27, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Jeff has tea. Jeff has violin. Donna has football. >. Jeff does not own a kind of sport\n < Kenneth has guitar. Mary has lime. Mary has peach. >. Mary does not own a kind of instrument\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [14, 15], "Q": [18, 19], "K'": [11, 13], "R": [20, 21], "K": [[2, 6], [3, 7]], "V": [[4, 8], [5, 10]], "example": [1, 26]}, {"END": [50, 51], "A'": [51, 52], "V'": [30, 31], "Q": [44, 45], "K'": [28, 29], "R": [46, 47], "K": [[32, 37], [33, 38]], "V": [[34, 39], [36, 41]], "example": [27, 52]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Kenneth has shirt. Kenneth has pizza. Nancy has basketball. >. Kenneth does not own a kind of sport\n < Michael has lion. Nancy has tea. Nancy has lime. >. Nancy does not own a kind of animal\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [14, 15], "Q": [18, 19], "K'": [12, 13], "R": [20, 21], "K": [[2, 7], [3, 8]], "V": [[4, 9], [6, 11]], "example": [1, 26]}, {"END": [50, 51], "A'": [51, 52], "V'": [30, 32], "Q": [44, 45], "K'": [28, 29], "R": [46, 47], "K": [[33, 37], [34, 38]], "V": [[35, 39], [36, 41]], "example": [27, 52]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Donna has revolver. Kenneth has kiwi. Donna has pizza. >. Donna does not own a kind of fruit\n < Michelle has rabbit. Michelle has taxi. James has shotgun. >. Michelle does not own a kind of weapon\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [10, 12], "Q": [21, 23], "K'": [8, 9], "R": [24, 25], "K": [[2, 13], [4, 15]], "V": [[5, 16], [7, 18]], "example": [1, 30]}, {"END": [58, 59], "A'": [59, 60], "V'": [46, 48], "Q": [51, 53], "K'": [44, 45], "R": [54, 55], "K": [[32, 38], [34, 40]], "V": [[35, 41], [37, 43]], "example": [31, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Deborah has dog. Deborah has elephant. Joseph has beetle. >. Deborah does not own a kind of insect\n < Michael has bee. Ruth has T-shirt. Michael has deer. >. Michael does not own a kind of clothes\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [18, 21], "Q": [24, 27], "K'": [16, 17], "R": [28, 29], "K": [[2, 8], [5, 11]], "V": [[6, 12], [7, 15]], "example": [1, 34]}, {"END": [61, 62], "A'": [62, 63], "V'": [43, 47], "Q": [55, 56], "K'": [41, 42], "R": [57, 58], "K": [[36, 48], [37, 49]], "V": [[38, 50], [40, 52]], "example": [35, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Steven has pizza. Carol has handgun. Carol has guitar. >. Carol does not own a kind of food\n < Daniel has pants. Daniel has motorcycle. Nancy has mosquito. >. Daniel does not own a kind of insect\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [4, 6], "Q": [18, 19], "K'": [2, 3], "R": [20, 21], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 15]], "example": [1, 26]}, {"END": [52, 53], "A'": [53, 54], "V'": [40, 43], "Q": [46, 47], "K'": [38, 39], "R": [48, 49], "K": [[28, 33], [29, 34]], "V": [[30, 35], [32, 37]], "example": [27, 54]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < George has rifle. Barbara has plum. Barbara has fox. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a kind of weapon? Answer: Yes\n Premise: < David has bus. David has lion. Lisa has baseball. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [7, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[12, 17], [14, 19]], "example": [1, 50]}, {"END": [96, 97], "A'": [93, 94], "V'": [66, 67], "Q": [86, 87], "K'": [64, 65], "R": [88, 89], "K": [[55, 59], [56, 60]], "V": [[57, 61], [58, 63]], "example": [51, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < George has rifle. Barbara has plum. Barbara has fox. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a kind of weapon? Answer: Yes\n Premise: < David has bus. David has lion. Lisa has baseball. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a kind of animal? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [7, 9], "Q": [38, 39], "K'": [5, 6], "R": [40, 41], "K": [[10, 15], [11, 16]], "V": [[12, 17], [14, 19]], "example": [1, 50]}, {"END": [96, 97], "A'": [93, 94], "V'": [66, 67], "Q": [86, 87], "K'": [64, 65], "R": [88, 89], "K": [[55, 59], [56, 60]], "V": [[57, 61], [58, 63]], "example": [51, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has mosquito. Mark has juice. Mark has pig. >. Answer with Yes or No. Can it be inferred from the premise that Mark does not own a kind of insect? Answer: Yes\n Premise: < Dorothy has T-shirt. Kevin has car. Dorothy has pineapple. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [8, 11], "Q": [40, 41], "K'": [5, 7], "R": [42, 43], "K": [[12, 17], [13, 18]], "V": [[14, 19], [16, 21]], "example": [1, 52]}, {"END": [105, 106], "A'": [102, 103], "V'": [67, 68], "Q": [94, 96], "K'": [65, 66], "R": [97, 98], "K": [[57, 69], [59, 71]], "V": [[60, 72], [64, 75]], "example": [53, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has mosquito. Mark has juice. Mark has pig. >. Answer with Yes or No. Can it be inferred from the premise that Mark does not own a kind of insect? Answer: Yes\n Premise: < Dorothy has T-shirt. Kevin has car. Dorothy has pineapple. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a kind of clothes? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [8, 11], "Q": [40, 41], "K'": [5, 7], "R": [42, 43], "K": [[12, 17], [13, 18]], "V": [[14, 19], [16, 21]], "example": [1, 52]}, {"END": [105, 106], "A'": [102, 103], "V'": [67, 68], "Q": [94, 96], "K'": [65, 66], "R": [97, 98], "K": [[57, 69], [59, 71]], "V": [[60, 72], [64, 75]], "example": [53, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has soda. Donna has mosquito. Jeff has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own a kind of drink? Answer: No\n Premise: < Laura has durian. Laura has bus. Brian has shoes. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [13, 16], "Q": [40, 41], "K'": [10, 12], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 21]], "example": [1, 52]}, {"END": [99, 100], "A'": [96, 97], "V'": [68, 70], "Q": [89, 90], "K'": [66, 67], "R": [91, 92], "K": [[57, 62], [58, 63]], "V": [[59, 64], [61, 65]], "example": [53, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has soda. Donna has mosquito. Jeff has whiskey. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own a kind of drink? Answer: No\n Premise: < Laura has durian. Laura has bus. Brian has shoes. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [13, 16], "Q": [40, 41], "K'": [10, 12], "R": [42, 43], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 21]], "example": [1, 52]}, {"END": [99, 100], "A'": [96, 97], "V'": [68, 70], "Q": [89, 90], "K'": [66, 67], "R": [91, 92], "K": [[57, 62], [58, 63]], "V": [[59, 64], [61, 65]], "example": [53, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has gorilla. Susan has gun. Donald has shoes. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own a kind of clothes? Answer: Yes\n Premise: < Karen has taxi. Karen has pig. Paul has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of drink? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [17, 19], "Q": [38, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 11], [6, 12]], "V": [[7, 13], [10, 14]], "example": [1, 50]}, {"END": [102, 103], "A'": [99, 100], "V'": [69, 72], "Q": [91, 93], "K'": [67, 68], "R": [94, 95], "K": [[55, 61], [57, 63]], "V": [[58, 64], [60, 66]], "example": [51, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has gorilla. Susan has gun. Donald has shoes. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own a kind of clothes? Answer: Yes\n Premise: < Karen has taxi. Karen has pig. Paul has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of animal? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [17, 19], "Q": [38, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 11], [6, 12]], "V": [[7, 13], [10, 14]], "example": [1, 50]}, {"END": [102, 103], "A'": [99, 100], "V'": [69, 72], "Q": [91, 93], "K'": [67, 68], "R": [94, 95], "K": [[55, 61], [57, 63]], "V": [[58, 64], [60, 66]], "example": [51, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donna has revolver. Kenneth has kiwi. Donna has pizza. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not own a kind of fruit? Answer: Yes\n Premise: < James has rabbit. James has grenade. Sharon has football. >. Answer with Yes or No. Can it be inferred from the premise that James does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [13, 15], "Q": [40, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 16], [7, 18]], "V": [[8, 19], [10, 21]], "example": [1, 53]}, {"END": [102, 103], "A'": [99, 100], "V'": [72, 73], "Q": [92, 93], "K'": [69, 71], "R": [94, 95], "K": [[58, 63], [59, 64]], "V": [[60, 65], [62, 68]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Donna has revolver. Kenneth has kiwi. Donna has pizza. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not own a kind of fruit? Answer: Yes\n Premise: < James has rabbit. James has grenade. Sharon has football. >. Answer with Yes or No. Can it be inferred from the premise that James does not own a kind of animal? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [13, 15], "Q": [40, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 16], [7, 18]], "V": [[8, 19], [10, 21]], "example": [1, 53]}, {"END": [102, 103], "A'": [99, 100], "V'": [72, 73], "Q": [92, 93], "K'": [69, 71], "R": [94, 95], "K": [[58, 63], [59, 64]], "V": [[60, 65], [62, 68]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has underwear. Daniel has blackberries. Susan has sheep. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not own a kind of animal? Answer: Yes\n Premise: < Margaret has meat. Joseph has apricot. Joseph has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [19, 20], "Q": [39, 40], "K'": [17, 18], "R": [41, 42], "K": [[5, 11], [6, 12]], "V": [[7, 13], [10, 16]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [58, 59], "Q": [89, 90], "K'": [56, 57], "R": [91, 92], "K": [[60, 66], [61, 67]], "V": [[62, 68], [65, 70]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has underwear. Daniel has blackberries. Susan has sheep. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not own a kind of animal? Answer: Yes\n Premise: < Margaret has meat. Joseph has apricot. Joseph has handgun. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [19, 20], "Q": [39, 40], "K'": [17, 18], "R": [41, 42], "K": [[5, 11], [6, 12]], "V": [[7, 13], [10, 16]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [58, 59], "Q": [89, 90], "K'": [56, 57], "R": [91, 92], "K": [[60, 66], [61, 67]], "V": [[62, 68], [65, 70]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has tiger. Karen has baseball. Mark has hamburger. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of food? Answer: Yes\n Premise: < Margaret has jacket. Ronald has deer. Ronald has car. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [18, 21], "Q": [40, 42], "K'": [16, 17], "R": [43, 44], "K": [[5, 11], [7, 13]], "V": [[8, 14], [10, 15]], "example": [1, 53]}, {"END": [103, 104], "A'": [100, 101], "V'": [60, 62], "Q": [92, 94], "K'": [58, 59], "R": [95, 96], "K": [[63, 69], [65, 71]], "V": [[66, 72], [68, 73]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has tiger. Karen has baseball. Mark has hamburger. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of food? Answer: Yes\n Premise: < Margaret has jacket. Ronald has deer. Ronald has car. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not own a kind of animal? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [18, 21], "Q": [40, 42], "K'": [16, 17], "R": [43, 44], "K": [[5, 11], [7, 13]], "V": [[8, 14], [10, 15]], "example": [1, 53]}, {"END": [103, 104], "A'": [100, 101], "V'": [60, 62], "Q": [92, 94], "K'": [58, 59], "R": [95, 96], "K": [[63, 69], [65, 71]], "V": [[66, 72], [68, 73]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa has strawberries. Lisa has plum. Steven has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Lisa does not own a kind of animal? Answer: Yes\n Premise: < Paul has handgun. Betty has jeep. Paul has papaya. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [19, 20], "Q": [39, 40], "K'": [17, 18], "R": [41, 42], "K": [[5, 12], [6, 13]], "V": [[7, 14], [11, 16]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [63, 65], "Q": [89, 90], "K'": [61, 62], "R": [91, 92], "K": [[56, 66], [57, 67]], "V": [[58, 68], [60, 70]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa has strawberries. Lisa has plum. Steven has mouse. >. Answer with Yes or No. Can it be inferred from the premise that Lisa does not own a kind of animal? Answer: Yes\n Premise: < Paul has handgun. Betty has jeep. Paul has papaya. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not own a kind of weapon? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [19, 20], "Q": [39, 40], "K'": [17, 18], "R": [41, 42], "K": [[5, 12], [6, 13]], "V": [[7, 14], [11, 16]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [63, 65], "Q": [89, 90], "K'": [61, 62], "R": [91, 92], "K": [[56, 66], [57, 67]], "V": [[58, 68], [60, 70]], "example": [52, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The rifle is George's. The plum is Barbara's. The fox is Barbara's. >. Barbara does not own a kind of weapon\n < The hamburger is Mary's. The cherries is Christopher's. The trousers is Christopher's. >. Christopher does not own a kind of food\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [3, 5], "Q": [28, 29], "K'": [6, 7], "R": [30, 31], "K": [[14, 22], [15, 23]], "V": [[11, 19], [13, 21]], "example": [1, 36]}, {"END": [72, 73], "A'": [73, 74], "V'": [39, 42], "Q": [66, 67], "K'": [43, 44], "R": [68, 69], "K": [[51, 60], [52, 61]], "V": [[48, 56], [50, 59]], "example": [37, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The rabbit is Kimberly's. The bread is Kimberly's. The wine is Steven's. >. Kimberly does not own a kind of drink\n < The jersey is Kimberly's. The wolf is Donald's. The juice is Donald's. >. Donald does not own a kind of clothes\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [22, 23], "Q": [30, 33], "K'": [24, 25], "R": [34, 35], "K": [[6, 15], [9, 18]], "V": [[3, 13], [5, 14]], "example": [1, 40]}, {"END": [77, 78], "A'": [78, 79], "V'": [43, 46], "Q": [71, 72], "K'": [47, 50], "R": [73, 74], "K": [[57, 65], [58, 66]], "V": [[54, 62], [56, 64]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pizza is Christopher's. The lemon is Elizabeth's. The cat is Elizabeth's. >. Elizabeth does not own a kind of food\n < The baseball is Barbara's. The mosquito is Charles's. The durian is Barbara's. >. Barbara does not own a kind of insect\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [3, 5], "Q": [27, 28], "K'": [6, 7], "R": [29, 30], "K": [[14, 21], [15, 22]], "V": [[11, 19], [13, 20]], "example": [1, 35]}, {"END": [69, 70], "A'": [70, 71], "V'": [45, 48], "Q": [63, 64], "K'": [49, 50], "R": [65, 66], "K": [[40, 57], [41, 58]], "V": [[38, 54], [39, 56]], "example": [36, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The tea is Jeff's. The violin is Jeff's. The football is Donna's. >. Jeff does not own a kind of sport\n < The guitar is Kenneth's. The lime is Mary's. The peach is Mary's. >. Mary does not own a kind of instrument\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [18, 19], "Q": [27, 28], "K'": [20, 22], "R": [29, 30], "K": [[5, 13], [6, 14]], "V": [[3, 10], [4, 12]], "example": [1, 35]}, {"END": [68, 69], "A'": [69, 70], "V'": [38, 39], "Q": [62, 63], "K'": [40, 41], "R": [64, 65], "K": [[48, 56], [49, 57]], "V": [[45, 53], [47, 55]], "example": [36, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The shirt is Kenneth's. The pizza is Kenneth's. The basketball is Nancy's. >. Kenneth does not own a kind of sport\n < The lion is Michael's. The tea is Nancy's. The lime is Nancy's. >. Nancy does not own a kind of animal\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [19, 20], "Q": [27, 28], "K'": [21, 22], "R": [29, 30], "K": [[6, 14], [7, 15]], "V": [[3, 11], [5, 13]], "example": [1, 35]}, {"END": [68, 69], "A'": [69, 70], "V'": [38, 40], "Q": [62, 63], "K'": [41, 42], "R": [64, 65], "K": [[48, 56], [49, 57]], "V": [[46, 53], [47, 55]], "example": [36, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The revolver is Donna's. The kiwi is Kenneth's. The pizza is Donna's. >. Donna does not own a kind of fruit\n < The rabbit is Michelle's. The taxi is Michelle's. The shotgun is James's. >. Michelle does not own a kind of weapon\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [12, 14], "Q": [30, 32], "K'": [15, 16], "R": [33, 34], "K": [[6, 23], [8, 25]], "V": [[3, 20], [5, 22]], "example": [1, 39]}, {"END": [76, 77], "A'": [77, 78], "V'": [60, 62], "Q": [69, 71], "K'": [63, 64], "R": [72, 73], "K": [[45, 54], [47, 56]], "V": [[42, 51], [44, 53]], "example": [40, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The dog is Deborah's. The elephant is Deborah's. The beetle is Joseph's. >. Deborah does not own a kind of insect\n < The bee is Michael's. T-shirt is Ruth's. The deer is Michael's. >. Michael does not own a kind of clothes\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [23, 26], "Q": [33, 36], "K'": [27, 28], "R": [37, 38], "K": [[5, 16], [8, 19]], "V": [[3, 12], [4, 15]], "example": [1, 43]}, {"END": [78, 79], "A'": [79, 80], "V'": [53, 57], "Q": [72, 73], "K'": [58, 59], "R": [74, 75], "K": [[49, 66], [50, 67]], "V": [[46, 63], [48, 65]], "example": [44, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pizza is Steven's. The handgun is Carol's. The guitar is Carol's. >. Carol does not own a kind of food\n < The pants is Daniel's. The motorcycle is Daniel's. The mosquito is Nancy's. >. Daniel does not own a kind of insect\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [3, 5], "Q": [27, 28], "K'": [6, 7], "R": [29, 30], "K": [[14, 21], [15, 22]], "V": [[11, 19], [13, 20]], "example": [1, 35]}, {"END": [70, 71], "A'": [71, 72], "V'": [54, 57], "Q": [64, 65], "K'": [58, 59], "R": [66, 67], "K": [[41, 49], [42, 50]], "V": [[38, 46], [40, 48]], "example": [36, 72]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rifle is George's. The plum is Barbara's. The fox is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a kind of weapon? Answer: Yes\n Premise: < The bus is David's. The lion is David's. The baseball is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [6, 8], "Q": [47, 48], "K'": [9, 10], "R": [49, 50], "K": [[17, 25], [18, 26]], "V": [[14, 22], [16, 24]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [80, 81], "Q": [104, 105], "K'": [82, 83], "R": [106, 107], "K": [[67, 75], [68, 76]], "V": [[65, 72], [66, 74]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rifle is George's. The plum is Barbara's. The fox is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a kind of weapon? Answer: Yes\n Premise: < The bus is David's. The lion is David's. The baseball is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a kind of animal? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [6, 8], "Q": [47, 48], "K'": [9, 10], "R": [49, 50], "K": [[17, 25], [18, 26]], "V": [[14, 22], [16, 24]], "example": [1, 59]}, {"END": [114, 115], "A'": [111, 112], "V'": [80, 81], "Q": [104, 105], "K'": [82, 83], "R": [106, 107], "K": [[67, 75], [68, 76]], "V": [[65, 72], [66, 74]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The mosquito is Michelle's. The juice is Mark's. The pig is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Mark does not own a kind of insect? Answer: Yes\n Premise: < T-shirt is Dorothy's. The car is Kevin's. The pineapple is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [6, 9], "Q": [49, 50], "K'": [10, 12], "R": [51, 52], "K": [[19, 27], [20, 28]], "V": [[16, 24], [18, 26]], "example": [1, 61]}, {"END": [122, 123], "A'": [119, 120], "V'": [77, 78], "Q": [111, 113], "K'": [79, 80], "R": [114, 115], "K": [[71, 88], [73, 90]], "V": [[66, 84], [70, 87]], "example": [62, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The mosquito is Michelle's. The juice is Mark's. The pig is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Mark does not own a kind of insect? Answer: Yes\n Premise: < T-shirt is Dorothy's. The car is Kevin's. The pineapple is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a kind of clothes? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [6, 9], "Q": [49, 50], "K'": [10, 12], "R": [51, 52], "K": [[19, 27], [20, 28]], "V": [[16, 24], [18, 26]], "example": [1, 61]}, {"END": [122, 123], "A'": [119, 120], "V'": [77, 78], "Q": [111, 113], "K'": [79, 80], "R": [114, 115], "K": [[71, 88], [73, 90]], "V": [[66, 84], [70, 87]], "example": [62, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Jeff's. The mosquito is Donna's. The whiskey is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own a kind of drink? Answer: No\n Premise: < The durian is Laura's. The bus is Laura's. The shoes is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [14, 17], "Q": [49, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 27], [10, 28]], "V": [[6, 24], [8, 26]], "example": [1, 61]}, {"END": [117, 118], "A'": [114, 115], "V'": [82, 84], "Q": [107, 108], "K'": [85, 86], "R": [109, 110], "K": [[70, 77], [71, 78]], "V": [[67, 75], [69, 76]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Jeff's. The mosquito is Donna's. The whiskey is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that Jeff does not own a kind of drink? Answer: No\n Premise: < The durian is Laura's. The bus is Laura's. The shoes is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Laura does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [14, 17], "Q": [49, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 27], [10, 28]], "V": [[6, 24], [8, 26]], "example": [1, 61]}, {"END": [117, 118], "A'": [114, 115], "V'": [82, 84], "Q": [107, 108], "K'": [85, 86], "R": [109, 110], "K": [[70, 77], [71, 78]], "V": [[67, 75], [69, 76]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gorilla is Susan's. The gun is Susan's. The shoes is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own a kind of clothes? Answer: Yes\n Premise: < The taxi is Karen's. The pig is Karen's. The cocktail is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of drink? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [22, 24], "Q": [47, 48], "K'": [25, 26], "R": [49, 50], "K": [[10, 17], [11, 18]], "V": [[6, 15], [9, 16]], "example": [1, 59]}, {"END": [120, 121], "A'": [117, 118], "V'": [83, 86], "Q": [109, 111], "K'": [87, 88], "R": [112, 113], "K": [[68, 77], [70, 79]], "V": [[65, 74], [67, 76]], "example": [60, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gorilla is Susan's. The gun is Susan's. The shoes is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that Susan does not own a kind of clothes? Answer: Yes\n Premise: < The taxi is Karen's. The pig is Karen's. The cocktail is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of animal? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [22, 24], "Q": [47, 48], "K'": [25, 26], "R": [49, 50], "K": [[10, 17], [11, 18]], "V": [[6, 15], [9, 16]], "example": [1, 59]}, {"END": [120, 121], "A'": [117, 118], "V'": [83, 86], "Q": [109, 111], "K'": [87, 88], "R": [112, 113], "K": [[68, 77], [70, 79]], "V": [[65, 74], [67, 76]], "example": [60, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Donna's. The kiwi is Kenneth's. The pizza is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not own a kind of fruit? Answer: Yes\n Premise: < The rabbit is James's. The grenade is James's. The football is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that James does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [15, 17], "Q": [49, 51], "K'": [18, 19], "R": [52, 53], "K": [[9, 26], [11, 28]], "V": [[6, 23], [8, 25]], "example": [1, 62]}, {"END": [120, 121], "A'": [117, 118], "V'": [85, 86], "Q": [110, 111], "K'": [87, 89], "R": [112, 113], "K": [[71, 80], [72, 81]], "V": [[68, 76], [70, 79]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Donna's. The kiwi is Kenneth's. The pizza is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that Donna does not own a kind of fruit? Answer: Yes\n Premise: < The rabbit is James's. The grenade is James's. The football is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that James does not own a kind of animal? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [15, 17], "Q": [49, 51], "K'": [18, 19], "R": [52, 53], "K": [[9, 26], [11, 28]], "V": [[6, 23], [8, 25]], "example": [1, 62]}, {"END": [120, 121], "A'": [117, 118], "V'": [85, 86], "Q": [110, 111], "K'": [87, 89], "R": [112, 113], "K": [[71, 80], [72, 81]], "V": [[68, 76], [70, 79]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The underwear is Daniel's. The blackberries is Daniel's. The sheep is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not own a kind of animal? Answer: Yes\n Premise: < The meat is Margaret's. The apricot is Joseph's. The handgun is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [24, 25], "Q": [48, 49], "K'": [26, 27], "R": [50, 51], "K": [[10, 19], [11, 20]], "V": [[6, 15], [9, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [66, 67], "Q": [107, 108], "K'": [68, 69], "R": [109, 110], "K": [[77, 85], [78, 86]], "V": [[73, 82], [76, 84]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The underwear is Daniel's. The blackberries is Daniel's. The sheep is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that Daniel does not own a kind of animal? Answer: Yes\n Premise: < The meat is Margaret's. The apricot is Joseph's. The handgun is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [24, 25], "Q": [48, 49], "K'": [26, 27], "R": [50, 51], "K": [[10, 19], [11, 20]], "V": [[6, 15], [9, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [66, 67], "Q": [107, 108], "K'": [68, 69], "R": [109, 110], "K": [[77, 85], [78, 86]], "V": [[73, 82], [76, 84]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The tiger is Karen's. The baseball is Karen's. The hamburger is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of food? Answer: Yes\n Premise: < The jacket is Margaret's. The deer is Ronald's. The car is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [23, 26], "Q": [49, 51], "K'": [27, 28], "R": [52, 53], "K": [[9, 17], [11, 19]], "V": [[6, 15], [8, 16]], "example": [1, 62]}, {"END": [121, 122], "A'": [118, 119], "V'": [68, 70], "Q": [110, 112], "K'": [71, 72], "R": [113, 114], "K": [[79, 87], [81, 89]], "V": [[76, 85], [78, 86]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The tiger is Karen's. The baseball is Karen's. The hamburger is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Karen does not own a kind of food? Answer: Yes\n Premise: < The jacket is Margaret's. The deer is Ronald's. The car is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald does not own a kind of animal? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [23, 26], "Q": [49, 51], "K'": [27, 28], "R": [52, 53], "K": [[9, 17], [11, 19]], "V": [[6, 15], [8, 16]], "example": [1, 62]}, {"END": [121, 122], "A'": [118, 119], "V'": [68, 70], "Q": [110, 112], "K'": [71, 72], "R": [113, 114], "K": [[79, 87], [81, 89]], "V": [[76, 85], [78, 86]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Lisa's. The plum is Lisa's. The mouse is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Lisa does not own a kind of animal? Answer: Yes\n Premise: < The handgun is Paul's. The jeep is Betty's. The papaya is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [24, 25], "Q": [48, 49], "K'": [26, 27], "R": [50, 51], "K": [[11, 19], [12, 20]], "V": [[6, 16], [10, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [74, 76], "Q": [107, 108], "K'": [77, 78], "R": [109, 110], "K": [[69, 85], [70, 86]], "V": [[66, 82], [68, 84]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Lisa's. The plum is Lisa's. The mouse is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Lisa does not own a kind of animal? Answer: Yes\n Premise: < The handgun is Paul's. The jeep is Betty's. The papaya is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that Paul does not own a kind of weapon? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [24, 25], "Q": [48, 49], "K'": [26, 27], "R": [50, 51], "K": [[11, 19], [12, 20]], "V": [[6, 16], [10, 18]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [74, 76], "Q": [107, 108], "K'": [77, 78], "R": [109, 110], "K": [[69, 85], [70, 86]], "V": [[66, 82], [68, 84]], "example": [61, 119]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth has cake. Sharon has burger. Helen has apple. >. So who owns a kind of fruit? Helen\n < Sandra has costume. Kevin has cocktail. Elizabeth has peach. >. So who owns a kind of fruit? Elizabeth\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [13, 14], "Q": [26, 27], "K": [15, 16], "R": null, "K'": [[4, 10], [6, 12]], "V'": [[2, 7], [3, 9]], "example": [1, 29]}, {"END": [58, 59], "A": [59, 60], "V": [43, 44], "Q": [57, 58], "K": [45, 47], "R": null, "K'": [[34, 39], [36, 42]], "V'": [[31, 37], [33, 38]], "example": [30, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has wine. Brian has bread. Sarah has rabbit. >. So who owns a kind of drink? Richard\n < Ronald has cat. Susan has football. Dorothy has juice. >. So who owns a kind of sport? Susan\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [2, 3], "Q": [24, 25], "K": [4, 5], "R": null, "K'": [[8, 12], [9, 14]], "V'": [[6, 10], [7, 11]], "example": [1, 27]}, {"END": [54, 55], "A": [55, 56], "V": [34, 35], "Q": [53, 54], "K": [36, 37], "R": null, "K'": [[32, 41], [33, 43]], "V'": [[29, 38], [31, 40]], "example": [28, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven has gun. Brian has bus. Ruth has football. >. So who owns a kind of vehicle? Brian\n < Thomas has mouse. Kimberly has blackberries. Mark has baseball. >. So who owns a kind of sport? Mark\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [6, 7], "Q": [23, 24], "K": [8, 9], "R": null, "K'": [[4, 12], [5, 13]], "V'": [[2, 10], [3, 11]], "example": [1, 26]}, {"END": [54, 55], "A": [55, 56], "V": [40, 41], "Q": [53, 54], "K": [42, 43], "R": null, "K'": [[30, 36], [31, 39]], "V'": [[28, 32], [29, 35]], "example": [27, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Margaret has peach. Anthony has shotgun. Joseph has soda. >. So who owns a kind of fruit? Margaret\n < John has shirt. Deborah has burger. Kenneth has violin. >. So who owns a kind of instrument? Kenneth\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [2, 3], "Q": [26, 27], "K": [4, 6], "R": null, "K'": [[9, 14], [11, 16]], "V'": [[7, 12], [8, 13]], "example": [1, 29]}, {"END": [58, 59], "A": [59, 60], "V": [43, 44], "Q": [57, 58], "K": [45, 47], "R": null, "K'": [[33, 40], [35, 42]], "V'": [[31, 36], [32, 39]], "example": [30, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda has piano. Kimberly has cocktail. Helen has juice. >. So who owns a kind of instrument? Linda\n < Dorothy has mango. Nancy has T-shirt. Deborah has mouse. >. So who owns a kind of fruit? Dorothy\n", "ranges": [{"END": [30, 31], "A": [31, 33], "V": [2, 4], "Q": [29, 30], "K": [5, 6], "R": null, "K'": [[11, 17], [14, 19]], "V'": [[7, 15], [10, 16]], "example": [1, 33]}, {"END": [64, 65], "A": [65, 67], "V": [35, 37], "Q": [63, 64], "K": [38, 40], "R": null, "K'": [[43, 52], [47, 53]], "V'": [[41, 48], [42, 51]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David has soda. Carol has piano. Maria has squirrel. >. So who owns a kind of instrument? Carol\n < Susan has blackberries. Charles has underwear. Kenneth has sheep. >. So who owns a kind of animal? Kenneth\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [7, 8], "Q": [26, 27], "K": [9, 10], "R": null, "K'": [[4, 13], [6, 16]], "V'": [[2, 11], [3, 12]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 59], "V": [43, 44], "Q": [56, 57], "K": [45, 46], "R": null, "K'": [[33, 39], [36, 42]], "V'": [[31, 37], [32, 38]], "example": [30, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ronald has steak. Michael has bus. Donald has mosquito. >. So who owns a kind of vehicle? Michael\n < Donna has plum. Michael has hamburger. Thomas has dog. >. So who owns a kind of animal? Thomas\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [8, 9], "Q": [27, 28], "K": [10, 11], "R": null, "K'": [[5, 14], [7, 17]], "V'": [[2, 12], [4, 13]], "example": [1, 30]}, {"END": [58, 59], "A": [59, 60], "V": [44, 45], "Q": [57, 58], "K": [46, 47], "R": null, "K'": [[35, 40], [37, 43]], "V'": [[32, 38], [34, 39]], "example": [31, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has violin. Sandra has shotgun. Ruth has blackberries. >. So who owns a kind of instrument? Richard\n < Linda has plum. Richard has mouse. Steven has strawberries. >. So who owns a kind of animal? Richard\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [2, 3], "Q": [28, 29], "K": [4, 6], "R": null, "K'": [[10, 15], [12, 18]], "V'": [[7, 13], [9, 14]], "example": [1, 31]}, {"END": [60, 61], "A": [61, 62], "V": [39, 40], "Q": [59, 60], "K": [41, 42], "R": null, "K'": [[36, 45], [38, 49]], "V'": [[33, 43], [35, 44]], "example": [32, 62]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has cake. Sharon has burger. Helen has apple. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Ruth? Answer: No\n Premise: < Sandra has uniform. Kevin has taxi. Elizabeth has meat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is Elizabeth? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[7, 13], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [68, 69], "Q": [98, 99], "K": [70, 71], "R": null, "K'": [[61, 65], [62, 67]], "V'": [[58, 63], [60, 64]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has cake. Sharon has burger. Helen has apple. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Ruth? Answer: No\n Premise: < Sandra has uniform. Kevin has taxi. Elizabeth has meat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is Kevin? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[7, 13], [9, 15]], "V'": [[5, 10], [6, 12]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [68, 69], "Q": [98, 99], "K": [70, 71], "R": null, "K'": [[61, 65], [62, 67]], "V'": [[58, 63], [60, 64]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has strawberries. Linda has monkey. Kenneth has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Kenneth? Answer: No\n Premise: < John has piano. Daniel has goat. Mary has donkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is John? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [51, 52], "V": [5, 6], "Q": [49, 50], "K": [7, 11], "R": null, "K'": [[15, 20], [17, 22]], "V'": [[12, 18], [14, 19]], "example": [1, 56]}, {"END": [106, 107], "A": [103, 104], "V": [61, 62], "Q": [101, 102], "K": [63, 64], "R": null, "K'": [[67, 72], [69, 74]], "V'": [[65, 70], [66, 71]], "example": [57, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has strawberries. Linda has monkey. Kenneth has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Kenneth? Answer: No\n Premise: < John has piano. Daniel has goat. Mary has donkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is Daniel? Answer: No\n", "ranges": [{"END": [54, 55], "A": [51, 52], "V": [5, 6], "Q": [49, 50], "K": [7, 11], "R": null, "K'": [[15, 20], [17, 22]], "V'": [[12, 18], [14, 19]], "example": [1, 56]}, {"END": [106, 107], "A": [103, 104], "V": [61, 62], "Q": [101, 102], "K": [63, 64], "R": null, "K'": [[67, 72], [69, 74]], "V'": [[65, 70], [66, 71]], "example": [57, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has tea. Margaret has baseball. Michelle has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Mark? Answer: No\n Premise: < Betty has goat. Steven has beetle. Jennifer has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Steven? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [13, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [105, 106], "A": [102, 103], "V": [62, 63], "Q": [100, 101], "K": [64, 67], "R": null, "K'": [[59, 71], [61, 73]], "V'": [[57, 68], [58, 70]], "example": [53, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has tea. Margaret has baseball. Michelle has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Mark? Answer: No\n Premise: < Betty has goat. Steven has beetle. Jennifer has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Betty? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [13, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [105, 106], "A": [102, 103], "V": [62, 63], "Q": [100, 101], "K": [64, 67], "R": null, "K'": [[59, 71], [61, 73]], "V'": [[57, 68], [58, 70]], "example": [53, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has plum. Sharon has bus. Anthony has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Sharon? Answer: Yes\n Premise: < Laura has beetle. Kimberly has handgun. Ruth has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Ruth? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [10, 12], "Q": [46, 47], "K": [13, 14], "R": null, "K'": [[7, 17], [9, 19]], "V'": [[5, 15], [6, 16]], "example": [1, 54]}, {"END": [108, 109], "A": [105, 106], "V": [72, 73], "Q": [103, 104], "K": [74, 76], "R": null, "K'": [[61, 69], [64, 71]], "V'": [[59, 65], [60, 68]], "example": [55, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has plum. Sharon has bus. Anthony has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Sharon? Answer: Yes\n Premise: < Laura has beetle. Kimberly has handgun. Ruth has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Kimberly? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [10, 12], "Q": [46, 47], "K": [13, 14], "R": null, "K'": [[7, 17], [9, 19]], "V'": [[5, 15], [6, 16]], "example": [1, 54]}, {"END": [110, 111], "A": [105, 108], "V": [72, 73], "Q": [103, 104], "K": [74, 76], "R": null, "K'": [[61, 69], [64, 71]], "V'": [[59, 65], [60, 68]], "example": [55, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles has rabbit. Anthony has shotgun. Deborah has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is Charles? Answer: No\n Premise: < John has beetle. Ronald has mango. Deborah has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is John? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [10, 11], "Q": [48, 49], "K": [12, 14], "R": null, "K'": [[7, 19], [9, 21]], "V'": [[5, 15], [6, 18]], "example": [1, 55]}, {"END": [109, 110], "A": [106, 107], "V": [60, 61], "Q": [104, 105], "K": [62, 65], "R": null, "K'": [[69, 76], [71, 77]], "V'": [[66, 72], [68, 75]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Charles has rabbit. Anthony has shotgun. Deborah has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is Charles? Answer: No\n Premise: < John has beetle. Ronald has mango. Deborah has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Ronald? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [10, 11], "Q": [48, 49], "K": [12, 14], "R": null, "K'": [[7, 19], [9, 21]], "V'": [[5, 15], [6, 18]], "example": [1, 55]}, {"END": [110, 111], "A": [106, 108], "V": [60, 61], "Q": [104, 105], "K": [62, 65], "R": null, "K'": [[69, 76], [71, 77]], "V'": [[66, 72], [68, 75]], "example": [56, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra has guitar. Donna has cherries. Betty has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is Betty? Answer: Yes\n Premise: < Dorothy has pants. Margaret has motorcycle. James has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is James? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[8, 13], [9, 15]], "V'": [[5, 10], [7, 12]], "example": [1, 53]}, {"END": [106, 107], "A": [103, 104], "V": [69, 70], "Q": [101, 102], "K": [71, 74], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[58, 64], [60, 65]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra has guitar. Donna has cherries. Betty has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is Betty? Answer: Yes\n Premise: < Dorothy has pants. Margaret has motorcycle. James has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Margaret? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[8, 13], [9, 15]], "V'": [[5, 10], [7, 12]], "example": [1, 53]}, {"END": [106, 107], "A": [103, 104], "V": [69, 70], "Q": [101, 102], "K": [71, 74], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[58, 64], [60, 65]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia has jacket. Richard has deer. Paul has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Paul? Answer: No\n Premise: < Dorothy has uniform. Richard has horse. Michael has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Dorothy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 8], "Q": [47, 48], "K": [9, 11], "R": null, "K'": [[14, 19], [16, 20]], "V'": [[12, 17], [13, 18]], "example": [1, 54]}, {"END": [105, 106], "A": [101, 103], "V": [59, 61], "Q": [99, 100], "K": [62, 63], "R": null, "K'": [[66, 70], [67, 72]], "V'": [[64, 68], [65, 69]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia has jacket. Richard has deer. Paul has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Paul? Answer: No\n Premise: < Dorothy has uniform. Richard has horse. Michael has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Richard? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 8], "Q": [47, 48], "K": [9, 11], "R": null, "K'": [[14, 19], [16, 20]], "V'": [[12, 17], [13, 18]], "example": [1, 54]}, {"END": [104, 105], "A": [101, 102], "V": [59, 61], "Q": [99, 100], "K": [62, 63], "R": null, "K'": [[66, 70], [67, 72]], "V'": [[64, 68], [65, 69]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa has monkey. Charles has violin. John has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is John? Answer: Yes\n Premise: < Helen has gun. Elizabeth has duck. Edward has soda. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of drink is Edward? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [15, 16], "Q": [46, 47], "K": [17, 19], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [67, 68], "Q": [98, 99], "K": [69, 71], "R": null, "K'": [[60, 64], [61, 66]], "V'": [[58, 62], [59, 63]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lisa has monkey. Charles has violin. John has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is John? Answer: Yes\n Premise: < Helen has gun. Elizabeth has duck. Edward has soda. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of drink is Helen? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [15, 16], "Q": [46, 47], "K": [17, 19], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [67, 68], "Q": [98, 99], "K": [69, 71], "R": null, "K'": [[60, 64], [61, 66]], "V'": [[58, 62], [59, 63]], "example": [54, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The cake is Ruth's. The burger is Sharon's. The apple is Helen's. >. So who owns a kind of fruit? Helen\n < The costume is Sandra's. The cocktail is Kevin's. The peach is Elizabeth's. >. So who owns a kind of fruit? Elizabeth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [22, 23], "Q": [35, 36], "K": [20, 21], "R": null, "K'": [[3, 11], [5, 13]], "V'": [[6, 14], [7, 16]], "example": [1, 38]}, {"END": [76, 77], "A": [77, 78], "V": [62, 63], "Q": [75, 76], "K": [59, 61], "R": null, "K'": [[41, 50], [43, 53]], "V'": [[44, 54], [46, 55]], "example": [39, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The wine is Richard's. The bread is Brian's. The rabbit is Sarah's. >. So who owns a kind of drink? Richard\n < The cat is Ronald's. The football is Susan's. The juice is Dorothy's. >. So who owns a kind of sport? Susan\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [5, 6], "Q": [33, 34], "K": [3, 4], "R": null, "K'": [[10, 17], [11, 19]], "V'": [[12, 20], [13, 21]], "example": [1, 36]}, {"END": [72, 73], "A": [73, 74], "V": [49, 50], "Q": [71, 72], "K": [47, 48], "R": null, "K'": [[39, 54], [40, 56]], "V'": [[41, 57], [43, 59]], "example": [37, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The gun is Steven's. The bus is Brian's. The football is Ruth's. >. So who owns a kind of vehicle? Brian\n < The mouse is Thomas's. The blackberries is Kimberly's. The baseball is Mark's. >. So who owns a kind of sport? Mark\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [12, 13], "Q": [32, 33], "K": [10, 11], "R": null, "K'": [[3, 17], [4, 18]], "V'": [[5, 19], [6, 20]], "example": [1, 35]}, {"END": [72, 73], "A": [73, 74], "V": [58, 59], "Q": [71, 72], "K": [56, 57], "R": null, "K'": [[38, 45], [39, 48]], "V'": [[40, 49], [41, 52]], "example": [36, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The peach is Margaret's. The shotgun is Anthony's. The soda is Joseph's. >. So who owns a kind of fruit? Margaret\n < The shirt is John's. The burger is Deborah's. The violin is Kenneth's. >. So who owns a kind of instrument? Kenneth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [6, 7], "Q": [35, 36], "K": [3, 5], "R": null, "K'": [[11, 19], [13, 21]], "V'": [[14, 22], [15, 23]], "example": [1, 38]}, {"END": [76, 77], "A": [77, 78], "V": [62, 63], "Q": [75, 76], "K": [59, 61], "R": null, "K'": [[41, 49], [43, 51]], "V'": [[44, 52], [45, 55]], "example": [39, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The piano is Linda's. The cocktail is Kimberly's. The juice is Helen's. >. So who owns a kind of instrument? Linda\n < The mango is Dorothy's. T-shirt is Nancy's. The mouse is Deborah's. >. So who owns a kind of fruit? Dorothy\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [5, 7], "Q": [38, 39], "K": [3, 4], "R": null, "K'": [[11, 22], [14, 24]], "V'": [[15, 25], [18, 26]], "example": [1, 42]}, {"END": [81, 82], "A": [82, 84], "V": [48, 50], "Q": [80, 81], "K": [45, 47], "R": null, "K'": [[53, 63], [57, 64]], "V'": [[58, 65], [59, 68]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The soda is David's. The piano is Carol's. The squirrel is Maria's. >. So who owns a kind of instrument? Carol\n < The blackberries is Susan's. The underwear is Charles's. The sheep is Kenneth's. >. So who owns a kind of animal? Kenneth\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [13, 14], "Q": [35, 36], "K": [11, 12], "R": null, "K'": [[3, 18], [5, 21]], "V'": [[6, 22], [7, 23]], "example": [1, 38]}, {"END": [75, 76], "A": [76, 77], "V": [61, 62], "Q": [74, 75], "K": [59, 60], "R": null, "K'": [[41, 50], [44, 53]], "V'": [[45, 54], [46, 55]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The steak is Ronald's. The bus is Michael's. The mosquito is Donald's. >. So who owns a kind of vehicle? Michael\n < The plum is Donna's. The hamburger is Michael's. The dog is Thomas's. >. So who owns a kind of animal? Thomas\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [14, 15], "Q": [36, 37], "K": [12, 13], "R": null, "K'": [[3, 19], [5, 22]], "V'": [[6, 23], [8, 24]], "example": [1, 39]}, {"END": [76, 77], "A": [77, 78], "V": [62, 63], "Q": [75, 76], "K": [60, 61], "R": null, "K'": [[42, 51], [44, 54]], "V'": [[45, 55], [47, 56]], "example": [40, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The violin is Richard's. The shotgun is Sandra's. The blackberries is Ruth's. >. So who owns a kind of instrument? Richard\n < The plum is Linda's. The mouse is Richard's. The strawberries is Steven's. >. So who owns a kind of animal? Richard\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [6, 7], "Q": [37, 38], "K": [3, 5], "R": null, "K'": [[11, 20], [13, 23]], "V'": [[14, 24], [16, 25]], "example": [1, 40]}, {"END": [78, 79], "A": [79, 80], "V": [54, 55], "Q": [77, 78], "K": [52, 53], "R": null, "K'": [[43, 59], [45, 63]], "V'": [[46, 64], [48, 65]], "example": [41, 80]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Ruth's. The burger is Sharon's. The apple is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Ruth? Answer: No\n Premise: < The uniform is Sandra's. The taxi is Kevin's. The meat is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is Elizabeth? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 19]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [116, 117], "K": [84, 85], "R": null, "K'": [[68, 76], [69, 78]], "V'": [[70, 79], [72, 80]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Ruth's. The burger is Sharon's. The apple is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Ruth? Answer: No\n Premise: < The uniform is Sandra's. The taxi is Kevin's. The meat is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is Kevin? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 19]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [116, 117], "K": [84, 85], "R": null, "K'": [[68, 76], [69, 78]], "V'": [[70, 79], [72, 80]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Christopher's. The monkey is Linda's. The cannon is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Kenneth? Answer: No\n Premise: < The piano is John's. The goat is Daniel's. The donkey is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is John? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [11, 12], "Q": [58, 59], "K": [6, 10], "R": null, "K'": [[16, 25], [18, 27]], "V'": [[19, 28], [21, 29]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [73, 74], "Q": [119, 120], "K": [71, 72], "R": null, "K'": [[78, 86], [80, 88]], "V'": [[81, 89], [82, 90]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The strawberries is Christopher's. The monkey is Linda's. The cannon is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Kenneth? Answer: No\n Premise: < The piano is John's. The goat is Daniel's. The donkey is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is Daniel? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [11, 12], "Q": [58, 59], "K": [6, 10], "R": null, "K'": [[16, 25], [18, 27]], "V'": [[19, 28], [21, 29]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [73, 74], "Q": [119, 120], "K": [71, 72], "R": null, "K'": [[78, 86], [80, 88]], "V'": [[81, 89], [82, 90]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Mark's. The baseball is Margaret's. The lime is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Mark? Answer: No\n Premise: < The goat is Betty's. The beetle is Steven's. The durian is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Steven? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [23, 25], "Q": [54, 55], "K": [20, 22], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 61]}, {"END": [123, 124], "A": [120, 121], "V": [79, 80], "Q": [118, 119], "K": [75, 78], "R": null, "K'": [[67, 84], [69, 86]], "V'": [[70, 87], [71, 89]], "example": [62, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Mark's. The baseball is Margaret's. The lime is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is Mark? Answer: No\n Premise: < The goat is Betty's. The beetle is Steven's. The durian is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Betty? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [23, 25], "Q": [54, 55], "K": [20, 22], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 61]}, {"END": [123, 124], "A": [120, 121], "V": [79, 80], "Q": [118, 119], "K": [75, 78], "R": null, "K'": [[67, 84], [69, 86]], "V'": [[70, 87], [71, 89]], "example": [62, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Daniel's. The bus is Sharon's. The fox is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Sharon? Answer: Yes\n Premise: < The beetle is Laura's. The handgun is Kimberly's. The motorcycle is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Ruth? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [16, 18], "Q": [55, 56], "K": [14, 15], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [10, 26]], "example": [1, 63]}, {"END": [126, 127], "A": [123, 124], "V": [91, 92], "Q": [121, 122], "K": [88, 90], "R": null, "K'": [[69, 78], [72, 80]], "V'": [[73, 81], [74, 84]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Daniel's. The bus is Sharon's. The fox is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Sharon? Answer: Yes\n Premise: < The beetle is Laura's. The handgun is Kimberly's. The motorcycle is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is Kimberly? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [16, 18], "Q": [55, 56], "K": [14, 15], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [10, 26]], "example": [1, 63]}, {"END": [128, 129], "A": [123, 126], "V": [91, 92], "Q": [121, 122], "K": [88, 90], "R": null, "K'": [[69, 78], [72, 80]], "V'": [[73, 81], [74, 84]], "example": [64, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Charles's. The shotgun is Anthony's. The taxi is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is Charles? Answer: No\n Premise: < The beetle is John's. The mango is Ronald's. The sheep is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is John? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [59, 60], "V": [17, 18], "Q": [57, 58], "K": [14, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [10, 28]], "example": [1, 64]}, {"END": [127, 128], "A": [124, 125], "V": [74, 75], "Q": [122, 123], "K": [70, 73], "R": null, "K'": [[79, 88], [81, 89]], "V'": [[82, 90], [84, 93]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Charles's. The shotgun is Anthony's. The taxi is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is Charles? Answer: No\n Premise: < The beetle is John's. The mango is Ronald's. The sheep is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Ronald? Answer: No\n", "ranges": [{"END": [62, 63], "A": [59, 60], "V": [17, 18], "Q": [57, 58], "K": [14, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [10, 28]], "example": [1, 64]}, {"END": [128, 129], "A": [124, 126], "V": [74, 75], "Q": [122, 123], "K": [70, 73], "R": null, "K'": [[79, 88], [81, 89]], "V'": [[82, 90], [84, 93]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Sandra's. The cherries is Donna's. The baseball is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is Betty? Answer: Yes\n Premise: < The pants is Dorothy's. The motorcycle is Margaret's. The mosquito is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is James? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 14], [7, 16]], "V'": [[8, 17], [10, 19]], "example": [1, 62]}, {"END": [124, 125], "A": [121, 122], "V": [89, 90], "Q": [119, 120], "K": [85, 88], "R": null, "K'": [[68, 77], [70, 79]], "V'": [[71, 80], [73, 81]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Sandra's. The cherries is Donna's. The baseball is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is Betty? Answer: Yes\n Premise: < The pants is Dorothy's. The motorcycle is Margaret's. The mosquito is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is Margaret? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 14], [7, 16]], "V'": [[8, 17], [10, 19]], "example": [1, 62]}, {"END": [124, 125], "A": [121, 122], "V": [89, 90], "Q": [119, 120], "K": [85, 88], "R": null, "K'": [[68, 77], [70, 79]], "V'": [[71, 80], [73, 81]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Patricia's. The deer is Richard's. The car is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Paul? Answer: No\n Premise: < The uniform is Dorothy's. The horse is Richard's. The monkey is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Dorothy? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [9, 12], "Q": [56, 57], "K": [6, 8], "R": null, "K'": [[16, 24], [18, 25]], "V'": [[19, 26], [20, 27]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [71, 73], "Q": [117, 118], "K": [69, 70], "R": null, "K'": [[77, 84], [78, 86]], "V'": [[79, 87], [80, 88]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Patricia's. The deer is Richard's. The car is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Paul? Answer: No\n Premise: < The uniform is Dorothy's. The horse is Richard's. The monkey is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of clothes is Richard? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [9, 12], "Q": [56, 57], "K": [6, 8], "R": null, "K'": [[16, 24], [18, 25]], "V'": [[19, 26], [20, 27]], "example": [1, 63]}, {"END": [122, 123], "A": [119, 120], "V": [71, 73], "Q": [117, 118], "K": [69, 70], "R": null, "K'": [[77, 84], [78, 86]], "V'": [[79, 87], [80, 88]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The monkey is Lisa's. The violin is Charles's. The papaya is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is John? Answer: Yes\n Premise: < The gun is Helen's. The duck is Elizabeth's. The soda is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of drink is Edward? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [22, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [116, 117], "K": [83, 85], "R": null, "K'": [[68, 75], [69, 77]], "V'": [[70, 78], [71, 79]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The monkey is Lisa's. The violin is Charles's. The papaya is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is John? Answer: Yes\n Premise: < The gun is Helen's. The duck is Elizabeth's. The soda is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of drink is Helen? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [25, 26], "Q": [55, 56], "K": [22, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 62]}, {"END": [121, 122], "A": [118, 119], "V": [86, 87], "Q": [116, 117], "K": [83, 85], "R": null, "K'": [[68, 75], [69, 77]], "V'": [[70, 78], [71, 79]], "example": [63, 123]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth has lemon. Sharon has plum. Helen has lion. >. The one who owns a kind of fruit is not Helen\n < Michelle has pineapple. Michael has plum. Paul has soda. >. The one who owns a kind of fruit is not Paul\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [13, 14], "Q": [28, 29], "K'": [15, 17], "R": [30, 31], "K": [[4, 10], [6, 12]], "V": [[2, 7], [3, 9]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 65], "V'": [46, 47], "Q": [61, 62], "K'": [48, 50], "R": [63, 64], "K": [[37, 43], [40, 45]], "V": [[34, 41], [36, 42]], "example": [33, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has peach. Brian has vodka. Sarah has coffee. >. The one who owns a kind of drink is not Richard\n < Susan has basketball. Barbara has wolf. Paul has football. >. The one who owns a kind of sport is not Barbara\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [27, 28], "K'": [4, 6], "R": [29, 30], "K": [[9, 15], [12, 16]], "V": [[7, 13], [8, 14]], "example": [1, 31]}, {"END": [58, 59], "A'": [59, 60], "V'": [37, 38], "Q": [56, 57], "K'": [39, 41], "R": [58, 59], "K": [[35, 44], [36, 45]], "V": [[33, 42], [34, 43]], "example": [32, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Brian has steak. Robert has monkey. Kevin has bread. >. The one who owns a kind of food is not Robert\n < William has basketball. Kimberly has football. Barbara has blackberries. >. The one who owns a kind of sport is not Barbara\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [7, 8], "Q": [26, 27], "K'": [9, 11], "R": [28, 29], "K": [[4, 14], [6, 15]], "V": [[2, 12], [3, 13]], "example": [1, 30]}, {"END": [60, 61], "A'": [61, 62], "V'": [42, 43], "Q": [58, 59], "K'": [44, 47], "R": [60, 61], "K": [[34, 40], [35, 41]], "V": [[32, 36], [33, 39]], "example": [31, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mary has soda. Anthony has apricot. Joseph has blackberries. >. The one who owns a kind of fruit is not Mary\n < John has guitar. Deborah has violin. Kenneth has pizza. >. The one who owns a kind of instrument is not Kenneth\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [2, 3], "Q": [29, 30], "K'": [4, 6], "R": [31, 32], "K": [[9, 15], [12, 18]], "V": [[7, 13], [8, 14]], "example": [1, 33]}, {"END": [63, 64], "A'": [64, 65], "V'": [46, 47], "Q": [61, 62], "K'": [48, 50], "R": [63, 64], "K": [[37, 43], [38, 45]], "V": [[35, 39], [36, 42]], "example": [34, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Joseph has goat. Kimberly has violin. Helen has guitar. >. The one who owns a kind of instrument is not Joseph\n < Dorothy has spaghetti. Nancy has durian. Deborah has orange. >. The one who owns a kind of fruit is not Dorothy\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [2, 3], "Q": [28, 29], "K'": [4, 6], "R": [30, 31], "K": [[11, 16], [13, 17]], "V": [[7, 14], [10, 15]], "example": [1, 32]}, {"END": [64, 65], "A'": [65, 67], "V'": [34, 36], "Q": [62, 63], "K'": [37, 40], "R": [64, 65], "K": [[43, 50], [45, 51]], "V": [[41, 46], [42, 49]], "example": [33, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< William has violin. Carol has piano. Deborah has cherries. >. The one who owns a kind of instrument is not Deborah\n < Dorothy has mango. Ronald has gun. Deborah has handgun. >. The one who owns a kind of weapon is not Dorothy\n", "ranges": [{"END": [30, 31], "A'": [31, 34], "V'": [11, 14], "Q": [28, 29], "K'": [15, 17], "R": [30, 31], "K": [[4, 9], [6, 10]], "V": [[2, 7], [3, 8]], "example": [1, 34]}, {"END": [66, 67], "A'": [67, 69], "V'": [36, 38], "Q": [64, 65], "K'": [39, 41], "R": [66, 67], "K": [[45, 51], [46, 53]], "V": [[42, 47], [44, 50]], "example": [35, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Elizabeth has T-shirt. Mary has grenade. Betty has handgun. >. The one who owns a kind of weapon is not Elizabeth\n < Carol has plum. Karen has burger. Kevin has pear. >. The one who owns a kind of fruit is not Karen\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [30, 31], "K'": [4, 8], "R": [32, 33], "K": [[11, 17], [14, 19]], "V": [[9, 15], [10, 16]], "example": [1, 34]}, {"END": [64, 65], "A'": [65, 67], "V'": [41, 43], "Q": [62, 63], "K'": [44, 46], "R": [64, 65], "K": [[38, 49], [40, 51]], "V": [[36, 47], [37, 48]], "example": [35, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Laura has deer. Steven has dog. Betty has revolver. >. The one who owns a kind of animal is not Betty\n < Helen has motorcycle. Patricia has car. Lisa has grapes. >. The one who owns a kind of vehicle is not Lisa\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [11, 12], "Q": [26, 27], "K'": [13, 15], "R": [28, 29], "K": [[4, 9], [6, 10]], "V": [[2, 7], [3, 8]], "example": [1, 30]}, {"END": [61, 62], "A'": [62, 63], "V'": [43, 44], "Q": [59, 60], "K'": [45, 48], "R": [61, 62], "K": [[34, 41], [36, 42]], "V": [[32, 37], [33, 40]], "example": [31, 63]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has lemon. Sharon has plum. Helen has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Ruth? Answer: No\n Premise: < Carol has pizza. Michelle has hamburger. Jennifer has lemon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not Jennifer? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [16, 17], "Q": [47, 48], "K'": [18, 20], "R": [49, 50], "K": [[7, 13], [9, 15]], "V": [[5, 10], [6, 12]], "example": [1, 55]}, {"END": [111, 112], "A'": [107, 109], "V'": [72, 74], "Q": [104, 105], "K'": [75, 77], "R": [106, 107], "K": [[62, 68], [64, 71]], "V": [[60, 65], [61, 67]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ruth has lemon. Sharon has plum. Helen has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Ruth? Answer: No\n Premise: < Carol has pizza. Michelle has hamburger. Jennifer has lemon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not Michelle? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [16, 17], "Q": [47, 48], "K'": [18, 20], "R": [49, 50], "K": [[7, 13], [9, 15]], "V": [[5, 10], [6, 12]], "example": [1, 55]}, {"END": [111, 112], "A'": [107, 109], "V'": [72, 74], "Q": [104, 105], "K'": [75, 77], "R": [106, 107], "K": [[62, 68], [64, 71]], "V": [[60, 65], [61, 67]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has bee. Linda has grapes. Kenneth has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Christopher? Answer: Yes\n Premise: < Deborah has grapes. Kevin has piano. John has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Deborah? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [5, 6], "Q": [49, 50], "K'": [7, 9], "R": [51, 52], "K": [[13, 19], [16, 22]], "V": [[10, 17], [12, 18]], "example": [1, 57]}, {"END": [112, 113], "A'": [107, 110], "V'": [62, 65], "Q": [104, 105], "K'": [66, 69], "R": [106, 107], "K": [[72, 76], [73, 77]], "V": [[70, 74], [71, 75]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has bee. Linda has grapes. Kenneth has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Christopher? Answer: Yes\n Premise: < Deborah has grapes. Kevin has piano. John has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not John? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [5, 6], "Q": [49, 50], "K'": [7, 9], "R": [51, 52], "K": [[13, 19], [16, 22]], "V": [[10, 17], [12, 18]], "example": [1, 57]}, {"END": [110, 111], "A'": [107, 108], "V'": [62, 65], "Q": [104, 105], "K'": [66, 69], "R": [106, 107], "K": [[72, 76], [73, 77]], "V": [[70, 74], [71, 75]], "example": [58, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Robert has handgun. Dorothy has violin. Michelle has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Michelle? Answer: No\n Premise: < Ronald has hamburger. Karen has goose. Dorothy has cat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Ronald? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [10, 12], "Q": [48, 49], "K'": [13, 15], "R": [50, 51], "K": [[7, 19], [9, 21]], "V": [[5, 16], [6, 18]], "example": [1, 57]}, {"END": [113, 114], "A'": [109, 111], "V'": [62, 64], "Q": [106, 107], "K'": [65, 68], "R": [108, 109], "K": [[72, 78], [74, 79]], "V": [[69, 75], [71, 77]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Robert has handgun. Dorothy has violin. Michelle has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Michelle? Answer: No\n Premise: < Ronald has hamburger. Karen has goose. Dorothy has cat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Dorothy? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [10, 12], "Q": [48, 49], "K'": [13, 15], "R": [50, 51], "K": [[7, 19], [9, 21]], "V": [[5, 16], [6, 18]], "example": [1, 57]}, {"END": [113, 114], "A'": [109, 111], "V'": [62, 64], "Q": [106, 107], "K'": [65, 68], "R": [108, 109], "K": [[72, 78], [74, 79]], "V": [[69, 75], [71, 77]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna has basketball. Nancy has baseball. Kevin has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not Donna? Answer: No\n Premise: < Donna has sweater. Susan has car. James has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not Donna? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [14, 15], "Q": [45, 46], "K'": [16, 18], "R": [47, 48], "K": [[8, 12], [9, 13]], "V": [[5, 10], [7, 11]], "example": [1, 54]}, {"END": [107, 108], "A'": [103, 105], "V'": [59, 61], "Q": [100, 101], "K'": [62, 64], "R": [102, 103], "K": [[67, 71], [68, 73]], "V": [[65, 69], [66, 70]], "example": [55, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna has basketball. Nancy has baseball. Kevin has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not Donna? Answer: No\n Premise: < Donna has sweater. Susan has car. James has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not Susan? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [14, 15], "Q": [45, 46], "K'": [16, 18], "R": [47, 48], "K": [[8, 12], [9, 13]], "V": [[5, 10], [7, 11]], "example": [1, 54]}, {"END": [106, 107], "A'": [103, 104], "V'": [59, 61], "Q": [100, 101], "K'": [62, 64], "R": [102, 103], "K": [[67, 71], [68, 73]], "V": [[65, 69], [66, 70]], "example": [55, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara has taxi. Anthony has shotgun. Brian has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Brian? Answer: No\n Premise: < John has pig. Michael has papaya. Helen has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Michael? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [46, 47], "K'": [7, 9], "R": [48, 49], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 54]}, {"END": [106, 107], "A'": [103, 104], "V'": [64, 65], "Q": [100, 101], "K'": [66, 68], "R": [102, 103], "K": [[61, 71], [63, 73]], "V": [[59, 69], [60, 70]], "example": [55, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara has taxi. Anthony has shotgun. Brian has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Brian? Answer: No\n Premise: < John has pig. Michael has papaya. Helen has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not John? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [46, 47], "K'": [7, 9], "R": [48, 49], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 54]}, {"END": [106, 107], "A'": [103, 104], "V'": [64, 65], "Q": [100, 101], "K'": [66, 68], "R": [102, 103], "K": [[61, 71], [63, 73]], "V": [[59, 69], [60, 70]], "example": [55, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra has piano. Donna has guitar. Betty has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Sandra? Answer: No\n Premise: < Michael has bee. John has mosquito. Ronald has dog. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not Ronald? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 16], "Q": [46, 47], "K'": [17, 19], "R": [48, 49], "K": [[8, 13], [9, 14]], "V": [[5, 10], [7, 12]], "example": [1, 55]}, {"END": [109, 110], "A'": [105, 107], "V'": [71, 73], "Q": [102, 103], "K'": [74, 75], "R": [104, 105], "K": [[62, 67], [64, 70]], "V": [[60, 65], [61, 66]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sandra has piano. Donna has guitar. Betty has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Sandra? Answer: No\n Premise: < Michael has bee. John has mosquito. Ronald has dog. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not John? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 16], "Q": [46, 47], "K'": [17, 19], "R": [48, 49], "K": [[8, 13], [9, 14]], "V": [[5, 10], [7, 12]], "example": [1, 55]}, {"END": [108, 109], "A'": [105, 106], "V'": [71, 73], "Q": [102, 103], "K'": [74, 75], "R": [104, 105], "K": [[62, 67], [64, 70]], "V": [[60, 65], [61, 66]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has motorcycle. Ruth has piano. Richard has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Richard? Answer: No\n Premise: < Linda has monkey. Michael has strawberries. Paul has goose. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Michael? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [5, 6], "Q": [45, 46], "K'": [7, 9], "R": [47, 48], "K": [[12, 16], [13, 18]], "V": [[10, 14], [11, 15]], "example": [1, 53]}, {"END": [108, 109], "A'": [105, 106], "V'": [64, 65], "Q": [102, 103], "K'": [66, 70], "R": [104, 105], "K": [[61, 73], [63, 75]], "V": [[58, 71], [60, 72]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has motorcycle. Ruth has piano. Richard has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Richard? Answer: No\n Premise: < Linda has monkey. Michael has strawberries. Paul has goose. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Paul? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [5, 6], "Q": [45, 46], "K'": [7, 9], "R": [47, 48], "K": [[12, 16], [13, 18]], "V": [[10, 14], [11, 15]], "example": [1, 53]}, {"END": [108, 109], "A'": [105, 106], "V'": [64, 65], "Q": [102, 103], "K'": [66, 70], "R": [104, 105], "K": [[61, 73], [63, 75]], "V": [[58, 71], [60, 72]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has kiwi. Maria has apple. Robert has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Robert? Answer: Yes\n Premise: < Anthony has goat. Paul has elephant. Kimberly has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Kimberly? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [14, 15], "Q": [44, 45], "K'": [16, 17], "R": [46, 47], "K": [[7, 12], [9, 13]], "V": [[5, 10], [6, 11]], "example": [1, 52]}, {"END": [109, 110], "A'": [104, 107], "V'": [68, 71], "Q": [101, 102], "K'": [72, 74], "R": [103, 104], "K": [[59, 64], [61, 67]], "V": [[57, 62], [58, 63]], "example": [53, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has kiwi. Maria has apple. Robert has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Robert? Answer: Yes\n Premise: < Anthony has goat. Paul has elephant. Kimberly has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Paul? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [14, 15], "Q": [44, 45], "K'": [16, 17], "R": [46, 47], "K": [[7, 12], [9, 13]], "V": [[5, 10], [6, 11]], "example": [1, 52]}, {"END": [107, 108], "A'": [104, 105], "V'": [68, 71], "Q": [101, 102], "K'": [72, 74], "R": [103, 104], "K": [[59, 64], [61, 67]], "V": [[57, 62], [58, 63]], "example": [53, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The lemon is Ruth's. The plum is Sharon's. The lion is Helen's. >. The one who owns a kind of fruit is not Helen\n < The pineapple is Michelle's. The plum is Michael's. The soda is Paul's. >. The one who owns a kind of fruit is not Paul\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [23, 24], "Q": [37, 38], "K'": [20, 22], "R": [39, 40], "K": [[3, 11], [5, 13]], "V": [[6, 14], [7, 16]], "example": [1, 41]}, {"END": [81, 82], "A'": [82, 83], "V'": [65, 66], "Q": [79, 80], "K'": [62, 64], "R": [81, 82], "K": [[44, 54], [47, 56]], "V": [[48, 57], [50, 58]], "example": [42, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The peach is Richard's. The vodka is Brian's. The coffee is Sarah's. >. The one who owns a kind of drink is not Richard\n < The basketball is Susan's. The wolf is Barbara's. The football is Paul's. >. The one who owns a kind of sport is not Barbara\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [6, 7], "Q": [36, 37], "K'": [3, 5], "R": [38, 39], "K": [[11, 20], [14, 21]], "V": [[15, 22], [16, 23]], "example": [1, 40]}, {"END": [76, 77], "A'": [77, 78], "V'": [53, 54], "Q": [74, 75], "K'": [50, 52], "R": [76, 77], "K": [[43, 58], [44, 59]], "V": [[45, 60], [46, 61]], "example": [41, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The steak is Brian's. The monkey is Robert's. The bread is Kevin's. >. The one who owns a kind of food is not Robert\n < The basketball is William's. The football is Kimberly's. The blackberries is Barbara's. >. The one who owns a kind of sport is not Barbara\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [14, 15], "Q": [35, 36], "K'": [11, 13], "R": [37, 38], "K": [[3, 19], [5, 20]], "V": [[6, 21], [7, 22]], "example": [1, 39]}, {"END": [78, 79], "A'": [79, 80], "V'": [62, 63], "Q": [76, 77], "K'": [58, 61], "R": [78, 79], "K": [[42, 49], [43, 50]], "V": [[44, 51], [45, 54]], "example": [40, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The soda is Mary's. The apricot is Anthony's. The blackberries is Joseph's. >. The one who owns a kind of fruit is not Mary\n < The guitar is John's. The violin is Deborah's. The pizza is Kenneth's. >. The one who owns a kind of instrument is not Kenneth\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [6, 7], "Q": [38, 39], "K'": [3, 5], "R": [40, 41], "K": [[11, 20], [14, 23]], "V": [[15, 24], [16, 25]], "example": [1, 42]}, {"END": [81, 82], "A'": [82, 83], "V'": [65, 66], "Q": [79, 80], "K'": [62, 64], "R": [81, 82], "K": [[45, 52], [46, 54]], "V": [[47, 55], [48, 58]], "example": [43, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The goat is Joseph's. The violin is Kimberly's. The guitar is Helen's. >. The one who owns a kind of instrument is not Joseph\n < The spaghetti is Dorothy's. The durian is Nancy's. The orange is Deborah's. >. The one who owns a kind of fruit is not Dorothy\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [6, 7], "Q": [37, 38], "K'": [3, 5], "R": [39, 40], "K": [[11, 21], [13, 22]], "V": [[14, 23], [17, 24]], "example": [1, 41]}, {"END": [82, 83], "A'": [83, 85], "V'": [48, 50], "Q": [80, 81], "K'": [44, 47], "R": [82, 83], "K": [[54, 62], [56, 63]], "V": [[57, 64], [58, 67]], "example": [42, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The violin is William's. The piano is Carol's. The cherries is Deborah's. >. The one who owns a kind of instrument is not Deborah\n < The mango is Dorothy's. The gun is Ronald's. The handgun is Deborah's. >. The one who owns a kind of weapon is not Dorothy\n", "ranges": [{"END": [39, 40], "A'": [40, 43], "V'": [21, 24], "Q": [37, 38], "K'": [18, 20], "R": [39, 40], "K": [[3, 11], [5, 12]], "V": [[6, 13], [7, 14]], "example": [1, 43]}, {"END": [84, 85], "A'": [85, 87], "V'": [49, 51], "Q": [82, 83], "K'": [46, 48], "R": [84, 85], "K": [[55, 63], [56, 65]], "V": [[57, 66], [59, 69]], "example": [44, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< T-shirt is Elizabeth's. The grenade is Mary's. The handgun is Betty's. >. The one who owns a kind of weapon is not Elizabeth\n < The plum is Carol's. The burger is Karen's. The pear is Kevin's. >. The one who owns a kind of fruit is not Karen\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [7, 8], "Q": [38, 39], "K'": [2, 6], "R": [40, 41], "K": [[12, 21], [15, 23]], "V": [[16, 24], [17, 25]], "example": [1, 42]}, {"END": [81, 82], "A'": [82, 84], "V'": [56, 58], "Q": [79, 80], "K'": [53, 55], "R": [81, 82], "K": [[45, 62], [47, 64]], "V": [[48, 65], [49, 66]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The deer is Laura's. The dog is Steven's. The revolver is Betty's. >. The one who owns a kind of animal is not Betty\n < The motorcycle is Helen's. The car is Patricia's. The grapes is Lisa's. >. The one who owns a kind of vehicle is not Lisa\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [21, 22], "Q": [35, 36], "K'": [18, 20], "R": [37, 38], "K": [[3, 11], [5, 12]], "V": [[6, 13], [7, 14]], "example": [1, 39]}, {"END": [79, 80], "A'": [80, 81], "V'": [63, 64], "Q": [77, 78], "K'": [59, 62], "R": [79, 80], "K": [[42, 50], [44, 51]], "V": [[45, 52], [46, 55]], "example": [40, 81]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Ruth's. The plum is Sharon's. The lion is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Ruth? Answer: No\n Premise: < The pizza is Carol's. The hamburger is Michelle's. The lemon is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not Jennifer? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [26, 27], "Q": [56, 57], "K'": [23, 25], "R": [58, 59], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 64]}, {"END": [129, 130], "A'": [125, 127], "V'": [91, 93], "Q": [122, 123], "K'": [88, 90], "R": [124, 125], "K": [[70, 78], [72, 81]], "V": [[73, 82], [74, 84]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Ruth's. The plum is Sharon's. The lion is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Ruth? Answer: No\n Premise: < The pizza is Carol's. The hamburger is Michelle's. The lemon is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not Michelle? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [26, 27], "Q": [56, 57], "K'": [23, 25], "R": [58, 59], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 64]}, {"END": [129, 130], "A'": [125, 127], "V'": [91, 93], "Q": [122, 123], "K'": [88, 90], "R": [124, 125], "K": [[70, 78], [72, 81]], "V": [[73, 82], [74, 84]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The bee is Christopher's. The grapes is Linda's. The blueberries is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Christopher? Answer: Yes\n Premise: < The grapes is Deborah's. The piano is Kevin's. The guitar is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Deborah? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [9, 10], "Q": [58, 59], "K'": [6, 8], "R": [60, 61], "K": [[14, 24], [17, 27]], "V": [[18, 28], [20, 29]], "example": [1, 66]}, {"END": [130, 131], "A'": [125, 128], "V'": [76, 79], "Q": [122, 123], "K'": [72, 75], "R": [124, 125], "K": [[83, 90], [84, 91]], "V": [[85, 92], [86, 93]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The bee is Christopher's. The grapes is Linda's. The blueberries is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Christopher? Answer: Yes\n Premise: < The grapes is Deborah's. The piano is Kevin's. The guitar is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not John? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [9, 10], "Q": [58, 59], "K'": [6, 8], "R": [60, 61], "K": [[14, 24], [17, 27]], "V": [[18, 28], [20, 29]], "example": [1, 66]}, {"END": [128, 129], "A'": [125, 126], "V'": [76, 79], "Q": [122, 123], "K'": [72, 75], "R": [124, 125], "K": [[83, 90], [84, 91]], "V": [[85, 92], [86, 93]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The handgun is Robert's. The violin is Dorothy's. The pistol is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Michelle? Answer: No\n Premise: < The hamburger is Ronald's. The goose is Karen's. The cat is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Ronald? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [17, 19], "Q": [57, 58], "K'": [14, 16], "R": [59, 60], "K": [[6, 23], [8, 25]], "V": [[9, 26], [10, 28]], "example": [1, 66]}, {"END": [131, 132], "A'": [127, 129], "V'": [76, 78], "Q": [124, 125], "K'": [72, 75], "R": [126, 127], "K": [[82, 91], [84, 92]], "V": [[85, 93], [87, 95]], "example": [67, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The handgun is Robert's. The violin is Dorothy's. The pistol is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Michelle? Answer: No\n Premise: < The hamburger is Ronald's. The goose is Karen's. The cat is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Dorothy? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [17, 19], "Q": [57, 58], "K'": [14, 16], "R": [59, 60], "K": [[6, 23], [8, 25]], "V": [[9, 26], [10, 28]], "example": [1, 66]}, {"END": [131, 132], "A'": [127, 129], "V'": [76, 78], "Q": [124, 125], "K'": [72, 75], "R": [126, 127], "K": [[82, 91], [84, 92]], "V": [[85, 93], [87, 95]], "example": [67, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Donna's. The baseball is Nancy's. The bee is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not Donna? Answer: No\n Premise: < The sweater is Donna's. The car is Susan's. The taxi is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not Donna? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [24, 25], "Q": [54, 55], "K'": [21, 23], "R": [56, 57], "K": [[6, 14], [7, 15]], "V": [[8, 16], [10, 17]], "example": [1, 63]}, {"END": [125, 126], "A'": [121, 123], "V'": [72, 74], "Q": [118, 119], "K'": [69, 71], "R": [120, 121], "K": [[78, 85], [79, 87]], "V": [[80, 88], [81, 89]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Donna's. The baseball is Nancy's. The bee is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not Donna? Answer: No\n Premise: < The sweater is Donna's. The car is Susan's. The taxi is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not Susan? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [24, 25], "Q": [54, 55], "K'": [21, 23], "R": [56, 57], "K": [[6, 14], [7, 15]], "V": [[8, 16], [10, 17]], "example": [1, 63]}, {"END": [124, 125], "A'": [121, 122], "V'": [72, 74], "Q": [118, 119], "K'": [69, 71], "R": [120, 121], "K": [[78, 85], [79, 87]], "V": [[80, 88], [81, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The taxi is Barbara's. The shotgun is Anthony's. The pistol is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Brian? Answer: No\n Premise: < The pig is John's. The papaya is Michael's. The tiger is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Michael? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [9, 10], "Q": [55, 56], "K'": [6, 8], "R": [57, 58], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 63]}, {"END": [124, 125], "A'": [121, 122], "V'": [80, 81], "Q": [118, 119], "K'": [77, 79], "R": [120, 121], "K": [[69, 85], [71, 87]], "V": [[72, 88], [73, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The taxi is Barbara's. The shotgun is Anthony's. The pistol is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not Brian? Answer: No\n Premise: < The pig is John's. The papaya is Michael's. The tiger is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not John? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [9, 10], "Q": [55, 56], "K'": [6, 8], "R": [57, 58], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 63]}, {"END": [124, 125], "A'": [121, 122], "V'": [80, 81], "Q": [118, 119], "K'": [77, 79], "R": [120, 121], "K": [[69, 85], [71, 87]], "V": [[72, 88], [73, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Sandra's. The guitar is Donna's. The pizza is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Sandra? Answer: No\n Premise: < The bee is Michael's. The mosquito is John's. The dog is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not Ronald? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [25, 26], "Q": [55, 56], "K'": [22, 24], "R": [57, 58], "K": [[6, 14], [7, 15]], "V": [[8, 16], [10, 18]], "example": [1, 64]}, {"END": [127, 128], "A'": [123, 125], "V'": [89, 91], "Q": [120, 121], "K'": [87, 88], "R": [122, 123], "K": [[70, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Sandra's. The guitar is Donna's. The pizza is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Sandra? Answer: No\n Premise: < The bee is Michael's. The mosquito is John's. The dog is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not John? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [25, 26], "Q": [55, 56], "K'": [22, 24], "R": [57, 58], "K": [[6, 14], [7, 15]], "V": [[8, 16], [10, 18]], "example": [1, 64]}, {"END": [126, 127], "A'": [123, 124], "V'": [89, 91], "Q": [120, 121], "K'": [87, 88], "R": [122, 123], "K": [[70, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Paul's. The piano is Ruth's. The violin is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Richard? Answer: No\n Premise: < The monkey is Linda's. The strawberries is Michael's. The goose is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Michael? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [9, 10], "Q": [54, 55], "K'": [6, 8], "R": [56, 57], "K": [[14, 21], [15, 23]], "V": [[16, 24], [17, 25]], "example": [1, 62]}, {"END": [126, 127], "A'": [123, 124], "V'": [82, 83], "Q": [120, 121], "K'": [77, 81], "R": [122, 123], "K": [[68, 87], [70, 89]], "V": [[71, 90], [73, 91]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Paul's. The piano is Ruth's. The violin is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not Richard? Answer: No\n Premise: < The monkey is Linda's. The strawberries is Michael's. The goose is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Paul? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [9, 10], "Q": [54, 55], "K'": [6, 8], "R": [56, 57], "K": [[14, 21], [15, 23]], "V": [[16, 24], [17, 25]], "example": [1, 62]}, {"END": [126, 127], "A'": [123, 124], "V'": [82, 83], "Q": [120, 121], "K'": [77, 81], "R": [122, 123], "K": [[68, 87], [70, 89]], "V": [[71, 90], [73, 91]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Nancy's. The apple is Maria's. The horse is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Robert? Answer: Yes\n Premise: < The goat is Anthony's. The elephant is Paul's. The jeep is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Kimberly? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [23, 24], "Q": [53, 54], "K'": [21, 22], "R": [55, 56], "K": [[6, 14], [8, 15]], "V": [[9, 16], [10, 17]], "example": [1, 61]}, {"END": [127, 128], "A'": [122, 125], "V'": [87, 90], "Q": [119, 120], "K'": [84, 86], "R": [121, 122], "K": [[67, 75], [69, 78]], "V": [[70, 79], [71, 80]], "example": [62, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Nancy's. The apple is Maria's. The horse is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not Robert? Answer: Yes\n Premise: < The goat is Anthony's. The elephant is Paul's. The jeep is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not Paul? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [23, 24], "Q": [53, 54], "K'": [21, 22], "R": [55, 56], "K": [[6, 14], [8, 15]], "V": [[9, 16], [10, 17]], "example": [1, 61]}, {"END": [125, 126], "A'": [122, 123], "V'": [87, 90], "Q": [119, 120], "K'": [84, 86], "R": [121, 122], "K": [[67, 75], [69, 78]], "V": [[70, 79], [71, 80]], "example": [62, 127]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Sharon has basketball. Donna has jeep. James has fox. >. So the boy owns fox\n < Margaret has spaghetti. Nancy has plum. Richard has guitar. >. So the boy owns guitar\n", "ranges": [{"END": [24, 25], "A": [25, 27], "V": [15, 17], "Q": [21, 23], "K": [13, 14], "R": null, "K'": [[2, 7], [4, 9]], "V'": [[5, 10], [6, 12]], "example": [1, 27]}, {"END": [50, 51], "A": [51, 52], "V": [42, 43], "Q": [47, 49], "K": [40, 41], "R": null, "K'": [[29, 35], [30, 36]], "V'": [[31, 37], [34, 39]], "example": [28, 52]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Richard has juice. Deborah has whiskey. Linda has wine. >. So the boy owns juice\n < Betty has goat. Paul has motorcycle. Lisa has guitar. >. So the boy owns motorcycle\n", "ranges": [{"END": [25, 26], "A": [26, 28], "V": [4, 6], "Q": [22, 24], "K": [2, 3], "R": null, "K'": [[7, 14], [10, 16]], "V'": [[11, 17], [13, 18]], "example": [1, 28]}, {"END": [50, 51], "A": [51, 53], "V": [37, 39], "Q": [47, 49], "K": [35, 36], "R": null, "K'": [[30, 40], [31, 41]], "V'": [[32, 42], [34, 43]], "example": [29, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Kevin has orange. Donna has soda. William has football. >. So the girl owns soda\n < John has basketball. Karen has lemon. Sarah has sheep. >. So the boy owns basketball\n", "ranges": [{"END": [22, 23], "A": [23, 25], "V": [9, 11], "Q": [19, 21], "K": [6, 8], "R": null, "K'": [[2, 12], [3, 13]], "V'": [[4, 14], [5, 15]], "example": [1, 25]}, {"END": [47, 48], "A": [48, 49], "V": [29, 30], "Q": [44, 46], "K": [27, 28], "R": null, "K'": [[31, 37], [33, 38]], "V'": [[34, 39], [36, 40]], "example": [26, 49]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Maria has gorilla. William has fox. Michael has blueberries. >. So the girl owns gorilla\n < Ronald has mouse. Nancy has horse. Joseph has sweater. >. So the girl owns horse\n", "ranges": [{"END": [25, 26], "A": [26, 29], "V": [4, 7], "Q": [22, 24], "K": [2, 3], "R": null, "K'": [[8, 13], [9, 14]], "V'": [[10, 15], [12, 18]], "example": [1, 29]}, {"END": [51, 52], "A": [52, 53], "V": [38, 39], "Q": [48, 50], "K": [36, 37], "R": null, "K'": [[31, 40], [33, 41]], "V'": [[34, 42], [35, 44]], "example": [30, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Mark has beer. Margaret has basketball. Kenneth has jersey. >. So the girl owns basketball\n < Kenneth has grenade. Mary has shoes. Brian has jersey. >. So the girl owns shoes\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [9, 10], "Q": [20, 22], "K": [7, 8], "R": null, "K'": [[2, 11], [3, 12]], "V'": [[4, 13], [6, 16]], "example": [1, 25]}, {"END": [50, 51], "A": [51, 53], "V": [35, 37], "Q": [47, 49], "K": [33, 34], "R": null, "K'": [[27, 38], [28, 39]], "V'": [[29, 40], [32, 43]], "example": [26, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Barbara has sheep. Linda has mango. Jason has vodka. >. So the boy owns vodka\n < Betty has jeep. Deborah has apple. Jeff has costume. >. So the boy owns costume\n", "ranges": [{"END": [24, 25], "A": [25, 28], "V": [14, 17], "Q": [21, 23], "K": [12, 13], "R": null, "K'": [[2, 6], [3, 8]], "V'": [[4, 9], [5, 11]], "example": [1, 28]}, {"END": [52, 53], "A": [53, 55], "V": [43, 45], "Q": [49, 51], "K": [41, 42], "R": null, "K'": [[30, 35], [31, 38]], "V'": [[32, 39], [34, 40]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< William has lemon. Dorothy has wolf. Charles has goat. >. So the girl owns wolf\n < James has goat. Lisa has beer. Helen has cat. >. So the boy owns goat\n", "ranges": [{"END": [24, 25], "A": [25, 27], "V": [10, 12], "Q": [21, 23], "K": [7, 9], "R": null, "K'": [[2, 13], [3, 14]], "V'": [[4, 15], [6, 17]], "example": [1, 27]}, {"END": [49, 50], "A": [50, 52], "V": [31, 33], "Q": [46, 48], "K": [29, 30], "R": null, "K'": [[34, 39], [35, 40]], "V'": [[36, 41], [38, 42]], "example": [28, 52]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Brian has bread. Barbara has uniform. Ruth has monkey. >. So the boy owns bread\n < Sharon has burger. David has rabbit. Thomas has blackberries. >. So the girl owns burger\n", "ranges": [{"END": [21, 22], "A": [22, 23], "V": [4, 5], "Q": [18, 20], "K": [2, 3], "R": null, "K'": [[6, 10], [7, 11]], "V'": [[8, 12], [9, 14]], "example": [1, 23]}, {"END": [48, 49], "A": [49, 51], "V": [28, 30], "Q": [45, 47], "K": [25, 27], "R": null, "K'": [[31, 36], [32, 37]], "V'": [[33, 38], [35, 41]], "example": [24, 51]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon has basketball. Donna has jeep. James has fox. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns basketball? Answer: No\n Premise: < Kimberly has spaghetti. Margaret has plum. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns guitar? Answer: Yes\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [7, 12]], "V'": [[8, 13], [9, 15]], "example": [1, 48]}, {"END": [95, 96], "A": [92, 93], "V": [68, 69], "Q": [88, 90], "K": [66, 67], "R": null, "K'": [[53, 61], [56, 62]], "V'": [[57, 63], [60, 65]], "example": [49, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Sharon has basketball. Donna has jeep. James has fox. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns basketball? Answer: No\n Premise: < Kimberly has spaghetti. Margaret has plum. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns plum? Answer: No\n", "ranges": [{"END": [46, 47], "A": [43, 44], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [7, 12]], "V'": [[8, 13], [9, 15]], "example": [1, 48]}, {"END": [96, 97], "A": [92, 94], "V": [68, 69], "Q": [88, 90], "K": [66, 67], "R": null, "K'": [[53, 61], [56, 62]], "V'": [[57, 63], [60, 65]], "example": [49, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has donkey. Sandra has car. Susan has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns deer? Answer: No\n Premise: < Donald has cat. Lisa has rabbit. Jennifer has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns cat? Answer: Yes\n", "ranges": [{"END": [46, 47], "A": [42, 44], "V": [7, 9], "Q": [38, 40], "K": [5, 6], "R": null, "K'": [[10, 15], [12, 16]], "V'": [[13, 17], [14, 19]], "example": [1, 48]}, {"END": [94, 95], "A": [91, 92], "V": [55, 56], "Q": [87, 89], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 64]], "V'": [[59, 65], [61, 68]], "example": [49, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has donkey. Sandra has car. Susan has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns deer? Answer: No\n Premise: < Donald has cat. Lisa has rabbit. Jennifer has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns rabbit? Answer: No\n", "ranges": [{"END": [46, 47], "A": [42, 44], "V": [7, 9], "Q": [38, 40], "K": [5, 6], "R": null, "K'": [[10, 15], [12, 16]], "V'": [[13, 17], [14, 19]], "example": [1, 48]}, {"END": [95, 96], "A": [91, 93], "V": [55, 56], "Q": [87, 89], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 64]], "V'": [[59, 65], [61, 68]], "example": [49, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth has durian. Patricia has jersey. Jason has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns durian? Answer: No\n Premise: < Christopher has underwear. Karen has peach. Kenneth has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns peach? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [20, 22], "Q": [41, 43], "K": [18, 19], "R": null, "K'": [[5, 10], [6, 13]], "V'": [[7, 14], [9, 17]], "example": [1, 51]}, {"END": [99, 100], "A": [95, 97], "V": [65, 67], "Q": [91, 93], "K": [62, 64], "R": null, "K'": [[56, 68], [57, 69]], "V'": [[58, 70], [61, 72]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth has durian. Patricia has jersey. Jason has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns durian? Answer: No\n Premise: < Christopher has underwear. Karen has peach. Kenneth has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns underwear? Answer: No\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [20, 22], "Q": [41, 43], "K": [18, 19], "R": null, "K'": [[5, 10], [6, 13]], "V'": [[7, 14], [9, 17]], "example": [1, 51]}, {"END": [100, 101], "A": [95, 98], "V": [65, 67], "Q": [91, 93], "K": [62, 64], "R": null, "K'": [[56, 68], [57, 69]], "V'": [[58, 70], [61, 72]], "example": [52, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has mouse. Susan has horse. Ronald has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns horse? Answer: Yes\n Premise: < Joseph has bee. Kevin has baseball. Kimberly has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns basketball? Answer: Yes\n", "ranges": [{"END": [44, 45], "A": [41, 42], "V": [11, 12], "Q": [37, 39], "K": [9, 10], "R": null, "K'": [[5, 13], [6, 15]], "V'": [[7, 16], [8, 18]], "example": [1, 46]}, {"END": [91, 92], "A": [88, 89], "V": [64, 65], "Q": [84, 86], "K": [60, 63], "R": null, "K'": [[51, 56], [52, 57]], "V'": [[53, 58], [55, 59]], "example": [47, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has mouse. Susan has horse. Ronald has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns horse? Answer: Yes\n Premise: < Joseph has bee. Kevin has baseball. Kimberly has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns baseball? Answer: No\n", "ranges": [{"END": [44, 45], "A": [41, 42], "V": [11, 12], "Q": [37, 39], "K": [9, 10], "R": null, "K'": [[5, 13], [6, 15]], "V'": [[7, 16], [8, 18]], "example": [1, 46]}, {"END": [91, 92], "A": [88, 89], "V": [64, 65], "Q": [84, 86], "K": [60, 63], "R": null, "K'": [[51, 56], [52, 57]], "V'": [[53, 58], [55, 59]], "example": [47, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret has sweater. Jeff has squirrel. John has soda. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns soda? Answer: No\n Premise: < Laura has revolver. Susan has cat. George has mango. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mango? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [7, 9], "Q": [39, 41], "K": [5, 6], "R": null, "K'": [[10, 16], [11, 17]], "V'": [[12, 18], [15, 20]], "example": [1, 49]}, {"END": [94, 95], "A": [90, 92], "V": [65, 67], "Q": [86, 88], "K": [63, 64], "R": null, "K'": [[54, 59], [55, 60]], "V'": [[56, 61], [58, 62]], "example": [50, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Margaret has sweater. Jeff has squirrel. John has soda. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns soda? Answer: No\n Premise: < Laura has revolver. Susan has cat. George has mango. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns revolver? Answer: No\n", "ranges": [{"END": [47, 48], "A": [43, 45], "V": [7, 9], "Q": [39, 41], "K": [5, 6], "R": null, "K'": [[10, 16], [11, 17]], "V'": [[12, 18], [15, 20]], "example": [1, 49]}, {"END": [94, 95], "A": [90, 92], "V": [65, 67], "Q": [86, 88], "K": [63, 64], "R": null, "K'": [[54, 59], [55, 60]], "V'": [[56, 61], [58, 62]], "example": [50, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has blackberries. Donald has mosquito. Laura has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mosquito? Answer: Yes\n Premise: < James has goat. Lisa has beer. Helen has cat. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns goat? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [45, 48], "V": [14, 17], "Q": [41, 43], "K": [12, 13], "R": null, "K'": [[5, 18], [7, 19]], "V'": [[8, 20], [11, 22]], "example": [1, 52]}, {"END": [97, 98], "A": [93, 95], "V": [59, 61], "Q": [89, 91], "K": [57, 58], "R": null, "K'": [[62, 67], [63, 68]], "V'": [[64, 69], [66, 70]], "example": [53, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has blackberries. Donald has mosquito. Laura has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mosquito? Answer: Yes\n Premise: < James has goat. Lisa has beer. Helen has cat. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns beer? Answer: No\n", "ranges": [{"END": [50, 51], "A": [45, 48], "V": [14, 17], "Q": [41, 43], "K": [12, 13], "R": null, "K'": [[5, 18], [7, 19]], "V'": [[8, 20], [11, 22]], "example": [1, 52]}, {"END": [97, 98], "A": [93, 95], "V": [59, 61], "Q": [89, 91], "K": [57, 58], "R": null, "K'": [[62, 67], [63, 68]], "V'": [[64, 69], [66, 70]], "example": [53, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol has whiskey. Michael has costume. Maria has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns costume? Answer: Yes\n Premise: < Linda has gun. Sharon has car. Paul has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns grapes? Answer: Yes\n", "ranges": [{"END": [46, 47], "A": [42, 44], "V": [12, 14], "Q": [38, 40], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[7, 17], [9, 19]], "example": [1, 48]}, {"END": [96, 97], "A": [91, 94], "V": [65, 68], "Q": [87, 89], "K": [63, 64], "R": null, "K'": [[53, 58], [55, 60]], "V'": [[56, 61], [57, 62]], "example": [49, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Carol has whiskey. Michael has costume. Maria has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns costume? Answer: Yes\n Premise: < Linda has gun. Sharon has car. Paul has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns car? Answer: No\n", "ranges": [{"END": [46, 47], "A": [42, 44], "V": [12, 14], "Q": [38, 40], "K": [10, 11], "R": null, "K'": [[5, 15], [6, 16]], "V'": [[7, 17], [9, 19]], "example": [1, 48]}, {"END": [94, 95], "A": [91, 92], "V": [65, 68], "Q": [87, 89], "K": [63, 64], "R": null, "K'": [[53, 58], [55, 60]], "V'": [[56, 61], [57, 62]], "example": [49, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty has revolver. Mary has pistol. William has apple. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns apple? Answer: Yes\n Premise: < Donna has squirrel. Sarah has grapes. Paul has piano. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns piano? Answer: Yes\n", "ranges": [{"END": [44, 45], "A": [41, 42], "V": [17, 18], "Q": [37, 39], "K": [15, 16], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 14]], "example": [1, 46]}, {"END": [93, 94], "A": [90, 91], "V": [66, 67], "Q": [86, 88], "K": [64, 65], "R": null, "K'": [[51, 58], [53, 59]], "V'": [[54, 60], [57, 63]], "example": [47, 95]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Betty has revolver. Mary has pistol. William has apple. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns apple? Answer: Yes\n Premise: < Donna has squirrel. Sarah has grapes. Paul has piano. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns grapes? Answer: No\n", "ranges": [{"END": [44, 45], "A": [41, 42], "V": [17, 18], "Q": [37, 39], "K": [15, 16], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 14]], "example": [1, 46]}, {"END": [95, 96], "A": [90, 93], "V": [66, 67], "Q": [86, 88], "K": [64, 65], "R": null, "K'": [[51, 58], [53, 59]], "V'": [[54, 60], [57, 63]], "example": [47, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The basketball is Sharon's. The jeep is Donna's. The fox is James's. >. So the boy owns fox\n < The spaghetti is Margaret's. The plum is Nancy's. The guitar is Richard's. >. So the boy owns guitar\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [20, 22], "Q": [30, 32], "K": [23, 24], "R": null, "K'": [[5, 14], [7, 16]], "V'": [[3, 11], [4, 13]], "example": [1, 36]}, {"END": [68, 69], "A": [69, 70], "V": [56, 57], "Q": [65, 67], "K": [58, 59], "R": null, "K'": [[43, 51], [44, 52]], "V'": [[39, 48], [42, 50]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The juice is Richard's. The whiskey is Deborah's. The wine is Linda's. >. So the boy owns juice\n < The goat is Betty's. The motorcycle is Paul's. The guitar is Lisa's. >. So the boy owns motorcycle\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [3, 5], "Q": [31, 33], "K": [6, 7], "R": null, "K'": [[14, 23], [17, 25]], "V'": [[11, 21], [13, 22]], "example": [1, 37]}, {"END": [68, 69], "A": [69, 71], "V": [48, 50], "Q": [65, 67], "K": [51, 52], "R": null, "K'": [[43, 58], [44, 59]], "V'": [[40, 56], [42, 57]], "example": [38, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The orange is Kevin's. The soda is Donna's. The football is William's. >. So the girl owns soda\n < The basketball is John's. The lemon is Karen's. The sheep is Sarah's. >. So the boy owns basketball\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [10, 12], "Q": [28, 30], "K": [13, 15], "R": null, "K'": [[5, 21], [6, 22]], "V'": [[3, 19], [4, 20]], "example": [1, 34]}, {"END": [65, 66], "A": [66, 67], "V": [37, 38], "Q": [62, 64], "K": [39, 40], "R": null, "K'": [[47, 55], [49, 56]], "V'": [[44, 53], [46, 54]], "example": [35, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The gorilla is Maria's. The fox is William's. The blueberries is Michael's. >. So the girl owns gorilla\n < The mouse is Ronald's. The horse is Nancy's. The sweater is Joseph's. >. So the girl owns horse\n", "ranges": [{"END": [34, 35], "A": [35, 38], "V": [3, 6], "Q": [31, 33], "K": [7, 8], "R": null, "K'": [[15, 24], [16, 25]], "V'": [[12, 20], [14, 23]], "example": [1, 38]}, {"END": [69, 70], "A": [70, 71], "V": [49, 50], "Q": [66, 68], "K": [51, 52], "R": null, "K'": [[43, 59], [45, 60]], "V'": [[41, 56], [42, 58]], "example": [39, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The beer is Mark's. The basketball is Margaret's. The jersey is Kenneth's. >. So the girl owns basketball\n < The grenade is Kenneth's. The shoes is Mary's. The jersey is Brian's. >. So the girl owns shoes\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [11, 12], "Q": [29, 31], "K": [13, 14], "R": null, "K'": [[6, 22], [7, 23]], "V'": [[3, 18], [5, 21]], "example": [1, 34]}, {"END": [68, 69], "A": [69, 71], "V": [46, 48], "Q": [65, 67], "K": [49, 50], "R": null, "K'": [[41, 58], [42, 59]], "V'": [[37, 54], [40, 57]], "example": [35, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The sheep is Barbara's. The mango is Linda's. The vodka is Jason's. >. So the boy owns vodka\n < The jeep is Betty's. The apple is Deborah's. The costume is Jeff's. >. So the boy owns costume\n", "ranges": [{"END": [33, 34], "A": [34, 37], "V": [19, 22], "Q": [30, 32], "K": [23, 24], "R": null, "K'": [[5, 13], [6, 15]], "V'": [[3, 10], [4, 12]], "example": [1, 37]}, {"END": [70, 71], "A": [71, 73], "V": [57, 59], "Q": [67, 69], "K": [60, 61], "R": null, "K'": [[43, 50], [44, 53]], "V'": [[40, 48], [42, 49]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The lemon is William's. The wolf is Dorothy's. The goat is Charles's. >. So the girl owns wolf\n < The goat is James's. The beer is Lisa's. The cat is Helen's. >. So the boy owns goat\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [11, 13], "Q": [30, 32], "K": [14, 16], "R": null, "K'": [[6, 23], [7, 24]], "V'": [[3, 20], [5, 22]], "example": [1, 36]}, {"END": [67, 68], "A": [68, 70], "V": [39, 41], "Q": [64, 66], "K": [42, 43], "R": null, "K'": [[50, 57], [51, 58]], "V'": [[47, 55], [49, 56]], "example": [37, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The bread is Brian's. The uniform is Barbara's. The monkey is Ruth's. >. So the boy owns bread\n < The burger is Sharon's. The rabbit is David's. The blackberries is Thomas's. >. So the girl owns burger\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [3, 4], "Q": [27, 29], "K": [5, 6], "R": null, "K'": [[12, 20], [13, 21]], "V'": [[10, 17], [11, 19]], "example": [1, 32]}, {"END": [66, 67], "A": [67, 69], "V": [35, 37], "Q": [63, 65], "K": [38, 40], "R": null, "K'": [[47, 56], [48, 57]], "V'": [[44, 52], [46, 55]], "example": [33, 69]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Sharon's. The jeep is Donna's. The fox is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns basketball? Answer: No\n Premise: < The spaghetti is Kimberly's. The plum is Margaret's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns guitar? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[6, 14], [7, 16]], "example": [1, 57]}, {"END": [113, 114], "A": [110, 111], "V": [82, 83], "Q": [106, 108], "K": [84, 85], "R": null, "K'": [[67, 77], [70, 78]], "V'": [[63, 74], [66, 76]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Sharon's. The jeep is Donna's. The fox is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns basketball? Answer: No\n Premise: < The spaghetti is Kimberly's. The plum is Margaret's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns plum? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[6, 14], [7, 16]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [82, 83], "Q": [106, 108], "K": [84, 85], "R": null, "K'": [[67, 77], [70, 78]], "V'": [[63, 74], [66, 76]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Paul's. The car is Sandra's. The deer is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns deer? Answer: No\n Premise: < The cat is Donald's. The rabbit is Lisa's. The cocktail is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns cat? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [6, 8], "Q": [47, 49], "K": [9, 10], "R": null, "K'": [[16, 25], [18, 26]], "V'": [[14, 22], [15, 24]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [63, 64], "Q": [105, 107], "K": [65, 66], "R": null, "K'": [[73, 82], [74, 84]], "V'": [[70, 78], [72, 81]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Paul's. The car is Sandra's. The deer is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns deer? Answer: No\n Premise: < The cat is Donald's. The rabbit is Lisa's. The cocktail is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns rabbit? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [6, 8], "Q": [47, 49], "K": [9, 10], "R": null, "K'": [[16, 25], [18, 26]], "V'": [[14, 22], [15, 24]], "example": [1, 57]}, {"END": [113, 114], "A": [109, 111], "V": [63, 64], "Q": [105, 107], "K": [65, 66], "R": null, "K'": [[73, 82], [74, 84]], "V'": [[70, 78], [72, 81]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Elizabeth's. The jersey is Patricia's. The handgun is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns durian? Answer: No\n Premise: < The underwear is Christopher's. The peach is Karen's. The burger is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns peach? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [25, 27], "Q": [50, 52], "K": [28, 29], "R": null, "K'": [[9, 18], [10, 21]], "V'": [[6, 14], [8, 17]], "example": [1, 60]}, {"END": [117, 118], "A": [113, 115], "V": [75, 77], "Q": [109, 111], "K": [78, 80], "R": null, "K'": [[70, 87], [71, 88]], "V'": [[66, 84], [69, 86]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Elizabeth's. The jersey is Patricia's. The handgun is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns durian? Answer: No\n Premise: < The underwear is Christopher's. The peach is Karen's. The burger is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns underwear? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [25, 27], "Q": [50, 52], "K": [28, 29], "R": null, "K'": [[9, 18], [10, 21]], "V'": [[6, 14], [8, 17]], "example": [1, 60]}, {"END": [118, 119], "A": [113, 116], "V": [75, 77], "Q": [109, 111], "K": [78, 80], "R": null, "K'": [[70, 87], [71, 88]], "V'": [[66, 84], [69, 86]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Daniel's. The horse is Susan's. The sweater is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns horse? Answer: Yes\n Premise: < The bee is Joseph's. The baseball is Kevin's. The basketball is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns basketball? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [13, 14], "Q": [46, 48], "K": [15, 16], "R": null, "K'": [[8, 23], [9, 25]], "V'": [[6, 20], [7, 22]], "example": [1, 55]}, {"END": [109, 110], "A": [106, 107], "V": [76, 77], "Q": [102, 104], "K": [78, 81], "R": null, "K'": [[64, 71], [65, 72]], "V'": [[61, 69], [63, 70]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Daniel's. The horse is Susan's. The sweater is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns horse? Answer: Yes\n Premise: < The bee is Joseph's. The baseball is Kevin's. The basketball is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns baseball? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [13, 14], "Q": [46, 48], "K": [15, 16], "R": null, "K'": [[8, 23], [9, 25]], "V'": [[6, 20], [7, 22]], "example": [1, 55]}, {"END": [109, 110], "A": [106, 107], "V": [76, 77], "Q": [102, 104], "K": [78, 81], "R": null, "K'": [[64, 71], [65, 72]], "V'": [[61, 69], [63, 70]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Margaret's. The squirrel is Jeff's. The soda is John's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns soda? Answer: No\n Premise: < The revolver is Laura's. The cat is Susan's. The mango is George's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mango? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [6, 8], "Q": [48, 50], "K": [9, 10], "R": null, "K'": [[18, 26], [19, 27]], "V'": [[14, 23], [17, 25]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [79, 81], "Q": [104, 106], "K": [82, 83], "R": null, "K'": [[67, 74], [68, 75]], "V'": [[64, 72], [66, 73]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Margaret's. The squirrel is Jeff's. The soda is John's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns soda? Answer: No\n Premise: < The revolver is Laura's. The cat is Susan's. The mango is George's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns revolver? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [6, 8], "Q": [48, 50], "K": [9, 10], "R": null, "K'": [[18, 26], [19, 27]], "V'": [[14, 23], [17, 25]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [79, 81], "Q": [104, 106], "K": [82, 83], "R": null, "K'": [[67, 74], [68, 75]], "V'": [[64, 72], [66, 73]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Karen's. The mosquito is Donald's. The wolf is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mosquito? Answer: Yes\n Premise: < The goat is James's. The beer is Lisa's. The cat is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns goat? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [54, 57], "V": [16, 19], "Q": [50, 52], "K": [20, 21], "R": null, "K'": [[10, 28], [12, 29]], "V'": [[6, 25], [9, 27]], "example": [1, 61]}, {"END": [115, 116], "A": [111, 113], "V": [67, 69], "Q": [107, 109], "K": [70, 71], "R": null, "K'": [[78, 85], [79, 86]], "V'": [[75, 83], [77, 84]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Karen's. The mosquito is Donald's. The wolf is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns mosquito? Answer: Yes\n Premise: < The goat is James's. The beer is Lisa's. The cat is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns beer? Answer: No\n", "ranges": [{"END": [59, 60], "A": [54, 57], "V": [16, 19], "Q": [50, 52], "K": [20, 21], "R": null, "K'": [[10, 28], [12, 29]], "V'": [[6, 25], [9, 27]], "example": [1, 61]}, {"END": [115, 116], "A": [111, 113], "V": [67, 69], "Q": [107, 109], "K": [70, 71], "R": null, "K'": [[78, 85], [79, 86]], "V'": [[75, 83], [77, 84]], "example": [62, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Carol's. The costume is Michael's. The pizza is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns costume? Answer: Yes\n Premise: < The gun is Linda's. The car is Sharon's. The grapes is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns grapes? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [14, 16], "Q": [47, 49], "K": [17, 18], "R": null, "K'": [[9, 25], [10, 26]], "V'": [[6, 22], [8, 24]], "example": [1, 57]}, {"END": [114, 115], "A": [109, 112], "V": [79, 82], "Q": [105, 107], "K": [83, 84], "R": null, "K'": [[65, 73], [67, 75]], "V'": [[63, 71], [64, 72]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Carol's. The costume is Michael's. The pizza is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns costume? Answer: Yes\n Premise: < The gun is Linda's. The car is Sharon's. The grapes is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns car? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [14, 16], "Q": [47, 49], "K": [17, 18], "R": null, "K'": [[9, 25], [10, 26]], "V'": [[6, 22], [8, 24]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [79, 82], "Q": [105, 107], "K": [83, 84], "R": null, "K'": [[65, 73], [67, 75]], "V'": [[63, 71], [64, 72]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Betty's. The pistol is Mary's. The apple is William's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns apple? Answer: Yes\n Premise: < The squirrel is Donna's. The grapes is Sarah's. The piano is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns piano? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [22, 23], "Q": [46, 48], "K": [24, 25], "R": null, "K'": [[9, 17], [10, 18]], "V'": [[6, 14], [8, 16]], "example": [1, 55]}, {"END": [111, 112], "A": [108, 109], "V": [80, 81], "Q": [104, 106], "K": [82, 83], "R": null, "K'": [[65, 75], [67, 76]], "V'": [[61, 71], [64, 74]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Betty's. The pistol is Mary's. The apple is William's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns apple? Answer: Yes\n Premise: < The squirrel is Donna's. The grapes is Sarah's. The piano is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns grapes? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [22, 23], "Q": [46, 48], "K": [24, 25], "R": null, "K'": [[9, 17], [10, 18]], "V'": [[6, 14], [8, 16]], "example": [1, 55]}, {"END": [113, 114], "A": [108, 111], "V": [80, 81], "Q": [104, 106], "K": [82, 83], "R": null, "K'": [[65, 75], [67, 76]], "V'": [[61, 71], [64, 74]], "example": [56, 115]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Brian has basketball. Kenneth has jeep. Mary has fox. >. The boys do not own fox\n < Joseph has spaghetti. Daniel has plum. Maria has guitar. >. The boys do not own guitar\n", "ranges": [{"END": [22, 23], "A'": [23, 25], "V'": [13, 15], "Q": [18, 20], "K'": [11, 12], "R": [21, 22], "K": [[2, 6], [3, 7]], "V": [[4, 8], [5, 10]], "example": [1, 25]}, {"END": [48, 49], "A'": [49, 50], "V'": [40, 41], "Q": [44, 46], "K'": [38, 39], "R": [47, 48], "K": [[27, 33], [28, 34]], "V": [[29, 35], [32, 37]], "example": [26, 50]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Maria has juice. Jeff has whiskey. Robert has wine. >. The boys do not own juice\n < Mark has goat. Karen has motorcycle. Christopher has guitar. >. The boys do not own motorcycle\n", "ranges": [{"END": [22, 23], "A'": [23, 25], "V'": [4, 6], "Q": [18, 20], "K'": [2, 3], "R": [21, 22], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 15]], "example": [1, 25]}, {"END": [48, 49], "A'": [49, 51], "V'": [35, 37], "Q": [44, 46], "K'": [32, 34], "R": [47, 48], "K": [[27, 38], [28, 39]], "V": [[29, 40], [31, 41]], "example": [26, 51]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Sarah has orange. Kenneth has soda. Elizabeth has football. >. The girls do not own soda\n < Patricia has basketball. Paul has lemon. Kevin has sheep. >. The boys do not own basketball\n", "ranges": [{"END": [21, 22], "A'": [22, 24], "V'": [8, 10], "Q": [17, 19], "K'": [6, 7], "R": [20, 21], "K": [[2, 11], [3, 12]], "V": [[4, 13], [5, 14]], "example": [1, 24]}, {"END": [47, 48], "A'": [48, 49], "V'": [30, 31], "Q": [43, 45], "K'": [26, 29], "R": [46, 47], "K": [[32, 37], [33, 38]], "V": [[34, 39], [36, 40]], "example": [25, 49]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Richard has gorilla. Elizabeth has fox. Barbara has blueberries. >. The girls do not own gorilla\n < Michelle has mouse. Daniel has horse. Margaret has sweater. >. The girls do not own horse\n", "ranges": [{"END": [25, 26], "A'": [26, 29], "V'": [4, 7], "Q": [21, 23], "K'": [2, 3], "R": [24, 25], "K": [[8, 13], [9, 14]], "V": [[10, 15], [12, 18]], "example": [1, 29]}, {"END": [51, 52], "A'": [52, 53], "V'": [38, 39], "Q": [47, 49], "K'": [36, 37], "R": [50, 51], "K": [[31, 40], [33, 41]], "V": [[34, 42], [35, 44]], "example": [30, 53]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Betty has beer. Joseph has basketball. Donna has jersey. >. The girls do not own basketball\n < Donna has grenade. James has shoes. Sharon has jersey. >. The girls do not own shoes\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [9, 10], "Q": [20, 22], "K'": [7, 8], "R": [23, 24], "K": [[2, 11], [3, 13]], "V": [[4, 14], [6, 17]], "example": [1, 26]}, {"END": [53, 54], "A'": [54, 56], "V'": [37, 39], "Q": [49, 51], "K'": [35, 36], "R": [52, 53], "K": [[28, 40], [30, 42]], "V": [[31, 43], [34, 46]], "example": [27, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Michael has sheep. Robert has mango. Kimberly has vodka. >. The boys do not own vodka\n < Mark has jeep. Jeff has apple. Deborah has costume. >. The boys do not own costume\n", "ranges": [{"END": [25, 26], "A'": [26, 29], "V'": [15, 18], "Q": [21, 23], "K'": [11, 14], "R": [24, 25], "K": [[2, 6], [3, 7]], "V": [[4, 8], [5, 10]], "example": [1, 29]}, {"END": [53, 54], "A'": [54, 56], "V'": [44, 46], "Q": [49, 51], "K'": [40, 43], "R": [52, 53], "K": [[31, 36], [32, 37]], "V": [[33, 38], [35, 39]], "example": [30, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Elizabeth has lemon. Thomas has wolf. Susan has goat. >. The girls do not own wolf\n < Mary has goat. Christopher has beer. Donald has cat. >. The boys do not own goat\n", "ranges": [{"END": [23, 24], "A'": [24, 26], "V'": [9, 11], "Q": [19, 21], "K'": [7, 8], "R": [22, 23], "K": [[2, 12], [3, 13]], "V": [[4, 14], [6, 16]], "example": [1, 26]}, {"END": [48, 49], "A'": [49, 51], "V'": [30, 32], "Q": [44, 46], "K'": [28, 29], "R": [47, 48], "K": [[33, 38], [34, 39]], "V": [[35, 40], [37, 41]], "example": [27, 51]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Sharon has bread. Michael has uniform. Edward has monkey. >. The boys do not own bread\n < Brian has burger. Jennifer has rabbit. Dorothy has blackberries. >. The girls do not own burger\n", "ranges": [{"END": [22, 23], "A'": [23, 24], "V'": [5, 6], "Q": [18, 20], "K'": [2, 4], "R": [21, 22], "K": [[7, 11], [8, 12]], "V": [[9, 13], [10, 15]], "example": [1, 24]}, {"END": [50, 51], "A'": [51, 53], "V'": [28, 30], "Q": [46, 48], "K'": [26, 27], "R": [49, 50], "K": [[31, 37], [33, 39]], "V": [[34, 40], [36, 43]], "example": [25, 53]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian has basketball. Kenneth has jeep. Mary has fox. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own basketball? Answer: No\n Premise: < Jason has spaghetti. Joseph has plum. Nancy has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own guitar? Answer: Yes\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [16, 18], "Q": [37, 39], "K'": [14, 15], "R": [40, 41], "K": [[5, 9], [6, 10]], "V": [[7, 11], [8, 13]], "example": [1, 47]}, {"END": [93, 94], "A'": [90, 91], "V'": [65, 66], "Q": [85, 87], "K'": [63, 64], "R": [88, 89], "K": [[52, 58], [53, 59]], "V": [[54, 60], [57, 62]], "example": [48, 95]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Brian has basketball. Kenneth has jeep. Mary has fox. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own basketball? Answer: No\n Premise: < Jason has spaghetti. Joseph has plum. Nancy has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own plum? Answer: No\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [16, 18], "Q": [37, 39], "K'": [14, 15], "R": [40, 41], "K": [[5, 9], [6, 10]], "V": [[7, 11], [8, 13]], "example": [1, 47]}, {"END": [94, 95], "A'": [90, 92], "V'": [65, 66], "Q": [85, 87], "K'": [63, 64], "R": [88, 89], "K": [[52, 58], [53, 59]], "V": [[54, 60], [57, 62]], "example": [48, 96]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has donkey. George has car. Charles has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own deer? Answer: No\n Premise: < Helen has cat. Christopher has rabbit. David has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own cat? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [8, 10], "Q": [38, 40], "K'": [5, 7], "R": [41, 42], "K": [[11, 15], [12, 16]], "V": [[13, 17], [14, 19]], "example": [1, 49]}, {"END": [95, 96], "A'": [92, 93], "V'": [56, 57], "Q": [87, 89], "K'": [54, 55], "R": [90, 91], "K": [[58, 63], [59, 64]], "V": [[60, 65], [62, 68]], "example": [50, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Karen has donkey. George has car. Charles has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own deer? Answer: No\n Premise: < Helen has cat. Christopher has rabbit. David has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own rabbit? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [8, 10], "Q": [38, 40], "K'": [5, 7], "R": [41, 42], "K": [[11, 15], [12, 16]], "V": [[13, 17], [14, 19]], "example": [1, 49]}, {"END": [96, 97], "A'": [92, 94], "V'": [56, 57], "Q": [87, 89], "K'": [54, 55], "R": [90, 91], "K": [[58, 63], [59, 64]], "V": [[60, 65], [62, 68]], "example": [50, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William has durian. John has jersey. Kimberly has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own durian? Answer: No\n Premise: < Lisa has underwear. Paul has peach. Donna has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own peach? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [46, 48], "V'": [20, 22], "Q": [41, 43], "K'": [16, 19], "R": [44, 45], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 15]], "example": [1, 52]}, {"END": [101, 102], "A'": [97, 99], "V'": [65, 67], "Q": [92, 94], "K'": [63, 64], "R": [95, 96], "K": [[57, 68], [58, 70]], "V": [[59, 71], [62, 73]], "example": [53, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < William has durian. John has jersey. Kimberly has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own durian? Answer: No\n Premise: < Lisa has underwear. Paul has peach. Donna has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own underwear? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [46, 48], "V'": [20, 22], "Q": [41, 43], "K'": [16, 19], "R": [44, 45], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 15]], "example": [1, 52]}, {"END": [102, 103], "A'": [97, 100], "V'": [65, 67], "Q": [92, 94], "K'": [63, 64], "R": [95, 96], "K": [[57, 68], [58, 70]], "V": [[59, 71], [62, 73]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has mouse. Charles has horse. Michelle has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own horse? Answer: Yes\n Premise: < Margaret has bee. Sarah has baseball. Jason has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own basketball? Answer: Yes\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [11, 12], "Q": [37, 39], "K'": [9, 10], "R": [40, 41], "K": [[5, 13], [6, 15]], "V": [[7, 16], [8, 18]], "example": [1, 47]}, {"END": [91, 92], "A'": [88, 89], "V'": [63, 64], "Q": [83, 85], "K'": [61, 62], "R": [86, 87], "K": [[52, 57], [53, 58]], "V": [[54, 59], [56, 60]], "example": [48, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has mouse. Charles has horse. Michelle has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own horse? Answer: Yes\n Premise: < Margaret has bee. Sarah has baseball. Jason has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own baseball? Answer: No\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [11, 12], "Q": [37, 39], "K'": [9, 10], "R": [40, 41], "K": [[5, 13], [6, 15]], "V": [[7, 16], [8, 18]], "example": [1, 47]}, {"END": [91, 92], "A'": [88, 89], "V'": [63, 64], "Q": [83, 85], "K'": [61, 62], "R": [86, 87], "K": [[52, 57], [53, 58]], "V": [[54, 59], [56, 60]], "example": [48, 93]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph has sweater. Deborah has squirrel. Patricia has soda. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own soda? Answer: No\n Premise: < Anthony has revolver. Charles has cat. Sandra has mango. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mango? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [7, 9], "Q": [43, 45], "K'": [5, 6], "R": [46, 47], "K": [[10, 18], [13, 21]], "V": [[14, 22], [17, 24]], "example": [1, 54]}, {"END": [101, 102], "A'": [97, 99], "V'": [71, 73], "Q": [92, 94], "K'": [68, 70], "R": [95, 96], "K": [[59, 64], [60, 65]], "V": [[61, 66], [63, 67]], "example": [55, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph has sweater. Deborah has squirrel. Patricia has soda. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own soda? Answer: No\n Premise: < Anthony has revolver. Charles has cat. Sandra has mango. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own revolver? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [7, 9], "Q": [43, 45], "K'": [5, 6], "R": [46, 47], "K": [[10, 18], [13, 21]], "V": [[14, 22], [17, 24]], "example": [1, 54]}, {"END": [101, 102], "A'": [97, 99], "V'": [71, 73], "Q": [92, 94], "K'": [68, 70], "R": [95, 96], "K": [[59, 64], [60, 65]], "V": [[61, 66], [63, 67]], "example": [55, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has blackberries. Helen has mosquito. Anthony has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mosquito? Answer: Yes\n Premise: < Mary has goat. Christopher has beer. Donald has cat. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own goat? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [45, 48], "V'": [13, 16], "Q": [40, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 17], [6, 18]], "V": [[7, 19], [10, 21]], "example": [1, 52]}, {"END": [98, 99], "A'": [94, 96], "V'": [59, 61], "Q": [89, 91], "K'": [57, 58], "R": [92, 93], "K": [[62, 67], [63, 68]], "V": [[64, 69], [66, 70]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Paul has blackberries. Helen has mosquito. Anthony has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mosquito? Answer: Yes\n Premise: < Mary has goat. Christopher has beer. Donald has cat. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own beer? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [45, 48], "V'": [13, 16], "Q": [40, 42], "K'": [11, 12], "R": [43, 44], "K": [[5, 17], [6, 18]], "V": [[7, 19], [10, 21]], "example": [1, 52]}, {"END": [98, 99], "A'": [94, 96], "V'": [59, 61], "Q": [89, 91], "K'": [57, 58], "R": [92, 93], "K": [[62, 67], [63, 68]], "V": [[64, 69], [66, 70]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven has whiskey. Barbara has costume. Richard has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own costume? Answer: Yes\n Premise: < Robert has gun. Brian has car. Karen has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own grapes? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [12, 14], "Q": [38, 40], "K'": [10, 11], "R": [41, 42], "K": [[5, 15], [6, 16]], "V": [[7, 17], [9, 19]], "example": [1, 49]}, {"END": [97, 98], "A'": [92, 95], "V'": [65, 68], "Q": [87, 89], "K'": [62, 64], "R": [90, 91], "K": [[54, 58], [55, 59]], "V": [[56, 60], [57, 61]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven has whiskey. Barbara has costume. Richard has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own costume? Answer: Yes\n Premise: < Robert has gun. Brian has car. Karen has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own car? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [12, 14], "Q": [38, 40], "K'": [10, 11], "R": [41, 42], "K": [[5, 15], [6, 16]], "V": [[7, 17], [9, 19]], "example": [1, 49]}, {"END": [95, 96], "A'": [92, 93], "V'": [65, 68], "Q": [87, 89], "K'": [62, 64], "R": [90, 91], "K": [[54, 58], [55, 59]], "V": [[56, 60], [57, 61]], "example": [50, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has revolver. James has pistol. Elizabeth has apple. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own apple? Answer: Yes\n Premise: < Kenneth has squirrel. Kevin has grapes. Karen has piano. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own piano? Answer: Yes\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [17, 18], "Q": [37, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 14]], "example": [1, 47]}, {"END": [95, 96], "A'": [92, 93], "V'": [67, 68], "Q": [87, 89], "K'": [64, 66], "R": [90, 91], "K": [[52, 58], [53, 59]], "V": [[54, 60], [57, 63]], "example": [48, 97]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has revolver. James has pistol. Elizabeth has apple. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own apple? Answer: Yes\n Premise: < Kenneth has squirrel. Kevin has grapes. Karen has piano. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own grapes? Answer: No\n", "ranges": [{"END": [45, 46], "A'": [42, 43], "V'": [17, 18], "Q": [37, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 14]], "example": [1, 47]}, {"END": [97, 98], "A'": [92, 95], "V'": [67, 68], "Q": [87, 89], "K'": [64, 66], "R": [90, 91], "K": [[52, 58], [53, 59]], "V": [[54, 60], [57, 63]], "example": [48, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The basketball is Brian's. The jeep is Kenneth's. The fox is Mary's. >. The boys do not own fox\n < The spaghetti is Joseph's. The plum is Daniel's. The guitar is Maria's. >. The boys do not own guitar\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [18, 20], "Q": [27, 29], "K'": [21, 22], "R": [30, 31], "K": [[5, 13], [6, 14]], "V": [[3, 10], [4, 12]], "example": [1, 34]}, {"END": [66, 67], "A'": [67, 68], "V'": [54, 55], "Q": [62, 64], "K'": [56, 57], "R": [65, 66], "K": [[41, 49], [42, 50]], "V": [[37, 46], [40, 48]], "example": [35, 68]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The juice is Maria's. The whiskey is Jeff's. The wine is Robert's. >. The boys do not own juice\n < The goat is Mark's. The motorcycle is Karen's. The guitar is Christopher's. >. The boys do not own motorcycle\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [3, 5], "Q": [27, 29], "K'": [6, 7], "R": [30, 31], "K": [[14, 21], [15, 22]], "V": [[11, 19], [13, 20]], "example": [1, 34]}, {"END": [66, 67], "A'": [67, 69], "V'": [45, 47], "Q": [62, 64], "K'": [48, 50], "R": [65, 66], "K": [[40, 56], [41, 57]], "V": [[37, 54], [39, 55]], "example": [35, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The orange is Sarah's. The soda is Kenneth's. The football is Elizabeth's. >. The girls do not own soda\n < The basketball is Patricia's. The lemon is Paul's. The sheep is Kevin's. >. The boys do not own basketball\n", "ranges": [{"END": [30, 31], "A'": [31, 33], "V'": [10, 12], "Q": [26, 28], "K'": [13, 14], "R": [29, 30], "K": [[5, 20], [6, 21]], "V": [[3, 18], [4, 19]], "example": [1, 33]}, {"END": [65, 66], "A'": [66, 67], "V'": [36, 37], "Q": [61, 63], "K'": [38, 41], "R": [64, 65], "K": [[48, 55], [49, 56]], "V": [[45, 53], [47, 54]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The gorilla is Richard's. The fox is Elizabeth's. The blueberries is Barbara's. >. The girls do not own gorilla\n < The mouse is Michelle's. The horse is Daniel's. The sweater is Margaret's. >. The girls do not own horse\n", "ranges": [{"END": [34, 35], "A'": [35, 38], "V'": [3, 6], "Q": [30, 32], "K'": [7, 8], "R": [33, 34], "K": [[15, 24], [16, 25]], "V": [[12, 20], [14, 23]], "example": [1, 38]}, {"END": [69, 70], "A'": [70, 71], "V'": [49, 50], "Q": [65, 67], "K'": [51, 52], "R": [68, 69], "K": [[43, 59], [45, 60]], "V": [[41, 56], [42, 58]], "example": [39, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The beer is Betty's. The basketball is Joseph's. The jersey is Donna's. >. The girls do not own basketball\n < The grenade is Donna's. The shoes is James's. The jersey is Sharon's. >. The girls do not own shoes\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [11, 12], "Q": [29, 31], "K'": [13, 14], "R": [32, 33], "K": [[6, 22], [7, 24]], "V": [[3, 18], [5, 21]], "example": [1, 35]}, {"END": [71, 72], "A'": [72, 74], "V'": [48, 50], "Q": [67, 69], "K'": [51, 52], "R": [70, 71], "K": [[42, 60], [44, 62]], "V": [[38, 56], [41, 59]], "example": [36, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The sheep is Michael's. The mango is Robert's. The vodka is Kimberly's. >. The boys do not own vodka\n < The jeep is Mark's. The apple is Jeff's. The costume is Deborah's. >. The boys do not own costume\n", "ranges": [{"END": [34, 35], "A'": [35, 38], "V'": [18, 21], "Q": [30, 32], "K'": [22, 25], "R": [33, 34], "K": [[5, 13], [6, 14]], "V": [[3, 10], [4, 12]], "example": [1, 38]}, {"END": [71, 72], "A'": [72, 74], "V'": [56, 58], "Q": [67, 69], "K'": [59, 62], "R": [70, 71], "K": [[44, 51], [45, 52]], "V": [[41, 49], [43, 50]], "example": [39, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The lemon is Elizabeth's. The wolf is Thomas's. The goat is Susan's. >. The girls do not own wolf\n < The goat is Mary's. The beer is Christopher's. The cat is Donald's. >. The boys do not own goat\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [11, 13], "Q": [28, 30], "K'": [14, 15], "R": [31, 32], "K": [[6, 22], [7, 23]], "V": [[3, 19], [5, 21]], "example": [1, 35]}, {"END": [66, 67], "A'": [67, 69], "V'": [38, 40], "Q": [62, 64], "K'": [41, 42], "R": [65, 66], "K": [[49, 56], [50, 57]], "V": [[46, 54], [48, 55]], "example": [36, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The bread is Sharon's. The uniform is Michael's. The monkey is Edward's. >. The boys do not own bread\n < The burger is Brian's. The rabbit is Jennifer's. The blackberries is Dorothy's. >. The girls do not own burger\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [3, 4], "Q": [27, 29], "K'": [5, 7], "R": [30, 31], "K": [[13, 21], [14, 22]], "V": [[11, 18], [12, 20]], "example": [1, 33]}, {"END": [68, 69], "A'": [69, 71], "V'": [36, 38], "Q": [64, 66], "K'": [39, 40], "R": [67, 68], "K": [[47, 57], [49, 59]], "V": [[44, 53], [46, 56]], "example": [34, 71]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Brian's. The jeep is Kenneth's. The fox is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own basketball? Answer: No\n Premise: < The spaghetti is Jason's. The plum is Joseph's. The guitar is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own guitar? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [21, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[8, 16], [9, 17]], "V": [[6, 13], [7, 15]], "example": [1, 56]}, {"END": [111, 112], "A'": [108, 109], "V'": [79, 80], "Q": [103, 105], "K'": [81, 82], "R": [106, 107], "K": [[66, 74], [67, 75]], "V": [[62, 71], [65, 73]], "example": [57, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Brian's. The jeep is Kenneth's. The fox is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own basketball? Answer: No\n Premise: < The spaghetti is Jason's. The plum is Joseph's. The guitar is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own plum? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [21, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[8, 16], [9, 17]], "V": [[6, 13], [7, 15]], "example": [1, 56]}, {"END": [112, 113], "A'": [108, 110], "V'": [79, 80], "Q": [103, 105], "K'": [81, 82], "R": [106, 107], "K": [[66, 74], [67, 75]], "V": [[62, 71], [65, 73]], "example": [57, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Karen's. The car is George's. The deer is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own deer? Answer: No\n Premise: < The cat is Helen's. The rabbit is Christopher's. The cocktail is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own cat? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [6, 8], "Q": [47, 49], "K'": [9, 11], "R": [50, 51], "K": [[17, 25], [18, 26]], "V": [[15, 22], [16, 24]], "example": [1, 58]}, {"END": [113, 114], "A'": [110, 111], "V'": [64, 65], "Q": [105, 107], "K'": [66, 67], "R": [108, 109], "K": [[74, 83], [75, 84]], "V": [[71, 79], [73, 82]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Karen's. The car is George's. The deer is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own deer? Answer: No\n Premise: < The cat is Helen's. The rabbit is Christopher's. The cocktail is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own rabbit? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [6, 8], "Q": [47, 49], "K'": [9, 11], "R": [50, 51], "K": [[17, 25], [18, 26]], "V": [[15, 22], [16, 24]], "example": [1, 58]}, {"END": [114, 115], "A'": [110, 112], "V'": [64, 65], "Q": [105, 107], "K'": [66, 67], "R": [108, 109], "K": [[74, 83], [75, 84]], "V": [[71, 79], [73, 82]], "example": [59, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is William's. The jersey is John's. The handgun is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own durian? Answer: No\n Premise: < The underwear is Lisa's. The peach is Paul's. The burger is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own peach? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [23, 25], "Q": [50, 52], "K'": [26, 29], "R": [53, 54], "K": [[9, 18], [10, 19]], "V": [[6, 14], [8, 17]], "example": [1, 61]}, {"END": [119, 120], "A'": [115, 117], "V'": [76, 78], "Q": [110, 112], "K'": [79, 80], "R": [113, 114], "K": [[71, 87], [72, 89]], "V": [[67, 84], [70, 86]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is William's. The jersey is John's. The handgun is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own durian? Answer: No\n Premise: < The underwear is Lisa's. The peach is Paul's. The burger is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own underwear? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [23, 25], "Q": [50, 52], "K'": [26, 29], "R": [53, 54], "K": [[9, 18], [10, 19]], "V": [[6, 14], [8, 17]], "example": [1, 61]}, {"END": [120, 121], "A'": [115, 118], "V'": [76, 78], "Q": [110, 112], "K'": [79, 80], "R": [113, 114], "K": [[71, 87], [72, 89]], "V": [[67, 84], [70, 86]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Nancy's. The horse is Charles's. The sweater is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own horse? Answer: Yes\n Premise: < The bee is Margaret's. The baseball is Sarah's. The basketball is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own basketball? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [13, 14], "Q": [46, 48], "K'": [15, 16], "R": [49, 50], "K": [[8, 23], [9, 25]], "V": [[6, 20], [7, 22]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [77, 78], "Q": [101, 103], "K'": [79, 80], "R": [104, 105], "K": [[65, 72], [66, 73]], "V": [[62, 70], [64, 71]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Nancy's. The horse is Charles's. The sweater is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own horse? Answer: Yes\n Premise: < The bee is Margaret's. The baseball is Sarah's. The basketball is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own baseball? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [13, 14], "Q": [46, 48], "K'": [15, 16], "R": [49, 50], "K": [[8, 23], [9, 25]], "V": [[6, 20], [7, 22]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [77, 78], "Q": [101, 103], "K'": [79, 80], "R": [104, 105], "K": [[65, 72], [66, 73]], "V": [[62, 70], [64, 71]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Joseph's. The squirrel is Deborah's. The soda is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own soda? Answer: No\n Premise: < The revolver is Anthony's. The cat is Charles's. The mango is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mango? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [6, 8], "Q": [52, 54], "K'": [9, 10], "R": [55, 56], "K": [[18, 28], [21, 31]], "V": [[14, 25], [17, 27]], "example": [1, 63]}, {"END": [119, 120], "A'": [115, 117], "V'": [84, 86], "Q": [110, 112], "K'": [87, 89], "R": [113, 114], "K": [[72, 79], [73, 80]], "V": [[69, 77], [71, 78]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Joseph's. The squirrel is Deborah's. The soda is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own soda? Answer: No\n Premise: < The revolver is Anthony's. The cat is Charles's. The mango is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own revolver? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [6, 8], "Q": [52, 54], "K'": [9, 10], "R": [55, 56], "K": [[18, 28], [21, 31]], "V": [[14, 25], [17, 27]], "example": [1, 63]}, {"END": [119, 120], "A'": [115, 117], "V'": [84, 86], "Q": [110, 112], "K'": [87, 89], "R": [113, 114], "K": [[72, 79], [73, 80]], "V": [[69, 77], [71, 78]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Paul's. The mosquito is Helen's. The wolf is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mosquito? Answer: Yes\n Premise: < The goat is Mary's. The beer is Christopher's. The cat is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own goat? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [15, 18], "Q": [49, 51], "K'": [19, 20], "R": [52, 53], "K": [[10, 27], [11, 28]], "V": [[6, 24], [9, 26]], "example": [1, 61]}, {"END": [116, 117], "A'": [112, 114], "V'": [67, 69], "Q": [107, 109], "K'": [70, 71], "R": [110, 111], "K": [[78, 85], [79, 86]], "V": [[75, 83], [77, 84]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Paul's. The mosquito is Helen's. The wolf is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own mosquito? Answer: Yes\n Premise: < The goat is Mary's. The beer is Christopher's. The cat is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own beer? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [54, 57], "V'": [15, 18], "Q": [49, 51], "K'": [19, 20], "R": [52, 53], "K": [[10, 27], [11, 28]], "V": [[6, 24], [9, 26]], "example": [1, 61]}, {"END": [116, 117], "A'": [112, 114], "V'": [67, 69], "Q": [107, 109], "K'": [70, 71], "R": [110, 111], "K": [[78, 85], [79, 86]], "V": [[75, 83], [77, 84]], "example": [62, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Steven's. The costume is Barbara's. The pizza is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own costume? Answer: Yes\n Premise: < The gun is Robert's. The car is Brian's. The grapes is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own grapes? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 16], "Q": [47, 49], "K'": [17, 18], "R": [50, 51], "K": [[9, 25], [10, 26]], "V": [[6, 22], [8, 24]], "example": [1, 58]}, {"END": [115, 116], "A'": [110, 113], "V'": [78, 81], "Q": [105, 107], "K'": [82, 84], "R": [108, 109], "K": [[66, 73], [67, 74]], "V": [[64, 71], [65, 72]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Steven's. The costume is Barbara's. The pizza is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own costume? Answer: Yes\n Premise: < The gun is Robert's. The car is Brian's. The grapes is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own car? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [14, 16], "Q": [47, 49], "K'": [17, 18], "R": [50, 51], "K": [[9, 25], [10, 26]], "V": [[6, 22], [8, 24]], "example": [1, 58]}, {"END": [113, 114], "A'": [110, 111], "V'": [78, 81], "Q": [105, 107], "K'": [82, 84], "R": [108, 109], "K": [[66, 73], [67, 74]], "V": [[64, 71], [65, 72]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Mark's. The pistol is James's. The apple is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own apple? Answer: Yes\n Premise: < The squirrel is Kenneth's. The grapes is Kevin's. The piano is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own piano? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [22, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 17], [10, 18]], "V": [[6, 14], [8, 16]], "example": [1, 56]}, {"END": [113, 114], "A'": [110, 111], "V'": [80, 81], "Q": [105, 107], "K'": [82, 84], "R": [108, 109], "K": [[66, 75], [67, 76]], "V": [[62, 71], [65, 74]], "example": [57, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The revolver is Mark's. The pistol is James's. The apple is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own apple? Answer: Yes\n Premise: < The squirrel is Kenneth's. The grapes is Kevin's. The piano is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own grapes? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [22, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 17], [10, 18]], "V": [[6, 14], [8, 16]], "example": [1, 56]}, {"END": [115, 116], "A'": [110, 113], "V'": [80, 81], "Q": [105, 107], "K'": [82, 84], "R": [108, 109], "K": [[66, 75], [67, 76]], "V": [[62, 71], [65, 74]], "example": [57, 117]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra has lion. Dorothy has papaya. Brian has sweater. >. So who owns sweater? the boy\n < Edward has cannon. Kevin has mango. Nancy has pig. >. So who owns pig? the girl\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [14, 15], "Q": [25, 27], "K": [16, 18], "R": null, "K'": [[5, 11], [7, 13]], "V'": [[2, 8], [4, 10]], "example": [1, 30]}, {"END": [56, 57], "A": [57, 58], "V": [42, 43], "Q": [53, 55], "K": [44, 46], "R": null, "K'": [[34, 39], [36, 41]], "V'": [[32, 37], [33, 38]], "example": [31, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Charles has squirrel. Susan has wine. Kimberly has rabbit. >. So who owns squirrel? the boy\n < Lisa has juice. Jennifer has cat. Donald has bee. >. So who owns bee? the boy\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [2, 3], "Q": [25, 28], "K": [4, 7], "R": null, "K'": [[10, 16], [11, 18]], "V'": [[8, 12], [9, 15]], "example": [1, 31]}, {"END": [57, 58], "A": [58, 59], "V": [43, 44], "Q": [54, 56], "K": [45, 47], "R": null, "K'": [[35, 41], [37, 42]], "V'": [[33, 38], [34, 40]], "example": [32, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Thomas has jersey. Maria has papaya. Kenneth has soda. >. So who owns papaya? the girl\n < Jennifer has cocktail. Linda has papaya. Daniel has mouse. >. So who owns mouse? the boy\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [8, 9], "Q": [24, 26], "K": [10, 12], "R": null, "K'": [[4, 15], [7, 17]], "V'": [[2, 13], [3, 14]], "example": [1, 29]}, {"END": [56, 57], "A": [57, 58], "V": [44, 45], "Q": [54, 55], "K": [46, 47], "R": null, "K'": [[34, 41], [37, 43]], "V'": [[31, 38], [33, 40]], "example": [30, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kenneth has lime. Michelle has costume. Nancy has grenade. >. So who owns lime? the boy\n < Michelle has fox. George has vodka. Elizabeth has mosquito. >. So who owns vodka? the boy\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [2, 3], "Q": [25, 27], "K": [4, 6], "R": null, "K'": [[10, 15], [12, 18]], "V'": [[7, 13], [9, 14]], "example": [1, 30]}, {"END": [60, 61], "A": [61, 62], "V": [38, 39], "Q": [56, 59], "K": [40, 43], "R": null, "K'": [[35, 46], [37, 49]], "V'": [[32, 44], [34, 45]], "example": [31, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Robert has blueberries. Deborah has jeans. William has beetle. >. So who owns jeans? the girl\n < Jason has cannon. Elizabeth has gun. Joseph has strawberries. >. So who owns gun? the girl\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [8, 11], "Q": [27, 29], "K": [12, 14], "R": null, "K'": [[4, 17], [7, 20]], "V'": [[2, 15], [3, 16]], "example": [1, 32]}, {"END": [58, 59], "A": [59, 60], "V": [39, 40], "Q": [56, 57], "K": [41, 42], "R": null, "K'": [[36, 45], [38, 49]], "V'": [[34, 43], [35, 44]], "example": [33, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Nancy has duck. David has revolver. Daniel has lion. >. So who owns duck? the girl\n < Margaret has goat. Jason has fox. Steven has uniform. >. So who owns goat? the girl\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [2, 3], "Q": [23, 25], "K": [4, 6], "R": null, "K'": [[9, 14], [11, 16]], "V'": [[7, 12], [8, 13]], "example": [1, 28]}, {"END": [53, 54], "A": [54, 55], "V": [30, 31], "Q": [50, 52], "K": [32, 34], "R": null, "K'": [[37, 42], [39, 43]], "V'": [[35, 40], [36, 41]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Lisa has steak. Daniel has underwear. Linda has mosquito. >. So who owns underwear? the boy\n < David has duck. Linda has guitar. Lisa has sweater. >. So who owns duck? the boy\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [7, 8], "Q": [26, 29], "K": [9, 12], "R": null, "K'": [[4, 16], [6, 19]], "V'": [[2, 13], [3, 15]], "example": [1, 32]}, {"END": [58, 59], "A": [59, 60], "V": [34, 35], "Q": [55, 57], "K": [36, 38], "R": null, "K'": [[42, 46], [43, 48]], "V'": [[39, 44], [41, 45]], "example": [33, 60]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< George has deer. Carol has rifle. Dorothy has blueberries. >. So who owns deer? the boy\n < Betty has bread. Richard has horse. Maria has goat. >. So who owns horse? the boy\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [2, 3], "Q": [25, 27], "K": [4, 6], "R": null, "K'": [[9, 15], [11, 18]], "V'": [[7, 12], [8, 14]], "example": [1, 30]}, {"END": [53, 54], "A": [54, 55], "V": [36, 37], "Q": [51, 52], "K": [38, 39], "R": null, "K'": [[34, 42], [35, 44]], "V'": [[32, 40], [33, 41]], "example": [31, 55]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has lion. Dorothy has papaya. Brian has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is the girl? Answer: No\n Premise: < Edward has pants. Kevin has cannon. Nancy has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [17, 18], "Q": [45, 47], "K": [19, 21], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 54]}, {"END": [104, 105], "A": [100, 102], "V": [69, 70], "Q": [97, 99], "K": [71, 73], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[59, 64], [60, 65]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has lion. Dorothy has papaya. Brian has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is the girl? Answer: No\n Premise: < Edward has pants. Kevin has cannon. Nancy has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [17, 18], "Q": [45, 47], "K": [19, 21], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 54]}, {"END": [104, 105], "A": [100, 102], "V": [69, 70], "Q": [97, 99], "K": [71, 73], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[59, 64], [60, 65]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has vodka. Sarah has rabbit. Brian has pig. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is the girl? Answer: No\n Premise: < Lisa has motorcycle. George has goat. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [16, 17], "Q": [44, 46], "K": [18, 20], "R": null, "K'": [[7, 13], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 53]}, {"END": [102, 103], "A": [98, 100], "V": [58, 59], "Q": [95, 97], "K": [60, 62], "R": null, "K'": [[65, 70], [67, 71]], "V'": [[63, 68], [64, 69]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has vodka. Sarah has rabbit. Brian has pig. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is the girl? Answer: No\n Premise: < Lisa has motorcycle. George has goat. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [16, 17], "Q": [44, 46], "K": [18, 20], "R": null, "K'": [[7, 13], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 53]}, {"END": [102, 103], "A": [98, 100], "V": [58, 59], "Q": [95, 97], "K": [60, 62], "R": null, "K'": [[65, 70], [67, 71]], "V'": [[63, 68], [64, 69]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has jacket. Donna has sweater. Kevin has piano. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns piano is the girl? Answer: No\n Premise: < Karen has goat. William has lime. Barbara has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is the boy? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [17, 18], "Q": [44, 45], "K": [19, 20], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 52]}, {"END": [103, 104], "A": [99, 101], "V": [63, 64], "Q": [96, 98], "K": [65, 67], "R": null, "K'": [[60, 70], [62, 72]], "V'": [[57, 68], [59, 69]], "example": [53, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has jacket. Donna has sweater. Kevin has piano. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns piano is the girl? Answer: No\n Premise: < Karen has goat. William has lime. Barbara has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is the girl? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [17, 18], "Q": [44, 45], "K": [19, 20], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 52]}, {"END": [103, 104], "A": [99, 101], "V": [63, 64], "Q": [96, 98], "K": [65, 67], "R": null, "K'": [[60, 70], [62, 72]], "V'": [[57, 68], [59, 69]], "example": [53, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has plum. George has burger. Elizabeth has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is the boy? Answer: Yes\n Premise: < Robert has blueberries. Deborah has juice. William has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [11, 12], "Q": [44, 46], "K": [13, 15], "R": null, "K'": [[8, 18], [10, 20]], "V'": [[5, 16], [7, 17]], "example": [1, 53]}, {"END": [106, 107], "A": [102, 104], "V": [64, 67], "Q": [99, 101], "K": [68, 70], "R": null, "K'": [[60, 73], [63, 75]], "V'": [[58, 71], [59, 72]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has plum. George has burger. Elizabeth has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is the boy? Answer: Yes\n Premise: < Robert has blueberries. Deborah has juice. William has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [11, 12], "Q": [44, 46], "K": [13, 15], "R": null, "K'": [[8, 18], [10, 20]], "V'": [[5, 16], [7, 17]], "example": [1, 53]}, {"END": [106, 107], "A": [102, 104], "V": [64, 67], "Q": [99, 101], "K": [68, 70], "R": null, "K'": [[60, 73], [63, 75]], "V'": [[58, 71], [59, 72]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has apricot. Deborah has banana. John has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is the boy? Answer: No\n Premise: < Brian has vodka. Barbara has mango. Lisa has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is the boy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 14], "Q": [46, 48], "K": [15, 17], "R": null, "K'": [[7, 20], [10, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 55]}, {"END": [106, 107], "A": [102, 104], "V": [60, 61], "Q": [98, 101], "K": [62, 65], "R": null, "K'": [[68, 73], [70, 74]], "V'": [[66, 71], [67, 72]], "example": [56, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has apricot. Deborah has banana. John has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is the boy? Answer: No\n Premise: < Brian has vodka. Barbara has mango. Lisa has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is the girl? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 14], "Q": [46, 48], "K": [15, 17], "R": null, "K'": [[7, 20], [10, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 55]}, {"END": [106, 107], "A": [102, 104], "V": [60, 61], "Q": [98, 101], "K": [62, 65], "R": null, "K'": [[68, 73], [70, 74]], "V'": [[66, 71], [67, 72]], "example": [56, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has apricot. Sandra has car. Christopher has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is the girl? Answer: Yes\n Premise: < David has duck. Linda has guitar. Lisa has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns duck is the boy? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [11, 13], "Q": [44, 45], "K": [14, 15], "R": null, "K'": [[7, 18], [10, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 52]}, {"END": [102, 103], "A": [98, 100], "V": [57, 58], "Q": [95, 97], "K": [59, 61], "R": null, "K'": [[65, 69], [66, 71]], "V'": [[62, 67], [64, 68]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has apricot. Sandra has car. Christopher has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is the girl? Answer: Yes\n Premise: < David has duck. Linda has guitar. Lisa has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns duck is the girl? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [11, 13], "Q": [44, 45], "K": [14, 15], "R": null, "K'": [[7, 18], [10, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 52]}, {"END": [102, 103], "A": [98, 100], "V": [57, 58], "Q": [95, 97], "K": [59, 61], "R": null, "K'": [[65, 69], [66, 71]], "V'": [[62, 67], [64, 68]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin has grapes. Steven has meat. Susan has blackberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is the girl? Answer: Yes\n Premise: < Kevin has car. Patricia has rabbit. Kenneth has cherries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns rabbit is the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [15, 16], "Q": [44, 47], "K": [17, 20], "R": null, "K'": [[7, 13], [10, 14]], "V'": [[5, 11], [6, 12]], "example": [1, 54]}, {"END": [105, 106], "A": [101, 103], "V": [63, 66], "Q": [98, 100], "K": [67, 69], "R": null, "K'": [[61, 72], [62, 74]], "V'": [[59, 70], [60, 71]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin has grapes. Steven has meat. Susan has blackberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is the girl? Answer: Yes\n Premise: < Kevin has car. Patricia has rabbit. Kenneth has cherries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns rabbit is the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [15, 16], "Q": [44, 47], "K": [17, 20], "R": null, "K'": [[7, 13], [10, 14]], "V'": [[5, 11], [6, 12]], "example": [1, 54]}, {"END": [105, 106], "A": [101, 103], "V": [63, 66], "Q": [98, 100], "K": [67, 69], "R": null, "K'": [[61, 72], [62, 74]], "V'": [[59, 70], [60, 71]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mary has pistol. Kenneth has burger. Paul has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pistol is the girl? Answer: Yes\n Premise: < Ruth has plum. David has grapes. Barbara has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns grapes is the boy? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [5, 6], "Q": [43, 45], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 19]], "V'": [[10, 15], [11, 16]], "example": [1, 52]}, {"END": [103, 104], "A": [99, 101], "V": [62, 63], "Q": [95, 98], "K": [64, 67], "R": null, "K'": [[59, 70], [61, 71]], "V'": [[57, 68], [58, 69]], "example": [53, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mary has pistol. Kenneth has burger. Paul has peach. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pistol is the girl? Answer: Yes\n Premise: < Ruth has plum. David has grapes. Barbara has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns grapes is the girl? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [5, 6], "Q": [43, 45], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 19]], "V'": [[10, 15], [11, 16]], "example": [1, 52]}, {"END": [103, 104], "A": [99, 101], "V": [62, 63], "Q": [95, 98], "K": [64, 67], "R": null, "K'": [[59, 70], [61, 71]], "V'": [[57, 68], [58, 69]], "example": [53, 105]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lion is Sandra's. The papaya is Dorothy's. The sweater is Brian's. >. So who owns sweater? the boy\n < The cannon is Edward's. The mango is Kevin's. The pig is Nancy's. >. So who owns pig? the girl\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [24, 25], "Q": [34, 36], "K": [21, 23], "R": null, "K'": [[3, 12], [5, 14]], "V'": [[6, 15], [8, 17]], "example": [1, 39]}, {"END": [74, 75], "A": [75, 76], "V": [61, 62], "Q": [71, 73], "K": [58, 60], "R": null, "K'": [[42, 50], [44, 52]], "V'": [[45, 53], [46, 54]], "example": [40, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The squirrel is Charles's. The wine is Susan's. The rabbit is Kimberly's. >. So who owns squirrel? the boy\n < The juice is Lisa's. The cat is Jennifer's. The bee is Donald's. >. So who owns bee? the boy\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [7, 8], "Q": [34, 37], "K": [3, 6], "R": null, "K'": [[12, 19], [13, 21]], "V'": [[14, 22], [15, 25]], "example": [1, 40]}, {"END": [75, 76], "A": [76, 77], "V": [62, 63], "Q": [72, 74], "K": [59, 61], "R": null, "K'": [[43, 51], [45, 52]], "V'": [[46, 53], [47, 55]], "example": [41, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jersey is Thomas's. The papaya is Maria's. The soda is Kenneth's. >. So who owns papaya? the girl\n < The cocktail is Jennifer's. The papaya is Linda's. The mouse is Daniel's. >. So who owns mouse? the boy\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [15, 16], "Q": [33, 35], "K": [12, 14], "R": null, "K'": [[3, 20], [6, 22]], "V'": [[7, 23], [8, 24]], "example": [1, 38]}, {"END": [74, 75], "A": [75, 76], "V": [62, 63], "Q": [72, 73], "K": [60, 61], "R": null, "K'": [[41, 51], [44, 53]], "V'": [[45, 54], [47, 56]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lime is Kenneth's. The costume is Michelle's. The grenade is Nancy's. >. So who owns lime? the boy\n < The fox is Michelle's. The vodka is George's. The mosquito is Elizabeth's. >. So who owns vodka? the boy\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [6, 7], "Q": [34, 36], "K": [3, 5], "R": null, "K'": [[11, 20], [13, 23]], "V'": [[14, 24], [16, 25]], "example": [1, 39]}, {"END": [78, 79], "A": [79, 80], "V": [55, 56], "Q": [74, 77], "K": [51, 54], "R": null, "K'": [[42, 60], [44, 63]], "V'": [[45, 64], [47, 65]], "example": [40, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blueberries is Robert's. The jeans is Deborah's. The beetle is William's. >. So who owns jeans? the girl\n < The cannon is Jason's. The gun is Elizabeth's. The strawberries is Joseph's. >. So who owns gun? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [15, 18], "Q": [36, 38], "K": [12, 14], "R": null, "K'": [[3, 22], [6, 25]], "V'": [[7, 26], [8, 27]], "example": [1, 41]}, {"END": [76, 77], "A": [77, 78], "V": [54, 55], "Q": [74, 75], "K": [52, 53], "R": null, "K'": [[44, 59], [46, 63]], "V'": [[47, 64], [48, 65]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The duck is Nancy's. The revolver is David's. The lion is Daniel's. >. So who owns duck? the girl\n < The goat is Margaret's. The fox is Jason's. The uniform is Steven's. >. So who owns goat? the girl\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [6, 7], "Q": [32, 34], "K": [3, 5], "R": null, "K'": [[11, 19], [13, 21]], "V'": [[14, 22], [15, 23]], "example": [1, 37]}, {"END": [71, 72], "A": [72, 73], "V": [43, 44], "Q": [68, 70], "K": [40, 42], "R": null, "K'": [[48, 56], [50, 57]], "V'": [[51, 58], [52, 59]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The steak is Lisa's. The underwear is Daniel's. The mosquito is Linda's. >. So who owns underwear? the boy\n < The duck is David's. The guitar is Linda's. The sweater is Lisa's. >. So who owns duck? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [15, 16], "Q": [35, 38], "K": [11, 14], "R": null, "K'": [[3, 20], [5, 23]], "V'": [[6, 24], [7, 26]], "example": [1, 41]}, {"END": [76, 77], "A": [77, 78], "V": [47, 48], "Q": [73, 75], "K": [44, 46], "R": null, "K'": [[52, 60], [53, 62]], "V'": [[54, 63], [56, 64]], "example": [42, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The deer is George's. The rifle is Carol's. The blueberries is Dorothy's. >. So who owns deer? the boy\n < The bread is Betty's. The horse is Richard's. The goat is Maria's. >. So who owns horse? the boy\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [6, 7], "Q": [34, 36], "K": [3, 5], "R": null, "K'": [[11, 19], [13, 22]], "V'": [[14, 23], [15, 25]], "example": [1, 39]}, {"END": [71, 72], "A": [72, 73], "V": [51, 52], "Q": [69, 70], "K": [49, 50], "R": null, "K'": [[42, 56], [43, 58]], "V'": [[44, 59], [45, 60]], "example": [40, 73]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Sandra's. The papaya is Dorothy's. The sweater is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is the girl? Answer: No\n Premise: < The pants is Edward's. The cannon is Kevin's. The peach is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [27, 28], "Q": [54, 56], "K": [24, 26], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [88, 89], "Q": [115, 117], "K": [85, 87], "R": null, "K'": [[69, 77], [71, 79]], "V'": [[72, 80], [73, 81]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Sandra's. The papaya is Dorothy's. The sweater is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is the girl? Answer: No\n Premise: < The pants is Edward's. The cannon is Kevin's. The peach is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns peach is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [27, 28], "Q": [54, 56], "K": [24, 26], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [88, 89], "Q": [115, 117], "K": [85, 87], "R": null, "K'": [[69, 77], [71, 79]], "V'": [[72, 80], [73, 81]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vodka is Betty's. The rabbit is Sarah's. The pig is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is the girl? Answer: No\n Premise: < The motorcycle is Lisa's. The goat is George's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [26, 27], "Q": [53, 55], "K": [23, 25], "R": null, "K'": [[6, 15], [9, 17]], "V'": [[10, 18], [11, 19]], "example": [1, 62]}, {"END": [120, 121], "A": [116, 118], "V": [71, 72], "Q": [113, 115], "K": [68, 70], "R": null, "K'": [[76, 84], [78, 85]], "V'": [[79, 86], [80, 87]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vodka is Betty's. The rabbit is Sarah's. The pig is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pig is the girl? Answer: No\n Premise: < The motorcycle is Lisa's. The goat is George's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns motorcycle is the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [26, 27], "Q": [53, 55], "K": [23, 25], "R": null, "K'": [[6, 15], [9, 17]], "V'": [[10, 18], [11, 19]], "example": [1, 62]}, {"END": [120, 121], "A": [116, 118], "V": [71, 72], "Q": [113, 115], "K": [68, 70], "R": null, "K'": [[76, 84], [78, 85]], "V'": [[79, 86], [80, 87]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Karen's. The sweater is Donna's. The piano is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns piano is the girl? Answer: No\n Premise: < The goat is Karen's. The lime is William's. The durian is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [26, 27], "Q": [53, 54], "K": [24, 25], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 61]}, {"END": [121, 122], "A": [117, 119], "V": [79, 80], "Q": [114, 116], "K": [76, 78], "R": null, "K'": [[67, 84], [69, 86]], "V'": [[70, 87], [72, 88]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is Karen's. The sweater is Donna's. The piano is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns piano is the girl? Answer: No\n Premise: < The goat is Karen's. The lime is William's. The durian is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [26, 27], "Q": [53, 54], "K": [24, 25], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 61]}, {"END": [121, 122], "A": [117, 119], "V": [79, 80], "Q": [114, 116], "K": [76, 78], "R": null, "K'": [[67, 84], [69, 86]], "V'": [[70, 87], [72, 88]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Michelle's. The burger is George's. The fox is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is the boy? Answer: Yes\n Premise: < The blueberries is Robert's. The juice is Deborah's. The bee is William's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [18, 19], "Q": [53, 55], "K": [15, 17], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [11, 27]], "example": [1, 62]}, {"END": [124, 125], "A": [120, 122], "V": [80, 83], "Q": [117, 119], "K": [77, 79], "R": null, "K'": [[68, 87], [71, 89]], "V'": [[72, 90], [73, 91]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Michelle's. The burger is George's. The fox is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns burger is the boy? Answer: Yes\n Premise: < The blueberries is Robert's. The juice is Deborah's. The bee is William's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [18, 19], "Q": [53, 55], "K": [15, 17], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [11, 27]], "example": [1, 62]}, {"END": [124, 125], "A": [120, 122], "V": [80, 83], "Q": [117, 119], "K": [77, 79], "R": null, "K'": [[68, 87], [71, 89]], "V'": [[72, 90], [73, 91]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Mark's. The banana is Deborah's. The sweater is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is the boy? Answer: No\n Premise: < The vodka is Brian's. The mango is Barbara's. The sheep is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is the boy? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [18, 21], "Q": [55, 57], "K": [15, 17], "R": null, "K'": [[6, 25], [9, 27]], "V'": [[10, 28], [11, 29]], "example": [1, 64]}, {"END": [124, 125], "A": [120, 122], "V": [74, 75], "Q": [116, 119], "K": [70, 73], "R": null, "K'": [[79, 87], [81, 88]], "V'": [[82, 89], [83, 90]], "example": [65, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Mark's. The banana is Deborah's. The sweater is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns banana is the boy? Answer: No\n Premise: < The vodka is Brian's. The mango is Barbara's. The sheep is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns vodka is the girl? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [18, 21], "Q": [55, 57], "K": [15, 17], "R": null, "K'": [[6, 25], [9, 27]], "V'": [[10, 28], [11, 29]], "example": [1, 64]}, {"END": [124, 125], "A": [120, 122], "V": [74, 75], "Q": [116, 119], "K": [70, 73], "R": null, "K'": [[79, 87], [81, 88]], "V'": [[82, 89], [83, 90]], "example": [65, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Daniel's. The car is Sandra's. The burger is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is the girl? Answer: Yes\n Premise: < The duck is David's. The guitar is Linda's. The sweater is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns duck is the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [17, 19], "Q": [53, 54], "K": [15, 16], "R": null, "K'": [[6, 23], [9, 25]], "V'": [[10, 26], [11, 27]], "example": [1, 61]}, {"END": [120, 121], "A": [116, 118], "V": [70, 71], "Q": [113, 115], "K": [67, 69], "R": null, "K'": [[75, 83], [76, 85]], "V'": [[77, 86], [79, 87]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Daniel's. The car is Sandra's. The burger is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns car is the girl? Answer: Yes\n Premise: < The duck is David's. The guitar is Linda's. The sweater is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns duck is the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [17, 19], "Q": [53, 54], "K": [15, 16], "R": null, "K'": [[6, 23], [9, 25]], "V'": [[10, 26], [11, 27]], "example": [1, 61]}, {"END": [120, 121], "A": [116, 118], "V": [70, 71], "Q": [113, 115], "K": [67, 69], "R": null, "K'": [[75, 83], [76, 85]], "V'": [[77, 86], [79, 87]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The grapes is Kevin's. The meat is Steven's. The blackberries is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is the girl? Answer: Yes\n Premise: < The car is Kevin's. The rabbit is Patricia's. The cherries is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns rabbit is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [26, 27], "Q": [53, 56], "K": [22, 25], "R": null, "K'": [[6, 15], [9, 16]], "V'": [[10, 17], [11, 18]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [79, 82], "Q": [116, 118], "K": [76, 78], "R": null, "K'": [[69, 86], [70, 88]], "V'": [[71, 89], [72, 90]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The grapes is Kevin's. The meat is Steven's. The blackberries is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is the girl? Answer: Yes\n Premise: < The car is Kevin's. The rabbit is Patricia's. The cherries is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns rabbit is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [26, 27], "Q": [53, 56], "K": [22, 25], "R": null, "K'": [[6, 15], [9, 16]], "V'": [[10, 17], [11, 18]], "example": [1, 63]}, {"END": [123, 124], "A": [119, 121], "V": [79, 82], "Q": [116, 118], "K": [76, 78], "R": null, "K'": [[69, 86], [70, 88]], "V'": [[71, 89], [72, 90]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pistol is Mary's. The burger is Kenneth's. The peach is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pistol is the girl? Answer: Yes\n Premise: < The plum is Ruth's. The grapes is David's. The sheep is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns grapes is the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [9, 10], "Q": [52, 54], "K": [6, 8], "R": null, "K'": [[14, 22], [16, 24]], "V'": [[17, 25], [18, 26]], "example": [1, 61]}, {"END": [121, 122], "A": [117, 119], "V": [79, 80], "Q": [113, 116], "K": [75, 78], "R": null, "K'": [[67, 84], [69, 85]], "V'": [[70, 86], [71, 87]], "example": [62, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pistol is Mary's. The burger is Kenneth's. The peach is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns pistol is the girl? Answer: Yes\n Premise: < The plum is Ruth's. The grapes is David's. The sheep is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns grapes is the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [9, 10], "Q": [52, 54], "K": [6, 8], "R": null, "K'": [[14, 22], [16, 24]], "V'": [[17, 25], [18, 26]], "example": [1, 61]}, {"END": [121, 122], "A": [117, 119], "V": [79, 80], "Q": [113, 116], "K": [75, 78], "R": null, "K'": [[67, 84], [69, 85]], "V'": [[70, 86], [71, 87]], "example": [62, 123]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel has elephant. Michelle has sweater. Sharon has sweater. >. The one who owns sweater is not the boy\n < Mary has cow. Kimberly has cow. Joseph has grapes. >. The one who owns cow is not the boy\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [2, 3], "Q": [27, 29], "K'": [4, 7], "R": [30, 31], "K": [[11, 17], [13, 19]], "V": [[8, 14], [10, 16]], "example": [1, 33]}, {"END": [61, 62], "A'": [62, 63], "V'": [45, 46], "Q": [58, 59], "K'": [47, 50], "R": [60, 61], "K": [[37, 43], [38, 44]], "V": [[35, 39], [36, 42]], "example": [34, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Richard has duck. Ronald has duck. Donna has tea. >. The one who owns duck is not the girl\n < Kevin has monkey. Brian has monkey. Jennifer has mosquito. >. The one who owns monkey is not the girl\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [13, 15], "Q": [25, 27], "K'": [16, 17], "R": [28, 29], "K": [[4, 10], [6, 12]], "V": [[2, 7], [3, 9]], "example": [1, 31]}, {"END": [61, 62], "A'": [62, 63], "V'": [43, 45], "Q": [57, 59], "K'": [46, 49], "R": [60, 61], "K": [[35, 40], [37, 42]], "V": [[33, 38], [34, 39]], "example": [32, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Dorothy has vodka. Nancy has vodka. David has jersey. >. The one who owns vodka is not the boy\n < Charles has juice. Patricia has papaya. Richard has juice. >. The one who owns juice is not the girl\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [15, 16], "Q": [28, 31], "K'": [17, 20], "R": [32, 33], "K": [[5, 11], [8, 14]], "V": [[2, 9], [4, 10]], "example": [1, 35]}, {"END": [65, 66], "A'": [66, 67], "V'": [42, 45], "Q": [61, 63], "K'": [46, 48], "R": [64, 65], "K": [[39, 51], [41, 53]], "V": [[37, 49], [38, 50]], "example": [36, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Donald has blackberries. Mark has blackberries. Elizabeth has mouse. >. The one who owns blackberries is not the girl\n < Richard has rifle. Ruth has cow. Helen has cow. >. The one who owns cow is not the boy\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [14, 15], "Q": [25, 28], "K'": [16, 17], "R": [29, 30], "K": [[4, 10], [7, 13]], "V": [[2, 8], [3, 9]], "example": [1, 32]}, {"END": [57, 58], "A'": [58, 59], "V'": [34, 35], "Q": [54, 55], "K'": [36, 38], "R": [56, 57], "K": [[41, 45], [42, 46]], "V": [[39, 43], [40, 44]], "example": [33, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Donna has gun. Brian has gorilla. Betty has gun. >. The one who owns gun is not the boy\n < Michelle has fox. George has football. Elizabeth has fox. >. The one who owns fox is not the boy\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [7, 8], "Q": [24, 25], "K'": [9, 12], "R": [26, 27], "K": [[5, 15], [6, 16]], "V": [[2, 13], [4, 14]], "example": [1, 29]}, {"END": [57, 58], "A'": [58, 59], "V'": [37, 38], "Q": [53, 55], "K'": [39, 40], "R": [56, 57], "K": [[34, 43], [36, 45]], "V": [[31, 41], [33, 42]], "example": [30, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra has jeans. Sharon has jeans. Thomas has handgun. >. The one who owns jeans is not the boy\n < Jeff has cake. Margaret has mouse. John has cake. >. The one who owns cake is not the girl\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [14, 15], "Q": [26, 28], "K'": [16, 18], "R": [29, 30], "K": [[5, 11], [7, 13]], "V": [[2, 8], [4, 10]], "example": [1, 32]}, {"END": [59, 60], "A'": [60, 61], "V'": [39, 40], "Q": [55, 57], "K'": [41, 42], "R": [58, 59], "K": [[36, 45], [38, 47]], "V": [[34, 43], [35, 44]], "example": [33, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< James has mouse. George has mouse. Barbara has violin. >. The one who owns mouse is not the girl\n < Jeff has cat. Betty has mango. Deborah has mango. >. The one who owns mango is not the boy\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [10, 11], "Q": [22, 23], "K'": [12, 14], "R": [24, 25], "K": [[4, 8], [5, 9]], "V": [[2, 6], [3, 7]], "example": [1, 27]}, {"END": [56, 57], "A'": [57, 58], "V'": [29, 30], "Q": [52, 54], "K'": [31, 32], "R": [55, 56], "K": [[35, 42], [37, 44]], "V": [[33, 38], [34, 41]], "example": [28, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark has basketball. Sharon has strawberries. Deborah has strawberries. >. The one who owns strawberries is not the boy\n < Lisa has steak. Daniel has shirt. Linda has steak. >. The one who owns steak is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [2, 3], "Q": [30, 34], "K'": [4, 5], "R": [35, 36], "K": [[9, 18], [13, 22]], "V": [[6, 14], [8, 17]], "example": [1, 38]}, {"END": [67, 68], "A'": [68, 69], "V'": [45, 46], "Q": [63, 65], "K'": [47, 49], "R": [66, 67], "K": [[42, 53], [44, 55]], "V": [[40, 50], [41, 52]], "example": [39, 69]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has elephant. Michelle has sweater. Sharon has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not the boy? Answer: Yes\n Premise: < Mark has blueberries. Helen has lion. Maria has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not the boy? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 6], "Q": [46, 48], "K'": [7, 10], "R": [49, 50], "K": [[14, 20], [16, 22]], "V": [[11, 17], [13, 19]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [61, 62], "Q": [100, 102], "K'": [63, 66], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[67, 72], [68, 73]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel has elephant. Michelle has sweater. Sharon has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not the boy? Answer: Yes\n Premise: < Mark has blueberries. Helen has lion. Maria has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not the girl? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 6], "Q": [46, 48], "K'": [7, 10], "R": [49, 50], "K": [[14, 20], [16, 22]], "V": [[11, 17], [13, 19]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [61, 62], "Q": [100, 102], "K'": [63, 66], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[67, 72], [68, 73]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has squirrel. Sandra has squirrel. Paul has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not the boy? Answer: Yes\n Premise: < Richard has juice. Ruth has cat. Donald has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [18, 19], "Q": [46, 49], "K'": [20, 22], "R": [50, 51], "K": [[7, 14], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 57]}, {"END": [107, 108], "A'": [103, 105], "V'": [67, 68], "Q": [99, 101], "K'": [69, 70], "R": [102, 103], "K": [[64, 73], [66, 75]], "V": [[62, 71], [63, 72]], "example": [58, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has squirrel. Sandra has squirrel. Paul has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not the boy? Answer: Yes\n Premise: < Richard has juice. Ruth has cat. Donald has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [18, 19], "Q": [46, 49], "K'": [20, 22], "R": [50, 51], "K": [[7, 14], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 57]}, {"END": [107, 108], "A'": [103, 105], "V'": [67, 68], "Q": [99, 101], "K'": [69, 70], "R": [102, 103], "K": [[64, 73], [66, 75]], "V": [[62, 71], [63, 72]], "example": [58, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Richard has gun. Susan has piano. Thomas has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not the boy? Answer: No\n Premise: < Deborah has mouse. Linda has mouse. Thomas has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the boy? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [9, 10], "Q": [40, 41], "K'": [11, 12], "R": [42, 43], "K": [[7, 15], [8, 16]], "V": [[5, 13], [6, 14]], "example": [1, 49]}, {"END": [100, 101], "A'": [96, 98], "V'": [65, 66], "Q": [93, 94], "K'": [67, 69], "R": [95, 96], "K": [[58, 63], [59, 64]], "V": [[54, 60], [57, 62]], "example": [50, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Richard has gun. Susan has piano. Thomas has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not the boy? Answer: No\n Premise: < Deborah has mouse. Linda has mouse. Thomas has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the girl? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [9, 10], "Q": [40, 41], "K'": [11, 12], "R": [42, 43], "K": [[7, 15], [8, 16]], "V": [[5, 13], [6, 14]], "example": [1, 49]}, {"END": [100, 101], "A'": [96, 98], "V'": [65, 66], "Q": [93, 94], "K'": [67, 69], "R": [95, 96], "K": [[58, 63], [59, 64]], "V": [[54, 60], [57, 62]], "example": [50, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald has lime. Kevin has lime. Elizabeth has soda. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not the girl? Answer: Yes\n Premise: < Barbara has shirt. Lisa has shirt. Joseph has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not the boy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [16, 17], "Q": [44, 46], "K'": [18, 20], "R": [47, 48], "K": [[8, 13], [10, 15]], "V": [[5, 11], [7, 12]], "example": [1, 54]}, {"END": [105, 106], "A'": [101, 103], "V'": [69, 70], "Q": [97, 99], "K'": [71, 73], "R": [100, 101], "K": [[61, 66], [63, 68]], "V": [[59, 64], [60, 65]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald has lime. Kevin has lime. Elizabeth has soda. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not the girl? Answer: Yes\n Premise: < Barbara has shirt. Lisa has shirt. Joseph has burger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not the girl? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [16, 17], "Q": [44, 46], "K'": [18, 20], "R": [47, 48], "K": [[8, 13], [10, 15]], "V": [[5, 11], [7, 12]], "example": [1, 54]}, {"END": [105, 106], "A'": [101, 103], "V'": [69, 70], "Q": [97, 99], "K'": [71, 73], "R": [100, 101], "K": [[61, 66], [63, 68]], "V": [[59, 64], [60, 65]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has beetle. Betty has beetle. Thomas has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not the boy? Answer: Yes\n Premise: < Elizabeth has mouse. Sandra has mouse. Joseph has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the boy? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [19, 20], "Q": [48, 51], "K'": [21, 24], "R": [52, 53], "K": [[9, 15], [12, 18]], "V": [[5, 13], [8, 14]], "example": [1, 59]}, {"END": [109, 110], "A'": [105, 107], "V'": [73, 74], "Q": [102, 103], "K'": [75, 78], "R": [104, 105], "K": [[66, 71], [67, 72]], "V": [[64, 68], [65, 70]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has beetle. Betty has beetle. Thomas has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not the boy? Answer: Yes\n Premise: < Elizabeth has mouse. Sandra has mouse. Joseph has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the girl? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [19, 20], "Q": [48, 51], "K'": [21, 24], "R": [52, 53], "K": [[9, 15], [12, 18]], "V": [[5, 13], [8, 14]], "example": [1, 59]}, {"END": [109, 110], "A'": [105, 107], "V'": [73, 74], "Q": [102, 103], "K'": [75, 78], "R": [104, 105], "K": [[66, 71], [67, 72]], "V": [[64, 68], [65, 70]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth has elephant. Lisa has elephant. Daniel has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not the girl? Answer: No\n Premise: < Margaret has shotgun. Jason has costume. Steven has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [17, 18], "Q": [46, 49], "K'": [19, 22], "R": [50, 51], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 57]}, {"END": [108, 109], "A'": [104, 106], "V'": [62, 63], "Q": [100, 102], "K'": [64, 66], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[67, 72], [68, 73]], "example": [58, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth has elephant. Lisa has elephant. Daniel has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not the girl? Answer: No\n Premise: < Margaret has shotgun. Jason has costume. Steven has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [17, 18], "Q": [46, 49], "K'": [19, 22], "R": [50, 51], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 57]}, {"END": [108, 109], "A'": [104, 106], "V'": [62, 63], "Q": [100, 102], "K'": [64, 66], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[67, 72], [68, 73]], "example": [58, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has blackberries. Nancy has blackberries. Edward has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: No\n Premise: < Kenneth has cherries. Dorothy has goat. Barbara has goat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns goat is not the boy? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [17, 18], "Q": [45, 48], "K'": [19, 21], "R": [49, 50], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [61, 62], "Q": [100, 102], "K'": [63, 65], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[66, 72], [68, 73]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has blackberries. Nancy has blackberries. Edward has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: No\n Premise: < Kenneth has cherries. Dorothy has goat. Barbara has goat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns goat is not the girl? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [17, 18], "Q": [45, 48], "K'": [19, 21], "R": [49, 50], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 56]}, {"END": [108, 109], "A'": [104, 106], "V'": [61, 62], "Q": [100, 102], "K'": [63, 65], "R": [103, 104], "K": [[69, 74], [71, 76]], "V": [[66, 72], [68, 73]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has cake. David has costume. Brian has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n Premise: < Steven has blackberries. John has blackberries. Michelle has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 6], "Q": [43, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [107, 108], "A'": [103, 105], "V'": [70, 72], "Q": [98, 101], "K'": [73, 74], "R": [102, 103], "K": [[60, 66], [63, 69]], "V": [[58, 64], [59, 65]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has cake. David has costume. Brian has costume. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n Premise: < Steven has blackberries. John has blackberries. Michelle has wine. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 6], "Q": [43, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 17], [14, 19]], "V": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [107, 108], "A'": [103, 105], "V'": [70, 72], "Q": [98, 101], "K'": [73, 74], "R": [102, 103], "K": [[60, 66], [63, 69]], "V": [[58, 64], [59, 65]], "example": [54, 109]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The elephant is Daniel's. The sweater is Michelle's. The sweater is Sharon's. >. The one who owns sweater is not the boy\n < The cow is Mary's. The cow is Kimberly's. The grapes is Joseph's. >. The one who owns cow is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [7, 8], "Q": [36, 38], "K'": [3, 6], "R": [39, 40], "K": [[12, 21], [14, 23]], "V": [[15, 24], [17, 26]], "example": [1, 42]}, {"END": [79, 80], "A'": [80, 81], "V'": [65, 66], "Q": [76, 77], "K'": [61, 64], "R": [78, 79], "K": [[45, 52], [46, 53]], "V": [[47, 54], [48, 57]], "example": [43, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The duck is Richard's. The duck is Ronald's. The tea is Donna's. >. The one who owns duck is not the girl\n < The monkey is Kevin's. The monkey is Brian's. The mosquito is Jennifer's. >. The one who owns monkey is not the girl\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [22, 24], "Q": [34, 36], "K'": [20, 21], "R": [37, 38], "K": [[3, 11], [5, 13]], "V": [[6, 14], [7, 16]], "example": [1, 40]}, {"END": [79, 80], "A'": [80, 81], "V'": [63, 65], "Q": [75, 77], "K'": [59, 62], "R": [78, 79], "K": [[43, 51], [45, 53]], "V": [[46, 54], [47, 55]], "example": [41, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The vodka is Dorothy's. The vodka is Nancy's. The jersey is David's. >. The one who owns vodka is not the boy\n < The juice is Charles's. The papaya is Patricia's. The juice is Richard's. >. The one who owns juice is not the girl\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [26, 27], "Q": [37, 40], "K'": [22, 25], "R": [41, 42], "K": [[3, 13], [6, 16]], "V": [[7, 17], [9, 18]], "example": [1, 44]}, {"END": [83, 84], "A'": [84, 85], "V'": [58, 61], "Q": [79, 81], "K'": [55, 57], "R": [82, 83], "K": [[47, 65], [49, 67]], "V": [[50, 68], [51, 69]], "example": [45, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Donald's. The blackberries is Mark's. The mouse is Elizabeth's. >. The one who owns blackberries is not the girl\n < The rifle is Richard's. The cow is Ruth's. The cow is Helen's. >. The one who owns cow is not the boy\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [23, 24], "Q": [34, 37], "K'": [21, 22], "R": [38, 39], "K": [[3, 12], [6, 15]], "V": [[7, 16], [8, 17]], "example": [1, 41]}, {"END": [75, 76], "A'": [76, 77], "V'": [47, 48], "Q": [72, 73], "K'": [44, 46], "R": [74, 75], "K": [[52, 59], [53, 60]], "V": [[54, 61], [55, 62]], "example": [42, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The gun is Donna's. The gorilla is Brian's. The gun is Betty's. >. The one who owns gun is not the boy\n < The fox is Michelle's. The football is George's. The fox is Elizabeth's. >. The one who owns fox is not the boy\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [15, 16], "Q": [33, 34], "K'": [11, 14], "R": [35, 36], "K": [[3, 20], [4, 21]], "V": [[5, 22], [7, 23]], "example": [1, 38]}, {"END": [75, 76], "A'": [76, 77], "V'": [52, 53], "Q": [71, 73], "K'": [50, 51], "R": [74, 75], "K": [[41, 57], [43, 59]], "V": [[44, 60], [46, 61]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jeans is Sandra's. The jeans is Sharon's. The handgun is Thomas's. >. The one who owns jeans is not the boy\n < The cake is Jeff's. The mouse is Margaret's. The cake is John's. >. The one who owns cake is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [24, 25], "Q": [35, 37], "K'": [21, 23], "R": [38, 39], "K": [[3, 12], [5, 14]], "V": [[6, 15], [8, 17]], "example": [1, 41]}, {"END": [77, 78], "A'": [78, 79], "V'": [54, 55], "Q": [73, 75], "K'": [52, 53], "R": [76, 77], "K": [[44, 59], [46, 61]], "V": [[47, 62], [48, 63]], "example": [42, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mouse is James's. The mouse is George's. The violin is Barbara's. >. The one who owns mouse is not the girl\n < The cat is Jeff's. The mango is Betty's. The mango is Deborah's. >. The one who owns mango is not the boy\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [20, 21], "Q": [31, 32], "K'": [17, 19], "R": [33, 34], "K": [[3, 10], [4, 11]], "V": [[5, 12], [6, 13]], "example": [1, 36]}, {"END": [74, 75], "A'": [75, 76], "V'": [41, 42], "Q": [70, 72], "K'": [39, 40], "R": [73, 74], "K": [[46, 54], [48, 56]], "V": [[49, 57], [50, 60]], "example": [37, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The basketball is Mark's. The strawberries is Sharon's. The strawberries is Deborah's. >. The one who owns strawberries is not the boy\n < The steak is Lisa's. The shirt is Daniel's. The steak is Linda's. >. The one who owns steak is not the boy\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [5, 6], "Q": [39, 43], "K'": [3, 4], "R": [44, 45], "K": [[10, 21], [14, 25]], "V": [[15, 26], [17, 29]], "example": [1, 47]}, {"END": [85, 86], "A'": [86, 87], "V'": [61, 62], "Q": [81, 83], "K'": [58, 60], "R": [84, 85], "K": [[50, 66], [52, 68]], "V": [[53, 69], [54, 71]], "example": [48, 87]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Daniel's. The sweater is Michelle's. The sweater is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not the boy? Answer: Yes\n Premise: < The blueberries is Mark's. The lion is Helen's. The lion is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not the boy? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [10, 11], "Q": [55, 57], "K'": [6, 9], "R": [58, 59], "K": [[15, 24], [17, 26]], "V": [[18, 27], [20, 29]], "example": [1, 65]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [118, 120], "K'": [71, 74], "R": [121, 122], "K": [[80, 88], [82, 90]], "V": [[83, 91], [84, 92]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Daniel's. The sweater is Michelle's. The sweater is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns sweater is not the boy? Answer: Yes\n Premise: < The blueberries is Mark's. The lion is Helen's. The lion is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lion is not the girl? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [10, 11], "Q": [55, 57], "K'": [6, 9], "R": [58, 59], "K": [[15, 24], [17, 26]], "V": [[18, 27], [20, 29]], "example": [1, 65]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [118, 120], "K'": [71, 74], "R": [121, 122], "K": [[80, 88], [82, 90]], "V": [[83, 91], [84, 92]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Susan's. The squirrel is Sandra's. The juice is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not the boy? Answer: Yes\n Premise: < The juice is Richard's. The cat is Ruth's. The juice is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [28, 29], "Q": [55, 58], "K'": [25, 27], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 21]], "example": [1, 66]}, {"END": [125, 126], "A'": [121, 123], "V'": [82, 83], "Q": [117, 119], "K'": [80, 81], "R": [120, 121], "K": [[72, 87], [74, 89]], "V": [[75, 90], [76, 91]], "example": [67, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Susan's. The squirrel is Sandra's. The juice is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns squirrel is not the boy? Answer: Yes\n Premise: < The juice is Richard's. The cat is Ruth's. The juice is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns juice is not the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [28, 29], "Q": [55, 58], "K'": [25, 27], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 21]], "example": [1, 66]}, {"END": [125, 126], "A'": [121, 123], "V'": [82, 83], "Q": [117, 119], "K'": [80, 81], "R": [120, 121], "K": [[72, 87], [74, 89]], "V": [[75, 90], [76, 91]], "example": [67, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Richard's. The piano is Susan's. The gun is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not the boy? Answer: No\n Premise: < The mouse is Deborah's. The mouse is Linda's. The shoes is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [15, 16], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[6, 20], [7, 21]], "V": [[8, 22], [9, 23]], "example": [1, 58]}, {"END": [118, 119], "A'": [114, 116], "V'": [84, 85], "Q": [111, 112], "K'": [81, 83], "R": [113, 114], "K": [[64, 73], [65, 74]], "V": [[66, 75], [69, 77]], "example": [59, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Richard's. The piano is Susan's. The gun is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns gun is not the boy? Answer: No\n Premise: < The mouse is Deborah's. The mouse is Linda's. The shoes is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [15, 16], "Q": [49, 50], "K'": [13, 14], "R": [51, 52], "K": [[6, 20], [7, 21]], "V": [[8, 22], [9, 23]], "example": [1, 58]}, {"END": [118, 119], "A'": [114, 116], "V'": [84, 85], "Q": [111, 112], "K'": [81, 83], "R": [113, 114], "K": [[64, 73], [65, 74]], "V": [[66, 75], [69, 77]], "example": [59, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lime is Ronald's. The lime is Kevin's. The soda is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not the girl? Answer: Yes\n Premise: < The shirt is Barbara's. The shirt is Lisa's. The burger is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not the boy? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [26, 27], "Q": [53, 55], "K'": [23, 25], "R": [56, 57], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 19]], "example": [1, 63]}, {"END": [123, 124], "A'": [119, 121], "V'": [88, 89], "Q": [115, 117], "K'": [85, 87], "R": [118, 119], "K": [[69, 77], [71, 79]], "V": [[72, 80], [73, 81]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lime is Ronald's. The lime is Kevin's. The soda is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns lime is not the girl? Answer: Yes\n Premise: < The shirt is Barbara's. The shirt is Lisa's. The burger is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns shirt is not the girl? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [26, 27], "Q": [53, 55], "K'": [23, 25], "R": [56, 57], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 19]], "example": [1, 63]}, {"END": [123, 124], "A'": [119, 121], "V'": [88, 89], "Q": [115, 117], "K'": [85, 87], "R": [118, 119], "K": [[69, 77], [71, 79]], "V": [[72, 80], [73, 81]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beetle is Deborah's. The beetle is Betty's. The blueberries is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not the boy? Answer: Yes\n Premise: < The mouse is Elizabeth's. The mouse is Sandra's. The trousers is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the boy? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [30, 31], "Q": [57, 60], "K'": [26, 29], "R": [61, 62], "K": [[6, 17], [9, 20]], "V": [[10, 21], [13, 22]], "example": [1, 68]}, {"END": [127, 128], "A'": [123, 125], "V'": [93, 94], "Q": [120, 121], "K'": [89, 92], "R": [122, 123], "K": [[74, 81], [75, 82]], "V": [[76, 83], [77, 85]], "example": [69, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beetle is Deborah's. The beetle is Betty's. The blueberries is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns beetle is not the boy? Answer: Yes\n Premise: < The mouse is Elizabeth's. The mouse is Sandra's. The trousers is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns mouse is not the girl? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [30, 31], "Q": [57, 60], "K'": [26, 29], "R": [61, 62], "K": [[6, 17], [9, 20]], "V": [[10, 21], [13, 22]], "example": [1, 68]}, {"END": [127, 128], "A'": [123, 125], "V'": [93, 94], "Q": [120, 121], "K'": [89, 92], "R": [122, 123], "K": [[74, 81], [75, 82]], "V": [[76, 83], [77, 85]], "example": [69, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Ruth's. The elephant is Lisa's. The beetle is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not the girl? Answer: No\n Premise: < The shotgun is Margaret's. The costume is Jason's. The costume is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [28, 29], "Q": [55, 58], "K'": [24, 27], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 66]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [118, 120], "K'": [72, 74], "R": [121, 122], "K": [[80, 88], [82, 90]], "V": [[83, 91], [84, 92]], "example": [67, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Ruth's. The elephant is Lisa's. The beetle is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns elephant is not the girl? Answer: No\n Premise: < The shotgun is Margaret's. The costume is Jason's. The costume is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [28, 29], "Q": [55, 58], "K'": [24, 27], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 66]}, {"END": [126, 127], "A'": [122, 124], "V'": [75, 76], "Q": [118, 120], "K'": [72, 74], "R": [121, 122], "K": [[80, 88], [82, 90]], "V": [[83, 91], [84, 92]], "example": [67, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Betty's. The blackberries is Nancy's. The juice is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: No\n Premise: < The cherries is Kenneth's. The goat is Dorothy's. The goat is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns goat is not the boy? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [27, 28], "Q": [54, 57], "K'": [24, 26], "R": [58, 59], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 65]}, {"END": [126, 127], "A'": [122, 124], "V'": [74, 75], "Q": [118, 120], "K'": [71, 73], "R": [121, 122], "K": [[79, 88], [81, 90]], "V": [[82, 91], [84, 92]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Betty's. The blackberries is Nancy's. The juice is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: No\n Premise: < The cherries is Kenneth's. The goat is Dorothy's. The goat is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns goat is not the girl? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [27, 28], "Q": [54, 57], "K'": [24, 26], "R": [58, 59], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 65]}, {"END": [126, 127], "A'": [122, 124], "V'": [74, 75], "Q": [118, 120], "K'": [71, 73], "R": [121, 122], "K": [[79, 88], [81, 90]], "V": [[82, 91], [84, 92]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Sarah's. The costume is David's. The costume is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n Premise: < The blackberries is Steven's. The blackberries is John's. The wine is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [9, 10], "Q": [52, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 62]}, {"END": [125, 126], "A'": [121, 123], "V'": [88, 90], "Q": [116, 119], "K'": [86, 87], "R": [120, 121], "K": [[68, 77], [71, 80]], "V": [[72, 81], [73, 82]], "example": [63, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_equal,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Sarah's. The costume is David's. The costume is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns costume is not the girl? Answer: Yes\n Premise: < The blackberries is Steven's. The blackberries is John's. The wine is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns blackberries is not the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [9, 10], "Q": [52, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 62]}, {"END": [125, 126], "A'": [121, 123], "V'": [88, 90], "Q": [116, 119], "K'": [86, 87], "R": [120, 121], "K": [[68, 77], [71, 80]], "V": [[72, 81], [73, 82]], "example": [63, 127]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Sharon has pants. Donna has pig. James has coffee. >. So the boy owns a kind of drink\n < Kimberly has spaghetti. Margaret has plum. Daniel has basketball. >. So the boy owns a kind of sport\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [16, 17], "Q": [21, 23], "K": [14, 15], "R": null, "K'": [[2, 8], [4, 10]], "V'": [[5, 11], [7, 13]], "example": [1, 29]}, {"END": [57, 58], "A": [58, 59], "V": [46, 47], "Q": [51, 53], "K": [44, 45], "R": null, "K'": [[31, 39], [34, 40]], "V'": [[35, 41], [38, 43]], "example": [30, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Richard has car. Deborah has whiskey. Linda has wine. >. So the boy owns a kind of vehicle\n < Lisa has goat. Betty has donkey. Paul has piano. >. So the boy owns a kind of instrument\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [4, 5], "Q": [21, 23], "K": [2, 3], "R": null, "K'": [[6, 13], [9, 15]], "V'": [[10, 16], [12, 17]], "example": [1, 29]}, {"END": [54, 55], "A": [55, 56], "V": [43, 44], "Q": [48, 50], "K": [41, 42], "R": null, "K'": [[31, 36], [32, 37]], "V'": [[33, 38], [35, 40]], "example": [30, 56]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< William has baseball. Sarah has mosquito. Charles has durian. >. So the girl owns a kind of insect\n < Karen has cherries. Donna has rifle. Kevin has sheep. >. So the boy owns a kind of animal\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [8, 11], "Q": [20, 22], "K": [6, 7], "R": null, "K'": [[2, 12], [3, 13]], "V'": [[4, 14], [5, 16]], "example": [1, 28]}, {"END": [55, 56], "A": [56, 57], "V": [44, 45], "Q": [49, 51], "K": [42, 43], "R": null, "K'": [[30, 36], [32, 38]], "V'": [[33, 39], [35, 41]], "example": [29, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Maria has whiskey. William has fox. Michael has blackberries. >. So the girl owns a kind of drink\n < Nancy has lion. Joseph has tea. Ronald has lime. >. So the girl owns a kind of animal\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [4, 6], "Q": [21, 23], "K": [2, 3], "R": null, "K'": [[7, 12], [8, 13]], "V'": [[9, 14], [11, 17]], "example": [1, 29]}, {"END": [55, 56], "A": [56, 57], "V": [33, 35], "Q": [49, 51], "K": [31, 32], "R": null, "K'": [[36, 40], [37, 42]], "V'": [[38, 43], [39, 45]], "example": [30, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Thomas has cake. James has pineapple. Betty has mosquito. >. So the girl owns a kind of insect\n < Elizabeth has pants. Joseph has vodka. Sandra has mouse. >. So the boy owns a kind of drink\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [15, 18], "Q": [22, 24], "K": [13, 14], "R": null, "K'": [[2, 7], [3, 8]], "V'": [[4, 9], [6, 12]], "example": [1, 30]}, {"END": [57, 58], "A": [58, 59], "V": [39, 42], "Q": [51, 53], "K": [37, 38], "R": null, "K'": [[32, 43], [33, 45]], "V'": [[34, 46], [36, 47]], "example": [31, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< David has bee. Nancy has T-shirt. Daniel has deer. >. So the girl owns a kind of clothes\n < Jason has guitar. Steven has soda. Margaret has grenade. >. So the girl owns a kind of weapon\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [9, 13], "Q": [22, 24], "K": [7, 8], "R": null, "K'": [[2, 14], [3, 15]], "V'": [[4, 16], [6, 18]], "example": [1, 30]}, {"END": [56, 57], "A": [57, 58], "V": [43, 46], "Q": [50, 52], "K": [41, 42], "R": null, "K'": [[32, 36], [33, 37]], "V'": [[34, 38], [35, 40]], "example": [31, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Mark has hamburger. Mary has dog. Edward has plum. >. So the girl owns a kind of animal\n < Dorothy has shotgun. Barbara has blackberries. Kenneth has guitar. >. So the boy owns a kind of instrument\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [10, 11], "Q": [20, 22], "K": [8, 9], "R": null, "K'": [[2, 12], [3, 13]], "V'": [[4, 14], [7, 16]], "example": [1, 28]}, {"END": [55, 56], "A": [56, 57], "V": [44, 45], "Q": [49, 51], "K": [42, 43], "R": null, "K'": [[30, 36], [32, 37]], "V'": [[33, 38], [35, 41]], "example": [29, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Kevin has durian. Steven has grenade. Susan has monkey. >. So the girl owns a kind of animal\n < Patricia has violin. Donna has monkey. Steven has papaya. >. So the boy owns a kind of fruit\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [15, 17], "Q": [21, 23], "K": [13, 14], "R": null, "K'": [[2, 7], [3, 8]], "V'": [[4, 9], [6, 12]], "example": [1, 29]}, {"END": [58, 59], "A": [59, 60], "V": [46, 48], "Q": [52, 54], "K": [44, 45], "R": null, "K'": [[31, 38], [34, 40]], "V'": [[35, 41], [37, 43]], "example": [30, 60]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has pants. Donna has pig. James has coffee. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n Premise: < Joseph has spaghetti. Kimberly has underwear. Mary has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of food? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [19, 20], "Q": [39, 41], "K": [17, 18], "R": null, "K'": [[5, 11], [7, 13]], "V'": [[8, 14], [10, 16]], "example": [1, 51]}, {"END": [103, 104], "A": [100, 101], "V": [58, 61], "Q": [93, 95], "K": [56, 57], "R": null, "K'": [[62, 70], [65, 71]], "V'": [[66, 72], [69, 74]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has pants. Donna has pig. James has coffee. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n Premise: < Joseph has spaghetti. Kimberly has underwear. Mary has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [19, 20], "Q": [39, 41], "K": [17, 18], "R": null, "K'": [[5, 11], [7, 13]], "V'": [[8, 14], [10, 16]], "example": [1, 51]}, {"END": [103, 104], "A": [100, 101], "V": [58, 61], "Q": [93, 95], "K": [56, 57], "R": null, "K'": [[62, 70], [65, 71]], "V'": [[66, 72], [69, 74]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Paul has elephant. Sandra has piano. Susan has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < Donald has plum. Lisa has monkey. Jennifer has bee. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [7, 10], "Q": [41, 43], "K": [5, 6], "R": null, "K'": [[11, 16], [13, 17]], "V'": [[14, 18], [15, 22]], "example": [1, 53]}, {"END": [102, 103], "A": [99, 100], "V": [60, 62], "Q": [92, 94], "K": [58, 59], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[65, 71], [67, 73]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Paul has elephant. Sandra has piano. Susan has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < Donald has plum. Lisa has monkey. Jennifer has bee. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of animal? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [7, 10], "Q": [41, 43], "K": [5, 6], "R": null, "K'": [[11, 16], [13, 17]], "V'": [[14, 18], [15, 22]], "example": [1, 53]}, {"END": [102, 103], "A": [99, 100], "V": [60, 62], "Q": [92, 94], "K": [58, 59], "R": null, "K'": [[63, 68], [64, 70]], "V'": [[65, 71], [67, 73]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth has durian. Patricia has bus. Jason has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < Christopher has violin. Karen has spaghetti. Kenneth has gun. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 13]], "V'": [[7, 14], [9, 15]], "example": [1, 51]}, {"END": [100, 101], "A": [97, 98], "V": [64, 67], "Q": [90, 92], "K": [61, 63], "R": null, "K'": [[56, 68], [57, 69]], "V'": [[58, 70], [60, 71]], "example": [52, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth has durian. Patricia has bus. Jason has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < Christopher has violin. Karen has spaghetti. Kenneth has gun. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of instrument? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 13]], "V'": [[7, 14], [9, 15]], "example": [1, 51]}, {"END": [100, 101], "A": [97, 98], "V": [64, 67], "Q": [90, 92], "K": [61, 63], "R": null, "K'": [[56, 68], [57, 69]], "V'": [[58, 70], [60, 71]], "example": [52, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has lion. Ronald has tea. Daniel has lime. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: Yes\n Premise: < Thomas has cake. James has pineapple. Betty has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [7, 9], "Q": [38, 40], "K": [5, 6], "R": null, "K'": [[10, 15], [12, 16]], "V'": [[13, 17], [14, 19]], "example": [1, 50]}, {"END": [100, 101], "A": [97, 98], "V": [68, 71], "Q": [90, 92], "K": [66, 67], "R": null, "K'": [[55, 60], [56, 61]], "V'": [[57, 62], [59, 65]], "example": [51, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Susan has lion. Ronald has tea. Daniel has lime. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: Yes\n Premise: < Thomas has cake. James has pineapple. Betty has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: No\n", "ranges": [{"END": [48, 49], "A": [45, 46], "V": [7, 9], "Q": [38, 40], "K": [5, 6], "R": null, "K'": [[10, 15], [12, 16]], "V'": [[13, 17], [14, 19]], "example": [1, 50]}, {"END": [100, 101], "A": [97, 98], "V": [68, 71], "Q": [90, 92], "K": [66, 67], "R": null, "K'": [[55, 60], [56, 61]], "V'": [[57, 62], [59, 65]], "example": [51, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has dog. Ronald has violin. Susan has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of instrument? Answer: Yes\n Premise: < Edward has football. Sharon has costume. Lisa has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [14, 16], "Q": [40, 42], "K": [11, 13], "R": null, "K'": [[5, 17], [8, 18]], "V'": [[9, 19], [10, 21]], "example": [1, 52]}, {"END": [100, 101], "A": [97, 98], "V": [59, 60], "Q": [90, 92], "K": [57, 58], "R": null, "K'": [[61, 67], [63, 68]], "V'": [[64, 69], [66, 71]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has dog. Ronald has violin. Susan has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of instrument? Answer: Yes\n Premise: < Edward has football. Sharon has costume. Lisa has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [14, 16], "Q": [40, 42], "K": [11, 13], "R": null, "K'": [[5, 17], [8, 18]], "V'": [[9, 19], [10, 21]], "example": [1, 52]}, {"END": [100, 101], "A": [97, 98], "V": [59, 60], "Q": [90, 92], "K": [57, 58], "R": null, "K'": [[61, 67], [63, 68]], "V'": [[64, 69], [66, 71]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has beer. Kevin has dog. Sarah has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n Premise: < Linda has jacket. Jennifer has peach. Christopher has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [16, 18], "Q": [37, 39], "K": [14, 15], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 13]], "example": [1, 49]}, {"END": [99, 100], "A": [96, 97], "V": [68, 70], "Q": [89, 91], "K": [66, 67], "R": null, "K'": [[54, 60], [56, 62]], "V'": [[57, 63], [59, 65]], "example": [50, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has beer. Kevin has dog. Sarah has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n Premise: < Linda has jacket. Jennifer has peach. Christopher has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [16, 18], "Q": [37, 39], "K": [14, 15], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 13]], "example": [1, 49]}, {"END": [99, 100], "A": [96, 97], "V": [68, 70], "Q": [89, 91], "K": [66, 67], "R": null, "K'": [[54, 60], [56, 62]], "V'": [[57, 63], [59, 65]], "example": [50, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin has durian. Steven has grenade. Carol has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of fruit? Answer: No\n Premise: < Kenneth has monkey. Kevin has horse. Patricia has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 15]], "example": [1, 51]}, {"END": [101, 102], "A": [98, 99], "V": [69, 72], "Q": [91, 93], "K": [65, 68], "R": null, "K'": [[56, 61], [57, 62]], "V'": [[58, 63], [60, 64]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin has durian. Steven has grenade. Carol has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of fruit? Answer: No\n Premise: < Kenneth has monkey. Kevin has horse. Patricia has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [18, 20], "Q": [39, 41], "K": [16, 17], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[7, 12], [9, 15]], "example": [1, 51]}, {"END": [101, 102], "A": [98, 99], "V": [69, 72], "Q": [91, 93], "K": [65, 68], "R": null, "K'": [[56, 61], [57, 62]], "V'": [[58, 63], [60, 64]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has jeep. Paul has grenade. Mary has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of vehicle? Answer: No\n Premise: < Linda has mouse. Jennifer has sheep. Brian has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 16], "Q": [41, 43], "K": [11, 12], "R": null, "K'": [[5, 17], [7, 18]], "V'": [[8, 19], [10, 22]], "example": [1, 53]}, {"END": [100, 101], "A": [97, 98], "V": [70, 71], "Q": [90, 92], "K": [68, 69], "R": null, "K'": [[58, 63], [60, 65]], "V'": [[61, 66], [62, 67]], "example": [54, 102]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has jeep. Paul has grenade. Mary has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of vehicle? Answer: No\n Premise: < Linda has mouse. Jennifer has sheep. Brian has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of animal? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 16], "Q": [41, 43], "K": [11, 12], "R": null, "K'": [[5, 17], [7, 18]], "V'": [[8, 19], [10, 22]], "example": [1, 53]}, {"END": [100, 101], "A": [97, 98], "V": [70, 71], "Q": [90, 92], "K": [68, 69], "R": null, "K'": [[58, 63], [60, 65]], "V'": [[61, 66], [62, 67]], "example": [54, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pants is Sharon's. The pig is Donna's. The coffee is James's. >. So the boy owns a kind of drink\n < The spaghetti is Kimberly's. The plum is Margaret's. The basketball is Daniel's. >. So the boy owns a kind of sport\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [21, 22], "Q": [30, 32], "K": [23, 24], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[3, 12], [5, 14]], "example": [1, 38]}, {"END": [75, 76], "A": [76, 77], "V": [60, 61], "Q": [69, 71], "K": [62, 63], "R": null, "K'": [[45, 55], [48, 56]], "V'": [[41, 52], [44, 54]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The car is Richard's. The whiskey is Deborah's. The wine is Linda's. >. So the boy owns a kind of vehicle\n < The goat is Lisa's. The donkey is Betty's. The piano is Paul's. >. So the boy owns a kind of instrument\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [3, 4], "Q": [30, 32], "K": [5, 6], "R": null, "K'": [[13, 22], [16, 24]], "V'": [[10, 20], [12, 21]], "example": [1, 38]}, {"END": [72, 73], "A": [73, 74], "V": [57, 58], "Q": [66, 68], "K": [59, 60], "R": null, "K'": [[44, 52], [45, 53]], "V'": [[41, 49], [43, 51]], "example": [39, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The baseball is William's. The mosquito is Sarah's. The durian is Charles's. >. So the girl owns a kind of insect\n < The cherries is Karen's. The rifle is Donna's. The sheep is Kevin's. >. So the boy owns a kind of animal\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [10, 13], "Q": [29, 31], "K": [14, 15], "R": null, "K'": [[5, 22], [6, 23]], "V'": [[3, 19], [4, 21]], "example": [1, 37]}, {"END": [73, 74], "A": [74, 75], "V": [58, 59], "Q": [67, 69], "K": [60, 61], "R": null, "K'": [[43, 52], [45, 54]], "V'": [[40, 49], [42, 51]], "example": [38, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The whiskey is Maria's. The fox is William's. The blackberries is Michael's. >. So the girl owns a kind of drink\n < The lion is Nancy's. The tea is Joseph's. The lime is Ronald's. >. So the girl owns a kind of animal\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [3, 5], "Q": [30, 32], "K": [6, 7], "R": null, "K'": [[14, 23], [15, 24]], "V'": [[11, 19], [13, 22]], "example": [1, 38]}, {"END": [73, 74], "A": [74, 75], "V": [41, 43], "Q": [67, 69], "K": [44, 45], "R": null, "K'": [[51, 59], [52, 61]], "V'": [[49, 56], [50, 58]], "example": [39, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is Thomas's. The pineapple is James's. The mosquito is Betty's. >. So the girl owns a kind of insect\n < The pants is Elizabeth's. The vodka is Joseph's. The mouse is Sandra's. >. So the boy owns a kind of drink\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [20, 23], "Q": [31, 33], "K": [24, 25], "R": null, "K'": [[6, 15], [7, 16]], "V'": [[3, 11], [5, 14]], "example": [1, 39]}, {"END": [75, 76], "A": [76, 77], "V": [50, 53], "Q": [69, 71], "K": [54, 55], "R": null, "K'": [[45, 61], [46, 63]], "V'": [[42, 59], [44, 60]], "example": [40, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bee is David's. T-shirt is Nancy's. The deer is Daniel's. >. So the girl owns a kind of clothes\n < The guitar is Jason's. The soda is Steven's. The grenade is Margaret's. >. So the girl owns a kind of weapon\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [10, 14], "Q": [30, 32], "K": [15, 16], "R": null, "K'": [[6, 23], [7, 24]], "V'": [[3, 20], [5, 22]], "example": [1, 38]}, {"END": [73, 74], "A": [74, 75], "V": [56, 59], "Q": [67, 69], "K": [60, 61], "R": null, "K'": [[43, 51], [44, 52]], "V'": [[41, 48], [42, 50]], "example": [39, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The hamburger is Mark's. The dog is Mary's. The plum is Edward's. >. So the girl owns a kind of animal\n < The shotgun is Dorothy's. The blackberries is Barbara's. The guitar is Kenneth's. >. So the boy owns a kind of instrument\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [12, 13], "Q": [29, 31], "K": [14, 15], "R": null, "K'": [[7, 22], [8, 23]], "V'": [[3, 19], [6, 21]], "example": [1, 37]}, {"END": [73, 74], "A": [74, 75], "V": [58, 59], "Q": [67, 69], "K": [60, 61], "R": null, "K'": [[43, 53], [45, 54]], "V'": [[40, 49], [42, 52]], "example": [38, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The durian is Kevin's. The grenade is Steven's. The monkey is Susan's. >. So the girl owns a kind of animal\n < The violin is Patricia's. The monkey is Donna's. The papaya is Steven's. >. So the boy owns a kind of fruit\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [20, 22], "Q": [30, 32], "K": [23, 24], "R": null, "K'": [[6, 15], [7, 16]], "V'": [[3, 11], [5, 14]], "example": [1, 38]}, {"END": [76, 77], "A": [77, 78], "V": [60, 62], "Q": [70, 72], "K": [63, 64], "R": null, "K'": [[44, 54], [47, 56]], "V'": [[41, 51], [43, 53]], "example": [39, 78]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Sharon's. The pig is Donna's. The coffee is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n Premise: < The spaghetti is Joseph's. The underwear is Kimberly's. The papaya is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of food? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [24, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 18], [11, 20]], "V'": [[6, 15], [8, 17]], "example": [1, 60]}, {"END": [121, 122], "A": [118, 119], "V": [66, 69], "Q": [111, 113], "K": [70, 71], "R": null, "K'": [[79, 89], [82, 90]], "V'": [[75, 86], [78, 88]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Sharon's. The pig is Donna's. The coffee is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n Premise: < The spaghetti is Joseph's. The underwear is Kimberly's. The papaya is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [24, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 18], [11, 20]], "V'": [[6, 15], [8, 17]], "example": [1, 60]}, {"END": [121, 122], "A": [118, 119], "V": [66, 69], "Q": [111, 113], "K": [70, 71], "R": null, "K'": [[79, 89], [82, 90]], "V'": [[75, 86], [78, 88]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Paul's. The piano is Sandra's. The watermelon is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < The plum is Donald's. The monkey is Lisa's. The bee is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [6, 9], "Q": [50, 52], "K": [10, 11], "R": null, "K'": [[17, 28], [19, 29]], "V'": [[15, 23], [16, 27]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [68, 70], "Q": [110, 112], "K": [71, 72], "R": null, "K'": [[79, 87], [80, 89]], "V'": [[76, 84], [78, 86]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Paul's. The piano is Sandra's. The watermelon is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < The plum is Donald's. The monkey is Lisa's. The bee is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of animal? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [6, 9], "Q": [50, 52], "K": [10, 11], "R": null, "K'": [[17, 28], [19, 29]], "V'": [[15, 23], [16, 27]], "example": [1, 62]}, {"END": [120, 121], "A": [117, 118], "V": [68, 70], "Q": [110, 112], "K": [71, 72], "R": null, "K'": [[79, 87], [80, 89]], "V'": [[76, 84], [78, 86]], "example": [63, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Elizabeth's. The bus is Patricia's. The shoes is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < The violin is Christopher's. The spaghetti is Karen's. The gun is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 16], [10, 19]], "V'": [[6, 14], [8, 15]], "example": [1, 60]}, {"END": [118, 119], "A": [115, 116], "V": [74, 77], "Q": [108, 110], "K": [78, 80], "R": null, "K'": [[69, 86], [70, 87]], "V'": [[66, 84], [68, 85]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Elizabeth's. The bus is Patricia's. The shoes is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n Premise: < The violin is Christopher's. The spaghetti is Karen's. The gun is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of instrument? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 16], [10, 19]], "V'": [[6, 14], [8, 15]], "example": [1, 60]}, {"END": [118, 119], "A": [115, 116], "V": [74, 77], "Q": [108, 110], "K": [78, 80], "R": null, "K'": [[69, 86], [70, 87]], "V'": [[66, 84], [68, 85]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Susan's. The tea is Ronald's. The lime is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: Yes\n Premise: < The cake is Thomas's. The pineapple is James's. The mosquito is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [6, 8], "Q": [47, 49], "K": [9, 10], "R": null, "K'": [[16, 25], [18, 26]], "V'": [[14, 22], [15, 24]], "example": [1, 59]}, {"END": [118, 119], "A": [115, 116], "V": [82, 85], "Q": [108, 110], "K": [86, 87], "R": null, "K'": [[68, 77], [69, 78]], "V'": [[65, 73], [67, 76]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Susan's. The tea is Ronald's. The lime is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: Yes\n Premise: < The cake is Thomas's. The pineapple is James's. The mosquito is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [6, 8], "Q": [47, 49], "K": [9, 10], "R": null, "K'": [[16, 25], [18, 26]], "V'": [[14, 22], [15, 24]], "example": [1, 59]}, {"END": [118, 119], "A": [115, 116], "V": [82, 85], "Q": [108, 110], "K": [86, 87], "R": null, "K'": [[68, 77], [69, 78]], "V'": [[65, 73], [67, 76]], "example": [60, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Deborah's. The violin is Ronald's. The pistol is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of instrument? Answer: Yes\n Premise: < The football is Edward's. The costume is Sharon's. The deer is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [15, 17], "Q": [49, 51], "K": [18, 20], "R": null, "K'": [[8, 27], [11, 28]], "V'": [[6, 24], [7, 26]], "example": [1, 61]}, {"END": [118, 119], "A": [115, 116], "V": [67, 68], "Q": [108, 110], "K": [69, 70], "R": null, "K'": [[77, 86], [79, 87]], "V'": [[74, 83], [76, 85]], "example": [62, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Deborah's. The violin is Ronald's. The pistol is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of instrument? Answer: Yes\n Premise: < The football is Edward's. The costume is Sharon's. The deer is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of clothes? Answer: No\n", "ranges": [{"END": [59, 60], "A": [56, 57], "V": [15, 17], "Q": [49, 51], "K": [18, 20], "R": null, "K'": [[8, 27], [11, 28]], "V'": [[6, 24], [7, 26]], "example": [1, 61]}, {"END": [118, 119], "A": [115, 116], "V": [67, 68], "Q": [108, 110], "K": [69, 70], "R": null, "K'": [[77, 86], [79, 87]], "V'": [[74, 83], [76, 85]], "example": [62, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is Joseph's. The dog is Kevin's. The burger is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n Premise: < The jacket is Linda's. The peach is Jennifer's. The cannon is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [21, 23], "Q": [46, 48], "K": [24, 25], "R": null, "K'": [[9, 16], [10, 17]], "V'": [[6, 14], [8, 15]], "example": [1, 58]}, {"END": [117, 118], "A": [114, 115], "V": [82, 84], "Q": [107, 109], "K": [85, 86], "R": null, "K'": [[67, 76], [69, 78]], "V'": [[64, 73], [66, 75]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is Joseph's. The dog is Kevin's. The burger is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of food? Answer: Yes\n Premise: < The jacket is Linda's. The peach is Jennifer's. The cannon is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of fruit? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [21, 23], "Q": [46, 48], "K": [24, 25], "R": null, "K'": [[9, 16], [10, 17]], "V'": [[6, 14], [8, 15]], "example": [1, 58]}, {"END": [117, 118], "A": [114, 115], "V": [82, 84], "Q": [107, 109], "K": [85, 86], "R": null, "K'": [[67, 76], [69, 78]], "V'": [[64, 73], [66, 75]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Kevin's. The grenade is Steven's. The monkey is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of fruit? Answer: No\n Premise: < The monkey is Kenneth's. The horse is Kevin's. The jersey is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 18], [10, 19]], "V'": [[6, 14], [8, 17]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [81, 84], "Q": [109, 111], "K": [85, 88], "R": null, "K'": [[69, 76], [70, 77]], "V'": [[66, 74], [68, 75]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Kevin's. The grenade is Steven's. The monkey is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of fruit? Answer: No\n Premise: < The monkey is Kenneth's. The horse is Kevin's. The jersey is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a kind of animal? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [23, 25], "Q": [48, 50], "K": [26, 27], "R": null, "K'": [[9, 18], [10, 19]], "V'": [[6, 14], [8, 17]], "example": [1, 60]}, {"END": [119, 120], "A": [116, 117], "V": [81, 84], "Q": [109, 111], "K": [85, 88], "R": null, "K'": [[69, 76], [70, 77]], "V'": [[66, 74], [68, 75]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Karen's. The grenade is Paul's. The trousers is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of vehicle? Answer: No\n Premise: < The mouse is Linda's. The sheep is Jennifer's. The baseball is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of sport? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [15, 18], "Q": [50, 52], "K": [19, 20], "R": null, "K'": [[9, 28], [11, 29]], "V'": [[6, 24], [8, 27]], "example": [1, 62]}, {"END": [118, 119], "A": [115, 116], "V": [84, 85], "Q": [108, 110], "K": [86, 87], "R": null, "K'": [[70, 78], [72, 80]], "V'": [[68, 76], [69, 77]], "example": [63, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Karen's. The grenade is Paul's. The trousers is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of vehicle? Answer: No\n Premise: < The mouse is Linda's. The sheep is Jennifer's. The baseball is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a kind of animal? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [15, 18], "Q": [50, 52], "K": [19, 20], "R": null, "K'": [[9, 28], [11, 29]], "V'": [[6, 24], [8, 27]], "example": [1, 62]}, {"END": [118, 119], "A": [115, 116], "V": [84, 85], "Q": [108, 110], "K": [86, 87], "R": null, "K'": [[70, 78], [72, 80]], "V'": [[68, 76], [69, 77]], "example": [63, 120]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Brian has pants. Kenneth has pig. Mary has coffee. >. The boys do not own a kind of drink\n < Jason has spaghetti. Joseph has plum. Nancy has basketball. >. The boys do not own a kind of sport\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [14, 15], "Q": [18, 20], "K'": [12, 13], "R": [21, 22], "K": [[2, 7], [3, 8]], "V": [[4, 9], [6, 11]], "example": [1, 27]}, {"END": [53, 54], "A'": [54, 55], "V'": [42, 43], "Q": [46, 48], "K'": [40, 41], "R": [49, 50], "K": [[29, 35], [30, 36]], "V": [[31, 37], [34, 39]], "example": [28, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Maria has car. Jeff has whiskey. Robert has wine. >. The boys do not own a kind of vehicle\n < Christopher has goat. Mark has donkey. Karen has piano. >. The boys do not own a kind of instrument\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [4, 5], "Q": [17, 19], "K'": [2, 3], "R": [20, 21], "K": [[6, 11], [7, 12]], "V": [[8, 13], [10, 14]], "example": [1, 26]}, {"END": [52, 53], "A'": [53, 54], "V'": [41, 42], "Q": [45, 47], "K'": [38, 40], "R": [48, 49], "K": [[28, 33], [29, 34]], "V": [[30, 35], [32, 37]], "example": [27, 54]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Elizabeth has baseball. Kevin has mosquito. Susan has durian. >. The girls do not own a kind of insect\n < Paul has cherries. Kenneth has rifle. Sarah has sheep. >. The boys do not own a kind of animal\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [8, 11], "Q": [19, 21], "K'": [6, 7], "R": [22, 23], "K": [[2, 12], [3, 13]], "V": [[4, 14], [5, 16]], "example": [1, 28]}, {"END": [53, 54], "A'": [54, 55], "V'": [42, 43], "Q": [46, 48], "K'": [40, 41], "R": [49, 50], "K": [[30, 35], [31, 36]], "V": [[32, 37], [34, 39]], "example": [29, 55]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Richard has whiskey. Elizabeth has fox. Barbara has blackberries. >. The girls do not own a kind of drink\n < Daniel has lion. Margaret has tea. Michelle has lime. >. The girls do not own a kind of animal\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [4, 6], "Q": [20, 22], "K'": [2, 3], "R": [23, 24], "K": [[7, 12], [8, 13]], "V": [[9, 14], [11, 17]], "example": [1, 29]}, {"END": [55, 56], "A'": [56, 57], "V'": [33, 35], "Q": [48, 50], "K'": [31, 32], "R": [51, 52], "K": [[36, 40], [37, 42]], "V": [[38, 43], [39, 45]], "example": [30, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Dorothy has cake. Mary has pineapple. Mark has mosquito. >. The girls do not own a kind of insect\n < William has pants. Margaret has vodka. George has mouse. >. The boys do not own a kind of drink\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [16, 19], "Q": [22, 24], "K'": [14, 15], "R": [25, 26], "K": [[2, 8], [4, 9]], "V": [[5, 10], [7, 13]], "example": [1, 31]}, {"END": [57, 58], "A'": [58, 59], "V'": [40, 43], "Q": [50, 52], "K'": [38, 39], "R": [53, 54], "K": [[33, 44], [34, 45]], "V": [[35, 46], [37, 47]], "example": [32, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Jennifer has bee. Daniel has T-shirt. Nancy has deer. >. The girls do not own a kind of clothes\n < Kimberly has guitar. Carol has soda. Joseph has grenade. >. The girls do not own a kind of weapon\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [10, 14], "Q": [22, 24], "K'": [8, 9], "R": [25, 26], "K": [[2, 15], [4, 16]], "V": [[5, 17], [7, 19]], "example": [1, 31]}, {"END": [59, 60], "A'": [60, 61], "V'": [46, 49], "Q": [52, 54], "K'": [44, 45], "R": [55, 56], "K": [[33, 39], [36, 40]], "V": [[37, 41], [38, 43]], "example": [32, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Betty has hamburger. James has dog. Ruth has plum. >. The girls do not own a kind of animal\n < Thomas has shotgun. Michael has blackberries. Donna has guitar. >. The boys do not own a kind of instrument\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [10, 11], "Q": [19, 21], "K'": [8, 9], "R": [22, 23], "K": [[2, 12], [3, 13]], "V": [[4, 14], [7, 16]], "example": [1, 28]}, {"END": [55, 56], "A'": [56, 57], "V'": [44, 45], "Q": [48, 50], "K'": [41, 43], "R": [51, 52], "K": [[30, 35], [31, 36]], "V": [[32, 37], [34, 40]], "example": [29, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Sarah has durian. Carol has grenade. Charles has monkey. >. The girls do not own a kind of animal\n < John has violin. Kenneth has monkey. Carol has papaya. >. The boys do not own a kind of fruit\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [15, 17], "Q": [20, 22], "K'": [13, 14], "R": [23, 24], "K": [[2, 7], [3, 8]], "V": [[4, 9], [6, 12]], "example": [1, 29]}, {"END": [55, 56], "A'": [56, 57], "V'": [43, 45], "Q": [48, 50], "K'": [41, 42], "R": [51, 52], "K": [[31, 36], [32, 37]], "V": [[33, 38], [35, 40]], "example": [30, 57]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has pants. Kenneth has pig. Mary has coffee. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n Premise: < Margaret has spaghetti. Jason has underwear. James has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of food? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [17, 18], "Q": [37, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 14]], "example": [1, 50]}, {"END": [101, 102], "A'": [98, 99], "V'": [57, 60], "Q": [90, 92], "K'": [55, 56], "R": [93, 94], "K": [[61, 67], [62, 68]], "V": [[63, 69], [66, 71]], "example": [51, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Brian has pants. Kenneth has pig. Mary has coffee. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n Premise: < Margaret has spaghetti. Jason has underwear. James has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [17, 18], "Q": [37, 39], "K'": [15, 16], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 14]], "example": [1, 50]}, {"END": [101, 102], "A'": [98, 99], "V'": [57, 60], "Q": [90, 92], "K'": [55, 56], "R": [93, 94], "K": [[61, 67], [62, 68]], "V": [[63, 69], [66, 71]], "example": [51, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has elephant. George has piano. Charles has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < Helen has plum. Christopher has monkey. David has bee. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [8, 11], "Q": [41, 43], "K'": [5, 7], "R": [44, 45], "K": [[12, 16], [13, 17]], "V": [[14, 18], [15, 22]], "example": [1, 54]}, {"END": [103, 104], "A'": [100, 101], "V'": [61, 63], "Q": [92, 94], "K'": [59, 60], "R": [95, 96], "K": [[64, 69], [65, 70]], "V": [[66, 71], [68, 73]], "example": [55, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has elephant. George has piano. Charles has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < Helen has plum. Christopher has monkey. David has bee. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of animal? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [8, 11], "Q": [41, 43], "K'": [5, 7], "R": [44, 45], "K": [[12, 16], [13, 17]], "V": [[14, 18], [15, 22]], "example": [1, 54]}, {"END": [103, 104], "A'": [100, 101], "V'": [61, 63], "Q": [92, 94], "K'": [59, 60], "R": [95, 96], "K": [[64, 69], [65, 70]], "V": [[66, 71], [68, 73]], "example": [55, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < William has durian. John has bus. Kimberly has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < Lisa has violin. Paul has spaghetti. Donna has gun. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [18, 20], "Q": [39, 41], "K'": [14, 17], "R": [42, 43], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 13]], "example": [1, 52]}, {"END": [102, 103], "A'": [99, 100], "V'": [64, 67], "Q": [91, 93], "K'": [62, 63], "R": [94, 95], "K": [[57, 68], [58, 70]], "V": [[59, 71], [61, 72]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < William has durian. John has bus. Kimberly has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < Lisa has violin. Paul has spaghetti. Donna has gun. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of instrument? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [18, 20], "Q": [39, 41], "K'": [14, 17], "R": [42, 43], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 13]], "example": [1, 52]}, {"END": [102, 103], "A'": [99, 100], "V'": [64, 67], "Q": [91, 93], "K'": [62, 63], "R": [94, 95], "K": [[57, 68], [58, 70]], "V": [[59, 71], [61, 72]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Charles has lion. Michelle has tea. Nancy has lime. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: Yes\n Premise: < Dorothy has cake. Mary has pineapple. Mark has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of insect? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [7, 9], "Q": [38, 40], "K'": [5, 6], "R": [41, 42], "K": [[10, 15], [12, 16]], "V": [[13, 17], [14, 19]], "example": [1, 51]}, {"END": [103, 104], "A'": [100, 101], "V'": [70, 73], "Q": [92, 94], "K'": [68, 69], "R": [95, 96], "K": [[56, 62], [58, 63]], "V": [[59, 64], [61, 67]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Charles has lion. Michelle has tea. Nancy has lime. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: Yes\n Premise: < Dorothy has cake. Mary has pineapple. Mark has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [7, 9], "Q": [38, 40], "K'": [5, 6], "R": [41, 42], "K": [[10, 15], [12, 16]], "V": [[13, 17], [14, 19]], "example": [1, 51]}, {"END": [103, 104], "A'": [100, 101], "V'": [70, 73], "Q": [92, 94], "K'": [68, 69], "R": [95, 96], "K": [[56, 62], [58, 63]], "V": [[59, 64], [61, 67]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has dog. Michelle has violin. Charles has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of instrument? Answer: Yes\n Premise: < Ruth has football. Brian has costume. Christopher has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [12, 14], "Q": [38, 40], "K'": [9, 11], "R": [41, 42], "K": [[5, 15], [6, 16]], "V": [[7, 17], [8, 19]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [58, 59], "Q": [88, 90], "K'": [56, 57], "R": [91, 92], "K": [[60, 65], [61, 66]], "V": [[62, 67], [64, 69]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has dog. Michelle has violin. Charles has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of instrument? Answer: Yes\n Premise: < Ruth has football. Brian has costume. Christopher has deer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [12, 14], "Q": [38, 40], "K'": [9, 11], "R": [41, 42], "K": [[5, 15], [6, 16]], "V": [[7, 17], [8, 19]], "example": [1, 51]}, {"END": [99, 100], "A'": [96, 97], "V'": [58, 59], "Q": [88, 90], "K'": [56, 57], "R": [91, 92], "K": [[60, 65], [61, 66]], "V": [[62, 67], [64, 69]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret has beer. Sarah has dog. Kevin has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n Premise: < Robert has jacket. David has peach. Lisa has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of weapon? Answer: Yes\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [16, 18], "Q": [37, 39], "K'": [14, 15], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 13]], "example": [1, 50]}, {"END": [99, 100], "A'": [96, 97], "V'": [67, 69], "Q": [88, 90], "K'": [65, 66], "R": [91, 92], "K": [[55, 60], [56, 61]], "V": [[57, 62], [59, 64]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret has beer. Sarah has dog. Kevin has burger. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n Premise: < Robert has jacket. David has peach. Lisa has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n", "ranges": [{"END": [48, 49], "A'": [45, 46], "V'": [16, 18], "Q": [37, 39], "K'": [14, 15], "R": [40, 41], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 13]], "example": [1, 50]}, {"END": [99, 100], "A'": [96, 97], "V'": [67, 69], "Q": [88, 90], "K'": [65, 66], "R": [91, 92], "K": [[55, 60], [56, 61]], "V": [[57, 62], [59, 64]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has durian. Carol has grenade. Steven has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of fruit? Answer: No\n Premise: < Donna has monkey. Sarah has horse. John has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [18, 20], "Q": [39, 41], "K'": [16, 17], "R": [42, 43], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 15]], "example": [1, 52]}, {"END": [102, 103], "A'": [99, 100], "V'": [69, 72], "Q": [91, 93], "K'": [67, 68], "R": [94, 95], "K": [[57, 63], [59, 64]], "V": [[60, 65], [62, 66]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has durian. Carol has grenade. Steven has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of fruit? Answer: No\n Premise: < Donna has monkey. Sarah has horse. John has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [18, 20], "Q": [39, 41], "K'": [16, 17], "R": [42, 43], "K": [[5, 10], [6, 11]], "V": [[7, 12], [9, 15]], "example": [1, 52]}, {"END": [102, 103], "A'": [99, 100], "V'": [69, 72], "Q": [91, 93], "K'": [67, 68], "R": [94, 95], "K": [[57, 63], [59, 64]], "V": [[60, 65], [62, 66]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Paul has jeep. Karen has grenade. James has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of vehicle? Answer: No\n Premise: < Robert has mouse. David has sheep. Sharon has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [13, 16], "Q": [41, 43], "K'": [10, 12], "R": [44, 45], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 22]], "example": [1, 54]}, {"END": [101, 102], "A'": [98, 99], "V'": [70, 71], "Q": [90, 92], "K'": [67, 69], "R": [93, 94], "K": [[59, 63], [60, 64]], "V": [[61, 65], [62, 66]], "example": [55, 103]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Paul has jeep. Karen has grenade. James has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of vehicle? Answer: No\n Premise: < Robert has mouse. David has sheep. Sharon has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of animal? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [13, 16], "Q": [41, 43], "K'": [10, 12], "R": [44, 45], "K": [[5, 17], [6, 18]], "V": [[7, 19], [9, 22]], "example": [1, 54]}, {"END": [101, 102], "A'": [98, 99], "V'": [70, 71], "Q": [90, 92], "K'": [67, 69], "R": [93, 94], "K": [[59, 63], [60, 64]], "V": [[61, 65], [62, 66]], "example": [55, 103]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pants is Brian's. The pig is Kenneth's. The coffee is Mary's. >. The boys do not own a kind of drink\n < The spaghetti is Jason's. The plum is Joseph's. The basketball is Nancy's. >. The boys do not own a kind of sport\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [19, 20], "Q": [27, 29], "K'": [21, 22], "R": [30, 31], "K": [[6, 14], [7, 15]], "V": [[3, 11], [5, 13]], "example": [1, 36]}, {"END": [71, 72], "A'": [72, 73], "V'": [56, 57], "Q": [64, 66], "K'": [58, 59], "R": [67, 68], "K": [[43, 51], [44, 52]], "V": [[39, 48], [42, 50]], "example": [37, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The car is Maria's. The whiskey is Jeff's. The wine is Robert's. >. The boys do not own a kind of vehicle\n < The goat is Christopher's. The donkey is Mark's. The piano is Karen's. >. The boys do not own a kind of instrument\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [3, 4], "Q": [26, 28], "K'": [5, 6], "R": [29, 30], "K": [[13, 20], [14, 21]], "V": [[10, 18], [12, 19]], "example": [1, 35]}, {"END": [70, 71], "A'": [71, 72], "V'": [54, 55], "Q": [63, 65], "K'": [56, 58], "R": [66, 67], "K": [[41, 49], [42, 50]], "V": [[38, 46], [40, 48]], "example": [36, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The baseball is Elizabeth's. The mosquito is Kevin's. The durian is Susan's. >. The girls do not own a kind of insect\n < The cherries is Paul's. The rifle is Kenneth's. The sheep is Sarah's. >. The boys do not own a kind of animal\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [10, 13], "Q": [28, 30], "K'": [14, 15], "R": [31, 32], "K": [[5, 22], [6, 23]], "V": [[3, 19], [4, 21]], "example": [1, 37]}, {"END": [71, 72], "A'": [72, 73], "V'": [56, 57], "Q": [64, 66], "K'": [58, 59], "R": [67, 68], "K": [[43, 51], [44, 52]], "V": [[40, 48], [42, 50]], "example": [38, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The whiskey is Richard's. The fox is Elizabeth's. The blackberries is Barbara's. >. The girls do not own a kind of drink\n < The lion is Daniel's. The tea is Margaret's. The lime is Michelle's. >. The girls do not own a kind of animal\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [3, 5], "Q": [29, 31], "K'": [6, 7], "R": [32, 33], "K": [[14, 23], [15, 24]], "V": [[11, 19], [13, 22]], "example": [1, 38]}, {"END": [73, 74], "A'": [74, 75], "V'": [41, 43], "Q": [66, 68], "K'": [44, 45], "R": [69, 70], "K": [[51, 59], [52, 61]], "V": [[49, 56], [50, 58]], "example": [39, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is Dorothy's. The pineapple is Mary's. The mosquito is Mark's. >. The girls do not own a kind of insect\n < The pants is William's. The vodka is Margaret's. The mouse is George's. >. The boys do not own a kind of drink\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [21, 24], "Q": [31, 33], "K'": [25, 26], "R": [34, 35], "K": [[6, 16], [8, 17]], "V": [[3, 12], [5, 15]], "example": [1, 40]}, {"END": [75, 76], "A'": [76, 77], "V'": [51, 54], "Q": [68, 70], "K'": [55, 56], "R": [71, 72], "K": [[46, 62], [47, 63]], "V": [[43, 60], [45, 61]], "example": [41, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bee is Jennifer's. T-shirt is Daniel's. The deer is Nancy's. >. The girls do not own a kind of clothes\n < The guitar is Kimberly's. The soda is Carol's. The grenade is Joseph's. >. The girls do not own a kind of weapon\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [11, 15], "Q": [30, 32], "K'": [16, 17], "R": [33, 34], "K": [[6, 24], [8, 25]], "V": [[3, 21], [5, 23]], "example": [1, 39]}, {"END": [76, 77], "A'": [77, 78], "V'": [59, 62], "Q": [69, 71], "K'": [63, 64], "R": [72, 73], "K": [[44, 54], [47, 55]], "V": [[42, 51], [43, 53]], "example": [40, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The hamburger is Betty's. The dog is James's. The plum is Ruth's. >. The girls do not own a kind of animal\n < The shotgun is Thomas's. The blackberries is Michael's. The guitar is Donna's. >. The boys do not own a kind of instrument\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [12, 13], "Q": [28, 30], "K'": [14, 15], "R": [31, 32], "K": [[7, 22], [8, 23]], "V": [[3, 19], [6, 21]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 75], "V'": [57, 58], "Q": [66, 68], "K'": [59, 61], "R": [69, 70], "K": [[43, 52], [44, 53]], "V": [[40, 48], [42, 51]], "example": [38, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The durian is Sarah's. The grenade is Carol's. The monkey is Charles's. >. The girls do not own a kind of animal\n < The violin is John's. The monkey is Kenneth's. The papaya is Carol's. >. The boys do not own a kind of fruit\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [20, 22], "Q": [29, 31], "K'": [23, 24], "R": [32, 33], "K": [[6, 15], [7, 16]], "V": [[3, 11], [5, 14]], "example": [1, 38]}, {"END": [73, 74], "A'": [74, 75], "V'": [57, 59], "Q": [66, 68], "K'": [60, 61], "R": [69, 70], "K": [[44, 52], [45, 53]], "V": [[41, 49], [43, 51]], "example": [39, 75]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Brian's. The pig is Kenneth's. The coffee is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n Premise: < The spaghetti is Margaret's. The underwear is Jason's. The papaya is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of food? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [22, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 17], [10, 18]], "V": [[6, 14], [8, 16]], "example": [1, 59]}, {"END": [119, 120], "A'": [116, 117], "V'": [65, 68], "Q": [108, 110], "K'": [69, 70], "R": [111, 112], "K": [[78, 86], [79, 87]], "V": [[74, 83], [77, 85]], "example": [60, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Brian's. The pig is Kenneth's. The coffee is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n Premise: < The spaghetti is Margaret's. The underwear is Jason's. The papaya is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [22, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 17], [10, 18]], "V": [[6, 14], [8, 16]], "example": [1, 59]}, {"END": [119, 120], "A'": [116, 117], "V'": [65, 68], "Q": [108, 110], "K'": [69, 70], "R": [111, 112], "K": [[78, 86], [79, 87]], "V": [[74, 83], [77, 85]], "example": [60, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Karen's. The piano is George's. The watermelon is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < The plum is Helen's. The monkey is Christopher's. The bee is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [6, 9], "Q": [50, 52], "K'": [10, 12], "R": [53, 54], "K": [[18, 28], [19, 29]], "V": [[16, 23], [17, 27]], "example": [1, 63]}, {"END": [121, 122], "A'": [118, 119], "V'": [69, 71], "Q": [110, 112], "K'": [72, 73], "R": [113, 114], "K": [[80, 88], [81, 89]], "V": [[77, 85], [79, 87]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Karen's. The piano is George's. The watermelon is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < The plum is Helen's. The monkey is Christopher's. The bee is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of animal? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [6, 9], "Q": [50, 52], "K'": [10, 12], "R": [53, 54], "K": [[18, 28], [19, 29]], "V": [[16, 23], [17, 27]], "example": [1, 63]}, {"END": [121, 122], "A'": [118, 119], "V'": [69, 71], "Q": [110, 112], "K'": [72, 73], "R": [113, 114], "K": [[80, 88], [81, 89]], "V": [[77, 85], [79, 87]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is William's. The bus is John's. The shoes is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < The violin is Lisa's. The spaghetti is Paul's. The gun is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [21, 23], "Q": [48, 50], "K'": [24, 27], "R": [51, 52], "K": [[9, 16], [10, 17]], "V": [[6, 14], [8, 15]], "example": [1, 61]}, {"END": [120, 121], "A'": [117, 118], "V'": [75, 78], "Q": [109, 111], "K'": [79, 80], "R": [112, 113], "K": [[70, 86], [71, 88]], "V": [[67, 84], [69, 85]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is William's. The bus is John's. The shoes is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n Premise: < The violin is Lisa's. The spaghetti is Paul's. The gun is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of instrument? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [21, 23], "Q": [48, 50], "K'": [24, 27], "R": [51, 52], "K": [[9, 16], [10, 17]], "V": [[6, 14], [8, 15]], "example": [1, 61]}, {"END": [120, 121], "A'": [117, 118], "V'": [75, 78], "Q": [109, 111], "K'": [79, 80], "R": [112, 113], "K": [[70, 86], [71, 88]], "V": [[67, 84], [69, 85]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Charles's. The tea is Michelle's. The lime is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: Yes\n Premise: < The cake is Dorothy's. The pineapple is Mary's. The mosquito is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of insect? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [6, 8], "Q": [47, 49], "K'": [9, 10], "R": [50, 51], "K": [[16, 25], [18, 26]], "V": [[14, 22], [15, 24]], "example": [1, 60]}, {"END": [121, 122], "A'": [118, 119], "V'": [84, 87], "Q": [110, 112], "K'": [88, 89], "R": [113, 114], "K": [[69, 79], [71, 80]], "V": [[66, 75], [68, 78]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Charles's. The tea is Michelle's. The lime is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: Yes\n Premise: < The cake is Dorothy's. The pineapple is Mary's. The mosquito is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [6, 8], "Q": [47, 49], "K'": [9, 10], "R": [50, 51], "K": [[16, 25], [18, 26]], "V": [[14, 22], [15, 24]], "example": [1, 60]}, {"END": [121, 122], "A'": [118, 119], "V'": [84, 87], "Q": [110, 112], "K'": [88, 89], "R": [113, 114], "K": [[69, 79], [71, 80]], "V": [[66, 75], [68, 78]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Jeff's. The violin is Michelle's. The pistol is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of instrument? Answer: Yes\n Premise: < The football is Ruth's. The costume is Brian's. The deer is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [13, 15], "Q": [47, 49], "K'": [16, 18], "R": [50, 51], "K": [[8, 25], [9, 26]], "V": [[6, 22], [7, 24]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [66, 67], "Q": [106, 108], "K'": [68, 69], "R": [109, 110], "K": [[76, 84], [77, 85]], "V": [[73, 81], [75, 83]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Jeff's. The violin is Michelle's. The pistol is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of instrument? Answer: Yes\n Premise: < The football is Ruth's. The costume is Brian's. The deer is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of clothes? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [13, 15], "Q": [47, 49], "K'": [16, 18], "R": [50, 51], "K": [[8, 25], [9, 26]], "V": [[6, 22], [7, 24]], "example": [1, 60]}, {"END": [117, 118], "A'": [114, 115], "V'": [66, 67], "Q": [106, 108], "K'": [68, 69], "R": [109, 110], "K": [[76, 84], [77, 85]], "V": [[73, 81], [75, 83]], "example": [61, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is Margaret's. The dog is Sarah's. The burger is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n Premise: < The jacket is Robert's. The peach is David's. The cannon is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of weapon? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [21, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 16], [10, 17]], "V": [[6, 14], [8, 15]], "example": [1, 59]}, {"END": [117, 118], "A'": [114, 115], "V'": [81, 83], "Q": [106, 108], "K'": [84, 85], "R": [109, 110], "K": [[68, 76], [69, 77]], "V": [[65, 73], [67, 75]], "example": [60, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The beer is Margaret's. The dog is Sarah's. The burger is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of food? Answer: Yes\n Premise: < The jacket is Robert's. The peach is David's. The cannon is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of fruit? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [21, 23], "Q": [46, 48], "K'": [24, 25], "R": [49, 50], "K": [[9, 16], [10, 17]], "V": [[6, 14], [8, 15]], "example": [1, 59]}, {"END": [117, 118], "A'": [114, 115], "V'": [81, 83], "Q": [106, 108], "K'": [84, 85], "R": [109, 110], "K": [[68, 76], [69, 77]], "V": [[65, 73], [67, 75]], "example": [60, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Sarah's. The grenade is Carol's. The monkey is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of fruit? Answer: No\n Premise: < The monkey is Donna's. The horse is Sarah's. The jersey is John's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of clothes? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [23, 25], "Q": [48, 50], "K'": [26, 27], "R": [51, 52], "K": [[9, 18], [10, 19]], "V": [[6, 14], [8, 17]], "example": [1, 61]}, {"END": [120, 121], "A'": [117, 118], "V'": [83, 86], "Q": [109, 111], "K'": [87, 88], "R": [112, 113], "K": [[70, 78], [72, 79]], "V": [[67, 76], [69, 77]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Sarah's. The grenade is Carol's. The monkey is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of fruit? Answer: No\n Premise: < The monkey is Donna's. The horse is Sarah's. The jersey is John's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a kind of animal? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [23, 25], "Q": [48, 50], "K'": [26, 27], "R": [51, 52], "K": [[9, 18], [10, 19]], "V": [[6, 14], [8, 17]], "example": [1, 61]}, {"END": [120, 121], "A'": [117, 118], "V'": [83, 86], "Q": [109, 111], "K'": [87, 88], "R": [112, 113], "K": [[70, 78], [72, 79]], "V": [[67, 76], [69, 77]], "example": [62, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Paul's. The grenade is Karen's. The trousers is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of vehicle? Answer: No\n Premise: < The mouse is Robert's. The sheep is David's. The baseball is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [14, 17], "Q": [50, 52], "K'": [18, 20], "R": [53, 54], "K": [[9, 28], [10, 29]], "V": [[6, 24], [8, 27]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [83, 84], "Q": [108, 110], "K'": [85, 87], "R": [111, 112], "K": [[71, 78], [72, 79]], "V": [[69, 76], [70, 77]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Paul's. The grenade is Karen's. The trousers is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of vehicle? Answer: No\n Premise: < The mouse is Robert's. The sheep is David's. The baseball is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a kind of animal? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [14, 17], "Q": [50, 52], "K'": [18, 20], "R": [53, 54], "K": [[9, 28], [10, 29]], "V": [[6, 24], [8, 27]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [83, 84], "Q": [108, 110], "K'": [85, 87], "R": [111, 112], "K": [[71, 78], [72, 79]], "V": [[69, 76], [70, 77]], "example": [64, 121]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon has cake. Betty has burger. Thomas has apple. >. So who owns a kind of fruit? the boy\n < Edward has costume. Kevin has cocktail. Nancy has peach. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [13, 14], "Q": [26, 27], "K": [15, 16], "R": null, "K'": [[5, 10], [7, 12]], "V'": [[2, 8], [4, 9]], "example": [1, 30]}, {"END": [59, 60], "A": [60, 61], "V": [43, 44], "Q": [57, 58], "K": [45, 47], "R": null, "K'": [[34, 39], [36, 42]], "V'": [[32, 37], [33, 38]], "example": [31, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Charles has wine. Susan has bread. Kimberly has rabbit. >. So who owns a kind of drink? the boy\n < Lisa has juice. Jennifer has cat. Donald has football. >. So who owns a kind of sport? the boy\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [2, 3], "Q": [26, 27], "K": [4, 5], "R": null, "K'": [[8, 14], [9, 16]], "V'": [[6, 10], [7, 13]], "example": [1, 30]}, {"END": [57, 58], "A": [58, 59], "V": [42, 43], "Q": [55, 56], "K": [44, 45], "R": null, "K'": [[34, 40], [36, 41]], "V'": [[32, 37], [33, 39]], "example": [31, 59]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Thomas has piano. Maria has cannon. Kenneth has vodka. >. So who owns a kind of weapon? the girl\n < Jennifer has spaghetti. Linda has durian. Daniel has juice. >. So who owns a kind of drink? the boy\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [6, 7], "Q": [26, 27], "K": [8, 10], "R": null, "K'": [[4, 13], [5, 16]], "V'": [[2, 11], [3, 12]], "example": [1, 30]}, {"END": [61, 62], "A": [62, 63], "V": [45, 46], "Q": [59, 60], "K": [47, 49], "R": null, "K'": [[35, 42], [38, 44]], "V'": [[32, 39], [34, 41]], "example": [31, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kenneth has mosquito. Michelle has football. Nancy has revolver. >. So who owns a kind of insect? the boy\n < Michelle has fox. George has mosquito. Elizabeth has cannon. >. So who owns a kind of insect? the boy\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [2, 3], "Q": [27, 28], "K": [4, 7], "R": null, "K'": [[11, 15], [12, 17]], "V'": [[8, 13], [10, 14]], "example": [1, 31]}, {"END": [61, 62], "A": [62, 63], "V": [39, 40], "Q": [59, 60], "K": [41, 44], "R": null, "K'": [[36, 47], [38, 49]], "V'": [[33, 45], [35, 46]], "example": [32, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Robert has blueberries. Deborah has violin. William has beetle. >. So who owns a kind of instrument? the girl\n < Jason has grenade. Elizabeth has shirt. Joseph has strawberries. >. So who owns a kind of clothes? the girl\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [8, 11], "Q": [30, 31], "K": [12, 14], "R": null, "K'": [[4, 17], [7, 20]], "V'": [[2, 15], [3, 16]], "example": [1, 34]}, {"END": [65, 66], "A": [66, 67], "V": [42, 43], "Q": [63, 64], "K": [44, 46], "R": null, "K'": [[38, 49], [41, 53]], "V'": [[36, 47], [37, 48]], "example": [35, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David has underwear. Daniel has pistol. Laura has squirrel. >. So who owns a kind of animal? the girl\n < Maria has kiwi. Jeff has shoes. Mark has deer. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [13, 14], "Q": [28, 29], "K": [15, 18], "R": null, "K'": [[4, 10], [7, 12]], "V'": [[2, 8], [3, 9]], "example": [1, 32]}, {"END": [60, 61], "A": [61, 62], "V": [34, 35], "Q": [58, 59], "K": [36, 38], "R": null, "K'": [[41, 46], [43, 48]], "V'": [[39, 44], [40, 45]], "example": [33, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Betty has blackberries. Nancy has plum. Edward has T-shirt. >. So who owns a kind of clothes? the boy\n < Richard has coffee. Michael has cow. Dorothy has burger. >. So who owns a kind of food? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [13, 14], "Q": [29, 30], "K": [15, 19], "R": null, "K'": [[4, 10], [7, 12]], "V'": [[2, 8], [3, 9]], "example": [1, 33]}, {"END": [60, 61], "A": [61, 62], "V": [43, 45], "Q": [58, 59], "K": [46, 48], "R": null, "K'": [[37, 41], [38, 42]], "V'": [[35, 39], [36, 40]], "example": [34, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon has grapes. Thomas has cannon. David has T-shirt. >. So who owns a kind of fruit? the girl\n < Kevin has baseball. Patricia has plum. Kenneth has wine. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [2, 4], "Q": [30, 31], "K": [5, 8], "R": null, "K'": [[11, 16], [13, 20]], "V'": [[9, 14], [10, 15]], "example": [1, 34]}, {"END": [62, 63], "A": [63, 64], "V": [40, 43], "Q": [60, 61], "K": [44, 46], "R": null, "K'": [[38, 49], [39, 50]], "V'": [[36, 47], [37, 48]], "example": [35, 64]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has cake. Betty has burger. Thomas has apple. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < Edward has uniform. Kevin has taxi. Nancy has meat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[8, 13], [10, 15]], "V'": [[5, 11], [7, 12]], "example": [1, 54]}, {"END": [104, 105], "A": [100, 102], "V": [68, 69], "Q": [98, 99], "K": [70, 71], "R": null, "K'": [[61, 65], [62, 67]], "V'": [[59, 63], [60, 64]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has cake. Betty has burger. Thomas has apple. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < Edward has uniform. Kevin has taxi. Nancy has meat. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [16, 17], "Q": [46, 47], "K": [18, 19], "R": null, "K'": [[8, 13], [10, 15]], "V'": [[5, 11], [7, 12]], "example": [1, 54]}, {"END": [104, 105], "A": [100, 102], "V": [68, 69], "Q": [98, 99], "K": [70, 71], "R": null, "K'": [[61, 65], [62, 67]], "V'": [[59, 63], [60, 64]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has cannon. Sarah has monkey. Brian has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < Daniel has piano. Sandra has goat. Karen has donkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is the boy? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [15, 16], "Q": [48, 49], "K": [17, 21], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 56]}, {"END": [109, 110], "A": [105, 107], "V": [61, 62], "Q": [103, 104], "K": [63, 64], "R": null, "K'": [[68, 74], [70, 76]], "V'": [[65, 71], [67, 73]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has cannon. Sarah has monkey. Brian has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < Daniel has piano. Sandra has goat. Karen has donkey. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is the girl? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [15, 16], "Q": [48, 49], "K": [17, 21], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 56]}, {"END": [109, 110], "A": [105, 107], "V": [61, 62], "Q": [103, 104], "K": [63, 64], "R": null, "K'": [[68, 74], [70, 76]], "V'": [[65, 71], [67, 73]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kenneth has tea. William has baseball. Karen has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: No\n Premise: < Karen has goat. William has beetle. Barbara has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [13, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [107, 108], "A": [103, 105], "V": [64, 65], "Q": [101, 102], "K": [66, 69], "R": null, "K'": [[61, 72], [63, 74]], "V'": [[58, 70], [60, 71]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kenneth has tea. William has baseball. Karen has lime. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: No\n Premise: < Karen has goat. William has beetle. Barbara has durian. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [13, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [107, 108], "A": [103, 105], "V": [64, 65], "Q": [101, 102], "K": [66, 69], "R": null, "K'": [[61, 72], [63, 74]], "V'": [[58, 70], [60, 71]], "example": [54, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has plum. George has bus. Elizabeth has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n Premise: < Deborah has beetle. Betty has handgun. Thomas has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [11, 12], "Q": [46, 47], "K": [13, 14], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[5, 15], [7, 16]], "example": [1, 54]}, {"END": [109, 110], "A": [105, 107], "V": [72, 73], "Q": [103, 104], "K": [74, 76], "R": null, "K'": [[63, 69], [66, 71]], "V'": [[59, 67], [62, 68]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michelle has plum. George has bus. Elizabeth has fox. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n Premise: < Deborah has beetle. Betty has handgun. Thomas has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the girl? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [11, 12], "Q": [46, 47], "K": [13, 14], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[5, 15], [7, 16]], "example": [1, 54]}, {"END": [109, 110], "A": [105, 107], "V": [72, 73], "Q": [103, 104], "K": [74, 76], "R": null, "K'": [[63, 69], [66, 71]], "V'": [[59, 67], [62, 68]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Patricia has rabbit. Charles has shotgun. Deborah has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is the girl? Answer: No\n Premise: < Brian has beetle. Barbara has mango. Lisa has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [12, 13], "Q": [50, 51], "K": [14, 16], "R": null, "K'": [[9, 21], [11, 23]], "V'": [[5, 17], [8, 20]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [63, 64], "Q": [104, 105], "K": [65, 68], "R": null, "K'": [[71, 76], [73, 77]], "V'": [[69, 74], [70, 75]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Patricia has rabbit. Charles has shotgun. Deborah has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is the girl? Answer: No\n Premise: < Brian has beetle. Barbara has mango. Lisa has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [12, 13], "Q": [50, 51], "K": [14, 16], "R": null, "K'": [[9, 21], [11, 23]], "V'": [[5, 17], [8, 20]], "example": [1, 58]}, {"END": [110, 111], "A": [106, 108], "V": [63, 64], "Q": [104, 105], "K": [65, 68], "R": null, "K'": [[71, 76], [73, 77]], "V'": [[69, 74], [70, 75]], "example": [59, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has guitar. Kevin has cherries. Sarah has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the girl? Answer: Yes\n Premise: < Jennifer has hamburger. Elizabeth has guitar. Donald has gorilla. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the boy? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [14, 15], "Q": [44, 45], "K": [16, 17], "R": null, "K'": [[7, 11], [8, 13]], "V'": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [106, 107], "A": [102, 104], "V": [68, 69], "Q": [100, 101], "K": [70, 73], "R": null, "K'": [[60, 66], [63, 67]], "V'": [[57, 64], [59, 65]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has guitar. Kevin has cherries. Sarah has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the girl? Answer: Yes\n Premise: < Jennifer has hamburger. Elizabeth has guitar. Donald has gorilla. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the girl? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [14, 15], "Q": [44, 45], "K": [16, 17], "R": null, "K'": [[7, 11], [8, 13]], "V'": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [106, 107], "A": [102, 104], "V": [68, 69], "Q": [100, 101], "K": [70, 73], "R": null, "K'": [[60, 66], [63, 67]], "V'": [[57, 64], [59, 65]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has football. Thomas has shotgun. George has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the boy? Answer: No\n Premise: < Betty has plum. Daniel has mouse. Maria has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [45, 46], "K": [7, 8], "R": null, "K'": [[11, 16], [13, 18]], "V'": [[9, 14], [10, 15]], "example": [1, 53]}, {"END": [106, 107], "A": [102, 104], "V": [63, 64], "Q": [100, 101], "K": [65, 66], "R": null, "K'": [[60, 69], [62, 73]], "V'": [[58, 67], [59, 68]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has football. Thomas has shotgun. George has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the boy? Answer: No\n Premise: < Betty has plum. Daniel has mouse. Maria has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [45, 46], "K": [7, 8], "R": null, "K'": [[11, 16], [13, 18]], "V'": [[9, 14], [10, 15]], "example": [1, 53]}, {"END": [106, 107], "A": [102, 104], "V": [63, 64], "Q": [100, 101], "K": [65, 66], "R": null, "K'": [[60, 69], [62, 73]], "V'": [[58, 67], [59, 68]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has goose. Barbara has piano. Steven has banana. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: Yes\n Premise: < Richard has bus. Laura has gun. Maria has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [14, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 12], [9, 13]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [105, 106], "A": [101, 103], "V": [58, 59], "Q": [99, 100], "K": [60, 61], "R": null, "K'": [[64, 68], [65, 72]], "V'": [[62, 66], [63, 67]], "example": [54, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has goose. Barbara has piano. Steven has banana. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: Yes\n Premise: < Richard has bus. Laura has gun. Maria has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [14, 15], "Q": [45, 46], "K": [16, 18], "R": null, "K'": [[7, 12], [9, 13]], "V'": [[5, 10], [6, 11]], "example": [1, 53]}, {"END": [105, 106], "A": [101, 103], "V": [58, 59], "Q": [99, 100], "K": [60, 61], "R": null, "K'": [[64, 68], [65, 72]], "V'": [[62, 66], [63, 67]], "example": [54, 107]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is Sharon's. The burger is Betty's. The apple is Thomas's. >. So who owns a kind of fruit? the boy\n < The costume is Edward's. The cocktail is Kevin's. The peach is Nancy's. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [22, 23], "Q": [35, 36], "K": [20, 21], "R": null, "K'": [[3, 12], [5, 14]], "V'": [[6, 15], [8, 16]], "example": [1, 39]}, {"END": [77, 78], "A": [78, 79], "V": [62, 63], "Q": [75, 76], "K": [59, 61], "R": null, "K'": [[42, 50], [44, 53]], "V'": [[45, 54], [46, 55]], "example": [40, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The wine is Charles's. The bread is Susan's. The rabbit is Kimberly's. >. So who owns a kind of drink? the boy\n < The juice is Lisa's. The cat is Jennifer's. The football is Donald's. >. So who owns a kind of sport? the boy\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [5, 6], "Q": [35, 36], "K": [3, 4], "R": null, "K'": [[10, 17], [11, 19]], "V'": [[12, 20], [13, 23]], "example": [1, 39]}, {"END": [75, 76], "A": [76, 77], "V": [60, 61], "Q": [73, 74], "K": [58, 59], "R": null, "K'": [[42, 50], [44, 51]], "V'": [[45, 52], [46, 54]], "example": [40, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The piano is Thomas's. The cannon is Maria's. The vodka is Kenneth's. >. So who owns a kind of weapon? the girl\n < The spaghetti is Jennifer's. The durian is Linda's. The juice is Daniel's. >. So who owns a kind of drink? the boy\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [13, 14], "Q": [35, 36], "K": [10, 12], "R": null, "K'": [[3, 18], [4, 21]], "V'": [[5, 22], [6, 23]], "example": [1, 39]}, {"END": [79, 80], "A": [80, 81], "V": [64, 65], "Q": [77, 78], "K": [61, 63], "R": null, "K'": [[42, 52], [45, 54]], "V'": [[46, 55], [48, 57]], "example": [40, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mosquito is Kenneth's. The football is Michelle's. The revolver is Nancy's. >. So who owns a kind of insect? the boy\n < The fox is Michelle's. The mosquito is George's. The cannon is Elizabeth's. >. So who owns a kind of insect? the boy\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [7, 8], "Q": [36, 37], "K": [3, 6], "R": null, "K'": [[12, 20], [13, 22]], "V'": [[14, 23], [16, 24]], "example": [1, 40]}, {"END": [79, 80], "A": [80, 81], "V": [56, 57], "Q": [77, 78], "K": [52, 55], "R": null, "K'": [[43, 61], [45, 63]], "V'": [[46, 64], [48, 65]], "example": [41, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blueberries is Robert's. The violin is Deborah's. The beetle is William's. >. So who owns a kind of instrument? the girl\n < The grenade is Jason's. The shirt is Elizabeth's. The strawberries is Joseph's. >. So who owns a kind of clothes? the girl\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [15, 18], "Q": [39, 40], "K": [12, 14], "R": null, "K'": [[3, 22], [6, 25]], "V'": [[7, 26], [8, 27]], "example": [1, 43]}, {"END": [83, 84], "A": [84, 85], "V": [58, 59], "Q": [81, 82], "K": [55, 57], "R": null, "K'": [[46, 63], [49, 67]], "V'": [[50, 68], [51, 69]], "example": [44, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The underwear is David's. The pistol is Daniel's. The squirrel is Laura's. >. So who owns a kind of animal? the girl\n < The kiwi is Maria's. The shoes is Jeff's. The deer is Mark's. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [24, 25], "Q": [37, 38], "K": [20, 23], "R": null, "K'": [[3, 12], [6, 14]], "V'": [[7, 15], [8, 16]], "example": [1, 41]}, {"END": [78, 79], "A": [79, 80], "V": [47, 48], "Q": [76, 77], "K": [44, 46], "R": null, "K'": [[52, 60], [54, 62]], "V'": [[55, 63], [56, 64]], "example": [42, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Betty's. The plum is Nancy's. T-shirt is Edward's. >. So who owns a kind of clothes? the boy\n < The coffee is Richard's. The cow is Michael's. The burger is Dorothy's. >. So who owns a kind of food? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [24, 25], "Q": [37, 38], "K": [19, 23], "R": null, "K'": [[3, 12], [6, 14]], "V'": [[7, 15], [8, 16]], "example": [1, 41]}, {"END": [77, 78], "A": [78, 79], "V": [61, 63], "Q": [75, 76], "K": [58, 60], "R": null, "K'": [[44, 51], [45, 52]], "V'": [[46, 53], [47, 54]], "example": [42, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The grapes is Sharon's. The cannon is Thomas's. T-shirt is David's. >. So who owns a kind of fruit? the girl\n < The baseball is Kevin's. The plum is Patricia's. The wine is Kenneth's. >. So who owns a kind of fruit? the girl\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [7, 9], "Q": [38, 39], "K": [3, 6], "R": null, "K'": [[13, 20], [15, 24]], "V'": [[16, 25], [17, 26]], "example": [1, 42]}, {"END": [79, 80], "A": [80, 81], "V": [55, 58], "Q": [77, 78], "K": [52, 54], "R": null, "K'": [[45, 62], [46, 63]], "V'": [[47, 64], [48, 65]], "example": [43, 81]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Sharon's. The burger is Betty's. The apple is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < The uniform is Edward's. The taxi is Kevin's. The meat is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 19]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [86, 87], "Q": [116, 117], "K": [84, 85], "R": null, "K'": [[69, 76], [70, 78]], "V'": [[71, 79], [72, 80]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Sharon's. The burger is Betty's. The apple is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < The uniform is Edward's. The taxi is Kevin's. The meat is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [25, 26], "Q": [55, 56], "K": [23, 24], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 19]], "example": [1, 63]}, {"END": [122, 123], "A": [118, 120], "V": [86, 87], "Q": [116, 117], "K": [84, 85], "R": null, "K'": [[69, 76], [70, 78]], "V'": [[71, 79], [72, 80]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cannon is Betty's. The monkey is Sarah's. The strawberries is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < The piano is Daniel's. The goat is Sandra's. The donkey is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is the boy? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [27, 28], "Q": [57, 58], "K": [22, 26], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 65]}, {"END": [127, 128], "A": [123, 125], "V": [73, 74], "Q": [121, 122], "K": [71, 72], "R": null, "K'": [[78, 87], [80, 89]], "V'": [[81, 90], [83, 92]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cannon is Betty's. The monkey is Sarah's. The strawberries is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the girl? Answer: No\n Premise: < The piano is Daniel's. The goat is Sandra's. The donkey is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is the girl? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [27, 28], "Q": [57, 58], "K": [22, 26], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 65]}, {"END": [127, 128], "A": [123, 125], "V": [73, 74], "Q": [121, 122], "K": [71, 72], "R": null, "K'": [[78, 87], [80, 89]], "V'": [[81, 90], [83, 92]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Kenneth's. The baseball is William's. The lime is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: No\n Premise: < The goat is Karen's. The beetle is William's. The durian is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [23, 25], "Q": [54, 55], "K": [20, 22], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 62]}, {"END": [125, 126], "A": [121, 123], "V": [81, 82], "Q": [119, 120], "K": [77, 80], "R": null, "K'": [[68, 86], [70, 88]], "V'": [[71, 89], [73, 90]], "example": [63, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The tea is Kenneth's. The baseball is William's. The lime is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: No\n Premise: < The goat is Karen's. The beetle is William's. The durian is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [23, 25], "Q": [54, 55], "K": [20, 22], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 62]}, {"END": [125, 126], "A": [121, 123], "V": [81, 82], "Q": [119, 120], "K": [77, 80], "R": null, "K'": [[68, 86], [70, 88]], "V'": [[71, 89], [73, 90]], "example": [63, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Michelle's. The bus is George's. The fox is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n Premise: < The beetle is Deborah's. The handgun is Betty's. The motorcycle is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [17, 18], "Q": [55, 56], "K": [15, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [11, 26]], "example": [1, 63]}, {"END": [127, 128], "A": [123, 125], "V": [91, 92], "Q": [121, 122], "K": [88, 90], "R": null, "K'": [[69, 80], [72, 82]], "V'": [[73, 83], [76, 84]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Michelle's. The bus is George's. The fox is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n Premise: < The beetle is Deborah's. The handgun is Betty's. The motorcycle is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the girl? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [17, 18], "Q": [55, 56], "K": [15, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [11, 26]], "example": [1, 63]}, {"END": [127, 128], "A": [123, 125], "V": [91, 92], "Q": [121, 122], "K": [88, 90], "R": null, "K'": [[69, 80], [72, 82]], "V'": [[73, 83], [76, 84]], "example": [64, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Patricia's. The shotgun is Charles's. The taxi is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is the girl? Answer: No\n Premise: < The beetle is Brian's. The mango is Barbara's. The sheep is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the boy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [19, 20], "Q": [59, 60], "K": [16, 18], "R": null, "K'": [[6, 24], [8, 26]], "V'": [[9, 27], [12, 30]], "example": [1, 67]}, {"END": [128, 129], "A": [124, 126], "V": [77, 78], "Q": [122, 123], "K": [73, 76], "R": null, "K'": [[82, 90], [84, 91]], "V'": [[85, 92], [86, 93]], "example": [68, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Patricia's. The shotgun is Charles's. The taxi is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is the girl? Answer: No\n Premise: < The beetle is Brian's. The mango is Barbara's. The sheep is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is the girl? Answer: No\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [19, 20], "Q": [59, 60], "K": [16, 18], "R": null, "K'": [[6, 24], [8, 26]], "V'": [[9, 27], [12, 30]], "example": [1, 67]}, {"END": [128, 129], "A": [124, 126], "V": [77, 78], "Q": [122, 123], "K": [73, 76], "R": null, "K'": [[82, 90], [84, 91]], "V'": [[85, 92], [86, 93]], "example": [68, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Joseph's. The cherries is Kevin's. The baseball is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the girl? Answer: Yes\n Premise: < The hamburger is Jennifer's. The guitar is Elizabeth's. The gorilla is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the boy? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [23, 24], "Q": [53, 54], "K": [21, 22], "R": null, "K'": [[6, 13], [7, 15]], "V'": [[8, 16], [9, 17]], "example": [1, 61]}, {"END": [124, 125], "A": [120, 122], "V": [88, 89], "Q": [118, 119], "K": [84, 87], "R": null, "K'": [[67, 77], [70, 78]], "V'": [[71, 79], [73, 80]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Joseph's. The cherries is Kevin's. The baseball is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the girl? Answer: Yes\n Premise: < The hamburger is Jennifer's. The guitar is Elizabeth's. The gorilla is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the girl? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [23, 24], "Q": [53, 54], "K": [21, 22], "R": null, "K'": [[6, 13], [7, 15]], "V'": [[8, 16], [9, 17]], "example": [1, 61]}, {"END": [124, 125], "A": [120, 122], "V": [88, 89], "Q": [118, 119], "K": [84, 87], "R": null, "K'": [[67, 77], [70, 78]], "V'": [[71, 79], [73, 80]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The football is Maria's. The shotgun is Thomas's. The motorcycle is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the boy? Answer: No\n Premise: < The plum is Betty's. The mouse is Daniel's. The strawberries is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [8, 9], "Q": [54, 55], "K": [6, 7], "R": null, "K'": [[13, 21], [15, 23]], "V'": [[16, 24], [17, 25]], "example": [1, 62]}, {"END": [124, 125], "A": [120, 122], "V": [78, 79], "Q": [118, 119], "K": [76, 77], "R": null, "K'": [[68, 83], [70, 87]], "V'": [[71, 88], [72, 89]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The football is Maria's. The shotgun is Thomas's. The motorcycle is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is the boy? Answer: No\n Premise: < The plum is Betty's. The mouse is Daniel's. The strawberries is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [8, 9], "Q": [54, 55], "K": [6, 7], "R": null, "K'": [[13, 21], [15, 23]], "V'": [[16, 24], [17, 25]], "example": [1, 62]}, {"END": [124, 125], "A": [120, 122], "V": [78, 79], "Q": [118, 119], "K": [76, 77], "R": null, "K'": [[68, 83], [70, 87]], "V'": [[71, 88], [72, 89]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goose is Maria's. The piano is Barbara's. The banana is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: Yes\n Premise: < The bus is Richard's. The gun is Laura's. The watermelon is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [24, 25], "Q": [54, 55], "K": [21, 23], "R": null, "K'": [[6, 14], [8, 15]], "V'": [[9, 16], [10, 17]], "example": [1, 62]}, {"END": [123, 124], "A": [119, 121], "V": [70, 71], "Q": [117, 118], "K": [68, 69], "R": null, "K'": [[75, 82], [76, 86]], "V'": [[77, 87], [78, 88]], "example": [63, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goose is Maria's. The piano is Barbara's. The banana is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is the boy? Answer: Yes\n Premise: < The bus is Richard's. The gun is Laura's. The watermelon is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [24, 25], "Q": [54, 55], "K": [21, 23], "R": null, "K'": [[6, 14], [8, 15]], "V'": [[9, 16], [10, 17]], "example": [1, 62]}, {"END": [123, 124], "A": [119, 121], "V": [70, 71], "Q": [117, 118], "K": [68, 69], "R": null, "K'": [[75, 82], [76, 86]], "V'": [[77, 87], [78, 88]], "example": [63, 125]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon has lemon. Betty has plum. Thomas has lion. >. The one who owns a kind of fruit is not the boy\n < Donald has soda. Helen has pineapple. Elizabeth has plum. >. The one who owns a kind of fruit is not the boy\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [13, 14], "Q": [28, 29], "K'": [15, 17], "R": [30, 31], "K": [[5, 10], [7, 12]], "V": [[2, 8], [4, 9]], "example": [1, 33]}, {"END": [64, 65], "A'": [65, 66], "V'": [35, 36], "Q": [61, 62], "K'": [37, 39], "R": [63, 64], "K": [[42, 48], [45, 50]], "V": [[40, 46], [41, 47]], "example": [34, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Christopher has beer. Karen has bus. Sandra has jeep. >. The one who owns a kind of vehicle is not the boy\n < Jason has fox. Charles has lion. Elizabeth has trousers. >. The one who owns a kind of animal is not the girl\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [2, 3], "Q": [28, 29], "K'": [4, 6], "R": [30, 31], "K": [[10, 15], [11, 17]], "V": [[7, 12], [9, 14]], "example": [1, 33]}, {"END": [64, 65], "A'": [65, 66], "V'": [45, 46], "Q": [61, 62], "K'": [47, 50], "R": [63, 64], "K": [[37, 42], [39, 44]], "V": [[35, 40], [36, 41]], "example": [34, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Susan has steak. Charles has monkey. Maria has bread. >. The one who owns a kind of food is not the boy\n < Deborah has basketball. Linda has football. Thomas has blackberries. >. The one who owns a kind of sport is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [7, 8], "Q": [26, 27], "K'": [9, 11], "R": [28, 29], "K": [[4, 14], [6, 15]], "V": [[2, 12], [3, 13]], "example": [1, 31]}, {"END": [63, 64], "A'": [64, 65], "V'": [44, 45], "Q": [60, 61], "K'": [46, 49], "R": [62, 63], "K": [[37, 42], [38, 43]], "V": [[33, 39], [36, 41]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Ronald has blackberries. Kevin has apricot. Elizabeth has soda. >. The one who owns a kind of fruit is not the girl\n < Barbara has guitar. Lisa has violin. Joseph has pizza. >. The one who owns a kind of instrument is not the boy\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [15, 16], "Q": [30, 31], "K'": [17, 19], "R": [32, 33], "K": [[5, 11], [8, 14]], "V": [[2, 9], [4, 10]], "example": [1, 35]}, {"END": [64, 65], "A'": [65, 66], "V'": [46, 47], "Q": [61, 62], "K'": [48, 50], "R": [63, 64], "K": [[39, 43], [40, 45]], "V": [[37, 41], [38, 42]], "example": [36, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Betty has goat. James has violin. Thomas has guitar. >. The one who owns a kind of instrument is not the girl\n < Jeff has durian. Margaret has spaghetti. John has orange. >. The one who owns a kind of fruit is not the girl\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [26, 27], "K'": [4, 6], "R": [28, 29], "K": [[9, 14], [11, 15]], "V": [[7, 12], [8, 13]], "example": [1, 31]}, {"END": [61, 62], "A'": [62, 63], "V'": [38, 39], "Q": [58, 59], "K'": [40, 43], "R": [60, 61], "K": [[35, 46], [37, 47]], "V": [[33, 44], [34, 45]], "example": [32, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Susan has cocktail. Laura has tea. George has pants. >. The one who owns a kind of drink is not the boy\n < John has pear. Betty has jersey. Kenneth has kiwi. >. The one who owns a kind of fruit is not the girl\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [12, 13], "Q": [27, 28], "K'": [14, 16], "R": [29, 30], "K": [[4, 10], [7, 11]], "V": [[2, 8], [3, 9]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 65], "V'": [39, 40], "Q": [60, 61], "K'": [41, 44], "R": [62, 63], "K": [[36, 47], [38, 49]], "V": [[34, 45], [35, 46]], "example": [33, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Nancy has bus. Daniel has violin. Lisa has taxi. >. The one who owns a kind of vehicle is not the boy\n < David has plum. Linda has piano. Lisa has guitar. >. The one who owns a kind of instrument is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [6, 7], "Q": [26, 27], "K'": [8, 10], "R": [28, 29], "K": [[4, 13], [5, 15]], "V": [[2, 11], [3, 12]], "example": [1, 31]}, {"END": [60, 61], "A'": [61, 62], "V'": [33, 34], "Q": [57, 58], "K'": [35, 37], "R": [59, 60], "K": [[41, 45], [42, 46]], "V": [[38, 43], [40, 44]], "example": [32, 62]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< George has jersey. Dorothy has wine. Sandra has juice. >. The one who owns a kind of drink is not the boy\n < George has uniform. Robert has costume. Sharon has horse. >. The one who owns a kind of clothes is not the girl\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [29, 30], "K'": [4, 7], "R": [31, 32], "K": [[11, 16], [12, 18]], "V": [[8, 13], [10, 15]], "example": [1, 34]}, {"END": [63, 64], "A'": [64, 65], "V'": [45, 47], "Q": [60, 61], "K'": [48, 49], "R": [62, 63], "K": [[38, 42], [39, 44]], "V": [[36, 40], [37, 41]], "example": [35, 65]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has lemon. Betty has plum. Thomas has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < Edward has pizza. Kevin has hamburger. Nancy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not the girl? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [16, 17], "Q": [47, 48], "K'": [18, 20], "R": [49, 50], "K": [[8, 13], [10, 15]], "V": [[5, 11], [7, 12]], "example": [1, 56]}, {"END": [110, 111], "A'": [106, 108], "V'": [72, 73], "Q": [103, 104], "K'": [74, 76], "R": [105, 106], "K": [[63, 68], [65, 71]], "V": [[61, 66], [62, 67]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sharon has lemon. Betty has plum. Thomas has lion. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < Edward has pizza. Kevin has hamburger. Nancy has lemon. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not the boy? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [16, 17], "Q": [47, 48], "K'": [18, 20], "R": [49, 50], "K": [[8, 13], [10, 15]], "V": [[5, 11], [7, 12]], "example": [1, 56]}, {"END": [110, 111], "A'": [106, 108], "V'": [72, 73], "Q": [103, 104], "K'": [74, 76], "R": [105, 106], "K": [[63, 68], [65, 71]], "V": [[61, 66], [62, 67]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has blueberries. Sarah has grapes. Brian has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < Lisa has grapes. George has piano. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [17, 18], "Q": [48, 49], "K'": [19, 21], "R": [50, 51], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 57]}, {"END": [109, 110], "A'": [105, 107], "V'": [62, 63], "Q": [102, 103], "K'": [64, 67], "R": [104, 105], "K": [[70, 74], [71, 75]], "V": [[68, 72], [69, 73]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has blueberries. Sarah has grapes. Brian has bee. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < Lisa has grapes. George has piano. Daniel has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [17, 18], "Q": [48, 49], "K'": [19, 21], "R": [50, 51], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 57]}, {"END": [109, 110], "A'": [105, 107], "V'": [62, 63], "Q": [102, 103], "K'": [64, 67], "R": [104, 105], "K": [[70, 74], [71, 75]], "V": [[68, 72], [69, 73]], "example": [58, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < William has kiwi. Donald has plum. Donna has tea. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: No\n Premise: < Karen has mosquito. William has burger. Barbara has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not the boy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [46, 47], "K'": [18, 19], "R": [48, 49], "K": [[7, 12], [9, 14]], "V": [[5, 10], [6, 11]], "example": [1, 55]}, {"END": [111, 112], "A'": [107, 109], "V'": [67, 68], "Q": [104, 105], "K'": [69, 71], "R": [106, 107], "K": [[63, 74], [66, 77]], "V": [[60, 72], [62, 73]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < William has kiwi. Donald has plum. Donna has tea. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: No\n Premise: < Karen has mosquito. William has burger. Barbara has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not the girl? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [46, 47], "K'": [18, 19], "R": [48, 49], "K": [[7, 12], [9, 14]], "V": [[5, 10], [6, 11]], "example": [1, 55]}, {"END": [111, 112], "A'": [107, 109], "V'": [67, 68], "Q": [104, 105], "K'": [69, 71], "R": [106, 107], "K": [[63, 74], [66, 77]], "V": [[60, 72], [62, 73]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has vodka. Jennifer has jeep. Sandra has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n Premise: < Sandra has taxi. Sharon has motorcycle. Thomas has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 6], "Q": [49, 50], "K'": [7, 10], "R": [51, 52], "K": [[14, 20], [16, 22]], "V": [[11, 17], [13, 19]], "example": [1, 58]}, {"END": [113, 114], "A'": [109, 111], "V'": [75, 76], "Q": [106, 107], "K'": [77, 79], "R": [108, 109], "K": [[66, 72], [68, 74]], "V": [[63, 69], [65, 71]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jeff has vodka. Jennifer has jeep. Sandra has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n Premise: < Sandra has taxi. Sharon has motorcycle. Thomas has juice. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 6], "Q": [49, 50], "K'": [7, 10], "R": [51, 52], "K": [[14, 20], [16, 22]], "V": [[11, 17], [13, 19]], "example": [1, 58]}, {"END": [113, 114], "A'": [109, 111], "V'": [75, 76], "Q": [106, 107], "K'": [77, 79], "R": [108, 109], "K": [[66, 72], [68, 74]], "V": [[63, 69], [65, 71]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald has taxi. Susan has shotgun. Deborah has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not the girl? Answer: No\n Premise: < Lisa has pig. Edward has papaya. Sharon has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 7], "Q": [49, 50], "K'": [8, 10], "R": [51, 52], "K": [[13, 20], [15, 22]], "V": [[11, 16], [12, 19]], "example": [1, 58]}, {"END": [112, 113], "A'": [108, 110], "V'": [68, 69], "Q": [105, 106], "K'": [70, 72], "R": [107, 108], "K": [[65, 76], [67, 78]], "V": [[63, 73], [64, 75]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald has taxi. Susan has shotgun. Deborah has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not the girl? Answer: No\n Premise: < Lisa has pig. Edward has papaya. Sharon has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [5, 7], "Q": [49, 50], "K'": [8, 10], "R": [51, 52], "K": [[13, 20], [15, 22]], "V": [[11, 16], [12, 19]], "example": [1, 58]}, {"END": [112, 113], "A'": [108, 110], "V'": [68, 69], "Q": [105, 106], "K'": [70, 72], "R": [107, 108], "K": [[65, 76], [67, 78]], "V": [[63, 73], [64, 75]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has piano. Kevin has guitar. Sarah has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n Premise: < Jennifer has gorilla. Elizabeth has sheep. Donald has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [13, 14], "Q": [44, 45], "K'": [15, 17], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [106, 107], "A'": [102, 104], "V'": [69, 70], "Q": [99, 100], "K'": [71, 72], "R": [101, 102], "K": [[61, 67], [64, 68]], "V": [[58, 65], [60, 66]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Joseph has piano. Kevin has guitar. Sarah has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n Premise: < Jennifer has gorilla. Elizabeth has sheep. Donald has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [13, 14], "Q": [44, 45], "K'": [15, 17], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [106, 107], "A'": [102, 104], "V'": [69, 70], "Q": [99, 100], "K'": [71, 72], "R": [101, 102], "K": [[61, 67], [64, 68]], "V": [[58, 65], [60, 66]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has deer. Thomas has basketball. George has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not the boy? Answer: No\n Premise: < Betty has monkey. Richard has strawberries. Maria has goose. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 6], "Q": [44, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 16], [13, 17]], "V": [[10, 14], [11, 15]], "example": [1, 53]}, {"END": [108, 109], "A'": [104, 106], "V'": [63, 64], "Q": [101, 102], "K'": [65, 69], "R": [103, 104], "K": [[60, 72], [62, 74]], "V": [[58, 70], [59, 71]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has deer. Thomas has basketball. George has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not the boy? Answer: No\n Premise: < Betty has monkey. Richard has strawberries. Maria has goose. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [5, 6], "Q": [44, 45], "K'": [7, 9], "R": [46, 47], "K": [[12, 16], [13, 17]], "V": [[10, 14], [11, 15]], "example": [1, 53]}, {"END": [108, 109], "A'": [104, 106], "V'": [63, 64], "Q": [101, 102], "K'": [65, 69], "R": [103, 104], "K": [[60, 72], [62, 74]], "V": [[58, 70], [59, 71]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has apple. Barbara has kiwi. Steven has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: Yes\n Premise: < Richard has taxi. Michelle has strawberries. Anthony has bus. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [14, 15], "Q": [44, 45], "K'": [16, 17], "R": [46, 47], "K": [[7, 11], [8, 13]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [108, 109], "A'": [104, 106], "V'": [63, 65], "Q": [101, 102], "K'": [66, 70], "R": [103, 104], "K": [[60, 73], [62, 74]], "V": [[58, 71], [59, 72]], "example": [54, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has apple. Barbara has kiwi. Steven has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: Yes\n Premise: < Richard has taxi. Michelle has strawberries. Anthony has bus. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [14, 15], "Q": [44, 45], "K'": [16, 17], "R": [46, 47], "K": [[7, 11], [8, 13]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [108, 109], "A'": [104, 106], "V'": [63, 65], "Q": [101, 102], "K'": [66, 70], "R": [103, 104], "K": [[60, 73], [62, 74]], "V": [[58, 71], [59, 72]], "example": [54, 110]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lemon is Sharon's. The plum is Betty's. The lion is Thomas's. >. The one who owns a kind of fruit is not the boy\n < The soda is Donald's. The pineapple is Helen's. The plum is Elizabeth's. >. The one who owns a kind of fruit is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [23, 24], "Q": [37, 38], "K'": [20, 22], "R": [39, 40], "K": [[3, 12], [5, 14]], "V": [[6, 15], [8, 16]], "example": [1, 42]}, {"END": [82, 83], "A'": [83, 84], "V'": [48, 49], "Q": [79, 80], "K'": [45, 47], "R": [81, 82], "K": [[53, 62], [56, 64]], "V": [[57, 65], [58, 66]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The beer is Christopher's. The bus is Karen's. The jeep is Sandra's. >. The one who owns a kind of vehicle is not the boy\n < The fox is Jason's. The lion is Charles's. The trousers is Elizabeth's. >. The one who owns a kind of animal is not the girl\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [6, 7], "Q": [37, 38], "K'": [3, 5], "R": [39, 40], "K": [[11, 19], [12, 21]], "V": [[13, 22], [15, 24]], "example": [1, 42]}, {"END": [82, 83], "A'": [83, 84], "V'": [65, 66], "Q": [79, 80], "K'": [61, 64], "R": [81, 82], "K": [[45, 53], [47, 55]], "V": [[48, 56], [49, 57]], "example": [43, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The steak is Susan's. The monkey is Charles's. The bread is Maria's. >. The one who owns a kind of food is not the boy\n < The basketball is Deborah's. The football is Linda's. The blackberries is Thomas's. >. The one who owns a kind of sport is not the boy\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [14, 15], "Q": [35, 36], "K'": [11, 13], "R": [37, 38], "K": [[3, 19], [5, 20]], "V": [[6, 21], [7, 22]], "example": [1, 40]}, {"END": [81, 82], "A'": [82, 83], "V'": [64, 65], "Q": [78, 79], "K'": [60, 63], "R": [80, 81], "K": [[43, 52], [44, 53]], "V": [[45, 54], [48, 56]], "example": [41, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Ronald's. The apricot is Kevin's. The soda is Elizabeth's. >. The one who owns a kind of fruit is not the girl\n < The guitar is Barbara's. The violin is Lisa's. The pizza is Joseph's. >. The one who owns a kind of instrument is not the boy\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [25, 26], "Q": [39, 40], "K'": [22, 24], "R": [41, 42], "K": [[3, 13], [6, 16]], "V": [[7, 17], [9, 18]], "example": [1, 44]}, {"END": [82, 83], "A'": [83, 84], "V'": [65, 66], "Q": [79, 80], "K'": [62, 64], "R": [81, 82], "K": [[47, 54], [48, 56]], "V": [[49, 57], [50, 58]], "example": [45, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The goat is Betty's. The violin is James's. The guitar is Thomas's. >. The one who owns a kind of instrument is not the girl\n < The durian is Jeff's. The spaghetti is Margaret's. The orange is John's. >. The one who owns a kind of fruit is not the girl\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [6, 7], "Q": [35, 36], "K'": [3, 5], "R": [37, 38], "K": [[11, 19], [13, 20]], "V": [[14, 21], [15, 22]], "example": [1, 40]}, {"END": [79, 80], "A'": [80, 81], "V'": [55, 56], "Q": [76, 77], "K'": [51, 54], "R": [78, 79], "K": [[43, 60], [45, 61]], "V": [[46, 62], [47, 63]], "example": [41, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cocktail is Susan's. The tea is Laura's. The pants is George's. >. The one who owns a kind of drink is not the boy\n < The pear is John's. The jersey is Betty's. The kiwi is Kenneth's. >. The one who owns a kind of fruit is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [22, 23], "Q": [36, 37], "K'": [19, 21], "R": [38, 39], "K": [[3, 12], [6, 13]], "V": [[7, 14], [8, 15]], "example": [1, 41]}, {"END": [81, 82], "A'": [82, 83], "V'": [56, 57], "Q": [78, 79], "K'": [52, 55], "R": [80, 81], "K": [[44, 61], [46, 63]], "V": [[47, 64], [48, 65]], "example": [42, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bus is Nancy's. The violin is Daniel's. The taxi is Lisa's. >. The one who owns a kind of vehicle is not the boy\n < The plum is David's. The piano is Linda's. The guitar is Lisa's. >. The one who owns a kind of instrument is not the boy\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [13, 14], "Q": [35, 36], "K'": [10, 12], "R": [37, 38], "K": [[3, 18], [4, 20]], "V": [[5, 21], [6, 22]], "example": [1, 40]}, {"END": [78, 79], "A'": [79, 80], "V'": [46, 47], "Q": [75, 76], "K'": [43, 45], "R": [77, 78], "K": [[51, 59], [52, 60]], "V": [[53, 61], [55, 62]], "example": [41, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jersey is George's. The wine is Dorothy's. The juice is Sandra's. >. The one who owns a kind of drink is not the boy\n < The uniform is George's. The costume is Robert's. The horse is Sharon's. >. The one who owns a kind of clothes is not the girl\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [7, 8], "Q": [38, 39], "K'": [3, 6], "R": [40, 41], "K": [[12, 20], [13, 22]], "V": [[14, 23], [16, 25]], "example": [1, 43]}, {"END": [81, 82], "A'": [82, 83], "V'": [63, 65], "Q": [78, 79], "K'": [61, 62], "R": [80, 81], "K": [[46, 53], [47, 55]], "V": [[48, 56], [49, 57]], "example": [44, 83]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Sharon's. The plum is Betty's. The lion is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < The pizza is Edward's. The hamburger is Kevin's. The lemon is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [26, 27], "Q": [56, 57], "K'": [23, 25], "R": [58, 59], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 19]], "example": [1, 65]}, {"END": [128, 129], "A'": [124, 126], "V'": [91, 92], "Q": [121, 122], "K'": [88, 90], "R": [123, 124], "K": [[71, 79], [73, 82]], "V": [[74, 83], [75, 84]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Sharon's. The plum is Betty's. The lion is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < The pizza is Edward's. The hamburger is Kevin's. The lemon is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of food is not the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [26, 27], "Q": [56, 57], "K'": [23, 25], "R": [58, 59], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 19]], "example": [1, 65]}, {"END": [128, 129], "A'": [124, 126], "V'": [91, 92], "Q": [121, 122], "K'": [88, 90], "R": [123, 124], "K": [[71, 79], [73, 82]], "V": [[74, 83], [75, 84]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blueberries is Betty's. The grapes is Sarah's. The bee is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < The grapes is Lisa's. The piano is George's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [27, 28], "Q": [57, 58], "K'": [24, 26], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 66]}, {"END": [127, 128], "A'": [123, 125], "V'": [76, 77], "Q": [120, 121], "K'": [72, 75], "R": [122, 123], "K": [[81, 88], [82, 89]], "V": [[83, 90], [84, 91]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blueberries is Betty's. The grapes is Sarah's. The bee is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the girl? Answer: No\n Premise: < The grapes is Lisa's. The piano is George's. The guitar is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [27, 28], "Q": [57, 58], "K'": [24, 26], "R": [59, 60], "K": [[6, 15], [9, 18]], "V": [[10, 19], [11, 20]], "example": [1, 66]}, {"END": [127, 128], "A'": [123, 125], "V'": [76, 77], "Q": [120, 121], "K'": [72, 75], "R": [122, 123], "K": [[81, 88], [82, 89]], "V": [[83, 90], [84, 91]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is William's. The plum is Donald's. The tea is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: No\n Premise: < The mosquito is Karen's. The burger is William's. The beetle is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not the boy? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [24, 26], "Q": [55, 56], "K'": [22, 23], "R": [57, 58], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 18]], "example": [1, 64]}, {"END": [129, 130], "A'": [125, 127], "V'": [83, 84], "Q": [122, 123], "K'": [80, 82], "R": [124, 125], "K": [[70, 88], [73, 91]], "V": [[74, 92], [76, 93]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is William's. The plum is Donald's. The tea is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: No\n Premise: < The mosquito is Karen's. The burger is William's. The beetle is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of insect is not the girl? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [24, 26], "Q": [55, 56], "K'": [22, 23], "R": [57, 58], "K": [[6, 14], [8, 16]], "V": [[9, 17], [10, 18]], "example": [1, 64]}, {"END": [129, 130], "A'": [125, 127], "V'": [83, 84], "Q": [122, 123], "K'": [80, 82], "R": [124, 125], "K": [[70, 88], [73, 91]], "V": [[74, 92], [76, 93]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vodka is Jeff's. The jeep is Jennifer's. The motorcycle is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n Premise: < The taxi is Sandra's. The motorcycle is Sharon's. The juice is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [10, 11], "Q": [58, 59], "K'": [6, 9], "R": [60, 61], "K": [[15, 24], [17, 26]], "V": [[18, 27], [20, 29]], "example": [1, 67]}, {"END": [131, 132], "A'": [127, 129], "V'": [94, 95], "Q": [124, 125], "K'": [91, 93], "R": [126, 127], "K": [[73, 82], [75, 84]], "V": [[76, 85], [78, 87]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vodka is Jeff's. The jeep is Jennifer's. The motorcycle is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: Yes\n Premise: < The taxi is Sandra's. The motorcycle is Sharon's. The juice is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the girl? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [10, 11], "Q": [58, 59], "K'": [6, 9], "R": [60, 61], "K": [[15, 24], [17, 26]], "V": [[18, 27], [20, 29]], "example": [1, 67]}, {"END": [131, 132], "A'": [127, 129], "V'": [94, 95], "Q": [124, 125], "K'": [91, 93], "R": [126, 127], "K": [[73, 82], [75, 84]], "V": [[76, 85], [78, 87]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The taxi is Ronald's. The shotgun is Susan's. The pistol is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not the girl? Answer: No\n Premise: < The pig is Lisa's. The papaya is Edward's. The tiger is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [9, 11], "Q": [58, 59], "K'": [6, 8], "R": [60, 61], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 29]], "example": [1, 67]}, {"END": [130, 131], "A'": [126, 128], "V'": [84, 85], "Q": [123, 124], "K'": [81, 83], "R": [125, 126], "K": [[73, 89], [75, 91]], "V": [[76, 92], [77, 94]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The taxi is Ronald's. The shotgun is Susan's. The pistol is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of weapon is not the girl? Answer: No\n Premise: < The pig is Lisa's. The papaya is Edward's. The tiger is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [9, 11], "Q": [58, 59], "K'": [6, 8], "R": [60, 61], "K": [[15, 23], [17, 25]], "V": [[18, 26], [19, 29]], "example": [1, 67]}, {"END": [130, 131], "A'": [126, 128], "V'": [84, 85], "Q": [123, 124], "K'": [81, 83], "R": [125, 126], "K": [[73, 89], [75, 91]], "V": [[76, 92], [77, 94]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Joseph's. The guitar is Kevin's. The pizza is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n Premise: < The gorilla is Jennifer's. The sheep is Elizabeth's. The guitar is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [23, 24], "Q": [53, 54], "K'": [20, 22], "R": [55, 56], "K": [[6, 13], [7, 14]], "V": [[8, 15], [9, 16]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [87, 88], "Q": [117, 118], "K'": [85, 86], "R": [119, 120], "K": [[68, 78], [71, 79]], "V": [[72, 80], [74, 81]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Joseph's. The guitar is Kevin's. The pizza is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of instrument is not the girl? Answer: Yes\n Premise: < The gorilla is Jennifer's. The sheep is Elizabeth's. The guitar is Donald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [23, 24], "Q": [53, 54], "K'": [20, 22], "R": [55, 56], "K": [[6, 13], [7, 14]], "V": [[8, 15], [9, 16]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [87, 88], "Q": [117, 118], "K'": [85, 86], "R": [119, 120], "K": [[68, 78], [71, 79]], "V": [[72, 80], [74, 81]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The deer is Maria's. The basketball is Thomas's. The baseball is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not the boy? Answer: No\n Premise: < The monkey is Betty's. The strawberries is Richard's. The goose is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the boy? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [9, 10], "Q": [53, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 21], [15, 22]], "V": [[16, 23], [17, 24]], "example": [1, 62]}, {"END": [126, 127], "A'": [122, 124], "V'": [81, 82], "Q": [119, 120], "K'": [76, 80], "R": [121, 122], "K": [[68, 86], [70, 88]], "V": [[71, 89], [72, 90]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The deer is Maria's. The basketball is Thomas's. The baseball is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of sport is not the boy? Answer: No\n Premise: < The monkey is Betty's. The strawberries is Richard's. The goose is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of animal is not the girl? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [9, 10], "Q": [53, 54], "K'": [6, 8], "R": [55, 56], "K": [[14, 21], [15, 22]], "V": [[16, 23], [17, 24]], "example": [1, 62]}, {"END": [126, 127], "A'": [122, 124], "V'": [81, 82], "Q": [119, 120], "K'": [76, 80], "R": [121, 122], "K": [[68, 86], [70, 88]], "V": [[71, 89], [72, 90]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apple is Maria's. The kiwi is Barbara's. The horse is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: Yes\n Premise: < The taxi is Richard's. The strawberries is Michelle's. The bus is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the girl? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [23, 24], "Q": [53, 54], "K'": [21, 22], "R": [55, 56], "K": [[6, 13], [7, 15]], "V": [[8, 16], [9, 17]], "example": [1, 62]}, {"END": [126, 127], "A'": [122, 124], "V'": [81, 83], "Q": [119, 120], "K'": [76, 80], "R": [121, 122], "K": [[68, 87], [70, 88]], "V": [[71, 89], [72, 90]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][kinds_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apple is Maria's. The kiwi is Barbara's. The horse is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of fruit is not the boy? Answer: Yes\n Premise: < The taxi is Richard's. The strawberries is Michelle's. The bus is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a kind of vehicle is not the boy? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [23, 24], "Q": [53, 54], "K'": [21, 22], "R": [55, 56], "K": [[6, 13], [7, 15]], "V": [[8, 16], [9, 17]], "example": [1, 62]}, {"END": [126, 127], "A'": [122, 124], "V'": [81, 83], "Q": [119, 120], "K'": [76, 80], "R": [121, 122], "K": [[68, 87], [70, 88]], "V": [[71, 89], [72, 90]], "example": [63, 128]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, flying, calculating, writing and cleaning.\n< David has pen. Sharon has calculator. Barbara has plane. >. So Barbara owns a thing used for flying\n < John has abacus. Michael has goggles. Donna has broom. >. So John owns a thing used for calculating\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [33, 34], "Q": [38, 39], "K": [31, 32], "R": null, "K'": [[21, 25], [22, 27]], "V'": [[23, 28], [24, 30]], "example": [20, 46]}, {"END": [76, 77], "A": [77, 78], "V": [50, 53], "Q": [70, 71], "K": [48, 49], "R": null, "K'": [[54, 61], [55, 63]], "V'": [[56, 64], [60, 66]], "example": [47, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, riding, killing, driving and calculating.\n< John has gun. Sharon has truck. Richard has bicycle. >. So Sharon owns a thing used for driving\n < Margaret has gun. Barbara has violin. Linda has computer. >. So Linda owns a thing used for calculating\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [26, 28], "Q": [38, 40], "K": [23, 25], "R": null, "K'": [[19, 29], [20, 30]], "V'": [[21, 31], [22, 34]], "example": [18, 47]}, {"END": [73, 74], "A": [74, 75], "V": [61, 62], "Q": [66, 68], "K": [58, 60], "R": null, "K'": [[49, 53], [50, 54]], "V'": [[51, 55], [52, 57]], "example": [48, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, cleaning, cooking, flying and playing.\n< Kimberly has plane. Steven has vacuum cleaner. Elizabeth has guitar. >. So Steven owns a thing used for cleaning\n < Ruth has motorcycle. George has pot. Kevin has piano. >. So Ruth owns a thing used for riding\n", "ranges": [{"END": [47, 48], "A": [48, 50], "V": [29, 33], "Q": [41, 42], "K": [27, 28], "R": null, "K'": [[21, 34], [24, 35]], "V'": [[25, 36], [26, 37]], "example": [20, 50]}, {"END": [74, 75], "A": [75, 77], "V": [54, 56], "Q": [68, 69], "K": [52, 53], "R": null, "K'": [[57, 61], [58, 62]], "V'": [[59, 63], [60, 64]], "example": [51, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< Sharon has chalk. Karen has swim fins. Helen has car. >. So Helen owns a thing used for driving\n < Kimberly has spray. Anthony has horse. Sandra has computer. >. So Anthony owns a thing used for riding\n", "ranges": [{"END": [49, 50], "A": [50, 51], "V": [38, 39], "Q": [43, 44], "K": [36, 37], "R": null, "K'": [[23, 29], [25, 31]], "V'": [[26, 32], [28, 35]], "example": [22, 51]}, {"END": [78, 79], "A": [79, 81], "V": [62, 63], "Q": [72, 73], "K": [60, 61], "R": null, "K'": [[53, 64], [56, 66]], "V'": [[57, 67], [59, 68]], "example": [52, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, driving, playing, swiming, painting and cooking.\n< Helen has spray. Joseph has helicopter. Michelle has goggles. >. So Michelle owns a thing used for swiming\n < Carol has piano. Maria has oven. David has jeep. >. So Carol owns a thing used for playing\n", "ranges": [{"END": [52, 53], "A": [53, 56], "V": [37, 41], "Q": [45, 47], "K": [34, 36], "R": null, "K'": [[23, 28], [24, 29]], "V'": [[25, 30], [27, 33]], "example": [22, 56]}, {"END": [81, 82], "A": [82, 83], "V": [60, 61], "Q": [75, 76], "K": [58, 59], "R": null, "K'": [[62, 67], [63, 68]], "V'": [[64, 69], [66, 71]], "example": [57, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, painting, writing, cleaning and killing.\n< Steven has broom. Linda has roller. Donna has horse. >. So Donna owns a thing used for riding\n < Carol has truck. Ronald has dagger. David has pen. >. So Ronald owns a thing used for killing\n", "ranges": [{"END": [48, 49], "A": [49, 51], "V": [36, 37], "Q": [41, 43], "K": [33, 35], "R": null, "K'": [[22, 27], [23, 29]], "V'": [[24, 30], [26, 32]], "example": [21, 51]}, {"END": [78, 79], "A": [79, 80], "V": [61, 63], "Q": [71, 73], "K": [58, 60], "R": null, "K'": [[53, 64], [54, 65]], "V'": [[55, 66], [57, 67]], "example": [52, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, communicating, calculating, cleaning, flying and playing.\n< Lisa has phone. Michael has goggles. Paul has mop. >. So Michael owns a thing used for swiming\n < Mary has calculator. Ruth has plane. George has guitar. >. So Ruth owns a thing used for flying\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [30, 34], "Q": [43, 44], "K": [28, 29], "R": null, "K'": [[24, 35], [25, 36]], "V'": [[26, 37], [27, 39]], "example": [23, 53]}, {"END": [77, 78], "A": [78, 79], "V": [62, 63], "Q": [71, 72], "K": [60, 61], "R": null, "K'": [[55, 64], [56, 65]], "V'": [[57, 66], [59, 67]], "example": [54, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, playing, riding, swiming and painting.\n< Deborah has piano. John has swimsuit. Margaret has motorcycle. >. So Margaret owns a thing used for riding\n < Patricia has roller. James has abacus. Mark has swim fins. >. So James owns a thing used for calculating\n", "ranges": [{"END": [47, 48], "A": [48, 50], "V": [35, 37], "Q": [41, 42], "K": [33, 34], "R": null, "K'": [[21, 27], [24, 28]], "V'": [[25, 29], [26, 32]], "example": [20, 50]}, {"END": [80, 81], "A": [81, 82], "V": [61, 64], "Q": [74, 75], "K": [59, 60], "R": null, "K'": [[52, 65], [55, 66]], "V'": [[56, 67], [58, 70]], "example": [51, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, cleaning, writing, swiming and calculating.\nPremise: < David has pen. Sharon has calculator. Barbara has plane. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a thing used for flying? Answer: Yes\n Premise: < Steven has abacus. Donna has goggles. Sarah has broom. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [37, 38], "Q": [57, 58], "K": [35, 36], "R": null, "K'": [[25, 29], [26, 31]], "V'": [[27, 32], [28, 34]], "example": [20, 69]}, {"END": [121, 122], "A": [118, 119], "V": [76, 79], "Q": [111, 112], "K": [74, 75], "R": null, "K'": [[80, 88], [82, 89]], "V'": [[83, 90], [87, 92]], "example": [70, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, writing, calculating, flying and cleaning.\nPremise: < David has pen. Sharon has calculator. Barbara has plane. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a thing used for flying? Answer: Yes\n Premise: < Steven has abacus. Donna has goggles. Sarah has broom. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a thing used for swiming? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [37, 38], "Q": [57, 58], "K": [35, 36], "R": null, "K'": [[25, 29], [26, 31]], "V'": [[27, 32], [28, 34]], "example": [20, 69]}, {"END": [123, 124], "A": [118, 121], "V": [76, 79], "Q": [111, 112], "K": [74, 75], "R": null, "K'": [[80, 88], [82, 89]], "V'": [[83, 90], [87, 92]], "example": [70, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, communicating, swiming and flying.\nPremise: < Linda has telephone. Christopher has mop. Kenneth has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that Christopher owns a thing used for cleaning? Answer: Yes\n Premise: < John has goggles. Daniel has plane. Mary has telephone. >. Answer with Yes or No. Can it be inferred from the premise that John owns a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [32, 34], "Q": [59, 60], "K": [30, 31], "R": null, "K'": [[24, 35], [26, 36]], "V'": [[27, 37], [29, 40]], "example": [19, 72]}, {"END": [123, 124], "A": [118, 121], "V": [79, 83], "Q": [111, 112], "K": [77, 78], "R": null, "K'": [[84, 88], [85, 89]], "V'": [[86, 90], [87, 92]], "example": [73, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, flying, swiming and communicating.\nPremise: < Linda has telephone. Christopher has mop. Kenneth has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that Christopher owns a thing used for cleaning? Answer: Yes\n Premise: < John has goggles. Daniel has plane. Mary has telephone. >. Answer with Yes or No. Can it be inferred from the premise that John owns a thing used for flying? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [32, 34], "Q": [59, 60], "K": [30, 31], "R": null, "K'": [[24, 35], [26, 36]], "V'": [[27, 37], [29, 40]], "example": [19, 72]}, {"END": [121, 122], "A": [118, 119], "V": [79, 83], "Q": [111, 112], "K": [77, 78], "R": null, "K'": [[84, 88], [85, 89]], "V'": [[86, 90], [87, 92]], "example": [73, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, flying, communicating, driving and painting.\nPremise: < Kevin has helicopter. Thomas has telephone. Jennifer has car. >. Answer with Yes or No. Can it be inferred from the premise that Kevin owns a thing used for flying? Answer: Yes\n Premise: < Michael has telephone. Sharon has violin. Joseph has spray. >. Answer with Yes or No. Can it be inferred from the premise that Joseph owns a thing used for painting? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [25, 28], "Q": [57, 58], "K": [23, 24], "R": null, "K'": [[29, 34], [30, 36]], "V'": [[31, 37], [33, 38]], "example": [18, 69]}, {"END": [118, 119], "A": [115, 116], "V": [87, 89], "Q": [108, 109], "K": [85, 86], "R": null, "K'": [[74, 79], [75, 81]], "V'": [[76, 82], [78, 84]], "example": [70, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, flying, driving, playing and communicating.\nPremise: < Kevin has helicopter. Thomas has telephone. Jennifer has car. >. Answer with Yes or No. Can it be inferred from the premise that Kevin owns a thing used for flying? Answer: Yes\n Premise: < Michael has telephone. Sharon has violin. Joseph has spray. >. Answer with Yes or No. Can it be inferred from the premise that Joseph owns a thing used for communicating? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [25, 28], "Q": [57, 58], "K": [23, 24], "R": null, "K'": [[29, 34], [30, 36]], "V'": [[31, 37], [33, 38]], "example": [18, 69]}, {"END": [119, 120], "A": [115, 117], "V": [87, 89], "Q": [108, 109], "K": [85, 86], "R": null, "K'": [[74, 79], [75, 81]], "V'": [[76, 82], [78, 84]], "example": [70, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, driving, cleaning, writing and calculating.\nPremise: < Deborah has phone. Daniel has car. Edward has computer. >. Answer with Yes or No. Can it be inferred from the premise that Deborah owns a thing used for communicating? Answer: Yes\n Premise: < Deborah has pencil. Charles has mop. Anthony has phone. >. Answer with Yes or No. Can it be inferred from the premise that Anthony owns a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [28, 29], "Q": [56, 59], "K": [24, 27], "R": null, "K'": [[30, 34], [31, 35]], "V'": [[32, 36], [33, 37]], "example": [19, 71]}, {"END": [122, 123], "A": [118, 120], "V": [91, 92], "Q": [111, 112], "K": [89, 90], "R": null, "K'": [[76, 84], [79, 85]], "V'": [[80, 86], [83, 88]], "example": [72, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, writing, communicating, calculating and driving.\nPremise: < Deborah has phone. Daniel has car. Edward has computer. >. Answer with Yes or No. Can it be inferred from the premise that Deborah owns a thing used for communicating? Answer: Yes\n Premise: < Deborah has pencil. Charles has mop. Anthony has phone. >. Answer with Yes or No. Can it be inferred from the premise that Anthony owns a thing used for writing? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [28, 29], "Q": [56, 59], "K": [24, 27], "R": null, "K'": [[30, 34], [31, 35]], "V'": [[32, 36], [33, 37]], "example": [19, 71]}, {"END": [121, 122], "A": [118, 119], "V": [91, 92], "Q": [111, 112], "K": [89, 90], "R": null, "K'": [[76, 84], [79, 85]], "V'": [[80, 86], [83, 88]], "example": [72, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, cooking, driving, riding and communicating.\nPremise: < Michelle has pot. Mary has plane. Laura has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for flying? Answer: Yes\n Premise: < Michael has jeep. Ronald has pan. John has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [32, 33], "Q": [57, 58], "K": [30, 31], "R": null, "K'": [[25, 34], [27, 35]], "V'": [[28, 36], [29, 38]], "example": [20, 69]}, {"END": [119, 120], "A": [115, 117], "V": [82, 83], "Q": [107, 109], "K": [79, 81], "R": null, "K'": [[74, 84], [75, 85]], "V'": [[76, 86], [78, 88]], "example": [70, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, cooking, communicating, riding and flying.\nPremise: < Michelle has pot. Mary has plane. Laura has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for flying? Answer: Yes\n Premise: < Michael has jeep. Ronald has pan. John has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a thing used for riding? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [32, 33], "Q": [57, 58], "K": [30, 31], "R": null, "K'": [[25, 34], [27, 35]], "V'": [[28, 36], [29, 38]], "example": [20, 69]}, {"END": [119, 120], "A": [115, 117], "V": [82, 83], "Q": [107, 109], "K": [79, 81], "R": null, "K'": [[74, 84], [75, 85]], "V'": [[76, 86], [78, 88]], "example": [70, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, swiming, cleaning, flying and painting.\nPremise: < Michael has palette. Mary has mop. Richard has chalk. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for painting? Answer: No\n Premise: < Betty has goggles. Sandra has plane. George has brush. >. Answer with Yes or No. Can it be inferred from the premise that Sandra owns a thing used for flying? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [32, 34], "Q": [58, 59], "K": [30, 31], "R": null, "K'": [[25, 35], [26, 36]], "V'": [[27, 37], [29, 39]], "example": [20, 70]}, {"END": [121, 122], "A": [118, 119], "V": [85, 86], "Q": [110, 112], "K": [82, 84], "R": null, "K'": [[75, 87], [76, 88]], "V'": [[77, 89], [81, 91]], "example": [71, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cleaning, painting, flying and swiming.\nPremise: < Michael has palette. Mary has mop. Richard has chalk. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for painting? Answer: No\n Premise: < Betty has goggles. Sandra has plane. George has brush. >. Answer with Yes or No. Can it be inferred from the premise that Sandra owns a thing used for swiming? Answer: No\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [32, 34], "Q": [58, 59], "K": [30, 31], "R": null, "K'": [[25, 35], [26, 36]], "V'": [[27, 37], [29, 39]], "example": [20, 70]}, {"END": [123, 124], "A": [118, 121], "V": [85, 86], "Q": [110, 112], "K": [82, 84], "R": null, "K'": [[75, 87], [76, 88]], "V'": [[77, 89], [81, 91]], "example": [71, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, communicating, cooking, playing, flying and cleaning.\nPremise: < Maria has pot. George has broom. Carol has glider. >. Answer with Yes or No. Can it be inferred from the premise that George owns a thing used for cooking? Answer: No\n Premise: < John has jeep. Barbara has telephone. Karen has piano. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns a thing used for playing? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [33, 35], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[27, 36], [28, 37]], "V'": [[29, 38], [30, 40]], "example": [22, 72]}, {"END": [121, 122], "A": [118, 119], "V": [90, 91], "Q": [110, 112], "K": [87, 89], "R": null, "K'": [[77, 82], [78, 83]], "V'": [[79, 84], [81, 86]], "example": [73, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, cleaning, flying, communicating, playing and driving.\nPremise: < Maria has pot. George has broom. Carol has glider. >. Answer with Yes or No. Can it be inferred from the premise that George owns a thing used for cooking? Answer: No\n Premise: < John has jeep. Barbara has telephone. Karen has piano. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns a thing used for communicating? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [33, 35], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[27, 36], [28, 37]], "V'": [[29, 38], [30, 40]], "example": [22, 72]}, {"END": [122, 123], "A": [118, 120], "V": [90, 91], "Q": [110, 112], "K": [87, 89], "R": null, "K'": [[77, 82], [78, 83]], "V'": [[79, 84], [81, 86]], "example": [73, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, swiming, cleaning, cooking and writing.\nPremise: < Barbara has chalk. Laura has swimsuit. Betty has car. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns a thing used for driving? Answer: No\n Premise: < Donald has oven. Edward has mop. Dorothy has car. >. Answer with Yes or No. Can it be inferred from the premise that Edward owns a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [33, 36], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[26, 37], [27, 38]], "V'": [[28, 39], [30, 40]], "example": [21, 71]}, {"END": [120, 121], "A": [116, 118], "V": [83, 85], "Q": [109, 110], "K": [81, 82], "R": null, "K'": [[76, 86], [77, 88]], "V'": [[78, 89], [80, 90]], "example": [72, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cleaning, driving, cooking and swiming.\nPremise: < Barbara has chalk. Laura has swimsuit. Betty has car. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns a thing used for driving? Answer: No\n Premise: < Donald has oven. Edward has mop. Dorothy has car. >. Answer with Yes or No. Can it be inferred from the premise that Edward owns a thing used for cooking? Answer: No\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [33, 36], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[26, 37], [27, 38]], "V'": [[28, 39], [30, 40]], "example": [21, 71]}, {"END": [120, 121], "A": [116, 118], "V": [83, 85], "Q": [109, 110], "K": [81, 82], "R": null, "K'": [[76, 86], [77, 88]], "V'": [[78, 89], [80, 90]], "example": [72, 122]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, flying, calculating, writing and cleaning.\n< The pen is David's. The calculator is Sharon's. The plane is Barbara's. >. So Barbara owns a thing used for flying\n < The abacus is John's. The goggles is Michael's. The broom is Donna's. >. So John owns a thing used for calculating\n", "ranges": [{"END": [53, 54], "A": [54, 55], "V": [38, 39], "Q": [47, 48], "K": [40, 41], "R": null, "K'": [[24, 32], [25, 34]], "V'": [[22, 29], [23, 31]], "example": [20, 55]}, {"END": [94, 95], "A": [95, 96], "V": [58, 61], "Q": [88, 89], "K": [62, 63], "R": null, "K'": [[72, 80], [73, 82]], "V'": [[67, 77], [71, 79]], "example": [56, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, riding, killing, driving and calculating.\n< The gun is John's. The truck is Sharon's. The bicycle is Richard's. >. So Sharon owns a thing used for driving\n < The gun is Margaret's. The violin is Barbara's. The computer is Linda's. >. So Linda owns a thing used for calculating\n", "ranges": [{"END": [54, 55], "A": [55, 56], "V": [27, 29], "Q": [47, 49], "K": [30, 32], "R": null, "K'": [[22, 40], [23, 41]], "V'": [[20, 36], [21, 39]], "example": [18, 56]}, {"END": [91, 92], "A": [92, 93], "V": [74, 75], "Q": [84, 86], "K": [76, 78], "R": null, "K'": [[61, 69], [62, 70]], "V'": [[59, 66], [60, 68]], "example": [57, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, cleaning, cooking, flying and playing.\n< The plane is Kimberly's. The vacuum cleaner is Steven's. The guitar is Elizabeth's. >. So Steven owns a thing used for cleaning\n < The motorcycle is Ruth's. The pot is George's. The piano is Kevin's. >. So Ruth owns a thing used for riding\n", "ranges": [{"END": [56, 57], "A": [57, 59], "V": [31, 35], "Q": [50, 51], "K": [36, 37], "R": null, "K'": [[24, 43], [27, 44]], "V'": [[22, 41], [23, 42]], "example": [20, 59]}, {"END": [92, 93], "A": [93, 95], "V": [62, 64], "Q": [86, 87], "K": [65, 66], "R": null, "K'": [[72, 79], [73, 80]], "V'": [[70, 77], [71, 78]], "example": [60, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< The chalk is Sharon's. The swim fins is Karen's. The car is Helen's. >. So Helen owns a thing used for driving\n < The spray is Kimberly's. The horse is Anthony's. The computer is Sandra's. >. So Anthony owns a thing used for riding\n", "ranges": [{"END": [58, 59], "A": [59, 60], "V": [43, 44], "Q": [52, 53], "K": [45, 46], "R": null, "K'": [[27, 37], [29, 39]], "V'": [[24, 33], [26, 36]], "example": [22, 60]}, {"END": [96, 97], "A": [97, 99], "V": [73, 74], "Q": [90, 91], "K": [75, 76], "R": null, "K'": [[66, 82], [69, 84]], "V'": [[63, 80], [65, 81]], "example": [61, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, driving, playing, swiming, painting and cooking.\n< The spray is Helen's. The helicopter is Joseph's. The goggles is Michelle's. >. So Michelle owns a thing used for swiming\n < The piano is Carol's. The oven is Maria's. The jeep is David's. >. So Carol owns a thing used for playing\n", "ranges": [{"END": [61, 62], "A": [62, 65], "V": [41, 45], "Q": [54, 56], "K": [46, 48], "R": null, "K'": [[27, 36], [28, 37]], "V'": [[24, 32], [26, 35]], "example": [22, 65]}, {"END": [99, 100], "A": [100, 101], "V": [68, 69], "Q": [93, 94], "K": [70, 71], "R": null, "K'": [[78, 86], [79, 87]], "V'": [[75, 83], [77, 85]], "example": [66, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, painting, writing, cleaning and killing.\n< The broom is Steven's. The roller is Linda's. The horse is Donna's. >. So Donna owns a thing used for riding\n < The truck is Carol's. The dagger is Ronald's. The pen is David's. >. So Ronald owns a thing used for killing\n", "ranges": [{"END": [57, 58], "A": [58, 60], "V": [40, 41], "Q": [50, 52], "K": [42, 44], "R": null, "K'": [[26, 34], [27, 36]], "V'": [[23, 31], [25, 33]], "example": [21, 60]}, {"END": [96, 97], "A": [97, 98], "V": [71, 73], "Q": [89, 91], "K": [74, 76], "R": null, "K'": [[66, 82], [67, 83]], "V'": [[63, 80], [65, 81]], "example": [61, 98]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, communicating, calculating, cleaning, flying and playing.\n< The phone is Lisa's. The goggles is Michael's. The mop is Paul's. >. So Michael owns a thing used for swiming\n < The calculator is Mary's. The plane is Ruth's. The guitar is George's. >. So Ruth owns a thing used for flying\n", "ranges": [{"END": [58, 59], "A": [59, 62], "V": [32, 36], "Q": [52, 53], "K": [37, 38], "R": null, "K'": [[27, 45], [28, 46]], "V'": [[25, 42], [26, 44]], "example": [23, 62]}, {"END": [95, 96], "A": [96, 97], "V": [73, 74], "Q": [89, 90], "K": [75, 76], "R": null, "K'": [[68, 82], [69, 83]], "V'": [[65, 80], [67, 81]], "example": [63, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, playing, riding, swiming and painting.\n< The piano is Deborah's. The swimsuit is John's. The motorcycle is Margaret's. >. So Margaret owns a thing used for riding\n < The roller is Patricia's. The abacus is James's. The swim fins is Mark's. >. So James owns a thing used for calculating\n", "ranges": [{"END": [56, 57], "A": [57, 59], "V": [40, 42], "Q": [50, 51], "K": [43, 44], "R": null, "K'": [[24, 35], [27, 36]], "V'": [[22, 31], [23, 34]], "example": [20, 59]}, {"END": [98, 99], "A": [99, 100], "V": [72, 75], "Q": [92, 93], "K": [76, 77], "R": null, "K'": [[65, 85], [68, 86]], "V'": [[62, 81], [64, 84]], "example": [60, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, cleaning, writing, swiming and calculating.\nPremise: < The pen is David's. The calculator is Sharon's. The plane is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a thing used for flying? Answer: Yes\n Premise: < The abacus is Steven's. The goggles is Donna's. The broom is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [42, 43], "Q": [66, 67], "K": [44, 45], "R": null, "K'": [[28, 36], [29, 38]], "V'": [[26, 33], [27, 35]], "example": [20, 78]}, {"END": [139, 140], "A": [136, 137], "V": [84, 87], "Q": [129, 130], "K": [88, 89], "R": null, "K'": [[98, 107], [100, 108]], "V'": [[93, 104], [97, 106]], "example": [79, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, writing, calculating, flying and cleaning.\nPremise: < The pen is David's. The calculator is Sharon's. The plane is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara owns a thing used for flying? Answer: Yes\n Premise: < The abacus is Steven's. The goggles is Donna's. The broom is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that Steven owns a thing used for swiming? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [42, 43], "Q": [66, 67], "K": [44, 45], "R": null, "K'": [[28, 36], [29, 38]], "V'": [[26, 33], [27, 35]], "example": [20, 78]}, {"END": [141, 142], "A": [136, 139], "V": [84, 87], "Q": [129, 130], "K": [88, 89], "R": null, "K'": [[98, 107], [100, 108]], "V'": [[93, 104], [97, 106]], "example": [79, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, communicating, swiming and flying.\nPremise: < The telephone is Linda's. The mop is Christopher's. The helicopter is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that Christopher owns a thing used for cleaning? Answer: Yes\n Premise: < The goggles is John's. The plane is Daniel's. The telephone is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that John owns a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [34, 36], "Q": [68, 69], "K": [37, 38], "R": null, "K'": [[28, 46], [30, 47]], "V'": [[25, 42], [27, 45]], "example": [19, 81]}, {"END": [141, 142], "A": [136, 139], "V": [87, 91], "Q": [129, 130], "K": [92, 93], "R": null, "K'": [[99, 107], [100, 108]], "V'": [[97, 104], [98, 106]], "example": [82, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, flying, swiming and communicating.\nPremise: < The telephone is Linda's. The mop is Christopher's. The helicopter is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that Christopher owns a thing used for cleaning? Answer: Yes\n Premise: < The goggles is John's. The plane is Daniel's. The telephone is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that John owns a thing used for flying? Answer: No\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [34, 36], "Q": [68, 69], "K": [37, 38], "R": null, "K'": [[28, 46], [30, 47]], "V'": [[25, 42], [27, 45]], "example": [19, 81]}, {"END": [139, 140], "A": [136, 137], "V": [87, 91], "Q": [129, 130], "K": [92, 93], "R": null, "K'": [[99, 107], [100, 108]], "V'": [[97, 104], [98, 106]], "example": [82, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, flying, communicating, driving and painting.\nPremise: < The helicopter is Kevin's. The telephone is Thomas's. The car is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that Kevin owns a thing used for flying? Answer: Yes\n Premise: < The telephone is Michael's. The violin is Sharon's. The spray is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph owns a thing used for painting? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [24, 27], "Q": [66, 67], "K": [28, 29], "R": null, "K'": [[36, 43], [37, 45]], "V'": [[33, 41], [35, 42]], "example": [18, 78]}, {"END": [136, 137], "A": [133, 134], "V": [101, 103], "Q": [126, 127], "K": [104, 105], "R": null, "K'": [[87, 95], [88, 97]], "V'": [[84, 92], [86, 94]], "example": [79, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, flying, driving, playing and communicating.\nPremise: < The helicopter is Kevin's. The telephone is Thomas's. The car is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that Kevin owns a thing used for flying? Answer: Yes\n Premise: < The telephone is Michael's. The violin is Sharon's. The spray is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph owns a thing used for communicating? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [24, 27], "Q": [66, 67], "K": [28, 29], "R": null, "K'": [[36, 43], [37, 45]], "V'": [[33, 41], [35, 42]], "example": [18, 78]}, {"END": [137, 138], "A": [133, 135], "V": [101, 103], "Q": [126, 127], "K": [104, 105], "R": null, "K'": [[87, 95], [88, 97]], "V'": [[84, 92], [86, 94]], "example": [79, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, driving, cleaning, writing and calculating.\nPremise: < The phone is Deborah's. The car is Daniel's. The computer is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that Deborah owns a thing used for communicating? Answer: Yes\n Premise: < The pencil is Deborah's. The mop is Charles's. The phone is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony owns a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [78, 79], "A": [74, 76], "V": [25, 26], "Q": [65, 68], "K": [27, 30], "R": null, "K'": [[36, 43], [37, 44]], "V'": [[34, 41], [35, 42]], "example": [19, 80]}, {"END": [140, 141], "A": [136, 138], "V": [105, 106], "Q": [129, 130], "K": [107, 108], "R": null, "K'": [[90, 100], [93, 101]], "V'": [[86, 97], [89, 99]], "example": [81, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, writing, communicating, calculating and driving.\nPremise: < The phone is Deborah's. The car is Daniel's. The computer is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that Deborah owns a thing used for communicating? Answer: Yes\n Premise: < The pencil is Deborah's. The mop is Charles's. The phone is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that Anthony owns a thing used for writing? Answer: No\n", "ranges": [{"END": [78, 79], "A": [74, 76], "V": [25, 26], "Q": [65, 68], "K": [27, 30], "R": null, "K'": [[36, 43], [37, 44]], "V'": [[34, 41], [35, 42]], "example": [19, 80]}, {"END": [139, 140], "A": [136, 137], "V": [105, 106], "Q": [129, 130], "K": [107, 108], "R": null, "K'": [[90, 100], [93, 101]], "V'": [[86, 97], [89, 99]], "example": [81, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, cooking, driving, riding and communicating.\nPremise: < The pot is Michelle's. The plane is Mary's. The telegraph is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for flying? Answer: Yes\n Premise: < The jeep is Michael's. The pan is Ronald's. The motorcycle is John's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [34, 35], "Q": [66, 67], "K": [36, 37], "R": null, "K'": [[28, 44], [30, 45]], "V'": [[26, 41], [27, 43]], "example": [20, 78]}, {"END": [137, 138], "A": [133, 135], "V": [92, 93], "Q": [125, 127], "K": [94, 96], "R": null, "K'": [[87, 103], [88, 104]], "V'": [[84, 100], [86, 102]], "example": [79, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, cooking, communicating, riding and flying.\nPremise: < The pot is Michelle's. The plane is Mary's. The telegraph is Laura's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for flying? Answer: Yes\n Premise: < The jeep is Michael's. The pan is Ronald's. The motorcycle is John's. >. Answer with Yes or No. Can it be inferred from the premise that Ronald owns a thing used for riding? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [34, 35], "Q": [66, 67], "K": [36, 37], "R": null, "K'": [[28, 44], [30, 45]], "V'": [[26, 41], [27, 43]], "example": [20, 78]}, {"END": [137, 138], "A": [133, 135], "V": [92, 93], "Q": [125, 127], "K": [94, 96], "R": null, "K'": [[87, 103], [88, 104]], "V'": [[84, 100], [86, 102]], "example": [79, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, swiming, cleaning, flying and painting.\nPremise: < The palette is Michael's. The mop is Mary's. The chalk is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for painting? Answer: No\n Premise: < The goggles is Betty's. The plane is Sandra's. The brush is George's. >. Answer with Yes or No. Can it be inferred from the premise that Sandra owns a thing used for flying? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [34, 36], "Q": [67, 68], "K": [37, 38], "R": null, "K'": [[29, 45], [30, 46]], "V'": [[26, 42], [28, 44]], "example": [20, 79]}, {"END": [139, 140], "A": [136, 137], "V": [95, 96], "Q": [128, 130], "K": [97, 99], "R": null, "K'": [[90, 106], [91, 107]], "V'": [[85, 103], [89, 105]], "example": [80, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cleaning, painting, flying and swiming.\nPremise: < The palette is Michael's. The mop is Mary's. The chalk is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that Mary owns a thing used for painting? Answer: No\n Premise: < The goggles is Betty's. The plane is Sandra's. The brush is George's. >. Answer with Yes or No. Can it be inferred from the premise that Sandra owns a thing used for swiming? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [34, 36], "Q": [67, 68], "K": [37, 38], "R": null, "K'": [[29, 45], [30, 46]], "V'": [[26, 42], [28, 44]], "example": [20, 79]}, {"END": [141, 142], "A": [136, 139], "V": [95, 96], "Q": [128, 130], "K": [97, 99], "R": null, "K'": [[90, 106], [91, 107]], "V'": [[85, 103], [89, 105]], "example": [80, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, communicating, cooking, playing, flying and cleaning.\nPremise: < The pot is Maria's. The broom is George's. The glider is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that George owns a thing used for cooking? Answer: No\n Premise: < The jeep is John's. The telephone is Barbara's. The piano is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns a thing used for playing? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [35, 37], "Q": [68, 69], "K": [38, 39], "R": null, "K'": [[30, 46], [31, 47]], "V'": [[28, 43], [29, 45]], "example": [22, 81]}, {"END": [139, 140], "A": [136, 137], "V": [103, 104], "Q": [128, 130], "K": [105, 107], "R": null, "K'": [[90, 98], [91, 99]], "V'": [[87, 95], [89, 97]], "example": [82, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, cleaning, flying, communicating, playing and driving.\nPremise: < The pot is Maria's. The broom is George's. The glider is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that George owns a thing used for cooking? Answer: No\n Premise: < The jeep is John's. The telephone is Barbara's. The piano is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that Karen owns a thing used for communicating? Answer: No\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [35, 37], "Q": [68, 69], "K": [38, 39], "R": null, "K'": [[30, 46], [31, 47]], "V'": [[28, 43], [29, 45]], "example": [22, 81]}, {"END": [140, 141], "A": [136, 138], "V": [103, 104], "Q": [128, 130], "K": [105, 107], "R": null, "K'": [[90, 98], [91, 99]], "V'": [[87, 95], [89, 97]], "example": [82, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, swiming, cleaning, cooking and writing.\nPremise: < The chalk is Barbara's. The swimsuit is Laura's. The car is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns a thing used for driving? Answer: No\n Premise: < The oven is Donald's. The mop is Edward's. The car is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Edward owns a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [78, 79], "A": [75, 76], "V": [35, 38], "Q": [68, 69], "K": [39, 40], "R": null, "K'": [[30, 46], [31, 47]], "V'": [[27, 44], [29, 45]], "example": [21, 80]}, {"END": [138, 139], "A": [134, 136], "V": [94, 96], "Q": [127, 128], "K": [97, 98], "R": null, "K'": [[89, 104], [90, 106]], "V'": [[86, 102], [88, 103]], "example": [81, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cleaning, driving, cooking and swiming.\nPremise: < The chalk is Barbara's. The swimsuit is Laura's. The car is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that Laura owns a thing used for driving? Answer: No\n Premise: < The oven is Donald's. The mop is Edward's. The car is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Edward owns a thing used for cooking? Answer: No\n", "ranges": [{"END": [78, 79], "A": [75, 76], "V": [35, 38], "Q": [68, 69], "K": [39, 40], "R": null, "K'": [[30, 46], [31, 47]], "V'": [[27, 44], [29, 45]], "example": [21, 80]}, {"END": [138, 139], "A": [134, 136], "V": [94, 96], "Q": [127, 128], "K": [97, 98], "R": null, "K'": [[89, 104], [90, 106]], "V'": [[86, 102], [88, 103]], "example": [81, 140]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, driving, calculating, killing, writing and flying.\n< George has piano. Barbara has truck. Barbara has chalk. >. Barbara does not own a thing used for playing\n < Christopher has abacus. Christopher has knife. Mary has helicopter. >. Christopher does not own a thing used for flying\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [22, 23], "Q": [36, 37], "K'": [20, 21], "R": [38, 39], "K": [[24, 29], [25, 30]], "V": [[26, 31], [28, 33]], "example": [19, 45]}, {"END": [73, 74], "A'": [74, 75], "V'": [60, 63], "Q": [66, 67], "K'": [58, 59], "R": [68, 69], "K": [[47, 53], [48, 54]], "V": [[49, 55], [52, 57]], "example": [46, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, communicating, flying, cooking and cleaning.\n< Steven has radio. Steven has biro. Deborah has pot. >. Steven does not own a thing used for cooking\n < Laura has telephone. George has mop. Laura has helicopter. >. Laura does not own a thing used for cleaning\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [34, 35], "Q": [38, 39], "K'": [30, 33], "R": [40, 41], "K": [[21, 25], [22, 26]], "V": [[23, 27], [24, 29]], "example": [20, 48]}, {"END": [75, 76], "A'": [76, 78], "V'": [57, 59], "Q": [68, 69], "K'": [55, 56], "R": [70, 71], "K": [[50, 60], [51, 61]], "V": [[52, 62], [54, 65]], "example": [49, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, cleaning and cooking.\n< Barbara has pot. Barbara has motorcycle. Charles has car. >. Barbara does not own a thing used for driving\n < Donna has broom. Jeff has oven. Jeff has motorcycle. >. Jeff does not own a thing used for cleaning\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [30, 31], "Q": [34, 35], "K'": [28, 29], "R": [36, 37], "K": [[19, 23], [20, 24]], "V": [[21, 25], [22, 27]], "example": [18, 43]}, {"END": [70, 71], "A'": [71, 73], "V'": [48, 50], "Q": [63, 64], "K'": [45, 47], "R": [65, 66], "K": [[51, 56], [52, 57]], "V": [[53, 58], [55, 60]], "example": [44, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, driving, writing and cooking.\n< Michael has telephone. Margaret has car. Margaret has chalk. >. Margaret does not own a thing used for communicating\n < Karen has pan. Paul has biro. Karen has oven. >. Karen does not own a thing used for writing\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [20, 22], "Q": [34, 35], "K'": [18, 19], "R": [36, 37], "K": [[23, 27], [24, 28]], "V": [[25, 29], [26, 31]], "example": [17, 44]}, {"END": [72, 73], "A'": [73, 74], "V'": [53, 55], "Q": [64, 66], "K'": [51, 52], "R": [67, 68], "K": [[46, 56], [48, 58]], "V": [[49, 59], [50, 61]], "example": [45, 74]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, writing, calculating, driving and swiming.\n< Donna has calculator. Donna has pencil. Kenneth has swim fins. >. Donna does not own a thing used for swiming\n < John has abacus. Lisa has car. Lisa has spray. >. Lisa does not own a thing used for calculating\n", "ranges": [{"END": [49, 50], "A'": [50, 53], "V'": [35, 38], "Q": [41, 43], "K'": [33, 34], "R": [44, 45], "K": [[20, 26], [22, 28]], "V": [[23, 29], [25, 32]], "example": [19, 53]}, {"END": [79, 80], "A'": [80, 81], "V'": [57, 60], "Q": [72, 73], "K'": [55, 56], "R": [74, 75], "K": [[61, 65], [62, 66]], "V": [[63, 67], [64, 69]], "example": [54, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, cooking, killing, writing and painting.\n< Laura has knife. Jeff has roller. Laura has swim fins. >. Laura does not own a thing used for painting\n < Nancy has pan. George has goggles. George has pencil. >. George does not own a thing used for cooking\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [28, 30], "Q": [39, 40], "K'": [26, 27], "R": [41, 42], "K": [[21, 31], [22, 32]], "V": [[23, 33], [25, 36]], "example": [20, 48]}, {"END": [76, 77], "A'": [77, 79], "V'": [52, 53], "Q": [69, 70], "K'": [50, 51], "R": [71, 72], "K": [[54, 61], [55, 62]], "V": [[56, 63], [60, 66]], "example": [49, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, writing, cooking, flying and playing.\n< Mary has guitar. Thomas has radio. Mary has pencil. >. Mary does not own a thing used for communicating\n < Karen has oven. Karen has pot. Mark has plane. >. Karen does not own a thing used for flying\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [26, 27], "Q": [36, 37], "K'": [24, 25], "R": [38, 39], "K": [[20, 28], [21, 29]], "V": [[22, 30], [23, 33]], "example": [19, 46]}, {"END": [73, 74], "A'": [74, 75], "V'": [61, 62], "Q": [65, 67], "K'": [59, 60], "R": [68, 69], "K": [[48, 54], [50, 56]], "V": [[51, 57], [53, 58]], "example": [47, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, writing, riding, playing, cooking and painting.\n< Laura has guitar. Laura has goggles. Ronald has spray. >. Laura does not own a thing used for painting\n < Steven has motorcycle. Betty has oven. Betty has pen. >. Betty does not own a thing used for riding\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [38, 40], "Q": [43, 44], "K'": [35, 37], "R": [45, 46], "K": [[24, 28], [25, 29]], "V": [[26, 30], [27, 34]], "example": [23, 52]}, {"END": [77, 78], "A'": [78, 80], "V'": [56, 58], "Q": [70, 71], "K'": [54, 55], "R": [72, 73], "K": [[59, 64], [60, 65]], "V": [[61, 66], [63, 67]], "example": [53, 80]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, writing, killing, playing, cleaning and driving.\nPremise: < George has piano. Barbara has truck. Barbara has chalk. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a thing used for playing? Answer: Yes\n Premise: < David has abacus. David has knife. Lisa has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [27, 28], "Q": [57, 58], "K'": [25, 26], "R": [59, 60], "K": [[29, 34], [30, 35]], "V": [[31, 36], [33, 38]], "example": [20, 70]}, {"END": [123, 124], "A'": [119, 121], "V'": [88, 92], "Q": [111, 112], "K'": [86, 87], "R": [113, 114], "K": [[75, 81], [76, 82]], "V": [[77, 83], [80, 85]], "example": [71, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, playing, writing, driving, cleaning and killing.\nPremise: < George has piano. Barbara has truck. Barbara has chalk. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a thing used for playing? Answer: Yes\n Premise: < David has abacus. David has knife. Lisa has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a thing used for killing? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [27, 28], "Q": [57, 58], "K'": [25, 26], "R": [59, 60], "K": [[29, 34], [30, 35]], "V": [[31, 36], [33, 38]], "example": [20, 70]}, {"END": [122, 123], "A'": [119, 120], "V'": [88, 92], "Q": [111, 112], "K'": [86, 87], "R": [113, 114], "K": [[75, 81], [76, 82]], "V": [[77, 83], [80, 85]], "example": [71, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, riding, driving, flying and cleaning.\nPremise: < Dorothy has abacus. Kevin has bicycle. Dorothy has jeep. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for riding? Answer: Yes\n Premise: < Betty has motorcycle. Betty has mop. Daniel has plane. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for flying? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [33, 36], "Q": [61, 63], "K'": [31, 32], "R": [64, 65], "K": [[24, 37], [26, 39]], "V": [[27, 40], [30, 42]], "example": [19, 76]}, {"END": [124, 125], "A'": [121, 122], "V'": [93, 94], "Q": [113, 114], "K'": [91, 92], "R": [115, 116], "K": [[81, 86], [82, 87]], "V": [[83, 88], [85, 90]], "example": [77, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, riding, flying, cleaning and calculating.\nPremise: < Dorothy has abacus. Kevin has bicycle. Dorothy has jeep. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for riding? Answer: Yes\n Premise: < Betty has motorcycle. Betty has mop. Daniel has plane. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for cleaning? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [70, 72], "V'": [33, 36], "Q": [61, 63], "K'": [31, 32], "R": [64, 65], "K": [[24, 37], [26, 39]], "V": [[27, 40], [30, 42]], "example": [19, 76]}, {"END": [125, 126], "A'": [121, 123], "V'": [93, 94], "Q": [113, 114], "K'": [91, 92], "R": [115, 116], "K": [[81, 86], [82, 87]], "V": [[83, 88], [85, 90]], "example": [77, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, cleaning, driving, painting and playing.\nPremise: < Jennifer has piano. Kevin has telephone. Kevin has car. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not own a thing used for playing? Answer: Yes\n Premise: < Joseph has car. Joseph has palette. Michelle has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [27, 28], "Q": [56, 57], "K'": [24, 26], "R": [58, 59], "K": [[29, 34], [30, 35]], "V": [[31, 36], [33, 37]], "example": [19, 69]}, {"END": [121, 122], "A'": [117, 119], "V'": [86, 90], "Q": [109, 110], "K'": [83, 85], "R": [111, 112], "K": [[74, 78], [75, 79]], "V": [[76, 80], [77, 82]], "example": [70, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, painting, driving, communicating and playing.\nPremise: < Jennifer has piano. Kevin has telephone. Kevin has car. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not own a thing used for playing? Answer: Yes\n Premise: < Joseph has car. Joseph has palette. Michelle has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a thing used for painting? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [27, 28], "Q": [56, 57], "K'": [24, 26], "R": [58, 59], "K": [[29, 34], [30, 35]], "V": [[31, 36], [33, 37]], "example": [19, 69]}, {"END": [120, 121], "A'": [117, 118], "V'": [86, 90], "Q": [109, 110], "K'": [83, 85], "R": [111, 112], "K": [[74, 78], [75, 79]], "V": [[76, 80], [77, 82]], "example": [70, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cleaning, riding, communicating and calculating.\nPremise: < Ruth has pencil. Ruth has horse. Brian has mop. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own a thing used for writing? Answer: No\n Premise: < Dorothy has computer. Brian has pen. Dorothy has telephone. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for writing? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [66, 67], "V'": [37, 39], "Q": [58, 59], "K'": [35, 36], "R": [60, 61], "K": [[25, 31], [26, 32]], "V": [[27, 33], [30, 34]], "example": [20, 71]}, {"END": [121, 122], "A'": [118, 119], "V'": [83, 84], "Q": [109, 111], "K'": [81, 82], "R": [112, 113], "K": [[76, 85], [78, 87]], "V": [[79, 88], [80, 90]], "example": [72, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, communicating, cleaning, riding and calculating.\nPremise: < Ruth has pencil. Ruth has horse. Brian has mop. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own a thing used for writing? Answer: No\n Premise: < Dorothy has computer. Brian has pen. Dorothy has telephone. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for calculating? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [66, 67], "V'": [37, 39], "Q": [58, 59], "K'": [35, 36], "R": [60, 61], "K": [[25, 31], [26, 32]], "V": [[27, 33], [30, 34]], "example": [20, 71]}, {"END": [121, 122], "A'": [118, 119], "V'": [83, 84], "Q": [109, 111], "K'": [81, 82], "R": [112, 113], "K": [[76, 85], [78, 87]], "V": [[79, 88], [80, 90]], "example": [72, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, calculating, flying, communicating, swiming and playing.\nPremise: < Sharon has abacus. Sharon has plane. Mark has goggles. >. Answer with Yes or No. Can it be inferred from the premise that Sharon does not own a thing used for swiming? Answer: Yes\n Premise: < Mary has guitar. Thomas has radio. Mary has pencil. >. Answer with Yes or No. Can it be inferred from the premise that Mary does not own a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [73, 76], "V'": [41, 45], "Q": [64, 66], "K'": [39, 40], "R": [67, 68], "K": [[27, 34], [29, 36]], "V": [[30, 37], [33, 38]], "example": [22, 80]}, {"END": [129, 130], "A'": [125, 127], "V'": [91, 92], "Q": [117, 118], "K'": [89, 90], "R": [119, 120], "K": [[85, 93], [86, 94]], "V": [[87, 95], [88, 98]], "example": [81, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, swiming, playing, calculating, communicating and writing.\nPremise: < Sharon has abacus. Sharon has plane. Mark has goggles. >. Answer with Yes or No. Can it be inferred from the premise that Sharon does not own a thing used for swiming? Answer: Yes\n Premise: < Mary has guitar. Thomas has radio. Mary has pencil. >. Answer with Yes or No. Can it be inferred from the premise that Mary does not own a thing used for playing? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [73, 76], "V'": [41, 45], "Q": [64, 66], "K'": [39, 40], "R": [67, 68], "K": [[27, 34], [29, 36]], "V": [[30, 37], [33, 38]], "example": [22, 80]}, {"END": [128, 129], "A'": [125, 126], "V'": [91, 92], "Q": [117, 118], "K'": [89, 90], "R": [119, 120], "K": [[85, 93], [86, 94]], "V": [[87, 95], [88, 98]], "example": [81, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, communicating, playing, painting and cooking.\nPremise: < Michael has radio. Barbara has oven. Michael has palette. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own a thing used for communicating? Answer: No\n Premise: < George has calculator. Karen has oven. George has guitar. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [30, 32], "Q": [56, 57], "K'": [28, 29], "R": [58, 59], "K": [[24, 33], [25, 34]], "V": [[26, 35], [27, 37]], "example": [19, 70]}, {"END": [120, 121], "A'": [116, 118], "V'": [83, 85], "Q": [108, 109], "K'": [80, 82], "R": [110, 111], "K": [[75, 86], [76, 87]], "V": [[77, 88], [79, 89]], "example": [71, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, playing, cooking, communicating and painting.\nPremise: < Michael has radio. Barbara has oven. Michael has palette. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own a thing used for communicating? Answer: No\n Premise: < George has calculator. Karen has oven. George has guitar. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for playing? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [30, 32], "Q": [56, 57], "K'": [28, 29], "R": [58, 59], "K": [[24, 33], [25, 34]], "V": [[26, 35], [27, 37]], "example": [19, 70]}, {"END": [119, 120], "A'": [116, 117], "V'": [83, 85], "Q": [108, 109], "K'": [80, 82], "R": [110, 111], "K": [[75, 86], [76, 87]], "V": [[77, 88], [79, 89]], "example": [71, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, painting, riding, cleaning and driving.\nPremise: < George has spray. George has jeep. Patricia has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for riding? Answer: Yes\n Premise: < Steven has motorcycle. Jennifer has broom. Steven has oven. >. Answer with Yes or No. Can it be inferred from the premise that Steven does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [39, 41], "Q": [60, 61], "K'": [35, 38], "R": [62, 63], "K": [[25, 30], [26, 31]], "V": [[27, 32], [29, 34]], "example": [20, 74]}, {"END": [125, 126], "A'": [121, 123], "V'": [87, 89], "Q": [113, 114], "K'": [84, 86], "R": [115, 116], "K": [[79, 90], [80, 91]], "V": [[81, 92], [83, 94]], "example": [75, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, painting, riding, cleaning and cooking.\nPremise: < George has spray. George has jeep. Patricia has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for riding? Answer: Yes\n Premise: < Steven has motorcycle. Jennifer has broom. Steven has oven. >. Answer with Yes or No. Can it be inferred from the premise that Steven does not own a thing used for riding? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [39, 41], "Q": [60, 61], "K'": [35, 38], "R": [62, 63], "K": [[25, 30], [26, 31]], "V": [[27, 32], [29, 34]], "example": [20, 74]}, {"END": [125, 126], "A'": [121, 123], "V'": [87, 89], "Q": [113, 114], "K'": [84, 86], "R": [115, 116], "K": [[79, 90], [80, 91]], "V": [[81, 92], [83, 94]], "example": [75, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, writing, playing, killing and communicating.\nPremise: < Betty has telephone. Edward has truck. Betty has piano. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for driving? Answer: Yes\n Premise: < Michelle has pencil. Michelle has biro. Robert has knife. >. Answer with Yes or No. Can it be inferred from the premise that Michelle does not own a thing used for killing? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [30, 32], "Q": [55, 56], "K'": [28, 29], "R": [57, 58], "K": [[23, 33], [24, 34]], "V": [[25, 35], [27, 36]], "example": [18, 68]}, {"END": [121, 122], "A'": [118, 119], "V'": [88, 90], "Q": [109, 111], "K'": [86, 87], "R": [112, 113], "K": [[73, 80], [75, 82]], "V": [[76, 83], [79, 85]], "example": [69, 123]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, communicating, writing, driving and killing.\nPremise: < Betty has telephone. Edward has truck. Betty has piano. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for driving? Answer: Yes\n Premise: < Michelle has pencil. Michelle has biro. Robert has knife. >. Answer with Yes or No. Can it be inferred from the premise that Michelle does not own a thing used for writing? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [30, 32], "Q": [55, 56], "K'": [28, 29], "R": [57, 58], "K": [[23, 33], [24, 34]], "V": [[25, 35], [27, 36]], "example": [18, 68]}, {"END": [121, 122], "A'": [118, 119], "V'": [88, 90], "Q": [109, 111], "K'": [86, 87], "R": [112, 113], "K": [[73, 80], [75, 82]], "V": [[76, 83], [79, 85]], "example": [69, 123]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, driving, calculating, killing, writing and flying.\n< The piano is George's. The truck is Barbara's. The chalk is Barbara's. >. Barbara does not own a thing used for playing\n < The abacus is Christopher's. The knife is Christopher's. The helicopter is Mary's. >. Christopher does not own a thing used for flying\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [21, 22], "Q": [45, 46], "K'": [23, 24], "R": [47, 48], "K": [[31, 39], [32, 40]], "V": [[28, 36], [30, 38]], "example": [19, 54]}, {"END": [91, 92], "A'": [92, 93], "V'": [74, 77], "Q": [84, 85], "K'": [78, 79], "R": [86, 87], "K": [[61, 69], [62, 70]], "V": [[57, 66], [60, 68]], "example": [55, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, communicating, flying, cooking and cleaning.\n< The radio is Steven's. The biro is Steven's. The pot is Deborah's. >. Steven does not own a thing used for cooking\n < The telephone is Laura's. The mop is George's. The helicopter is Laura's. >. Laura does not own a thing used for cleaning\n", "ranges": [{"END": [54, 55], "A'": [55, 57], "V'": [37, 38], "Q": [47, 48], "K'": [39, 42], "R": [49, 50], "K": [[24, 32], [25, 33]], "V": [[22, 29], [23, 31]], "example": [20, 57]}, {"END": [93, 94], "A'": [94, 96], "V'": [68, 70], "Q": [86, 87], "K'": [71, 72], "R": [88, 89], "K": [[63, 80], [64, 81]], "V": [[60, 76], [62, 79]], "example": [58, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, cleaning and cooking.\n< The pot is Barbara's. The motorcycle is Barbara's. The car is Charles's. >. Barbara does not own a thing used for driving\n < The broom is Donna's. The oven is Jeff's. The motorcycle is Jeff's. >. Jeff does not own a thing used for cleaning\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [35, 36], "Q": [43, 44], "K'": [37, 38], "R": [45, 46], "K": [[22, 30], [23, 31]], "V": [[20, 27], [21, 29]], "example": [18, 52]}, {"END": [88, 89], "A'": [89, 91], "V'": [55, 57], "Q": [81, 82], "K'": [58, 60], "R": [83, 84], "K": [[67, 75], [68, 76]], "V": [[64, 72], [66, 74]], "example": [53, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, driving, writing and cooking.\n< The telephone is Michael's. The car is Margaret's. The chalk is Margaret's. >. Margaret does not own a thing used for communicating\n < The pan is Karen's. The biro is Paul's. The oven is Karen's. >. Karen does not own a thing used for writing\n", "ranges": [{"END": [50, 51], "A'": [51, 53], "V'": [19, 21], "Q": [43, 44], "K'": [22, 23], "R": [45, 46], "K": [[29, 37], [30, 38]], "V": [[27, 34], [28, 36]], "example": [17, 53]}, {"END": [90, 91], "A'": [91, 92], "V'": [64, 66], "Q": [82, 84], "K'": [67, 68], "R": [85, 86], "K": [[58, 75], [60, 77]], "V": [[56, 72], [57, 74]], "example": [54, 92]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, writing, calculating, driving and swiming.\n< The calculator is Donna's. The pencil is Donna's. The swim fins is Kenneth's. >. Donna does not own a thing used for swiming\n < The abacus is John's. The car is Lisa's. The spray is Lisa's. >. Lisa does not own a thing used for calculating\n", "ranges": [{"END": [58, 59], "A'": [59, 62], "V'": [40, 43], "Q": [50, 52], "K'": [44, 45], "R": [53, 54], "K": [[24, 34], [26, 36]], "V": [[21, 30], [23, 33]], "example": [19, 62]}, {"END": [97, 98], "A'": [98, 99], "V'": [65, 68], "Q": [90, 91], "K'": [69, 70], "R": [92, 93], "K": [[76, 84], [77, 85]], "V": [[74, 81], [75, 83]], "example": [63, 99]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, cooking, killing, writing and painting.\n< The knife is Laura's. The roller is Jeff's. The swim fins is Laura's. >. Laura does not own a thing used for painting\n < The pan is Nancy's. The goggles is George's. The pencil is George's. >. George does not own a thing used for cooking\n", "ranges": [{"END": [55, 56], "A'": [56, 57], "V'": [30, 32], "Q": [48, 49], "K'": [33, 34], "R": [50, 51], "K": [[25, 42], [26, 43]], "V": [[22, 38], [24, 41]], "example": [20, 57]}, {"END": [94, 95], "A'": [95, 97], "V'": [60, 61], "Q": [87, 88], "K'": [62, 63], "R": [89, 90], "K": [[72, 81], [73, 82]], "V": [[67, 77], [71, 80]], "example": [58, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, writing, cooking, flying and playing.\n< The guitar is Mary's. The radio is Thomas's. The pencil is Mary's. >. Mary does not own a thing used for communicating\n < The oven is Karen's. The pot is Karen's. The plane is Mark's. >. Karen does not own a thing used for flying\n", "ranges": [{"END": [52, 53], "A'": [53, 55], "V'": [28, 29], "Q": [45, 46], "K'": [30, 31], "R": [47, 48], "K": [[23, 39], [24, 40]], "V": [[21, 35], [22, 38]], "example": [19, 55]}, {"END": [91, 92], "A'": [92, 93], "V'": [75, 76], "Q": [83, 85], "K'": [77, 78], "R": [86, 87], "K": [[61, 69], [63, 71]], "V": [[58, 67], [60, 68]], "example": [56, 93]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, writing, riding, playing, cooking and painting.\n< The guitar is Laura's. The goggles is Laura's. The spray is Ronald's. >. Laura does not own a thing used for painting\n < The motorcycle is Steven's. The oven is Betty's. The pen is Betty's. >. Betty does not own a thing used for riding\n", "ranges": [{"END": [59, 60], "A'": [60, 61], "V'": [42, 44], "Q": [52, 53], "K'": [45, 47], "R": [54, 55], "K": [[27, 37], [28, 38]], "V": [[25, 32], [26, 36]], "example": [23, 61]}, {"END": [95, 96], "A'": [96, 98], "V'": [64, 66], "Q": [88, 89], "K'": [67, 68], "R": [90, 91], "K": [[75, 82], [76, 83]], "V": [[72, 80], [74, 81]], "example": [62, 98]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, writing, killing, playing, cleaning and driving.\nPremise: < The piano is George's. The truck is Barbara's. The chalk is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a thing used for playing? Answer: Yes\n Premise: < The abacus is David's. The knife is David's. The vacuum cleaner is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [26, 27], "Q": [66, 67], "K'": [28, 29], "R": [68, 69], "K": [[36, 44], [37, 45]], "V": [[33, 41], [35, 43]], "example": [20, 79]}, {"END": [141, 142], "A'": [137, 139], "V'": [102, 106], "Q": [129, 130], "K'": [107, 108], "R": [131, 132], "K": [[89, 97], [90, 98]], "V": [[85, 94], [88, 96]], "example": [80, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, playing, writing, driving, cleaning and killing.\nPremise: < The piano is George's. The truck is Barbara's. The chalk is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that Barbara does not own a thing used for playing? Answer: Yes\n Premise: < The abacus is David's. The knife is David's. The vacuum cleaner is Lisa's. >. Answer with Yes or No. Can it be inferred from the premise that David does not own a thing used for killing? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [74, 75], "V'": [26, 27], "Q": [66, 67], "K'": [28, 29], "R": [68, 69], "K": [[36, 44], [37, 45]], "V": [[33, 41], [35, 43]], "example": [20, 79]}, {"END": [140, 141], "A'": [137, 138], "V'": [102, 106], "Q": [129, 130], "K'": [107, 108], "R": [131, 132], "K": [[89, 97], [90, 98]], "V": [[85, 94], [88, 96]], "example": [80, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, riding, driving, flying and cleaning.\nPremise: < The abacus is Dorothy's. The bicycle is Kevin's. The jeep is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for riding? Answer: Yes\n Premise: < The motorcycle is Betty's. The mop is Betty's. The plane is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for flying? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [79, 81], "V'": [35, 38], "Q": [70, 72], "K'": [39, 40], "R": [73, 74], "K": [[29, 47], [31, 49]], "V": [[25, 44], [28, 46]], "example": [19, 85]}, {"END": [142, 143], "A'": [139, 140], "V'": [107, 108], "Q": [131, 132], "K'": [109, 110], "R": [133, 134], "K": [[94, 102], [95, 103]], "V": [[91, 99], [93, 101]], "example": [86, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, riding, flying, cleaning and calculating.\nPremise: < The abacus is Dorothy's. The bicycle is Kevin's. The jeep is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for riding? Answer: Yes\n Premise: < The motorcycle is Betty's. The mop is Betty's. The plane is Daniel's. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for cleaning? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [79, 81], "V'": [35, 38], "Q": [70, 72], "K'": [39, 40], "R": [73, 74], "K": [[29, 47], [31, 49]], "V": [[25, 44], [28, 46]], "example": [19, 85]}, {"END": [143, 144], "A'": [139, 141], "V'": [107, 108], "Q": [131, 132], "K'": [109, 110], "R": [133, 134], "K": [[94, 102], [95, 103]], "V": [[91, 99], [93, 101]], "example": [86, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, cleaning, driving, painting and playing.\nPremise: < The piano is Jennifer's. The telephone is Kevin's. The car is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not own a thing used for playing? Answer: Yes\n Premise: < The car is Joseph's. The palette is Joseph's. The vacuum cleaner is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [73, 74], "V'": [25, 26], "Q": [65, 66], "K'": [27, 29], "R": [67, 68], "K": [[36, 43], [37, 44]], "V": [[33, 41], [35, 42]], "example": [19, 78]}, {"END": [139, 140], "A'": [135, 137], "V'": [99, 103], "Q": [127, 128], "K'": [104, 106], "R": [129, 130], "K": [[86, 94], [87, 95]], "V": [[84, 91], [85, 93]], "example": [79, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, painting, driving, communicating and playing.\nPremise: < The piano is Jennifer's. The telephone is Kevin's. The car is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that Kevin does not own a thing used for playing? Answer: Yes\n Premise: < The car is Joseph's. The palette is Joseph's. The vacuum cleaner is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that Joseph does not own a thing used for painting? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [73, 74], "V'": [25, 26], "Q": [65, 66], "K'": [27, 29], "R": [67, 68], "K": [[36, 43], [37, 44]], "V": [[33, 41], [35, 42]], "example": [19, 78]}, {"END": [138, 139], "A'": [135, 136], "V'": [99, 103], "Q": [127, 128], "K'": [104, 106], "R": [129, 130], "K": [[86, 94], [87, 95]], "V": [[84, 91], [85, 93]], "example": [79, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cleaning, riding, communicating and calculating.\nPremise: < The pencil is Ruth's. The horse is Ruth's. The mop is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own a thing used for writing? Answer: No\n Premise: < The computer is Dorothy's. The pen is Brian's. The telephone is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for writing? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [75, 76], "V'": [42, 44], "Q": [67, 68], "K'": [45, 46], "R": [69, 70], "K": [[30, 37], [31, 38]], "V": [[26, 35], [29, 36]], "example": [20, 80]}, {"END": [139, 140], "A'": [136, 137], "V'": [94, 95], "Q": [127, 129], "K'": [96, 97], "R": [130, 131], "K": [[88, 104], [90, 106]], "V": [[86, 101], [87, 103]], "example": [81, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, communicating, cleaning, riding and calculating.\nPremise: < The pencil is Ruth's. The horse is Ruth's. The mop is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that Ruth does not own a thing used for writing? Answer: No\n Premise: < The computer is Dorothy's. The pen is Brian's. The telephone is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy does not own a thing used for calculating? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [75, 76], "V'": [42, 44], "Q": [67, 68], "K'": [45, 46], "R": [69, 70], "K": [[30, 37], [31, 38]], "V": [[26, 35], [29, 36]], "example": [20, 80]}, {"END": [139, 140], "A'": [136, 137], "V'": [94, 95], "Q": [127, 129], "K'": [96, 97], "R": [130, 131], "K": [[88, 104], [90, 106]], "V": [[86, 101], [87, 103]], "example": [81, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, calculating, flying, communicating, swiming and playing.\nPremise: < The abacus is Sharon's. The plane is Sharon's. The goggles is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Sharon does not own a thing used for swiming? Answer: Yes\n Premise: < The guitar is Mary's. The radio is Thomas's. The pencil is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that Mary does not own a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [46, 50], "Q": [73, 75], "K'": [51, 52], "R": [76, 77], "K": [[32, 40], [34, 42]], "V": [[28, 38], [31, 39]], "example": [22, 89]}, {"END": [147, 148], "A'": [143, 145], "V'": [102, 103], "Q": [135, 136], "K'": [104, 105], "R": [137, 138], "K": [[97, 113], [98, 114]], "V": [[95, 109], [96, 112]], "example": [90, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, swiming, playing, calculating, communicating and writing.\nPremise: < The abacus is Sharon's. The plane is Sharon's. The goggles is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that Sharon does not own a thing used for swiming? Answer: Yes\n Premise: < The guitar is Mary's. The radio is Thomas's. The pencil is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that Mary does not own a thing used for playing? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [46, 50], "Q": [73, 75], "K'": [51, 52], "R": [76, 77], "K": [[32, 40], [34, 42]], "V": [[28, 38], [31, 39]], "example": [22, 89]}, {"END": [146, 147], "A'": [143, 144], "V'": [102, 103], "Q": [135, 136], "K'": [104, 105], "R": [137, 138], "K": [[97, 113], [98, 114]], "V": [[95, 109], [96, 112]], "example": [90, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, communicating, playing, painting and cooking.\nPremise: < The radio is Michael's. The oven is Barbara's. The palette is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own a thing used for communicating? Answer: No\n Premise: < The calculator is George's. The oven is Karen's. The guitar is George's. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [73, 75], "V'": [32, 34], "Q": [65, 66], "K'": [35, 36], "R": [67, 68], "K": [[27, 43], [28, 44]], "V": [[25, 40], [26, 42]], "example": [19, 79]}, {"END": [138, 139], "A'": [134, 136], "V'": [93, 95], "Q": [126, 127], "K'": [96, 98], "R": [128, 129], "K": [[88, 104], [89, 105]], "V": [[85, 102], [87, 103]], "example": [80, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, playing, cooking, communicating and painting.\nPremise: < The radio is Michael's. The oven is Barbara's. The palette is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that Michael does not own a thing used for communicating? Answer: No\n Premise: < The calculator is George's. The oven is Karen's. The guitar is George's. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for playing? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [73, 75], "V'": [32, 34], "Q": [65, 66], "K'": [35, 36], "R": [67, 68], "K": [[27, 43], [28, 44]], "V": [[25, 40], [26, 42]], "example": [19, 79]}, {"END": [137, 138], "A'": [134, 135], "V'": [93, 95], "Q": [126, 127], "K'": [96, 98], "R": [128, 129], "K": [[88, 104], [89, 105]], "V": [[85, 102], [87, 103]], "example": [80, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, painting, riding, cleaning and driving.\nPremise: < The spray is George's. The jeep is George's. The motorcycle is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for riding? Answer: Yes\n Premise: < The motorcycle is Steven's. The broom is Jennifer's. The oven is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven does not own a thing used for cleaning? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [42, 44], "Q": [69, 70], "K'": [45, 48], "R": [71, 72], "K": [[29, 37], [30, 38]], "V": [[26, 34], [28, 36]], "example": [20, 83]}, {"END": [143, 144], "A'": [139, 141], "V'": [97, 99], "Q": [131, 132], "K'": [100, 102], "R": [133, 134], "K": [[92, 109], [93, 110]], "V": [[89, 106], [91, 108]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, painting, riding, cleaning and cooking.\nPremise: < The spray is George's. The jeep is George's. The motorcycle is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that George does not own a thing used for riding? Answer: Yes\n Premise: < The motorcycle is Steven's. The broom is Jennifer's. The oven is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that Steven does not own a thing used for riding? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [42, 44], "Q": [69, 70], "K'": [45, 48], "R": [71, 72], "K": [[29, 37], [30, 38]], "V": [[26, 34], [28, 36]], "example": [20, 83]}, {"END": [143, 144], "A'": [139, 141], "V'": [97, 99], "Q": [131, 132], "K'": [100, 102], "R": [133, 134], "K": [[92, 109], [93, 110]], "V": [[89, 106], [91, 108]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, writing, playing, killing and communicating.\nPremise: < The telephone is Betty's. The truck is Edward's. The piano is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for driving? Answer: Yes\n Premise: < The pencil is Michelle's. The biro is Michelle's. The knife is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that Michelle does not own a thing used for killing? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [32, 34], "Q": [64, 65], "K'": [35, 36], "R": [66, 67], "K": [[27, 42], [28, 43]], "V": [[24, 40], [26, 41]], "example": [18, 77]}, {"END": [139, 140], "A'": [136, 137], "V'": [102, 104], "Q": [127, 129], "K'": [105, 106], "R": [130, 131], "K": [[87, 96], [89, 98]], "V": [[83, 93], [86, 95]], "example": [78, 141]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_equal,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, communicating, writing, driving and killing.\nPremise: < The telephone is Betty's. The truck is Edward's. The piano is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that Betty does not own a thing used for driving? Answer: Yes\n Premise: < The pencil is Michelle's. The biro is Michelle's. The knife is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that Michelle does not own a thing used for writing? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [72, 73], "V'": [32, 34], "Q": [64, 65], "K'": [35, 36], "R": [66, 67], "K": [[27, 42], [28, 43]], "V": [[24, 40], [26, 41]], "example": [18, 77]}, {"END": [139, 140], "A'": [136, 137], "V'": [102, 104], "Q": [127, 129], "K'": [105, 106], "R": [130, 131], "K": [[87, 96], [89, 98]], "V": [[83, 93], [86, 95]], "example": [78, 141]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly has knife. Sharon has truck. Kenneth has swimsuit. >. So who owns a thing used for swiming? Kenneth\n < Sandra has swim fins. Kevin has truck. Elizabeth has oven. >. So who owns a thing used for cooking? Elizabeth\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [15, 16], "Q": [31, 34], "K": [17, 20], "R": null, "K'": [[6, 12], [8, 14]], "V'": [[2, 9], [5, 11]], "example": [1, 36]}, {"END": [67, 68], "A": [68, 69], "V": [50, 51], "Q": [65, 67], "K": [52, 54], "R": null, "K'": [[41, 47], [44, 49]], "V'": [[38, 45], [40, 46]], "example": [37, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has pencil. Brian has radio. Sarah has plane. >. So who owns a thing used for writing? Richard\n < Ronald has pan. Susan has broom. Dorothy has telegraph. >. So who owns a thing used for cleaning? Susan\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [2, 3], "Q": [26, 27], "K": [4, 7], "R": null, "K'": [[10, 14], [11, 15]], "V'": [[8, 12], [9, 13]], "example": [1, 29]}, {"END": [59, 60], "A": [60, 61], "V": [36, 37], "Q": [57, 59], "K": [38, 40], "R": null, "K'": [[34, 44], [35, 46]], "V'": [[31, 41], [33, 43]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth has spray. Donald has motorcycle. Mark has broom. >. So who owns a thing used for riding? Donald\n < Christopher has horse. Deborah has biro. Kevin has vacuum cleaner. >. So who owns a thing used for writing? Deborah\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [7, 8], "Q": [27, 29], "K": [9, 11], "R": null, "K'": [[4, 14], [6, 16]], "V'": [[2, 12], [3, 13]], "example": [1, 31]}, {"END": [62, 63], "A": [63, 66], "V": [37, 40], "Q": [61, 62], "K": [41, 43], "R": null, "K'": [[35, 46], [36, 50]], "V'": [[33, 44], [34, 45]], "example": [32, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Anthony has calculator. Kenneth has piano. Joseph has roller. >. So who owns a thing used for calculating? Anthony\n < Daniel has chalk. Sharon has car. Anthony has swim fins. >. So who owns a thing used for driving? Sharon\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [2, 3], "Q": [26, 27], "K": [4, 6], "R": null, "K'": [[9, 13], [10, 15]], "V'": [[7, 11], [8, 12]], "example": [1, 29]}, {"END": [58, 59], "A": [59, 61], "V": [36, 38], "Q": [57, 58], "K": [39, 40], "R": null, "K'": [[33, 43], [35, 46]], "V'": [[31, 41], [32, 42]], "example": [30, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Thomas has car. Ruth has spray. Margaret has calculator. >. So who owns a thing used for painting? Ruth\n < Nancy has computer. Barbara has phone. Margaret has car. >. So who owns a thing used for communicating? Barbara\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [6, 7], "Q": [26, 27], "K": [8, 10], "R": null, "K'": [[4, 13], [5, 15]], "V'": [[2, 11], [3, 12]], "example": [1, 29]}, {"END": [55, 56], "A": [56, 57], "V": [35, 36], "Q": [53, 55], "K": [37, 38], "R": null, "K'": [[33, 41], [34, 42]], "V'": [[31, 39], [32, 40]], "example": [30, 57]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< George has goggles. Michael has telephone. Brian has gun. >. So who owns a thing used for killing? Brian\n < Donna has pan. Linda has swimsuit. Steven has glider. >. So who owns a thing used for cooking? Donna\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [14, 15], "Q": [28, 29], "K": [16, 17], "R": null, "K'": [[4, 11], [8, 13]], "V'": [[2, 9], [3, 10]], "example": [1, 31]}, {"END": [62, 63], "A": [63, 65], "V": [33, 35], "Q": [60, 62], "K": [36, 37], "R": null, "K'": [[41, 47], [44, 49]], "V'": [[38, 45], [40, 46]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol has guitar. David has phone. Michael has violin. >. So who owns a thing used for communicating? David\n < Linda has telegraph. Steven has gun. Mark has plane. >. So who owns a thing used for flying? Mark\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [6, 7], "Q": [25, 27], "K": [8, 9], "R": null, "K'": [[4, 12], [5, 14]], "V'": [[2, 10], [3, 11]], "example": [1, 29]}, {"END": [56, 57], "A": [57, 58], "V": [41, 42], "Q": [55, 56], "K": [43, 44], "R": null, "K'": [[34, 39], [36, 40]], "V'": [[31, 37], [33, 38]], "example": [30, 58]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michelle has oven. Betty has radio. Kimberly has palette. >. So who owns a thing used for cooking? Michelle\n < Patricia has calculator. Lisa has oven. Mark has guitar. >. So who owns a thing used for cooking? Lisa\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [2, 4], "Q": [29, 31], "K": [5, 7], "R": null, "K'": [[10, 16], [11, 18]], "V'": [[8, 12], [9, 15]], "example": [1, 34]}, {"END": [64, 65], "A": [65, 66], "V": [43, 44], "Q": [62, 64], "K": [45, 47], "R": null, "K'": [[40, 50], [42, 51]], "V'": [[36, 48], [39, 49]], "example": [35, 66]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has knife. Sharon has truck. Kenneth has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Kimberly? Answer: No\n Premise: < Kevin has plane. Carol has swim fins. Edward has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is Kevin? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [55, 58], "V": [18, 19], "Q": [51, 54], "K": [20, 23], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 62]}, {"END": [114, 115], "A": [111, 112], "V": [67, 68], "Q": [109, 110], "K": [69, 70], "R": null, "K'": [[73, 79], [76, 81]], "V'": [[71, 77], [72, 78]], "example": [63, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has knife. Sharon has truck. Kenneth has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Kimberly? Answer: No\n Premise: < Kevin has plane. Carol has swim fins. Edward has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is Edward? Answer: No\n", "ranges": [{"END": [60, 61], "A": [55, 58], "V": [18, 19], "Q": [51, 54], "K": [20, 23], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 62]}, {"END": [114, 115], "A": [111, 112], "V": [67, 68], "Q": [109, 110], "K": [69, 70], "R": null, "K'": [[73, 79], [76, 81]], "V'": [[71, 77], [72, 78]], "example": [63, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has pot. Linda has biro. Kenneth has radio. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Kenneth? Answer: No\n Premise: < John has palette. Daniel has pot. Mary has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is John? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 6], "Q": [46, 48], "K": [7, 8], "R": null, "K'": [[12, 17], [14, 18]], "V'": [[9, 15], [11, 16]], "example": [1, 54]}, {"END": [104, 105], "A": [101, 102], "V": [59, 60], "Q": [99, 100], "K": [61, 63], "R": null, "K'": [[66, 70], [67, 71]], "V'": [[64, 68], [65, 69]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher has pot. Linda has biro. Kenneth has radio. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Kenneth? Answer: No\n Premise: < John has palette. Daniel has pot. Mary has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Daniel? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 6], "Q": [46, 48], "K": [7, 8], "R": null, "K'": [[12, 17], [14, 18]], "V'": [[9, 15], [11, 16]], "example": [1, 54]}, {"END": [104, 105], "A": [101, 102], "V": [59, 60], "Q": [99, 100], "K": [61, 63], "R": null, "K'": [[66, 70], [67, 71]], "V'": [[64, 68], [65, 69]], "example": [55, 106]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has pot. Margaret has plane. Michelle has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for calculating is Mark? Answer: No\n Premise: < Betty has pot. Steven has truck. Jennifer has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Steven? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [13, 15], "Q": [47, 48], "K": [16, 19], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 54]}, {"END": [106, 107], "A": [103, 104], "V": [63, 64], "Q": [101, 102], "K": [65, 67], "R": null, "K'": [[61, 71], [62, 73]], "V'": [[59, 68], [60, 70]], "example": [55, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark has pot. Margaret has plane. Michelle has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for calculating is Mark? Answer: No\n Premise: < Betty has pot. Steven has truck. Jennifer has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Betty? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [13, 15], "Q": [47, 48], "K": [16, 19], "R": null, "K'": [[7, 11], [8, 12]], "V'": [[5, 9], [6, 10]], "example": [1, 54]}, {"END": [106, 107], "A": [103, 104], "V": [63, 64], "Q": [101, 102], "K": [65, 67], "R": null, "K'": [[61, 71], [62, 73]], "V'": [[59, 68], [60, 70]], "example": [55, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has violin. Sharon has motorcycle. Anthony has chalk. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Sharon? Answer: Yes\n Premise: < Laura has computer. Kimberly has spray. Ruth has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Ruth? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [10, 12], "Q": [48, 50], "K": [13, 15], "R": null, "K'": [[7, 18], [9, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 57]}, {"END": [110, 111], "A": [107, 108], "V": [73, 74], "Q": [104, 106], "K": [75, 76], "R": null, "K'": [[64, 70], [65, 72]], "V'": [[62, 66], [63, 69]], "example": [58, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel has violin. Sharon has motorcycle. Anthony has chalk. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Sharon? Answer: Yes\n Premise: < Laura has computer. Kimberly has spray. Ruth has horse. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Kimberly? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [10, 12], "Q": [48, 50], "K": [13, 15], "R": null, "K'": [[7, 18], [9, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 57]}, {"END": [112, 113], "A": [107, 110], "V": [73, 74], "Q": [104, 106], "K": [75, 76], "R": null, "K'": [[64, 70], [65, 72]], "V'": [[62, 66], [63, 69]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara has guitar. Anthony has glider. Brian has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is Brian? Answer: No\n Premise: < John has broom. Michael has dagger. Helen has phone. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Michael? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 6], "Q": [47, 48], "K": [7, 8], "R": null, "K'": [[11, 16], [13, 19]], "V'": [[9, 14], [10, 15]], "example": [1, 54]}, {"END": [105, 106], "A": [102, 103], "V": [64, 65], "Q": [100, 101], "K": [66, 68], "R": null, "K'": [[61, 71], [63, 72]], "V'": [[59, 69], [60, 70]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Barbara has guitar. Anthony has glider. Brian has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is Brian? Answer: No\n Premise: < John has broom. Michael has dagger. Helen has phone. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is John? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [5, 6], "Q": [47, 48], "K": [7, 8], "R": null, "K'": [[11, 16], [13, 19]], "V'": [[9, 14], [10, 15]], "example": [1, 54]}, {"END": [105, 106], "A": [102, 103], "V": [64, 65], "Q": [100, 101], "K": [66, 68], "R": null, "K'": [[61, 71], [63, 72]], "V'": [[59, 69], [60, 70]], "example": [55, 107]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle has piano. Laura has abacus. Mary has spray. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Michelle? Answer: No\n Premise: < Michael has abacus. John has violin. Ronald has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Ronald? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [16, 17], "Q": [48, 49], "K": [18, 20], "R": null, "K'": [[8, 12], [9, 15]], "V'": [[5, 10], [7, 11]], "example": [1, 56]}, {"END": [110, 111], "A": [106, 108], "V": [72, 74], "Q": [104, 105], "K": [75, 76], "R": null, "K'": [[63, 69], [66, 71]], "V'": [[61, 67], [62, 68]], "example": [57, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michelle has piano. Laura has abacus. Mary has spray. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Michelle? Answer: No\n Premise: < Michael has abacus. John has violin. Ronald has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is John? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [16, 17], "Q": [48, 49], "K": [18, 20], "R": null, "K'": [[8, 12], [9, 15]], "V'": [[5, 10], [7, 11]], "example": [1, 56]}, {"END": [109, 110], "A": [106, 107], "V": [72, 74], "Q": [104, 105], "K": [75, 76], "R": null, "K'": [[63, 69], [66, 71]], "V'": [[61, 67], [62, 68]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard has spray. Sandra has goggles. Ruth has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Sandra? Answer: No\n Premise: < Linda has oven. Richard has swim fins. Steven has pen. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Richard? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 9], "R": null, "K'": [[13, 20], [17, 21]], "V'": [[10, 18], [12, 19]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [68, 69], "Q": [105, 108], "K": [70, 73], "R": null, "K'": [[65, 76], [67, 77]], "V'": [[62, 74], [64, 75]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard has spray. Sandra has goggles. Ruth has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Sandra? Answer: No\n Premise: < Linda has oven. Richard has swim fins. Steven has pen. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Steven? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 9], "R": null, "K'": [[13, 20], [17, 21]], "V'": [[10, 18], [12, 19]], "example": [1, 57]}, {"END": [112, 113], "A": [109, 110], "V": [68, 69], "Q": [105, 108], "K": [70, 73], "R": null, "K'": [[65, 76], [67, 77]], "V'": [[62, 74], [64, 75]], "example": [58, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has calculator. Maria has dagger. Robert has oven. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Robert? Answer: Yes\n Premise: < Anthony has bicycle. Paul has spray. Kimberly has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Kimberly? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [15, 16], "Q": [47, 49], "K": [17, 19], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 55]}, {"END": [112, 113], "A": [107, 110], "V": [71, 74], "Q": [105, 106], "K": [75, 77], "R": null, "K'": [[62, 68], [65, 70]], "V'": [[60, 66], [61, 67]], "example": [56, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nancy has calculator. Maria has dagger. Robert has oven. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Robert? Answer: Yes\n Premise: < Anthony has bicycle. Paul has spray. Kimberly has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Paul? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [15, 16], "Q": [47, 49], "K": [17, 19], "R": null, "K'": [[7, 12], [9, 14]], "V'": [[5, 10], [6, 11]], "example": [1, 55]}, {"END": [110, 111], "A": [107, 108], "V": [71, 74], "Q": [105, 106], "K": [75, 77], "R": null, "K'": [[62, 68], [65, 70]], "V'": [[60, 66], [61, 67]], "example": [56, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The knife is Kimberly's. The truck is Sharon's. The swimsuit is Kenneth's. >. So who owns a thing used for swiming? Kenneth\n < The swim fins is Sandra's. The truck is Kevin's. The oven is Elizabeth's. >. So who owns a thing used for cooking? Elizabeth\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [26, 27], "Q": [40, 43], "K": [22, 25], "R": null, "K'": [[3, 13], [5, 15]], "V'": [[6, 16], [9, 18]], "example": [1, 45]}, {"END": [85, 86], "A": [86, 87], "V": [69, 70], "Q": [83, 85], "K": [66, 68], "R": null, "K'": [[48, 58], [51, 60]], "V'": [[52, 61], [54, 62]], "example": [46, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The pencil is Richard's. The radio is Brian's. The plane is Sarah's. >. So who owns a thing used for writing? Richard\n < The pan is Ronald's. The broom is Susan's. The telegraph is Dorothy's. >. So who owns a thing used for cleaning? Susan\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [7, 8], "Q": [35, 36], "K": [3, 6], "R": null, "K'": [[12, 19], [13, 20]], "V'": [[14, 21], [15, 22]], "example": [1, 38]}, {"END": [77, 78], "A": [78, 79], "V": [52, 53], "Q": [75, 77], "K": [49, 51], "R": null, "K'": [[41, 57], [42, 59]], "V'": [[43, 60], [45, 62]], "example": [39, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The spray is Ruth's. The motorcycle is Donald's. The broom is Mark's. >. So who owns a thing used for riding? Donald\n < The horse is Christopher's. The biro is Deborah's. The vacuum cleaner is Kevin's. >. So who owns a thing used for writing? Deborah\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [14, 15], "Q": [36, 38], "K": [11, 13], "R": null, "K'": [[3, 19], [5, 21]], "V'": [[6, 22], [7, 23]], "example": [1, 40]}, {"END": [80, 81], "A": [81, 84], "V": [53, 56], "Q": [79, 80], "K": [50, 52], "R": null, "K'": [[43, 60], [44, 64]], "V'": [[45, 65], [46, 66]], "example": [41, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The calculator is Anthony's. The piano is Kenneth's. The roller is Joseph's. >. So who owns a thing used for calculating? Anthony\n < The chalk is Daniel's. The car is Sharon's. The swim fins is Anthony's. >. So who owns a thing used for driving? Sharon\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [6, 7], "Q": [35, 36], "K": [3, 5], "R": null, "K'": [[11, 18], [12, 20]], "V'": [[13, 21], [14, 22]], "example": [1, 38]}, {"END": [76, 77], "A": [77, 79], "V": [51, 53], "Q": [75, 76], "K": [49, 50], "R": null, "K'": [[41, 57], [43, 60]], "V'": [[44, 61], [45, 62]], "example": [39, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The car is Thomas's. The spray is Ruth's. The calculator is Margaret's. >. So who owns a thing used for painting? Ruth\n < The computer is Nancy's. The phone is Barbara's. The car is Margaret's. >. So who owns a thing used for communicating? Barbara\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [13, 14], "Q": [35, 36], "K": [10, 12], "R": null, "K'": [[3, 18], [4, 20]], "V'": [[5, 21], [6, 22]], "example": [1, 38]}, {"END": [73, 74], "A": [74, 75], "V": [50, 51], "Q": [71, 73], "K": [48, 49], "R": null, "K'": [[41, 55], [42, 56]], "V'": [[43, 57], [44, 58]], "example": [39, 75]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The goggles is George's. The telephone is Michael's. The gun is Brian's. >. So who owns a thing used for killing? Brian\n < The pan is Donna's. The swimsuit is Linda's. The glider is Steven's. >. So who owns a thing used for cooking? Donna\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [23, 24], "Q": [37, 38], "K": [21, 22], "R": null, "K'": [[3, 13], [7, 15]], "V'": [[8, 16], [9, 17]], "example": [1, 40]}, {"END": [80, 81], "A": [81, 83], "V": [45, 47], "Q": [78, 80], "K": [43, 44], "R": null, "K'": [[51, 61], [54, 63]], "V'": [[55, 64], [57, 65]], "example": [41, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The guitar is Carol's. The phone is David's. The violin is Michael's. >. So who owns a thing used for communicating? David\n < The telegraph is Linda's. The gun is Steven's. The plane is Mark's. >. So who owns a thing used for flying? Mark\n", "ranges": [{"END": [36, 37], "A": [37, 38], "V": [12, 13], "Q": [34, 36], "K": [10, 11], "R": null, "K'": [[3, 17], [4, 19]], "V'": [[5, 20], [6, 21]], "example": [1, 38]}, {"END": [74, 75], "A": [75, 76], "V": [59, 60], "Q": [73, 74], "K": [57, 58], "R": null, "K'": [[41, 50], [43, 51]], "V'": [[44, 52], [46, 53]], "example": [39, 76]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The oven is Michelle's. The radio is Betty's. The palette is Kimberly's. >. So who owns a thing used for cooking? Michelle\n < The calculator is Patricia's. The oven is Lisa's. The guitar is Mark's. >. So who owns a thing used for cooking? Lisa\n", "ranges": [{"END": [40, 41], "A": [41, 43], "V": [6, 8], "Q": [38, 40], "K": [3, 5], "R": null, "K'": [[12, 19], [13, 21]], "V'": [[14, 22], [15, 25]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 84], "V": [59, 60], "Q": [80, 82], "K": [56, 58], "R": null, "K'": [[46, 64], [48, 65]], "V'": [[49, 66], [52, 67]], "example": [44, 84]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The knife is Kimberly's. The truck is Sharon's. The swimsuit is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Kimberly? Answer: No\n Premise: < The plane is Kevin's. The swim fins is Carol's. The knife is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is Kevin? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [64, 67], "V": [29, 30], "Q": [60, 63], "K": [25, 28], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 21]], "example": [1, 71]}, {"END": [132, 133], "A": [129, 130], "V": [79, 80], "Q": [127, 128], "K": [77, 78], "R": null, "K'": [[84, 93], [87, 95]], "V'": [[88, 96], [89, 97]], "example": [72, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The knife is Kimberly's. The truck is Sharon's. The swimsuit is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Kimberly? Answer: No\n Premise: < The plane is Kevin's. The swim fins is Carol's. The knife is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is Edward? Answer: No\n", "ranges": [{"END": [69, 70], "A": [64, 67], "V": [29, 30], "Q": [60, 63], "K": [25, 28], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 21]], "example": [1, 71]}, {"END": [132, 133], "A": [129, 130], "V": [79, 80], "Q": [127, 128], "K": [77, 78], "R": null, "K'": [[84, 93], [87, 95]], "V'": [[88, 96], [89, 97]], "example": [72, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Christopher's. The biro is Linda's. The radio is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Kenneth? Answer: No\n Premise: < The palette is John's. The pot is Daniel's. The gun is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is John? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [8, 9], "Q": [55, 57], "K": [6, 7], "R": null, "K'": [[13, 22], [15, 23]], "V'": [[16, 24], [18, 25]], "example": [1, 63]}, {"END": [122, 123], "A": [119, 120], "V": [72, 73], "Q": [117, 118], "K": [69, 71], "R": null, "K'": [[77, 84], [78, 85]], "V'": [[79, 86], [80, 87]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Christopher's. The biro is Linda's. The radio is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Kenneth? Answer: No\n Premise: < The palette is John's. The pot is Daniel's. The gun is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Daniel? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [8, 9], "Q": [55, 57], "K": [6, 7], "R": null, "K'": [[13, 22], [15, 23]], "V'": [[16, 24], [18, 25]], "example": [1, 63]}, {"END": [122, 123], "A": [119, 120], "V": [72, 73], "Q": [117, 118], "K": [69, 71], "R": null, "K'": [[77, 84], [78, 85]], "V'": [[79, 86], [80, 87]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Mark's. The plane is Margaret's. The abacus is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for calculating is Mark? Answer: No\n Premise: < The pot is Betty's. The truck is Steven's. The motorcycle is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Steven? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [24, 26], "Q": [56, 57], "K": [20, 23], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [79, 80], "Q": [119, 120], "K": [76, 78], "R": null, "K'": [[69, 84], [70, 86]], "V'": [[71, 87], [72, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Mark's. The plane is Margaret's. The abacus is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for calculating is Mark? Answer: No\n Premise: < The pot is Betty's. The truck is Steven's. The motorcycle is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Betty? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [24, 26], "Q": [56, 57], "K": [20, 23], "R": null, "K'": [[6, 13], [7, 14]], "V'": [[8, 15], [9, 16]], "example": [1, 63]}, {"END": [124, 125], "A": [121, 122], "V": [79, 80], "Q": [119, 120], "K": [76, 78], "R": null, "K'": [[69, 84], [70, 86]], "V'": [[71, 87], [72, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The violin is Daniel's. The motorcycle is Sharon's. The chalk is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Sharon? Answer: Yes\n Premise: < The computer is Laura's. The spray is Kimberly's. The horse is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Ruth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [17, 19], "Q": [57, 59], "K": [14, 16], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 66]}, {"END": [128, 129], "A": [125, 126], "V": [91, 92], "Q": [122, 124], "K": [89, 90], "R": null, "K'": [[72, 79], [73, 81]], "V'": [[74, 82], [75, 85]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The violin is Daniel's. The motorcycle is Sharon's. The chalk is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Sharon? Answer: Yes\n Premise: < The computer is Laura's. The spray is Kimberly's. The horse is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is Kimberly? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [17, 19], "Q": [57, 59], "K": [14, 16], "R": null, "K'": [[6, 23], [8, 25]], "V'": [[9, 26], [10, 27]], "example": [1, 66]}, {"END": [130, 131], "A": [125, 128], "V": [91, 92], "Q": [122, 124], "K": [89, 90], "R": null, "K'": [[72, 79], [73, 81]], "V'": [[74, 82], [75, 85]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Barbara's. The glider is Anthony's. The swim fins is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is Brian? Answer: No\n Premise: < The broom is John's. The dagger is Michael's. The phone is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Michael? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [8, 9], "Q": [56, 57], "K": [6, 7], "R": null, "K'": [[13, 21], [15, 24]], "V'": [[16, 25], [17, 26]], "example": [1, 63]}, {"END": [123, 124], "A": [120, 121], "V": [80, 81], "Q": [118, 119], "K": [77, 79], "R": null, "K'": [[69, 85], [71, 86]], "V'": [[72, 87], [73, 88]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Barbara's. The glider is Anthony's. The swim fins is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is Brian? Answer: No\n Premise: < The broom is John's. The dagger is Michael's. The phone is Helen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is John? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [8, 9], "Q": [56, 57], "K": [6, 7], "R": null, "K'": [[13, 21], [15, 24]], "V'": [[16, 25], [17, 26]], "example": [1, 63]}, {"END": [123, 124], "A": [120, 121], "V": [80, 81], "Q": [118, 119], "K": [77, 79], "R": null, "K'": [[69, 85], [71, 86]], "V'": [[72, 87], [73, 88]], "example": [64, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Michelle's. The abacus is Laura's. The spray is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Michelle? Answer: No\n Premise: < The abacus is Michael's. The violin is John's. The car is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is Ronald? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [26, 27], "Q": [57, 58], "K": [23, 25], "R": null, "K'": [[6, 14], [7, 17]], "V'": [[8, 18], [10, 19]], "example": [1, 65]}, {"END": [128, 129], "A": [124, 126], "V": [90, 92], "Q": [122, 123], "K": [88, 89], "R": null, "K'": [[71, 80], [74, 82]], "V'": [[75, 83], [76, 84]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Michelle's. The abacus is Laura's. The spray is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Michelle? Answer: No\n Premise: < The abacus is Michael's. The violin is John's. The car is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is John? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [26, 27], "Q": [57, 58], "K": [23, 25], "R": null, "K'": [[6, 14], [7, 17]], "V'": [[8, 18], [10, 19]], "example": [1, 65]}, {"END": [127, 128], "A": [124, 125], "V": [90, 92], "Q": [122, 123], "K": [88, 89], "R": null, "K'": [[71, 80], [74, 82]], "V'": [[75, 83], [76, 84]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The spray is Richard's. The goggles is Sandra's. The guitar is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Sandra? Answer: No\n Premise: < The oven is Linda's. The swim fins is Richard's. The pen is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Richard? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [9, 10], "Q": [58, 59], "K": [6, 8], "R": null, "K'": [[14, 25], [18, 26]], "V'": [[19, 27], [21, 28]], "example": [1, 66]}, {"END": [130, 131], "A": [127, 128], "V": [85, 86], "Q": [123, 126], "K": [81, 84], "R": null, "K'": [[72, 90], [74, 91]], "V'": [[75, 92], [77, 93]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The spray is Richard's. The goggles is Sandra's. The guitar is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is Sandra? Answer: No\n Premise: < The oven is Linda's. The swim fins is Richard's. The pen is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is Steven? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [9, 10], "Q": [58, 59], "K": [6, 8], "R": null, "K'": [[14, 25], [18, 26]], "V'": [[19, 27], [21, 28]], "example": [1, 66]}, {"END": [130, 131], "A": [127, 128], "V": [85, 86], "Q": [123, 126], "K": [81, 84], "R": null, "K'": [[72, 90], [74, 91]], "V'": [[75, 92], [77, 93]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The calculator is Nancy's. The dagger is Maria's. The oven is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Robert? Answer: Yes\n Premise: < The bicycle is Anthony's. The spray is Paul's. The knife is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Kimberly? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [59, 60], "V": [25, 26], "Q": [56, 58], "K": [22, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 64]}, {"END": [130, 131], "A": [125, 128], "V": [90, 93], "Q": [123, 124], "K": [87, 89], "R": null, "K'": [[70, 79], [73, 81]], "V'": [[74, 82], [75, 83]], "example": [65, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The calculator is Nancy's. The dagger is Maria's. The oven is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is Robert? Answer: Yes\n Premise: < The bicycle is Anthony's. The spray is Paul's. The knife is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is Paul? Answer: No\n", "ranges": [{"END": [62, 63], "A": [59, 60], "V": [25, 26], "Q": [56, 58], "K": [22, 24], "R": null, "K'": [[6, 14], [8, 16]], "V'": [[9, 17], [10, 18]], "example": [1, 64]}, {"END": [128, 129], "A": [125, 126], "V": [90, 93], "Q": [123, 124], "K": [87, 89], "R": null, "K'": [[70, 79], [73, 81]], "V'": [[74, 82], [75, 83]], "example": [65, 130]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly has swimsuit. Sharon has goggles. Kenneth has pencil. >. The one who owns a thing used for swiming is not Kenneth\n < Sandra has pan. Kevin has oven. Elizabeth has car. >. The one who owns a thing used for cooking is not Elizabeth\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [18, 19], "Q": [35, 38], "K'": [20, 23], "R": [39, 40], "K": [[6, 13], [9, 17]], "V": [[2, 10], [5, 12]], "example": [1, 41]}, {"END": [71, 72], "A'": [72, 73], "V'": [53, 54], "Q": [68, 70], "K'": [55, 56], "R": [71, 72], "K": [[46, 50], [47, 52]], "V": [[43, 48], [45, 49]], "example": [42, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard has truck. Brian has chalk. Sarah has pen. >. The one who owns a thing used for writing is not Richard\n < Susan has mop. Barbara has pencil. Paul has broom. >. The one who owns a thing used for cleaning is not Barbara\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [2, 3], "Q": [27, 28], "K'": [4, 6], "R": [29, 30], "K": [[9, 14], [11, 15]], "V": [[7, 12], [8, 13]], "example": [1, 31]}, {"END": [63, 64], "A'": [64, 65], "V'": [38, 39], "Q": [60, 62], "K'": [40, 43], "R": [63, 64], "K": [[35, 46], [37, 48]], "V": [[33, 44], [34, 45]], "example": [32, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jeff has glider. Brian has pen. Donald has helicopter. >. The one who owns a thing used for flying is not Brian\n < Thomas has brush. Kimberly has palette. Mark has plane. >. The one who owns a thing used for painting is not Mark\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [7, 8], "Q": [28, 29], "K'": [9, 10], "R": [30, 31], "K": [[4, 13], [6, 16]], "V": [[2, 11], [3, 12]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 65], "V'": [46, 47], "Q": [61, 62], "K'": [48, 49], "R": [63, 64], "K": [[36, 43], [38, 45]], "V": [[34, 39], [35, 42]], "example": [33, 65]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Betty has pan. Michelle has pot. Maria has car. >. The one who owns a thing used for cooking is not Maria\n < Brian has abacus. Kevin has calculator. Karen has swim fins. >. The one who owns a thing used for calculating is not Karen\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [11, 12], "Q": [26, 28], "K'": [13, 14], "R": [29, 30], "K": [[4, 9], [5, 10]], "V": [[2, 6], [3, 8]], "example": [1, 31]}, {"END": [64, 65], "A'": [65, 67], "V'": [44, 46], "Q": [62, 63], "K'": [47, 50], "R": [64, 65], "K": [[35, 41], [38, 43]], "V": [[33, 39], [34, 40]], "example": [32, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Sarah has swim fins. Jeff has plane. Patricia has goggles. >. The one who owns a thing used for swiming is not Jeff\n < Patricia has goggles. Lisa has calculator. James has swim fins. >. The one who owns a thing used for swiming is not Lisa\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [8, 9], "Q": [32, 35], "K'": [10, 11], "R": [36, 37], "K": [[4, 16], [7, 20]], "V": [[2, 12], [3, 15]], "example": [1, 38]}, {"END": [75, 76], "A'": [76, 77], "V'": [49, 50], "Q": [71, 74], "K'": [51, 53], "R": [75, 76], "K": [[44, 56], [48, 59]], "V": [[40, 54], [43, 55]], "example": [39, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna has swimsuit. Sharon has spray. Laura has swim fins. >. The one who owns a thing used for swiming is not Sharon\n < John has pot. Susan has broom. Helen has oven. >. The one who owns a thing used for cooking is not Susan\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [9, 11], "Q": [32, 35], "K'": [12, 14], "R": [36, 37], "K": [[5, 17], [8, 20]], "V": [[2, 15], [4, 16]], "example": [1, 39]}, {"END": [69, 70], "A'": [70, 71], "V'": [45, 46], "Q": [66, 68], "K'": [47, 49], "R": [69, 70], "K": [[43, 52], [44, 54]], "V": [[41, 50], [42, 51]], "example": [40, 71]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Steven has plane. William has radio. Dorothy has telegraph. >. The one who owns a thing used for communicating is not Steven\n < Carol has oven. Karen has jeep. Kevin has pan. >. The one who owns a thing used for cooking is not Karen\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [2, 3], "Q": [27, 29], "K'": [4, 5], "R": [30, 31], "K": [[8, 13], [9, 15]], "V": [[6, 10], [7, 12]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 66], "V'": [39, 41], "Q": [60, 62], "K'": [42, 44], "R": [63, 64], "K": [[36, 47], [38, 48]], "V": [[34, 45], [35, 46]], "example": [33, 66]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Maria has telegraph. Kenneth has gun. Linda has dagger. >. The one who owns a thing used for killing is not Maria\n < Jennifer has pen. George has glider. Helen has plane. >. The one who owns a thing used for flying is not Jennifer\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [2, 3], "Q": [28, 29], "K'": [4, 6], "R": [30, 31], "K": [[9, 14], [10, 16]], "V": [[7, 11], [8, 13]], "example": [1, 32]}, {"END": [61, 62], "A'": [62, 64], "V'": [34, 36], "Q": [59, 60], "K'": [37, 38], "R": [61, 62], "K": [[41, 46], [43, 47]], "V": [[39, 44], [40, 45]], "example": [33, 64]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has swimsuit. Sharon has goggles. Kenneth has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Kimberly? Answer: No\n Premise: < Sandra has plane. Kevin has helicopter. Elizabeth has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [21, 22], "Q": [54, 57], "K'": [23, 26], "R": [58, 59], "K": [[9, 16], [12, 20]], "V": [[5, 13], [8, 15]], "example": [1, 66]}, {"END": [120, 121], "A'": [117, 118], "V'": [82, 83], "Q": [114, 115], "K'": [84, 86], "R": [116, 117], "K": [[74, 78], [75, 81]], "V": [[71, 76], [73, 77]], "example": [67, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly has swimsuit. Sharon has goggles. Kenneth has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Kimberly? Answer: No\n Premise: < Sandra has plane. Kevin has helicopter. Elizabeth has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Kevin? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [21, 22], "Q": [54, 57], "K'": [23, 26], "R": [58, 59], "K": [[9, 16], [12, 20]], "V": [[5, 13], [8, 15]], "example": [1, 66]}, {"END": [120, 121], "A'": [117, 118], "V'": [82, 83], "Q": [114, 115], "K'": [84, 86], "R": [116, 117], "K": [[74, 78], [75, 81]], "V": [[71, 76], [73, 77]], "example": [67, 122]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia has pot. Helen has oven. Joseph has mop. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not Joseph? Answer: Yes\n Premise: < Deborah has helicopter. Kevin has spray. John has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not Deborah? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [16, 17], "Q": [48, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 13], [10, 15]], "V": [[5, 11], [8, 12]], "example": [1, 57]}, {"END": [115, 116], "A'": [110, 113], "V'": [62, 65], "Q": [107, 108], "K'": [66, 69], "R": [109, 110], "K": [[72, 77], [74, 79]], "V": [[70, 75], [71, 76]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Patricia has pot. Helen has oven. Joseph has mop. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not Joseph? Answer: Yes\n Premise: < Deborah has helicopter. Kevin has spray. John has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not John? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [52, 53], "V'": [16, 17], "Q": [48, 50], "K'": [18, 20], "R": [51, 52], "K": [[9, 13], [10, 15]], "V": [[5, 11], [8, 12]], "example": [1, 57]}, {"END": [113, 114], "A'": [110, 111], "V'": [62, 65], "Q": [107, 108], "K'": [66, 69], "R": [109, 110], "K": [[72, 77], [74, 79]], "V": [[70, 75], [71, 76]], "example": [58, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has guitar. Edward has piano. Robert has pot. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not Mary? Answer: No\n Premise: < Elizabeth has vacuum cleaner. Steven has truck. Margaret has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [13, 14], "Q": [44, 45], "K'": [15, 16], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [106, 107], "A'": [103, 104], "V'": [57, 58], "Q": [100, 101], "K'": [59, 63], "R": [102, 103], "K": [[66, 71], [68, 72]], "V": [[64, 69], [65, 70]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary has guitar. Edward has piano. Robert has pot. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not Mary? Answer: No\n Premise: < Elizabeth has vacuum cleaner. Steven has truck. Margaret has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Steven? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [13, 14], "Q": [44, 45], "K'": [15, 16], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 52]}, {"END": [106, 107], "A'": [103, 104], "V'": [57, 58], "Q": [100, 101], "K'": [59, 63], "R": [102, 103], "K": [[66, 71], [68, 72]], "V": [[64, 69], [65, 70]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth has vacuum cleaner. Donna has mop. Brian has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not Kenneth? Answer: No\n Premise: < Sarah has swim fins. Jeff has plane. Patricia has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Jeff? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [18, 19], "Q": [49, 51], "K'": [20, 21], "R": [52, 53], "K": [[7, 15], [11, 17]], "V": [[5, 12], [6, 14]], "example": [1, 58]}, {"END": [117, 118], "A'": [114, 115], "V'": [69, 70], "Q": [109, 112], "K'": [71, 72], "R": [113, 114], "K": [[65, 77], [68, 81]], "V": [[63, 73], [64, 76]], "example": [59, 119]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kenneth has vacuum cleaner. Donna has mop. Brian has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not Kenneth? Answer: No\n Premise: < Sarah has swim fins. Jeff has plane. Patricia has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Patricia? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [53, 54], "V'": [18, 19], "Q": [49, 51], "K'": [20, 21], "R": [52, 53], "K": [[7, 15], [11, 17]], "V": [[5, 12], [6, 14]], "example": [1, 58]}, {"END": [119, 120], "A'": [114, 117], "V'": [69, 70], "Q": [109, 112], "K'": [71, 72], "R": [113, 114], "K": [[65, 77], [68, 81]], "V": [[63, 73], [64, 76]], "example": [59, 121]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna has radio. Richard has dagger. Margaret has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not Richard? Answer: Yes\n Premise: < Jason has motorcycle. George has spray. Michael has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not Jason? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [10, 11], "Q": [47, 49], "K'": [12, 14], "R": [50, 51], "K": [[8, 17], [9, 19]], "V": [[5, 15], [7, 16]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [61, 62], "Q": [103, 104], "K'": [63, 65], "R": [105, 106], "K": [[68, 73], [70, 75]], "V": [[66, 71], [67, 72]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donna has radio. Richard has dagger. Margaret has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not Richard? Answer: Yes\n Premise: < Jason has motorcycle. George has spray. Michael has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not George? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [10, 11], "Q": [47, 49], "K'": [12, 14], "R": [50, 51], "K": [[8, 17], [9, 19]], "V": [[5, 15], [7, 16]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [61, 62], "Q": [103, 104], "K'": [63, 65], "R": [105, 106], "K": [[68, 73], [70, 75]], "V": [[66, 71], [67, 72]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth has motorcycle. Mary has biro. Betty has pen. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for writing is not Elizabeth? Answer: Yes\n Premise: < Carol has plane. Linda has truck. Kevin has glider. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Linda? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [46, 47], "K'": [7, 9], "R": [48, 49], "K": [[12, 17], [14, 18]], "V": [[10, 15], [11, 16]], "example": [1, 54]}, {"END": [108, 109], "A'": [104, 106], "V'": [63, 65], "Q": [101, 102], "K'": [66, 68], "R": [103, 104], "K": [[61, 71], [62, 73]], "V": [[59, 69], [60, 70]], "example": [55, 110]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Elizabeth has motorcycle. Mary has biro. Betty has pen. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for writing is not Elizabeth? Answer: Yes\n Premise: < Carol has plane. Linda has truck. Kevin has glider. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Carol? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [5, 6], "Q": [46, 47], "K'": [7, 9], "R": [48, 49], "K": [[12, 17], [14, 18]], "V": [[10, 15], [11, 16]], "example": [1, 54]}, {"END": [107, 108], "A'": [104, 105], "V'": [63, 65], "Q": [101, 102], "K'": [66, 68], "R": [103, 104], "K": [[61, 71], [62, 73]], "V": [[59, 69], [60, 70]], "example": [55, 109]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph has helicopter. Maria has glider. Kenneth has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Maria? Answer: No\n Premise: < George has truck. Mary has jeep. Margaret has palette. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Margaret? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [16, 17], "Q": [48, 49], "K'": [18, 20], "R": [50, 51], "K": [[7, 13], [10, 15]], "V": [[5, 11], [6, 12]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [71, 72], "Q": [103, 104], "K'": [73, 75], "R": [105, 106], "K": [[63, 68], [65, 70]], "V": [[61, 66], [62, 67]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Joseph has helicopter. Maria has glider. Kenneth has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Maria? Answer: No\n Premise: < George has truck. Mary has jeep. Margaret has palette. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not George? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [16, 17], "Q": [48, 49], "K'": [18, 20], "R": [50, 51], "K": [[7, 13], [10, 15]], "V": [[5, 11], [6, 12]], "example": [1, 56]}, {"END": [109, 110], "A'": [106, 107], "V'": [71, 72], "Q": [103, 104], "K'": [73, 75], "R": [105, 106], "K": [[63, 68], [65, 70]], "V": [[61, 66], [62, 67]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George has guitar. Deborah has telephone. Richard has phone. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not George? Answer: Yes\n Premise: < Patricia has plane. Edward has helicopter. Jeff has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Jeff? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [5, 6], "Q": [47, 49], "K'": [7, 8], "R": [50, 51], "K": [[13, 18], [15, 19]], "V": [[9, 16], [12, 17]], "example": [1, 56]}, {"END": [113, 114], "A'": [110, 111], "V'": [73, 74], "Q": [107, 108], "K'": [75, 79], "R": [109, 110], "K": [[65, 69], [66, 72]], "V": [[61, 67], [64, 68]], "example": [57, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < George has guitar. Deborah has telephone. Richard has phone. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not George? Answer: Yes\n Premise: < Patricia has plane. Edward has helicopter. Jeff has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Edward? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [51, 52], "V'": [5, 6], "Q": [47, 49], "K'": [7, 8], "R": [50, 51], "K": [[13, 18], [15, 19]], "V": [[9, 16], [12, 17]], "example": [1, 56]}, {"END": [113, 114], "A'": [110, 111], "V'": [73, 74], "Q": [107, 108], "K'": [75, 79], "R": [109, 110], "K": [[65, 69], [66, 72]], "V": [[61, 67], [64, 68]], "example": [57, 115]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The swimsuit is Kimberly's. The goggles is Sharon's. The pencil is Kenneth's. >. The one who owns a thing used for swiming is not Kenneth\n < The pan is Sandra's. The oven is Kevin's. The car is Elizabeth's. >. The one who owns a thing used for cooking is not Elizabeth\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [29, 30], "Q": [44, 47], "K'": [25, 28], "R": [48, 49], "K": [[3, 14], [6, 18]], "V": [[7, 19], [10, 21]], "example": [1, 50]}, {"END": [89, 90], "A'": [90, 91], "V'": [71, 72], "Q": [86, 88], "K'": [69, 70], "R": [89, 90], "K": [[53, 61], [54, 63]], "V": [[55, 64], [57, 65]], "example": [51, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The truck is Richard's. The chalk is Brian's. The pen is Sarah's. >. The one who owns a thing used for writing is not Richard\n < The mop is Susan's. The pencil is Barbara's. The broom is Paul's. >. The one who owns a thing used for cleaning is not Barbara\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [6, 7], "Q": [36, 37], "K'": [3, 5], "R": [38, 39], "K": [[11, 19], [13, 20]], "V": [[14, 21], [15, 22]], "example": [1, 40]}, {"END": [81, 82], "A'": [82, 83], "V'": [55, 56], "Q": [78, 80], "K'": [51, 54], "R": [81, 82], "K": [[43, 60], [45, 62]], "V": [[46, 63], [47, 64]], "example": [41, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The glider is Jeff's. The pen is Brian's. The helicopter is Donald's. >. The one who owns a thing used for flying is not Brian\n < The brush is Thomas's. The palette is Kimberly's. The plane is Mark's. >. The one who owns a thing used for painting is not Mark\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [13, 14], "Q": [37, 38], "K'": [11, 12], "R": [39, 40], "K": [[3, 18], [5, 21]], "V": [[6, 22], [7, 23]], "example": [1, 41]}, {"END": [81, 82], "A'": [82, 83], "V'": [64, 65], "Q": [79, 80], "K'": [62, 63], "R": [81, 82], "K": [[44, 52], [46, 54]], "V": [[47, 55], [48, 58]], "example": [42, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The pan is Betty's. The pot is Michelle's. The car is Maria's. >. The one who owns a thing used for cooking is not Maria\n < The abacus is Brian's. The calculator is Kevin's. The swim fins is Karen's. >. The one who owns a thing used for calculating is not Karen\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [20, 21], "Q": [35, 37], "K'": [18, 19], "R": [38, 39], "K": [[3, 10], [4, 11]], "V": [[5, 12], [6, 14]], "example": [1, 40]}, {"END": [82, 83], "A'": [83, 85], "V'": [64, 66], "Q": [80, 81], "K'": [60, 63], "R": [82, 83], "K": [[43, 52], [46, 54]], "V": [[47, 55], [48, 56]], "example": [41, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The swim fins is Sarah's. The plane is Jeff's. The goggles is Patricia's. >. The one who owns a thing used for swiming is not Jeff\n < The goggles is Patricia's. The calculator is Lisa's. The swim fins is James's. >. The one who owns a thing used for swiming is not Lisa\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [14, 15], "Q": [41, 44], "K'": [12, 13], "R": [45, 46], "K": [[3, 19], [6, 23]], "V": [[7, 24], [8, 27]], "example": [1, 47]}, {"END": [93, 94], "A'": [94, 95], "V'": [65, 66], "Q": [89, 92], "K'": [62, 64], "R": [93, 94], "K": [[50, 70], [54, 73]], "V": [[55, 74], [58, 75]], "example": [48, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The swimsuit is Donna's. The spray is Sharon's. The swim fins is Laura's. >. The one who owns a thing used for swiming is not Sharon\n < The pot is John's. The broom is Susan's. The oven is Helen's. >. The one who owns a thing used for cooking is not Susan\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [16, 18], "Q": [41, 44], "K'": [13, 15], "R": [45, 46], "K": [[3, 22], [6, 25]], "V": [[7, 26], [9, 27]], "example": [1, 48]}, {"END": [87, 88], "A'": [88, 89], "V'": [61, 62], "Q": [84, 86], "K'": [58, 60], "R": [87, 88], "K": [[51, 66], [52, 68]], "V": [[53, 69], [54, 70]], "example": [49, 89]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The plane is Steven's. The radio is William's. The telegraph is Dorothy's. >. The one who owns a thing used for communicating is not Steven\n < The oven is Carol's. The jeep is Karen's. The pan is Kevin's. >. The one who owns a thing used for cooking is not Karen\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [5, 6], "Q": [36, 38], "K'": [3, 4], "R": [39, 40], "K": [[10, 17], [11, 19]], "V": [[12, 20], [13, 22]], "example": [1, 41]}, {"END": [81, 82], "A'": [82, 84], "V'": [55, 57], "Q": [78, 80], "K'": [52, 54], "R": [81, 82], "K": [[44, 61], [46, 62]], "V": [[47, 63], [48, 64]], "example": [42, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The telegraph is Maria's. The gun is Kenneth's. The dagger is Linda's. >. The one who owns a thing used for killing is not Maria\n < The pen is Jennifer's. The glider is George's. The plane is Helen's. >. The one who owns a thing used for flying is not Jennifer\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [6, 7], "Q": [37, 38], "K'": [3, 5], "R": [39, 40], "K": [[11, 18], [12, 20]], "V": [[13, 21], [14, 23]], "example": [1, 41]}, {"END": [79, 80], "A'": [80, 82], "V'": [46, 48], "Q": [77, 78], "K'": [44, 45], "R": [79, 80], "K": [[52, 60], [54, 61]], "V": [[55, 62], [56, 63]], "example": [42, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The swimsuit is Kimberly's. The goggles is Sharon's. The pencil is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Kimberly? Answer: No\n Premise: < The plane is Sandra's. The helicopter is Kevin's. The truck is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [32, 33], "Q": [63, 66], "K'": [28, 31], "R": [67, 68], "K": [[6, 17], [9, 21]], "V": [[10, 22], [13, 24]], "example": [1, 75]}, {"END": [138, 139], "A'": [135, 136], "V'": [101, 102], "Q": [132, 133], "K'": [98, 100], "R": [134, 135], "K": [[81, 89], [82, 92]], "V": [[83, 93], [85, 94]], "example": [76, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The swimsuit is Kimberly's. The goggles is Sharon's. The pencil is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Kimberly? Answer: No\n Premise: < The plane is Sandra's. The helicopter is Kevin's. The truck is Elizabeth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Kevin? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [32, 33], "Q": [63, 66], "K'": [28, 31], "R": [67, 68], "K": [[6, 17], [9, 21]], "V": [[10, 22], [13, 24]], "example": [1, 75]}, {"END": [138, 139], "A'": [135, 136], "V'": [101, 102], "Q": [132, 133], "K'": [98, 100], "R": [134, 135], "K": [[81, 89], [82, 92]], "V": [[83, 93], [85, 94]], "example": [76, 140]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Patricia's. The oven is Helen's. The mop is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not Joseph? Answer: Yes\n Premise: < The helicopter is Deborah's. The spray is Kevin's. The brush is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not Deborah? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [26, 27], "Q": [57, 59], "K'": [23, 25], "R": [60, 61], "K": [[6, 15], [7, 17]], "V": [[8, 18], [11, 19]], "example": [1, 66]}, {"END": [133, 134], "A'": [128, 131], "V'": [76, 79], "Q": [125, 126], "K'": [72, 75], "R": [127, 128], "K": [[83, 91], [85, 93]], "V": [[86, 94], [87, 95]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The pot is Patricia's. The oven is Helen's. The mop is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not Joseph? Answer: Yes\n Premise: < The helicopter is Deborah's. The spray is Kevin's. The brush is John's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not John? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [61, 62], "V'": [26, 27], "Q": [57, 59], "K'": [23, 25], "R": [60, 61], "K": [[6, 15], [7, 17]], "V": [[8, 18], [11, 19]], "example": [1, 66]}, {"END": [131, 132], "A'": [128, 129], "V'": [76, 79], "Q": [125, 126], "K'": [72, 75], "R": [127, 128], "K": [[83, 91], [85, 93]], "V": [[86, 94], [87, 95]], "example": [67, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Mary's. The piano is Edward's. The pot is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not Mary? Answer: No\n Premise: < The vacuum cleaner is Elizabeth's. The truck is Steven's. The car is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Elizabeth? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [22, 23], "Q": [53, 54], "K'": [20, 21], "R": [55, 56], "K": [[6, 13], [7, 14]], "V": [[8, 15], [9, 16]], "example": [1, 61]}, {"END": [124, 125], "A'": [121, 122], "V'": [72, 73], "Q": [118, 119], "K'": [67, 71], "R": [120, 121], "K": [[77, 85], [79, 86]], "V": [[80, 87], [81, 88]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Mary's. The piano is Edward's. The pot is Robert's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not Mary? Answer: No\n Premise: < The vacuum cleaner is Elizabeth's. The truck is Steven's. The car is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Steven? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [22, 23], "Q": [53, 54], "K'": [20, 21], "R": [55, 56], "K": [[6, 13], [7, 14]], "V": [[8, 15], [9, 16]], "example": [1, 61]}, {"END": [124, 125], "A'": [121, 122], "V'": [72, 73], "Q": [118, 119], "K'": [67, 71], "R": [120, 121], "K": [[77, 85], [79, 86]], "V": [[80, 87], [81, 88]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The vacuum cleaner is Kenneth's. The mop is Donna's. The car is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not Kenneth? Answer: No\n Premise: < The swim fins is Sarah's. The plane is Jeff's. The goggles is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Jeff? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [27, 28], "Q": [58, 60], "K'": [25, 26], "R": [61, 62], "K": [[6, 16], [10, 18]], "V": [[11, 19], [12, 21]], "example": [1, 67]}, {"END": [135, 136], "A'": [132, 133], "V'": [84, 85], "Q": [127, 130], "K'": [82, 83], "R": [131, 132], "K": [[73, 89], [76, 93]], "V": [[77, 94], [78, 97]], "example": [68, 137]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The vacuum cleaner is Kenneth's. The mop is Donna's. The car is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not Kenneth? Answer: No\n Premise: < The swim fins is Sarah's. The plane is Jeff's. The goggles is Patricia's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not Patricia? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [27, 28], "Q": [58, 60], "K'": [25, 26], "R": [61, 62], "K": [[6, 16], [10, 18]], "V": [[11, 19], [12, 21]], "example": [1, 67]}, {"END": [137, 138], "A'": [132, 135], "V'": [84, 85], "Q": [127, 130], "K'": [82, 83], "R": [131, 132], "K": [[73, 89], [76, 93]], "V": [[77, 94], [78, 97]], "example": [68, 139]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The radio is Donna's. The dagger is Richard's. The telegraph is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not Richard? Answer: Yes\n Premise: < The motorcycle is Jason's. The spray is George's. The brush is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not Jason? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [17, 18], "Q": [56, 58], "K'": [14, 16], "R": [59, 60], "K": [[6, 22], [7, 24]], "V": [[8, 25], [10, 26]], "example": [1, 65]}, {"END": [127, 128], "A'": [124, 125], "V'": [74, 75], "Q": [121, 122], "K'": [71, 73], "R": [123, 124], "K": [[79, 87], [81, 89]], "V": [[82, 90], [83, 91]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The radio is Donna's. The dagger is Richard's. The telegraph is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not Richard? Answer: Yes\n Premise: < The motorcycle is Jason's. The spray is George's. The brush is Michael's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for painting is not George? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [17, 18], "Q": [56, 58], "K'": [14, 16], "R": [59, 60], "K": [[6, 22], [7, 24]], "V": [[8, 25], [10, 26]], "example": [1, 65]}, {"END": [127, 128], "A'": [124, 125], "V'": [74, 75], "Q": [121, 122], "K'": [71, 73], "R": [123, 124], "K": [[79, 87], [81, 89]], "V": [[82, 90], [83, 91]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Elizabeth's. The biro is Mary's. The pen is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for writing is not Elizabeth? Answer: Yes\n Premise: < The plane is Carol's. The truck is Linda's. The glider is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Linda? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [9, 10], "Q": [55, 56], "K'": [6, 8], "R": [57, 58], "K": [[14, 22], [16, 23]], "V": [[17, 24], [18, 25]], "example": [1, 63]}, {"END": [126, 127], "A'": [122, 124], "V'": [79, 81], "Q": [119, 120], "K'": [76, 78], "R": [121, 122], "K": [[69, 85], [70, 87]], "V": [[71, 88], [72, 89]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Elizabeth's. The biro is Mary's. The pen is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for writing is not Elizabeth? Answer: Yes\n Premise: < The plane is Carol's. The truck is Linda's. The glider is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Carol? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [9, 10], "Q": [55, 56], "K'": [6, 8], "R": [57, 58], "K": [[14, 22], [16, 23]], "V": [[17, 24], [18, 25]], "example": [1, 63]}, {"END": [125, 126], "A'": [122, 123], "V'": [79, 81], "Q": [119, 120], "K'": [76, 78], "R": [121, 122], "K": [[69, 85], [70, 87]], "V": [[71, 88], [72, 89]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The helicopter is Joseph's. The glider is Maria's. The motorcycle is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Maria? Answer: No\n Premise: < The truck is George's. The jeep is Mary's. The palette is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not Margaret? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [26, 27], "Q": [57, 58], "K'": [23, 25], "R": [59, 60], "K": [[6, 15], [9, 17]], "V": [[10, 18], [11, 19]], "example": [1, 65]}, {"END": [127, 128], "A'": [124, 125], "V'": [90, 91], "Q": [121, 122], "K'": [87, 89], "R": [123, 124], "K": [[71, 79], [73, 81]], "V": [[74, 82], [75, 83]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The helicopter is Joseph's. The glider is Maria's. The motorcycle is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Maria? Answer: No\n Premise: < The truck is George's. The jeep is Mary's. The palette is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not George? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [26, 27], "Q": [57, 58], "K'": [23, 25], "R": [59, 60], "K": [[6, 15], [9, 17]], "V": [[10, 18], [11, 19]], "example": [1, 65]}, {"END": [127, 128], "A'": [124, 125], "V'": [90, 91], "Q": [121, 122], "K'": [87, 89], "R": [123, 124], "K": [[71, 79], [73, 81]], "V": [[74, 82], [75, 83]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is George's. The telephone is Deborah's. The phone is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not George? Answer: Yes\n Premise: < The plane is Patricia's. The helicopter is Edward's. The vacuum cleaner is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Jeff? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [8, 9], "Q": [56, 58], "K'": [6, 7], "R": [59, 60], "K": [[13, 23], [15, 24]], "V": [[16, 25], [19, 26]], "example": [1, 65]}, {"END": [131, 132], "A'": [128, 129], "V'": [94, 95], "Q": [125, 126], "K'": [89, 93], "R": [127, 128], "K": [[71, 80], [72, 83]], "V": [[73, 84], [76, 85]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is George's. The telephone is Deborah's. The phone is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not George? Answer: Yes\n Premise: < The plane is Patricia's. The helicopter is Edward's. The vacuum cleaner is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not Edward? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [60, 61], "V'": [8, 9], "Q": [56, 58], "K'": [6, 7], "R": [59, 60], "K": [[13, 23], [15, 24]], "V": [[16, 25], [19, 26]], "example": [1, 65]}, {"END": [131, 132], "A'": [128, 129], "V'": [94, 95], "Q": [125, 126], "K'": [89, 93], "R": [127, 128], "K": [[71, 80], [72, 83]], "V": [[73, 84], [76, 85]], "example": [66, 133]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, writing, cooking, calculating and cleaning.\n< Sharon has abacus. Donna has pan. James has pen. >. So the boy owns a thing used for writing\n < Daniel has abacus. Margaret has goggles. Kimberly has broom. >. So the boy owns a thing used for calculating\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [36, 37], "Q": [41, 43], "K": [34, 35], "R": null, "K'": [[22, 29], [24, 31]], "V'": [[25, 32], [28, 33]], "example": [21, 50]}, {"END": [82, 83], "A": [83, 84], "V": [54, 57], "Q": [75, 77], "K": [52, 53], "R": null, "K'": [[58, 65], [59, 68]], "V'": [[60, 69], [64, 71]], "example": [51, 84]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving and killing.\n< Paul has gun. Sandra has jeep. Christopher has bicycle. >. So the girl owns a thing used for driving\n < Charles has horse. Jason has truck. Elizabeth has gun. >. So the girl owns a thing used for killing\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [22, 24], "Q": [34, 36], "K": [19, 21], "R": null, "K'": [[15, 25], [16, 26]], "V'": [[17, 27], [18, 30]], "example": [14, 43]}, {"END": [68, 69], "A": [69, 70], "V": [56, 57], "Q": [61, 63], "K": [54, 55], "R": null, "K'": [[45, 49], [46, 50]], "V'": [[47, 51], [48, 53]], "example": [44, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include killing, riding, cleaning, painting, playing and calculating.\n< Susan has palette. Thomas has guitar. Richard has abacus. >. So the girl owns a thing used for painting\n < Thomas has knife. Linda has vacuum cleaner. Deborah has motorcycle. >. So the boy owns a thing used for killing\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [24, 26], "Q": [40, 42], "K": [22, 23], "R": null, "K'": [[27, 31], [28, 32]], "V'": [[29, 33], [30, 36]], "example": [21, 49]}, {"END": [81, 82], "A": [82, 83], "V": [53, 55], "Q": [74, 76], "K": [51, 52], "R": null, "K'": [[56, 64], [58, 67]], "V'": [[59, 68], [63, 70]], "example": [50, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< Betty has chalk. Donna has swim fins. Brian has car. >. So the boy owns a thing used for driving\n < Patricia has spray. William has motorcycle. Dorothy has computer. >. So the boy owns a thing used for riding\n", "ranges": [{"END": [49, 50], "A": [50, 51], "V": [37, 38], "Q": [42, 44], "K": [35, 36], "R": null, "K'": [[23, 28], [24, 30]], "V'": [[25, 31], [27, 34]], "example": [22, 51]}, {"END": [80, 81], "A": [81, 83], "V": [62, 64], "Q": [73, 75], "K": [60, 61], "R": null, "K'": [[53, 65], [56, 67]], "V'": [[57, 68], [59, 69]], "example": [52, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, flying, cooking, swiming and painting.\n< Brian has spray. Kenneth has helicopter. Mary has goggles. >. So the girl owns a thing used for swiming\n < James has jeep. George has pan. Barbara has plane. >. So the girl owns a thing used for flying\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [34, 38], "Q": [42, 44], "K": [32, 33], "R": null, "K'": [[21, 26], [22, 27]], "V'": [[23, 28], [25, 31]], "example": [20, 53]}, {"END": [78, 79], "A": [79, 80], "V": [66, 67], "Q": [71, 73], "K": [64, 65], "R": null, "K'": [[55, 60], [56, 61]], "V'": [[57, 62], [59, 63]], "example": [54, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, communicating, flying, playing, killing and writing.\n< Karen has guitar. Donald has mop. Laura has pencil. >. So the boy owns a thing used for cleaning\n < Edward has plane. Mary has telegraph. Nancy has gun. >. So the boy owns a thing used for flying\n", "ranges": [{"END": [48, 49], "A": [49, 51], "V": [29, 31], "Q": [41, 43], "K": [27, 28], "R": null, "K'": [[22, 32], [24, 33]], "V'": [[25, 34], [26, 37]], "example": [21, 51]}, {"END": [76, 77], "A": [77, 78], "V": [55, 56], "Q": [69, 71], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 63]], "V'": [[59, 64], [61, 65]], "example": [52, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< George has motorcycle. Dorothy has oven. Sandra has spray. >. So the boy owns a thing used for riding\n < Betty has spray. Daniel has bicycle. Maria has truck. >. So the boy owns a thing used for riding\n", "ranges": [{"END": [45, 46], "A": [46, 48], "V": [20, 22], "Q": [38, 40], "K": [18, 19], "R": null, "K'": [[23, 29], [25, 31]], "V'": [[26, 32], [28, 34]], "example": [17, 48]}, {"END": [76, 77], "A": [77, 79], "V": [57, 60], "Q": [69, 71], "K": [55, 56], "R": null, "K'": [[50, 61], [51, 62]], "V'": [[52, 63], [54, 65]], "example": [49, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cleaning, cooking, killing, riding and painting.\n< Barbara has biro. Richard has vacuum cleaner. Michael has dagger. >. So the girl owns a thing used for writing\n < Richard has motorcycle. Michelle has brush. Anthony has oven. >. So the girl owns a thing used for painting\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [25, 27], "Q": [43, 45], "K": [23, 24], "R": null, "K'": [[28, 35], [29, 36]], "V'": [[30, 37], [34, 39]], "example": [22, 52]}, {"END": [80, 81], "A": [81, 82], "V": [62, 64], "Q": [73, 75], "K": [59, 61], "R": null, "K'": [[54, 65], [55, 66]], "V'": [[56, 67], [58, 69]], "example": [53, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, flying, riding, cooking, writing and killing.\nPremise: < Sharon has abacus. Donna has pan. James has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: Yes\n Premise: < Joseph has glider. Mary has dagger. Kimberly has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [40, 41], "Q": [60, 62], "K": [38, 39], "R": null, "K'": [[26, 33], [28, 35]], "V'": [[29, 36], [32, 37]], "example": [21, 73]}, {"END": [124, 125], "A": [121, 122], "V": [80, 82], "Q": [113, 115], "K": [78, 79], "R": null, "K'": [[83, 88], [84, 91]], "V'": [[85, 92], [87, 94]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, killing, calculating, cooking, riding and writing.\nPremise: < Sharon has abacus. Donna has pan. James has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: Yes\n Premise: < Joseph has glider. Mary has dagger. Kimberly has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [40, 41], "Q": [60, 62], "K": [38, 39], "R": null, "K'": [[26, 33], [28, 35]], "V'": [[29, 36], [32, 37]], "example": [21, 73]}, {"END": [124, 125], "A": [121, 122], "V": [80, 82], "Q": [113, 115], "K": [78, 79], "R": null, "K'": [[83, 88], [84, 91]], "V'": [[85, 92], [87, 94]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, driving, painting, cooking, calculating and playing.\nPremise: < Ruth has swimsuit. Donald has pan. Richard has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for driving? Answer: No\n Premise: < Patricia has palette. Richard has guitar. Charles has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for painting? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [29, 32], "Q": [60, 62], "K": [27, 28], "R": null, "K'": [[33, 37], [34, 38]], "V'": [[35, 39], [36, 41]], "example": [22, 73]}, {"END": [124, 125], "A": [121, 122], "V": [82, 84], "Q": [113, 115], "K": [78, 81], "R": null, "K'": [[85, 89], [86, 90]], "V'": [[87, 91], [88, 94]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, cooking, painting, playing, calculating and swiming.\nPremise: < Ruth has swimsuit. Donald has pan. Richard has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for driving? Answer: No\n Premise: < Patricia has palette. Richard has guitar. Charles has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for playing? Answer: No\n", "ranges": [{"END": [71, 72], "A": [68, 69], "V": [29, 32], "Q": [60, 62], "K": [27, 28], "R": null, "K'": [[33, 37], [34, 38]], "V'": [[35, 39], [36, 41]], "example": [22, 73]}, {"END": [124, 125], "A": [121, 122], "V": [82, 84], "Q": [113, 115], "K": [78, 81], "R": null, "K'": [[85, 89], [86, 90]], "V'": [[87, 91], [88, 94]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, playing, calculating, communicating and painting.\nPremise: < Daniel has telephone. Brian has violin. Michelle has spray. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for communicating? Answer: No\n Premise: < Patricia has spray. William has motorcycle. Dorothy has computer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [37, 39], "Q": [58, 60], "K": [34, 36], "R": null, "K'": [[24, 29], [25, 30]], "V'": [[26, 31], [28, 33]], "example": [19, 72]}, {"END": [124, 125], "A": [120, 122], "V": [86, 88], "Q": [112, 114], "K": [84, 85], "R": null, "K'": [[77, 89], [80, 91]], "V'": [[81, 92], [83, 93]], "example": [73, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, communicating, painting, playing and riding.\nPremise: < Daniel has telephone. Brian has violin. Michelle has spray. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for communicating? Answer: No\n Premise: < Patricia has spray. William has motorcycle. Dorothy has computer. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for calculating? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [37, 39], "Q": [58, 60], "K": [34, 36], "R": null, "K'": [[24, 29], [25, 30]], "V'": [[26, 31], [28, 33]], "example": [19, 72]}, {"END": [123, 124], "A": [120, 121], "V": [86, 88], "Q": [112, 114], "K": [84, 85], "R": null, "K'": [[77, 89], [80, 91]], "V'": [[81, 92], [83, 93]], "example": [73, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < Deborah has pencil. Patricia has mop. Charles has phone. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: No\n Premise: < Barbara has abacus. Lisa has plane. Brian has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [45, 46], "Q": [65, 67], "K": [43, 44], "R": null, "K'": [[28, 36], [31, 39]], "V'": [[32, 40], [35, 42]], "example": [23, 78]}, {"END": [131, 132], "A": [126, 129], "V": [95, 99], "Q": [118, 120], "K": [93, 94], "R": null, "K'": [[83, 89], [84, 90]], "V'": [[85, 91], [88, 92]], "example": [79, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < Deborah has pencil. Patricia has mop. Charles has phone. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: No\n Premise: < Barbara has abacus. Lisa has plane. Brian has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [45, 46], "Q": [65, 67], "K": [43, 44], "R": null, "K'": [[28, 36], [31, 39]], "V'": [[32, 40], [35, 42]], "example": [23, 78]}, {"END": [129, 130], "A": [126, 127], "V": [95, 99], "Q": [118, 120], "K": [93, 94], "R": null, "K'": [[83, 89], [84, 90]], "V'": [[85, 91], [88, 92]], "example": [79, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, killing, riding, painting and writing.\nPremise: < Donald has knife. Elizabeth has pencil. Jennifer has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n Premise: < Brian has bicycle. Barbara has palette. Ruth has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [27, 29], "Q": [61, 63], "K": [25, 26], "R": null, "K'": [[30, 36], [31, 38]], "V'": [[32, 39], [35, 42]], "example": [20, 74]}, {"END": [124, 125], "A": [120, 122], "V": [81, 84], "Q": [112, 114], "K": [79, 80], "R": null, "K'": [[85, 90], [86, 91]], "V'": [[87, 92], [89, 93]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, riding, killing, painting and swiming.\nPremise: < Donald has knife. Elizabeth has pencil. Jennifer has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n Premise: < Brian has bicycle. Barbara has palette. Ruth has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for painting? Answer: No\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [27, 29], "Q": [61, 63], "K": [25, 26], "R": null, "K'": [[30, 36], [31, 38]], "V'": [[32, 39], [35, 42]], "example": [20, 74]}, {"END": [123, 124], "A": [120, 121], "V": [81, 84], "Q": [112, 114], "K": [79, 80], "R": null, "K'": [[85, 90], [86, 91]], "V'": [[87, 92], [89, 93]], "example": [75, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, swiming, killing, cooking and painting.\nPremise: < Christopher has swim fins. Betty has pan. Sarah has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n Premise: < Jennifer has spray. Patricia has jeep. Paul has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [74, 75], "A": [69, 72], "V": [30, 33], "Q": [61, 63], "K": [28, 29], "R": null, "K'": [[34, 38], [35, 39]], "V'": [[36, 40], [37, 42]], "example": [23, 76]}, {"END": [129, 130], "A": [125, 127], "V": [96, 98], "Q": [117, 119], "K": [94, 95], "R": null, "K'": [[81, 87], [83, 90]], "V'": [[84, 91], [86, 93]], "example": [77, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, driving, cooking, swiming, killing and riding.\nPremise: < Christopher has swim fins. Betty has pan. Sarah has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n Premise: < Jennifer has spray. Patricia has jeep. Paul has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for driving? Answer: No\n", "ranges": [{"END": [74, 75], "A": [69, 72], "V": [30, 33], "Q": [61, 63], "K": [28, 29], "R": null, "K'": [[34, 38], [35, 39]], "V'": [[36, 40], [37, 42]], "example": [23, 76]}, {"END": [128, 129], "A": [125, 126], "V": [96, 98], "Q": [117, 119], "K": [94, 95], "R": null, "K'": [[81, 87], [83, 90]], "V'": [[84, 91], [86, 93]], "example": [77, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, killing, driving, painting, cooking and riding.\nPremise: < Jason has pan. Lisa has jeep. Dorothy has gun. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for cooking? Answer: Yes\n Premise: < Linda has spray. Helen has phone. Thomas has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [29, 30], "Q": [59, 61], "K": [27, 28], "R": null, "K'": [[31, 36], [32, 38]], "V'": [[33, 39], [35, 40]], "example": [22, 73]}, {"END": [124, 125], "A": [120, 122], "V": [90, 93], "Q": [112, 114], "K": [88, 89], "R": null, "K'": [[78, 84], [80, 85]], "V'": [[81, 86], [83, 87]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, painting, killing, communicating, cooking and riding.\nPremise: < Jason has pan. Lisa has jeep. Dorothy has gun. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for cooking? Answer: Yes\n Premise: < Linda has spray. Helen has phone. Thomas has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for painting? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [29, 30], "Q": [59, 61], "K": [27, 28], "R": null, "K'": [[31, 36], [32, 38]], "V'": [[33, 39], [35, 40]], "example": [22, 73]}, {"END": [123, 124], "A": [120, 121], "V": [90, 93], "Q": [112, 114], "K": [88, 89], "R": null, "K'": [[78, 84], [80, 85]], "V'": [[81, 86], [83, 87]], "example": [74, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < Ronald has violin. Donna has car. Sandra has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for playing? Answer: Yes\n Premise: < Christopher has knife. Elizabeth has glider. Carol has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [29, 31], "Q": [61, 63], "K": [26, 28], "R": null, "K'": [[32, 37], [34, 39]], "V'": [[35, 40], [36, 42]], "example": [21, 74]}, {"END": [124, 125], "A": [121, 122], "V": [81, 83], "Q": [113, 115], "K": [79, 80], "R": null, "K'": [[84, 89], [85, 90]], "V'": [[86, 91], [88, 94]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < Ronald has violin. Donna has car. Sandra has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for playing? Answer: Yes\n Premise: < Christopher has knife. Elizabeth has glider. Carol has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: No\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [29, 31], "Q": [61, 63], "K": [26, 28], "R": null, "K'": [[32, 37], [34, 39]], "V'": [[35, 40], [36, 42]], "example": [21, 74]}, {"END": [124, 125], "A": [121, 122], "V": [81, 83], "Q": [113, 115], "K": [79, 80], "R": null, "K'": [[84, 89], [85, 90]], "V'": [[86, 91], [88, 94]], "example": [75, 126]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, writing, cooking, calculating and cleaning.\n< The abacus is Sharon's. The pan is Donna's. The pen is James's. >. So the boy owns a thing used for writing\n < The abacus is Daniel's. The goggles is Margaret's. The broom is Kimberly's. >. So the boy owns a thing used for calculating\n", "ranges": [{"END": [57, 58], "A": [58, 59], "V": [41, 42], "Q": [50, 52], "K": [43, 44], "R": null, "K'": [[27, 35], [29, 37]], "V'": [[23, 33], [26, 34]], "example": [21, 59]}, {"END": [100, 101], "A": [101, 102], "V": [62, 65], "Q": [93, 95], "K": [66, 67], "R": null, "K'": [[76, 84], [77, 87]], "V'": [[71, 81], [75, 83]], "example": [60, 102]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving and killing.\n< The gun is Paul's. The jeep is Sandra's. The bicycle is Christopher's. >. So the girl owns a thing used for driving\n < The horse is Charles's. The truck is Jason's. The gun is Elizabeth's. >. So the girl owns a thing used for killing\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [23, 25], "Q": [43, 45], "K": [26, 28], "R": null, "K'": [[18, 36], [19, 37]], "V'": [[16, 32], [17, 35]], "example": [14, 52]}, {"END": [86, 87], "A": [87, 88], "V": [70, 71], "Q": [79, 81], "K": [72, 73], "R": null, "K'": [[57, 65], [58, 66]], "V'": [[55, 62], [56, 64]], "example": [53, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include killing, riding, cleaning, painting, playing and calculating.\n< The palette is Susan's. The guitar is Thomas's. The abacus is Richard's. >. So the girl owns a thing used for painting\n < The knife is Thomas's. The vacuum cleaner is Linda's. The motorcycle is Deborah's. >. So the boy owns a thing used for killing\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [23, 25], "Q": [49, 51], "K": [26, 27], "R": null, "K'": [[33, 42], [34, 43]], "V'": [[31, 38], [32, 41]], "example": [21, 58]}, {"END": [99, 100], "A": [100, 101], "V": [61, 63], "Q": [92, 94], "K": [64, 65], "R": null, "K'": [[74, 83], [76, 86]], "V'": [[69, 80], [73, 82]], "example": [59, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< The chalk is Betty's. The swim fins is Donna's. The car is Brian's. >. So the boy owns a thing used for driving\n < The spray is Patricia's. The motorcycle is William's. The computer is Dorothy's. >. So the boy owns a thing used for riding\n", "ranges": [{"END": [58, 59], "A": [59, 60], "V": [42, 43], "Q": [51, 53], "K": [44, 45], "R": null, "K'": [[27, 36], [28, 38]], "V'": [[24, 32], [26, 35]], "example": [22, 60]}, {"END": [98, 99], "A": [99, 101], "V": [73, 75], "Q": [91, 93], "K": [76, 77], "R": null, "K'": [[66, 83], [69, 85]], "V'": [[63, 81], [65, 82]], "example": [61, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, flying, cooking, swiming and painting.\n< The spray is Brian's. The helicopter is Kenneth's. The goggles is Mary's. >. So the girl owns a thing used for swiming\n < The jeep is James's. The pan is George's. The plane is Barbara's. >. So the girl owns a thing used for flying\n", "ranges": [{"END": [58, 59], "A": [59, 62], "V": [39, 43], "Q": [51, 53], "K": [44, 45], "R": null, "K'": [[25, 34], [26, 35]], "V'": [[22, 30], [24, 33]], "example": [20, 62]}, {"END": [96, 97], "A": [97, 98], "V": [80, 81], "Q": [89, 91], "K": [82, 83], "R": null, "K'": [[68, 75], [69, 76]], "V'": [[65, 73], [67, 74]], "example": [63, 98]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, communicating, flying, playing, killing and writing.\n< The guitar is Karen's. The mop is Donald's. The pencil is Laura's. >. So the boy owns a thing used for cleaning\n < The plane is Edward's. The telegraph is Mary's. The gun is Nancy's. >. So the boy owns a thing used for flying\n", "ranges": [{"END": [57, 58], "A": [58, 60], "V": [31, 33], "Q": [50, 52], "K": [34, 35], "R": null, "K'": [[25, 43], [27, 44]], "V'": [[23, 39], [24, 42]], "example": [21, 60]}, {"END": [94, 95], "A": [95, 96], "V": [63, 64], "Q": [87, 89], "K": [65, 66], "R": null, "K'": [[73, 80], [74, 81]], "V'": [[70, 78], [72, 79]], "example": [61, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< The motorcycle is George's. The oven is Dorothy's. The spray is Sandra's. >. So the boy owns a thing used for riding\n < The spray is Betty's. The bicycle is Daniel's. The truck is Maria's. >. So the boy owns a thing used for riding\n", "ranges": [{"END": [54, 55], "A": [55, 57], "V": [19, 21], "Q": [47, 49], "K": [22, 23], "R": null, "K'": [[30, 39], [32, 41]], "V'": [[27, 36], [29, 38]], "example": [17, 57]}, {"END": [94, 95], "A": [95, 97], "V": [68, 71], "Q": [87, 89], "K": [72, 73], "R": null, "K'": [[63, 80], [64, 81]], "V'": [[60, 77], [62, 79]], "example": [58, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cleaning, cooking, killing, riding and painting.\n< The biro is Barbara's. The vacuum cleaner is Richard's. The dagger is Michael's. >. So the girl owns a thing used for writing\n < The motorcycle is Richard's. The brush is Michelle's. The oven is Anthony's. >. So the girl owns a thing used for painting\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [24, 26], "Q": [52, 54], "K": [27, 28], "R": null, "K'": [[37, 45], [38, 46]], "V'": [[32, 42], [36, 44]], "example": [22, 61]}, {"END": [98, 99], "A": [99, 100], "V": [72, 74], "Q": [91, 93], "K": [75, 77], "R": null, "K'": [[67, 84], [68, 85]], "V'": [[64, 81], [66, 83]], "example": [62, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, flying, riding, cooking, writing and killing.\nPremise: < The abacus is Sharon's. The pan is Donna's. The pen is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: Yes\n Premise: < The glider is Joseph's. The dagger is Mary's. The motorcycle is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [45, 46], "Q": [69, 71], "K": [47, 48], "R": null, "K'": [[31, 39], [33, 41]], "V'": [[27, 37], [30, 38]], "example": [21, 82]}, {"END": [142, 143], "A": [139, 140], "V": [88, 90], "Q": [131, 133], "K": [91, 92], "R": null, "K'": [[99, 107], [100, 110]], "V'": [[96, 104], [98, 106]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, killing, calculating, cooking, riding and writing.\nPremise: < The abacus is Sharon's. The pan is Donna's. The pen is James's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: Yes\n Premise: < The glider is Joseph's. The dagger is Mary's. The motorcycle is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [45, 46], "Q": [69, 71], "K": [47, 48], "R": null, "K'": [[31, 39], [33, 41]], "V'": [[27, 37], [30, 38]], "example": [21, 82]}, {"END": [142, 143], "A": [139, 140], "V": [88, 90], "Q": [131, 133], "K": [91, 92], "R": null, "K'": [[99, 107], [100, 110]], "V'": [[96, 104], [98, 106]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, driving, painting, cooking, calculating and playing.\nPremise: < The swimsuit is Ruth's. The pan is Donald's. The jeep is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for driving? Answer: No\n Premise: < The palette is Patricia's. The guitar is Richard's. The abacus is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for painting? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [28, 31], "Q": [69, 71], "K": [32, 33], "R": null, "K'": [[39, 47], [40, 48]], "V'": [[37, 44], [38, 46]], "example": [22, 82]}, {"END": [142, 143], "A": [139, 140], "V": [88, 90], "Q": [131, 133], "K": [91, 94], "R": null, "K'": [[100, 109], [101, 110]], "V'": [[98, 105], [99, 108]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, cooking, painting, playing, calculating and swiming.\nPremise: < The swimsuit is Ruth's. The pan is Donald's. The jeep is Richard's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for driving? Answer: No\n Premise: < The palette is Patricia's. The guitar is Richard's. The abacus is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for playing? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [28, 31], "Q": [69, 71], "K": [32, 33], "R": null, "K'": [[39, 47], [40, 48]], "V'": [[37, 44], [38, 46]], "example": [22, 82]}, {"END": [142, 143], "A": [139, 140], "V": [88, 90], "Q": [131, 133], "K": [91, 94], "R": null, "K'": [[100, 109], [101, 110]], "V'": [[98, 105], [99, 108]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, playing, calculating, communicating and painting.\nPremise: < The telephone is Daniel's. The violin is Brian's. The spray is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for communicating? Answer: No\n Premise: < The spray is Patricia's. The motorcycle is William's. The computer is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [41, 43], "Q": [67, 69], "K": [44, 46], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[25, 33], [27, 35]], "example": [19, 81]}, {"END": [142, 143], "A": [138, 140], "V": [97, 99], "Q": [130, 132], "K": [100, 101], "R": null, "K'": [[90, 107], [93, 109]], "V'": [[87, 105], [89, 106]], "example": [82, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, communicating, painting, playing and riding.\nPremise: < The telephone is Daniel's. The violin is Brian's. The spray is Michelle's. >. Answer with Yes or No. Can it be inferred from the premise that the girl owns a thing used for communicating? Answer: No\n Premise: < The spray is Patricia's. The motorcycle is William's. The computer is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for calculating? Answer: No\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [41, 43], "Q": [67, 69], "K": [44, 46], "R": null, "K'": [[28, 36], [29, 37]], "V'": [[25, 33], [27, 35]], "example": [19, 81]}, {"END": [141, 142], "A": [138, 139], "V": [97, 99], "Q": [130, 132], "K": [100, 101], "R": null, "K'": [[90, 107], [93, 109]], "V'": [[87, 105], [89, 106]], "example": [82, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < The pencil is Deborah's. The mop is Patricia's. The phone is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: No\n Premise: < The abacus is Barbara's. The plane is Lisa's. The goggles is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [50, 51], "Q": [74, 76], "K": [52, 53], "R": null, "K'": [[33, 43], [36, 46]], "V'": [[29, 40], [32, 42]], "example": [23, 87]}, {"END": [149, 150], "A": [144, 147], "V": [109, 113], "Q": [136, 138], "K": [114, 115], "R": null, "K'": [[97, 104], [98, 105]], "V'": [[93, 102], [96, 103]], "example": [88, 151]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < The pencil is Deborah's. The mop is Patricia's. The phone is Charles's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for writing? Answer: No\n Premise: < The abacus is Barbara's. The plane is Lisa's. The goggles is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [50, 51], "Q": [74, 76], "K": [52, 53], "R": null, "K'": [[33, 43], [36, 46]], "V'": [[29, 40], [32, 42]], "example": [23, 87]}, {"END": [147, 148], "A": [144, 145], "V": [109, 113], "Q": [136, 138], "K": [114, 115], "R": null, "K'": [[97, 104], [98, 105]], "V'": [[93, 102], [96, 103]], "example": [88, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, killing, riding, painting and writing.\nPremise: < The knife is Donald's. The pencil is Elizabeth's. The swim fins is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n Premise: < The bicycle is Brian's. The palette is Barbara's. The pen is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [26, 28], "Q": [70, 72], "K": [29, 30], "R": null, "K'": [[38, 47], [39, 49]], "V'": [[34, 43], [37, 46]], "example": [20, 83]}, {"END": [142, 143], "A": [138, 140], "V": [89, 92], "Q": [130, 132], "K": [93, 94], "R": null, "K'": [[101, 108], [102, 109]], "V'": [[98, 106], [100, 107]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, riding, killing, painting and swiming.\nPremise: < The knife is Donald's. The pencil is Elizabeth's. The swim fins is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n Premise: < The bicycle is Brian's. The palette is Barbara's. The pen is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for painting? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [26, 28], "Q": [70, 72], "K": [29, 30], "R": null, "K'": [[38, 47], [39, 49]], "V'": [[34, 43], [37, 46]], "example": [20, 83]}, {"END": [141, 142], "A": [138, 139], "V": [89, 92], "Q": [130, 132], "K": [93, 94], "R": null, "K'": [[101, 108], [102, 109]], "V'": [[98, 106], [100, 107]], "example": [84, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, swiming, killing, cooking and painting.\nPremise: < The swim fins is Christopher's. The pan is Betty's. The dagger is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n Premise: < The spray is Jennifer's. The jeep is Patricia's. The motorcycle is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [29, 32], "Q": [70, 72], "K": [33, 34], "R": null, "K'": [[40, 48], [41, 49]], "V'": [[38, 45], [39, 47]], "example": [23, 85]}, {"END": [147, 148], "A": [143, 145], "V": [110, 112], "Q": [135, 137], "K": [113, 114], "R": null, "K'": [[94, 103], [96, 106]], "V'": [[91, 100], [93, 102]], "example": [86, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, driving, cooking, swiming, killing and riding.\nPremise: < The swim fins is Christopher's. The pan is Betty's. The dagger is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for swiming? Answer: Yes\n Premise: < The spray is Jennifer's. The jeep is Patricia's. The motorcycle is Paul's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for driving? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [29, 32], "Q": [70, 72], "K": [33, 34], "R": null, "K'": [[40, 48], [41, 49]], "V'": [[38, 45], [39, 47]], "example": [23, 85]}, {"END": [146, 147], "A": [143, 144], "V": [110, 112], "Q": [135, 137], "K": [113, 114], "R": null, "K'": [[94, 103], [96, 106]], "V'": [[91, 100], [93, 102]], "example": [86, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, killing, driving, painting, cooking and riding.\nPremise: < The pan is Jason's. The jeep is Lisa's. The gun is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for cooking? Answer: Yes\n Premise: < The spray is Linda's. The phone is Helen's. The bicycle is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for riding? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [76, 78], "V": [28, 29], "Q": [68, 70], "K": [30, 31], "R": null, "K'": [[38, 45], [39, 47]], "V'": [[35, 43], [37, 44]], "example": [22, 82]}, {"END": [142, 143], "A": [138, 140], "V": [104, 107], "Q": [130, 132], "K": [108, 109], "R": null, "K'": [[91, 99], [93, 100]], "V'": [[88, 97], [90, 98]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, painting, killing, communicating, cooking and riding.\nPremise: < The pan is Jason's. The jeep is Lisa's. The gun is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for cooking? Answer: Yes\n Premise: < The spray is Linda's. The phone is Helen's. The bicycle is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for painting? Answer: No\n", "ranges": [{"END": [80, 81], "A": [76, 78], "V": [28, 29], "Q": [68, 70], "K": [30, 31], "R": null, "K'": [[38, 45], [39, 47]], "V'": [[35, 43], [37, 44]], "example": [22, 82]}, {"END": [141, 142], "A": [138, 139], "V": [104, 107], "Q": [130, 132], "K": [108, 109], "R": null, "K'": [[91, 99], [93, 100]], "V'": [[88, 97], [90, 98]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < The violin is Ronald's. The car is Donna's. The telegraph is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for playing? Answer: Yes\n Premise: < The knife is Christopher's. The glider is Elizabeth's. The bicycle is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for killing? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [27, 29], "Q": [70, 72], "K": [30, 32], "R": null, "K'": [[38, 47], [40, 49]], "V'": [[36, 44], [37, 46]], "example": [21, 83]}, {"END": [142, 143], "A": [139, 140], "V": [89, 91], "Q": [131, 133], "K": [92, 93], "R": null, "K'": [[100, 109], [101, 110]], "V'": [[97, 105], [99, 108]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < The violin is Ronald's. The car is Donna's. The telegraph is Sandra's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for playing? Answer: Yes\n Premise: < The knife is Christopher's. The glider is Elizabeth's. The bicycle is Carol's. >. Answer with Yes or No. Can it be inferred from the premise that the boy owns a thing used for flying? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [27, 29], "Q": [70, 72], "K": [30, 32], "R": null, "K'": [[38, 47], [40, 49]], "V'": [[36, 44], [37, 46]], "example": [21, 83]}, {"END": [142, 143], "A": [139, 140], "V": [89, 91], "Q": [131, 133], "K": [92, 93], "R": null, "K'": [[100, 109], [101, 110]], "V'": [[97, 105], [99, 108]], "example": [84, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, writing, cooking, calculating and cleaning.\n< Brian has abacus. Kenneth has pan. Mary has pen. >. The boys do not own a thing used for writing\n < Nancy has abacus. Joseph has goggles. Jason has broom. >. The boys do not own a thing used for calculating\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [34, 35], "Q": [38, 40], "K'": [32, 33], "R": [41, 42], "K": [[22, 28], [23, 29]], "V": [[24, 30], [27, 31]], "example": [21, 48]}, {"END": [78, 79], "A'": [79, 80], "V'": [52, 55], "Q": [70, 72], "K'": [50, 51], "R": [73, 74], "K": [[56, 63], [57, 64]], "V": [[58, 65], [62, 67]], "example": [49, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving and killing.\n< Karen has gun. George has jeep. Lisa has bicycle. >. The girls do not own a thing used for driving\n < Susan has horse. Kimberly has truck. William has gun. >. The girls do not own a thing used for killing\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [22, 24], "Q": [33, 35], "K'": [20, 21], "R": [36, 37], "K": [[15, 25], [17, 26]], "V": [[18, 27], [19, 30]], "example": [14, 43]}, {"END": [70, 71], "A'": [71, 72], "V'": [58, 59], "Q": [62, 64], "K'": [56, 57], "R": [65, 66], "K": [[45, 49], [46, 52]], "V": [[47, 53], [48, 55]], "example": [44, 72]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include killing, riding, cleaning, painting, playing and calculating.\n< Charles has palette. Dorothy has guitar. Maria has abacus. >. The girls do not own a thing used for painting\n < Dorothy has knife. Robert has vacuum cleaner. Jeff has motorcycle. >. The boys do not own a thing used for killing\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [24, 26], "Q": [40, 42], "K'": [22, 23], "R": [43, 44], "K": [[27, 32], [29, 33]], "V": [[30, 34], [31, 37]], "example": [21, 50]}, {"END": [80, 81], "A'": [81, 82], "V'": [55, 57], "Q": [72, 74], "K'": [52, 54], "R": [75, 76], "K": [[58, 65], [59, 66]], "V": [[60, 67], [64, 69]], "example": [51, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< Mark has chalk. Kenneth has swim fins. Sharon has car. >. The boys do not own a thing used for driving\n < John has spray. Elizabeth has motorcycle. Thomas has computer. >. The boys do not own a thing used for riding\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [37, 38], "Q": [41, 43], "K'": [34, 36], "R": [44, 45], "K": [[23, 28], [24, 29]], "V": [[25, 30], [27, 33]], "example": [22, 51]}, {"END": [77, 78], "A'": [78, 80], "V'": [60, 62], "Q": [69, 71], "K'": [58, 59], "R": [72, 73], "K": [[53, 63], [54, 64]], "V": [[55, 65], [57, 66]], "example": [52, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, flying, cooking, swiming and painting.\n< Sharon has spray. Donna has helicopter. James has goggles. >. The girls do not own a thing used for swiming\n < Mary has jeep. Sandra has pan. Michael has plane. >. The girls do not own a thing used for flying\n", "ranges": [{"END": [51, 52], "A'": [52, 55], "V'": [36, 40], "Q": [43, 45], "K'": [34, 35], "R": [46, 47], "K": [[21, 27], [23, 29]], "V": [[24, 30], [26, 33]], "example": [20, 55]}, {"END": [81, 82], "A'": [82, 83], "V'": [69, 70], "Q": [73, 75], "K'": [67, 68], "R": [76, 77], "K": [[57, 62], [58, 64]], "V": [[59, 65], [61, 66]], "example": [56, 83]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, communicating, flying, playing, killing and writing.\n< Paul has guitar. Helen has mop. Anthony has pencil. >. The boys do not own a thing used for cleaning\n < Ruth has plane. James has telegraph. Daniel has gun. >. The boys do not own a thing used for flying\n", "ranges": [{"END": [47, 48], "A'": [48, 50], "V'": [28, 30], "Q": [39, 41], "K'": [26, 27], "R": [42, 43], "K": [[22, 31], [23, 32]], "V": [[24, 33], [25, 36]], "example": [21, 50]}, {"END": [75, 76], "A'": [76, 77], "V'": [54, 55], "Q": [67, 69], "K'": [52, 53], "R": [70, 71], "K": [[56, 61], [57, 62]], "V": [[58, 63], [60, 64]], "example": [51, 77]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< Sandra has motorcycle. Thomas has oven. George has spray. >. The boys do not own a thing used for riding\n < Mark has spray. Nancy has bicycle. Richard has truck. >. The boys do not own a thing used for riding\n", "ranges": [{"END": [44, 45], "A'": [45, 47], "V'": [21, 23], "Q": [36, 38], "K'": [18, 20], "R": [39, 40], "K": [[24, 29], [25, 30]], "V": [[26, 31], [28, 33]], "example": [17, 47]}, {"END": [75, 76], "A'": [76, 78], "V'": [56, 59], "Q": [67, 69], "K'": [54, 55], "R": [70, 71], "K": [[49, 60], [50, 61]], "V": [[51, 62], [53, 64]], "example": [48, 78]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cleaning, cooking, killing, riding and painting.\n< Michael has biro. Maria has vacuum cleaner. Barbara has dagger. >. The girls do not own a thing used for writing\n < Maria has motorcycle. Ronald has brush. Laura has oven. >. The girls do not own a thing used for painting\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [25, 27], "Q": [42, 44], "K'": [23, 24], "R": [45, 46], "K": [[28, 35], [29, 36]], "V": [[30, 37], [34, 39]], "example": [22, 52]}, {"END": [80, 81], "A'": [81, 82], "V'": [62, 64], "Q": [72, 74], "K'": [59, 61], "R": [75, 76], "K": [[54, 65], [55, 66]], "V": [[56, 67], [58, 69]], "example": [53, 82]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, flying, riding, cooking, writing and killing.\nPremise: < Brian has abacus. Kenneth has pan. Mary has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: Yes\n Premise: < Margaret has glider. James has dagger. Jason has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [38, 39], "Q": [58, 60], "K'": [36, 37], "R": [61, 62], "K": [[26, 32], [27, 33]], "V": [[28, 34], [31, 35]], "example": [21, 72]}, {"END": [122, 123], "A'": [119, 120], "V'": [79, 81], "Q": [110, 112], "K'": [77, 78], "R": [113, 114], "K": [[82, 87], [83, 88]], "V": [[84, 89], [86, 91]], "example": [73, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, killing, calculating, cooking, riding and writing.\nPremise: < Brian has abacus. Kenneth has pan. Mary has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: Yes\n Premise: < Margaret has glider. James has dagger. Jason has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [38, 39], "Q": [58, 60], "K'": [36, 37], "R": [61, 62], "K": [[26, 32], [27, 33]], "V": [[28, 34], [31, 35]], "example": [21, 72]}, {"END": [122, 123], "A'": [119, 120], "V'": [79, 81], "Q": [110, 112], "K'": [77, 78], "R": [113, 114], "K": [[82, 87], [83, 88]], "V": [[84, 89], [86, 91]], "example": [73, 124]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, driving, painting, cooking, calculating and playing.\nPremise: < Edward has swimsuit. Helen has pan. Maria has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for driving? Answer: No\n Premise: < John has palette. Maria has guitar. Susan has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for painting? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [29, 32], "Q": [60, 62], "K'": [27, 28], "R": [63, 64], "K": [[33, 37], [34, 38]], "V": [[35, 39], [36, 41]], "example": [22, 74]}, {"END": [124, 125], "A'": [121, 122], "V'": [81, 83], "Q": [112, 114], "K'": [79, 80], "R": [115, 116], "K": [[84, 88], [85, 89]], "V": [[86, 90], [87, 93]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, cooking, painting, playing, calculating and swiming.\nPremise: < Edward has swimsuit. Helen has pan. Maria has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for driving? Answer: No\n Premise: < John has palette. Maria has guitar. Susan has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for playing? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [29, 32], "Q": [60, 62], "K'": [27, 28], "R": [63, 64], "K": [[33, 37], [34, 38]], "V": [[35, 39], [36, 41]], "example": [22, 74]}, {"END": [124, 125], "A'": [121, 122], "V'": [81, 83], "Q": [112, 114], "K'": [79, 80], "R": [115, 116], "K": [[84, 88], [85, 89]], "V": [[86, 90], [87, 93]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, playing, calculating, communicating and painting.\nPremise: < Nancy has telephone. Sharon has violin. Ronald has spray. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for communicating? Answer: No\n Premise: < John has spray. Elizabeth has motorcycle. Thomas has computer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [38, 40], "Q": [59, 61], "K'": [35, 37], "R": [62, 63], "K": [[24, 29], [25, 31]], "V": [[26, 32], [28, 34]], "example": [19, 74]}, {"END": [124, 125], "A'": [120, 122], "V'": [86, 88], "Q": [111, 113], "K'": [84, 85], "R": [114, 115], "K": [[79, 89], [80, 90]], "V": [[81, 91], [83, 92]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, communicating, painting, playing and riding.\nPremise: < Nancy has telephone. Sharon has violin. Ronald has spray. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for communicating? Answer: No\n Premise: < John has spray. Elizabeth has motorcycle. Thomas has computer. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for calculating? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [38, 40], "Q": [59, 61], "K'": [35, 37], "R": [62, 63], "K": [[24, 29], [25, 31]], "V": [[26, 32], [28, 34]], "example": [19, 74]}, {"END": [123, 124], "A'": [120, 121], "V'": [86, 88], "Q": [111, 113], "K'": [84, 85], "R": [114, 115], "K": [[79, 89], [80, 90]], "V": [[81, 91], [83, 92]], "example": [75, 125]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < Jeff has pencil. John has mop. Susan has phone. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: No\n Premise: < Michael has abacus. Christopher has plane. Sharon has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [70, 71], "V'": [41, 42], "Q": [61, 63], "K'": [39, 40], "R": [64, 65], "K": [[28, 34], [29, 35]], "V": [[30, 36], [33, 38]], "example": [23, 75]}, {"END": [130, 131], "A'": [125, 128], "V'": [93, 97], "Q": [116, 118], "K'": [90, 92], "R": [119, 120], "K": [[80, 86], [81, 87]], "V": [[82, 88], [85, 89]], "example": [76, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < Jeff has pencil. John has mop. Susan has phone. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: No\n Premise: < Michael has abacus. Christopher has plane. Sharon has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [70, 71], "V'": [41, 42], "Q": [61, 63], "K'": [39, 40], "R": [64, 65], "K": [[28, 34], [29, 35]], "V": [[30, 36], [33, 38]], "example": [23, 75]}, {"END": [128, 129], "A'": [125, 126], "V'": [93, 97], "Q": [116, 118], "K'": [90, 92], "R": [119, 120], "K": [[80, 86], [81, 87]], "V": [[82, 88], [85, 89]], "example": [76, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, killing, riding, painting and writing.\nPremise: < Helen has knife. William has pencil. David has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n Premise: < Sharon has bicycle. Michael has palette. Edward has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [27, 29], "Q": [60, 62], "K'": [25, 26], "R": [63, 64], "K": [[30, 36], [31, 37]], "V": [[32, 38], [35, 41]], "example": [20, 74]}, {"END": [126, 127], "A'": [122, 124], "V'": [82, 85], "Q": [113, 115], "K'": [79, 81], "R": [116, 117], "K": [[86, 91], [87, 92]], "V": [[88, 93], [90, 94]], "example": [75, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, riding, killing, painting and swiming.\nPremise: < Helen has knife. William has pencil. David has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n Premise: < Sharon has bicycle. Michael has palette. Edward has pen. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for painting? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [27, 29], "Q": [60, 62], "K'": [25, 26], "R": [63, 64], "K": [[30, 36], [31, 37]], "V": [[32, 38], [35, 41]], "example": [20, 74]}, {"END": [125, 126], "A'": [122, 123], "V'": [82, 85], "Q": [113, 115], "K'": [79, 81], "R": [116, 117], "K": [[86, 91], [87, 92]], "V": [[88, 93], [90, 94]], "example": [75, 127]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, swiming, killing, cooking and painting.\nPremise: < Lisa has swim fins. Mark has pan. Kevin has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n Premise: < David has spray. John has jeep. Karen has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [30, 33], "Q": [61, 63], "K'": [28, 29], "R": [64, 65], "K": [[34, 38], [35, 39]], "V": [[36, 40], [37, 42]], "example": [23, 77]}, {"END": [129, 130], "A'": [125, 127], "V'": [95, 97], "Q": [116, 118], "K'": [92, 94], "R": [119, 120], "K": [[82, 87], [83, 88]], "V": [[84, 89], [86, 91]], "example": [78, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, driving, cooking, swiming, killing and riding.\nPremise: < Lisa has swim fins. Mark has pan. Kevin has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n Premise: < David has spray. John has jeep. Karen has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for driving? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [30, 33], "Q": [61, 63], "K'": [28, 29], "R": [64, 65], "K": [[34, 38], [35, 39]], "V": [[36, 40], [37, 42]], "example": [23, 77]}, {"END": [128, 129], "A'": [125, 126], "V'": [95, 97], "Q": [116, 118], "K'": [92, 94], "R": [119, 120], "K": [[82, 87], [83, 88]], "V": [[84, 89], [86, 91]], "example": [78, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, killing, driving, painting, cooking and riding.\nPremise: < Kimberly has pan. Christopher has jeep. Thomas has gun. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for cooking? Answer: Yes\n Premise: < Robert has spray. Donald has phone. Dorothy has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [31, 32], "Q": [60, 62], "K'": [27, 30], "R": [63, 64], "K": [[33, 38], [34, 39]], "V": [[35, 40], [37, 41]], "example": [22, 75]}, {"END": [127, 128], "A'": [123, 125], "V'": [92, 95], "Q": [114, 116], "K'": [89, 91], "R": [117, 118], "K": [[80, 85], [81, 86]], "V": [[82, 87], [84, 88]], "example": [76, 129]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, painting, killing, communicating, cooking and riding.\nPremise: < Kimberly has pan. Christopher has jeep. Thomas has gun. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for cooking? Answer: Yes\n Premise: < Robert has spray. Donald has phone. Dorothy has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for painting? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [31, 32], "Q": [60, 62], "K'": [27, 30], "R": [63, 64], "K": [[33, 38], [34, 39]], "V": [[35, 40], [37, 41]], "example": [22, 75]}, {"END": [126, 127], "A'": [123, 124], "V'": [92, 95], "Q": [114, 116], "K'": [89, 91], "R": [117, 118], "K": [[80, 85], [81, 86]], "V": [[82, 87], [84, 88]], "example": [76, 128]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < Michelle has violin. Kenneth has car. George has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for playing? Answer: Yes\n Premise: < Lisa has knife. William has glider. Steven has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [29, 31], "Q": [59, 61], "K'": [26, 28], "R": [62, 63], "K": [[32, 36], [33, 37]], "V": [[34, 38], [35, 40]], "example": [21, 73]}, {"END": [124, 125], "A'": [121, 122], "V'": [80, 82], "Q": [112, 114], "K'": [78, 79], "R": [115, 116], "K": [[83, 88], [84, 89]], "V": [[85, 90], [87, 93]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < Michelle has violin. Kenneth has car. George has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for playing? Answer: Yes\n Premise: < Lisa has knife. William has glider. Steven has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [29, 31], "Q": [59, 61], "K'": [26, 28], "R": [62, 63], "K": [[32, 36], [33, 37]], "V": [[34, 38], [35, 40]], "example": [21, 73]}, {"END": [124, 125], "A'": [121, 122], "V'": [80, 82], "Q": [112, 114], "K'": [78, 79], "R": [115, 116], "K": [[83, 88], [84, 89]], "V": [[85, 90], [87, 93]], "example": [74, 126]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, writing, cooking, calculating and cleaning.\n< The abacus is Brian's. The pan is Kenneth's. The pen is Mary's. >. The boys do not own a thing used for writing\n < The abacus is Nancy's. The goggles is Joseph's. The broom is Jason's. >. The boys do not own a thing used for calculating\n", "ranges": [{"END": [55, 56], "A'": [56, 57], "V'": [39, 40], "Q": [47, 49], "K'": [41, 42], "R": [50, 51], "K": [[27, 34], [28, 35]], "V": [[23, 32], [26, 33]], "example": [21, 57]}, {"END": [96, 97], "A'": [97, 98], "V'": [60, 63], "Q": [88, 90], "K'": [64, 65], "R": [91, 92], "K": [[74, 82], [75, 83]], "V": [[69, 79], [73, 81]], "example": [58, 98]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving and killing.\n< The gun is Karen's. The jeep is George's. The bicycle is Lisa's. >. The girls do not own a thing used for driving\n < The horse is Susan's. The truck is Kimberly's. The gun is William's. >. The girls do not own a thing used for killing\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [24, 26], "Q": [42, 44], "K'": [27, 28], "R": [45, 46], "K": [[18, 36], [20, 37]], "V": [[16, 32], [17, 35]], "example": [14, 52]}, {"END": [88, 89], "A'": [89, 90], "V'": [72, 73], "Q": [80, 82], "K'": [74, 75], "R": [83, 84], "K": [[57, 65], [58, 68]], "V": [[55, 62], [56, 64]], "example": [53, 90]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include killing, riding, cleaning, painting, playing and calculating.\n< The palette is Charles's. The guitar is Dorothy's. The abacus is Maria's. >. The girls do not own a thing used for painting\n < The knife is Dorothy's. The vacuum cleaner is Robert's. The motorcycle is Jeff's. >. The boys do not own a thing used for killing\n", "ranges": [{"END": [57, 58], "A'": [58, 59], "V'": [23, 25], "Q": [49, 51], "K'": [26, 27], "R": [52, 53], "K": [[33, 43], [35, 44]], "V": [[31, 39], [32, 42]], "example": [21, 59]}, {"END": [98, 99], "A'": [99, 100], "V'": [62, 64], "Q": [90, 92], "K'": [65, 67], "R": [93, 94], "K": [[76, 84], [77, 85]], "V": [[71, 81], [75, 83]], "example": [60, 100]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, calculating, writing, swiming, riding and painting.\n< The chalk is Mark's. The swim fins is Kenneth's. The car is Sharon's. >. The boys do not own a thing used for driving\n < The spray is John's. The motorcycle is Elizabeth's. The computer is Thomas's. >. The boys do not own a thing used for riding\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [41, 42], "Q": [50, 52], "K'": [43, 45], "R": [53, 54], "K": [[27, 36], [28, 37]], "V": [[24, 32], [26, 35]], "example": [22, 60]}, {"END": [95, 96], "A'": [96, 98], "V'": [71, 73], "Q": [87, 89], "K'": [74, 75], "R": [90, 91], "K": [[66, 81], [67, 82]], "V": [[63, 79], [65, 80]], "example": [61, 98]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, flying, cooking, swiming and painting.\n< The spray is Sharon's. The helicopter is Donna's. The goggles is James's. >. The girls do not own a thing used for swiming\n < The jeep is Mary's. The pan is Sandra's. The plane is Michael's. >. The girls do not own a thing used for flying\n", "ranges": [{"END": [60, 61], "A'": [61, 64], "V'": [41, 45], "Q": [52, 54], "K'": [46, 47], "R": [55, 56], "K": [[25, 35], [27, 37]], "V": [[22, 31], [24, 34]], "example": [20, 64]}, {"END": [99, 100], "A'": [100, 101], "V'": [83, 84], "Q": [91, 93], "K'": [85, 86], "R": [94, 95], "K": [[70, 77], [71, 79]], "V": [[67, 75], [69, 76]], "example": [65, 101]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, communicating, flying, playing, killing and writing.\n< The guitar is Paul's. The mop is Helen's. The pencil is Anthony's. >. The boys do not own a thing used for cleaning\n < The plane is Ruth's. The telegraph is James's. The gun is Daniel's. >. The boys do not own a thing used for flying\n", "ranges": [{"END": [56, 57], "A'": [57, 59], "V'": [30, 32], "Q": [48, 50], "K'": [33, 34], "R": [51, 52], "K": [[25, 42], [26, 43]], "V": [[23, 38], [24, 41]], "example": [21, 59]}, {"END": [93, 94], "A'": [94, 95], "V'": [62, 63], "Q": [85, 87], "K'": [64, 65], "R": [88, 89], "K": [[72, 79], [73, 80]], "V": [[69, 77], [71, 78]], "example": [60, 95]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< The motorcycle is Sandra's. The oven is Thomas's. The spray is George's. >. The boys do not own a thing used for riding\n < The spray is Mark's. The bicycle is Nancy's. The truck is Richard's. >. The boys do not own a thing used for riding\n", "ranges": [{"END": [53, 54], "A'": [54, 56], "V'": [19, 21], "Q": [45, 47], "K'": [22, 24], "R": [48, 49], "K": [[31, 39], [32, 40]], "V": [[28, 36], [30, 38]], "example": [17, 56]}, {"END": [93, 94], "A'": [94, 96], "V'": [67, 70], "Q": [85, 87], "K'": [71, 72], "R": [88, 89], "K": [[62, 79], [63, 80]], "V": [[59, 76], [61, 78]], "example": [57, 96]}]}
{"task_id": "rlr_gen[dict_candidates=True][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cleaning, cooking, killing, riding and painting.\n< The biro is Michael's. The vacuum cleaner is Maria's. The dagger is Barbara's. >. The girls do not own a thing used for writing\n < The motorcycle is Maria's. The brush is Ronald's. The oven is Laura's. >. The girls do not own a thing used for painting\n", "ranges": [{"END": [59, 60], "A'": [60, 61], "V'": [24, 26], "Q": [51, 53], "K'": [27, 28], "R": [54, 55], "K": [[37, 45], [38, 46]], "V": [[32, 42], [36, 44]], "example": [22, 61]}, {"END": [98, 99], "A'": [99, 100], "V'": [72, 74], "Q": [90, 92], "K'": [75, 77], "R": [93, 94], "K": [[67, 84], [68, 85]], "V": [[64, 81], [66, 83]], "example": [62, 100]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, flying, riding, cooking, writing and killing.\nPremise: < The abacus is Brian's. The pan is Kenneth's. The pen is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: Yes\n Premise: < The glider is Margaret's. The dagger is James's. The motorcycle is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: Yes\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [43, 44], "Q": [67, 69], "K'": [45, 46], "R": [70, 71], "K": [[31, 38], [32, 39]], "V": [[27, 36], [30, 37]], "example": [21, 81]}, {"END": [140, 141], "A'": [137, 138], "V'": [87, 89], "Q": [128, 130], "K'": [90, 91], "R": [131, 132], "K": [[98, 106], [99, 107]], "V": [[95, 103], [97, 105]], "example": [82, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, killing, calculating, cooking, riding and writing.\nPremise: < The abacus is Brian's. The pan is Kenneth's. The pen is Mary's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: Yes\n Premise: < The glider is Margaret's. The dagger is James's. The motorcycle is Jason's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: No\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [43, 44], "Q": [67, 69], "K'": [45, 46], "R": [70, 71], "K": [[31, 38], [32, 39]], "V": [[27, 36], [30, 37]], "example": [21, 81]}, {"END": [140, 141], "A'": [137, 138], "V'": [87, 89], "Q": [128, 130], "K'": [90, 91], "R": [131, 132], "K": [[98, 106], [99, 107]], "V": [[95, 103], [97, 105]], "example": [82, 142]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, driving, painting, cooking, calculating and playing.\nPremise: < The swimsuit is Edward's. The pan is Helen's. The jeep is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for driving? Answer: No\n Premise: < The palette is John's. The guitar is Maria's. The abacus is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for painting? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [28, 31], "Q": [69, 71], "K'": [32, 33], "R": [72, 73], "K": [[39, 47], [40, 48]], "V": [[37, 44], [38, 46]], "example": [22, 83]}, {"END": [142, 143], "A'": [139, 140], "V'": [89, 91], "Q": [130, 132], "K'": [92, 93], "R": [133, 134], "K": [[99, 108], [100, 109]], "V": [[97, 104], [98, 107]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, cooking, painting, playing, calculating and swiming.\nPremise: < The swimsuit is Edward's. The pan is Helen's. The jeep is Maria's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for driving? Answer: No\n Premise: < The palette is John's. The guitar is Maria's. The abacus is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for playing? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [28, 31], "Q": [69, 71], "K'": [32, 33], "R": [72, 73], "K": [[39, 47], [40, 48]], "V": [[37, 44], [38, 46]], "example": [22, 83]}, {"END": [142, 143], "A'": [139, 140], "V'": [89, 91], "Q": [130, 132], "K'": [92, 93], "R": [133, 134], "K": [[99, 108], [100, 109]], "V": [[97, 104], [98, 107]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, playing, calculating, communicating and painting.\nPremise: < The telephone is Nancy's. The violin is Sharon's. The spray is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for communicating? Answer: No\n Premise: < The spray is John's. The motorcycle is Elizabeth's. The computer is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [42, 44], "Q": [68, 70], "K'": [45, 47], "R": [71, 72], "K": [[28, 36], [29, 38]], "V": [[25, 33], [27, 35]], "example": [19, 83]}, {"END": [142, 143], "A'": [138, 140], "V'": [97, 99], "Q": [129, 131], "K'": [100, 101], "R": [132, 133], "K": [[92, 107], [93, 108]], "V": [[89, 105], [91, 106]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, communicating, painting, playing and riding.\nPremise: < The telephone is Nancy's. The violin is Sharon's. The spray is Ronald's. >. Answer with Yes or No. Can it be inferred from the premise that the girls do not own a thing used for communicating? Answer: No\n Premise: < The spray is John's. The motorcycle is Elizabeth's. The computer is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for calculating? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [42, 44], "Q": [68, 70], "K'": [45, 47], "R": [71, 72], "K": [[28, 36], [29, 38]], "V": [[25, 33], [27, 35]], "example": [19, 83]}, {"END": [141, 142], "A'": [138, 139], "V'": [97, 99], "Q": [129, 131], "K'": [100, 101], "R": [132, 133], "K": [[92, 107], [93, 108]], "V": [[89, 105], [91, 106]], "example": [84, 143]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < The pencil is Jeff's. The mop is John's. The phone is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: No\n Premise: < The abacus is Michael's. The plane is Christopher's. The goggles is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [46, 47], "Q": [70, 72], "K'": [48, 49], "R": [73, 74], "K": [[33, 41], [34, 42]], "V": [[29, 38], [32, 40]], "example": [23, 84]}, {"END": [148, 149], "A'": [143, 146], "V'": [106, 110], "Q": [134, 136], "K'": [111, 113], "R": [137, 138], "K": [[94, 101], [95, 102]], "V": [[90, 99], [93, 100]], "example": [85, 150]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < The pencil is Jeff's. The mop is John's. The phone is Susan's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for writing? Answer: No\n Premise: < The abacus is Michael's. The plane is Christopher's. The goggles is Sharon's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [46, 47], "Q": [70, 72], "K'": [48, 49], "R": [73, 74], "K": [[33, 41], [34, 42]], "V": [[29, 38], [32, 40]], "example": [23, 84]}, {"END": [146, 147], "A'": [143, 144], "V'": [106, 110], "Q": [134, 136], "K'": [111, 113], "R": [137, 138], "K": [[94, 101], [95, 102]], "V": [[90, 99], [93, 100]], "example": [85, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, killing, riding, painting and writing.\nPremise: < The knife is Helen's. The pencil is William's. The swim fins is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n Premise: < The bicycle is Sharon's. The palette is Michael's. The pen is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [26, 28], "Q": [69, 71], "K'": [29, 30], "R": [72, 73], "K": [[38, 47], [39, 48]], "V": [[34, 43], [37, 46]], "example": [20, 83]}, {"END": [144, 145], "A'": [140, 142], "V'": [89, 92], "Q": [131, 133], "K'": [93, 95], "R": [134, 135], "K": [[102, 109], [103, 110]], "V": [[99, 107], [101, 108]], "example": [84, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, riding, killing, painting and swiming.\nPremise: < The knife is Helen's. The pencil is William's. The swim fins is David's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n Premise: < The bicycle is Sharon's. The palette is Michael's. The pen is Edward's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for painting? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [26, 28], "Q": [69, 71], "K'": [29, 30], "R": [72, 73], "K": [[38, 47], [39, 48]], "V": [[34, 43], [37, 46]], "example": [20, 83]}, {"END": [143, 144], "A'": [140, 141], "V'": [89, 92], "Q": [131, 133], "K'": [93, 95], "R": [134, 135], "K": [[102, 109], [103, 110]], "V": [[99, 107], [101, 108]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, swiming, killing, cooking and painting.\nPremise: < The swim fins is Lisa's. The pan is Mark's. The dagger is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n Premise: < The spray is David's. The jeep is John's. The motorcycle is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [79, 82], "V'": [29, 32], "Q": [70, 72], "K'": [33, 34], "R": [73, 74], "K": [[40, 48], [41, 49]], "V": [[38, 45], [39, 47]], "example": [23, 86]}, {"END": [147, 148], "A'": [143, 145], "V'": [108, 110], "Q": [134, 136], "K'": [111, 113], "R": [137, 138], "K": [[95, 103], [96, 104]], "V": [[92, 100], [94, 102]], "example": [87, 149]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, driving, cooking, swiming, killing and riding.\nPremise: < The swim fins is Lisa's. The pan is Mark's. The dagger is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for swiming? Answer: Yes\n Premise: < The spray is David's. The jeep is John's. The motorcycle is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for driving? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [79, 82], "V'": [29, 32], "Q": [70, 72], "K'": [33, 34], "R": [73, 74], "K": [[40, 48], [41, 49]], "V": [[38, 45], [39, 47]], "example": [23, 86]}, {"END": [146, 147], "A'": [143, 144], "V'": [108, 110], "Q": [134, 136], "K'": [111, 113], "R": [137, 138], "K": [[95, 103], [96, 104]], "V": [[92, 100], [94, 102]], "example": [87, 148]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, killing, driving, painting, cooking and riding.\nPremise: < The pan is Kimberly's. The jeep is Christopher's. The gun is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for cooking? Answer: Yes\n Premise: < The spray is Robert's. The phone is Donald's. The bicycle is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for riding? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [78, 80], "V'": [28, 29], "Q": [69, 71], "K'": [30, 33], "R": [72, 73], "K": [[40, 47], [41, 48]], "V": [[37, 45], [39, 46]], "example": [22, 84]}, {"END": [145, 146], "A'": [141, 143], "V'": [105, 108], "Q": [132, 134], "K'": [109, 111], "R": [135, 136], "K": [[93, 100], [94, 101]], "V": [[90, 98], [92, 99]], "example": [85, 147]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, painting, killing, communicating, cooking and riding.\nPremise: < The pan is Kimberly's. The jeep is Christopher's. The gun is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for cooking? Answer: Yes\n Premise: < The spray is Robert's. The phone is Donald's. The bicycle is Dorothy's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for painting? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [78, 80], "V'": [28, 29], "Q": [69, 71], "K'": [30, 33], "R": [72, 73], "K": [[40, 47], [41, 48]], "V": [[37, 45], [39, 46]], "example": [22, 84]}, {"END": [144, 145], "A'": [141, 142], "V'": [105, 108], "Q": [132, 134], "K'": [109, 111], "R": [135, 136], "K": [[93, 100], [94, 101]], "V": [[90, 98], [92, 99]], "example": [85, 146]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < The violin is Michelle's. The car is Kenneth's. The telegraph is George's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for playing? Answer: Yes\n Premise: < The knife is Lisa's. The glider is William's. The bicycle is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for killing? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [27, 29], "Q": [68, 70], "K'": [30, 32], "R": [71, 72], "K": [[38, 46], [39, 47]], "V": [[36, 43], [37, 45]], "example": [21, 82]}, {"END": [142, 143], "A'": [139, 140], "V'": [88, 90], "Q": [130, 132], "K'": [91, 92], "R": [133, 134], "K": [[99, 108], [100, 109]], "V": [[96, 104], [98, 107]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][genders_of_persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < The violin is Michelle's. The car is Kenneth's. The telegraph is George's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for playing? Answer: Yes\n Premise: < The knife is Lisa's. The glider is William's. The bicycle is Steven's. >. Answer with Yes or No. Can it be inferred from the premise that the boys do not own a thing used for flying? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [27, 29], "Q": [68, 70], "K'": [30, 32], "R": [71, 72], "K": [[38, 46], [39, 47]], "V": [[36, 43], [37, 45]], "example": [21, 82]}, {"END": [142, 143], "A'": [139, 140], "V'": [88, 90], "Q": [130, 132], "K'": [91, 92], "R": [133, 134], "K": [[99, 108], [100, 109]], "V": [[96, 104], [98, 107]], "example": [83, 144]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra has knife. Dorothy has truck. Brian has swimsuit. >. So who owns a thing used for swiming? the boy\n < Edward has swim fins. Kevin has truck. Nancy has oven. >. So who owns a thing used for cooking? the girl\n", "ranges": [{"END": [34, 35], "A": [35, 36], "V": [14, 15], "Q": [30, 33], "K": [16, 19], "R": null, "K'": [[5, 11], [7, 13]], "V'": [[2, 8], [4, 10]], "example": [1, 36]}, {"END": [67, 68], "A": [68, 69], "V": [49, 50], "Q": [64, 66], "K": [51, 53], "R": null, "K'": [[40, 46], [43, 48]], "V'": [[38, 44], [39, 45]], "example": [37, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David has mop. Kimberly has car. Kenneth has pan. >. So who owns a thing used for driving? the girl\n < Jeff has mop. Lisa has helicopter. Laura has telephone. >. So who owns a thing used for cleaning? the boy\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [7, 10], "Q": [27, 28], "K": [11, 12], "R": null, "K'": [[4, 15], [6, 16]], "V'": [[2, 13], [3, 14]], "example": [1, 31]}, {"END": [62, 63], "A": [63, 64], "V": [33, 34], "Q": [59, 61], "K": [35, 37], "R": null, "K'": [[40, 46], [43, 48]], "V'": [[38, 44], [39, 45]], "example": [32, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< John has truck. Sarah has piano. Karen has motorcycle. >. So who owns a thing used for driving? the boy\n < Richard has dagger. Ruth has pan. Helen has telephone. >. So who owns a thing used for killing? the boy\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [2, 3], "Q": [27, 28], "K": [4, 6], "R": null, "K'": [[9, 14], [10, 16]], "V'": [[7, 11], [8, 13]], "example": [1, 31]}, {"END": [59, 60], "A": [60, 61], "V": [33, 34], "Q": [57, 58], "K": [35, 37], "R": null, "K'": [[40, 44], [41, 46]], "V'": [[38, 42], [39, 43]], "example": [32, 61]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel has jeep. Ronald has abacus. Susan has piano. >. So who owns a thing used for playing? the girl\n < Margaret has pencil. Kenneth has roller. Mark has pot. >. So who owns a thing used for writing? the girl\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [14, 15], "Q": [28, 29], "K": [16, 17], "R": null, "K'": [[4, 10], [6, 13]], "V'": [[2, 7], [3, 9]], "example": [1, 32]}, {"END": [61, 62], "A": [62, 63], "V": [34, 35], "Q": [59, 60], "K": [36, 39], "R": null, "K'": [[42, 47], [44, 48]], "V'": [[40, 45], [41, 46]], "example": [33, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Elizabeth has dagger. William has bicycle. Laura has spray. >. So who owns a thing used for riding? the boy\n < Laura has dagger. Charles has vacuum cleaner. Nancy has motorcycle. >. So who owns a thing used for cleaning? the boy\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [7, 8], "Q": [28, 30], "K": [9, 12], "R": null, "K'": [[4, 15], [6, 17]], "V'": [[2, 13], [3, 14]], "example": [1, 33]}, {"END": [65, 66], "A": [66, 67], "V": [40, 41], "Q": [62, 64], "K": [42, 46], "R": null, "K'": [[37, 49], [39, 51]], "V'": [[35, 47], [36, 48]], "example": [34, 67]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Maria has broom. Jeff has swimsuit. Mark has chalk. >. So who owns a thing used for cleaning? the girl\n < Edward has pencil. Mark has guitar. Mary has radio. >. So who owns a thing used for communicating? the girl\n", "ranges": [{"END": [31, 32], "A": [32, 33], "V": [2, 3], "Q": [28, 30], "K": [4, 6], "R": null, "K'": [[9, 15], [12, 17]], "V'": [[7, 13], [8, 14]], "example": [1, 33]}, {"END": [62, 63], "A": [63, 64], "V": [45, 46], "Q": [59, 61], "K": [47, 48], "R": null, "K'": [[37, 43], [40, 44]], "V'": [[35, 41], [36, 42]], "example": [34, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Maria has oven. Ronald has pencil. Mark has telegraph. >. So who owns a thing used for cooking? the girl\n < Sarah has plane. David has palette. Brian has pen. >. So who owns a thing used for flying? the girl\n", "ranges": [{"END": [32, 33], "A": [33, 34], "V": [2, 3], "Q": [29, 31], "K": [4, 6], "R": null, "K'": [[10, 16], [13, 18]], "V'": [[7, 14], [9, 15]], "example": [1, 34]}, {"END": [61, 62], "A": [62, 63], "V": [36, 37], "Q": [59, 60], "K": [38, 39], "R": null, "K'": [[42, 47], [44, 48]], "V'": [[40, 45], [41, 46]], "example": [35, 63]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Christopher has chalk. Nancy has mop. Kevin has palette. >. So who owns a thing used for cleaning? the girl\n < Paul has oven. Patricia has brush. Jennifer has piano. >. So who owns a thing used for cooking? the boy\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [7, 8], "Q": [27, 29], "K": [9, 11], "R": null, "K'": [[4, 14], [6, 16]], "V'": [[2, 12], [3, 13]], "example": [1, 32]}, {"END": [64, 65], "A": [65, 66], "V": [34, 35], "Q": [61, 63], "K": [36, 38], "R": null, "K'": [[43, 49], [45, 50]], "V'": [[39, 46], [42, 48]], "example": [33, 66]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has knife. Dorothy has truck. Brian has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n Premise: < Kevin has plane. Ruth has swim fins. Donna has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [17, 18], "Q": [50, 53], "K": [19, 22], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [65, 66], "Q": [108, 109], "K": [67, 68], "R": null, "K'": [[71, 78], [74, 80]], "V'": [[69, 75], [70, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has knife. Dorothy has truck. Brian has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n Premise: < Kevin has plane. Ruth has swim fins. Donna has knife. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the girl? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [17, 18], "Q": [50, 53], "K": [19, 22], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [65, 66], "Q": [108, 109], "K": [67, 68], "R": null, "K'": [[71, 78], [74, 80]], "V'": [[69, 75], [70, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has bicycle. Lisa has jeep. Anthony has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is the boy? Answer: No\n Premise: < Donna has swimsuit. William has pan. Kevin has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 12], "Q": [47, 48], "K": [13, 15], "R": null, "K'": [[7, 18], [10, 19]], "V'": [[5, 16], [6, 17]], "example": [1, 55]}, {"END": [111, 112], "A": [107, 109], "V": [60, 62], "Q": [103, 106], "K": [63, 66], "R": null, "K'": [[69, 73], [70, 75]], "V'": [[67, 71], [68, 72]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has bicycle. Lisa has jeep. Anthony has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is the boy? Answer: No\n Premise: < Donna has swimsuit. William has pan. Kevin has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 12], "Q": [47, 48], "K": [13, 15], "R": null, "K'": [[7, 18], [10, 19]], "V'": [[5, 16], [6, 17]], "example": [1, 55]}, {"END": [111, 112], "A": [107, 109], "V": [60, 62], "Q": [103, 106], "K": [63, 66], "R": null, "K'": [[69, 73], [70, 75]], "V'": [[67, 71], [68, 72]], "example": [56, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has violin. Linda has truck. David has radio. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is the boy? Answer: Yes\n Premise: < Daniel has goggles. Sharon has radio. Betty has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [17, 18], "Q": [48, 50], "K": [19, 20], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [62, 63], "Q": [106, 109], "K": [64, 68], "R": null, "K'": [[72, 76], [73, 78]], "V'": [[69, 74], [71, 75]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has violin. Linda has truck. David has radio. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is the boy? Answer: Yes\n Premise: < Daniel has goggles. Sharon has radio. Betty has brush. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [17, 18], "Q": [48, 50], "K": [19, 20], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [62, 63], "Q": [106, 109], "K": [64, 68], "R": null, "K'": [[72, 76], [73, 78]], "V'": [[69, 74], [71, 75]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has goggles. James has pot. Thomas has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n Premise: < Elizabeth has spray. Sandra has plane. Joseph has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [48, 51], "K": [7, 11], "R": null, "K'": [[14, 18], [15, 20]], "V'": [[12, 16], [13, 17]], "example": [1, 58]}, {"END": [111, 112], "A": [107, 109], "V": [73, 74], "Q": [105, 106], "K": [75, 77], "R": null, "K'": [[65, 71], [67, 72]], "V'": [[63, 68], [64, 70]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Betty has goggles. James has pot. Thomas has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n Premise: < Elizabeth has spray. Sandra has plane. Joseph has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [48, 51], "K": [7, 11], "R": null, "K'": [[14, 18], [15, 20]], "V'": [[12, 16], [13, 17]], "example": [1, 58]}, {"END": [111, 112], "A": [107, 109], "V": [73, 74], "Q": [105, 106], "K": [75, 77], "R": null, "K'": [[65, 71], [67, 72]], "V'": [[63, 68], [64, 70]], "example": [59, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Thomas has dagger. Barbara has chalk. Betty has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < George has bicycle. Kevin has helicopter. Margaret has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 21]], "V'": [[10, 15], [11, 16]], "example": [1, 57]}, {"END": [115, 116], "A": [111, 113], "V": [74, 75], "Q": [108, 110], "K": [76, 80], "R": null, "K'": [[64, 70], [67, 73]], "V'": [[62, 68], [63, 69]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Thomas has dagger. Barbara has chalk. Betty has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < George has bicycle. Kevin has helicopter. Margaret has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 21]], "V'": [[10, 15], [11, 16]], "example": [1, 57]}, {"END": [115, 116], "A": [111, 113], "V": [74, 75], "Q": [108, 110], "K": [76, 80], "R": null, "K'": [[64, 70], [67, 73]], "V'": [[62, 68], [63, 69]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has oven. Ronald has pencil. Mark has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n Premise: < Sharon has oven. Thomas has radio. David has palette. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [49, 51], "K": [7, 9], "R": null, "K'": [[13, 19], [16, 21]], "V'": [[10, 17], [12, 18]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [63, 65], "Q": [105, 107], "K": [66, 68], "R": null, "K'": [[71, 75], [72, 77]], "V'": [[69, 73], [70, 74]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria has oven. Ronald has pencil. Mark has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n Premise: < Sharon has oven. Thomas has radio. David has palette. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the boy? Answer: No\n", "ranges": [{"END": [56, 57], "A": [52, 54], "V": [5, 6], "Q": [49, 51], "K": [7, 9], "R": null, "K'": [[13, 19], [16, 21]], "V'": [[10, 17], [12, 18]], "example": [1, 58]}, {"END": [112, 113], "A": [108, 110], "V": [63, 65], "Q": [105, 107], "K": [66, 68], "R": null, "K'": [[71, 75], [72, 77]], "V'": [[69, 73], [70, 74]], "example": [59, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher has plane. Nancy has abacus. Deborah has roller. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n Premise: < Steven has mop. Anthony has plane. Sarah has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 8], "R": null, "K'": [[11, 19], [14, 21]], "V'": [[9, 15], [10, 18]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [71, 72], "Q": [104, 106], "K": [73, 76], "R": null, "K'": [[64, 69], [66, 70]], "V'": [[62, 67], [63, 68]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher has plane. Nancy has abacus. Deborah has roller. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n Premise: < Steven has mop. Anthony has plane. Sarah has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [5, 6], "Q": [49, 50], "K": [7, 8], "R": null, "K'": [[11, 19], [14, 21]], "V'": [[9, 15], [10, 18]], "example": [1, 57]}, {"END": [111, 112], "A": [107, 109], "V": [71, 72], "Q": [104, 106], "K": [73, 76], "R": null, "K'": [[64, 69], [66, 70]], "V'": [[62, 67], [63, 68]], "example": [58, 113]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has chalk. Paul has gun. Ruth has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < Nancy has swim fins. Paul has motorcycle. Kenneth has computer. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 12], "Q": [47, 48], "K": [13, 14], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[5, 15], [7, 16]], "example": [1, 55]}, {"END": [110, 111], "A": [106, 108], "V": [60, 61], "Q": [102, 105], "K": [62, 65], "R": null, "K'": [[68, 73], [70, 74]], "V'": [[66, 71], [67, 72]], "example": [56, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has chalk. Paul has gun. Ruth has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < Nancy has swim fins. Paul has motorcycle. Kenneth has computer. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [11, 12], "Q": [47, 48], "K": [13, 14], "R": null, "K'": [[8, 17], [10, 19]], "V'": [[5, 15], [7, 16]], "example": [1, 55]}, {"END": [110, 111], "A": [106, 108], "V": [60, 61], "Q": [102, 105], "K": [62, 65], "R": null, "K'": [[68, 73], [70, 74]], "V'": [[66, 71], [67, 72]], "example": [56, 112]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The knife is Sandra's. The truck is Dorothy's. The swimsuit is Brian's. >. So who owns a thing used for swiming? the boy\n < The swim fins is Edward's. The truck is Kevin's. The oven is Nancy's. >. So who owns a thing used for cooking? the girl\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [25, 26], "Q": [39, 42], "K": [21, 24], "R": null, "K'": [[3, 12], [5, 14]], "V'": [[6, 15], [8, 17]], "example": [1, 45]}, {"END": [85, 86], "A": [86, 87], "V": [68, 69], "Q": [82, 84], "K": [65, 67], "R": null, "K'": [[48, 57], [51, 59]], "V'": [[52, 60], [53, 61]], "example": [46, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mop is David's. The car is Kimberly's. The pan is Kenneth's. >. So who owns a thing used for driving? the girl\n < The mop is Jeff's. The helicopter is Lisa's. The telephone is Laura's. >. So who owns a thing used for cleaning? the boy\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [13, 16], "Q": [36, 37], "K": [11, 12], "R": null, "K'": [[3, 20], [5, 21]], "V'": [[6, 22], [7, 23]], "example": [1, 40]}, {"END": [80, 81], "A": [81, 82], "V": [46, 47], "Q": [77, 79], "K": [43, 45], "R": null, "K'": [[51, 60], [54, 62]], "V'": [[55, 63], [56, 64]], "example": [41, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The truck is John's. The piano is Sarah's. The motorcycle is Karen's. >. So who owns a thing used for driving? the boy\n < The dagger is Richard's. The pan is Ruth's. The telephone is Helen's. >. So who owns a thing used for killing? the boy\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [6, 7], "Q": [36, 37], "K": [3, 5], "R": null, "K'": [[11, 18], [12, 20]], "V'": [[13, 21], [14, 23]], "example": [1, 40]}, {"END": [77, 78], "A": [78, 79], "V": [46, 47], "Q": [75, 76], "K": [43, 45], "R": null, "K'": [[51, 58], [52, 60]], "V'": [[53, 61], [54, 62]], "example": [41, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jeep is Daniel's. The abacus is Ronald's. The piano is Susan's. >. So who owns a thing used for playing? the girl\n < The pencil is Margaret's. The roller is Kenneth's. The pot is Mark's. >. So who owns a thing used for writing? the girl\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [23, 24], "Q": [37, 38], "K": [21, 22], "R": null, "K'": [[3, 11], [5, 14]], "V'": [[6, 15], [7, 17]], "example": [1, 41]}, {"END": [79, 80], "A": [80, 81], "V": [48, 49], "Q": [77, 78], "K": [44, 47], "R": null, "K'": [[53, 61], [55, 62]], "V'": [[56, 63], [57, 64]], "example": [42, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The dagger is Elizabeth's. The bicycle is William's. The spray is Laura's. >. So who owns a thing used for riding? the boy\n < The dagger is Laura's. The vacuum cleaner is Charles's. The motorcycle is Nancy's. >. So who owns a thing used for cleaning? the boy\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [15, 16], "Q": [37, 39], "K": [11, 14], "R": null, "K'": [[3, 20], [5, 22]], "V'": [[6, 23], [7, 24]], "example": [1, 42]}, {"END": [83, 84], "A": [84, 85], "V": [58, 59], "Q": [80, 82], "K": [53, 57], "R": null, "K'": [[45, 63], [47, 65]], "V'": [[48, 66], [49, 67]], "example": [43, 85]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The broom is Maria's. The swimsuit is Jeff's. The chalk is Mark's. >. So who owns a thing used for cleaning? the girl\n < The pencil is Edward's. The guitar is Mark's. The radio is Mary's. >. So who owns a thing used for communicating? the girl\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [6, 7], "Q": [37, 39], "K": [3, 5], "R": null, "K'": [[11, 20], [14, 22]], "V'": [[15, 23], [16, 24]], "example": [1, 42]}, {"END": [80, 81], "A": [81, 82], "V": [63, 64], "Q": [77, 79], "K": [61, 62], "R": null, "K'": [[45, 54], [48, 55]], "V'": [[49, 56], [50, 57]], "example": [43, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The oven is Maria's. The pencil is Ronald's. The telegraph is Mark's. >. So who owns a thing used for cooking? the girl\n < The plane is Sarah's. The palette is David's. The pen is Brian's. >. So who owns a thing used for flying? the girl\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [6, 7], "Q": [38, 40], "K": [3, 5], "R": null, "K'": [[11, 21], [14, 23]], "V'": [[15, 24], [17, 25]], "example": [1, 43]}, {"END": [79, 80], "A": [80, 81], "V": [48, 49], "Q": [77, 78], "K": [46, 47], "R": null, "K'": [[53, 61], [55, 62]], "V'": [[56, 63], [57, 64]], "example": [44, 81]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The chalk is Christopher's. The mop is Nancy's. The palette is Kevin's. >. So who owns a thing used for cleaning? the girl\n < The oven is Paul's. The brush is Patricia's. The piano is Jennifer's. >. So who owns a thing used for cooking? the boy\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [14, 15], "Q": [36, 38], "K": [11, 13], "R": null, "K'": [[3, 19], [5, 21]], "V'": [[6, 22], [7, 23]], "example": [1, 41]}, {"END": [82, 83], "A": [83, 84], "V": [47, 48], "Q": [79, 81], "K": [44, 46], "R": null, "K'": [[52, 62], [54, 63]], "V'": [[55, 64], [58, 66]], "example": [42, 84]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The knife is Sandra's. The truck is Dorothy's. The swimsuit is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n Premise: < The plane is Kevin's. The swim fins is Ruth's. The knife is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [28, 29], "Q": [59, 62], "K": [24, 27], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [77, 78], "Q": [126, 127], "K": [75, 76], "R": null, "K'": [[82, 91], [85, 93]], "V'": [[86, 94], [87, 96]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The knife is Sandra's. The truck is Dorothy's. The swimsuit is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n Premise: < The plane is Kevin's. The swim fins is Ruth's. The knife is Donna's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the girl? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [28, 29], "Q": [59, 62], "K": [24, 27], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [77, 78], "Q": [126, 127], "K": [75, 76], "R": null, "K'": [[82, 91], [85, 93]], "V'": [[86, 94], [87, 96]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bicycle is Mark's. The jeep is Lisa's. The gun is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is the boy? Answer: No\n Premise: < The swimsuit is Donna's. The pan is William's. The jeep is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [18, 19], "Q": [56, 57], "K": [15, 17], "R": null, "K'": [[6, 23], [9, 24]], "V'": [[10, 25], [11, 26]], "example": [1, 64]}, {"END": [129, 130], "A": [125, 127], "V": [74, 76], "Q": [121, 124], "K": [70, 73], "R": null, "K'": [[80, 87], [81, 89]], "V'": [[82, 90], [83, 91]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bicycle is Mark's. The jeep is Lisa's. The gun is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is the boy? Answer: No\n Premise: < The swimsuit is Donna's. The pan is William's. The jeep is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [18, 19], "Q": [56, 57], "K": [15, 17], "R": null, "K'": [[6, 23], [9, 24]], "V'": [[10, 25], [11, 26]], "example": [1, 64]}, {"END": [129, 130], "A": [125, 127], "V": [74, 76], "Q": [121, 124], "K": [70, 73], "R": null, "K'": [[80, 87], [81, 89]], "V'": [[82, 90], [83, 91]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The violin is Karen's. The truck is Linda's. The radio is David's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is the boy? Answer: Yes\n Premise: < The goggles is Daniel's. The radio is Sharon's. The brush is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [26, 27], "Q": [57, 59], "K": [24, 25], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 66]}, {"END": [132, 133], "A": [128, 130], "V": [77, 78], "Q": [124, 127], "K": [72, 76], "R": null, "K'": [[82, 90], [83, 92]], "V'": [[84, 93], [86, 94]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The violin is Karen's. The truck is Linda's. The radio is David's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is the boy? Answer: Yes\n Premise: < The goggles is Daniel's. The radio is Sharon's. The brush is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [26, 27], "Q": [57, 59], "K": [24, 25], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 20]], "example": [1, 66]}, {"END": [132, 133], "A": [128, 130], "V": [77, 78], "Q": [124, 127], "K": [72, 76], "R": null, "K'": [[82, 90], [83, 92]], "V'": [[84, 93], [86, 94]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goggles is Betty's. The pot is James's. The telegraph is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n Premise: < The spray is Elizabeth's. The plane is Sandra's. The violin is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is the boy? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [11, 12], "Q": [57, 60], "K": [6, 10], "R": null, "K'": [[16, 23], [17, 25]], "V'": [[18, 26], [19, 27]], "example": [1, 67]}, {"END": [129, 130], "A": [125, 127], "V": [92, 93], "Q": [123, 124], "K": [89, 91], "R": null, "K'": [[73, 81], [75, 82]], "V'": [[76, 83], [77, 85]], "example": [68, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The goggles is Betty's. The pot is James's. The telegraph is Thomas's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n Premise: < The spray is Elizabeth's. The plane is Sandra's. The violin is Joseph's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is the girl? Answer: No\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [11, 12], "Q": [57, 60], "K": [6, 10], "R": null, "K'": [[16, 23], [17, 25]], "V'": [[18, 26], [19, 27]], "example": [1, 67]}, {"END": [129, 130], "A": [125, 127], "V": [92, 93], "Q": [123, 124], "K": [89, 91], "R": null, "K'": [[73, 81], [75, 82]], "V'": [[76, 83], [77, 85]], "example": [68, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dagger is Thomas's. The chalk is Barbara's. The goggles is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < The bicycle is George's. The helicopter is Kevin's. The vacuum cleaner is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [9, 10], "Q": [58, 59], "K": [6, 8], "R": null, "K'": [[14, 22], [16, 26]], "V'": [[17, 27], [18, 28]], "example": [1, 66]}, {"END": [133, 134], "A": [129, 131], "V": [95, 96], "Q": [126, 128], "K": [90, 94], "R": null, "K'": [[72, 81], [75, 84]], "V'": [[76, 85], [77, 86]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dagger is Thomas's. The chalk is Barbara's. The goggles is Betty's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < The bicycle is George's. The helicopter is Kevin's. The vacuum cleaner is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [9, 10], "Q": [58, 59], "K": [6, 8], "R": null, "K'": [[14, 22], [16, 26]], "V'": [[17, 27], [18, 28]], "example": [1, 66]}, {"END": [133, 134], "A": [129, 131], "V": [95, 96], "Q": [126, 128], "K": [90, 94], "R": null, "K'": [[72, 81], [75, 84]], "V'": [[76, 85], [77, 86]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The oven is Maria's. The pencil is Ronald's. The telegraph is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n Premise: < The oven is Sharon's. The radio is Thomas's. The palette is David's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [9, 10], "Q": [58, 60], "K": [6, 8], "R": null, "K'": [[14, 24], [17, 26]], "V'": [[18, 27], [20, 28]], "example": [1, 67]}, {"END": [130, 131], "A": [126, 128], "V": [76, 78], "Q": [123, 125], "K": [73, 75], "R": null, "K'": [[82, 89], [83, 91]], "V'": [[84, 92], [85, 93]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The oven is Maria's. The pencil is Ronald's. The telegraph is Mark's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the girl? Answer: Yes\n Premise: < The oven is Sharon's. The radio is Thomas's. The palette is David's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is the boy? Answer: No\n", "ranges": [{"END": [65, 66], "A": [61, 63], "V": [9, 10], "Q": [58, 60], "K": [6, 8], "R": null, "K'": [[14, 24], [17, 26]], "V'": [[18, 27], [20, 28]], "example": [1, 67]}, {"END": [130, 131], "A": [126, 128], "V": [76, 78], "Q": [123, 125], "K": [73, 75], "R": null, "K'": [[82, 89], [83, 91]], "V'": [[84, 92], [85, 93]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Christopher's. The abacus is Nancy's. The roller is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n Premise: < The mop is Steven's. The plane is Anthony's. The bicycle is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [8, 9], "Q": [58, 59], "K": [6, 7], "R": null, "K'": [[13, 22], [16, 24]], "V'": [[17, 25], [18, 28]], "example": [1, 66]}, {"END": [129, 130], "A": [125, 127], "V": [91, 92], "Q": [122, 124], "K": [87, 90], "R": null, "K'": [[72, 80], [74, 81]], "V'": [[75, 82], [76, 83]], "example": [67, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Christopher's. The abacus is Nancy's. The roller is Deborah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is the boy? Answer: Yes\n Premise: < The mop is Steven's. The plane is Anthony's. The bicycle is Sarah's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for riding is the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [8, 9], "Q": [58, 59], "K": [6, 7], "R": null, "K'": [[13, 22], [16, 24]], "V'": [[17, 25], [18, 28]], "example": [1, 66]}, {"END": [129, 130], "A": [125, 127], "V": [91, 92], "Q": [122, 124], "K": [87, 90], "R": null, "K'": [[72, 80], [74, 81]], "V'": [[75, 82], [76, 83]], "example": [67, 131]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The chalk is Sandra's. The gun is Paul's. The violin is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < The swim fins is Nancy's. The motorcycle is Paul's. The computer is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [17, 18], "Q": [56, 57], "K": [15, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [11, 26]], "example": [1, 64]}, {"END": [128, 129], "A": [124, 126], "V": [74, 75], "Q": [120, 123], "K": [70, 73], "R": null, "K'": [[79, 87], [81, 88]], "V'": [[82, 89], [83, 90]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The chalk is Sandra's. The gun is Paul's. The violin is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is the boy? Answer: Yes\n Premise: < The swim fins is Nancy's. The motorcycle is Paul's. The computer is Kenneth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [17, 18], "Q": [56, 57], "K": [15, 16], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [11, 26]], "example": [1, 64]}, {"END": [128, 129], "A": [124, 126], "V": [74, 75], "Q": [120, 123], "K": [70, 73], "R": null, "K'": [[79, 87], [81, 88]], "V'": [[82, 89], [83, 90]], "example": [65, 130]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra has swimsuit. Dorothy has goggles. Brian has pencil. >. The one who owns a thing used for swiming is not the boy\n < Edward has pan. Kevin has oven. Nancy has car. >. The one who owns a thing used for cooking is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [17, 18], "Q": [34, 37], "K'": [19, 22], "R": [38, 39], "K": [[5, 12], [8, 16]], "V": [[2, 9], [4, 11]], "example": [1, 41]}, {"END": [71, 72], "A'": [72, 73], "V'": [52, 53], "Q": [67, 69], "K'": [54, 55], "R": [70, 71], "K": [[45, 49], [46, 51]], "V": [[43, 47], [44, 48]], "example": [42, 73]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David has truck. Kimberly has pen. Kenneth has car. >. The one who owns a thing used for driving is not the girl\n < Dorothy has vacuum cleaner. Nancy has mop. David has jeep. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [7, 10], "Q": [28, 29], "K'": [11, 12], "R": [30, 31], "K": [[4, 15], [6, 16]], "V": [[2, 13], [3, 14]], "example": [1, 33]}, {"END": [68, 69], "A'": [69, 70], "V'": [48, 49], "Q": [64, 66], "K'": [50, 52], "R": [67, 68], "K": [[38, 45], [42, 47]], "V": [[35, 43], [37, 44]], "example": [34, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jason has mop. Patricia has pen. Elizabeth has chalk. >. The one who owns a thing used for writing is not the boy\n < Robert has abacus. Karen has piano. Donna has violin. >. The one who owns a thing used for playing is not the boy\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [29, 30], "K'": [4, 6], "R": [31, 32], "K": [[11, 15], [12, 17]], "V": [[7, 13], [10, 14]], "example": [1, 34]}, {"END": [67, 68], "A'": [68, 69], "V'": [36, 37], "Q": [64, 65], "K'": [38, 41], "R": [66, 67], "K": [[45, 50], [46, 52]], "V": [[42, 47], [44, 49]], "example": [35, 69]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Edward has swimsuit. Steven has goggles. Sharon has brush. >. The one who owns a thing used for swiming is not the girl\n < Thomas has goggles. Kimberly has vacuum cleaner. Carol has broom. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [15, 17], "Q": [32, 35], "K'": [18, 20], "R": [36, 37], "K": [[4, 10], [7, 14]], "V": [[2, 8], [3, 9]], "example": [1, 39]}, {"END": [77, 78], "A'": [78, 79], "V'": [41, 42], "Q": [73, 75], "K'": [43, 47], "R": [76, 77], "K": [[52, 59], [56, 61]], "V": [[48, 57], [51, 58]], "example": [40, 79]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kevin has goggles. Patricia has calculator. James has swim fins. >. The one who owns a thing used for swiming is not the girl\n < Margaret has swimsuit. Mark has bicycle. Deborah has swim fins. >. The one who owns a thing used for swiming is not the boy\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [9, 12], "Q": [33, 36], "K'": [13, 15], "R": [37, 38], "K": [[4, 18], [8, 21]], "V": [[2, 16], [3, 17]], "example": [1, 40]}, {"END": [78, 79], "A'": [79, 80], "V'": [48, 49], "Q": [73, 76], "K'": [50, 53], "R": [77, 78], "K": [[44, 58], [47, 61]], "V": [[42, 54], [43, 57]], "example": [41, 80]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff has jeep. Betty has gun. Deborah has dagger. >. The one who owns a thing used for killing is not the boy\n < Donald has plane. Laura has mop. Karen has vacuum cleaner. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [29, 30], "K'": [4, 6], "R": [31, 32], "K": [[9, 15], [10, 17]], "V": [[7, 11], [8, 14]], "example": [1, 34]}, {"END": [68, 69], "A'": [69, 70], "V'": [36, 37], "Q": [64, 66], "K'": [38, 39], "R": [67, 68], "K": [[42, 48], [44, 52]], "V": [[40, 45], [41, 47]], "example": [35, 70]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Helen has jeep. Elizabeth has car. Christopher has knife. >. The one who owns a thing used for driving is not the boy\n < Maria has pot. Ronald has car. Mark has jeep. >. The one who owns a thing used for driving is not the girl\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [11, 12], "Q": [27, 28], "K'": [13, 15], "R": [29, 30], "K": [[4, 9], [6, 10]], "V": [[2, 7], [3, 8]], "example": [1, 32]}, {"END": [62, 63], "A'": [63, 64], "V'": [34, 35], "Q": [59, 60], "K'": [36, 37], "R": [61, 62], "K": [[41, 45], [42, 47]], "V": [[38, 43], [40, 44]], "example": [33, 64]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Karen has truck. Sharon has jeep. David has palette. >. The one who owns a thing used for driving is not the boy\n < Daniel has glider. Christopher has plane. Sarah has calculator. >. The one who owns a thing used for flying is not the girl\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [14, 15], "Q": [30, 31], "K'": [16, 18], "R": [32, 33], "K": [[5, 11], [7, 13]], "V": [[2, 8], [4, 10]], "example": [1, 35]}, {"END": [65, 66], "A'": [66, 67], "V'": [46, 47], "Q": [62, 63], "K'": [48, 50], "R": [64, 65], "K": [[39, 44], [41, 45]], "V": [[37, 42], [38, 43]], "example": [36, 67]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has swimsuit. Dorothy has goggles. Brian has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: No\n Premise: < Edward has plane. Kevin has helicopter. Nancy has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [20, 21], "Q": [53, 56], "K'": [22, 25], "R": [57, 58], "K": [[8, 15], [11, 19]], "V": [[5, 12], [7, 14]], "example": [1, 64]}, {"END": [118, 119], "A'": [114, 116], "V'": [79, 80], "Q": [111, 112], "K'": [81, 83], "R": [113, 114], "K": [[71, 75], [72, 78]], "V": [[69, 73], [70, 74]], "example": [65, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra has swimsuit. Dorothy has goggles. Brian has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: No\n Premise: < Edward has plane. Kevin has helicopter. Nancy has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the boy? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [20, 21], "Q": [53, 56], "K'": [22, 25], "R": [57, 58], "K": [[8, 15], [11, 19]], "V": [[5, 12], [7, 14]], "example": [1, 64]}, {"END": [118, 119], "A'": [114, 116], "V'": [79, 80], "Q": [111, 112], "K'": [81, 83], "R": [113, 114], "K": [[71, 75], [72, 78]], "V": [[69, 73], [70, 74]], "example": [65, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has car. Lisa has bicycle. Anthony has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not the boy? Answer: No\n Premise: < Donna has violin. William has swimsuit. Kevin has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [9, 10], "Q": [47, 48], "K'": [11, 14], "R": [49, 50], "K": [[7, 17], [8, 19]], "V": [[5, 15], [6, 16]], "example": [1, 56]}, {"END": [116, 117], "A'": [112, 114], "V'": [61, 63], "Q": [107, 110], "K'": [64, 66], "R": [111, 112], "K": [[69, 75], [72, 79]], "V": [[67, 73], [68, 74]], "example": [57, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark has car. Lisa has bicycle. Anthony has truck. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not the boy? Answer: No\n Premise: < Donna has violin. William has swimsuit. Kevin has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [9, 10], "Q": [47, 48], "K'": [11, 14], "R": [49, 50], "K": [[7, 17], [8, 19]], "V": [[5, 15], [6, 16]], "example": [1, 56]}, {"END": [116, 117], "A'": [112, 114], "V'": [61, 63], "Q": [107, 110], "K'": [64, 66], "R": [111, 112], "K": [[69, 75], [72, 79]], "V": [[67, 73], [68, 74]], "example": [57, 118]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has vacuum cleaner. David has radio. Jeff has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not the boy? Answer: No\n Premise: < William has pan. Kevin has pot. Karen has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the girl? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [5, 8], "Q": [50, 52], "K'": [9, 13], "R": [53, 54], "K": [[16, 20], [17, 22]], "V": [[14, 18], [15, 19]], "example": [1, 60]}, {"END": [113, 114], "A'": [109, 111], "V'": [73, 75], "Q": [105, 107], "K'": [76, 77], "R": [108, 109], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [61, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Deborah has vacuum cleaner. David has radio. Jeff has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not the boy? Answer: No\n Premise: < William has pan. Kevin has pot. Karen has car. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [54, 56], "V'": [5, 8], "Q": [50, 52], "K'": [9, 13], "R": [53, 54], "K": [[16, 20], [17, 22]], "V": [[14, 18], [15, 19]], "example": [1, 60]}, {"END": [113, 114], "A'": [109, 111], "V'": [73, 75], "Q": [105, 107], "K'": [76, 77], "R": [108, 109], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [61, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has dagger. Paul has plane. Kimberly has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < Kevin has goggles. Patricia has calculator. James has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [11, 12], "Q": [48, 49], "K'": [13, 14], "R": [50, 51], "K": [[8, 19], [10, 20]], "V": [[5, 15], [7, 18]], "example": [1, 57]}, {"END": [118, 119], "A'": [114, 116], "V'": [69, 72], "Q": [109, 112], "K'": [73, 75], "R": [113, 114], "K": [[64, 78], [68, 81]], "V": [[62, 76], [63, 77]], "example": [58, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen has dagger. Paul has plane. Kimberly has gun. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < Kevin has goggles. Patricia has calculator. James has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [11, 12], "Q": [48, 49], "K'": [13, 14], "R": [50, 51], "K": [[8, 19], [10, 20]], "V": [[5, 15], [7, 18]], "example": [1, 57]}, {"END": [118, 119], "A'": [114, 116], "V'": [69, 72], "Q": [109, 112], "K'": [73, 75], "R": [113, 114], "K": [[64, 78], [68, 81]], "V": [[62, 76], [63, 77]], "example": [58, 120]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara has oven. Sharon has pot. Christopher has broom. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: Yes\n Premise: < Donald has computer. Laura has guitar. Karen has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not the boy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [15, 16], "Q": [47, 49], "K'": [17, 19], "R": [50, 51], "K": [[7, 13], [9, 14]], "V": [[5, 10], [6, 12]], "example": [1, 57]}, {"END": [110, 111], "A'": [106, 108], "V'": [62, 63], "Q": [103, 104], "K'": [64, 65], "R": [105, 106], "K": [[68, 73], [69, 75]], "V": [[66, 70], [67, 72]], "example": [58, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara has oven. Sharon has pot. Christopher has broom. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: Yes\n Premise: < Donald has computer. Laura has guitar. Karen has violin. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not the girl? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [15, 16], "Q": [47, 49], "K'": [17, 19], "R": [50, 51], "K": [[7, 13], [9, 14]], "V": [[5, 10], [6, 12]], "example": [1, 57]}, {"END": [110, 111], "A'": [106, 108], "V'": [62, 63], "Q": [103, 104], "K'": [64, 65], "R": [105, 106], "K": [[68, 73], [69, 75]], "V": [[66, 70], [67, 72]], "example": [58, 112]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert has pencil. Lisa has gun. Margaret has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < Maria has chalk. Thomas has mop. George has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the girl? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 6], "Q": [47, 48], "K'": [7, 10], "R": [49, 50], "K": [[13, 17], [14, 19]], "V": [[11, 15], [12, 16]], "example": [1, 56]}, {"END": [113, 114], "A'": [109, 111], "V'": [61, 62], "Q": [105, 107], "K'": [63, 65], "R": [108, 109], "K": [[68, 73], [70, 77]], "V": [[66, 71], [67, 72]], "example": [57, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Robert has pencil. Lisa has gun. Margaret has dagger. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < Maria has chalk. Thomas has mop. George has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the boy? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 6], "Q": [47, 48], "K'": [7, 10], "R": [49, 50], "K": [[13, 17], [14, 19]], "V": [[11, 15], [12, 16]], "example": [1, 56]}, {"END": [113, 114], "A'": [109, 111], "V'": [61, 62], "Q": [105, 107], "K'": [63, 65], "R": [108, 109], "K": [[68, 73], [70, 77]], "V": [[66, 71], [67, 72]], "example": [57, 115]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has plane. Kenneth has guitar. Nancy has glider. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < Richard has swim fins. Michael has swimsuit. Barbara has calculator. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [9, 10], "Q": [45, 46], "K'": [11, 12], "R": [47, 48], "K": [[7, 15], [8, 17]], "V": [[5, 13], [6, 14]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [71, 72], "Q": [103, 106], "K'": [73, 75], "R": [107, 108], "K": [[61, 67], [64, 70]], "V": [[59, 65], [60, 66]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sarah has plane. Kenneth has guitar. Nancy has glider. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < Richard has swim fins. Michael has swimsuit. Barbara has calculator. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [9, 10], "Q": [45, 46], "K'": [11, 12], "R": [47, 48], "K": [[7, 15], [8, 17]], "V": [[5, 13], [6, 14]], "example": [1, 54]}, {"END": [112, 113], "A'": [108, 110], "V'": [71, 72], "Q": [103, 106], "K'": [73, 75], "R": [107, 108], "K": [[61, 67], [64, 70]], "V": [[59, 65], [60, 66]], "example": [55, 114]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Linda has plane. Brian has horse. Jennifer has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < Sandra has broom. Paul has pan. Ruth has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the boy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [10, 11], "Q": [48, 49], "K'": [12, 13], "R": [50, 51], "K": [[8, 17], [9, 20]], "V": [[5, 14], [7, 16]], "example": [1, 57]}, {"END": [114, 115], "A'": [110, 112], "V'": [68, 69], "Q": [106, 108], "K'": [70, 71], "R": [109, 110], "K": [[65, 74], [67, 78]], "V": [[62, 72], [64, 73]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Linda has plane. Brian has horse. Jennifer has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < Sandra has broom. Paul has pan. Ruth has vacuum cleaner. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the girl? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [10, 11], "Q": [48, 49], "K'": [12, 13], "R": [50, 51], "K": [[8, 17], [9, 20]], "V": [[5, 14], [7, 16]], "example": [1, 57]}, {"END": [114, 115], "A'": [110, 112], "V'": [68, 69], "Q": [106, 108], "K'": [70, 71], "R": [109, 110], "K": [[65, 74], [67, 78]], "V": [[62, 72], [64, 73]], "example": [58, 116]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The swimsuit is Sandra's. The goggles is Dorothy's. The pencil is Brian's. >. The one who owns a thing used for swiming is not the boy\n < The pan is Edward's. The oven is Kevin's. The car is Nancy's. >. The one who owns a thing used for cooking is not the girl\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [28, 29], "Q": [43, 46], "K'": [24, 27], "R": [47, 48], "K": [[3, 13], [6, 17]], "V": [[7, 18], [9, 20]], "example": [1, 50]}, {"END": [89, 90], "A'": [90, 91], "V'": [70, 71], "Q": [85, 87], "K'": [68, 69], "R": [88, 89], "K": [[53, 60], [54, 62]], "V": [[55, 63], [56, 64]], "example": [51, 91]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The truck is David's. The pen is Kimberly's. The car is Kenneth's. >. The one who owns a thing used for driving is not the girl\n < The vacuum cleaner is Dorothy's. The mop is Nancy's. The jeep is David's. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [13, 16], "Q": [37, 38], "K'": [11, 12], "R": [39, 40], "K": [[3, 20], [5, 21]], "V": [[6, 22], [7, 23]], "example": [1, 42]}, {"END": [86, 87], "A'": [87, 88], "V'": [67, 68], "Q": [82, 84], "K'": [64, 66], "R": [85, 86], "K": [[45, 56], [49, 58]], "V": [[50, 59], [52, 60]], "example": [43, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mop is Jason's. The pen is Patricia's. The chalk is Elizabeth's. >. The one who owns a thing used for writing is not the boy\n < The abacus is Robert's. The piano is Karen's. The violin is Donna's. >. The one who owns a thing used for playing is not the boy\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [6, 7], "Q": [38, 39], "K'": [3, 5], "R": [40, 41], "K": [[11, 20], [12, 22]], "V": [[13, 23], [16, 24]], "example": [1, 43]}, {"END": [85, 86], "A'": [86, 87], "V'": [50, 51], "Q": [82, 83], "K'": [46, 49], "R": [84, 85], "K": [[55, 63], [56, 65]], "V": [[57, 66], [59, 68]], "example": [44, 87]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The swimsuit is Edward's. The goggles is Steven's. The brush is Sharon's. >. The one who owns a thing used for swiming is not the girl\n < The goggles is Thomas's. The vacuum cleaner is Kimberly's. The broom is Carol's. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [25, 27], "Q": [41, 44], "K'": [22, 24], "R": [45, 46], "K": [[3, 12], [6, 16]], "V": [[7, 17], [8, 18]], "example": [1, 48]}, {"END": [95, 96], "A'": [96, 97], "V'": [56, 57], "Q": [91, 93], "K'": [51, 55], "R": [94, 95], "K": [[61, 73], [65, 75]], "V": [[66, 76], [69, 77]], "example": [49, 97]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The goggles is Kevin's. The calculator is Patricia's. The swim fins is James's. >. The one who owns a thing used for swiming is not the girl\n < The swimsuit is Margaret's. The bicycle is Mark's. The swim fins is Deborah's. >. The one who owns a thing used for swiming is not the boy\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [16, 19], "Q": [42, 45], "K'": [13, 15], "R": [46, 47], "K": [[3, 23], [7, 26]], "V": [[8, 27], [9, 28]], "example": [1, 49]}, {"END": [96, 97], "A'": [97, 98], "V'": [65, 66], "Q": [91, 94], "K'": [61, 64], "R": [95, 96], "K": [[52, 70], [55, 73]], "V": [[56, 74], [57, 77]], "example": [50, 98]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jeep is Jeff's. The gun is Betty's. The dagger is Deborah's. >. The one who owns a thing used for killing is not the boy\n < The plane is Donald's. The mop is Laura's. The vacuum cleaner is Karen's. >. The one who owns a thing used for cleaning is not the boy\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [6, 7], "Q": [38, 39], "K'": [3, 5], "R": [40, 41], "K": [[11, 18], [12, 20]], "V": [[13, 21], [14, 24]], "example": [1, 43]}, {"END": [86, 87], "A'": [87, 88], "V'": [48, 49], "Q": [82, 84], "K'": [46, 47], "R": [85, 86], "K": [[53, 61], [55, 65]], "V": [[56, 66], [57, 68]], "example": [44, 88]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jeep is Helen's. The car is Elizabeth's. The knife is Christopher's. >. The one who owns a thing used for driving is not the boy\n < The pot is Maria's. The car is Ronald's. The jeep is Mark's. >. The one who owns a thing used for driving is not the girl\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [21, 22], "Q": [36, 37], "K'": [18, 20], "R": [38, 39], "K": [[3, 11], [5, 12]], "V": [[6, 13], [7, 14]], "example": [1, 41]}, {"END": [80, 81], "A'": [81, 82], "V'": [46, 47], "Q": [77, 78], "K'": [44, 45], "R": [79, 80], "K": [[51, 59], [52, 61]], "V": [[53, 62], [55, 63]], "example": [42, 82]}]}
{"task_id": "rlr_gen[dict_candidates=True][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The truck is Karen's. The jeep is Sharon's. The palette is David's. >. The one who owns a thing used for driving is not the boy\n < The glider is Daniel's. The plane is Christopher's. The calculator is Sarah's. >. The one who owns a thing used for flying is not the girl\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [24, 25], "Q": [39, 40], "K'": [21, 23], "R": [41, 42], "K": [[3, 12], [5, 14]], "V": [[6, 15], [8, 17]], "example": [1, 44]}, {"END": [83, 84], "A'": [84, 85], "V'": [65, 66], "Q": [80, 81], "K'": [62, 64], "R": [82, 83], "K": [[47, 55], [49, 56]], "V": [[50, 57], [51, 58]], "example": [45, 85]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The swimsuit is Sandra's. The goggles is Dorothy's. The pencil is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: No\n Premise: < The plane is Edward's. The helicopter is Kevin's. The truck is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [31, 32], "Q": [62, 65], "K'": [27, 30], "R": [66, 67], "K": [[6, 16], [9, 20]], "V": [[10, 21], [12, 23]], "example": [1, 73]}, {"END": [136, 137], "A'": [132, 134], "V'": [98, 99], "Q": [129, 130], "K'": [95, 97], "R": [131, 132], "K": [[79, 86], [80, 89]], "V": [[81, 90], [82, 91]], "example": [74, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The swimsuit is Sandra's. The goggles is Dorothy's. The pencil is Brian's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: No\n Premise: < The plane is Edward's. The helicopter is Kevin's. The truck is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the boy? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [31, 32], "Q": [62, 65], "K'": [27, 30], "R": [66, 67], "K": [[6, 16], [9, 20]], "V": [[10, 21], [12, 23]], "example": [1, 73]}, {"END": [136, 137], "A'": [132, 134], "V'": [98, 99], "Q": [129, 130], "K'": [95, 97], "R": [131, 132], "K": [[79, 86], [80, 89]], "V": [[81, 90], [82, 91]], "example": [74, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The car is Mark's. The bicycle is Lisa's. The truck is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not the boy? Answer: No\n Premise: < The violin is Donna's. The swimsuit is William's. The goggles is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [17, 18], "Q": [56, 57], "K'": [13, 16], "R": [58, 59], "K": [[6, 22], [7, 24]], "V": [[8, 25], [9, 26]], "example": [1, 65]}, {"END": [134, 135], "A'": [130, 132], "V'": [74, 76], "Q": [125, 128], "K'": [71, 73], "R": [129, 130], "K": [[80, 89], [83, 93]], "V": [[84, 94], [85, 95]], "example": [66, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The car is Mark's. The bicycle is Lisa's. The truck is Anthony's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for driving is not the boy? Answer: No\n Premise: < The violin is Donna's. The swimsuit is William's. The goggles is Kevin's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [17, 18], "Q": [56, 57], "K'": [13, 16], "R": [58, 59], "K": [[6, 22], [7, 24]], "V": [[8, 25], [9, 26]], "example": [1, 65]}, {"END": [134, 135], "A'": [130, 132], "V'": [74, 76], "Q": [125, 128], "K'": [71, 73], "R": [129, 130], "K": [[80, 89], [83, 93]], "V": [[84, 94], [85, 95]], "example": [66, 136]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vacuum cleaner is Deborah's. The radio is David's. The telegraph is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not the boy? Answer: No\n Premise: < The pan is William's. The pot is Kevin's. The car is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the girl? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [11, 14], "Q": [59, 61], "K'": [6, 10], "R": [62, 63], "K": [[18, 25], [19, 27]], "V": [[20, 28], [21, 29]], "example": [1, 69]}, {"END": [131, 132], "A'": [127, 129], "V'": [91, 93], "Q": [123, 125], "K'": [89, 90], "R": [126, 127], "K": [[75, 82], [76, 83]], "V": [[77, 84], [78, 85]], "example": [70, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The vacuum cleaner is Deborah's. The radio is David's. The telegraph is Jeff's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for communicating is not the boy? Answer: No\n Premise: < The pan is William's. The pot is Kevin's. The car is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [63, 65], "V'": [11, 14], "Q": [59, 61], "K'": [6, 10], "R": [62, 63], "K": [[18, 25], [19, 27]], "V": [[20, 28], [21, 29]], "example": [1, 69]}, {"END": [131, 132], "A'": [127, 129], "V'": [91, 93], "Q": [123, 125], "K'": [89, 90], "R": [126, 127], "K": [[75, 82], [76, 83]], "V": [[77, 84], [78, 85]], "example": [70, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dagger is Karen's. The plane is Paul's. The gun is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < The goggles is Kevin's. The calculator is Patricia's. The swim fins is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [17, 18], "Q": [57, 58], "K'": [15, 16], "R": [59, 60], "K": [[6, 22], [8, 23]], "V": [[9, 24], [11, 27]], "example": [1, 66]}, {"END": [136, 137], "A'": [132, 134], "V'": [85, 88], "Q": [127, 130], "K'": [82, 84], "R": [131, 132], "K": [[72, 92], [76, 95]], "V": [[77, 96], [78, 97]], "example": [67, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dagger is Karen's. The plane is Paul's. The gun is Kimberly's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < The goggles is Kevin's. The calculator is Patricia's. The swim fins is James's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [17, 18], "Q": [57, 58], "K'": [15, 16], "R": [59, 60], "K": [[6, 22], [8, 23]], "V": [[9, 24], [11, 27]], "example": [1, 66]}, {"END": [136, 137], "A'": [132, 134], "V'": [85, 88], "Q": [127, 130], "K'": [82, 84], "R": [131, 132], "K": [[72, 92], [76, 95]], "V": [[77, 96], [78, 97]], "example": [67, 138]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The oven is Barbara's. The pot is Sharon's. The broom is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: Yes\n Premise: < The computer is Donald's. The guitar is Laura's. The violin is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not the boy? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [25, 26], "Q": [56, 58], "K'": [22, 24], "R": [59, 60], "K": [[6, 14], [8, 15]], "V": [[9, 16], [10, 18]], "example": [1, 66]}, {"END": [128, 129], "A'": [124, 126], "V'": [74, 75], "Q": [121, 122], "K'": [72, 73], "R": [123, 124], "K": [[79, 86], [80, 88]], "V": [[81, 89], [82, 91]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The oven is Barbara's. The pot is Sharon's. The broom is Christopher's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cooking is not the boy? Answer: Yes\n Premise: < The computer is Donald's. The guitar is Laura's. The violin is Karen's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for playing is not the girl? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [25, 26], "Q": [56, 58], "K'": [22, 24], "R": [59, 60], "K": [[6, 14], [8, 15]], "V": [[9, 16], [10, 18]], "example": [1, 66]}, {"END": [128, 129], "A'": [124, 126], "V'": [74, 75], "Q": [121, 122], "K'": [72, 73], "R": [123, 124], "K": [[79, 86], [80, 88]], "V": [[81, 89], [82, 91]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pencil is Robert's. The gun is Lisa's. The dagger is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < The chalk is Maria's. The mop is Thomas's. The vacuum cleaner is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the girl? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [10, 11], "Q": [56, 57], "K'": [6, 9], "R": [58, 59], "K": [[15, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 65]}, {"END": [131, 132], "A'": [127, 129], "V'": [74, 75], "Q": [123, 125], "K'": [71, 73], "R": [126, 127], "K": [[79, 87], [81, 91]], "V": [[82, 92], [83, 93]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pencil is Robert's. The gun is Lisa's. The dagger is Margaret's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for killing is not the boy? Answer: Yes\n Premise: < The chalk is Maria's. The mop is Thomas's. The vacuum cleaner is George's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the boy? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [10, 11], "Q": [56, 57], "K'": [6, 9], "R": [58, 59], "K": [[15, 22], [16, 24]], "V": [[17, 25], [18, 26]], "example": [1, 65]}, {"END": [131, 132], "A'": [127, 129], "V'": [74, 75], "Q": [123, 125], "K'": [71, 73], "R": [126, 127], "K": [[79, 87], [81, 91]], "V": [[82, 92], [83, 93]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Sarah's. The guitar is Kenneth's. The glider is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < The swim fins is Richard's. The swimsuit is Michael's. The calculator is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the girl? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [15, 16], "Q": [54, 55], "K'": [13, 14], "R": [56, 57], "K": [[6, 20], [7, 22]], "V": [[8, 23], [9, 24]], "example": [1, 63]}, {"END": [130, 131], "A'": [126, 128], "V'": [90, 91], "Q": [121, 124], "K'": [87, 89], "R": [125, 126], "K": [[69, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [64, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Sarah's. The guitar is Kenneth's. The glider is Nancy's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < The swim fins is Richard's. The swimsuit is Michael's. The calculator is Barbara's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for swiming is not the boy? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [15, 16], "Q": [54, 55], "K'": [13, 14], "R": [56, 57], "K": [[6, 20], [7, 22]], "V": [[8, 23], [9, 24]], "example": [1, 63]}, {"END": [130, 131], "A'": [126, 128], "V'": [90, 91], "Q": [121, 124], "K'": [87, 89], "R": [125, 126], "K": [[69, 78], [72, 81]], "V": [[73, 82], [74, 83]], "example": [64, 132]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Linda's. The horse is Brian's. The helicopter is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < The broom is Sandra's. The pan is Paul's. The vacuum cleaner is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the boy? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [16, 17], "Q": [57, 58], "K'": [14, 15], "R": [59, 60], "K": [[6, 21], [7, 24]], "V": [[8, 25], [10, 27]], "example": [1, 66]}, {"END": [132, 133], "A'": [128, 130], "V'": [83, 84], "Q": [124, 126], "K'": [81, 82], "R": [127, 128], "K": [[72, 88], [74, 92]], "V": [[75, 93], [77, 94]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen[dict_candidates=True]][capabilities_of_things.TreeSet.neg_child,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plane is Linda's. The horse is Brian's. The helicopter is Jennifer's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for flying is not the girl? Answer: No\n Premise: < The broom is Sandra's. The pan is Paul's. The vacuum cleaner is Ruth's. >. Answer with Yes or No. Can it be inferred from the premise that the one who owns a thing used for cleaning is not the girl? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [16, 17], "Q": [57, 58], "K'": [14, 15], "R": [59, 60], "K": [[6, 21], [7, 24]], "V": [[8, 25], [10, 27]], "example": [1, 66]}, {"END": [132, 133], "A'": [128, 130], "V'": [83, 84], "Q": [124, 126], "K'": [81, 82], "R": [127, 128], "K": [[72, 88], [74, 92]], "V": [[75, 93], [77, 94]], "example": [67, 134]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Norman Foster likes Seoul. Zaha Hadid likes Novosibirsk. LeBron James likes Saint Petersburg. >. So the athlete wants to go to Saint Petersburg\n < Dr. Michio Kaku likes Madrid. Richard Dawkins likes Vancouver. Usain Bolt likes Incheon. >. So the athlete wants to go to Incheon\n", "ranges": [{"END": [40, 41], "A": [41, 43], "V": [28, 30], "Q": [34, 37], "K": [22, 26], "R": null, "K'": [[2, 10], [5, 14]], "V'": [[7, 16], [9, 21]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 86], "V": [69, 72], "Q": [76, 79], "K": [63, 67], "R": null, "K'": [[45, 55], [51, 58]], "V'": [[53, 60], [54, 62]], "example": [44, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Adele likes London. George Orwell likes Florence. Usain Bolt likes Bangalore. >. So the musician wants to go to London\n < LeBron James likes Osaka. Hillary Clinton likes Rio de Janeiro. Mies van der Rohe likes Moscow. >. So the lawyer wants to go to Rio de Janeiro\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [7, 8], "Q": [29, 32], "K": [2, 5], "R": null, "K'": [[9, 16], [12, 20]], "V'": [[14, 22], [15, 25]], "example": [1, 37]}, {"END": [76, 77], "A": [77, 80], "V": [54, 57], "Q": [71, 73], "K": [48, 52], "R": null, "K'": [[39, 58], [43, 64]], "V'": [[45, 66], [47, 67]], "example": [38, 80]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< J.R.R. Tolkien likes Toronto. Oprah Winfrey likes Florence. Vincent van Gogh likes Seoul. >. So the entrepreneur wants to go to Florence\n < Mark Twain likes Lyon. Beyonc\u00e9 likes Busan. Johnnie Cochran likes Bangkok. >. So the lawyer wants to go to Bangkok\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [22, 23], "Q": [37, 41], "K": [15, 20], "R": null, "K'": [[2, 24], [11, 29]], "V'": [[13, 31], [14, 33]], "example": [1, 46]}, {"END": [82, 83], "A": [83, 86], "V": [70, 73], "Q": [77, 79], "K": [63, 68], "R": null, "K'": [[48, 55], [51, 58]], "V'": [[53, 60], [54, 62]], "example": [47, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Usain Bolt likes Berlin. Ruth Bader Ginsburg likes Washington, D.C. J.K. Rowling likes Sydney. >. So the athlete wants to go to Berlin\n < Dr. Michio Kaku likes Kyoto. Salvador Dal\u00ed likes Birmingham. Stephen King likes Tokyo. >. So the artist wants to go to Birmingham\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [8, 9], "Q": [37, 40], "K": [2, 6], "R": null, "K'": [[10, 24], [16, 30]], "V'": [[18, 32], [23, 33]], "example": [1, 45]}, {"END": [80, 81], "A": [81, 83], "V": [63, 65], "Q": [75, 77], "K": [58, 61], "R": null, "K'": [[47, 66], [53, 68]], "V'": [[55, 70], [57, 71]], "example": [46, 83]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Vincent van Gogh likes Sao Paulo. Maya Lin likes Busan. Mies van der Rohe likes Saint Petersburg. >. So the artist wants to go to Sao Paulo\n < Steve Jobs likes Zurich. Lionel Messi likes Moscow. Albert Einstein likes Los Angeles. >. So the athlete wants to go to Moscow\n", "ranges": [{"END": [40, 41], "A": [41, 44], "V": [9, 12], "Q": [35, 37], "K": [2, 7], "R": null, "K'": [[13, 21], [16, 27]], "V'": [[18, 29], [20, 31]], "example": [1, 44]}, {"END": [79, 80], "A": [80, 81], "V": [60, 61], "Q": [73, 76], "K": [54, 58], "R": null, "K'": [[46, 62], [49, 65]], "V'": [[51, 67], [53, 69]], "example": [45, 81]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Dr. Temple Grandin likes Venice. Leonardo DiCaprio likes Lyon. Justin Bieber likes Shanghai. >. So the musician wants to go to Shanghai\n < Johnny Depp likes Sao Paulo. Dr. Gabor Mat\u00e9 likes New York. Roger Federer likes Pattaya. >. So the athlete wants to go to Pattaya\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [27, 29], "Q": [33, 36], "K": [21, 25], "R": null, "K'": [[2, 12], [7, 17]], "V'": [[9, 19], [11, 20]], "example": [1, 42]}, {"END": [82, 83], "A": [83, 86], "V": [69, 72], "Q": [76, 79], "K": [64, 67], "R": null, "K'": [[44, 53], [47, 59]], "V'": [[49, 61], [52, 63]], "example": [43, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Jane Austen likes Osaka. Steve Jobs likes Canberra. Dr. Neil deGrasse Tyson likes Milan. >. So the entrepreneur wants to go to Canberra\n < Meryl Streep likes Guangzhou. Pablo Picasso likes Kyoto. Roger Federer likes Geneva. >. So the actor wants to go to Guangzhou\n", "ranges": [{"END": [42, 43], "A": [43, 46], "V": [15, 18], "Q": [35, 39], "K": [10, 13], "R": null, "K'": [[2, 19], [5, 28]], "V'": [[7, 30], [9, 31]], "example": [1, 46]}, {"END": [85, 86], "A": [86, 90], "V": [56, 60], "Q": [80, 82], "K": [48, 54], "R": null, "K'": [[61, 69], [64, 72]], "V'": [[66, 74], [68, 76]], "example": [47, 90]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Eminem likes Hamburg. Dr. Anthony Fauci likes Seoul. Johnnie Cochran likes London. >. So the musician wants to go to Hamburg\n < Dr. Anthony Fauci likes Berlin. Salvador Dal\u00ed likes London. Frida Kahlo likes Canberra. >. So the doctor wants to go to Berlin\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [7, 8], "Q": [32, 35], "K": [2, 5], "R": null, "K'": [[9, 20], [15, 25]], "V'": [[17, 27], [19, 28]], "example": [1, 40]}, {"END": [78, 79], "A": [79, 80], "V": [50, 51], "Q": [73, 75], "K": [42, 48], "R": null, "K'": [[52, 59], [55, 64]], "V'": [[57, 66], [58, 69]], "example": [41, 80]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster likes Seoul. Zaha Hadid likes Novosibirsk. LeBron James likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Seoul? Answer: No\n Premise: < Sonia Sotomayor likes Madrid. Dr. Michio Kaku likes Vancouver. Jane Goodall likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [31, 33], "Q": [52, 55], "K": [25, 29], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 24]], "example": [1, 65]}, {"END": [131, 132], "A": [126, 129], "V": [97, 100], "Q": [119, 122], "K": [92, 95], "R": null, "K'": [[70, 81], [77, 87]], "V'": [[79, 89], [80, 91]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster likes Seoul. Zaha Hadid likes Novosibirsk. LeBron James likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Seoul? Answer: No\n Premise: < Sonia Sotomayor likes Madrid. Dr. Michio Kaku likes Vancouver. Jane Goodall likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [31, 33], "Q": [52, 55], "K": [25, 29], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 24]], "example": [1, 65]}, {"END": [130, 131], "A": [126, 128], "V": [97, 100], "Q": [119, 122], "K": [92, 95], "R": null, "K'": [[70, 81], [77, 87]], "V'": [[79, 89], [80, 91]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps likes Guangzhou. Drake likes Sao Paulo. Ernest Hemingway likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Birmingham? Answer: No\n Premise: < Frida Kahlo likes Kyoto. Johnny Depp likes Manchester. Julia Roberts likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [11, 15], "Q": [51, 54], "K": [5, 9], "R": null, "K'": [[16, 24], [18, 28]], "V'": [[20, 30], [23, 32]], "example": [1, 64]}, {"END": [120, 121], "A": [116, 118], "V": [76, 78], "Q": [110, 112], "K": [69, 74], "R": null, "K'": [[79, 86], [82, 88]], "V'": [[84, 90], [85, 91]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps likes Guangzhou. Drake likes Sao Paulo. Ernest Hemingway likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Birmingham? Answer: No\n Premise: < Frida Kahlo likes Kyoto. Johnny Depp likes Manchester. Julia Roberts likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Manchester? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [11, 15], "Q": [51, 54], "K": [5, 9], "R": null, "K'": [[16, 24], [18, 28]], "V'": [[20, 30], [23, 32]], "example": [1, 64]}, {"END": [119, 120], "A": [116, 117], "V": [76, 78], "Q": [110, 112], "K": [69, 74], "R": null, "K'": [[79, 86], [82, 88]], "V'": [[84, 90], [85, 91]], "example": [65, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh likes Brisbane. Marie Curie likes Chiang Mai. Alex Morgan likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Brisbane? Answer: No\n Premise: < Johnny Depp likes Pattaya. Jane Austen likes Toronto. Neil deGrasse Tyson likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [30, 31], "Q": [50, 53], "K": [26, 28], "R": null, "K'": [[5, 17], [10, 20]], "V'": [[12, 22], [16, 25]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [84, 85], "Q": [115, 117], "K": [79, 82], "R": null, "K'": [[70, 86], [73, 93]], "V'": [[75, 95], [78, 96]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh likes Brisbane. Marie Curie likes Chiang Mai. Alex Morgan likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Brisbane? Answer: No\n Premise: < Johnny Depp likes Pattaya. Jane Austen likes Toronto. Neil deGrasse Tyson likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [30, 31], "Q": [50, 53], "K": [26, 28], "R": null, "K'": [[5, 17], [10, 20]], "V'": [[12, 22], [16, 25]], "example": [1, 65]}, {"END": [126, 127], "A": [121, 124], "V": [84, 85], "Q": [115, 117], "K": [79, 82], "R": null, "K'": [[70, 86], [73, 93]], "V'": [[75, 95], [78, 96]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber likes Manchester. Steve Jobs likes Novosibirsk. Roger Federer likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Novosibirsk? Answer: Yes\n Premise: < Dr. Temple Grandin likes Bras\u00edlia. Mark Twain likes Busan. Sergey Brin likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [18, 23], "Q": [53, 57], "K": [13, 16], "R": null, "K'": [[5, 24], [9, 27]], "V'": [[11, 29], [12, 34]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [99, 101], "Q": [120, 124], "K": [93, 97], "R": null, "K'": [[75, 85], [80, 88]], "V'": [[82, 90], [84, 92]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber likes Manchester. Steve Jobs likes Novosibirsk. Roger Federer likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Novosibirsk? Answer: Yes\n Premise: < Dr. Temple Grandin likes Bras\u00edlia. Mark Twain likes Busan. Sergey Brin likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Busan? Answer: No\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [18, 23], "Q": [53, 57], "K": [13, 16], "R": null, "K'": [[5, 24], [9, 27]], "V'": [[11, 29], [12, 34]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [99, 101], "Q": [120, 124], "K": [93, 97], "R": null, "K'": [[75, 85], [80, 88]], "V'": [[82, 90], [84, 92]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe likes Bangkok. Drake likes Washington, D.C. Dr. Michio Kaku likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to Florence? Answer: No\n Premise: < Jane Austen likes Kyoto. Meryl Streep likes Canberra. Maya Lin likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Canberra? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [13, 16], "Q": [55, 57], "K": [5, 11], "R": null, "K'": [[17, 27], [19, 33]], "V'": [[21, 35], [26, 36]], "example": [1, 66]}, {"END": [128, 129], "A": [123, 126], "V": [87, 90], "Q": [117, 119], "K": [79, 85], "R": null, "K'": [[71, 91], [74, 94]], "V'": [[76, 96], [78, 98]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe likes Bangkok. Drake likes Washington, D.C. Dr. Michio Kaku likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to Florence? Answer: No\n Premise: < Jane Austen likes Kyoto. Meryl Streep likes Canberra. Maya Lin likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Kyoto? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [13, 16], "Q": [55, 57], "K": [5, 11], "R": null, "K'": [[17, 27], [19, 33]], "V'": [[21, 35], [26, 36]], "example": [1, 66]}, {"END": [127, 128], "A": [123, 125], "V": [87, 90], "Q": [117, 119], "K": [79, 85], "R": null, "K'": [[71, 91], [74, 94]], "V'": [[76, 96], [78, 98]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Barcelona. Sergey Brin likes Bras\u00edlia. Salvador Dal\u00ed likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Berlin? Answer: Yes\n Premise: < Gloria Allred likes Moscow. Barack Obama likes Chiang Mai. J.K. Rowling likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Beijing? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [26, 27], "Q": [46, 48], "K": [21, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[10, 18], [11, 20]], "example": [1, 57]}, {"END": [121, 122], "A": [116, 119], "V": [88, 91], "Q": [110, 112], "K": [80, 86], "R": null, "K'": [[62, 70], [66, 74]], "V'": [[68, 76], [69, 79]], "example": [58, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Barcelona. Sergey Brin likes Bras\u00edlia. Salvador Dal\u00ed likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Berlin? Answer: Yes\n Premise: < Gloria Allred likes Moscow. Barack Obama likes Chiang Mai. J.K. Rowling likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [26, 27], "Q": [46, 48], "K": [21, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[10, 18], [11, 20]], "example": [1, 57]}, {"END": [121, 122], "A": [116, 119], "V": [88, 91], "Q": [110, 112], "K": [80, 86], "R": null, "K'": [[62, 70], [66, 74]], "V'": [[68, 76], [69, 79]], "example": [58, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Jane Goodall likes Valencia. Michael Phelps likes London. Sergey Brin likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Ottawa? Answer: No\n Premise: < Dr. Anthony Fauci likes Berlin. Salvador Dal\u00ed likes London. Frida Kahlo likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Berlin? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 14], "Q": [50, 52], "K": [5, 10], "R": null, "K'": [[15, 23], [19, 27]], "V'": [[21, 29], [22, 31]], "example": [1, 62]}, {"END": [122, 123], "A": [119, 120], "V": [75, 76], "Q": [113, 115], "K": [67, 73], "R": null, "K'": [[77, 84], [80, 89]], "V'": [[82, 91], [83, 94]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Jane Goodall likes Valencia. Michael Phelps likes London. Sergey Brin likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Ottawa? Answer: No\n Premise: < Dr. Anthony Fauci likes Berlin. Salvador Dal\u00ed likes London. Frida Kahlo likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to London? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 14], "Q": [50, 52], "K": [5, 10], "R": null, "K'": [[15, 23], [19, 27]], "V'": [[21, 29], [22, 31]], "example": [1, 62]}, {"END": [122, 123], "A": [119, 120], "V": [75, 76], "Q": [113, 115], "K": [67, 73], "R": null, "K'": [[77, 84], [80, 89]], "V'": [[82, 91], [83, 94]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Drake likes Munich. Barack Obama likes Los Angeles. Roger Federer likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Kyoto? Answer: Yes\n Premise: < Mark Twain likes Saint Petersburg. Leonardo DiCaprio likes Incheon. Ed Sheeran likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [26, 28], "Q": [47, 50], "K": [21, 24], "R": null, "K'": [[5, 12], [7, 16]], "V'": [[9, 18], [11, 20]], "example": [1, 60]}, {"END": [120, 121], "A": [117, 118], "V": [90, 91], "Q": [110, 113], "K": [84, 88], "R": null, "K'": [[65, 73], [68, 78]], "V'": [[70, 80], [72, 83]], "example": [61, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Drake likes Munich. Barack Obama likes Los Angeles. Roger Federer likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Kyoto? Answer: Yes\n Premise: < Mark Twain likes Saint Petersburg. Leonardo DiCaprio likes Incheon. Ed Sheeran likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [26, 28], "Q": [47, 50], "K": [21, 24], "R": null, "K'": [[5, 12], [7, 16]], "V'": [[9, 18], [11, 20]], "example": [1, 60]}, {"END": [121, 122], "A": [117, 119], "V": [90, 91], "Q": [110, 113], "K": [84, 88], "R": null, "K'": [[65, 73], [68, 78]], "V'": [[70, 80], [72, 83]], "example": [61, 123]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Seoul attracts Norman Foster. Novosibirsk attracts Zaha Hadid. Saint Petersburg attracts LeBron James. >. So the athlete wants to go to Saint Petersburg\n < Madrid attracts Dr. Michio Kaku. Vancouver attracts Richard Dawkins. Incheon attracts Usain Bolt. >. So the athlete wants to go to Incheon\n", "ranges": [{"END": [40, 41], "A": [41, 43], "V": [22, 24], "Q": [34, 37], "K": [26, 30], "R": null, "K'": [[6, 17], [9, 21]], "V'": [[2, 10], [4, 15]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 86], "V": [63, 66], "Q": [76, 79], "K": [68, 72], "R": null, "K'": [[48, 59], [54, 62]], "V'": [[45, 55], [46, 57]], "example": [44, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< London attracts Adele. Florence attracts George Orwell. Bangalore attracts Usain Bolt. >. So the musician wants to go to London\n < Osaka attracts LeBron James. Rio de Janeiro attracts Hillary Clinton. Moscow attracts Mies van der Rohe. >. So the lawyer wants to go to Rio de Janeiro\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [2, 3], "Q": [29, 32], "K": [5, 8], "R": null, "K'": [[12, 21], [15, 25]], "V'": [[9, 16], [10, 19]], "example": [1, 37]}, {"END": [76, 77], "A": [77, 80], "V": [48, 51], "Q": [71, 73], "K": [53, 57], "R": null, "K'": [[43, 61], [47, 67]], "V'": [[39, 58], [41, 59]], "example": [38, 80]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Toronto attracts J.R.R. Tolkien. Florence attracts Oprah Winfrey. Seoul attracts Vincent van Gogh. >. So the entrepreneur wants to go to Florence\n < Lyon attracts Mark Twain. Busan attracts Beyonc\u00e9. Bangkok attracts Johnnie Cochran. >. So the lawyer wants to go to Bangkok\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [15, 16], "Q": [37, 41], "K": [18, 23], "R": null, "K'": [[5, 28], [14, 33]], "V'": [[2, 24], [3, 26]], "example": [1, 46]}, {"END": [82, 83], "A": [83, 86], "V": [63, 66], "Q": [77, 79], "K": [68, 73], "R": null, "K'": [[51, 59], [54, 62]], "V'": [[48, 55], [49, 57]], "example": [47, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Berlin attracts Usain Bolt. Washington, D.C attracts Ruth Bader Ginsburg. Sydney attracts J.K. Rowling. >. So the athlete wants to go to Berlin\n < Kyoto attracts Dr. Michio Kaku. Birmingham attracts Salvador Dal\u00ed. Tokyo attracts Stephen King. >. So the artist wants to go to Birmingham\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [2, 3], "Q": [37, 40], "K": [5, 9], "R": null, "K'": [[17, 27], [23, 33]], "V'": [[10, 24], [15, 25]], "example": [1, 45]}, {"END": [80, 81], "A": [81, 83], "V": [58, 60], "Q": [75, 77], "K": [62, 65], "R": null, "K'": [[51, 69], [57, 71]], "V'": [[47, 66], [49, 67]], "example": [46, 83]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sao Paulo attracts Vincent van Gogh. Busan attracts Maya Lin. Saint Petersburg attracts Mies van der Rohe. >. So the artist wants to go to Sao Paulo\n < Zurich attracts Steve Jobs. Moscow attracts Lionel Messi. Los Angeles attracts Albert Einstein. >. So the athlete wants to go to Moscow\n", "ranges": [{"END": [40, 41], "A": [41, 44], "V": [2, 5], "Q": [35, 37], "K": [7, 12], "R": null, "K'": [[17, 25], [20, 31]], "V'": [[13, 21], [15, 23]], "example": [1, 44]}, {"END": [79, 80], "A": [80, 81], "V": [54, 55], "Q": [73, 76], "K": [57, 61], "R": null, "K'": [[50, 66], [53, 69]], "V'": [[46, 62], [48, 64]], "example": [45, 81]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Dr. Temple Grandin. Lyon attracts Leonardo DiCaprio. Shanghai attracts Justin Bieber. >. So the musician wants to go to Shanghai\n < Sao Paulo attracts Johnny Depp. New York attracts Dr. Gabor Mat\u00e9. Pattaya attracts Roger Federer. >. So the athlete wants to go to Pattaya\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [21, 23], "Q": [33, 36], "K": [25, 29], "R": null, "K'": [[6, 15], [11, 20]], "V'": [[2, 12], [4, 13]], "example": [1, 42]}, {"END": [82, 83], "A": [83, 86], "V": [64, 67], "Q": [76, 79], "K": [69, 72], "R": null, "K'": [[49, 57], [52, 63]], "V'": [[44, 53], [47, 55]], "example": [43, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Osaka attracts Jane Austen. Canberra attracts Steve Jobs. Milan attracts Dr. Neil deGrasse Tyson. >. So the entrepreneur wants to go to Canberra\n < Guangzhou attracts Meryl Streep. Kyoto attracts Pablo Picasso. Geneva attracts Roger Federer. >. So the actor wants to go to Guangzhou\n", "ranges": [{"END": [42, 43], "A": [43, 46], "V": [10, 13], "Q": [35, 39], "K": [15, 18], "R": null, "K'": [[6, 22], [9, 31]], "V'": [[2, 19], [4, 20]], "example": [1, 46]}, {"END": [85, 86], "A": [86, 90], "V": [48, 52], "Q": [80, 82], "K": [54, 60], "R": null, "K'": [[65, 73], [68, 76]], "V'": [[61, 69], [63, 71]], "example": [47, 90]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Hamburg attracts Eminem. Seoul attracts Dr. Anthony Fauci. London attracts Johnnie Cochran. >. So the musician wants to go to Hamburg\n < Berlin attracts Dr. Anthony Fauci. London attracts Salvador Dal\u00ed. Canberra attracts Frida Kahlo. >. So the doctor wants to go to Berlin\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [2, 3], "Q": [32, 35], "K": [5, 8], "R": null, "K'": [[13, 23], [19, 28]], "V'": [[9, 20], [11, 21]], "example": [1, 40]}, {"END": [78, 79], "A": [79, 80], "V": [42, 43], "Q": [73, 75], "K": [45, 51], "R": null, "K'": [[55, 64], [58, 69]], "V'": [[52, 59], [53, 62]], "example": [41, 80]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Norman Foster. Novosibirsk attracts Zaha Hadid. Saint Petersburg attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Seoul? Answer: No\n Premise: < Madrid attracts Sonia Sotomayor. Vancouver attracts Dr. Michio Kaku. Incheon attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Incheon? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [25, 27], "Q": [52, 55], "K": [29, 33], "R": null, "K'": [[9, 20], [12, 24]], "V'": [[5, 13], [7, 18]], "example": [1, 65]}, {"END": [131, 132], "A": [126, 129], "V": [92, 95], "Q": [119, 122], "K": [97, 100], "R": null, "K'": [[73, 85], [80, 91]], "V'": [[70, 81], [71, 83]], "example": [66, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Norman Foster. Novosibirsk attracts Zaha Hadid. Saint Petersburg attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Seoul? Answer: No\n Premise: < Madrid attracts Sonia Sotomayor. Vancouver attracts Dr. Michio Kaku. Incheon attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Vancouver? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [25, 27], "Q": [52, 55], "K": [29, 33], "R": null, "K'": [[9, 20], [12, 24]], "V'": [[5, 13], [7, 18]], "example": [1, 65]}, {"END": [130, 131], "A": [126, 128], "V": [92, 95], "Q": [119, 122], "K": [97, 100], "R": null, "K'": [[73, 85], [80, 91]], "V'": [[70, 81], [71, 83]], "example": [66, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Michael Phelps. Sao Paulo attracts Drake. Birmingham attracts Ernest Hemingway. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Frida Kahlo. Manchester attracts Johnny Depp. Berlin attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [5, 9], "Q": [51, 54], "K": [11, 15], "R": null, "K'": [[21, 28], [23, 32]], "V'": [[16, 24], [19, 26]], "example": [1, 64]}, {"END": [120, 121], "A": [116, 118], "V": [69, 71], "Q": [110, 112], "K": [73, 78], "R": null, "K'": [[82, 89], [85, 91]], "V'": [[79, 86], [80, 87]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts Michael Phelps. Sao Paulo attracts Drake. Birmingham attracts Ernest Hemingway. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Frida Kahlo. Manchester attracts Johnny Depp. Berlin attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Manchester? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [5, 9], "Q": [51, 54], "K": [11, 15], "R": null, "K'": [[21, 28], [23, 32]], "V'": [[16, 24], [19, 26]], "example": [1, 64]}, {"END": [119, 120], "A": [116, 117], "V": [69, 71], "Q": [110, 112], "K": [73, 78], "R": null, "K'": [[82, 89], [85, 91]], "V'": [[79, 86], [80, 87]], "example": [65, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Vincent van Gogh. Chiang Mai attracts Marie Curie. Barcelona attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Johnny Depp. Toronto attracts Jane Austen. Hamburg attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Toronto? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [26, 27], "Q": [50, 53], "K": [29, 31], "R": null, "K'": [[11, 22], [16, 25]], "V'": [[5, 17], [9, 20]], "example": [1, 65]}, {"END": [124, 125], "A": [121, 122], "V": [79, 80], "Q": [115, 117], "K": [82, 85], "R": null, "K'": [[75, 89], [78, 96]], "V'": [[70, 86], [73, 87]], "example": [66, 126]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Vincent van Gogh. Chiang Mai attracts Marie Curie. Barcelona attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Johnny Depp. Toronto attracts Jane Austen. Hamburg attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Pattaya? Answer: No\n", "ranges": [{"END": [63, 64], "A": [57, 61], "V": [26, 27], "Q": [50, 53], "K": [29, 31], "R": null, "K'": [[11, 22], [16, 25]], "V'": [[5, 17], [9, 20]], "example": [1, 65]}, {"END": [126, 127], "A": [121, 124], "V": [79, 80], "Q": [115, 117], "K": [82, 85], "R": null, "K'": [[75, 89], [78, 96]], "V'": [[70, 86], [73, 87]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Justin Bieber. Novosibirsk attracts Steve Jobs. Washington, D.C attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Dr. Temple Grandin. Busan attracts Mark Twain. Seoul attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Seoul? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [13, 18], "Q": [53, 57], "K": [20, 23], "R": null, "K'": [[8, 31], [12, 34]], "V'": [[5, 24], [6, 29]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [93, 95], "Q": [120, 124], "K": [97, 101], "R": null, "K'": [[79, 89], [84, 92]], "V'": [[75, 85], [77, 87]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Manchester attracts Justin Bieber. Novosibirsk attracts Steve Jobs. Washington, D.C attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Novosibirsk? Answer: Yes\n Premise: < Bras\u00edlia attracts Dr. Temple Grandin. Busan attracts Mark Twain. Seoul attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Busan? Answer: No\n", "ranges": [{"END": [68, 69], "A": [61, 66], "V": [13, 18], "Q": [53, 57], "K": [20, 23], "R": null, "K'": [[8, 31], [12, 34]], "V'": [[5, 24], [6, 29]], "example": [1, 70]}, {"END": [132, 133], "A": [128, 130], "V": [93, 95], "Q": [120, 124], "K": [97, 101], "R": null, "K'": [[79, 89], [84, 92]], "V'": [[75, 85], [77, 87]], "example": [71, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Mies van der Rohe. Washington, D.C attracts Drake. Florence attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to Florence? Answer: No\n Premise: < Kyoto attracts Jane Austen. Canberra attracts Meryl Streep. Saint Petersburg attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Canberra? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [5, 8], "Q": [55, 57], "K": [10, 16], "R": null, "K'": [[24, 30], [26, 36]], "V'": [[17, 27], [22, 28]], "example": [1, 66]}, {"END": [128, 129], "A": [123, 126], "V": [79, 82], "Q": [117, 119], "K": [84, 90], "R": null, "K'": [[75, 95], [78, 98]], "V'": [[71, 91], [73, 93]], "example": [67, 130]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Mies van der Rohe. Washington, D.C attracts Drake. Florence attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to Florence? Answer: No\n Premise: < Kyoto attracts Jane Austen. Canberra attracts Meryl Streep. Saint Petersburg attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Kyoto? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [5, 8], "Q": [55, 57], "K": [10, 16], "R": null, "K'": [[24, 30], [26, 36]], "V'": [[17, 27], [22, 28]], "example": [1, 66]}, {"END": [127, 128], "A": [123, 125], "V": [79, 82], "Q": [117, 119], "K": [84, 90], "R": null, "K'": [[75, 95], [78, 98]], "V'": [[71, 91], [73, 93]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Lady Gaga. Bras\u00edlia attracts Sergey Brin. Berlin attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Gloria Allred. Chiang Mai attracts Barack Obama. Beijing attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Beijing? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [21, 22], "Q": [46, 48], "K": [24, 27], "R": null, "K'": [[8, 16], [11, 20]], "V'": [[5, 12], [6, 14]], "example": [1, 57]}, {"END": [121, 122], "A": [116, 119], "V": [80, 83], "Q": [110, 112], "K": [85, 91], "R": null, "K'": [[65, 75], [69, 79]], "V'": [[62, 70], [63, 73]], "example": [58, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Lady Gaga. Bras\u00edlia attracts Sergey Brin. Berlin attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Gloria Allred. Chiang Mai attracts Barack Obama. Beijing attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [21, 22], "Q": [46, 48], "K": [24, 27], "R": null, "K'": [[8, 16], [11, 20]], "V'": [[5, 12], [6, 14]], "example": [1, 57]}, {"END": [121, 122], "A": [116, 119], "V": [80, 83], "Q": [110, 112], "K": [85, 91], "R": null, "K'": [[65, 75], [69, 79]], "V'": [[62, 70], [63, 73]], "example": [58, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Dr. Jane Goodall. London attracts Michael Phelps. Ottawa attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Ottawa? Answer: No\n Premise: < Berlin attracts Dr. Anthony Fauci. London attracts Salvador Dal\u00ed. Canberra attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Berlin? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [5, 7], "Q": [50, 52], "K": [9, 14], "R": null, "K'": [[18, 27], [22, 31]], "V'": [[15, 23], [16, 25]], "example": [1, 62]}, {"END": [122, 123], "A": [119, 120], "V": [67, 68], "Q": [113, 115], "K": [70, 76], "R": null, "K'": [[80, 89], [83, 94]], "V'": [[77, 84], [78, 87]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Dr. Jane Goodall. London attracts Michael Phelps. Ottawa attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Ottawa? Answer: No\n Premise: < Berlin attracts Dr. Anthony Fauci. London attracts Salvador Dal\u00ed. Canberra attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to London? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [5, 7], "Q": [50, 52], "K": [9, 14], "R": null, "K'": [[18, 27], [22, 31]], "V'": [[15, 23], [16, 25]], "example": [1, 62]}, {"END": [122, 123], "A": [119, 120], "V": [67, 68], "Q": [113, 115], "K": [70, 76], "R": null, "K'": [[80, 89], [83, 94]], "V'": [[77, 84], [78, 87]], "example": [63, 124]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Drake. Los Angeles attracts Barack Obama. Kyoto attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Mark Twain. Incheon attracts Leonardo DiCaprio. Paris attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Paris? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [21, 23], "Q": [47, 50], "K": [25, 28], "R": null, "K'": [[9, 16], [11, 20]], "V'": [[5, 12], [7, 14]], "example": [1, 60]}, {"END": [120, 121], "A": [117, 118], "V": [84, 85], "Q": [110, 113], "K": [87, 91], "R": null, "K'": [[69, 78], [72, 83]], "V'": [[65, 73], [67, 76]], "example": [61, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Munich attracts Drake. Los Angeles attracts Barack Obama. Kyoto attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Kyoto? Answer: Yes\n Premise: < Saint Petersburg attracts Mark Twain. Incheon attracts Leonardo DiCaprio. Paris attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Saint Petersburg? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [21, 23], "Q": [47, 50], "K": [25, 28], "R": null, "K'": [[9, 16], [11, 20]], "V'": [[5, 12], [7, 14]], "example": [1, 60]}, {"END": [121, 122], "A": [117, 119], "V": [84, 85], "Q": [110, 113], "K": [87, 91], "R": null, "K'": [[69, 78], [72, 83]], "V'": [[65, 73], [67, 76]], "example": [61, 123]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Lionel Messi likes Seoul. Usain Bolt likes Novosibirsk. Jennifer Lawrence likes Saint Petersburg. >. The athlete does not want to go to Saint Petersburg\n < Tom Brady likes Barcelona. Usain Bolt likes Canberra. Carl Sagan likes Ottawa. >. The athlete does not want to go to Ottawa\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [28, 30], "Q": [33, 36], "K'": [23, 26], "R": [37, 38], "K": [[2, 11], [6, 15]], "V": [[8, 17], [10, 22]], "example": [1, 44]}, {"END": [81, 82], "A'": [82, 84], "V'": [68, 70], "Q": [73, 76], "K'": [63, 66], "R": [77, 78], "K": [[46, 53], [49, 57]], "V": [[51, 59], [52, 62]], "example": [45, 84]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan likes London. Rihanna likes Florence. Taylor Swift likes Bangalore. >. The musician does not want to go to London\n < Clarence Darrow likes Rio de Janeiro. Simone Biles likes Bangkok. Hillary Clinton likes Ottawa. >. The lawyer does not want to go to Bangkok\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [7, 8], "Q": [26, 29], "K'": [2, 5], "R": [30, 31], "K": [[9, 16], [12, 18]], "V": [[14, 20], [15, 23]], "example": [1, 36]}, {"END": [76, 77], "A'": [77, 80], "V'": [54, 57], "Q": [69, 71], "K'": [48, 52], "R": [72, 73], "K": [[38, 58], [42, 62]], "V": [[44, 64], [47, 66]], "example": [37, 80]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Nikola Tesla likes Florence. Cristiano Ronaldo likes New York. Neil deGrasse Tyson likes Vancouver. >. The scientist does not want to go to New York\n < Sonia Sotomayor likes Lyon. Ruth Bader Ginsburg likes Busan. Marie Curie likes Bangkok. >. The lawyer does not want to go to Bangkok\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [18, 20], "Q": [35, 38], "K'": [11, 16], "R": [39, 40], "K": [[2, 21], [7, 28]], "V": [[9, 30], [10, 32]], "example": [1, 46]}, {"END": [88, 89], "A'": [89, 92], "V'": [75, 78], "Q": [81, 83], "K'": [70, 73], "R": [84, 85], "K": [[48, 59], [55, 65]], "V": [[57, 67], [58, 69]], "example": [47, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan likes Berlin. Alex Morgan likes Washington, D.C. Simone Biles likes Sydney. >. The athlete does not want to go to Berlin\n < Jackson Pollock likes Kyoto. Toni Morrison likes Birmingham. Salvador Dal\u00ed likes Tokyo. >. The artist does not want to go to Birmingham\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [7, 8], "Q": [29, 32], "K'": [2, 5], "R": [33, 34], "K": [[9, 19], [11, 23]], "V": [[13, 25], [18, 26]], "example": [1, 39]}, {"END": [75, 76], "A'": [76, 78], "V'": [56, 58], "Q": [68, 70], "K'": [49, 54], "R": [71, 72], "K": [[41, 59], [44, 62]], "V": [[46, 64], [48, 65]], "example": [40, 78]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Johnny Depp likes Sydney. Salvador Dal\u00ed likes Busan. Jackson Pollock likes Saint Petersburg. >. The artist does not want to go to Sydney\n < Michael Phelps likes Zurich. Louis Sullivan likes Moscow. Cristiano Ronaldo likes Los Angeles. >. The athlete does not want to go to Moscow\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [7, 8], "Q": [27, 29], "K'": [2, 5], "R": [30, 31], "K": [[9, 17], [12, 20]], "V": [[14, 22], [16, 24]], "example": [1, 36]}, {"END": [75, 76], "A'": [76, 77], "V'": [53, 54], "Q": [67, 70], "K'": [47, 51], "R": [71, 72], "K": [[38, 55], [42, 60]], "V": [[44, 62], [46, 64]], "example": [37, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Justin Bieber likes Venice. Beyonc\u00e9 likes Lyon. Dr. Sylvia Earle likes Shanghai. >. The musician does not want to go to Shanghai\n < Serena Williams likes Sao Paulo. Tom Brady likes New York. Dr. Mehmet Oz likes Pattaya. >. The athlete does not want to go to Pattaya\n", "ranges": [{"END": [39, 40], "A'": [40, 42], "V'": [26, 28], "Q": [31, 34], "K'": [18, 24], "R": [35, 36], "K": [[2, 11], [6, 14]], "V": [[8, 16], [10, 17]], "example": [1, 42]}, {"END": [84, 85], "A'": [85, 88], "V'": [70, 73], "Q": [76, 79], "K'": [61, 68], "R": [80, 81], "K": [[44, 53], [47, 56]], "V": [[49, 58], [52, 60]], "example": [43, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Steve Jobs likes Canberra. Claude Monet likes Manchester. Warren Buffett likes Osaka. >. The entrepreneur does not want to go to Manchester\n < Justin Bieber likes Osaka. Pablo Picasso likes Milan. Vincent van Gogh likes Kyoto. >. The artist does not want to go to Osaka\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [16, 17], "Q": [28, 32], "K'": [11, 14], "R": [33, 34], "K": [[2, 18], [5, 21]], "V": [[7, 23], [10, 25]], "example": [1, 39]}, {"END": [76, 77], "A'": [77, 79], "V'": [47, 49], "Q": [69, 71], "K'": [41, 45], "R": [72, 73], "K": [[50, 57], [53, 62]], "V": [[55, 64], [56, 66]], "example": [40, 79]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "< Johnnie Cochran likes Hamburg. Lady Gaga likes Seoul. Eminem likes London. >. The musician does not want to go to Hamburg\n < Dr. Anthony Fauci likes Sao Paulo. Brad Pitt likes London. Dr. Sanjay Gupta likes Toronto. >. The doctor does not want to go to London\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [9, 10], "Q": [28, 31], "K'": [2, 7], "R": [32, 33], "K": [[11, 19], [14, 22]], "V": [[16, 24], [18, 25]], "example": [1, 38]}, {"END": [78, 79], "A'": [79, 80], "V'": [56, 57], "Q": [71, 73], "K'": [52, 54], "R": [74, 75], "K": [[40, 58], [46, 65]], "V": [[48, 67], [51, 68]], "example": [39, 80]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi likes Seoul. Usain Bolt likes Novosibirsk. Jennifer Lawrence likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Seoul? Answer: No\n Premise: < Albert Einstein likes Madrid. Rosie Franklin likes Vancouver. Eminem likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Incheon? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [31, 33], "Q": [52, 55], "K'": [26, 29], "R": [56, 57], "K": [[5, 14], [9, 18]], "V": [[11, 20], [13, 25]], "example": [1, 67]}, {"END": [128, 129], "A'": [123, 126], "V'": [92, 95], "Q": [114, 117], "K'": [87, 90], "R": [118, 119], "K": [[72, 79], [75, 82]], "V": [[77, 84], [78, 86]], "example": [68, 130]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi likes Seoul. Usain Bolt likes Novosibirsk. Jennifer Lawrence likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Seoul? Answer: No\n Premise: < Albert Einstein likes Madrid. Rosie Franklin likes Vancouver. Eminem likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Vancouver? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [31, 33], "Q": [52, 55], "K'": [26, 29], "R": [56, 57], "K": [[5, 14], [9, 18]], "V": [[11, 20], [13, 25]], "example": [1, 67]}, {"END": [127, 128], "A'": [123, 125], "V'": [92, 95], "Q": [114, 117], "K'": [87, 90], "R": [118, 119], "K": [[72, 79], [75, 82]], "V": [[77, 84], [78, 86]], "example": [68, 129]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien likes Guangzhou. Serena Williams likes Sao Paulo. Simone Biles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Birmingham? Answer: No\n Premise: < Kanye West likes Kyoto. Vincent van Gogh likes Manchester. Pablo Picasso likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [16, 20], "Q": [57, 60], "K'": [5, 14], "R": [61, 62], "K": [[21, 30], [24, 34]], "V": [[26, 36], [29, 38]], "example": [1, 72]}, {"END": [132, 133], "A'": [128, 130], "V'": [83, 85], "Q": [120, 122], "K'": [77, 81], "R": [123, 124], "K": [[86, 95], [91, 98]], "V": [[93, 100], [94, 101]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien likes Guangzhou. Serena Williams likes Sao Paulo. Simone Biles likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Birmingham? Answer: No\n Premise: < Kanye West likes Kyoto. Vincent van Gogh likes Manchester. Pablo Picasso likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Manchester? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [16, 20], "Q": [57, 60], "K'": [5, 14], "R": [61, 62], "K": [[21, 30], [24, 34]], "V": [[26, 36], [29, 38]], "example": [1, 72]}, {"END": [131, 132], "A'": [128, 129], "V'": [83, 85], "Q": [120, 122], "K'": [77, 81], "R": [123, 124], "K": [[86, 95], [91, 98]], "V": [[93, 100], [94, 101]], "example": [73, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo likes Brisbane. Tom Brady likes Chiang Mai. Sonia Sotomayor likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Brisbane? Answer: No\n Premise: < Stephen King likes Pattaya. Jeff Bezos likes Toronto. Toni Morrison likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Toronto? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [64, 68], "V'": [35, 36], "Q": [55, 58], "K'": [26, 33], "R": [59, 60], "K": [[5, 17], [10, 20]], "V": [[12, 22], [16, 25]], "example": [1, 72]}, {"END": [130, 131], "A'": [127, 128], "V'": [90, 91], "Q": [119, 121], "K'": [85, 88], "R": [122, 123], "K": [[77, 92], [79, 97]], "V": [[81, 99], [84, 100]], "example": [73, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo likes Brisbane. Tom Brady likes Chiang Mai. Sonia Sotomayor likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Brisbane? Answer: No\n Premise: < Stephen King likes Pattaya. Jeff Bezos likes Toronto. Toni Morrison likes Hamburg. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Pattaya? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [64, 68], "V'": [35, 36], "Q": [55, 58], "K'": [26, 33], "R": [59, 60], "K": [[5, 17], [10, 20]], "V": [[12, 22], [16, 25]], "example": [1, 72]}, {"END": [132, 133], "A'": [127, 130], "V'": [90, 91], "Q": [119, 121], "K'": [85, 88], "R": [122, 123], "K": [[77, 92], [79, 97]], "V": [[81, 99], [84, 100]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg likes Birmingham. Antoni Gaud\u00ed likes Kyoto. Bill Gates likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Kyoto? Answer: Yes\n Premise: < Larry Page likes Sao Paulo. Warren Buffett likes Busan. Clarence Darrow likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [21, 23], "Q": [50, 54], "K'": [14, 19], "R": [55, 56], "K": [[5, 24], [9, 27]], "V": [[11, 29], [13, 31]], "example": [1, 66]}, {"END": [130, 131], "A'": [125, 128], "V'": [93, 96], "Q": [115, 119], "K'": [87, 91], "R": [120, 121], "K": [[71, 79], [73, 82]], "V": [[75, 84], [78, 86]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg likes Birmingham. Antoni Gaud\u00ed likes Kyoto. Bill Gates likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Kyoto? Answer: Yes\n Premise: < Larry Page likes Sao Paulo. Warren Buffett likes Busan. Clarence Darrow likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Busan? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [21, 23], "Q": [50, 54], "K'": [14, 19], "R": [55, 56], "K": [[5, 24], [9, 27]], "V": [[11, 29], [13, 31]], "example": [1, 66]}, {"END": [129, 130], "A'": [125, 127], "V'": [93, 96], "Q": [115, 119], "K'": [87, 91], "R": [120, 121], "K": [[71, 79], [73, 82]], "V": [[75, 84], [78, 86]], "example": [67, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku likes Bangkok. Le Corbusier likes Washington, D.C. Mies van der Rohe likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to Florence? Answer: No\n Premise: < Julia Roberts likes Kyoto. Kanye West likes Canberra. Denzel Washington likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Canberra? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [13, 16], "Q": [57, 59], "K'": [5, 11], "R": [60, 61], "K": [[17, 29], [21, 35]], "V": [[23, 37], [28, 38]], "example": [1, 70]}, {"END": [131, 132], "A'": [126, 129], "V'": [88, 91], "Q": [118, 120], "K'": [82, 86], "R": [121, 122], "K": [[75, 92], [77, 95]], "V": [[79, 97], [81, 99]], "example": [71, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku likes Bangkok. Le Corbusier likes Washington, D.C. Mies van der Rohe likes Florence. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to Florence? Answer: No\n Premise: < Julia Roberts likes Kyoto. Kanye West likes Canberra. Denzel Washington likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Kyoto? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [13, 16], "Q": [57, 59], "K'": [5, 11], "R": [60, 61], "K": [[17, 29], [21, 35]], "V": [[23, 37], [28, 38]], "example": [1, 70]}, {"END": [130, 131], "A'": [126, 128], "V'": [88, 91], "Q": [118, 120], "K'": [82, 86], "R": [121, 122], "K": [[75, 92], [77, 95]], "V": [[79, 97], [81, 99]], "example": [71, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Frida Kahlo likes Barcelona. Michelangelo likes Bras\u00edlia. Toni Morrison likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Berlin? Answer: Yes\n Premise: < Mark Twain likes Moscow. J.R.R. Tolkien likes Chiang Mai. Tom Hanks likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [29, 30], "Q": [49, 51], "K'": [22, 27], "R": [52, 53], "K": [[5, 14], [10, 17]], "V": [[12, 19], [13, 21]], "example": [1, 62]}, {"END": [129, 130], "A'": [124, 127], "V'": [94, 97], "Q": [116, 118], "K'": [89, 92], "R": [119, 120], "K": [[67, 74], [70, 83]], "V": [[72, 85], [73, 88]], "example": [63, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Frida Kahlo likes Barcelona. Michelangelo likes Bras\u00edlia. Toni Morrison likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Berlin? Answer: Yes\n Premise: < Mark Twain likes Moscow. J.R.R. Tolkien likes Chiang Mai. Tom Hanks likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [29, 30], "Q": [49, 51], "K'": [22, 27], "R": [52, 53], "K": [[5, 14], [10, 17]], "V": [[12, 19], [13, 21]], "example": [1, 62]}, {"END": [129, 130], "A'": [124, 127], "V'": [94, 97], "Q": [116, 118], "K'": [89, 92], "R": [119, 120], "K": [[67, 74], [70, 83]], "V": [[72, 85], [73, 88]], "example": [63, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Valencia. Dr. Mehmet Oz likes London. Dr. Gabor Mat\u00e9 likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Ottawa? Answer: No\n Premise: < Dr. Anthony Fauci likes Sao Paulo. Brad Pitt likes London. Dr. Sanjay Gupta likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to London? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [10, 12], "Q": [53, 55], "K'": [5, 8], "R": [56, 57], "K": [[13, 24], [20, 30]], "V": [[22, 32], [23, 34]], "example": [1, 67]}, {"END": [130, 131], "A'": [127, 128], "V'": [88, 89], "Q": [119, 121], "K'": [84, 86], "R": [122, 123], "K": [[72, 90], [78, 97]], "V": [[80, 99], [83, 100]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Valencia. Dr. Mehmet Oz likes London. Dr. Gabor Mat\u00e9 likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Ottawa? Answer: No\n Premise: < Dr. Anthony Fauci likes Sao Paulo. Brad Pitt likes London. Dr. Sanjay Gupta likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Toronto? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [10, 12], "Q": [53, 55], "K'": [5, 8], "R": [56, 57], "K": [[13, 24], [20, 30]], "V": [[22, 32], [23, 34]], "example": [1, 67]}, {"END": [130, 131], "A'": [127, 128], "V'": [88, 89], "Q": [119, 121], "K'": [84, 86], "R": [122, 123], "K": [[72, 90], [78, 97]], "V": [[80, 99], [83, 100]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Tom Brady likes Zurich. LeBron James likes Bern. Brad Pitt likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to New York? Answer: Yes\n Premise: < Denzel Washington likes Washington, D.C. Natalie Portman likes Ottawa. Mark Twain likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Busan? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [25, 27], "Q": [46, 49], "K'": [21, 23], "R": [50, 51], "K": [[5, 13], [8, 17]], "V": [[10, 19], [12, 20]], "example": [1, 61]}, {"END": [124, 125], "A'": [120, 122], "V'": [91, 93], "Q": [112, 114], "K'": [86, 89], "R": [115, 116], "K": [[66, 77], [69, 81]], "V": [[71, 83], [76, 85]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Tom Brady likes Zurich. LeBron James likes Bern. Brad Pitt likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to New York? Answer: Yes\n Premise: < Denzel Washington likes Washington, D.C. Natalie Portman likes Ottawa. Mark Twain likes Busan. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Ottawa? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [25, 27], "Q": [46, 49], "K'": [21, 23], "R": [50, 51], "K": [[5, 13], [8, 17]], "V": [[10, 19], [12, 20]], "example": [1, 61]}, {"END": [124, 125], "A'": [120, 122], "V'": [91, 93], "Q": [112, 114], "K'": [86, 89], "R": [115, 116], "K": [[66, 77], [69, 81]], "V": [[71, 83], [76, 85]], "example": [62, 126]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Seoul attracts Lionel Messi. Novosibirsk attracts Usain Bolt. Saint Petersburg attracts Jennifer Lawrence. >. The athlete does not want to go to Saint Petersburg\n < Barcelona attracts Tom Brady. Canberra attracts Usain Bolt. Ottawa attracts Carl Sagan. >. The athlete does not want to go to Ottawa\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [23, 25], "Q": [33, 36], "K'": [27, 30], "R": [37, 38], "K": [[6, 18], [10, 22]], "V": [[2, 11], [4, 16]], "example": [1, 44]}, {"END": [81, 82], "A'": [82, 84], "V'": [63, 65], "Q": [73, 76], "K'": [67, 70], "R": [77, 78], "K": [[49, 58], [52, 62]], "V": [[46, 53], [47, 56]], "example": [45, 84]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< London attracts Carl Sagan. Florence attracts Rihanna. Bangalore attracts Taylor Swift. >. The musician does not want to go to London\n < Rio de Janeiro attracts Clarence Darrow. Bangkok attracts Simone Biles. Ottawa attracts Hillary Clinton. >. The lawyer does not want to go to Bangkok\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [26, 29], "K'": [5, 8], "R": [30, 31], "K": [[12, 21], [15, 23]], "V": [[9, 16], [10, 19]], "example": [1, 36]}, {"END": [76, 77], "A'": [77, 80], "V'": [48, 51], "Q": [69, 71], "K'": [53, 57], "R": [72, 73], "K": [[43, 62], [47, 66]], "V": [[38, 58], [41, 60]], "example": [37, 80]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Florence attracts Nikola Tesla. New York attracts Cristiano Ronaldo. Vancouver attracts Neil deGrasse Tyson. >. The scientist does not want to go to New York\n < Lyon attracts Sonia Sotomayor. Busan attracts Ruth Bader Ginsburg. Bangkok attracts Marie Curie. >. The lawyer does not want to go to Bangkok\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [11, 13], "Q": [35, 38], "K'": [15, 20], "R": [39, 40], "K": [[5, 25], [10, 32]], "V": [[2, 21], [3, 23]], "example": [1, 46]}, {"END": [88, 89], "A'": [89, 92], "V'": [70, 73], "Q": [81, 83], "K'": [75, 78], "R": [84, 85], "K": [[51, 63], [58, 69]], "V": [[48, 59], [49, 61]], "example": [47, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Berlin attracts Carl Sagan. Washington, D.C attracts Alex Morgan. Sydney attracts Simone Biles. >. The athlete does not want to go to Berlin\n < Kyoto attracts Jackson Pollock. Birmingham attracts Toni Morrison. Tokyo attracts Salvador Dal\u00ed. >. The artist does not want to go to Birmingham\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [2, 3], "Q": [29, 32], "K'": [5, 8], "R": [33, 34], "K": [[16, 22], [18, 26]], "V": [[9, 19], [14, 20]], "example": [1, 39]}, {"END": [75, 76], "A'": [76, 78], "V'": [49, 51], "Q": [68, 70], "K'": [53, 58], "R": [71, 72], "K": [[45, 62], [48, 65]], "V": [[41, 59], [43, 60]], "example": [40, 78]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Sydney attracts Johnny Depp. Busan attracts Salvador Dal\u00ed. Saint Petersburg attracts Jackson Pollock. >. The artist does not want to go to Sydney\n < Zurich attracts Michael Phelps. Moscow attracts Louis Sullivan. Los Angeles attracts Cristiano Ronaldo. >. The athlete does not want to go to Moscow\n", "ranges": [{"END": [34, 35], "A'": [35, 36], "V'": [2, 3], "Q": [27, 29], "K'": [5, 8], "R": [30, 31], "K": [[13, 21], [16, 24]], "V": [[9, 17], [11, 19]], "example": [1, 36]}, {"END": [75, 76], "A'": [76, 77], "V'": [47, 48], "Q": [67, 70], "K'": [50, 54], "R": [71, 72], "K": [[42, 59], [46, 64]], "V": [[38, 55], [40, 57]], "example": [37, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Venice attracts Justin Bieber. Lyon attracts Beyonc\u00e9. Shanghai attracts Dr. Sylvia Earle. >. The musician does not want to go to Shanghai\n < Sao Paulo attracts Serena Williams. New York attracts Tom Brady. Pattaya attracts Dr. Mehmet Oz. >. The athlete does not want to go to Pattaya\n", "ranges": [{"END": [39, 40], "A'": [40, 42], "V'": [18, 20], "Q": [31, 34], "K'": [22, 28], "R": [35, 36], "K": [[6, 14], [10, 17]], "V": [[2, 11], [4, 12]], "example": [1, 42]}, {"END": [84, 85], "A'": [85, 88], "V'": [61, 64], "Q": [76, 79], "K'": [66, 73], "R": [80, 81], "K": [[49, 57], [52, 60]], "V": [[44, 53], [47, 55]], "example": [43, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Canberra attracts Steve Jobs. Manchester attracts Claude Monet. Osaka attracts Warren Buffett. >. The entrepreneur does not want to go to Manchester\n < Osaka attracts Justin Bieber. Milan attracts Pablo Picasso. Kyoto attracts Vincent van Gogh. >. The artist does not want to go to Osaka\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [11, 12], "Q": [28, 32], "K'": [14, 17], "R": [33, 34], "K": [[7, 22], [10, 25]], "V": [[2, 18], [5, 20]], "example": [1, 39]}, {"END": [76, 77], "A'": [77, 79], "V'": [41, 43], "Q": [69, 71], "K'": [45, 49], "R": [72, 73], "K": [[53, 61], [56, 66]], "V": [[50, 57], [51, 59]], "example": [40, 79]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Hamburg attracts Johnnie Cochran. Seoul attracts Lady Gaga. London attracts Eminem. >. The musician does not want to go to Hamburg\n < Sao Paulo attracts Dr. Anthony Fauci. London attracts Brad Pitt. Toronto attracts Dr. Sanjay Gupta. >. The doctor does not want to go to London\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [2, 3], "Q": [28, 31], "K'": [5, 10], "R": [32, 33], "K": [[15, 22], [18, 25]], "V": [[11, 19], [13, 20]], "example": [1, 38]}, {"END": [78, 79], "A'": [79, 80], "V'": [52, 53], "Q": [71, 73], "K'": [55, 57], "R": [74, 75], "K": [[45, 61], [51, 68]], "V": [[40, 58], [43, 59]], "example": [39, 80]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Lionel Messi. Novosibirsk attracts Usain Bolt. Saint Petersburg attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Seoul? Answer: No\n Premise: < Madrid attracts Albert Einstein. Vancouver attracts Rosie Franklin. Incheon attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Incheon? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [26, 28], "Q": [52, 55], "K'": [30, 33], "R": [56, 57], "K": [[9, 21], [13, 25]], "V": [[5, 14], [7, 19]], "example": [1, 67]}, {"END": [128, 129], "A'": [123, 126], "V'": [87, 90], "Q": [114, 117], "K'": [92, 95], "R": [118, 119], "K": [[75, 83], [78, 86]], "V": [[72, 79], [73, 81]], "example": [68, 130]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Seoul attracts Lionel Messi. Novosibirsk attracts Usain Bolt. Saint Petersburg attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Seoul? Answer: No\n Premise: < Madrid attracts Albert Einstein. Vancouver attracts Rosie Franklin. Incheon attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Vancouver? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [26, 28], "Q": [52, 55], "K'": [30, 33], "R": [56, 57], "K": [[9, 21], [13, 25]], "V": [[5, 14], [7, 19]], "example": [1, 67]}, {"END": [127, 128], "A'": [123, 125], "V'": [87, 90], "Q": [114, 117], "K'": [92, 95], "R": [118, 119], "K": [[75, 83], [78, 86]], "V": [[72, 79], [73, 81]], "example": [68, 129]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts J.R.R. Tolkien. Sao Paulo attracts Serena Williams. Birmingham attracts Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Kanye West. Manchester attracts Vincent van Gogh. Berlin attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Kyoto? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [5, 9], "Q": [57, 60], "K'": [11, 20], "R": [61, 62], "K": [[26, 34], [29, 38]], "V": [[21, 30], [24, 32]], "example": [1, 72]}, {"END": [132, 133], "A'": [128, 130], "V'": [77, 79], "Q": [120, 122], "K'": [81, 85], "R": [123, 124], "K": [[89, 98], [94, 101]], "V": [[86, 95], [87, 96]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Guangzhou attracts J.R.R. Tolkien. Sao Paulo attracts Serena Williams. Birmingham attracts Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Birmingham? Answer: No\n Premise: < Kyoto attracts Kanye West. Manchester attracts Vincent van Gogh. Berlin attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Manchester? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [5, 9], "Q": [57, 60], "K'": [11, 20], "R": [61, 62], "K": [[26, 34], [29, 38]], "V": [[21, 30], [24, 32]], "example": [1, 72]}, {"END": [131, 132], "A'": [128, 129], "V'": [77, 79], "Q": [120, 122], "K'": [81, 85], "R": [123, 124], "K": [[89, 98], [94, 101]], "V": [[86, 95], [87, 96]], "example": [73, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Cristiano Ronaldo. Chiang Mai attracts Tom Brady. Barcelona attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Stephen King. Toronto attracts Jeff Bezos. Hamburg attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Toronto? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [64, 68], "V'": [26, 27], "Q": [55, 58], "K'": [29, 36], "R": [59, 60], "K": [[11, 22], [16, 25]], "V": [[5, 17], [9, 20]], "example": [1, 72]}, {"END": [130, 131], "A'": [127, 128], "V'": [85, 86], "Q": [119, 121], "K'": [88, 91], "R": [122, 123], "K": [[82, 95], [84, 100]], "V": [[77, 92], [80, 93]], "example": [73, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Brisbane attracts Cristiano Ronaldo. Chiang Mai attracts Tom Brady. Barcelona attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Brisbane? Answer: No\n Premise: < Pattaya attracts Stephen King. Toronto attracts Jeff Bezos. Hamburg attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Pattaya? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [64, 68], "V'": [26, 27], "Q": [55, 58], "K'": [29, 36], "R": [59, 60], "K": [[11, 22], [16, 25]], "V": [[5, 17], [9, 20]], "example": [1, 72]}, {"END": [132, 133], "A'": [127, 130], "V'": [85, 86], "Q": [119, 121], "K'": [88, 91], "R": [122, 123], "K": [[82, 95], [84, 100]], "V": [[77, 92], [80, 93]], "example": [73, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Birmingham attracts Mark Zuckerberg. Kyoto attracts Antoni Gaud\u00ed. New York attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Kyoto? Answer: Yes\n Premise: < Sao Paulo attracts Larry Page. Busan attracts Warren Buffett. Beijing attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [14, 16], "Q": [50, 54], "K'": [18, 23], "R": [55, 56], "K": [[9, 28], [13, 31]], "V": [[5, 24], [7, 26]], "example": [1, 66]}, {"END": [130, 131], "A'": [125, 128], "V'": [87, 90], "Q": [115, 119], "K'": [92, 96], "R": [120, 121], "K": [[76, 83], [78, 86]], "V": [[71, 79], [74, 81]], "example": [67, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Birmingham attracts Mark Zuckerberg. Kyoto attracts Antoni Gaud\u00ed. New York attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Kyoto? Answer: Yes\n Premise: < Sao Paulo attracts Larry Page. Busan attracts Warren Buffett. Beijing attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Busan? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [14, 16], "Q": [50, 54], "K'": [18, 23], "R": [55, 56], "K": [[9, 28], [13, 31]], "V": [[5, 24], [7, 26]], "example": [1, 66]}, {"END": [129, 130], "A'": [125, 127], "V'": [87, 90], "Q": [115, 119], "K'": [92, 96], "R": [120, 121], "K": [[76, 83], [78, 86]], "V": [[71, 79], [74, 81]], "example": [67, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Dr. Michio Kaku. Washington, D.C attracts Le Corbusier. Florence attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to Florence? Answer: No\n Premise: < Kyoto attracts Julia Roberts. Canberra attracts Kanye West. Saint Petersburg attracts Denzel Washington. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Canberra? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [5, 8], "Q": [57, 59], "K'": [10, 16], "R": [60, 61], "K": [[24, 32], [28, 38]], "V": [[17, 29], [22, 30]], "example": [1, 70]}, {"END": [131, 132], "A'": [126, 129], "V'": [82, 85], "Q": [118, 120], "K'": [87, 91], "R": [121, 122], "K": [[79, 96], [81, 99]], "V": [[75, 92], [77, 94]], "example": [71, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bangkok attracts Dr. Michio Kaku. Washington, D.C attracts Le Corbusier. Florence attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to Florence? Answer: No\n Premise: < Kyoto attracts Julia Roberts. Canberra attracts Kanye West. Saint Petersburg attracts Denzel Washington. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Kyoto? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [5, 8], "Q": [57, 59], "K'": [10, 16], "R": [60, 61], "K": [[24, 32], [28, 38]], "V": [[17, 29], [22, 30]], "example": [1, 70]}, {"END": [130, 131], "A'": [126, 128], "V'": [82, 85], "Q": [118, 120], "K'": [87, 91], "R": [121, 122], "K": [[79, 96], [81, 99]], "V": [[75, 92], [77, 94]], "example": [71, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Frida Kahlo. Bras\u00edlia attracts Michelangelo. Berlin attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Mark Twain. Chiang Mai attracts J.R.R. Tolkien. Beijing attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Beijing? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [22, 23], "Q": [49, 51], "K'": [25, 30], "R": [52, 53], "K": [[8, 18], [13, 21]], "V": [[5, 14], [6, 16]], "example": [1, 62]}, {"END": [129, 130], "A'": [124, 127], "V'": [89, 92], "Q": [116, 118], "K'": [94, 97], "R": [119, 120], "K": [[70, 79], [73, 88]], "V": [[67, 74], [68, 77]], "example": [63, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Barcelona attracts Frida Kahlo. Bras\u00edlia attracts Michelangelo. Berlin attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Berlin? Answer: Yes\n Premise: < Moscow attracts Mark Twain. Chiang Mai attracts J.R.R. Tolkien. Beijing attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Chiang Mai? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [22, 23], "Q": [49, 51], "K'": [25, 30], "R": [52, 53], "K": [[8, 18], [13, 21]], "V": [[5, 14], [6, 16]], "example": [1, 62]}, {"END": [129, 130], "A'": [124, 127], "V'": [89, 92], "Q": [116, 118], "K'": [94, 97], "R": [119, 120], "K": [[70, 79], [73, 88]], "V": [[67, 74], [68, 77]], "example": [63, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Lady Gaga. London attracts Dr. Mehmet Oz. Ottawa attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Ottawa? Answer: No\n Premise: < Sao Paulo attracts Dr. Anthony Fauci. London attracts Brad Pitt. Toronto attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to London? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [5, 7], "Q": [53, 55], "K'": [9, 12], "R": [56, 57], "K": [[16, 28], [23, 34]], "V": [[13, 24], [14, 26]], "example": [1, 67]}, {"END": [130, 131], "A'": [127, 128], "V'": [84, 85], "Q": [119, 121], "K'": [87, 89], "R": [122, 123], "K": [[77, 93], [83, 100]], "V": [[72, 90], [75, 91]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Valencia attracts Lady Gaga. London attracts Dr. Mehmet Oz. Ottawa attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Ottawa? Answer: No\n Premise: < Sao Paulo attracts Dr. Anthony Fauci. London attracts Brad Pitt. Toronto attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Toronto? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [5, 7], "Q": [53, 55], "K'": [9, 12], "R": [56, 57], "K": [[16, 28], [23, 34]], "V": [[13, 24], [14, 26]], "example": [1, 67]}, {"END": [130, 131], "A'": [127, 128], "V'": [84, 85], "Q": [119, 121], "K'": [87, 89], "R": [122, 123], "K": [[77, 93], [83, 100]], "V": [[72, 90], [75, 91]], "example": [68, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Zurich attracts Tom Brady. Bern attracts LeBron James. New York attracts Brad Pitt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to New York? Answer: Yes\n Premise: < Washington, D.C attracts Denzel Washington. Ottawa attracts Natalie Portman. Busan attracts Mark Twain. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Busan? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [46, 49], "K'": [25, 27], "R": [50, 51], "K": [[9, 16], [12, 20]], "V": [[5, 13], [7, 14]], "example": [1, 61]}, {"END": [124, 125], "A'": [120, 122], "V'": [86, 88], "Q": [112, 114], "K'": [90, 93], "R": [115, 116], "K": [[73, 81], [76, 85]], "V": [[66, 77], [71, 79]], "example": [62, 126]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Zurich attracts Tom Brady. Bern attracts LeBron James. New York attracts Brad Pitt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to New York? Answer: Yes\n Premise: < Washington, D.C attracts Denzel Washington. Ottawa attracts Natalie Portman. Busan attracts Mark Twain. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Ottawa? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [46, 49], "K'": [25, 27], "R": [50, 51], "K": [[9, 16], [12, 20]], "V": [[5, 13], [7, 14]], "example": [1, 61]}, {"END": [124, 125], "A'": [120, 122], "V'": [86, 88], "Q": [112, 114], "K'": [90, 93], "R": [115, 116], "K": [[73, 81], [76, 85]], "V": [[66, 77], [71, 79]], "example": [62, 126]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Usain Bolt likes Shanghai. Salvador Dal\u00ed likes Novosibirsk. Stephen Hawking likes Bangkok. >. So who wants to go to Bangkok? the scientist\n < Harper Lee likes Geneva. Justin Bieber likes Canberra. Clarence Darrow likes Kyoto. >. So who wants to go to Kyoto? the lawyer\n", "ranges": [{"END": [71, 72], "A": [72, 74], "V": [50, 53], "Q": [67, 70], "K": [55, 58], "R": null, "K'": [[36, 44], [38, 49]], "V'": [[30, 39], [34, 42]], "example": [29, 74]}, {"END": [114, 115], "A": [115, 116], "V": [94, 98], "Q": [111, 113], "K": [100, 102], "R": null, "K'": [[81, 90], [83, 93]], "V'": [[76, 84], [79, 88]], "example": [75, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Dr. Gabor Mat\u00e9 likes London. Simone Biles likes Florence. Mies van der Rohe likes Bangalore. >. So who wants to go to London? the doctor\n < Zaha Hadid likes Rio de Janeiro. Cristiano Ronaldo likes Osaka. Eminem likes Moscow. >. So who wants to go to Rio de Janeiro? the architect\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [23, 29], "Q": [61, 62], "K": [31, 32], "R": null, "K'": [[39, 49], [40, 52]], "V'": [[33, 41], [37, 47]], "example": [22, 65]}, {"END": [106, 107], "A": [107, 108], "V": [67, 71], "Q": [102, 105], "K": [73, 76], "R": null, "K'": [[84, 92], [86, 93]], "V'": [[77, 87], [82, 90]], "example": [66, 108]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Neil deGrasse Tyson likes Bras\u00edlia. Vincent van Gogh likes Saint Petersburg. Dr. Neil deGrasse Tyson likes Mumbai. >. So who wants to go to Mumbai? the doctor\n < Claude Monet likes Guangzhou. Lady Gaga likes Hamburg. Johnnie Cochran likes Paris. >. So who wants to go to Guangzhou? the artist\n", "ranges": [{"END": [75, 76], "A": [76, 77], "V": [48, 57], "Q": [71, 74], "K": [59, 62], "R": null, "K'": [[35, 45], [37, 47]], "V'": [[26, 50, 38], [33, 57, 43]], "example": [25, 77]}, {"END": [118, 119], "A": [119, 120], "V": [79, 82], "Q": [113, 117], "K": [84, 88], "R": null, "K'": [[94, 103], [95, 104]], "V'": [[89, 96], [92, 101]], "example": [78, 120]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Kanye West likes Florence. LeBron James likes New Delhi. Eminem likes Vancouver. >. So who wants to go to New Delhi? the athlete\n < Tom Brady likes Venice. Leonardo da Vinci likes Valencia. Rem Koolhaas likes Bangalore. >. So who wants to go to Venice? the athlete\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [31, 35], "Q": [57, 60], "K": [37, 40], "R": null, "K'": [[29, 46], [30, 48]], "V'": [[23, 41], [27, 44]], "example": [22, 64]}, {"END": [106, 107], "A": [107, 109], "V": [66, 69], "Q": [103, 105], "K": [71, 73], "R": null, "K'": [[81, 91], [83, 94]], "V'": [[74, 84], [79, 89]], "example": [65, 109]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Dr. Temple Grandin likes Marseille. Agatha Christie likes Zurich. Dr. Sylvia Earle likes Chiang Mai. >. So who wants to go to Zurich? the author\n < Bill Gates likes Sydney. LeBron James likes Lyon. Vincent van Gogh likes Manchester. >. So who wants to go to Manchester? the artist\n", "ranges": [{"END": [70, 71], "A": [71, 72], "V": [37, 42], "Q": [67, 69], "K": [44, 46], "R": null, "K'": [[34, 55], [36, 58]], "V'": [[27, 47], [32, 53]], "example": [26, 72]}, {"END": [108, 109], "A": [109, 110], "V": [89, 94], "Q": [106, 107], "K": [96, 97], "R": null, "K'": [[79, 87], [80, 88]], "V'": [[74, 81], [77, 85]], "example": [73, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the author, the athlete and the actor.\n< Johnny Depp likes Barcelona. Jane Goodall likes Berlin. George Orwell likes Bras\u00edlia. >. So who wants to go to Berlin? the scientist\n < LeBron James likes Beijing. Agatha Christie likes Moscow. Charlize Theron likes Chiang Mai. >. So who wants to go to Beijing? the athlete\n", "ranges": [{"END": [55, 56], "A": [56, 58], "V": [30, 33], "Q": [53, 54], "K": [35, 36], "R": null, "K'": [[28, 42], [29, 44]], "V'": [[23, 37], [26, 40]], "example": [22, 58]}, {"END": [102, 103], "A": [103, 105], "V": [60, 64], "Q": [98, 101], "K": [66, 69], "R": null, "K'": [[77, 86], [78, 89]], "V'": [[70, 79], [75, 84]], "example": [59, 105]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer and the author.\n< Sergey Brin likes London. Bill Gates likes Ottawa. Jane Austen likes Valencia. >. So who wants to go to Valencia? the author\n < Toni Morrison likes Canberra. Sonia Sotomayor likes Moscow. Roger Federer likes London. >. So who wants to go to Moscow? the lawyer\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [40, 43], "Q": [56, 58], "K": [45, 47], "R": null, "K'": [[30, 37], [31, 39]], "V'": [[24, 32], [28, 35]], "example": [23, 61]}, {"END": [102, 103], "A": [103, 104], "V": [74, 81], "Q": [100, 101], "K": [83, 84], "R": null, "K'": [[70, 90], [73, 91]], "V'": [[63, 85], [68, 88]], "example": [62, 104]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist and the musician.\n< Nikola Tesla likes Novosibirsk. Taylor Swift likes Hamburg. Natalie Portman likes New York. >. So who wants to go to Novosibirsk? the scientist\n < Lady Gaga likes Munich. Natalie Portman likes Incheon. Neil deGrasse Tyson likes Barcelona. >. So who wants to go to Barcelona? the scientist\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [20, 25], "Q": [56, 61], "K": [27, 32], "R": null, "K'": [[37, 45], [38, 47]], "V'": [[33, 39], [35, 43]], "example": [19, 65]}, {"END": [106, 107], "A": [107, 109], "V": [85, 92], "Q": [104, 105], "K": [94, 95], "R": null, "K'": [[72, 81], [74, 84]], "V'": [[67, 75], [70, 79]], "example": [66, 109]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Usain Bolt likes Shanghai. Salvador Dal\u00ed likes Novosibirsk. Stephen Hawking likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is the athlete? Answer: No\n Premise: < Harper Lee likes Bangalore. Justin Bieber likes Geneva. Clarence Darrow likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the lawyer? Answer: Yes\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [54, 57], "Q": [88, 91], "K": [59, 62], "R": null, "K'": [[40, 48], [42, 53]], "V'": [[34, 43], [38, 46]], "example": [29, 99]}, {"END": [161, 162], "A": [157, 159], "V": [122, 126], "Q": [155, 156], "K": [128, 129], "R": null, "K'": [[109, 119], [112, 121]], "V'": [[104, 113], [107, 117]], "example": [100, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Usain Bolt likes Shanghai. Salvador Dal\u00ed likes Novosibirsk. Stephen Hawking likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is the athlete? Answer: No\n Premise: < Harper Lee likes Bangalore. Justin Bieber likes Geneva. Clarence Darrow likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the musician? Answer: No\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [54, 57], "Q": [88, 91], "K": [59, 62], "R": null, "K'": [[40, 48], [42, 53]], "V'": [[34, 43], [38, 46]], "example": [29, 99]}, {"END": [162, 163], "A": [157, 160], "V": [122, 126], "Q": [155, 156], "K": [128, 129], "R": null, "K'": [[109, 119], [112, 121]], "V'": [[104, 113], [107, 117]], "example": [100, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Georgia O'Keeffe likes Chiang Mai. Richard Dawkins likes Bangkok. LeBron James likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Kyoto is the scientist? Answer: No\n Premise: < Claude Monet likes Chiang Mai. George Orwell likes Brisbane. Neil deGrasse Tyson likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Brisbane is the author? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [48, 52], "Q": [82, 84], "K": [54, 56], "R": null, "K'": [[35, 44], [38, 47]], "V'": [[27, 39], [33, 42]], "example": [22, 92]}, {"END": [162, 163], "A": [158, 160], "V": [106, 109], "Q": [153, 157], "K": [111, 115], "R": null, "K'": [[102, 125], [105, 127]], "V'": [[97, 116], [100, 123]], "example": [93, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Georgia O'Keeffe likes Chiang Mai. Richard Dawkins likes Bangkok. LeBron James likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Kyoto is the scientist? Answer: No\n Premise: < Claude Monet likes Chiang Mai. George Orwell likes Brisbane. Neil deGrasse Tyson likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Brisbane is the artist? Answer: No\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [48, 52], "Q": [82, 84], "K": [54, 56], "R": null, "K'": [[35, 44], [38, 47]], "V'": [[27, 39], [33, 42]], "example": [22, 92]}, {"END": [162, 163], "A": [158, 160], "V": [106, 109], "Q": [153, 157], "K": [111, 115], "R": null, "K'": [[102, 125], [105, 127]], "V'": [[97, 116], [100, 123]], "example": [93, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Dr. Mehmet Oz likes Toronto. Jane Goodall likes Vancouver. Roger Federer likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the athlete? Answer: No\n Premise: < Eminem likes Birmingham. Meryl Streep likes Florence. Pablo Picasso likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Florence is the actor? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [34, 41], "Q": [87, 88], "K": [43, 44], "R": null, "K'": [[50, 58], [52, 61]], "V'": [[45, 53], [48, 56]], "example": [29, 96]}, {"END": [158, 159], "A": [154, 156], "V": [109, 115], "Q": [152, 153], "K": [117, 118], "R": null, "K'": [[106, 124], [108, 126]], "V'": [[101, 119], [104, 122]], "example": [97, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Dr. Mehmet Oz likes Toronto. Jane Goodall likes Vancouver. Roger Federer likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the athlete? Answer: No\n Premise: < Eminem likes Birmingham. Meryl Streep likes Florence. Pablo Picasso likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Florence is the artist? Answer: No\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [34, 41], "Q": [87, 88], "K": [43, 44], "R": null, "K'": [[50, 58], [52, 61]], "V'": [[45, 53], [48, 56]], "example": [29, 96]}, {"END": [158, 159], "A": [154, 156], "V": [109, 115], "Q": [152, 153], "K": [117, 118], "R": null, "K'": [[106, 124], [108, 126]], "V'": [[101, 119], [104, 122]], "example": [97, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the actor, the lawyer and the musician.\nPremise: < Rihanna likes Zurich. F. Lee Bailey likes Moscow. Alex Morgan likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is the athlete? Answer: No\n Premise: < Ruth Bader Ginsburg likes Manchester. Beyonc\u00e9 likes Florence. Jennifer Lawrence likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bern is the actor? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [35, 40], "Q": [76, 77], "K": [42, 43], "R": null, "K'": [[32, 48], [34, 50]], "V'": [[27, 44], [30, 46]], "example": [22, 85]}, {"END": [145, 146], "A": [141, 143], "V": [107, 110], "Q": [139, 140], "K": [112, 113], "R": null, "K'": [[98, 105], [99, 106]], "V'": [[90, 100], [96, 103]], "example": [86, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the athlete, the actor and the musician.\nPremise: < Rihanna likes Zurich. F. Lee Bailey likes Moscow. Alex Morgan likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is the athlete? Answer: No\n Premise: < Ruth Bader Ginsburg likes Manchester. Beyonc\u00e9 likes Florence. Jennifer Lawrence likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bern is the lawyer? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [35, 40], "Q": [76, 77], "K": [42, 43], "R": null, "K'": [[32, 48], [34, 50]], "V'": [[27, 44], [30, 46]], "example": [22, 85]}, {"END": [145, 146], "A": [141, 143], "V": [107, 110], "Q": [139, 140], "K": [112, 113], "R": null, "K'": [[98, 105], [99, 106]], "V'": [[90, 100], [96, 103]], "example": [86, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < Johnny Depp likes Madrid. Jane Goodall likes Pattaya. George Orwell likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright likes Canberra. Tom Brady likes Osaka. Norman Foster likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is the athlete? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [37, 40], "Q": [79, 82], "K": [42, 45], "R": null, "K'": [[35, 51], [36, 53]], "V'": [[30, 46], [33, 49]], "example": [25, 90]}, {"END": [153, 154], "A": [148, 151], "V": [104, 107], "Q": [145, 147], "K": [109, 111], "R": null, "K'": [[100, 117], [103, 119]], "V'": [[95, 112], [98, 115]], "example": [91, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < Johnny Depp likes Madrid. Jane Goodall likes Pattaya. George Orwell likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright likes Canberra. Tom Brady likes Osaka. Norman Foster likes Kyoto. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is the architect? Answer: No\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [37, 40], "Q": [79, 82], "K": [42, 45], "R": null, "K'": [[35, 51], [36, 53]], "V'": [[30, 46], [33, 49]], "example": [25, 90]}, {"END": [152, 153], "A": [148, 150], "V": [104, 107], "Q": [145, 147], "K": [109, 111], "R": null, "K'": [[100, 117], [103, 119]], "V'": [[95, 112], [98, 115]], "example": [91, 154]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the doctor, the entrepreneur, the lawyer, the scientist and the author.\nPremise: < Toni Morrison likes Canberra. Sonia Sotomayor likes Berlin. Roger Federer likes London. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is the author? Answer: No\n Premise: < Dr. Mehmet Oz likes Pattaya. Stephen Hawking likes Madrid. Bill Gates likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is the scientist? Answer: Yes\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [46, 53], "Q": [89, 90], "K": [55, 56], "R": null, "K'": [[42, 62], [45, 63]], "V'": [[35, 57], [40, 60]], "example": [30, 97]}, {"END": [161, 162], "A": [156, 159], "V": [115, 118], "Q": [154, 155], "K": [120, 121], "R": null, "K'": [[111, 127], [114, 128]], "V'": [[102, 122], [109, 125]], "example": [98, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the author, the scientist, the athlete, the entrepreneur and the doctor.\nPremise: < Toni Morrison likes Canberra. Sonia Sotomayor likes Berlin. Roger Federer likes London. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is the author? Answer: No\n Premise: < Dr. Mehmet Oz likes Pattaya. Stephen Hawking likes Madrid. Bill Gates likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is the doctor? Answer: No\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [46, 53], "Q": [89, 90], "K": [55, 56], "R": null, "K'": [[42, 62], [45, 63]], "V'": [[35, 57], [40, 60]], "example": [30, 97]}, {"END": [160, 161], "A": [156, 158], "V": [115, 118], "Q": [154, 155], "K": [120, 121], "R": null, "K'": [[111, 127], [114, 128]], "V'": [[102, 122], [109, 125]], "example": [98, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the author, the artist, the architect, the musician and the lawyer.\nPremise: < Johnny Depp likes Bras\u00edlia. Hillary Clinton likes Tokyo. Adele likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Tokyo is the actor? Answer: No\n Premise: < J.K. Rowling likes Kyoto. Ieoh Ming Pei likes New Delhi. Claude Monet likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to New Delhi is the architect? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [40, 44], "Q": [81, 82], "K": [46, 47], "R": null, "K'": [[37, 53], [39, 55]], "V'": [[32, 48], [35, 51]], "example": [27, 89]}, {"END": [160, 161], "A": [156, 158], "V": [105, 112], "Q": [152, 155], "K": [114, 117], "R": null, "K'": [[102, 123], [104, 126]], "V'": [[94, 118], [100, 121]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the musician, the architect, the artist and the author.\nPremise: < Johnny Depp likes Bras\u00edlia. Hillary Clinton likes Tokyo. Adele likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Tokyo is the actor? Answer: No\n Premise: < J.K. Rowling likes Kyoto. Ieoh Ming Pei likes New Delhi. Claude Monet likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to New Delhi is the artist? Answer: No\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [40, 44], "Q": [81, 82], "K": [46, 47], "R": null, "K'": [[37, 53], [39, 55]], "V'": [[32, 48], [35, 51]], "example": [27, 89]}, {"END": [160, 161], "A": [156, 158], "V": [105, 112], "Q": [152, 155], "K": [114, 117], "R": null, "K'": [[102, 123], [104, 126]], "V'": [[94, 118], [100, 121]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Cristiano Ronaldo likes Bras\u00edlia. Kanye West likes Pattaya. Ieoh Ming Pei likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bras\u00edlia is the athlete? Answer: Yes\n Premise: < Serena Williams likes Toronto. Vincent van Gogh likes Seoul. Frank Lloyd Wright likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Incheon is the architect? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [27, 32], "Q": [85, 87], "K": [34, 36], "R": null, "K'": [[43, 56], [46, 59]], "V'": [[37, 47], [41, 54]], "example": [22, 95]}, {"END": [159, 160], "A": [155, 157], "V": [117, 120], "Q": [151, 154], "K": [122, 125], "R": null, "K'": [[105, 114], [106, 116]], "V'": [[100, 107], [103, 112]], "example": [96, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Cristiano Ronaldo likes Bras\u00edlia. Kanye West likes Pattaya. Ieoh Ming Pei likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bras\u00edlia is the athlete? Answer: Yes\n Premise: < Serena Williams likes Toronto. Vincent van Gogh likes Seoul. Frank Lloyd Wright likes Incheon. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Incheon is the artist? Answer: No\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [27, 32], "Q": [85, 87], "K": [34, 36], "R": null, "K'": [[43, 56], [46, 59]], "V'": [[37, 47], [41, 54]], "example": [22, 95]}, {"END": [159, 160], "A": [155, 157], "V": [117, 120], "Q": [151, 154], "K": [122, 125], "R": null, "K'": [[105, 114], [106, 116]], "V'": [[100, 107], [103, 112]], "example": [96, 161]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Shanghai attracts Usain Bolt. Novosibirsk attracts Salvador Dal\u00ed. Bangkok attracts Stephen Hawking. >. So who wants to go to Bangkok? the scientist\n < Geneva attracts Harper Lee. Canberra attracts Justin Bieber. Kyoto attracts Clarence Darrow. >. So who wants to go to Kyoto? the lawyer\n", "ranges": [{"END": [71, 72], "A": [72, 74], "V": [55, 58], "Q": [67, 70], "K": [50, 53], "R": null, "K'": [[30, 39], [32, 44]], "V'": [[34, 46], [38, 49]], "example": [29, 74]}, {"END": [114, 115], "A": [115, 116], "V": [98, 102], "Q": [111, 113], "K": [94, 96], "R": null, "K'": [[76, 84], [78, 87]], "V'": [[80, 89], [83, 93]], "example": [75, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< London attracts Dr. Gabor Mat\u00e9. Florence attracts Simone Biles. Bangalore attracts Mies van der Rohe. >. So who wants to go to London? the doctor\n < Rio de Janeiro attracts Zaha Hadid. Osaka attracts Cristiano Ronaldo. Moscow attracts Eminem. >. So who wants to go to Rio de Janeiro? the architect\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [26, 32], "Q": [61, 62], "K": [23, 24], "R": null, "K'": [[33, 41], [34, 44]], "V'": [[36, 46], [40, 52]], "example": [22, 65]}, {"END": [106, 107], "A": [107, 108], "V": [72, 76], "Q": [102, 105], "K": [67, 70], "R": null, "K'": [[77, 87], [79, 88]], "V'": [[81, 90], [86, 93]], "example": [66, 108]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Bras\u00edlia attracts Neil deGrasse Tyson. Saint Petersburg attracts Vincent van Gogh. Mumbai attracts Dr. Neil deGrasse Tyson. >. So who wants to go to Mumbai? the doctor\n < Guangzhou attracts Claude Monet. Hamburg attracts Lady Gaga. Paris attracts Johnnie Cochran. >. So who wants to go to Guangzhou? the artist\n", "ranges": [{"END": [75, 76], "A": [76, 77], "V": [53, 62], "Q": [71, 74], "K": [48, 51], "R": null, "K'": [[26, 38], [28, 40]], "V'": [[30, 55, 42], [37, 62, 47]], "example": [25, 77]}, {"END": [118, 119], "A": [119, 120], "V": [85, 88], "Q": [113, 117], "K": [79, 83], "R": null, "K'": [[89, 96], [90, 97]], "V'": [[92, 99], [95, 104]], "example": [78, 120]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Florence attracts Kanye West. New Delhi attracts LeBron James. Vancouver attracts Eminem. >. So who wants to go to New Delhi? the athlete\n < Venice attracts Tom Brady. Valencia attracts Leonardo da Vinci. Bangalore attracts Rem Koolhaas. >. So who wants to go to Venice? the athlete\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [36, 40], "Q": [57, 60], "K": [31, 34], "R": null, "K'": [[23, 41], [24, 43]], "V'": [[26, 45], [30, 48]], "example": [22, 64]}, {"END": [106, 107], "A": [107, 109], "V": [70, 73], "Q": [103, 105], "K": [66, 68], "R": null, "K'": [[74, 84], [76, 87]], "V'": [[78, 89], [83, 94]], "example": [65, 109]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Marseille attracts Dr. Temple Grandin. Zurich attracts Agatha Christie. Chiang Mai attracts Dr. Sylvia Earle. >. So who wants to go to Zurich? the author\n < Sydney attracts Bill Gates. Lyon attracts LeBron James. Manchester attracts Vincent van Gogh. >. So who wants to go to Manchester? the artist\n", "ranges": [{"END": [70, 71], "A": [71, 72], "V": [41, 46], "Q": [67, 69], "K": [37, 39], "R": null, "K'": [[27, 47], [29, 50]], "V'": [[31, 52], [36, 58]], "example": [26, 72]}, {"END": [108, 109], "A": [109, 110], "V": [92, 97], "Q": [106, 107], "K": [89, 90], "R": null, "K'": [[74, 81], [75, 82]], "V'": [[77, 84], [80, 88]], "example": [73, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the author, the athlete and the actor.\n< Barcelona attracts Johnny Depp. Berlin attracts Jane Goodall. Bras\u00edlia attracts George Orwell. >. So who wants to go to Berlin? the scientist\n < Beijing attracts LeBron James. Moscow attracts Agatha Christie. Chiang Mai attracts Charlize Theron. >. So who wants to go to Beijing? the athlete\n", "ranges": [{"END": [55, 56], "A": [56, 58], "V": [33, 36], "Q": [53, 54], "K": [30, 31], "R": null, "K'": [[23, 37], [24, 39]], "V'": [[26, 41], [29, 44]], "example": [22, 58]}, {"END": [102, 103], "A": [103, 105], "V": [65, 69], "Q": [98, 101], "K": [60, 63], "R": null, "K'": [[70, 79], [71, 82]], "V'": [[73, 84], [78, 89]], "example": [59, 105]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer and the author.\n< London attracts Sergey Brin. Ottawa attracts Bill Gates. Valencia attracts Jane Austen. >. So who wants to go to Valencia? the author\n < Canberra attracts Toni Morrison. Moscow attracts Sonia Sotomayor. London attracts Roger Federer. >. So who wants to go to Moscow? the lawyer\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [44, 47], "Q": [56, 58], "K": [40, 42], "R": null, "K'": [[24, 32], [25, 34]], "V'": [[27, 36], [31, 39]], "example": [23, 61]}, {"END": [102, 103], "A": [103, 104], "V": [77, 84], "Q": [100, 101], "K": [74, 75], "R": null, "K'": [[63, 85], [66, 86]], "V'": [[68, 88], [73, 91]], "example": [62, 104]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist and the musician.\n< Novosibirsk attracts Nikola Tesla. Hamburg attracts Taylor Swift. New York attracts Natalie Portman. >. So who wants to go to Novosibirsk? the scientist\n < Munich attracts Lady Gaga. Incheon attracts Natalie Portman. Barcelona attracts Neil deGrasse Tyson. >. So who wants to go to Barcelona? the scientist\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [27, 32], "Q": [56, 61], "K": [20, 25], "R": null, "K'": [[33, 39], [34, 41]], "V'": [[36, 43], [38, 47]], "example": [19, 65]}, {"END": [106, 107], "A": [107, 109], "V": [88, 95], "Q": [104, 105], "K": [85, 86], "R": null, "K'": [[67, 75], [69, 78]], "V'": [[71, 80], [74, 84]], "example": [66, 109]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Shanghai attracts Usain Bolt. Novosibirsk attracts Salvador Dal\u00ed. Bangkok attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is the athlete? Answer: No\n Premise: < Bangalore attracts Harper Lee. Geneva attracts Justin Bieber. Toronto attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the lawyer? Answer: Yes\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [59, 62], "Q": [88, 91], "K": [54, 57], "R": null, "K'": [[34, 43], [36, 48]], "V'": [[38, 50], [42, 53]], "example": [29, 99]}, {"END": [161, 162], "A": [157, 159], "V": [125, 129], "Q": [155, 156], "K": [122, 123], "R": null, "K'": [[104, 113], [107, 115]], "V'": [[109, 117], [112, 121]], "example": [100, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Shanghai attracts Usain Bolt. Novosibirsk attracts Salvador Dal\u00ed. Bangkok attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is the athlete? Answer: No\n Premise: < Bangalore attracts Harper Lee. Geneva attracts Justin Bieber. Toronto attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the musician? Answer: No\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [59, 62], "Q": [88, 91], "K": [54, 57], "R": null, "K'": [[34, 43], [36, 48]], "V'": [[38, 50], [42, 53]], "example": [29, 99]}, {"END": [162, 163], "A": [157, 160], "V": [125, 129], "Q": [155, 156], "K": [122, 123], "R": null, "K'": [[104, 113], [107, 115]], "V'": [[109, 117], [112, 121]], "example": [100, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Chiang Mai attracts Georgia O'Keeffe. Bangkok attracts Richard Dawkins. Kyoto attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Kyoto is the scientist? Answer: No\n Premise: < Chiang Mai attracts Claude Monet. Brisbane attracts George Orwell. Venice attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Brisbane is the author? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [52, 56], "Q": [82, 84], "K": [48, 50], "R": null, "K'": [[27, 39], [30, 42]], "V'": [[32, 44], [38, 47]], "example": [22, 92]}, {"END": [162, 163], "A": [158, 160], "V": [112, 115], "Q": [153, 157], "K": [106, 110], "R": null, "K'": [[97, 116], [100, 118]], "V'": [[102, 120], [105, 127]], "example": [93, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Chiang Mai attracts Georgia O'Keeffe. Bangkok attracts Richard Dawkins. Kyoto attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Kyoto is the scientist? Answer: No\n Premise: < Chiang Mai attracts Claude Monet. Brisbane attracts George Orwell. Venice attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Brisbane is the artist? Answer: No\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [52, 56], "Q": [82, 84], "K": [48, 50], "R": null, "K'": [[27, 39], [30, 42]], "V'": [[32, 44], [38, 47]], "example": [22, 92]}, {"END": [162, 163], "A": [158, 160], "V": [112, 115], "Q": [153, 157], "K": [106, 110], "R": null, "K'": [[97, 116], [100, 118]], "V'": [[102, 120], [105, 127]], "example": [93, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Toronto attracts Dr. Mehmet Oz. Vancouver attracts Jane Goodall. Pattaya attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the athlete? Answer: No\n Premise: < Birmingham attracts Eminem. Florence attracts Meryl Streep. Geneva attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Florence is the actor? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [37, 44], "Q": [87, 88], "K": [34, 35], "R": null, "K'": [[45, 53], [47, 56]], "V'": [[49, 58], [52, 61]], "example": [29, 96]}, {"END": [158, 159], "A": [154, 156], "V": [112, 118], "Q": [152, 153], "K": [109, 110], "R": null, "K'": [[101, 119], [103, 121]], "V'": [[105, 123], [108, 126]], "example": [97, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Toronto attracts Dr. Mehmet Oz. Vancouver attracts Jane Goodall. Pattaya attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Toronto is the athlete? Answer: No\n Premise: < Birmingham attracts Eminem. Florence attracts Meryl Streep. Geneva attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Florence is the artist? Answer: No\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [37, 44], "Q": [87, 88], "K": [34, 35], "R": null, "K'": [[45, 53], [47, 56]], "V'": [[49, 58], [52, 61]], "example": [29, 96]}, {"END": [158, 159], "A": [154, 156], "V": [112, 118], "Q": [152, 153], "K": [109, 110], "R": null, "K'": [[101, 119], [103, 121]], "V'": [[105, 123], [108, 126]], "example": [97, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the actor, the lawyer and the musician.\nPremise: < Zurich attracts Rihanna. Moscow attracts F. Lee Bailey. Los Angeles attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is the athlete? Answer: No\n Premise: < Manchester attracts Ruth Bader Ginsburg. Florence attracts Beyonc\u00e9. Bern attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bern is the actor? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [38, 43], "Q": [76, 77], "K": [35, 36], "R": null, "K'": [[27, 44], [29, 46]], "V'": [[31, 48], [34, 50]], "example": [22, 85]}, {"END": [145, 146], "A": [141, 143], "V": [110, 113], "Q": [139, 140], "K": [107, 108], "R": null, "K'": [[90, 100], [91, 101]], "V'": [[93, 103], [99, 106]], "example": [86, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the athlete, the actor and the musician.\nPremise: < Zurich attracts Rihanna. Moscow attracts F. Lee Bailey. Los Angeles attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is the athlete? Answer: No\n Premise: < Manchester attracts Ruth Bader Ginsburg. Florence attracts Beyonc\u00e9. Bern attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bern is the lawyer? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [38, 43], "Q": [76, 77], "K": [35, 36], "R": null, "K'": [[27, 44], [29, 46]], "V'": [[31, 48], [34, 50]], "example": [22, 85]}, {"END": [145, 146], "A": [141, 143], "V": [110, 113], "Q": [139, 140], "K": [107, 108], "R": null, "K'": [[90, 100], [91, 101]], "V'": [[93, 103], [99, 106]], "example": [86, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < Madrid attracts Johnny Depp. Pattaya attracts Jane Goodall. Geneva attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is the scientist? Answer: Yes\n Premise: < Canberra attracts Frank Lloyd Wright. Osaka attracts Tom Brady. Kyoto attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is the athlete? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [42, 45], "Q": [79, 82], "K": [37, 40], "R": null, "K'": [[30, 46], [31, 48]], "V'": [[33, 50], [36, 53]], "example": [25, 90]}, {"END": [153, 154], "A": [148, 151], "V": [108, 111], "Q": [145, 147], "K": [104, 106], "R": null, "K'": [[95, 112], [98, 114]], "V'": [[100, 116], [103, 119]], "example": [91, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < Madrid attracts Johnny Depp. Pattaya attracts Jane Goodall. Geneva attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is the scientist? Answer: Yes\n Premise: < Canberra attracts Frank Lloyd Wright. Osaka attracts Tom Brady. Kyoto attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is the architect? Answer: No\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [42, 45], "Q": [79, 82], "K": [37, 40], "R": null, "K'": [[30, 46], [31, 48]], "V'": [[33, 50], [36, 53]], "example": [25, 90]}, {"END": [152, 153], "A": [148, 150], "V": [108, 111], "Q": [145, 147], "K": [104, 106], "R": null, "K'": [[95, 112], [98, 114]], "V'": [[100, 116], [103, 119]], "example": [91, 154]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the doctor, the entrepreneur, the lawyer, the scientist and the author.\nPremise: < Canberra attracts Toni Morrison. Berlin attracts Sonia Sotomayor. London attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is the author? Answer: No\n Premise: < Pattaya attracts Dr. Mehmet Oz. Madrid attracts Stephen Hawking. Tokyo attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is the scientist? Answer: Yes\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [49, 56], "Q": [89, 90], "K": [46, 47], "R": null, "K'": [[35, 57], [38, 58]], "V'": [[40, 60], [45, 63]], "example": [30, 97]}, {"END": [161, 162], "A": [156, 159], "V": [118, 121], "Q": [154, 155], "K": [115, 116], "R": null, "K'": [[102, 122], [105, 123]], "V'": [[107, 125], [114, 128]], "example": [98, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the author, the scientist, the athlete, the entrepreneur and the doctor.\nPremise: < Canberra attracts Toni Morrison. Berlin attracts Sonia Sotomayor. London attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is the author? Answer: No\n Premise: < Pattaya attracts Dr. Mehmet Oz. Madrid attracts Stephen Hawking. Tokyo attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is the doctor? Answer: No\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [49, 56], "Q": [89, 90], "K": [46, 47], "R": null, "K'": [[35, 57], [38, 58]], "V'": [[40, 60], [45, 63]], "example": [30, 97]}, {"END": [160, 161], "A": [156, 158], "V": [118, 121], "Q": [154, 155], "K": [115, 116], "R": null, "K'": [[102, 122], [105, 123]], "V'": [[107, 125], [114, 128]], "example": [98, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the author, the artist, the architect, the musician and the lawyer.\nPremise: < Bras\u00edlia attracts Johnny Depp. Tokyo attracts Hillary Clinton. Geneva attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Tokyo is the actor? Answer: No\n Premise: < Kyoto attracts J.K. Rowling. New Delhi attracts Ieoh Ming Pei. Bangkok attracts Claude Monet. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to New Delhi is the architect? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [43, 47], "Q": [81, 82], "K": [40, 41], "R": null, "K'": [[32, 48], [34, 50]], "V'": [[36, 52], [39, 55]], "example": [27, 89]}, {"END": [160, 161], "A": [156, 158], "V": [110, 117], "Q": [152, 155], "K": [105, 108], "R": null, "K'": [[94, 118], [96, 121]], "V'": [[98, 123], [104, 126]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the musician, the architect, the artist and the author.\nPremise: < Bras\u00edlia attracts Johnny Depp. Tokyo attracts Hillary Clinton. Geneva attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Tokyo is the actor? Answer: No\n Premise: < Kyoto attracts J.K. Rowling. New Delhi attracts Ieoh Ming Pei. Bangkok attracts Claude Monet. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to New Delhi is the artist? Answer: No\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [43, 47], "Q": [81, 82], "K": [40, 41], "R": null, "K'": [[32, 48], [34, 50]], "V'": [[36, 52], [39, 55]], "example": [27, 89]}, {"END": [160, 161], "A": [156, 158], "V": [110, 117], "Q": [152, 155], "K": [105, 108], "R": null, "K'": [[94, 118], [96, 121]], "V'": [[98, 123], [104, 126]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Bras\u00edlia attracts Cristiano Ronaldo. Pattaya attracts Kanye West. Bangkok attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bras\u00edlia is the athlete? Answer: Yes\n Premise: < Toronto attracts Serena Williams. Seoul attracts Vincent van Gogh. Incheon attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Incheon is the architect? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [31, 36], "Q": [85, 87], "K": [27, 29], "R": null, "K'": [[37, 47], [40, 50]], "V'": [[42, 52], [46, 59]], "example": [22, 95]}, {"END": [159, 160], "A": [155, 157], "V": [122, 125], "Q": [151, 154], "K": [117, 120], "R": null, "K'": [[100, 107], [101, 109]], "V'": [[103, 111], [106, 116]], "example": [96, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Bras\u00edlia attracts Cristiano Ronaldo. Pattaya attracts Kanye West. Bangkok attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bras\u00edlia is the athlete? Answer: Yes\n Premise: < Toronto attracts Serena Williams. Seoul attracts Vincent van Gogh. Incheon attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Incheon is the artist? Answer: No\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [31, 36], "Q": [85, 87], "K": [27, 29], "R": null, "K'": [[37, 47], [40, 50]], "V'": [[42, 52], [46, 59]], "example": [22, 95]}, {"END": [159, 160], "A": [155, 157], "V": [122, 125], "Q": [151, 154], "K": [117, 120], "R": null, "K'": [[100, 107], [101, 109]], "V'": [[103, 111], [106, 116]], "example": [96, 161]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the musician, the actor, the lawyer, the athlete and the scientist.\n< Ieoh Ming Pei likes Manchester. Justin Bieber likes Bangkok. Roger Federer likes Bangkok. >. The person who wants to go to Bangkok is not the architect\n < Jennifer Lawrence likes Guangzhou. Sonia Sotomayor likes Guangzhou. Rosie Franklin likes Osaka. >. The person who wants to go to Guangzhou is not the scientist\n", "ranges": [{"END": [74, 75], "A'": [75, 76], "V'": [30, 37], "Q": [69, 72], "K'": [39, 40], "R": [73, 74], "K": [[47, 56], [50, 59]], "V": [[41, 51], [45, 54]], "example": [29, 76]}, {"END": [125, 126], "A'": [126, 128], "V'": [102, 105], "Q": [119, 123], "K'": [107, 109], "R": [124, 125], "K": [[83, 97], [87, 101]], "V": [[78, 88], [81, 95]], "example": [77, 128]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the artist, the entrepreneur, the lawyer and the doctor.\n< Jeff Bezos likes Venice. Norman Foster likes Toronto. Rem Koolhaas likes Toronto. >. The person who wants to go to Toronto is not the entrepreneur\n < Pablo Picasso likes Bras\u00edlia. Thurgood Marshall likes Manchester. Dr. Sylvia Earle likes Bras\u00edlia. >. The person who wants to go to Bras\u00edlia is not the lawyer\n", "ranges": [{"END": [62, 63], "A'": [63, 66], "V'": [26, 29], "Q": [59, 60], "K'": [31, 33], "R": [61, 62], "K": [[39, 48], [40, 49]], "V": [[34, 41], [37, 46]], "example": [25, 66]}, {"END": [108, 109], "A'": [109, 110], "V'": [76, 80], "Q": [104, 106], "K'": [82, 83], "R": [107, 108], "K": [[73, 92], [75, 94]], "V": [[68, 84], [71, 90]], "example": [67, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the author, the scientist and the entrepreneur.\n< Louis Sullivan likes Venice. Agatha Christie likes Brisbane. Norman Foster likes Venice. >. The person who wants to go to Venice is not the author\n < Stephen Hawking likes Seoul. Sergey Brin likes Mumbai. J.R.R. Tolkien likes Mumbai. >. The person who wants to go to Mumbai is not the scientist\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [33, 38], "Q": [62, 64], "K'": [40, 44], "R": [65, 66], "K": [[30, 50], [32, 52]], "V": [[24, 45], [28, 48]], "example": [23, 68]}, {"END": [117, 118], "A'": [118, 120], "V'": [70, 73], "Q": [112, 115], "K'": [75, 77], "R": [116, 117], "K": [[84, 99], [87, 102]], "V": [[78, 88], [82, 97]], "example": [69, 120]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author and the artist.\n< Dr. Jane Goodall likes Osaka. Frida Kahlo likes Osaka. George Orwell likes Sydney. >. The person who wants to go to Osaka is not the author\n < Dr. Michio Kaku likes Birmingham. Toni Morrison likes Birmingham. Thurgood Marshall likes Paris. >. The person who wants to go to Birmingham is not the lawyer\n", "ranges": [{"END": [61, 62], "A'": [62, 63], "V'": [41, 44], "Q": [57, 59], "K'": [46, 47], "R": [60, 61], "K": [[28, 38], [30, 40]], "V": [[21, 31], [26, 36]], "example": [20, 63]}, {"END": [107, 108], "A'": [108, 109], "V'": [86, 90], "Q": [103, 105], "K'": [92, 93], "R": [106, 107], "K": [[73, 83], [75, 85]], "V": [[65, 76], [71, 81]], "example": [64, 109]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the architect and the artist.\n< Maya Lin likes Bangkok. Vincent van Gogh likes New York. Mies van der Rohe likes Bangkok. >. The person who wants to go to Bangkok is not the artist\n < Carl Sagan likes Seoul. Norman Foster likes Manchester. Lionel Messi likes Seoul. >. The person who wants to go to Seoul is not the architect\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [32, 37], "Q": [63, 66], "K'": [39, 41], "R": [67, 68], "K": [[28, 50], [31, 53]], "V": [[23, 42], [26, 48]], "example": [22, 70]}, {"END": [109, 110], "A'": [110, 111], "V'": [80, 83], "Q": [105, 107], "K'": [85, 86], "R": [108, 109], "K": [[77, 93], [79, 95]], "V": [[72, 87], [75, 91]], "example": [71, 111]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the architect, the actor and the artist.\n< Frida Kahlo likes Marseille. Alex Morgan likes Bangkok. Louis Sullivan likes Bangkok. >. The person who wants to go to Bangkok is not the artist\n < Ieoh Ming Pei likes Shanghai. Natalie Portman likes Bern. Albert Einstein likes Bern. >. The person who wants to go to Bern is not the architect\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [26, 31], "Q": [63, 66], "K'": [33, 35], "R": [67, 68], "K": [[40, 50], [43, 53]], "V": [[36, 44], [38, 48]], "example": [25, 70]}, {"END": [111, 112], "A'": [112, 113], "V'": [72, 79], "Q": [108, 109], "K'": [81, 83], "R": [110, 111], "K": [[90, 97], [91, 98]], "V": [[84, 92], [88, 95]], "example": [71, 113]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the artist, the author, the musician and the actor.\n< Rosie Franklin likes Rio de Janeiro. Michelangelo likes Sydney. Rihanna likes Sydney. >. The person who wants to go to Sydney is not the scientist\n < Johnny Depp likes Madrid. Jane Goodall likes Rio de Janeiro. George Orwell likes Madrid. >. The person who wants to go to Madrid is not the scientist\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [26, 29], "Q": [58, 59], "K'": [31, 34], "R": [60, 61], "K": [[40, 47], [41, 48]], "V": [[35, 42], [38, 45]], "example": [25, 64]}, {"END": [101, 102], "A'": [102, 104], "V'": [73, 76], "Q": [98, 99], "K'": [78, 81], "R": [100, 101], "K": [[71, 87], [72, 88]], "V": [[66, 82], [69, 85]], "example": [65, 104]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the doctor, the author and the athlete.\n< Dr. Jane Goodall likes Sao Paulo. Michael Phelps likes Osaka. Sergey Brin likes Osaka. >. The person who wants to go to Osaka is not the doctor\n < Toni Morrison likes Ottawa. Steve Jobs likes London. Agatha Christie likes Ottawa. >. The person who wants to go to Ottawa is not the entrepreneur\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [24, 29], "Q": [62, 64], "K'": [31, 34], "R": [65, 66], "K": [[41, 50], [43, 52]], "V": [[35, 44], [39, 48]], "example": [23, 68]}, {"END": [110, 111], "A'": [111, 114], "V'": [80, 83], "Q": [106, 108], "K'": [85, 86], "R": [109, 110], "K": [[77, 94], [79, 96]], "V": [[70, 87], [75, 92]], "example": [69, 114]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the actor, the architect, the lawyer and the musician.\nPremise: < Ieoh Ming Pei likes Manchester. Justin Bieber likes Bangkok. Roger Federer likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is not the architect? Answer: Yes\n Premise: < Dr. Sanjay Gupta likes Shanghai. Jennifer Lawrence likes Shanghai. F. Lee Bailey likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Shanghai is not the lawyer? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [33, 40], "Q": [88, 91], "K'": [42, 43], "R": [92, 93], "K": [[50, 59], [53, 62]], "V": [[44, 54], [48, 57]], "example": [28, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [124, 129], "Q": [159, 161], "K'": [131, 133], "R": [162, 163], "K": [[113, 121], [115, 123]], "V": [[104, 116], [111, 119]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the architect, the athlete, the musician, the lawyer and the actor.\nPremise: < Ieoh Ming Pei likes Manchester. Justin Bieber likes Bangkok. Roger Federer likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is not the architect? Answer: Yes\n Premise: < Dr. Sanjay Gupta likes Shanghai. Jennifer Lawrence likes Shanghai. F. Lee Bailey likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Shanghai is not the actor? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [33, 40], "Q": [88, 91], "K'": [42, 43], "R": [92, 93], "K": [[50, 59], [53, 62]], "V": [[44, 54], [48, 57]], "example": [28, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [124, 129], "Q": [159, 161], "K'": [131, 133], "R": [162, 163], "K": [[113, 121], [115, 123]], "V": [[104, 116], [111, 119]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the scientist, the author and the architect.\nPremise: < Barack Obama likes Moscow. Jeff Bezos likes Barcelona. Carl Sagan likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is not the entrepreneur? Answer: Yes\n Premise: < Norman Foster likes Pattaya. J.R.R. Tolkien likes Pattaya. Marie Curie likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the scientist? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [81, 85], "V'": [39, 42], "Q": [78, 79], "K'": [44, 45], "R": [80, 81], "K": [[37, 51], [38, 52]], "V": [[31, 46], [35, 49]], "example": [26, 89]}, {"END": [161, 162], "A'": [156, 159], "V'": [118, 121], "Q": [151, 154], "K'": [123, 125], "R": [155, 156], "K": [[99, 114], [102, 117]], "V": [[94, 103], [97, 112]], "example": [90, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the entrepreneur, the author, the architect and the lawyer.\nPremise: < Barack Obama likes Moscow. Jeff Bezos likes Barcelona. Carl Sagan likes Moscow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is not the entrepreneur? Answer: Yes\n Premise: < Norman Foster likes Pattaya. J.R.R. Tolkien likes Pattaya. Marie Curie likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the author? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [81, 85], "V'": [39, 42], "Q": [78, 79], "K'": [44, 45], "R": [80, 81], "K": [[37, 51], [38, 52]], "V": [[31, 46], [35, 49]], "example": [26, 89]}, {"END": [160, 161], "A'": [156, 158], "V'": [118, 121], "Q": [151, 154], "K'": [123, 125], "R": [155, 156], "K": [[99, 114], [102, 117]], "V": [[94, 103], [97, 112]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the architect, the lawyer and the musician.\nPremise: < Zaha Hadid likes Guangzhou. Lady Gaga likes Vancouver. Ruth Bader Ginsburg likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vancouver is not the architect? Answer: Yes\n Premise: < Adele likes Barcelona. Hillary Clinton likes Chiang Mai. Dr. Gabor Mat\u00e9 likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Chiang Mai is not the musician? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [81, 83], "K'": [32, 36], "R": [84, 85], "K": [[42, 53], [44, 55]], "V": [[37, 45], [40, 51]], "example": [21, 91]}, {"END": [160, 161], "A'": [155, 158], "V'": [96, 99], "Q": [150, 153], "K'": [101, 102], "R": [154, 155], "K": [[109, 121], [112, 124]], "V": [[103, 113], [107, 119]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the lawyer, the doctor and the architect.\nPremise: < Zaha Hadid likes Guangzhou. Lady Gaga likes Vancouver. Ruth Bader Ginsburg likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vancouver is not the architect? Answer: Yes\n Premise: < Adele likes Barcelona. Hillary Clinton likes Chiang Mai. Dr. Gabor Mat\u00e9 likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Chiang Mai is not the doctor? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [81, 83], "K'": [32, 36], "R": [84, 85], "K": [[42, 53], [44, 55]], "V": [[37, 45], [40, 51]], "example": [21, 91]}, {"END": [159, 160], "A'": [155, 157], "V'": [96, 99], "Q": [150, 153], "K'": [101, 102], "R": [154, 155], "K": [[109, 121], [112, 124]], "V": [[103, 113], [107, 119]], "example": [92, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the actor, the doctor and the scientist.\nPremise: < Thurgood Marshall likes Madrid. Dr. Anthony Fauci likes Venice. Meryl Streep likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Venice is not the doctor? Answer: No\n Premise: < Dr. Michio Kaku likes Paris. Denzel Washington likes Valencia. Stephen Hawking likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Paris is not the actor? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [81, 83], "K'": [32, 33], "R": [84, 85], "K": [[42, 53], [44, 55]], "V": [[34, 45], [40, 51]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [106, 109], "Q": [146, 147], "K'": [111, 113], "R": [148, 149], "K": [[104, 119], [105, 120]], "V": [[96, 114], [102, 117]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the lawyer and the scientist.\nPremise: < Thurgood Marshall likes Madrid. Dr. Anthony Fauci likes Venice. Meryl Streep likes Venice. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Venice is not the doctor? Answer: No\n Premise: < Dr. Michio Kaku likes Paris. Denzel Washington likes Valencia. Stephen Hawking likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Paris is not the doctor? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [81, 83], "K'": [32, 33], "R": [84, 85], "K": [[42, 53], [44, 55]], "V": [[34, 45], [40, 51]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [106, 109], "Q": [146, 147], "K'": [111, 113], "R": [148, 149], "K": [[104, 119], [105, 120]], "V": [[96, 114], [102, 117]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Larry Page likes Canberra. Dr. Sanjay Gupta likes Bangalore. Michael Phelps likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Canberra is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran likes Chiang Mai. Richard Dawkins likes Geneva. Stephen King likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Geneva is not the lawyer? Answer: Yes\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [43, 50], "Q": [91, 94], "K'": [52, 55], "R": [95, 96], "K": [[39, 62], [42, 65]], "V": [[35, 56], [37, 60]], "example": [30, 102]}, {"END": [166, 167], "A'": [162, 164], "V'": [107, 112], "Q": [158, 160], "K'": [114, 117], "R": [161, 162], "K": [[123, 130], [125, 132]], "V": [[118, 126], [121, 128]], "example": [103, 168]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Larry Page likes Canberra. Dr. Sanjay Gupta likes Bangalore. Michael Phelps likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Canberra is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran likes Chiang Mai. Richard Dawkins likes Geneva. Stephen King likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Geneva is not the scientist? Answer: No\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [43, 50], "Q": [91, 94], "K'": [52, 55], "R": [95, 96], "K": [[39, 62], [42, 65]], "V": [[35, 56], [37, 60]], "example": [30, 102]}, {"END": [167, 168], "A'": [162, 165], "V'": [107, 112], "Q": [158, 160], "K'": [114, 117], "R": [161, 162], "K": [[123, 130], [125, 132]], "V": [[118, 126], [121, 128]], "example": [103, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Dr. Jane Goodall likes Sao Paulo. Michael Phelps likes Osaka. Sergey Brin likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the doctor? Answer: Yes\n Premise: < Sergey Brin likes London. Bill Gates likes London. Jane Austen likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to London is not the author? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [28, 33], "Q": [82, 84], "K'": [35, 38], "R": [85, 86], "K": [[45, 54], [47, 56]], "V": [[39, 48], [43, 52]], "example": [23, 92]}, {"END": [155, 156], "A'": [151, 153], "V'": [112, 115], "Q": [148, 149], "K'": [117, 122], "R": [150, 151], "K": [[103, 110], [104, 111]], "V": [[97, 105], [101, 108]], "example": [93, 157]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Dr. Jane Goodall likes Sao Paulo. Michael Phelps likes Osaka. Sergey Brin likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the doctor? Answer: Yes\n Premise: < Sergey Brin likes London. Bill Gates likes London. Jane Austen likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to London is not the entrepreneur? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [28, 33], "Q": [82, 84], "K'": [35, 38], "R": [85, 86], "K": [[45, 54], [47, 56]], "V": [[39, 48], [43, 52]], "example": [23, 92]}, {"END": [157, 158], "A'": [151, 155], "V'": [112, 115], "Q": [148, 149], "K'": [117, 122], "R": [150, 151], "K": [[103, 110], [104, 111]], "V": [[97, 105], [101, 108]], "example": [93, 159]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the architect, the entrepreneur, the athlete, the scientist and the actor.\nPremise: < Barack Obama likes Mumbai. Albert Einstein likes Madrid. Serena Williams likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is not the lawyer? Answer: Yes\n Premise: < Brad Pitt likes Tokyo. Ieoh Ming Pei likes Berlin. Larry Page likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is not the actor? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [35, 39], "Q": [84, 85], "K'": [41, 44], "R": [86, 87], "K": [[50, 57], [51, 58]], "V": [[45, 52], [48, 55]], "example": [30, 93]}, {"END": [153, 154], "A'": [149, 151], "V'": [98, 100], "Q": [146, 147], "K'": [102, 103], "R": [148, 149], "K": [[113, 119], [114, 120]], "V": [[104, 115], [111, 117]], "example": [94, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the architect, the scientist, the lawyer, the athlete and the entrepreneur.\nPremise: < Barack Obama likes Mumbai. Albert Einstein likes Madrid. Serena Williams likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is not the lawyer? Answer: Yes\n Premise: < Brad Pitt likes Tokyo. Ieoh Ming Pei likes Berlin. Larry Page likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is not the architect? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [35, 39], "Q": [84, 85], "K'": [41, 44], "R": [86, 87], "K": [[50, 57], [51, 58]], "V": [[45, 52], [48, 55]], "example": [30, 93]}, {"END": [153, 154], "A'": [149, 151], "V'": [98, 100], "Q": [146, 147], "K'": [102, 103], "R": [148, 149], "K": [[113, 119], [114, 120]], "V": [[104, 115], [111, 117]], "example": [94, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Simone Biles likes Osaka. Nikola Tesla likes Chiang Mai. Ruth Bader Ginsburg likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the lawyer? Answer: No\n Premise: < Toni Morrison likes New Delhi. Claude Monet likes Pattaya. Ed Sheeran likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the author? Answer: Yes\n", "ranges": [{"END": [98, 99], "A'": [94, 96], "V'": [43, 48], "Q": [90, 92], "K'": [50, 53], "R": [93, 94], "K": [[40, 62], [42, 64]], "V": [[34, 54], [38, 60]], "example": [29, 100]}, {"END": [169, 170], "A'": [165, 167], "V'": [105, 110], "Q": [160, 163], "K'": [112, 115], "R": [164, 165], "K": [[121, 131], [124, 134]], "V": [[116, 125], [119, 129]], "example": [101, 171]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Simone Biles likes Osaka. Nikola Tesla likes Chiang Mai. Ruth Bader Ginsburg likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the lawyer? Answer: No\n Premise: < Toni Morrison likes New Delhi. Claude Monet likes Pattaya. Ed Sheeran likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the artist? Answer: No\n", "ranges": [{"END": [98, 99], "A'": [94, 96], "V'": [43, 48], "Q": [90, 92], "K'": [50, 53], "R": [93, 94], "K": [[40, 62], [42, 64]], "V": [[34, 54], [38, 60]], "example": [29, 100]}, {"END": [169, 170], "A'": [165, 167], "V'": [105, 110], "Q": [160, 163], "K'": [112, 115], "R": [164, 165], "K": [[121, 131], [124, 134]], "V": [[116, 125], [119, 129]], "example": [101, 171]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the musician, the actor, the lawyer, the athlete and the scientist.\n< Manchester attracts Ieoh Ming Pei. Bangkok attracts Justin Bieber. Bangkok attracts Roger Federer. >. The person who wants to go to Bangkok is not the architect\n < Guangzhou attracts Jennifer Lawrence. Guangzhou attracts Sonia Sotomayor. Osaka attracts Rosie Franklin. >. The person who wants to go to Guangzhou is not the scientist\n", "ranges": [{"END": [74, 75], "A'": [75, 76], "V'": [33, 40], "Q": [69, 72], "K'": [30, 31], "R": [73, 74], "K": [[41, 51], [44, 54]], "V": [[46, 56], [50, 59]], "example": [29, 76]}, {"END": [125, 126], "A'": [126, 128], "V'": [106, 109], "Q": [119, 123], "K'": [102, 104], "R": [124, 125], "K": [[78, 88], [82, 92]], "V": [[84, 94], [87, 101]], "example": [77, 128]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the artist, the entrepreneur, the lawyer and the doctor.\n< Venice attracts Jeff Bezos. Toronto attracts Norman Foster. Toronto attracts Rem Koolhaas. >. The person who wants to go to Toronto is not the entrepreneur\n < Bras\u00edlia attracts Pablo Picasso. Manchester attracts Thurgood Marshall. Bras\u00edlia attracts Dr. Sylvia Earle. >. The person who wants to go to Bras\u00edlia is not the lawyer\n", "ranges": [{"END": [62, 63], "A'": [63, 66], "V'": [30, 33], "Q": [59, 60], "K'": [26, 28], "R": [61, 62], "K": [[34, 41], [35, 42]], "V": [[37, 44], [40, 49]], "example": [25, 66]}, {"END": [108, 109], "A'": [109, 110], "V'": [79, 83], "Q": [104, 106], "K'": [76, 77], "R": [107, 108], "K": [[68, 84], [70, 86]], "V": [[72, 88], [75, 94]], "example": [67, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the author, the scientist and the entrepreneur.\n< Venice attracts Louis Sullivan. Brisbane attracts Agatha Christie. Venice attracts Norman Foster. >. The person who wants to go to Venice is not the author\n < Seoul attracts Stephen Hawking. Mumbai attracts Sergey Brin. Mumbai attracts J.R.R. Tolkien. >. The person who wants to go to Mumbai is not the scientist\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [39, 44], "Q": [62, 64], "K'": [33, 37], "R": [65, 66], "K": [[24, 45], [26, 47]], "V": [[28, 49], [32, 52]], "example": [23, 68]}, {"END": [117, 118], "A'": [118, 120], "V'": [74, 77], "Q": [112, 115], "K'": [70, 72], "R": [116, 117], "K": [[78, 88], [81, 91]], "V": [[83, 93], [87, 102]], "example": [69, 120]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author and the artist.\n< Osaka attracts Dr. Jane Goodall. Osaka attracts Frida Kahlo. Sydney attracts George Orwell. >. The person who wants to go to Osaka is not the author\n < Birmingham attracts Dr. Michio Kaku. Birmingham attracts Toni Morrison. Paris attracts Thurgood Marshall. >. The person who wants to go to Birmingham is not the lawyer\n", "ranges": [{"END": [61, 62], "A'": [62, 63], "V'": [44, 47], "Q": [57, 59], "K'": [41, 42], "R": [60, 61], "K": [[21, 31], [23, 33]], "V": [[25, 35], [30, 40]], "example": [20, 63]}, {"END": [107, 108], "A'": [108, 109], "V'": [89, 93], "Q": [103, 105], "K'": [86, 87], "R": [106, 107], "K": [[65, 76], [67, 78]], "V": [[69, 80], [75, 85]], "example": [64, 109]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the architect and the artist.\n< Bangkok attracts Maya Lin. New York attracts Vincent van Gogh. Bangkok attracts Mies van der Rohe. >. The person who wants to go to Bangkok is not the artist\n < Seoul attracts Carl Sagan. Manchester attracts Norman Foster. Seoul attracts Lionel Messi. >. The person who wants to go to Seoul is not the architect\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [36, 41], "Q": [63, 66], "K'": [32, 34], "R": [67, 68], "K": [[23, 42], [26, 45]], "V": [[28, 47], [31, 53]], "example": [22, 70]}, {"END": [109, 110], "A'": [110, 111], "V'": [83, 86], "Q": [105, 107], "K'": [80, 81], "R": [108, 109], "K": [[72, 87], [74, 89]], "V": [[76, 91], [79, 95]], "example": [71, 111]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the architect, the actor and the artist.\n< Marseille attracts Frida Kahlo. Bangkok attracts Alex Morgan. Bangkok attracts Louis Sullivan. >. The person who wants to go to Bangkok is not the artist\n < Shanghai attracts Ieoh Ming Pei. Bern attracts Natalie Portman. Bern attracts Albert Einstein. >. The person who wants to go to Bern is not the architect\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [30, 35], "Q": [63, 66], "K'": [26, 28], "R": [67, 68], "K": [[36, 44], [39, 47]], "V": [[41, 49], [43, 53]], "example": [25, 70]}, {"END": [111, 112], "A'": [112, 113], "V'": [76, 83], "Q": [108, 109], "K'": [72, 74], "R": [110, 111], "K": [[84, 92], [85, 93]], "V": [[87, 95], [91, 98]], "example": [71, 113]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the artist, the author, the musician and the actor.\n< Rio de Janeiro attracts Rosie Franklin. Sydney attracts Michelangelo. Sydney attracts Rihanna. >. The person who wants to go to Sydney is not the scientist\n < Madrid attracts Johnny Depp. Rio de Janeiro attracts Jane Goodall. Madrid attracts George Orwell. >. The person who wants to go to Madrid is not the scientist\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [31, 34], "Q": [58, 59], "K'": [26, 29], "R": [60, 61], "K": [[35, 42], [36, 43]], "V": [[38, 45], [41, 48]], "example": [25, 64]}, {"END": [101, 102], "A'": [102, 104], "V'": [78, 81], "Q": [98, 99], "K'": [73, 76], "R": [100, 101], "K": [[66, 82], [67, 83]], "V": [[69, 85], [72, 88]], "example": [65, 104]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the doctor, the author and the athlete.\n< Sao Paulo attracts Dr. Jane Goodall. Osaka attracts Michael Phelps. Osaka attracts Sergey Brin. >. The person who wants to go to Osaka is not the doctor\n < Ottawa attracts Toni Morrison. London attracts Steve Jobs. Ottawa attracts Agatha Christie. >. The person who wants to go to Ottawa is not the entrepreneur\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [29, 34], "Q": [62, 64], "K'": [24, 27], "R": [65, 66], "K": [[35, 44], [37, 46]], "V": [[39, 48], [43, 52]], "example": [23, 68]}, {"END": [110, 111], "A'": [111, 114], "V'": [83, 86], "Q": [106, 108], "K'": [80, 81], "R": [109, 110], "K": [[70, 87], [72, 89]], "V": [[74, 91], [79, 96]], "example": [69, 114]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the actor, the architect, the lawyer and the musician.\nPremise: < Manchester attracts Ieoh Ming Pei. Bangkok attracts Justin Bieber. Bangkok attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is not the architect? Answer: Yes\n Premise: < Shanghai attracts Dr. Sanjay Gupta. Shanghai attracts Jennifer Lawrence. Birmingham attracts F. Lee Bailey. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Shanghai is not the lawyer? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [36, 43], "Q": [88, 91], "K'": [33, 34], "R": [92, 93], "K": [[44, 54], [47, 57]], "V": [[49, 59], [53, 62]], "example": [28, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [128, 133], "Q": [159, 161], "K'": [124, 126], "R": [162, 163], "K": [[104, 116], [106, 118]], "V": [[108, 120], [115, 123]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the architect, the athlete, the musician, the lawyer and the actor.\nPremise: < Manchester attracts Ieoh Ming Pei. Bangkok attracts Justin Bieber. Bangkok attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bangkok is not the architect? Answer: Yes\n Premise: < Shanghai attracts Dr. Sanjay Gupta. Shanghai attracts Jennifer Lawrence. Birmingham attracts F. Lee Bailey. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Shanghai is not the actor? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [36, 43], "Q": [88, 91], "K'": [33, 34], "R": [92, 93], "K": [[44, 54], [47, 57]], "V": [[49, 59], [53, 62]], "example": [28, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [128, 133], "Q": [159, 161], "K'": [124, 126], "R": [162, 163], "K": [[104, 116], [106, 118]], "V": [[108, 120], [115, 123]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the scientist, the author and the architect.\nPremise: < Moscow attracts Barack Obama. Barcelona attracts Jeff Bezos. Moscow attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is not the entrepreneur? Answer: Yes\n Premise: < Pattaya attracts Norman Foster. Pattaya attracts J.R.R. Tolkien. Vancouver attracts Marie Curie. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the scientist? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [81, 85], "V'": [42, 45], "Q": [78, 79], "K'": [39, 40], "R": [80, 81], "K": [[31, 46], [32, 47]], "V": [[34, 49], [38, 52]], "example": [26, 89]}, {"END": [161, 162], "A'": [156, 159], "V'": [122, 125], "Q": [151, 154], "K'": [118, 120], "R": [155, 156], "K": [[94, 103], [97, 106]], "V": [[99, 108], [102, 117]], "example": [90, 163]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the entrepreneur, the author, the architect and the lawyer.\nPremise: < Moscow attracts Barack Obama. Barcelona attracts Jeff Bezos. Moscow attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Moscow is not the entrepreneur? Answer: Yes\n Premise: < Pattaya attracts Norman Foster. Pattaya attracts J.R.R. Tolkien. Vancouver attracts Marie Curie. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the author? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [81, 85], "V'": [42, 45], "Q": [78, 79], "K'": [39, 40], "R": [80, 81], "K": [[31, 46], [32, 47]], "V": [[34, 49], [38, 52]], "example": [26, 89]}, {"END": [160, 161], "A'": [156, 158], "V'": [122, 125], "Q": [151, 154], "K'": [118, 120], "R": [155, 156], "K": [[94, 103], [97, 106]], "V": [[99, 108], [102, 117]], "example": [90, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the architect, the lawyer and the musician.\nPremise: < Guangzhou attracts Zaha Hadid. Vancouver attracts Lady Gaga. Vancouver attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vancouver is not the architect? Answer: Yes\n Premise: < Barcelona attracts Adele. Chiang Mai attracts Hillary Clinton. Chiang Mai attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Chiang Mai is not the musician? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [32, 36], "Q": [81, 83], "K'": [26, 30], "R": [84, 85], "K": [[37, 45], [39, 47]], "V": [[41, 49], [44, 55]], "example": [21, 91]}, {"END": [160, 161], "A'": [155, 158], "V'": [99, 102], "Q": [150, 153], "K'": [96, 97], "R": [154, 155], "K": [[103, 113], [106, 116]], "V": [[108, 118], [112, 124]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the lawyer, the doctor and the architect.\nPremise: < Guangzhou attracts Zaha Hadid. Vancouver attracts Lady Gaga. Vancouver attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vancouver is not the architect? Answer: Yes\n Premise: < Barcelona attracts Adele. Chiang Mai attracts Hillary Clinton. Chiang Mai attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Chiang Mai is not the doctor? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [32, 36], "Q": [81, 83], "K'": [26, 30], "R": [84, 85], "K": [[37, 45], [39, 47]], "V": [[41, 49], [44, 55]], "example": [21, 91]}, {"END": [159, 160], "A'": [155, 157], "V'": [99, 102], "Q": [150, 153], "K'": [96, 97], "R": [154, 155], "K": [[103, 113], [106, 116]], "V": [[108, 118], [112, 124]], "example": [92, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the actor, the doctor and the scientist.\nPremise: < Madrid attracts Thurgood Marshall. Venice attracts Dr. Anthony Fauci. Venice attracts Meryl Streep. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Venice is not the doctor? Answer: No\n Premise: < Paris attracts Dr. Michio Kaku. Valencia attracts Denzel Washington. Paris attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Paris is not the actor? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [29, 33], "Q": [81, 83], "K'": [26, 27], "R": [84, 85], "K": [[34, 45], [36, 47]], "V": [[38, 49], [44, 55]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [110, 113], "Q": [146, 147], "K'": [106, 108], "R": [148, 149], "K": [[96, 114], [97, 115]], "V": [[99, 117], [105, 120]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the lawyer and the scientist.\nPremise: < Madrid attracts Thurgood Marshall. Venice attracts Dr. Anthony Fauci. Venice attracts Meryl Streep. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Venice is not the doctor? Answer: No\n Premise: < Paris attracts Dr. Michio Kaku. Valencia attracts Denzel Washington. Paris attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Paris is not the doctor? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [29, 33], "Q": [81, 83], "K'": [26, 27], "R": [84, 85], "K": [[34, 45], [36, 47]], "V": [[38, 49], [44, 55]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [110, 113], "Q": [146, 147], "K'": [106, 108], "R": [148, 149], "K": [[96, 114], [97, 115]], "V": [[99, 117], [105, 120]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Canberra attracts Larry Page. Bangalore attracts Dr. Sanjay Gupta. Canberra attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Canberra is not the doctor? Answer: Yes\n Premise: < Chiang Mai attracts Johnnie Cochran. Geneva attracts Richard Dawkins. Geneva attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Geneva is not the lawyer? Answer: Yes\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [48, 55], "Q": [91, 94], "K'": [43, 46], "R": [95, 96], "K": [[35, 56], [38, 59]], "V": [[40, 61], [42, 65]], "example": [30, 102]}, {"END": [166, 167], "A'": [162, 164], "V'": [112, 117], "Q": [158, 160], "K'": [107, 110], "R": [161, 162], "K": [[118, 126], [120, 128]], "V": [[122, 130], [125, 132]], "example": [103, 168]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Canberra attracts Larry Page. Bangalore attracts Dr. Sanjay Gupta. Canberra attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Canberra is not the doctor? Answer: Yes\n Premise: < Chiang Mai attracts Johnnie Cochran. Geneva attracts Richard Dawkins. Geneva attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Geneva is not the scientist? Answer: No\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [48, 55], "Q": [91, 94], "K'": [43, 46], "R": [95, 96], "K": [[35, 56], [38, 59]], "V": [[40, 61], [42, 65]], "example": [30, 102]}, {"END": [167, 168], "A'": [162, 165], "V'": [112, 117], "Q": [158, 160], "K'": [107, 110], "R": [161, 162], "K": [[118, 126], [120, 128]], "V": [[122, 130], [125, 132]], "example": [103, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Sao Paulo attracts Dr. Jane Goodall. Osaka attracts Michael Phelps. Osaka attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the doctor? Answer: Yes\n Premise: < London attracts Sergey Brin. London attracts Bill Gates. Washington, D.C attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to London is not the author? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [33, 38], "Q": [82, 84], "K'": [28, 31], "R": [85, 86], "K": [[39, 48], [41, 50]], "V": [[43, 52], [47, 56]], "example": [23, 92]}, {"END": [155, 156], "A'": [151, 153], "V'": [119, 122], "Q": [148, 149], "K'": [112, 117], "R": [150, 151], "K": [[97, 105], [98, 106]], "V": [[100, 108], [104, 111]], "example": [93, 157]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Sao Paulo attracts Dr. Jane Goodall. Osaka attracts Michael Phelps. Osaka attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the doctor? Answer: Yes\n Premise: < London attracts Sergey Brin. London attracts Bill Gates. Washington, D.C attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to London is not the entrepreneur? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [33, 38], "Q": [82, 84], "K'": [28, 31], "R": [85, 86], "K": [[39, 48], [41, 50]], "V": [[43, 52], [47, 56]], "example": [23, 92]}, {"END": [157, 158], "A'": [151, 155], "V'": [119, 122], "Q": [148, 149], "K'": [112, 117], "R": [150, 151], "K": [[97, 105], [98, 106]], "V": [[100, 108], [104, 111]], "example": [93, 159]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the architect, the entrepreneur, the athlete, the scientist and the actor.\nPremise: < Mumbai attracts Barack Obama. Madrid attracts Albert Einstein. Madrid attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is not the lawyer? Answer: Yes\n Premise: < Tokyo attracts Brad Pitt. Berlin attracts Ieoh Ming Pei. Berlin attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is not the actor? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [40, 44], "Q": [84, 85], "K'": [35, 38], "R": [86, 87], "K": [[45, 52], [46, 53]], "V": [[48, 55], [51, 58]], "example": [30, 93]}, {"END": [153, 154], "A'": [149, 151], "V'": [101, 103], "Q": [146, 147], "K'": [98, 99], "R": [148, 149], "K": [[104, 115], [105, 116]], "V": [[107, 118], [114, 120]], "example": [94, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the architect, the scientist, the lawyer, the athlete and the entrepreneur.\nPremise: < Mumbai attracts Barack Obama. Madrid attracts Albert Einstein. Madrid attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Madrid is not the lawyer? Answer: Yes\n Premise: < Tokyo attracts Brad Pitt. Berlin attracts Ieoh Ming Pei. Berlin attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Berlin is not the architect? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [40, 44], "Q": [84, 85], "K'": [35, 38], "R": [86, 87], "K": [[45, 52], [46, 53]], "V": [[48, 55], [51, 58]], "example": [30, 93]}, {"END": [153, 154], "A'": [149, 151], "V'": [101, 103], "Q": [146, 147], "K'": [98, 99], "R": [148, 149], "K": [[104, 115], [105, 116]], "V": [[107, 118], [114, 120]], "example": [94, 155]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Osaka attracts Simone Biles. Chiang Mai attracts Nikola Tesla. Osaka attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the lawyer? Answer: No\n Premise: < New Delhi attracts Toni Morrison. Pattaya attracts Claude Monet. Pattaya attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the author? Answer: Yes\n", "ranges": [{"END": [98, 99], "A'": [94, 96], "V'": [48, 53], "Q": [90, 92], "K'": [43, 46], "R": [93, 94], "K": [[34, 54], [36, 56]], "V": [[38, 58], [42, 64]], "example": [29, 100]}, {"END": [169, 170], "A'": [165, 167], "V'": [110, 115], "Q": [160, 163], "K'": [105, 108], "R": [164, 165], "K": [[116, 125], [119, 128]], "V": [[121, 130], [124, 134]], "example": [101, 171]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Osaka attracts Simone Biles. Chiang Mai attracts Nikola Tesla. Osaka attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Osaka is not the lawyer? Answer: No\n Premise: < New Delhi attracts Toni Morrison. Pattaya attracts Claude Monet. Pattaya attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Pattaya is not the artist? Answer: No\n", "ranges": [{"END": [98, 99], "A'": [94, 96], "V'": [48, 53], "Q": [90, 92], "K'": [43, 46], "R": [93, 94], "K": [[34, 54], [36, 56]], "V": [[38, 58], [42, 64]], "example": [29, 100]}, {"END": [169, 170], "A'": [165, 167], "V'": [110, 115], "Q": [160, 163], "K'": [105, 108], "R": [164, 165], "K": [[116, 125], [119, 128]], "V": [[121, 130], [124, 134]], "example": [101, 171]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, Thailand, Spain, India and the United States.\n< Norman Foster likes New Delhi. Zaha Hadid likes Kyoto. LeBron James likes Los Angeles. >. So the athlete wants to go to a city of the United States\n < Sonia Sotomayor likes New Delhi. Dr. Michio Kaku likes Madrid. Jane Goodall likes Bangkok. >. So the scientist wants to go to a city of Thailand\n", "ranges": [{"END": [60, 61], "A": [61, 64], "V": [45, 47], "Q": [51, 54], "K": [39, 43], "R": null, "K'": [[21, 30], [24, 34]], "V'": [[26, 36], [29, 38]], "example": [20, 64]}, {"END": [110, 111], "A": [111, 113], "V": [94, 97], "Q": [101, 104], "K": [89, 92], "R": null, "K'": [[66, 79], [73, 85]], "V'": [[75, 87], [78, 88]], "example": [65, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Jeff Bezos likes Incheon. Norman Foster likes Manchester. Rem Koolhaas likes Venice. >. So the entrepreneur wants to go to a city of South Korea\n < Frida Kahlo likes London. Johnny Depp likes Washington, D.C. Julia Roberts likes Munich. >. So the artist wants to go to a city of the United Kingdom\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [28, 31], "Q": [52, 56], "K": [23, 26], "R": null, "K'": [[32, 39], [35, 44]], "V'": [[37, 46], [38, 48]], "example": [22, 65]}, {"END": [105, 106], "A": [106, 109], "V": [74, 75], "Q": [97, 99], "K": [67, 72], "R": null, "K'": [[76, 87], [79, 89]], "V'": [[81, 91], [86, 93]], "example": [66, 109]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Larry Page likes Seoul. Marie Curie likes Saint Petersburg. Leonardo da Vinci likes Mumbai. >. So the artist wants to go to a city of India\n < Rem Koolhaas likes Bras\u00edlia. Jeff Bezos likes Busan. Julia Roberts likes Bern. >. So the actor wants to go to a city of Switzerland\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [41, 44], "Q": [48, 50], "K": [34, 39], "R": null, "K'": [[19, 26], [21, 29]], "V'": [[23, 31], [25, 33]], "example": [18, 58]}, {"END": [95, 96], "A": [96, 97], "V": [82, 83], "Q": [87, 89], "K": [78, 80], "R": null, "K'": [[60, 70], [65, 73]], "V'": [[67, 75], [69, 77]], "example": [59, 97]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Roger Federer likes Ottawa. George Orwell likes Tokyo. Dr. Ben Carson likes Seoul. >. So the author wants to go to a city of Japan\n < Richard Branson likes Los Angeles. Mark Twain likes Lyon. Clarence Darrow likes New Delhi. >. So the entrepreneur wants to go to a city of the United States\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [36, 37], "Q": [51, 53], "K": [31, 34], "R": null, "K'": [[23, 38], [26, 43]], "V'": [[28, 45], [30, 47]], "example": [22, 61]}, {"END": [101, 102], "A": [102, 105], "V": [68, 70], "Q": [91, 95], "K": [63, 66], "R": null, "K'": [[71, 78], [74, 82]], "V'": [[76, 84], [77, 87]], "example": [62, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Russia, China, Italy and Brazil.\n< F. Lee Bailey likes Guangzhou. Alex Morgan likes Bras\u00edlia. Rihanna likes Florence. >. So the lawyer wants to go to a city of China\n < Frank Lloyd Wright likes Bras\u00edlia. Albert Einstein likes Moscow. Ruth Bader Ginsburg likes Birmingham. >. So the scientist wants to go to a city of Russia\n", "ranges": [{"END": [57, 58], "A": [58, 59], "V": [27, 31], "Q": [49, 51], "K": [20, 25], "R": null, "K'": [[32, 39], [34, 42]], "V'": [[36, 44], [38, 45]], "example": [19, 59]}, {"END": [99, 100], "A": [100, 101], "V": [74, 75], "Q": [90, 93], "K": [69, 72], "R": null, "K'": [[61, 76], [64, 82]], "V'": [[66, 84], [68, 86]], "example": [60, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Japan, Brazil and Germany.\n< Jane Austen likes Osaka. Steve Jobs likes Milan. Dr. Neil deGrasse Tyson likes Berlin. >. So the entrepreneur wants to go to a city of Italy\n < Meryl Streep likes Osaka. Pablo Picasso likes Manchester. Roger Federer likes Sao Paulo. >. So the actor wants to go to a city of Japan\n", "ranges": [{"END": [61, 62], "A": [62, 63], "V": [33, 34], "Q": [51, 55], "K": [28, 31], "R": null, "K'": [[20, 35], [23, 44]], "V'": [[25, 46], [27, 47]], "example": [19, 63]}, {"END": [103, 104], "A": [104, 105], "V": [73, 75], "Q": [95, 97], "K": [65, 71], "R": null, "K'": [[76, 83], [79, 86]], "V'": [[81, 88], [82, 91]], "example": [64, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Australia, Spain and Japan.\n< Marie Curie likes Chiang Mai. Georgia O'Keeffe likes Tokyo. Cristiano Ronaldo likes Barcelona. >. So the scientist wants to go to a city of Thailand\n < Dr. Gabor Mat\u00e9 likes Barcelona. Usain Bolt likes Bangkok. Neil deGrasse Tyson likes Brisbane. >. So the athlete wants to go to a city of Thailand\n", "ranges": [{"END": [57, 58], "A": [58, 60], "V": [22, 25], "Q": [48, 51], "K": [17, 20], "R": null, "K'": [[26, 36], [32, 41]], "V'": [[34, 43], [35, 44]], "example": [16, 60]}, {"END": [108, 109], "A": [109, 111], "V": [78, 81], "Q": [99, 102], "K": [72, 76], "R": null, "K'": [[62, 82], [68, 89]], "V'": [[70, 91], [71, 95]], "example": [61, 111]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Australia, India, the United Kingdom, China and Japan.\n< Warren Buffett likes Sydney. Lady Gaga likes Munich. Dr. Sanjay Gupta likes Beijing. >. So the entrepreneur wants to go to a city of Australia\n < Kanye West likes London. Alex Morgan likes New Delhi. Sonia Sotomayor likes Kyoto. >. So the lawyer wants to go to a city of Japan\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [27, 28], "Q": [53, 57], "K": [22, 25], "R": null, "K'": [[29, 37], [32, 44]], "V'": [[34, 46], [36, 49]], "example": [21, 65]}, {"END": [106, 107], "A": [107, 108], "V": [92, 94], "Q": [98, 100], "K": [83, 90], "R": null, "K'": [[67, 75], [71, 77]], "V'": [[73, 79], [74, 82]], "example": [66, 108]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, India, Thailand, Japan, Italy and Australia.\nPremise: < Norman Foster likes New Delhi. Zaha Hadid likes Kyoto. LeBron James likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of India? Answer: No\n Premise: < Rosie Franklin likes Venice. Sonia Sotomayor likes Chiang Mai. Jennifer Lawrence likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Italy? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [51, 53], "Q": [72, 75], "K": [45, 49], "R": null, "K'": [[27, 36], [30, 40]], "V'": [[32, 42], [35, 44]], "example": [22, 87]}, {"END": [154, 155], "A": [151, 152], "V": [97, 99], "Q": [141, 144], "K": [92, 95], "R": null, "K'": [[100, 113], [107, 116]], "V'": [[109, 118], [112, 122]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, India, Italy, Australia, Thailand and Japan.\nPremise: < Norman Foster likes New Delhi. Zaha Hadid likes Kyoto. LeBron James likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of India? Answer: No\n Premise: < Rosie Franklin likes Venice. Sonia Sotomayor likes Chiang Mai. Jennifer Lawrence likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Australia? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [51, 53], "Q": [72, 75], "K": [45, 49], "R": null, "K'": [[27, 36], [30, 40]], "V'": [[32, 42], [35, 44]], "example": [22, 87]}, {"END": [154, 155], "A": [151, 152], "V": [97, 99], "Q": [141, 144], "K": [92, 95], "R": null, "K'": [[100, 113], [107, 116]], "V'": [[109, 118], [112, 122]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Louis Sullivan likes Incheon. Pablo Picasso likes Brisbane. Tom Brady likes London. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of Australia? Answer: No\n Premise: < Vincent van Gogh likes Incheon. Louis Sullivan likes Bras\u00edlia. Jane Austen likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [48, 49], "Q": [68, 71], "K": [43, 46], "R": null, "K'": [[23, 33], [27, 36]], "V'": [[29, 38], [32, 42]], "example": [18, 83]}, {"END": [148, 149], "A": [145, 146], "V": [105, 107], "Q": [136, 138], "K": [99, 103], "R": null, "K'": [[88, 108], [93, 111]], "V'": [[95, 113], [98, 117]], "example": [84, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Louis Sullivan likes Incheon. Pablo Picasso likes Brisbane. Tom Brady likes London. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of Australia? Answer: No\n Premise: < Vincent van Gogh likes Incheon. Louis Sullivan likes Bras\u00edlia. Jane Austen likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [48, 49], "Q": [68, 71], "K": [43, 46], "R": null, "K'": [[23, 33], [27, 36]], "V'": [[29, 38], [32, 42]], "example": [18, 83]}, {"END": [149, 150], "A": [145, 147], "V": [105, 107], "Q": [136, 138], "K": [99, 103], "R": null, "K'": [[88, 108], [93, 111]], "V'": [[95, 113], [98, 117]], "example": [84, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, the United Kingdom, Canada, South Korea and Australia.\nPremise: < Richard Dawkins likes Seoul. J.K. Rowling likes Sydney. Lady Gaga likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of the United Kingdom? Answer: No\n Premise: < Roger Federer likes Ottawa. George Orwell likes Tokyo. Dr. Ben Carson likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [30, 32], "Q": [69, 72], "K": [25, 28], "R": null, "K'": [[33, 43], [39, 46]], "V'": [[41, 48], [42, 50]], "example": [20, 86]}, {"END": [146, 147], "A": [143, 144], "V": [104, 105], "Q": [134, 136], "K": [99, 102], "R": null, "K'": [[91, 106], [94, 111]], "V'": [[96, 113], [98, 115]], "example": [87, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, Australia and Canada.\nPremise: < Richard Dawkins likes Seoul. J.K. Rowling likes Sydney. Lady Gaga likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of the United Kingdom? Answer: No\n Premise: < Roger Federer likes Ottawa. George Orwell likes Tokyo. Dr. Ben Carson likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [30, 32], "Q": [69, 72], "K": [25, 28], "R": null, "K'": [[33, 43], [39, 46]], "V'": [[41, 48], [42, 50]], "example": [20, 86]}, {"END": [147, 148], "A": [143, 145], "V": [104, 105], "Q": [134, 136], "K": [99, 102], "R": null, "K'": [[91, 106], [94, 111]], "V'": [[96, 113], [98, 115]], "example": [87, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, Spain, Australia, Brazil and Thailand.\nPremise: < Ieoh Ming Pei likes Chiang Mai. Lady Gaga likes Valencia. Leonardo DiCaprio likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to a city of Spain? Answer: Yes\n Premise: < Claude Monet likes Madrid. Bill Gates likes Tokyo. Tom Hanks likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [41, 43], "Q": [73, 76], "K": [36, 39], "R": null, "K'": [[23, 44], [30, 49]], "V'": [[32, 51], [35, 54]], "example": [18, 88]}, {"END": [146, 147], "A": [143, 144], "V": [98, 99], "Q": [134, 136], "K": [93, 96], "R": null, "K'": [[100, 107], [103, 110]], "V'": [[105, 112], [106, 115]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Spain, Brazil, Australia, Japan and Thailand.\nPremise: < Ieoh Ming Pei likes Chiang Mai. Lady Gaga likes Valencia. Leonardo DiCaprio likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to a city of Spain? Answer: Yes\n Premise: < Claude Monet likes Madrid. Bill Gates likes Tokyo. Tom Hanks likes Canberra. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [41, 43], "Q": [73, 76], "K": [36, 39], "R": null, "K'": [[23, 44], [30, 49]], "V'": [[32, 51], [35, 54]], "example": [18, 88]}, {"END": [146, 147], "A": [143, 144], "V": [98, 99], "Q": [134, 136], "K": [93, 96], "R": null, "K'": [[100, 107], [103, 110]], "V'": [[105, 112], [106, 115]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Canada, Switzerland, India, Brazil and Thailand.\nPremise: < Simone Biles likes Bangkok. Marie Curie likes Mumbai. Sonia Sotomayor likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Switzerland? Answer: Yes\n Premise: < Agatha Christie likes Toronto. Denzel Washington likes Bras\u00edlia. Marie Curie likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [53, 54], "Q": [73, 75], "K": [44, 51], "R": null, "K'": [[25, 35], [29, 38]], "V'": [[31, 40], [34, 43]], "example": [20, 87]}, {"END": [148, 149], "A": [145, 146], "V": [114, 116], "Q": [135, 138], "K": [109, 112], "R": null, "K'": [[92, 101], [97, 104]], "V'": [[99, 106], [100, 108]], "example": [88, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Thailand, Brazil, India, Switzerland and Canada.\nPremise: < Simone Biles likes Bangkok. Marie Curie likes Mumbai. Sonia Sotomayor likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Switzerland? Answer: Yes\n Premise: < Agatha Christie likes Toronto. Denzel Washington likes Bras\u00edlia. Marie Curie likes Munich. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [53, 54], "Q": [73, 75], "K": [44, 51], "R": null, "K'": [[25, 35], [29, 38]], "V'": [[31, 40], [34, 43]], "example": [20, 87]}, {"END": [148, 149], "A": [145, 146], "V": [114, 116], "Q": [135, 138], "K": [109, 112], "R": null, "K'": [[92, 101], [97, 104]], "V'": [[99, 106], [100, 108]], "example": [88, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Germany, Russia, Canada, Spain, Australia and Thailand.\nPremise: < Dr. Gabor Mat\u00e9 likes Barcelona. Jane Goodall likes Bangkok. Kanye West likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Spain? Answer: No\n Premise: < Albert Einstein likes Berlin. Barack Obama likes Saint Petersburg. Serena Williams likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [40, 43], "Q": [73, 76], "K": [35, 38], "R": null, "K'": [[25, 44], [31, 48]], "V'": [[33, 50], [34, 54]], "example": [20, 88]}, {"END": [146, 147], "A": [143, 144], "V": [106, 108], "Q": [134, 136], "K": [100, 104], "R": null, "K'": [[93, 109], [96, 112]], "V'": [[98, 114], [99, 115]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Canada, Spain, Australia, Thailand and Germany.\nPremise: < Dr. Gabor Mat\u00e9 likes Barcelona. Jane Goodall likes Bangkok. Kanye West likes Brisbane. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Spain? Answer: No\n Premise: < Albert Einstein likes Berlin. Barack Obama likes Saint Petersburg. Serena Williams likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Canada? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [40, 43], "Q": [73, 76], "K": [35, 38], "R": null, "K'": [[25, 44], [31, 48]], "V'": [[33, 50], [34, 54]], "example": [20, 88]}, {"END": [146, 147], "A": [143, 144], "V": [106, 108], "Q": [134, 136], "K": [100, 104], "R": null, "K'": [[93, 109], [96, 112]], "V'": [[98, 114], [99, 115]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, Canada, Switzerland, Japan, South Korea and the United Kingdom.\nPremise: < Dr. Michio Kaku likes Chiang Mai. Charlize Theron likes London. Dr. Sanjay Gupta likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a city of Thailand? Answer: No\n Premise: < Jackson Pollock likes Zurich. Dr. Sylvia Earle likes Incheon. Julia Roberts likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Switzerland? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [47, 48], "Q": [79, 81], "K": [40, 45], "R": null, "K'": [[28, 49], [34, 56]], "V'": [[36, 58], [39, 60]], "example": [23, 94]}, {"END": [155, 156], "A": [152, 153], "V": [104, 106], "Q": [143, 145], "K": [99, 102], "R": null, "K'": [[107, 119], [113, 121]], "V'": [[115, 123], [118, 124]], "example": [95, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include South Korea, Japan, the United Kingdom, Switzerland, Thailand and Canada.\nPremise: < Dr. Michio Kaku likes Chiang Mai. Charlize Theron likes London. Dr. Sanjay Gupta likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a city of Thailand? Answer: No\n Premise: < Jackson Pollock likes Zurich. Dr. Sylvia Earle likes Incheon. Julia Roberts likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [47, 48], "Q": [79, 81], "K": [40, 45], "R": null, "K'": [[28, 49], [34, 56]], "V'": [[36, 58], [39, 60]], "example": [23, 94]}, {"END": [156, 157], "A": [152, 154], "V": [104, 106], "Q": [143, 145], "K": [99, 102], "R": null, "K'": [[107, 119], [113, 121]], "V'": [[115, 123], [118, 124]], "example": [95, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Spain, Japan, Russia and the United Kingdom.\nPremise: < Beyonc\u00e9 likes London. Richard Branson likes Birmingham. Toni Morrison likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Spain? Answer: Yes\n Premise: < Ed Sheeran likes Tokyo. George Orwell likes Kyoto. Maya Lin likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [44, 46], "Q": [65, 67], "K": [37, 42], "R": null, "K'": [[22, 29], [25, 32]], "V'": [[27, 34], [28, 36]], "example": [17, 79]}, {"END": [138, 139], "A": [135, 136], "V": [105, 107], "Q": [126, 128], "K": [100, 103], "R": null, "K'": [[84, 92], [88, 95]], "V'": [[90, 97], [91, 99]], "example": [80, 140]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Russia, Japan and Spain.\nPremise: < Beyonc\u00e9 likes London. Richard Branson likes Birmingham. Toni Morrison likes Valencia. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Spain? Answer: Yes\n Premise: < Ed Sheeran likes Tokyo. George Orwell likes Kyoto. Maya Lin likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [44, 46], "Q": [65, 67], "K": [37, 42], "R": null, "K'": [[22, 29], [25, 32]], "V'": [[27, 34], [28, 36]], "example": [17, 79]}, {"END": [138, 139], "A": [135, 136], "V": [105, 107], "Q": [126, 128], "K": [100, 103], "R": null, "K'": [[84, 92], [88, 95]], "V'": [[90, 97], [91, 99]], "example": [80, 140]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, Thailand, Spain, India and the United States.\n< New Delhi attracts Norman Foster. Kyoto attracts Zaha Hadid. Los Angeles attracts LeBron James. >. So the athlete wants to go to a city of the United States\n < New Delhi attracts Sonia Sotomayor. Madrid attracts Dr. Michio Kaku. Bangkok attracts Jane Goodall. >. So the scientist wants to go to a city of Thailand\n", "ranges": [{"END": [60, 61], "A": [61, 64], "V": [39, 41], "Q": [51, 54], "K": [43, 47], "R": null, "K'": [[26, 34], [29, 38]], "V'": [[21, 30], [24, 32]], "example": [20, 64]}, {"END": [110, 111], "A": [111, 113], "V": [89, 92], "Q": [101, 104], "K": [94, 97], "R": null, "K'": [[71, 82], [78, 88]], "V'": [[66, 79], [69, 80]], "example": [65, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Incheon attracts Jeff Bezos. Manchester attracts Norman Foster. Venice attracts Rem Koolhaas. >. So the entrepreneur wants to go to a city of South Korea\n < London attracts Frida Kahlo. Washington, D.C attracts Johnny Depp. Munich attracts Julia Roberts. >. So the artist wants to go to a city of the United Kingdom\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [23, 26], "Q": [52, 56], "K": [28, 31], "R": null, "K'": [[35, 43], [38, 48]], "V'": [[32, 39], [33, 41]], "example": [22, 65]}, {"END": [105, 106], "A": [106, 109], "V": [67, 68], "Q": [97, 99], "K": [70, 75], "R": null, "K'": [[83, 91], [86, 93]], "V'": [[76, 87], [81, 89]], "example": [66, 109]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, India, Brazil, Russia and South Korea.\n< Seoul attracts Larry Page. Saint Petersburg attracts Marie Curie. Mumbai attracts Leonardo da Vinci. >. So the artist wants to go to a city of India\n < Bras\u00edlia attracts Rem Koolhaas. Busan attracts Jeff Bezos. Bern attracts Julia Roberts. >. So the actor wants to go to a city of Switzerland\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [34, 37], "Q": [48, 50], "K": [39, 44], "R": null, "K'": [[23, 30], [25, 33]], "V'": [[19, 26], [21, 28]], "example": [18, 58]}, {"END": [95, 96], "A": [96, 97], "V": [78, 79], "Q": [87, 89], "K": [81, 83], "R": null, "K'": [[64, 74], [69, 77]], "V'": [[60, 70], [62, 72]], "example": [59, 97]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, South Korea, Japan, France, India and the United States.\n< Ottawa attracts Roger Federer. Tokyo attracts George Orwell. Seoul attracts Dr. Ben Carson. >. So the author wants to go to a city of Japan\n < Los Angeles attracts Richard Branson. Lyon attracts Mark Twain. New Delhi attracts Clarence Darrow. >. So the entrepreneur wants to go to a city of the United States\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [31, 32], "Q": [51, 53], "K": [34, 37], "R": null, "K'": [[27, 42], [30, 47]], "V'": [[23, 38], [25, 40]], "example": [22, 61]}, {"END": [101, 102], "A": [102, 105], "V": [63, 65], "Q": [91, 95], "K": [67, 70], "R": null, "K'": [[74, 83], [77, 87]], "V'": [[71, 78], [72, 81]], "example": [62, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Russia, China, Italy and Brazil.\n< Guangzhou attracts F. Lee Bailey. Bras\u00edlia attracts Alex Morgan. Florence attracts Rihanna. >. So the lawyer wants to go to a city of China\n < Bras\u00edlia attracts Frank Lloyd Wright. Moscow attracts Albert Einstein. Birmingham attracts Ruth Bader Ginsburg. >. So the scientist wants to go to a city of Russia\n", "ranges": [{"END": [57, 58], "A": [58, 59], "V": [20, 24], "Q": [49, 51], "K": [26, 31], "R": null, "K'": [[36, 42], [38, 45]], "V'": [[32, 39], [34, 40]], "example": [19, 59]}, {"END": [99, 100], "A": [100, 101], "V": [69, 70], "Q": [90, 93], "K": [72, 75], "R": null, "K'": [[65, 80], [68, 86]], "V'": [[61, 76], [63, 78]], "example": [60, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Japan, Brazil and Germany.\n< Osaka attracts Jane Austen. Milan attracts Steve Jobs. Berlin attracts Dr. Neil deGrasse Tyson. >. So the entrepreneur wants to go to a city of Italy\n < Osaka attracts Meryl Streep. Manchester attracts Pablo Picasso. Sao Paulo attracts Roger Federer. >. So the actor wants to go to a city of Japan\n", "ranges": [{"END": [61, 62], "A": [62, 63], "V": [28, 29], "Q": [51, 55], "K": [31, 34], "R": null, "K'": [[24, 38], [27, 47]], "V'": [[20, 35], [22, 36]], "example": [19, 63]}, {"END": [103, 104], "A": [104, 105], "V": [65, 67], "Q": [95, 97], "K": [69, 75], "R": null, "K'": [[79, 88], [82, 91]], "V'": [[76, 83], [77, 86]], "example": [64, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Australia, Spain and Japan.\n< Chiang Mai attracts Marie Curie. Tokyo attracts Georgia O'Keeffe. Barcelona attracts Cristiano Ronaldo. >. So the scientist wants to go to a city of Thailand\n < Barcelona attracts Dr. Gabor Mat\u00e9. Bangkok attracts Usain Bolt. Brisbane attracts Neil deGrasse Tyson. >. So the athlete wants to go to a city of Thailand\n", "ranges": [{"END": [57, 58], "A": [58, 60], "V": [17, 20], "Q": [48, 51], "K": [22, 25], "R": null, "K'": [[29, 39], [35, 44]], "V'": [[26, 36], [27, 37]], "example": [16, 60]}, {"END": [108, 109], "A": [109, 111], "V": [72, 75], "Q": [99, 102], "K": [77, 81], "R": null, "K'": [[65, 88], [71, 95]], "V'": [[62, 82], [63, 86]], "example": [61, 111]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Australia, India, the United Kingdom, China and Japan.\n< Sydney attracts Warren Buffett. Munich attracts Lady Gaga. Beijing attracts Dr. Sanjay Gupta. >. So the entrepreneur wants to go to a city of Australia\n < London attracts Kanye West. New Delhi attracts Alex Morgan. Kyoto attracts Sonia Sotomayor. >. So the lawyer wants to go to a city of Japan\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [22, 23], "Q": [53, 57], "K": [25, 28], "R": null, "K'": [[33, 42], [36, 49]], "V'": [[29, 37], [31, 40]], "example": [21, 65]}, {"END": [106, 107], "A": [107, 108], "V": [83, 85], "Q": [98, 100], "K": [87, 94], "R": null, "K'": [[70, 80], [74, 82]], "V'": [[67, 75], [68, 78]], "example": [66, 108]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, India, Thailand, Japan, Italy and Australia.\nPremise: < New Delhi attracts Norman Foster. Kyoto attracts Zaha Hadid. Los Angeles attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of India? Answer: No\n Premise: < Venice attracts Rosie Franklin. Chiang Mai attracts Sonia Sotomayor. Brisbane attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Italy? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [45, 47], "Q": [72, 75], "K": [49, 53], "R": null, "K'": [[32, 40], [35, 44]], "V'": [[27, 36], [30, 38]], "example": [22, 87]}, {"END": [154, 155], "A": [151, 152], "V": [92, 94], "Q": [141, 144], "K": [96, 99], "R": null, "K'": [[105, 119], [112, 122]], "V'": [[100, 113], [103, 117]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, India, Italy, Australia, Thailand and Japan.\nPremise: < New Delhi attracts Norman Foster. Kyoto attracts Zaha Hadid. Los Angeles attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of India? Answer: No\n Premise: < Venice attracts Rosie Franklin. Chiang Mai attracts Sonia Sotomayor. Brisbane attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Australia? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [45, 47], "Q": [72, 75], "K": [49, 53], "R": null, "K'": [[32, 40], [35, 44]], "V'": [[27, 36], [30, 38]], "example": [22, 87]}, {"END": [154, 155], "A": [151, 152], "V": [92, 94], "Q": [141, 144], "K": [96, 99], "R": null, "K'": [[105, 119], [112, 122]], "V'": [[100, 113], [103, 117]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil and South Korea.\nPremise: < Incheon attracts Louis Sullivan. Brisbane attracts Pablo Picasso. London attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Vincent van Gogh. Bras\u00edlia attracts Louis Sullivan. Brisbane attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Brazil? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [43, 44], "Q": [68, 71], "K": [46, 49], "R": null, "K'": [[28, 39], [32, 42]], "V'": [[23, 33], [26, 37]], "example": [18, 83]}, {"END": [148, 149], "A": [145, 146], "V": [99, 101], "Q": [136, 138], "K": [103, 107], "R": null, "K'": [[93, 114], [98, 117]], "V'": [[88, 108], [91, 112]], "example": [84, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Australia, Brazil and South Korea.\nPremise: < Incheon attracts Louis Sullivan. Brisbane attracts Pablo Picasso. London attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a city of Australia? Answer: No\n Premise: < Incheon attracts Vincent van Gogh. Bras\u00edlia attracts Louis Sullivan. Brisbane attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [43, 44], "Q": [68, 71], "K": [46, 49], "R": null, "K'": [[28, 39], [32, 42]], "V'": [[23, 33], [26, 37]], "example": [18, 83]}, {"END": [149, 150], "A": [145, 147], "V": [99, 101], "Q": [136, 138], "K": [103, 107], "R": null, "K'": [[93, 114], [98, 117]], "V'": [[88, 108], [91, 112]], "example": [84, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, the United Kingdom, Canada, South Korea and Australia.\nPremise: < Seoul attracts Richard Dawkins. Sydney attracts J.K. Rowling. Birmingham attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of the United Kingdom? Answer: No\n Premise: < Ottawa attracts Roger Federer. Tokyo attracts George Orwell. Seoul attracts Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Japan? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [25, 27], "Q": [69, 72], "K": [29, 32], "R": null, "K'": [[36, 47], [42, 50]], "V'": [[33, 43], [34, 45]], "example": [20, 86]}, {"END": [146, 147], "A": [143, 144], "V": [99, 100], "Q": [134, 136], "K": [102, 105], "R": null, "K'": [[95, 110], [98, 115]], "V'": [[91, 106], [93, 108]], "example": [87, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Japan, South Korea, Australia and Canada.\nPremise: < Seoul attracts Richard Dawkins. Sydney attracts J.K. Rowling. Birmingham attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of the United Kingdom? Answer: No\n Premise: < Ottawa attracts Roger Federer. Tokyo attracts George Orwell. Seoul attracts Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [25, 27], "Q": [69, 72], "K": [29, 32], "R": null, "K'": [[36, 47], [42, 50]], "V'": [[33, 43], [34, 45]], "example": [20, 86]}, {"END": [147, 148], "A": [143, 145], "V": [99, 100], "Q": [134, 136], "K": [102, 105], "R": null, "K'": [[95, 110], [98, 115]], "V'": [[91, 106], [93, 108]], "example": [87, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, Spain, Australia, Brazil and Thailand.\nPremise: < Chiang Mai attracts Ieoh Ming Pei. Valencia attracts Lady Gaga. Sao Paulo attracts Leonardo DiCaprio. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to a city of Spain? Answer: Yes\n Premise: < Madrid attracts Claude Monet. Tokyo attracts Bill Gates. Canberra attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [36, 38], "Q": [73, 76], "K": [40, 43], "R": null, "K'": [[28, 49], [35, 54]], "V'": [[23, 44], [26, 47]], "example": [18, 88]}, {"END": [146, 147], "A": [143, 144], "V": [93, 94], "Q": [134, 136], "K": [96, 99], "R": null, "K'": [[103, 112], [106, 115]], "V'": [[100, 107], [101, 110]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Spain, Brazil, Australia, Japan and Thailand.\nPremise: < Chiang Mai attracts Ieoh Ming Pei. Valencia attracts Lady Gaga. Sao Paulo attracts Leonardo DiCaprio. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to a city of Spain? Answer: Yes\n Premise: < Madrid attracts Claude Monet. Tokyo attracts Bill Gates. Canberra attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [36, 38], "Q": [73, 76], "K": [40, 43], "R": null, "K'": [[28, 49], [35, 54]], "V'": [[23, 44], [26, 47]], "example": [18, 88]}, {"END": [146, 147], "A": [143, 144], "V": [93, 94], "Q": [134, 136], "K": [96, 99], "R": null, "K'": [[103, 112], [106, 115]], "V'": [[100, 107], [101, 110]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Canada, Switzerland, India, Brazil and Thailand.\nPremise: < Bangkok attracts Simone Biles. Mumbai attracts Marie Curie. Bern attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Switzerland? Answer: Yes\n Premise: < Toronto attracts Agatha Christie. Bras\u00edlia attracts Denzel Washington. Munich attracts Marie Curie. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Germany? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [44, 45], "Q": [73, 75], "K": [47, 54], "R": null, "K'": [[30, 40], [34, 43]], "V'": [[25, 35], [28, 38]], "example": [20, 87]}, {"END": [148, 149], "A": [145, 146], "V": [109, 111], "Q": [135, 138], "K": [113, 116], "R": null, "K'": [[95, 105], [100, 108]], "V'": [[92, 101], [93, 103]], "example": [88, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Thailand, Brazil, India, Switzerland and Canada.\nPremise: < Bangkok attracts Simone Biles. Mumbai attracts Marie Curie. Bern attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Switzerland? Answer: Yes\n Premise: < Toronto attracts Agatha Christie. Bras\u00edlia attracts Denzel Washington. Munich attracts Marie Curie. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [44, 45], "Q": [73, 75], "K": [47, 54], "R": null, "K'": [[30, 40], [34, 43]], "V'": [[25, 35], [28, 38]], "example": [20, 87]}, {"END": [148, 149], "A": [145, 146], "V": [109, 111], "Q": [135, 138], "K": [113, 116], "R": null, "K'": [[95, 105], [100, 108]], "V'": [[92, 101], [93, 103]], "example": [88, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Germany, Russia, Canada, Spain, Australia and Thailand.\nPremise: < Barcelona attracts Dr. Gabor Mat\u00e9. Bangkok attracts Jane Goodall. Brisbane attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Spain? Answer: No\n Premise: < Berlin attracts Albert Einstein. Saint Petersburg attracts Barack Obama. Toronto attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [35, 38], "Q": [73, 76], "K": [40, 43], "R": null, "K'": [[28, 50], [34, 54]], "V'": [[25, 44], [26, 48]], "example": [20, 88]}, {"END": [146, 147], "A": [143, 144], "V": [100, 102], "Q": [134, 136], "K": [104, 108], "R": null, "K'": [[96, 112], [99, 115]], "V'": [[93, 109], [94, 110]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Canada, Spain, Australia, Thailand and Germany.\nPremise: < Barcelona attracts Dr. Gabor Mat\u00e9. Bangkok attracts Jane Goodall. Brisbane attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a city of Spain? Answer: No\n Premise: < Berlin attracts Albert Einstein. Saint Petersburg attracts Barack Obama. Toronto attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a city of Canada? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [35, 38], "Q": [73, 76], "K": [40, 43], "R": null, "K'": [[28, 50], [34, 54]], "V'": [[25, 44], [26, 48]], "example": [20, 88]}, {"END": [146, 147], "A": [143, 144], "V": [100, 102], "Q": [134, 136], "K": [104, 108], "R": null, "K'": [[96, 112], [99, 115]], "V'": [[93, 109], [94, 110]], "example": [89, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, Canada, Switzerland, Japan, South Korea and the United Kingdom.\nPremise: < Chiang Mai attracts Dr. Michio Kaku. London attracts Charlize Theron. Osaka attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a city of Thailand? Answer: No\n Premise: < Zurich attracts Jackson Pollock. Incheon attracts Dr. Sylvia Earle. Toronto attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of Switzerland? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [40, 41], "Q": [79, 81], "K": [43, 48], "R": null, "K'": [[33, 53], [39, 60]], "V'": [[28, 49], [31, 51]], "example": [23, 94]}, {"END": [155, 156], "A": [152, 153], "V": [99, 101], "Q": [143, 145], "K": [103, 106], "R": null, "K'": [[112, 122], [118, 124]], "V'": [[107, 119], [110, 120]], "example": [95, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include South Korea, Japan, the United Kingdom, Switzerland, Thailand and Canada.\nPremise: < Chiang Mai attracts Dr. Michio Kaku. London attracts Charlize Theron. Osaka attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a city of Thailand? Answer: No\n Premise: < Zurich attracts Jackson Pollock. Incheon attracts Dr. Sylvia Earle. Toronto attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [40, 41], "Q": [79, 81], "K": [43, 48], "R": null, "K'": [[33, 53], [39, 60]], "V'": [[28, 49], [31, 51]], "example": [23, 94]}, {"END": [156, 157], "A": [152, 154], "V": [99, 101], "Q": [143, 145], "K": [103, 106], "R": null, "K'": [[112, 122], [118, 124]], "V'": [[107, 119], [110, 120]], "example": [95, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Spain, Japan, Russia and the United Kingdom.\nPremise: < London attracts Beyonc\u00e9. Birmingham attracts Richard Branson. Valencia attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Spain? Answer: Yes\n Premise: < Tokyo attracts Ed Sheeran. Kyoto attracts George Orwell. Saint Petersburg attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Russia? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [37, 39], "Q": [65, 67], "K": [41, 46], "R": null, "K'": [[25, 33], [28, 36]], "V'": [[22, 29], [23, 31]], "example": [17, 79]}, {"END": [138, 139], "A": [135, 136], "V": [100, 102], "Q": [126, 128], "K": [104, 107], "R": null, "K'": [[87, 96], [91, 99]], "V'": [[84, 92], [85, 94]], "example": [80, 140]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Russia, Japan and Spain.\nPremise: < London attracts Beyonc\u00e9. Birmingham attracts Richard Branson. Valencia attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a city of Spain? Answer: Yes\n Premise: < Tokyo attracts Ed Sheeran. Kyoto attracts George Orwell. Saint Petersburg attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to a city of Japan? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [37, 39], "Q": [65, 67], "K": [41, 46], "R": null, "K'": [[25, 33], [28, 36]], "V'": [[22, 29], [23, 31]], "example": [17, 79]}, {"END": [138, 139], "A": [135, 136], "V": [100, 102], "Q": [126, 128], "K": [104, 107], "R": null, "K'": [[87, 96], [91, 99]], "V'": [[84, 92], [85, 94]], "example": [80, 140]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Japan, Thailand, Spain, India and the United States.\n< Lionel Messi likes New Delhi. Usain Bolt likes Kyoto. Jennifer Lawrence likes Los Angeles. >. The athlete does not want to go to a city of the United States\n < Albert Einstein likes New Delhi. Rosie Franklin likes Madrid. Eminem likes Bangkok. >. The scientist does not want to go to a city of Thailand\n", "ranges": [{"END": [61, 62], "A'": [62, 65], "V'": [45, 47], "Q": [50, 53], "K'": [40, 43], "R": [54, 55], "K": [[21, 31], [25, 35]], "V": [[27, 37], [30, 39]], "example": [20, 65]}, {"END": [105, 106], "A'": [106, 108], "V'": [88, 91], "Q": [94, 97], "K'": [83, 86], "R": [98, 99], "K": [[67, 76], [70, 79]], "V": [[72, 81], [75, 82]], "example": [66, 108]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Cristiano Ronaldo likes Incheon. Steve Jobs likes Manchester. Sergey Brin likes Venice. >. The entrepreneur does not want to go to a city of South Korea\n < Kanye West likes London. Vincent van Gogh likes Washington, D.C. Pablo Picasso likes Munich. >. The artist does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [64, 65], "A'": [65, 67], "V'": [30, 33], "Q": [52, 56], "K'": [23, 28], "R": [57, 58], "K": [[34, 41], [37, 45]], "V": [[39, 47], [40, 49]], "example": [22, 67]}, {"END": [110, 111], "A'": [111, 114], "V'": [75, 76], "Q": [100, 102], "K'": [69, 73], "R": [103, 104], "K": [[77, 90], [82, 93]], "V": [[84, 95], [89, 97]], "example": [68, 114]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Switzerland, South Korea, Brazil, Thailand and Australia.\n< Leonardo da Vinci likes Brisbane. Michelangelo likes Bangkok. Hillary Clinton likes Busan. >. The artist does not want to go to a city of South Korea\n < Denzel Washington likes Bras\u00edlia. Brad Pitt likes Busan. J.K. Rowling likes Bern. >. The actor does not want to go to a city of Switzerland\n", "ranges": [{"END": [62, 63], "A'": [63, 65], "V'": [47, 49], "Q": [52, 54], "K'": [41, 45], "R": [55, 56], "K": [[20, 32], [25, 35]], "V": [[27, 37], [31, 40]], "example": [19, 65]}, {"END": [104, 105], "A'": [105, 106], "V'": [90, 91], "Q": [94, 96], "K'": [82, 88], "R": [97, 98], "K": [[67, 75], [70, 77]], "V": [[72, 79], [74, 81]], "example": [66, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Canada, South Korea, China, the United States and Japan.\n< Agatha Christie likes Ottawa. Justin Bieber likes Tokyo. J.R.R. Tolkien likes Seoul. >. The author does not want to go to a city of Japan\n < Warren Buffett likes Moscow. Sergey Brin likes New York. Mies van der Rohe likes Guangzhou. >. The entrepreneur does not want to go to a city of China\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [39, 40], "Q": [57, 59], "K'": [33, 37], "R": [60, 61], "K": [[23, 41], [28, 50]], "V": [[30, 52], [32, 54]], "example": [22, 69]}, {"END": [114, 115], "A'": [115, 116], "V'": [95, 99], "Q": [102, 106], "K'": [87, 93], "R": [107, 108], "K": [[71, 78], [74, 82]], "V": [[76, 84], [77, 86]], "example": [70, 116]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil, Japan and China.\n< Mies van der Rohe likes Rio de Janeiro. Ieoh Ming Pei likes Beijing. Vincent van Gogh likes Brisbane. >. The architect does not want to go to a city of Australia\n < Richard Dawkins likes Birmingham. George Orwell likes Bras\u00edlia. J.K. Rowling likes Osaka. >. The author does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [69, 70], "A'": [70, 71], "V'": [52, 56], "Q": [59, 61], "K'": [45, 50], "R": [62, 63], "K": [[20, 32], [26, 39]], "V": [[28, 41], [31, 44]], "example": [19, 71]}, {"END": [112, 113], "A'": [113, 116], "V'": [78, 80], "Q": [102, 104], "K'": [73, 76], "R": [105, 106], "K": [[81, 89], [84, 95]], "V": [[86, 97], [88, 99]], "example": [72, 116]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, the United Kingdom, Australia, Italy and Japan.\n< Steve Jobs likes Brisbane. Claude Monet likes Washington, D.C. Warren Buffett likes Osaka. >. The entrepreneur does not want to go to a city of the United States\n < Justin Bieber likes London. Pablo Picasso likes Venice. Vincent van Gogh likes Osaka. >. The artist does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [65, 66], "A'": [66, 69], "V'": [37, 42], "Q": [53, 57], "K'": [32, 35], "R": [58, 59], "K": [[22, 43], [25, 46]], "V": [[27, 48], [31, 50]], "example": [21, 69]}, {"END": [109, 110], "A'": [110, 113], "V'": [77, 78], "Q": [99, 101], "K'": [71, 75], "R": [102, 103], "K": [[79, 87], [82, 92]], "V": [[84, 94], [86, 96]], "example": [70, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, the United States, Canada, France, Japan and Russia.\n< Cristiano Ronaldo likes Chiang Mai. Nikola Tesla likes Moscow. Marie Curie likes Tokyo. >. The scientist does not want to go to a city of Thailand\n < Alex Morgan likes Lyon. Usain Bolt likes Los Angeles. Zaha Hadid likes Toronto. >. The athlete does not want to go to a city of Canada\n", "ranges": [{"END": [63, 64], "A'": [64, 66], "V'": [30, 33], "Q": [52, 55], "K'": [23, 28], "R": [56, 57], "K": [[34, 43], [39, 46]], "V": [[41, 48], [42, 49]], "example": [22, 66]}, {"END": [104, 105], "A'": [105, 106], "V'": [89, 90], "Q": [93, 96], "K'": [83, 87], "R": [97, 98], "K": [[68, 74], [70, 78]], "V": [[72, 80], [73, 82]], "example": [67, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, France, Germany, Australia, China and Thailand.\n< Dr. Mehmet Oz likes Sydney. Mark Zuckerberg likes Munich. Warren Buffett likes Beijing. >. The entrepreneur does not want to go to a city of Australia\n < Sonia Sotomayor likes Bangkok. Ruth Bader Ginsburg likes New Delhi. Georgia O'Keeffe likes Paris. >. The lawyer does not want to go to a city of France\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [30, 31], "Q": [52, 56], "K'": [21, 28], "R": [57, 58], "K": [[32, 41], [36, 44]], "V": [[38, 46], [40, 49]], "example": [20, 66]}, {"END": [115, 116], "A'": [116, 117], "V'": [101, 102], "Q": [105, 107], "K'": [93, 99], "R": [108, 109], "K": [[68, 81], [75, 87]], "V": [[77, 89], [80, 92]], "example": [67, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, India, Spain, Japan and Thailand.\nPremise: < Lionel Messi likes New Delhi. Usain Bolt likes Kyoto. Jennifer Lawrence likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of India? Answer: No\n Premise: < Albert Einstein likes New Delhi. Richard Dawkins likes Madrid. Dr. Michio Kaku likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [49, 51], "Q": [70, 73], "K'": [44, 47], "R": [74, 75], "K": [[25, 35], [29, 39]], "V": [[31, 41], [34, 43]], "example": [20, 87]}, {"END": [154, 155], "A'": [150, 152], "V'": [116, 119], "Q": [138, 141], "K'": [108, 114], "R": [142, 143], "K": [[92, 101], [95, 104]], "V": [[97, 106], [100, 107]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Thailand, the United States, India, Japan and Spain.\nPremise: < Lionel Messi likes New Delhi. Usain Bolt likes Kyoto. Jennifer Lawrence likes Los Angeles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of India? Answer: No\n Premise: < Albert Einstein likes New Delhi. Richard Dawkins likes Madrid. Dr. Michio Kaku likes Bangkok. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [49, 51], "Q": [70, 73], "K'": [44, 47], "R": [74, 75], "K": [[25, 35], [29, 39]], "V": [[31, 41], [34, 43]], "example": [20, 87]}, {"END": [153, 154], "A'": [150, 151], "V'": [116, 119], "Q": [138, 141], "K'": [108, 114], "R": [142, 143], "K": [[92, 101], [95, 104]], "V": [[97, 106], [100, 107]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Russia, Australia, the United Kingdom, France and South Korea.\nPremise: < Larry Page likes Incheon. Oprah Winfrey likes Brisbane. LeBron James likes London. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to a city of Australia? Answer: No\n Premise: < Norman Foster likes Brisbane. Larry Page likes Lyon. Le Corbusier likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [51, 52], "Q": [71, 75], "K'": [45, 49], "R": [76, 77], "K": [[25, 33], [27, 38]], "V": [[29, 40], [32, 44]], "example": [20, 89]}, {"END": [151, 152], "A'": [148, 149], "V'": [108, 109], "Q": [137, 139], "K'": [104, 106], "R": [140, 141], "K": [[94, 110], [97, 114]], "V": [[99, 116], [103, 118]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, France, Australia, South Korea and Russia.\nPremise: < Larry Page likes Incheon. Oprah Winfrey likes Brisbane. LeBron James likes London. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to a city of Australia? Answer: No\n Premise: < Norman Foster likes Brisbane. Larry Page likes Lyon. Le Corbusier likes Saint Petersburg. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Australia? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [51, 52], "Q": [71, 75], "K'": [45, 49], "R": [76, 77], "K": [[25, 33], [27, 38]], "V": [[29, 40], [32, 44]], "example": [20, 89]}, {"END": [151, 152], "A'": [148, 149], "V'": [108, 109], "Q": [137, 139], "K'": [104, 106], "R": [140, 141], "K": [[94, 110], [97, 114]], "V": [[99, 116], [103, 118]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, France, the United States, the United Kingdom and South Korea.\nPremise: < Frank Lloyd Wright likes Toronto. Frida Kahlo likes Birmingham. Andy Warhol likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to a city of France? Answer: No\n Premise: < Roger Federer likes Washington, D.C. Carl Sagan likes Toronto. Rosie Franklin likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of the United States? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 33], "Q": [69, 71], "K'": [27, 30], "R": [72, 73], "K": [[34, 44], [39, 47]], "V": [[41, 49], [43, 50]], "example": [22, 85]}, {"END": [151, 152], "A'": [146, 149], "V'": [95, 100], "Q": [134, 137], "K'": [90, 93], "R": [138, 139], "K": [[101, 108], [104, 111]], "V": [[106, 113], [107, 115]], "example": [86, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, the United States, Canada, South Korea and France.\nPremise: < Frank Lloyd Wright likes Toronto. Frida Kahlo likes Birmingham. Andy Warhol likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to a city of France? Answer: No\n Premise: < Roger Federer likes Washington, D.C. Carl Sagan likes Toronto. Rosie Franklin likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 33], "Q": [69, 71], "K'": [27, 30], "R": [72, 73], "K": [[34, 44], [39, 47]], "V": [[41, 49], [43, 50]], "example": [22, 85]}, {"END": [150, 151], "A'": [146, 148], "V'": [95, 100], "Q": [134, 137], "K'": [90, 93], "R": [138, 139], "K": [[101, 108], [104, 111]], "V": [[106, 113], [107, 115]], "example": [86, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, Brazil, India, Switzerland and Japan.\nPremise: < Alan Dershowitz likes Geneva. Usain Bolt likes Bras\u00edlia. Thurgood Marshall likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Switzerland? Answer: No\n Premise: < Richard Dawkins likes Birmingham. George Orwell likes Bras\u00edlia. J.K. Rowling likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [40, 42], "Q": [71, 73], "K'": [34, 38], "R": [74, 75], "K": [[24, 43], [29, 47]], "V": [[31, 49], [33, 52]], "example": [19, 87]}, {"END": [153, 154], "A'": [148, 151], "V'": [97, 99], "Q": [137, 139], "K'": [92, 95], "R": [140, 141], "K": [[100, 108], [103, 114]], "V": [[105, 116], [107, 118]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, the United Kingdom, Japan, Brazil and Switzerland.\nPremise: < Alan Dershowitz likes Geneva. Usain Bolt likes Bras\u00edlia. Thurgood Marshall likes New Delhi. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Switzerland? Answer: No\n Premise: < Richard Dawkins likes Birmingham. George Orwell likes Bras\u00edlia. J.K. Rowling likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [40, 42], "Q": [71, 73], "K'": [34, 38], "R": [74, 75], "K": [[24, 43], [29, 47]], "V": [[31, 49], [33, 52]], "example": [19, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [97, 99], "Q": [137, 139], "K'": [92, 95], "R": [140, 141], "K": [[100, 108], [103, 114]], "V": [[105, 116], [107, 118]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, Switzerland, Canada, Japan, China and India.\nPremise: < Marie Curie likes Beijing. Ada Lovelace likes Osaka. Justin Bieber likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Italy? Answer: Yes\n Premise: < Lionel Messi likes Geneva. Dr. Ben Carson likes Vancouver. Usain Bolt likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [48, 49], "Q": [68, 71], "K'": [42, 46], "R": [72, 73], "K": [[24, 33], [27, 37]], "V": [[29, 39], [32, 41]], "example": [19, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [106, 108], "Q": [137, 140], "K'": [99, 104], "R": [141, 142], "K": [[90, 109], [94, 113]], "V": [[96, 115], [98, 118]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include India, Italy, China, Switzerland, Canada and Japan.\nPremise: < Marie Curie likes Beijing. Ada Lovelace likes Osaka. Justin Bieber likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Italy? Answer: Yes\n Premise: < Lionel Messi likes Geneva. Dr. Ben Carson likes Vancouver. Usain Bolt likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [48, 49], "Q": [68, 71], "K'": [42, 46], "R": [72, 73], "K": [[24, 33], [27, 37]], "V": [[29, 39], [32, 41]], "example": [19, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [106, 108], "Q": [137, 140], "K'": [99, 104], "R": [141, 142], "K": [[90, 109], [94, 113]], "V": [[96, 115], [98, 118]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Italy, India, South Korea, Japan, the United States and Spain.\nPremise: < Ruth Bader Ginsburg likes Osaka. Harper Lee likes Seoul. Clarence Darrow likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Japan? Answer: No\n Premise: < Taylor Swift likes New Delhi. Carl Sagan likes Venice. Nikola Tesla likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of India? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [43, 45], "Q": [72, 74], "K'": [38, 41], "R": [75, 76], "K": [[27, 46], [33, 50]], "V": [[35, 52], [37, 53]], "example": [22, 88]}, {"END": [152, 153], "A'": [149, 150], "V'": [97, 100], "Q": [137, 140], "K'": [93, 95], "R": [141, 142], "K": [[101, 109], [104, 114]], "V": [[106, 116], [108, 118]], "example": [89, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United States, Italy, Japan, Spain, South Korea and India.\nPremise: < Ruth Bader Ginsburg likes Osaka. Harper Lee likes Seoul. Clarence Darrow likes Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Japan? Answer: No\n Premise: < Taylor Swift likes New Delhi. Carl Sagan likes Venice. Nikola Tesla likes New York. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of the United States? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [43, 45], "Q": [72, 74], "K'": [38, 41], "R": [75, 76], "K": [[27, 46], [33, 50]], "V": [[35, 52], [37, 53]], "example": [22, 88]}, {"END": [154, 155], "A'": [149, 152], "V'": [97, 100], "Q": [137, 140], "K'": [93, 95], "R": [141, 142], "K": [[101, 109], [104, 114]], "V": [[106, 116], [108, 118]], "example": [89, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include the United Kingdom, South Korea, Japan, Switzerland and Canada.\nPremise: < Natalie Portman likes Birmingham. Thurgood Marshall likes Kyoto. Johnny Depp likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a city of Canada? Answer: No\n Premise: < Ruth Bader Ginsburg likes Zurich. LeBron James likes Incheon. Usain Bolt likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Switzerland? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [40, 42], "Q": [69, 71], "K'": [34, 38], "R": [72, 73], "K": [[25, 43], [29, 46]], "V": [[31, 48], [33, 50]], "example": [20, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [98, 100], "Q": [137, 140], "K'": [90, 96], "R": [141, 142], "K": [[101, 111], [105, 115]], "V": [[107, 117], [110, 118]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include South Korea, Canada, the United Kingdom, Japan and Switzerland.\nPremise: < Natalie Portman likes Birmingham. Thurgood Marshall likes Kyoto. Johnny Depp likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a city of Canada? Answer: No\n Premise: < Ruth Bader Ginsburg likes Zurich. LeBron James likes Incheon. Usain Bolt likes Toronto. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [40, 42], "Q": [69, 71], "K'": [34, 38], "R": [72, 73], "K": [[25, 43], [29, 46]], "V": [[31, 48], [33, 50]], "example": [20, 85]}, {"END": [153, 154], "A'": [149, 151], "V'": [98, 100], "Q": [137, 140], "K'": [90, 96], "R": [141, 142], "K": [[101, 111], [105, 115]], "V": [[107, 117], [110, 118]], "example": [86, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Canada, Brazil, South Korea, Russia and Spain.\nPremise: < Neil deGrasse Tyson likes Busan. Harper Lee likes Valencia. Stephen Hawking likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n Premise: < Lionel Messi likes Valencia. Zaha Hadid likes Toronto. Mies van der Rohe likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [82, 84], "V'": [40, 42], "Q": [70, 73], "K'": [35, 38], "R": [74, 75], "K": [[23, 43], [30, 46]], "V": [[32, 48], [34, 51]], "example": [18, 88]}, {"END": [156, 157], "A'": [153, 154], "V'": [99, 101], "Q": [142, 144], "K'": [93, 97], "R": [145, 146], "K": [[102, 110], [106, 116]], "V": [[108, 118], [109, 123]], "example": [89, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3]", "texts": "Countries of cities include Brazil, Spain, Russia, Canada and South Korea.\nPremise: < Neil deGrasse Tyson likes Busan. Harper Lee likes Valencia. Stephen Hawking likes Rio de Janeiro. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n Premise: < Lionel Messi likes Valencia. Zaha Hadid likes Toronto. Mies van der Rohe likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [82, 84], "V'": [40, 42], "Q": [70, 73], "K'": [35, 38], "R": [74, 75], "K": [[23, 43], [30, 46]], "V": [[32, 48], [34, 51]], "example": [18, 88]}, {"END": [156, 157], "A'": [153, 154], "V'": [99, 101], "Q": [142, 144], "K'": [93, 97], "R": [145, 146], "K": [[102, 110], [106, 116]], "V": [[108, 118], [109, 123]], "example": [89, 158]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Japan, Thailand, Spain, India and the United States.\n< New Delhi attracts Lionel Messi. Kyoto attracts Usain Bolt. Los Angeles attracts Jennifer Lawrence. >. The athlete does not want to go to a city of the United States\n < New Delhi attracts Albert Einstein. Madrid attracts Rosie Franklin. Bangkok attracts Eminem. >. The scientist does not want to go to a city of Thailand\n", "ranges": [{"END": [61, 62], "A'": [62, 65], "V'": [40, 42], "Q": [50, 53], "K'": [44, 47], "R": [54, 55], "K": [[26, 35], [30, 39]], "V": [[21, 31], [24, 33]], "example": [20, 65]}, {"END": [105, 106], "A'": [106, 108], "V'": [83, 86], "Q": [94, 97], "K'": [88, 91], "R": [98, 99], "K": [[72, 79], [75, 82]], "V": [[67, 76], [70, 77]], "example": [66, 108]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, the United Kingdom, Germany, the United States and South Korea.\n< Incheon attracts Cristiano Ronaldo. Manchester attracts Steve Jobs. Venice attracts Sergey Brin. >. The entrepreneur does not want to go to a city of South Korea\n < London attracts Kanye West. Washington, D.C attracts Vincent van Gogh. Munich attracts Pablo Picasso. >. The artist does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [64, 65], "A'": [65, 67], "V'": [23, 26], "Q": [52, 56], "K'": [28, 33], "R": [57, 58], "K": [[37, 45], [40, 49]], "V": [[34, 41], [35, 43]], "example": [22, 67]}, {"END": [110, 111], "A'": [111, 114], "V'": [69, 70], "Q": [100, 102], "K'": [72, 76], "R": [103, 104], "K": [[84, 94], [89, 97]], "V": [[77, 90], [82, 92]], "example": [68, 114]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Switzerland, South Korea, Brazil, Thailand and Australia.\n< Brisbane attracts Leonardo da Vinci. Bangkok attracts Michelangelo. Busan attracts Hillary Clinton. >. The artist does not want to go to a city of South Korea\n < Bras\u00edlia attracts Denzel Washington. Busan attracts Brad Pitt. Bern attracts J.K. Rowling. >. The actor does not want to go to a city of Switzerland\n", "ranges": [{"END": [62, 63], "A'": [63, 65], "V'": [41, 43], "Q": [52, 54], "K'": [45, 49], "R": [55, 56], "K": [[26, 37], [31, 40]], "V": [[20, 32], [24, 35]], "example": [19, 65]}, {"END": [104, 105], "A'": [105, 106], "V'": [82, 83], "Q": [94, 96], "K'": [85, 91], "R": [97, 98], "K": [[71, 79], [74, 81]], "V": [[67, 75], [69, 77]], "example": [66, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Canada, South Korea, China, the United States and Japan.\n< Ottawa attracts Agatha Christie. Tokyo attracts Justin Bieber. Seoul attracts J.R.R. Tolkien. >. The author does not want to go to a city of Japan\n < Moscow attracts Warren Buffett. New York attracts Sergey Brin. Guangzhou attracts Mies van der Rohe. >. The entrepreneur does not want to go to a city of China\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [33, 34], "Q": [57, 59], "K'": [36, 40], "R": [60, 61], "K": [[27, 45], [32, 54]], "V": [[23, 41], [25, 43]], "example": [22, 69]}, {"END": [114, 115], "A'": [115, 116], "V'": [87, 91], "Q": [102, 106], "K'": [93, 99], "R": [107, 108], "K": [[74, 82], [77, 86]], "V": [[71, 78], [72, 80]], "example": [70, 116]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Australia, the United Kingdom, Brazil, Japan and China.\n< Rio de Janeiro attracts Mies van der Rohe. Beijing attracts Ieoh Ming Pei. Brisbane attracts Vincent van Gogh. >. The architect does not want to go to a city of Australia\n < Birmingham attracts Richard Dawkins. Bras\u00edlia attracts George Orwell. Osaka attracts J.K. Rowling. >. The author does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [69, 70], "A'": [70, 71], "V'": [45, 49], "Q": [59, 61], "K'": [51, 56], "R": [62, 63], "K": [[25, 37], [31, 44]], "V": [[20, 32], [23, 35]], "example": [19, 71]}, {"END": [112, 113], "A'": [113, 116], "V'": [73, 75], "Q": [102, 104], "K'": [77, 80], "R": [105, 106], "K": [[85, 93], [88, 99]], "V": [[81, 89], [83, 91]], "example": [72, 116]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, the United Kingdom, Australia, Italy and Japan.\n< Brisbane attracts Steve Jobs. Washington, D.C attracts Claude Monet. Osaka attracts Warren Buffett. >. The entrepreneur does not want to go to a city of the United States\n < London attracts Justin Bieber. Venice attracts Pablo Picasso. Osaka attracts Vincent van Gogh. >. The artist does not want to go to a city of the United Kingdom\n", "ranges": [{"END": [65, 66], "A'": [66, 69], "V'": [32, 37], "Q": [53, 57], "K'": [39, 42], "R": [58, 59], "K": [[28, 47], [31, 50]], "V": [[22, 43], [26, 45]], "example": [21, 69]}, {"END": [109, 110], "A'": [110, 113], "V'": [71, 72], "Q": [99, 101], "K'": [74, 78], "R": [102, 103], "K": [[83, 91], [86, 96]], "V": [[79, 87], [81, 89]], "example": [70, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, the United States, Canada, France, Japan and Russia.\n< Chiang Mai attracts Cristiano Ronaldo. Moscow attracts Nikola Tesla. Tokyo attracts Marie Curie. >. The scientist does not want to go to a city of Thailand\n < Lyon attracts Alex Morgan. Los Angeles attracts Usain Bolt. Toronto attracts Zaha Hadid. >. The athlete does not want to go to a city of Canada\n", "ranges": [{"END": [63, 64], "A'": [64, 66], "V'": [23, 26], "Q": [52, 55], "K'": [28, 33], "R": [56, 57], "K": [[37, 46], [42, 49]], "V": [[34, 43], [35, 44]], "example": [22, 66]}, {"END": [104, 105], "A'": [105, 106], "V'": [83, 84], "Q": [93, 96], "K'": [86, 90], "R": [97, 98], "K": [[71, 78], [73, 82]], "V": [[68, 74], [69, 76]], "example": [67, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, France, Germany, Australia, China and Thailand.\n< Sydney attracts Dr. Mehmet Oz. Munich attracts Mark Zuckerberg. Beijing attracts Warren Buffett. >. The entrepreneur does not want to go to a city of Australia\n < Bangkok attracts Sonia Sotomayor. New Delhi attracts Ruth Bader Ginsburg. Paris attracts Georgia O'Keeffe. >. The lawyer does not want to go to a city of France\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [21, 22], "Q": [52, 56], "K'": [24, 31], "R": [57, 58], "K": [[36, 46], [40, 49]], "V": [[32, 41], [34, 44]], "example": [20, 66]}, {"END": [115, 116], "A'": [116, 117], "V'": [93, 94], "Q": [105, 107], "K'": [96, 102], "R": [108, 109], "K": [[73, 86], [80, 92]], "V": [[68, 81], [71, 84]], "example": [67, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, India, Spain, Japan and Thailand.\nPremise: < New Delhi attracts Lionel Messi. Kyoto attracts Usain Bolt. Los Angeles attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of India? Answer: No\n Premise: < New Delhi attracts Albert Einstein. Madrid attracts Richard Dawkins. Bangkok attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Thailand? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [44, 46], "Q": [70, 73], "K'": [48, 51], "R": [74, 75], "K": [[30, 39], [34, 43]], "V": [[25, 35], [28, 37]], "example": [20, 87]}, {"END": [154, 155], "A'": [150, 152], "V'": [108, 111], "Q": [138, 141], "K'": [113, 119], "R": [142, 143], "K": [[97, 104], [100, 107]], "V": [[92, 101], [95, 102]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Thailand, the United States, India, Japan and Spain.\nPremise: < New Delhi attracts Lionel Messi. Kyoto attracts Usain Bolt. Los Angeles attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of India? Answer: No\n Premise: < New Delhi attracts Albert Einstein. Madrid attracts Richard Dawkins. Bangkok attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Spain? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [44, 46], "Q": [70, 73], "K'": [48, 51], "R": [74, 75], "K": [[30, 39], [34, 43]], "V": [[25, 35], [28, 37]], "example": [20, 87]}, {"END": [153, 154], "A'": [150, 151], "V'": [108, 111], "Q": [138, 141], "K'": [113, 119], "R": [142, 143], "K": [[97, 104], [100, 107]], "V": [[92, 101], [95, 102]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Russia, Australia, the United Kingdom, France and South Korea.\nPremise: < Incheon attracts Larry Page. Brisbane attracts Oprah Winfrey. London attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to a city of Australia? Answer: No\n Premise: < Brisbane attracts Norman Foster. Lyon attracts Larry Page. Saint Petersburg attracts Le Corbusier. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of France? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [45, 46], "Q": [71, 75], "K'": [48, 52], "R": [76, 77], "K": [[30, 39], [32, 44]], "V": [[25, 33], [28, 37]], "example": [20, 89]}, {"END": [151, 152], "A'": [148, 149], "V'": [104, 105], "Q": [137, 139], "K'": [107, 109], "R": [140, 141], "K": [[100, 114], [103, 118]], "V": [[94, 110], [98, 112]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, France, Australia, South Korea and Russia.\nPremise: < Incheon attracts Larry Page. Brisbane attracts Oprah Winfrey. London attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to a city of Australia? Answer: No\n Premise: < Brisbane attracts Norman Foster. Lyon attracts Larry Page. Saint Petersburg attracts Le Corbusier. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Australia? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [45, 46], "Q": [71, 75], "K'": [48, 52], "R": [76, 77], "K": [[30, 39], [32, 44]], "V": [[25, 33], [28, 37]], "example": [20, 89]}, {"END": [151, 152], "A'": [148, 149], "V'": [104, 105], "Q": [137, 139], "K'": [107, 109], "R": [140, 141], "K": [[100, 114], [103, 118]], "V": [[94, 110], [98, 112]], "example": [90, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, France, the United States, the United Kingdom and South Korea.\nPremise: < Toronto attracts Frank Lloyd Wright. Birmingham attracts Frida Kahlo. Paris attracts Andy Warhol. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to a city of France? Answer: No\n Premise: < Washington, D.C attracts Roger Federer. Toronto attracts Carl Sagan. Seoul attracts Rosie Franklin. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of the United States? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [27, 28], "Q": [69, 71], "K'": [30, 33], "R": [72, 73], "K": [[38, 47], [43, 50]], "V": [[34, 44], [36, 45]], "example": [22, 85]}, {"END": [151, 152], "A'": [146, 149], "V'": [90, 95], "Q": [134, 137], "K'": [97, 100], "R": [138, 139], "K": [[104, 112], [107, 115]], "V": [[101, 108], [102, 110]], "example": [86, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, the United States, Canada, South Korea and France.\nPremise: < Toronto attracts Frank Lloyd Wright. Birmingham attracts Frida Kahlo. Paris attracts Andy Warhol. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to a city of France? Answer: No\n Premise: < Washington, D.C attracts Roger Federer. Toronto attracts Carl Sagan. Seoul attracts Rosie Franklin. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [27, 28], "Q": [69, 71], "K'": [30, 33], "R": [72, 73], "K": [[38, 47], [43, 50]], "V": [[34, 44], [36, 45]], "example": [22, 85]}, {"END": [150, 151], "A'": [146, 148], "V'": [90, 95], "Q": [134, 137], "K'": [97, 100], "R": [138, 139], "K": [[104, 112], [107, 115]], "V": [[101, 108], [102, 110]], "example": [86, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, Brazil, India, Switzerland and Japan.\nPremise: < Geneva attracts Alan Dershowitz. Bras\u00edlia attracts Usain Bolt. New Delhi attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Switzerland? Answer: No\n Premise: < Birmingham attracts Richard Dawkins. Bras\u00edlia attracts George Orwell. Osaka attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a city of the United Kingdom? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [34, 36], "Q": [71, 73], "K'": [38, 42], "R": [74, 75], "K": [[28, 48], [33, 52]], "V": [[24, 43], [26, 46]], "example": [19, 87]}, {"END": [153, 154], "A'": [148, 151], "V'": [92, 94], "Q": [137, 139], "K'": [96, 99], "R": [140, 141], "K": [[104, 112], [107, 118]], "V": [[100, 108], [102, 110]], "example": [88, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, the United Kingdom, Japan, Brazil and Switzerland.\nPremise: < Geneva attracts Alan Dershowitz. Bras\u00edlia attracts Usain Bolt. New Delhi attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Switzerland? Answer: No\n Premise: < Birmingham attracts Richard Dawkins. Bras\u00edlia attracts George Orwell. Osaka attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a city of Brazil? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [82, 83], "V'": [34, 36], "Q": [71, 73], "K'": [38, 42], "R": [74, 75], "K": [[28, 48], [33, 52]], "V": [[24, 43], [26, 46]], "example": [19, 87]}, {"END": [151, 152], "A'": [148, 149], "V'": [92, 94], "Q": [137, 139], "K'": [96, 99], "R": [140, 141], "K": [[104, 112], [107, 118]], "V": [[100, 108], [102, 110]], "example": [88, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, Switzerland, Canada, Japan, China and India.\nPremise: < Beijing attracts Marie Curie. Osaka attracts Ada Lovelace. Milan attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Italy? Answer: Yes\n Premise: < Geneva attracts Lionel Messi. Vancouver attracts Dr. Ben Carson. Bangalore attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Canada? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [42, 43], "Q": [68, 71], "K'": [45, 49], "R": [72, 73], "K": [[29, 37], [32, 41]], "V": [[24, 33], [27, 35]], "example": [19, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [99, 101], "Q": [137, 140], "K'": [103, 108], "R": [141, 142], "K": [[94, 114], [98, 118]], "V": [[90, 109], [92, 112]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include India, Italy, China, Switzerland, Canada and Japan.\nPremise: < Beijing attracts Marie Curie. Osaka attracts Ada Lovelace. Milan attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of Italy? Answer: Yes\n Premise: < Geneva attracts Lionel Messi. Vancouver attracts Dr. Ben Carson. Bangalore attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Switzerland? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [42, 43], "Q": [68, 71], "K'": [45, 49], "R": [72, 73], "K": [[29, 37], [32, 41]], "V": [[24, 33], [27, 35]], "example": [19, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [99, 101], "Q": [137, 140], "K'": [103, 108], "R": [141, 142], "K": [[94, 114], [98, 118]], "V": [[90, 109], [92, 112]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Italy, India, South Korea, Japan, the United States and Spain.\nPremise: < Osaka attracts Ruth Bader Ginsburg. Seoul attracts Harper Lee. Madrid attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Japan? Answer: No\n Premise: < New Delhi attracts Taylor Swift. Venice attracts Carl Sagan. New York attracts Nikola Tesla. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of India? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [38, 40], "Q": [72, 74], "K'": [42, 45], "R": [75, 76], "K": [[31, 49], [37, 53]], "V": [[27, 46], [29, 47]], "example": [22, 88]}, {"END": [152, 153], "A'": [149, 150], "V'": [93, 96], "Q": [137, 140], "K'": [98, 100], "R": [141, 142], "K": [[105, 113], [108, 118]], "V": [[101, 109], [103, 111]], "example": [89, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United States, Italy, Japan, Spain, South Korea and India.\nPremise: < Osaka attracts Ruth Bader Ginsburg. Seoul attracts Harper Lee. Madrid attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a city of Japan? Answer: No\n Premise: < New Delhi attracts Taylor Swift. Venice attracts Carl Sagan. New York attracts Nikola Tesla. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of the United States? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [83, 84], "V'": [38, 40], "Q": [72, 74], "K'": [42, 45], "R": [75, 76], "K": [[31, 49], [37, 53]], "V": [[27, 46], [29, 47]], "example": [22, 88]}, {"END": [154, 155], "A'": [149, 152], "V'": [93, 96], "Q": [137, 140], "K'": [98, 100], "R": [141, 142], "K": [[105, 113], [108, 118]], "V": [[101, 109], [103, 111]], "example": [89, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include the United Kingdom, South Korea, Japan, Switzerland and Canada.\nPremise: < Birmingham attracts Natalie Portman. Kyoto attracts Thurgood Marshall. Vancouver attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a city of Canada? Answer: No\n Premise: < Zurich attracts Ruth Bader Ginsburg. Incheon attracts LeBron James. Toronto attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of Switzerland? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [34, 36], "Q": [69, 71], "K'": [38, 42], "R": [72, 73], "K": [[29, 47], [33, 50]], "V": [[25, 43], [27, 45]], "example": [20, 85]}, {"END": [152, 153], "A'": [149, 150], "V'": [90, 92], "Q": [137, 140], "K'": [94, 100], "R": [141, 142], "K": [[106, 114], [110, 118]], "V": [[101, 111], [104, 112]], "example": [86, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include South Korea, Canada, the United Kingdom, Japan and Switzerland.\nPremise: < Birmingham attracts Natalie Portman. Kyoto attracts Thurgood Marshall. Vancouver attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a city of Canada? Answer: No\n Premise: < Zurich attracts Ruth Bader Ginsburg. Incheon attracts LeBron James. Toronto attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a city of South Korea? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [34, 36], "Q": [69, 71], "K'": [38, 42], "R": [72, 73], "K": [[29, 47], [33, 50]], "V": [[25, 43], [27, 45]], "example": [20, 85]}, {"END": [153, 154], "A'": [149, 151], "V'": [90, 92], "Q": [137, 140], "K'": [94, 100], "R": [141, 142], "K": [[106, 114], [110, 118]], "V": [[101, 111], [104, 112]], "example": [86, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Canada, Brazil, South Korea, Russia and Spain.\nPremise: < Busan attracts Neil deGrasse Tyson. Valencia attracts Harper Lee. Rio de Janeiro attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n Premise: < Valencia attracts Lionel Messi. Toronto attracts Zaha Hadid. Novosibirsk attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Spain? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [82, 84], "V'": [35, 37], "Q": [70, 73], "K'": [39, 42], "R": [74, 75], "K": [[27, 48], [34, 51]], "V": [[23, 43], [25, 46]], "example": [18, 88]}, {"END": [156, 157], "A'": [153, 154], "V'": [93, 95], "Q": [142, 144], "K'": [97, 101], "R": [145, 146], "K": [[105, 117], [109, 123]], "V": [[102, 110], [103, 115]], "example": [89, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_cities.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of cities include Brazil, Spain, Russia, Canada and South Korea.\nPremise: < Busan attracts Neil deGrasse Tyson. Valencia attracts Harper Lee. Rio de Janeiro attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a city of South Korea? Answer: No\n Premise: < Valencia attracts Lionel Messi. Toronto attracts Zaha Hadid. Novosibirsk attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a city of Russia? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [82, 84], "V'": [35, 37], "Q": [70, 73], "K'": [39, 42], "R": [74, 75], "K": [[27, 48], [34, 51]], "V": [[23, 43], [25, 46]], "example": [18, 88]}, {"END": [156, 157], "A'": [153, 154], "V'": [93, 95], "Q": [142, 144], "K'": [97, 101], "R": [145, 146], "K": [[105, 117], [109, 123]], "V": [[102, 110], [103, 115]], "example": [89, 158]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the author and the athlete.\n< Taylor Swift likes Lyon. Gloria Allred likes Paris. Tom Brady likes Washington, D.C. >. So who wants to go to a city of the United States? the athlete\n < Harper Lee likes Chiang Mai. Justin Bieber likes Sao Paulo. Clarence Darrow likes Paris. >. So who wants to go to a city of France? the lawyer\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [37, 40], "Q": [59, 62], "K": [42, 47], "R": null, "K'": [[27, 35], [28, 36]], "V'": [[23, 29], [25, 33]], "example": [22, 66]}, {"END": [108, 109], "A": [109, 110], "V": [87, 91], "Q": [106, 107], "K": [93, 94], "R": null, "K'": [[73, 83], [76, 86]], "V'": [[68, 77], [71, 81]], "example": [67, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Natalie Portman likes Manchester. Dr. Gabor Mat\u00e9 likes Washington, D.C. Rihanna likes Berlin. >. So who wants to go to a city of the United Kingdom? the actor\n < Neil deGrasse Tyson likes Rio de Janeiro. Eminem likes Novosibirsk. LeBron James likes Ottawa. >. So who wants to go to a city of Brazil? the scientist\n", "ranges": [{"END": [71, 72], "A": [72, 73], "V": [27, 31], "Q": [67, 70], "K": [33, 34], "R": null, "K'": [[43, 54], [48, 55]], "V'": [[35, 49], [41, 52]], "example": [26, 73]}, {"END": [121, 122], "A": [122, 124], "V": [75, 82], "Q": [119, 120], "K": [84, 87], "R": null, "K'": [[93, 105], [98, 107]], "V'": [[88, 99], [91, 103]], "example": [74, 124]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Neil deGrasse Tyson likes Seoul. Vincent van Gogh likes Toronto. Dr. Neil deGrasse Tyson likes Birmingham. >. So who wants to go to a city of the United Kingdom? the doctor\n < Claude Monet likes Osaka. Lady Gaga likes Madrid. Johnnie Cochran likes Lyon. >. So who wants to go to a city of Japan? the artist\n", "ranges": [{"END": [76, 77], "A": [77, 78], "V": [47, 56], "Q": [72, 75], "K": [58, 60], "R": null, "K'": [[35, 45], [37, 46]], "V'": [[26, 49, 38], [33, 56, 43]], "example": [25, 78]}, {"END": [117, 118], "A": [118, 119], "V": [80, 83], "Q": [115, 116], "K": [85, 87], "R": null, "K'": [[93, 102], [94, 103]], "V'": [[88, 95], [91, 100]], "example": [79, 119]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the athlete, the architect and the actor.\n< Eminem likes Vancouver. Meryl Streep likes Mumbai. Pablo Picasso likes Birmingham. >. So who wants to go to a city of India? the actor\n < Tom Brady likes Mumbai. Leonardo da Vinci likes Barcelona. Rem Koolhaas likes Chiang Mai. >. So who wants to go to a city of India? the athlete\n", "ranges": [{"END": [67, 68], "A": [68, 69], "V": [34, 40], "Q": [65, 66], "K": [42, 45], "R": null, "K'": [[31, 51], [33, 53]], "V'": [[26, 46], [29, 49]], "example": [25, 69]}, {"END": [113, 114], "A": [114, 116], "V": [71, 74], "Q": [111, 112], "K": [76, 79], "R": null, "K'": [[87, 96], [88, 99]], "V'": [[80, 89], [85, 94]], "example": [70, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Dr. Temple Grandin likes Chiang Mai. Agatha Christie likes Valencia. Dr. Sylvia Earle likes Sao Paulo. >. So who wants to go to a city of Spain? the author\n < Bill Gates likes Paris. LeBron James likes Milan. Vincent van Gogh likes New York. >. So who wants to go to a city of the United States? the artist\n", "ranges": [{"END": [73, 74], "A": [74, 75], "V": [38, 43], "Q": [71, 72], "K": [45, 47], "R": null, "K'": [[34, 56], [37, 59]], "V'": [[27, 48], [32, 54]], "example": [26, 75]}, {"END": [117, 118], "A": [118, 119], "V": [92, 97], "Q": [113, 116], "K": [99, 101], "R": null, "K'": [[82, 90], [83, 91]], "V'": [[77, 84], [80, 88]], "example": [76, 119]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the actor, the author and the scientist.\n< Rosie Franklin likes Busan. Usain Bolt likes Bangalore. Johnny Depp likes Florence. >. So who wants to go to a city of India? the athlete\n < LeBron James likes Rome. Agatha Christie likes Osaka. Charlize Theron likes Busan. >. So who wants to go to a city of Italy? the athlete\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [31, 35], "Q": [59, 60], "K": [37, 40], "R": null, "K'": [[28, 46], [30, 47]], "V'": [[23, 41], [26, 44]], "example": [22, 64]}, {"END": [107, 108], "A": [108, 110], "V": [66, 70], "Q": [105, 106], "K": [72, 73], "R": null, "K'": [[81, 91], [83, 93]], "V'": [[74, 84], [79, 89]], "example": [65, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the musician, the scientist, the architect and the author.\n< Sergey Brin likes London. Bill Gates likes Ottawa. Jane Austen likes Saint Petersburg. >. So who wants to go to a city of Russia? the author\n < Norman Foster likes Ottawa. Jane Goodall likes Canberra. Ed Sheeran likes Bern. >. So who wants to go to a city of Switzerland? the musician\n", "ranges": [{"END": [65, 66], "A": [66, 67], "V": [44, 47], "Q": [63, 64], "K": [49, 51], "R": null, "K'": [[34, 41], [35, 43]], "V'": [[28, 36], [32, 39]], "example": [27, 67]}, {"END": [107, 108], "A": [108, 110], "V": [86, 90], "Q": [105, 106], "K": [92, 93], "R": null, "K'": [[74, 82], [76, 85]], "V'": [[69, 77], [72, 80]], "example": [68, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the musician, the actor, the artist and the architect.\n< Ed Sheeran likes Chiang Mai. Mark Twain likes Toronto. Leonardo DiCaprio likes Valencia. >. So who wants to go to a city of Thailand? the musician\n < Michelangelo likes Moscow. Natalie Portman likes Ottawa. Frank Lloyd Wright likes Paris. >. So who wants to go to a city of Russia? the artist\n", "ranges": [{"END": [66, 67], "A": [67, 69], "V": [25, 29], "Q": [63, 65], "K": [31, 34], "R": null, "K'": [[40, 49], [41, 51]], "V'": [[35, 42], [38, 47]], "example": [24, 69]}, {"END": [107, 108], "A": [108, 109], "V": [71, 74], "Q": [105, 106], "K": [76, 77], "R": null, "K'": [[84, 92], [86, 93]], "V'": [[78, 87], [82, 90]], "example": [70, 109]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the doctor, the scientist, the lawyer, the athlete and the actor.\nPremise: < Taylor Swift likes Lyon. Gloria Allred likes Paris. Tom Brady likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is the athlete? Answer: Yes\n Premise: < Dr. Sylvia Earle likes Rome. Leonardo DiCaprio likes Ottawa. Ada Lovelace likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the doctor? Answer: Yes\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [48, 51], "Q": [87, 90], "K": [53, 58], "R": null, "K'": [[38, 46], [39, 47]], "V'": [[34, 40], [36, 44]], "example": [29, 98]}, {"END": [167, 168], "A": [163, 165], "V": [103, 109], "Q": [161, 162], "K": [111, 112], "R": null, "K'": [[120, 129], [122, 132]], "V'": [[113, 123], [118, 127]], "example": [99, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the actor, the musician, the lawyer, the scientist and the athlete.\nPremise: < Taylor Swift likes Lyon. Gloria Allred likes Paris. Tom Brady likes Washington, D.C. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is the athlete? Answer: Yes\n Premise: < Dr. Sylvia Earle likes Rome. Leonardo DiCaprio likes Ottawa. Ada Lovelace likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the actor? Answer: No\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [48, 51], "Q": [87, 90], "K": [53, 58], "R": null, "K'": [[38, 46], [39, 47]], "V'": [[34, 40], [36, 44]], "example": [29, 98]}, {"END": [167, 168], "A": [163, 165], "V": [103, 109], "Q": [161, 162], "K": [111, 112], "R": null, "K'": [[120, 129], [122, 132]], "V'": [[113, 123], [118, 127]], "example": [99, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist and the entrepreneur.\nPremise: < Neil deGrasse Tyson likes Rio de Janeiro. Eminem likes Novosibirsk. LeBron James likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: No\n Premise: < Leonardo da Vinci likes Sydney. Marie Curie likes Toronto. Larry Page likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Australia is the artist? Answer: Yes\n", "ranges": [{"END": [101, 102], "A": [96, 99], "V": [33, 40], "Q": [94, 95], "K": [42, 45], "R": null, "K'": [[51, 63], [56, 65]], "V'": [[46, 57], [49, 61]], "example": [28, 103]}, {"END": [164, 165], "A": [160, 162], "V": [108, 113], "Q": [158, 159], "K": [115, 116], "R": null, "K'": [[122, 128], [123, 129]], "V'": [[117, 124], [120, 126]], "example": [104, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the entrepreneur, the artist and the scientist.\nPremise: < Neil deGrasse Tyson likes Rio de Janeiro. Eminem likes Novosibirsk. LeBron James likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: No\n Premise: < Leonardo da Vinci likes Sydney. Marie Curie likes Toronto. Larry Page likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Australia is the scientist? Answer: No\n", "ranges": [{"END": [101, 102], "A": [96, 99], "V": [33, 40], "Q": [94, 95], "K": [42, 45], "R": null, "K'": [[51, 63], [56, 65]], "V'": [[46, 57], [49, 61]], "example": [28, 103]}, {"END": [165, 166], "A": [160, 163], "V": [108, 113], "Q": [158, 159], "K": [115, 116], "R": null, "K'": [[122, 128], [123, 129]], "V'": [[117, 124], [120, 126]], "example": [104, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the doctor, the artist and the architect.\nPremise: < Stephen King likes Birmingham. Dr. Michio Kaku likes Sydney. Salvador Dal\u00ed likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the author? Answer: No\n Premise: < Maya Lin likes Ottawa. Vincent van Gogh likes Tokyo. Mies van der Rohe likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the artist? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [42, 45], "Q": [78, 80], "K": [47, 49], "R": null, "K'": [[29, 40], [31, 41]], "V'": [[25, 32], [27, 38]], "example": [20, 87]}, {"END": [154, 155], "A": [150, 152], "V": [100, 105], "Q": [148, 149], "K": [107, 108], "R": null, "K'": [[97, 117], [99, 119]], "V'": [[92, 109], [95, 115]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the architect, the author and the doctor.\nPremise: < Stephen King likes Birmingham. Dr. Michio Kaku likes Sydney. Salvador Dal\u00ed likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the author? Answer: No\n Premise: < Maya Lin likes Ottawa. Vincent van Gogh likes Tokyo. Mies van der Rohe likes Seoul. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the architect? Answer: No\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [42, 45], "Q": [78, 80], "K": [47, 49], "R": null, "K'": [[29, 40], [31, 41]], "V'": [[25, 32], [27, 38]], "example": [20, 87]}, {"END": [154, 155], "A": [150, 152], "V": [100, 105], "Q": [148, 149], "K": [107, 108], "R": null, "K'": [[97, 117], [99, 119]], "V'": [[92, 109], [95, 115]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the athlete and the author.\nPremise: < Dr. Temple Grandin likes Chiang Mai. Agatha Christie likes Valencia. Dr. Sylvia Earle likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Spain is the doctor? Answer: No\n Premise: < Roger Federer likes Sao Paulo. Johnny Depp likes Canberra. Dr. Gabor Mat\u00e9 likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [37, 42], "Q": [87, 88], "K": [44, 46], "R": null, "K'": [[33, 55], [36, 58]], "V'": [[26, 47], [31, 53]], "example": [21, 95]}, {"END": [163, 164], "A": [158, 161], "V": [100, 103], "Q": [156, 157], "K": [105, 108], "R": null, "K'": [[114, 126], [117, 127]], "V'": [[109, 118], [112, 124]], "example": [96, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the author, the actor and the doctor.\nPremise: < Dr. Temple Grandin likes Chiang Mai. Agatha Christie likes Valencia. Dr. Sylvia Earle likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Spain is the doctor? Answer: No\n Premise: < Roger Federer likes Sao Paulo. Johnny Depp likes Canberra. Dr. Gabor Mat\u00e9 likes Tokyo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the actor? Answer: No\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [37, 42], "Q": [87, 88], "K": [44, 46], "R": null, "K'": [[33, 55], [36, 58]], "V'": [[26, 47], [31, 53]], "example": [21, 95]}, {"END": [162, 163], "A": [158, 160], "V": [100, 103], "Q": [156, 157], "K": [105, 108], "R": null, "K'": [[114, 126], [117, 127]], "V'": [[109, 118], [112, 124]], "example": [96, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < Leonardo DiCaprio likes Osaka. Charlize Theron likes Berlin. Frida Kahlo likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the artist? Answer: Yes\n Premise: < Elon Musk likes Lyon. Ruth Bader Ginsburg likes Birmingham. Dr. Jane Goodall likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is the lawyer? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [49, 54], "Q": [86, 87], "K": [56, 57], "R": null, "K'": [[37, 47], [39, 48]], "V'": [[30, 40], [35, 45]], "example": [25, 94]}, {"END": [163, 164], "A": [159, 161], "V": [107, 113], "Q": [155, 158], "K": [115, 117], "R": null, "K'": [[105, 125], [106, 126]], "V'": [[99, 118], [103, 123]], "example": [95, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < Leonardo DiCaprio likes Osaka. Charlize Theron likes Berlin. Frida Kahlo likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the artist? Answer: Yes\n Premise: < Elon Musk likes Lyon. Ruth Bader Ginsburg likes Birmingham. Dr. Jane Goodall likes Paris. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is the entrepreneur? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [49, 54], "Q": [86, 87], "K": [56, 57], "R": null, "K'": [[37, 47], [39, 48]], "V'": [[30, 40], [35, 45]], "example": [25, 94]}, {"END": [165, 166], "A": [159, 163], "V": [107, 113], "Q": [155, 158], "K": [115, 117], "R": null, "K'": [[105, 125], [106, 126]], "V'": [[99, 118], [103, 123]], "example": [95, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the actor, the author, the scientist and the entrepreneur.\nPremise: < Mark Twain likes Mumbai. Bill Gates likes Milan. Ada Lovelace likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the author? Answer: No\n Premise: < Natalie Portman likes Toronto. Stephen King likes Paris. Dr. Jane Goodall likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is the doctor? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [40, 43], "Q": [84, 85], "K": [45, 46], "R": null, "K'": [[36, 53], [39, 55]], "V'": [[31, 47], [34, 51]], "example": [26, 92]}, {"END": [156, 157], "A": [152, 154], "V": [111, 116], "Q": [150, 151], "K": [118, 121], "R": null, "K'": [[103, 109], [104, 110]], "V'": [[97, 105], [101, 107]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the author, the scientist, the entrepreneur and the actor.\nPremise: < Mark Twain likes Mumbai. Bill Gates likes Milan. Ada Lovelace likes Ottawa. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the author? Answer: No\n Premise: < Natalie Portman likes Toronto. Stephen King likes Paris. Dr. Jane Goodall likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is the author? Answer: No\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [40, 43], "Q": [84, 85], "K": [45, 46], "R": null, "K'": [[36, 53], [39, 55]], "V'": [[31, 47], [34, 51]], "example": [26, 92]}, {"END": [156, 157], "A": [152, 154], "V": [111, 116], "Q": [150, 151], "K": [118, 121], "R": null, "K'": [[103, 109], [104, 110]], "V'": [[97, 105], [101, 107]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the architect, the musician and the lawyer.\nPremise: < Johnny Depp likes Sao Paulo. Hillary Clinton likes Kyoto. Adele likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the actor? Answer: No\n Premise: < Ada Lovelace likes Kyoto. Frank Lloyd Wright likes Birmingham. Ieoh Ming Pei likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the scientist? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [39, 43], "Q": [84, 85], "K": [45, 47], "R": null, "K'": [[35, 53], [38, 55]], "V'": [[30, 48], [33, 51]], "example": [25, 92]}, {"END": [160, 161], "A": [155, 158], "V": [97, 101], "Q": [153, 154], "K": [103, 105], "R": null, "K'": [[111, 123], [113, 124]], "V'": [[106, 114], [109, 121]], "example": [93, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the scientist, the musician and the architect.\nPremise: < Johnny Depp likes Sao Paulo. Hillary Clinton likes Kyoto. Adele likes Geneva. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the actor? Answer: No\n Premise: < Ada Lovelace likes Kyoto. Frank Lloyd Wright likes Birmingham. Ieoh Ming Pei likes Barcelona. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the architect? Answer: No\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [39, 43], "Q": [84, 85], "K": [45, 47], "R": null, "K'": [[35, 53], [38, 55]], "V'": [[30, 48], [33, 51]], "example": [25, 92]}, {"END": [159, 160], "A": [155, 157], "V": [97, 101], "Q": [153, 154], "K": [103, 105], "R": null, "K'": [[111, 123], [113, 124]], "V'": [[106, 114], [109, 121]], "example": [93, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Cristiano Ronaldo likes Incheon. Kanye West likes Marseille. Ieoh Ming Pei likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the athlete? Answer: Yes\n Premise: < Serena Williams likes Moscow. Vincent van Gogh likes Seoul. Frank Lloyd Wright likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Switzerland is the architect? Answer: Yes\n", "ranges": [{"END": [98, 99], "A": [93, 96], "V": [27, 32], "Q": [90, 92], "K": [34, 37], "R": null, "K'": [[44, 56], [46, 61]], "V'": [[38, 47], [42, 54]], "example": [22, 100]}, {"END": [163, 164], "A": [159, 161], "V": [122, 125], "Q": [157, 158], "K": [127, 128], "R": null, "K'": [[110, 119], [111, 121]], "V'": [[105, 112], [108, 117]], "example": [101, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Cristiano Ronaldo likes Incheon. Kanye West likes Marseille. Ieoh Ming Pei likes Novosibirsk. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the athlete? Answer: Yes\n Premise: < Serena Williams likes Moscow. Vincent van Gogh likes Seoul. Frank Lloyd Wright likes Bern. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Switzerland is the artist? Answer: No\n", "ranges": [{"END": [98, 99], "A": [93, 96], "V": [27, 32], "Q": [90, 92], "K": [34, 37], "R": null, "K'": [[44, 56], [46, 61]], "V'": [[38, 47], [42, 54]], "example": [22, 100]}, {"END": [163, 164], "A": [159, 161], "V": [122, 125], "Q": [157, 158], "K": [127, 128], "R": null, "K'": [[110, 119], [111, 121]], "V'": [[105, 112], [108, 117]], "example": [101, 165]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the author and the athlete.\n< Lyon attracts Taylor Swift. Paris attracts Gloria Allred. Washington, D.C attracts Tom Brady. >. So who wants to go to a city of the United States? the athlete\n < Chiang Mai attracts Harper Lee. Sao Paulo attracts Justin Bieber. Paris attracts Clarence Darrow. >. So who wants to go to a city of France? the lawyer\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [44, 47], "Q": [59, 62], "K": [37, 42], "R": null, "K'": [[23, 29], [24, 30]], "V'": [[26, 32], [28, 36]], "example": [22, 66]}, {"END": [108, 109], "A": [109, 110], "V": [90, 94], "Q": [106, 107], "K": [87, 88], "R": null, "K'": [[68, 77], [71, 80]], "V'": [[73, 82], [76, 86]], "example": [67, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Manchester attracts Natalie Portman. Washington, D.C attracts Dr. Gabor Mat\u00e9. Berlin attracts Rihanna. >. So who wants to go to a city of the United Kingdom? the actor\n < Rio de Janeiro attracts Neil deGrasse Tyson. Novosibirsk attracts Eminem. Ottawa attracts LeBron James. >. So who wants to go to a city of Brazil? the scientist\n", "ranges": [{"END": [71, 72], "A": [72, 73], "V": [30, 34], "Q": [67, 70], "K": [27, 28], "R": null, "K'": [[35, 49], [40, 50]], "V'": [[42, 52], [48, 55]], "example": [26, 73]}, {"END": [121, 122], "A": [122, 124], "V": [80, 87], "Q": [119, 120], "K": [75, 78], "R": null, "K'": [[88, 99], [93, 101]], "V'": [[95, 103], [98, 107]], "example": [74, 124]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Seoul attracts Neil deGrasse Tyson. Toronto attracts Vincent van Gogh. Birmingham attracts Dr. Neil deGrasse Tyson. >. So who wants to go to a city of the United Kingdom? the doctor\n < Osaka attracts Claude Monet. Madrid attracts Lady Gaga. Lyon attracts Johnnie Cochran. >. So who wants to go to a city of Japan? the artist\n", "ranges": [{"END": [76, 77], "A": [77, 78], "V": [51, 60], "Q": [72, 75], "K": [47, 49], "R": null, "K'": [[26, 38], [28, 39]], "V'": [[30, 53, 41], [37, 60, 46]], "example": [25, 78]}, {"END": [117, 118], "A": [118, 119], "V": [84, 87], "Q": [115, 116], "K": [80, 82], "R": null, "K'": [[88, 95], [89, 96]], "V'": [[91, 98], [94, 103]], "example": [79, 119]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the athlete, the architect and the actor.\n< Vancouver attracts Eminem. Mumbai attracts Meryl Streep. Birmingham attracts Pablo Picasso. >. So who wants to go to a city of India? the actor\n < Mumbai attracts Tom Brady. Barcelona attracts Leonardo da Vinci. Chiang Mai attracts Rem Koolhaas. >. So who wants to go to a city of India? the athlete\n", "ranges": [{"END": [67, 68], "A": [68, 69], "V": [39, 45], "Q": [65, 66], "K": [34, 37], "R": null, "K'": [[26, 46], [28, 48]], "V'": [[30, 50], [33, 53]], "example": [25, 69]}, {"END": [113, 114], "A": [114, 116], "V": [76, 79], "Q": [111, 112], "K": [71, 74], "R": null, "K'": [[80, 89], [81, 92]], "V'": [[83, 94], [88, 99]], "example": [70, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Chiang Mai attracts Dr. Temple Grandin. Valencia attracts Agatha Christie. Sao Paulo attracts Dr. Sylvia Earle. >. So who wants to go to a city of Spain? the author\n < Paris attracts Bill Gates. Milan attracts LeBron James. New York attracts Vincent van Gogh. >. So who wants to go to a city of the United States? the artist\n", "ranges": [{"END": [73, 74], "A": [74, 75], "V": [42, 47], "Q": [71, 72], "K": [38, 40], "R": null, "K'": [[27, 48], [30, 51]], "V'": [[32, 53], [37, 59]], "example": [26, 75]}, {"END": [117, 118], "A": [118, 119], "V": [96, 101], "Q": [113, 116], "K": [92, 94], "R": null, "K'": [[77, 84], [78, 85]], "V'": [[80, 87], [83, 91]], "example": [76, 119]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the actor, the author and the scientist.\n< Busan attracts Rosie Franklin. Bangalore attracts Usain Bolt. Florence attracts Johnny Depp. >. So who wants to go to a city of India? the athlete\n < Rome attracts LeBron James. Osaka attracts Agatha Christie. Busan attracts Charlize Theron. >. So who wants to go to a city of Italy? the athlete\n", "ranges": [{"END": [61, 62], "A": [62, 64], "V": [36, 40], "Q": [59, 60], "K": [31, 34], "R": null, "K'": [[23, 41], [25, 42]], "V'": [[27, 44], [30, 47]], "example": [22, 64]}, {"END": [107, 108], "A": [108, 110], "V": [69, 73], "Q": [105, 106], "K": [66, 67], "R": null, "K'": [[74, 84], [76, 86]], "V'": [[78, 88], [83, 93]], "example": [65, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the musician, the scientist, the architect and the author.\n< London attracts Sergey Brin. Ottawa attracts Bill Gates. Saint Petersburg attracts Jane Austen. >. So who wants to go to a city of Russia? the author\n < Ottawa attracts Norman Foster. Canberra attracts Jane Goodall. Bern attracts Ed Sheeran. >. So who wants to go to a city of Switzerland? the musician\n", "ranges": [{"END": [65, 66], "A": [66, 67], "V": [48, 51], "Q": [63, 64], "K": [44, 46], "R": null, "K'": [[28, 36], [29, 38]], "V'": [[31, 40], [35, 43]], "example": [27, 67]}, {"END": [107, 108], "A": [108, 110], "V": [89, 93], "Q": [105, 106], "K": [86, 87], "R": null, "K'": [[69, 77], [71, 80]], "V'": [[73, 82], [76, 85]], "example": [68, 110]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the musician, the actor, the artist and the architect.\n< Chiang Mai attracts Ed Sheeran. Toronto attracts Mark Twain. Valencia attracts Leonardo DiCaprio. >. So who wants to go to a city of Thailand? the musician\n < Moscow attracts Michelangelo. Ottawa attracts Natalie Portman. Paris attracts Frank Lloyd Wright. >. So who wants to go to a city of Russia? the artist\n", "ranges": [{"END": [66, 67], "A": [67, 69], "V": [30, 34], "Q": [63, 65], "K": [25, 28], "R": null, "K'": [[35, 42], [36, 44]], "V'": [[38, 46], [41, 51]], "example": [24, 69]}, {"END": [107, 108], "A": [108, 109], "V": [74, 77], "Q": [105, 106], "K": [71, 72], "R": null, "K'": [[78, 87], [80, 88]], "V'": [[82, 90], [86, 93]], "example": [70, 109]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the doctor, the scientist, the lawyer, the athlete and the actor.\nPremise: < Lyon attracts Taylor Swift. Paris attracts Gloria Allred. Washington, D.C attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is the athlete? Answer: Yes\n Premise: < Rome attracts Dr. Sylvia Earle. Ottawa attracts Leonardo DiCaprio. Bangalore attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the doctor? Answer: Yes\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [55, 58], "Q": [87, 90], "K": [48, 53], "R": null, "K'": [[34, 40], [35, 41]], "V'": [[37, 43], [39, 47]], "example": [29, 98]}, {"END": [167, 168], "A": [163, 165], "V": [106, 112], "Q": [161, 162], "K": [103, 104], "R": null, "K'": [[113, 123], [115, 126]], "V'": [[117, 128], [122, 132]], "example": [99, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the actor, the musician, the lawyer, the scientist and the athlete.\nPremise: < Lyon attracts Taylor Swift. Paris attracts Gloria Allred. Washington, D.C attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is the athlete? Answer: Yes\n Premise: < Rome attracts Dr. Sylvia Earle. Ottawa attracts Leonardo DiCaprio. Bangalore attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the actor? Answer: No\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [55, 58], "Q": [87, 90], "K": [48, 53], "R": null, "K'": [[34, 40], [35, 41]], "V'": [[37, 43], [39, 47]], "example": [29, 98]}, {"END": [167, 168], "A": [163, 165], "V": [106, 112], "Q": [161, 162], "K": [103, 104], "R": null, "K'": [[113, 123], [115, 126]], "V'": [[117, 128], [122, 132]], "example": [99, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist and the entrepreneur.\nPremise: < Rio de Janeiro attracts Neil deGrasse Tyson. Novosibirsk attracts Eminem. Ottawa attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: No\n Premise: < Sydney attracts Leonardo da Vinci. Toronto attracts Marie Curie. Berlin attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Australia is the artist? Answer: Yes\n", "ranges": [{"END": [101, 102], "A": [96, 99], "V": [38, 45], "Q": [94, 95], "K": [33, 36], "R": null, "K'": [[46, 57], [51, 59]], "V'": [[53, 61], [56, 65]], "example": [28, 103]}, {"END": [164, 165], "A": [160, 162], "V": [111, 116], "Q": [158, 159], "K": [108, 109], "R": null, "K'": [[117, 124], [118, 125]], "V'": [[120, 127], [123, 129]], "example": [104, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the entrepreneur, the artist and the scientist.\nPremise: < Rio de Janeiro attracts Neil deGrasse Tyson. Novosibirsk attracts Eminem. Ottawa attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: No\n Premise: < Sydney attracts Leonardo da Vinci. Toronto attracts Marie Curie. Berlin attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Australia is the scientist? Answer: No\n", "ranges": [{"END": [101, 102], "A": [96, 99], "V": [38, 45], "Q": [94, 95], "K": [33, 36], "R": null, "K'": [[46, 57], [51, 59]], "V'": [[53, 61], [56, 65]], "example": [28, 103]}, {"END": [165, 166], "A": [160, 163], "V": [111, 116], "Q": [158, 159], "K": [108, 109], "R": null, "K'": [[117, 124], [118, 125]], "V'": [[120, 127], [123, 129]], "example": [104, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the doctor, the artist and the architect.\nPremise: < Birmingham attracts Stephen King. Sydney attracts Dr. Michio Kaku. Seoul attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the author? Answer: No\n Premise: < Ottawa attracts Maya Lin. Tokyo attracts Vincent van Gogh. Seoul attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the artist? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [46, 49], "Q": [78, 80], "K": [42, 44], "R": null, "K'": [[25, 32], [27, 33]], "V'": [[29, 35], [31, 41]], "example": [20, 87]}, {"END": [154, 155], "A": [150, 152], "V": [103, 108], "Q": [148, 149], "K": [100, 101], "R": null, "K'": [[92, 109], [94, 111]], "V'": [[96, 113], [99, 119]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the architect, the author and the doctor.\nPremise: < Birmingham attracts Stephen King. Sydney attracts Dr. Michio Kaku. Seoul attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the author? Answer: No\n Premise: < Ottawa attracts Maya Lin. Tokyo attracts Vincent van Gogh. Seoul attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the architect? Answer: No\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [46, 49], "Q": [78, 80], "K": [42, 44], "R": null, "K'": [[25, 32], [27, 33]], "V'": [[29, 35], [31, 41]], "example": [20, 87]}, {"END": [154, 155], "A": [150, 152], "V": [103, 108], "Q": [148, 149], "K": [100, 101], "R": null, "K'": [[92, 109], [94, 111]], "V'": [[96, 113], [99, 119]], "example": [88, 156]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the athlete and the author.\nPremise: < Chiang Mai attracts Dr. Temple Grandin. Valencia attracts Agatha Christie. Sao Paulo attracts Dr. Sylvia Earle. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Spain is the doctor? Answer: No\n Premise: < Sao Paulo attracts Roger Federer. Canberra attracts Johnny Depp. Tokyo attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the athlete? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [41, 46], "Q": [87, 88], "K": [37, 39], "R": null, "K'": [[26, 47], [29, 50]], "V'": [[31, 52], [36, 58]], "example": [21, 95]}, {"END": [163, 164], "A": [158, 161], "V": [105, 108], "Q": [156, 157], "K": [100, 103], "R": null, "K'": [[109, 118], [112, 119]], "V'": [[114, 121], [117, 127]], "example": [96, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the author, the actor and the doctor.\nPremise: < Chiang Mai attracts Dr. Temple Grandin. Valencia attracts Agatha Christie. Sao Paulo attracts Dr. Sylvia Earle. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Spain is the doctor? Answer: No\n Premise: < Sao Paulo attracts Roger Federer. Canberra attracts Johnny Depp. Tokyo attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is the actor? Answer: No\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [41, 46], "Q": [87, 88], "K": [37, 39], "R": null, "K'": [[26, 47], [29, 50]], "V'": [[31, 52], [36, 58]], "example": [21, 95]}, {"END": [162, 163], "A": [158, 160], "V": [105, 108], "Q": [156, 157], "K": [100, 103], "R": null, "K'": [[109, 118], [112, 119]], "V'": [[114, 121], [117, 127]], "example": [96, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < Osaka attracts Leonardo DiCaprio. Berlin attracts Charlize Theron. Milan attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the artist? Answer: Yes\n Premise: < Lyon attracts Elon Musk. Birmingham attracts Ruth Bader Ginsburg. Paris attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is the lawyer? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [52, 57], "Q": [86, 87], "K": [49, 50], "R": null, "K'": [[30, 40], [32, 41]], "V'": [[34, 43], [39, 48]], "example": [25, 94]}, {"END": [163, 164], "A": [159, 161], "V": [111, 117], "Q": [155, 158], "K": [107, 109], "R": null, "K'": [[99, 118], [100, 119]], "V'": [[102, 121], [106, 126]], "example": [95, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < Osaka attracts Leonardo DiCaprio. Berlin attracts Charlize Theron. Milan attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the artist? Answer: Yes\n Premise: < Lyon attracts Elon Musk. Birmingham attracts Ruth Bader Ginsburg. Paris attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is the entrepreneur? Answer: No\n", "ranges": [{"END": [92, 93], "A": [88, 90], "V": [52, 57], "Q": [86, 87], "K": [49, 50], "R": null, "K'": [[30, 40], [32, 41]], "V'": [[34, 43], [39, 48]], "example": [25, 94]}, {"END": [165, 166], "A": [159, 163], "V": [111, 117], "Q": [155, 158], "K": [107, 109], "R": null, "K'": [[99, 118], [100, 119]], "V'": [[102, 121], [106, 126]], "example": [95, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the actor, the author, the scientist and the entrepreneur.\nPremise: < Mumbai attracts Mark Twain. Milan attracts Bill Gates. Ottawa attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the author? Answer: No\n Premise: < Toronto attracts Natalie Portman. Paris attracts Stephen King. Beijing attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is the doctor? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [43, 46], "Q": [84, 85], "K": [40, 41], "R": null, "K'": [[31, 47], [34, 49]], "V'": [[36, 51], [39, 55]], "example": [26, 92]}, {"END": [156, 157], "A": [152, 154], "V": [116, 121], "Q": [150, 151], "K": [111, 114], "R": null, "K'": [[97, 105], [98, 106]], "V'": [[100, 108], [104, 110]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the author, the scientist, the entrepreneur and the actor.\nPremise: < Mumbai attracts Mark Twain. Milan attracts Bill Gates. Ottawa attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is the author? Answer: No\n Premise: < Toronto attracts Natalie Portman. Paris attracts Stephen King. Beijing attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is the author? Answer: No\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [43, 46], "Q": [84, 85], "K": [40, 41], "R": null, "K'": [[31, 47], [34, 49]], "V'": [[36, 51], [39, 55]], "example": [26, 92]}, {"END": [156, 157], "A": [152, 154], "V": [116, 121], "Q": [150, 151], "K": [111, 114], "R": null, "K'": [[97, 105], [98, 106]], "V'": [[100, 108], [104, 110]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the architect, the musician and the lawyer.\nPremise: < Sao Paulo attracts Johnny Depp. Kyoto attracts Hillary Clinton. Geneva attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the actor? Answer: No\n Premise: < Kyoto attracts Ada Lovelace. Birmingham attracts Frank Lloyd Wright. Barcelona attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the scientist? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [43, 47], "Q": [84, 85], "K": [39, 41], "R": null, "K'": [[30, 48], [33, 50]], "V'": [[35, 52], [38, 55]], "example": [25, 92]}, {"END": [160, 161], "A": [155, 158], "V": [101, 105], "Q": [153, 154], "K": [97, 99], "R": null, "K'": [[106, 114], [108, 115]], "V'": [[110, 117], [113, 124]], "example": [93, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the scientist, the musician and the architect.\nPremise: < Sao Paulo attracts Johnny Depp. Kyoto attracts Hillary Clinton. Geneva attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the actor? Answer: No\n Premise: < Kyoto attracts Ada Lovelace. Birmingham attracts Frank Lloyd Wright. Barcelona attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is the architect? Answer: No\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [43, 47], "Q": [84, 85], "K": [39, 41], "R": null, "K'": [[30, 48], [33, 50]], "V'": [[35, 52], [38, 55]], "example": [25, 92]}, {"END": [159, 160], "A": [155, 157], "V": [101, 105], "Q": [153, 154], "K": [97, 99], "R": null, "K'": [[106, 114], [108, 115]], "V'": [[110, 117], [113, 124]], "example": [93, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Incheon attracts Cristiano Ronaldo. Marseille attracts Kanye West. Novosibirsk attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the athlete? Answer: Yes\n Premise: < Moscow attracts Serena Williams. Seoul attracts Vincent van Gogh. Bern attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Switzerland is the architect? Answer: Yes\n", "ranges": [{"END": [98, 99], "A": [93, 96], "V": [32, 37], "Q": [90, 92], "K": [27, 30], "R": null, "K'": [[38, 47], [40, 52]], "V'": [[42, 54], [46, 61]], "example": [22, 100]}, {"END": [163, 164], "A": [159, 161], "V": [125, 128], "Q": [157, 158], "K": [122, 123], "R": null, "K'": [[105, 112], [106, 114]], "V'": [[108, 116], [111, 121]], "example": [101, 165]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Incheon attracts Cristiano Ronaldo. Marseille attracts Kanye West. Novosibirsk attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is the athlete? Answer: Yes\n Premise: < Moscow attracts Serena Williams. Seoul attracts Vincent van Gogh. Bern attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Switzerland is the artist? Answer: No\n", "ranges": [{"END": [98, 99], "A": [93, 96], "V": [32, 37], "Q": [90, 92], "K": [27, 30], "R": null, "K'": [[38, 47], [40, 52]], "V'": [[42, 54], [46, 61]], "example": [22, 100]}, {"END": [163, 164], "A": [159, 161], "V": [125, 128], "Q": [157, 158], "K": [122, 123], "R": null, "K'": [[105, 112], [106, 114]], "V'": [[108, 116], [111, 121]], "example": [101, 165]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Salvador Dal\u00ed likes Los Angeles. Dr. Sylvia Earle likes New York. Taylor Swift likes Shanghai. >. The person who wants to go to a city of the United States is not the musician\n < Harper Lee likes Birmingham. Justin Bieber likes London. Clarence Darrow likes Sydney. >. The person who wants to go to a city of the United Kingdom is not the lawyer\n", "ranges": [{"END": [68, 69], "A'": [69, 71], "V'": [44, 46], "Q": [63, 66], "K'": [48, 50], "R": [67, 68], "K": [[30, 41], [32, 43]], "V": [[25, 33], [28, 39]], "example": [24, 71]}, {"END": [114, 115], "A'": [115, 116], "V'": [89, 93], "Q": [109, 112], "K'": [95, 96], "R": [113, 114], "K": [[78, 87], [80, 88]], "V": [[73, 81], [76, 85]], "example": [72, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Natalie Portman likes London. Dr. Gabor Mat\u00e9 likes Mumbai. Rihanna likes Bangalore. >. The person who wants to go to a city of India is not the actor\n < Neil deGrasse Tyson likes Bangalore. Eminem likes Rio de Janeiro. LeBron James likes Bras\u00edlia. >. The person who wants to go to a city of Brazil is not the scientist\n", "ranges": [{"END": [71, 72], "A'": [72, 73], "V'": [27, 31], "Q": [68, 69], "K'": [33, 34], "R": [70, 71], "K": [[43, 52], [46, 55]], "V": [[35, 47], [41, 50]], "example": [26, 73]}, {"END": [121, 122], "A'": [122, 124], "V'": [75, 82], "Q": [118, 119], "K'": [84, 87], "R": [120, 121], "K": [[93, 103], [96, 105]], "V": [[88, 97], [91, 101]], "example": [74, 124]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the author, the athlete and the scientist.\n< Stephen Hawking likes Chiang Mai. Sergey Brin likes Birmingham. J.R.R. Tolkien likes London. >. The person who wants to go to a city of the United Kingdom is not the scientist\n < Usain Bolt likes Brisbane. J.K. Rowling likes Osaka. Ruth Bader Ginsburg likes Tokyo. >. The person who wants to go to a city of Japan is not the athlete\n", "ranges": [{"END": [76, 77], "A'": [77, 79], "V'": [28, 31], "Q": [71, 74], "K'": [33, 36], "R": [75, 76], "K": [[43, 57], [45, 58]], "V": [[37, 46], [41, 55]], "example": [27, 79]}, {"END": [128, 129], "A'": [129, 131], "V'": [81, 85], "Q": [125, 126], "K'": [87, 91], "R": [127, 128], "K": [[100, 111], [102, 112]], "V": [[92, 103], [98, 109]], "example": [80, 131]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the athlete and the artist.\n< Kanye West likes New Delhi. LeBron James likes Florence. Eminem likes Bangalore. >. The person who wants to go to a city of India is not the athlete\n < Lionel Messi likes Mumbai. Andy Warhol likes Bangalore. Barack Obama likes Venice. >. The person who wants to go to a city of India is not the lawyer\n", "ranges": [{"END": [65, 66], "A'": [66, 68], "V'": [33, 37], "Q": [62, 63], "K'": [39, 40], "R": [64, 65], "K": [[29, 46], [32, 49]], "V": [[23, 41], [27, 44]], "example": [22, 68]}, {"END": [113, 114], "A'": [114, 115], "V'": [89, 93], "Q": [110, 111], "K'": [95, 97], "R": [112, 113], "K": [[76, 85], [79, 88]], "V": [[70, 80], [74, 83]], "example": [69, 115]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the athlete, the entrepreneur, the doctor, the artist and the actor.\n< Dr. Temple Grandin likes New York. Leonardo DiCaprio likes Washington, D.C. Justin Bieber likes Seoul. >. The person who wants to go to a city of the United States is not the musician\n < Bill Gates likes Rio de Janeiro. LeBron James likes Bras\u00edlia. Vincent van Gogh likes Marseille. >. The person who wants to go to a city of Brazil is not the artist\n", "ranges": [{"END": [80, 81], "A'": [81, 83], "V'": [54, 58], "Q": [75, 78], "K'": [60, 62], "R": [79, 80], "K": [[38, 48], [40, 53]], "V": [[31, 41], [36, 46]], "example": [30, 83]}, {"END": [128, 129], "A'": [129, 130], "V'": [103, 108], "Q": [125, 126], "K'": [110, 112], "R": [127, 128], "K": [[90, 100], [93, 102]], "V": [[85, 94], [88, 98]], "example": [84, 130]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the lawyer.\n< Marie Curie likes Mumbai. Sonia Sotomayor likes Incheon. Simone Biles likes Bangalore. >. The person who wants to go to a city of India is not the lawyer\n < Tom Brady likes Milan. Jennifer Lawrence likes Chiang Mai. Lionel Messi likes Rome. >. The person who wants to go to a city of Italy is not the actor\n", "ranges": [{"END": [70, 71], "A'": [71, 72], "V'": [32, 39], "Q": [67, 68], "K'": [41, 44], "R": [69, 70], "K": [[28, 51], [31, 54]], "V": [[23, 45], [26, 49]], "example": [22, 72]}, {"END": [113, 114], "A'": [114, 115], "V'": [81, 84], "Q": [110, 111], "K'": [86, 89], "R": [112, 113], "K": [[79, 96], [80, 97]], "V": [[74, 90], [77, 94]], "example": [73, 115]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the athlete and the doctor.\n< Toni Morrison likes Venice. Steve Jobs likes Bras\u00edlia. Agatha Christie likes Rome. >. The person who wants to go to a city of Italy is not the entrepreneur\n < Dr. Gabor Mat\u00e9 likes Osaka. Usain Bolt likes Madrid. Neil deGrasse Tyson likes Kyoto. >. The person who wants to go to a city of Japan is not the athlete\n", "ranges": [{"END": [70, 71], "A'": [71, 74], "V'": [38, 41], "Q": [67, 68], "K'": [43, 45], "R": [69, 70], "K": [[35, 53], [37, 54]], "V": [[28, 46], [33, 51]], "example": [27, 74]}, {"END": [122, 123], "A'": [123, 125], "V'": [87, 91], "Q": [119, 120], "K'": [93, 94], "R": [121, 122], "K": [[84, 104], [86, 106]], "V": [[76, 95], [82, 102]], "example": [75, 125]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the athlete, the doctor, the musician and the author.\n< Natalie Portman likes Guangzhou. Stephen King likes Beijing. Dr. Jane Goodall likes Birmingham. >. The person who wants to go to a city of China is not the doctor\n < Alex Morgan likes Hamburg. Kanye West likes Munich. Sonia Sotomayor likes Zurich. >. The person who wants to go to a city of Germany is not the lawyer\n", "ranges": [{"END": [73, 74], "A'": [74, 75], "V'": [48, 53], "Q": [70, 71], "K'": [55, 57], "R": [72, 73], "K": [[35, 44], [39, 47]], "V": [[29, 40], [33, 42]], "example": [28, 75]}, {"END": [119, 120], "A'": [120, 121], "V'": [92, 99], "Q": [116, 117], "K'": [101, 103], "R": [118, 119], "K": [[81, 89], [82, 91]], "V": [[77, 83], [79, 87]], "example": [76, 121]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < Salvador Dal\u00ed likes Los Angeles. Dr. Sylvia Earle likes New York. Taylor Swift likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is not the artist? Answer: No\n Premise: < Harper Lee likes Paris. Justin Bieber likes Lyon. Clarence Darrow likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the lawyer? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [48, 50], "Q": [83, 86], "K'": [52, 54], "R": [87, 88], "K": [[34, 45], [36, 47]], "V": [[29, 37], [32, 43]], "example": [24, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [114, 118], "Q": [151, 152], "K'": [120, 122], "R": [153, 154], "K": [[104, 112], [105, 113]], "V": [[99, 106], [102, 110]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < Salvador Dal\u00ed likes Los Angeles. Dr. Sylvia Earle likes New York. Taylor Swift likes Shanghai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is not the artist? Answer: No\n Premise: < Harper Lee likes Paris. Justin Bieber likes Lyon. Clarence Darrow likes Vancouver. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the musician? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [48, 50], "Q": [83, 86], "K'": [52, 54], "R": [87, 88], "K": [[34, 45], [36, 47]], "V": [[29, 37], [32, 43]], "example": [24, 94]}, {"END": [159, 160], "A'": [154, 157], "V'": [114, 118], "Q": [151, 152], "K'": [120, 122], "R": [153, 154], "K": [[104, 112], [105, 113]], "V": [[99, 106], [102, 110]], "example": [95, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the musician, the author, the doctor and the artist.\nPremise: < Dr. Jane Goodall likes Bangalore. Claude Monet likes Kyoto. Kanye West likes Mumbai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of India is not the artist? Answer: Yes\n Premise: < Louis Sullivan likes London. Agatha Christie likes Brisbane. Norman Foster likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the author? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [40, 43], "Q": [86, 87], "K'": [45, 47], "R": [88, 89], "K": [[36, 54], [39, 57]], "V": [[29, 48], [34, 52]], "example": [24, 95]}, {"END": [164, 165], "A'": [160, 162], "V'": [108, 113], "Q": [155, 158], "K'": [115, 119], "R": [159, 160], "K": [[106, 125], [107, 126]], "V": [[100, 120], [104, 123]], "example": [96, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the artist, the architect and the author.\nPremise: < Dr. Jane Goodall likes Bangalore. Claude Monet likes Kyoto. Kanye West likes Mumbai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of India is not the artist? Answer: Yes\n Premise: < Louis Sullivan likes London. Agatha Christie likes Brisbane. Norman Foster likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the architect? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [40, 43], "Q": [86, 87], "K'": [45, 47], "R": [88, 89], "K": [[36, 54], [39, 57]], "V": [[29, 48], [34, 52]], "example": [24, 95]}, {"END": [164, 165], "A'": [160, 162], "V'": [108, 113], "Q": [155, 158], "K'": [115, 119], "R": [159, 160], "K": [[106, 125], [107, 126]], "V": [[100, 120], [104, 123]], "example": [96, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the athlete, the doctor, the actor, the artist and the author.\nPremise: < Leonardo da Vinci likes Lyon. J.R.R. Tolkien likes Marseille. Dr. Neil deGrasse Tyson likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the doctor? Answer: Yes\n Premise: < Serena Williams likes Chiang Mai. Sonia Sotomayor likes New Delhi. Brad Pitt likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Thailand is not the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [55, 64], "Q": [98, 99], "K'": [66, 69], "R": [100, 101], "K": [[39, 52], [40, 54]], "V": [[32, 41], [37, 50]], "example": [27, 107]}, {"END": [178, 179], "A'": [174, 176], "V'": [121, 128], "Q": [170, 172], "K'": [130, 133], "R": [173, 174], "K": [[117, 138], [120, 141]], "V": [[112, 134], [115, 136]], "example": [108, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the actor, the artist, the author, the lawyer and the athlete.\nPremise: < Leonardo da Vinci likes Lyon. J.R.R. Tolkien likes Marseille. Dr. Neil deGrasse Tyson likes Bangalore. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the doctor? Answer: Yes\n Premise: < Serena Williams likes Chiang Mai. Sonia Sotomayor likes New Delhi. Brad Pitt likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Thailand is not the actor? Answer: No\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [55, 64], "Q": [98, 99], "K'": [66, 69], "R": [100, 101], "K": [[39, 52], [40, 54]], "V": [[32, 41], [37, 50]], "example": [27, 107]}, {"END": [178, 179], "A'": [174, 176], "V'": [121, 128], "Q": [170, 172], "K'": [130, 133], "R": [173, 174], "K": [[117, 138], [120, 141]], "V": [[112, 134], [115, 136]], "example": [108, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist, the athlete, the author, the musician and the artist.\nPremise: < Pablo Picasso likes Busan. Usain Bolt likes Incheon. Justin Bieber likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the musician? Answer: Yes\n Premise: < Natalie Portman likes Guangzhou. Albert Einstein likes Shanghai. Toni Morrison likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [52, 56], "Q": [90, 92], "K'": [58, 61], "R": [93, 94], "K": [[39, 48], [41, 51]], "V": [[34, 42], [37, 46]], "example": [29, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [125, 130], "Q": [164, 165], "K'": [132, 135], "R": [166, 167], "K": [[112, 122], [116, 124]], "V": [[106, 117], [110, 120]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the athlete, the musician, the scientist, the actor and the artist.\nPremise: < Pablo Picasso likes Busan. Usain Bolt likes Incheon. Justin Bieber likes Beijing. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the musician? Answer: Yes\n Premise: < Natalie Portman likes Guangzhou. Albert Einstein likes Shanghai. Toni Morrison likes Chiang Mai. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the actor? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [52, 56], "Q": [90, 92], "K'": [58, 61], "R": [93, 94], "K": [[39, 48], [41, 51]], "V": [[34, 42], [37, 46]], "example": [29, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [125, 130], "Q": [164, 165], "K'": [132, 135], "R": [166, 167], "K": [[112, 122], [116, 124]], "V": [[106, 117], [110, 120]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the actor, the scientist, the musician and the lawyer.\nPremise: < Barack Obama likes Seoul. Richard Dawkins likes Incheon. Charlize Theron likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the actor? Answer: Yes\n Premise: < Dr. Sylvia Earle likes London. Lady Gaga likes Manchester. Louis Sullivan likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the architect? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [51, 56], "Q": [88, 90], "K'": [58, 59], "R": [91, 92], "K": [[39, 47], [41, 50]], "V": [[33, 42], [37, 45]], "example": [28, 98]}, {"END": [168, 169], "A'": [164, 166], "V'": [120, 124], "Q": [159, 162], "K'": [126, 130], "R": [163, 164], "K": [[111, 118], [112, 119]], "V": [[103, 113], [109, 116]], "example": [99, 170]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the lawyer, the musician, the scientist, the actor and the doctor.\nPremise: < Barack Obama likes Seoul. Richard Dawkins likes Incheon. Charlize Theron likes Manchester. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the actor? Answer: Yes\n Premise: < Dr. Sylvia Earle likes London. Lady Gaga likes Manchester. Louis Sullivan likes Guangzhou. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the musician? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [51, 56], "Q": [88, 90], "K'": [58, 59], "R": [91, 92], "K": [[39, 47], [41, 50]], "V": [[33, 42], [37, 45]], "example": [28, 98]}, {"END": [169, 170], "A'": [164, 167], "V'": [120, 124], "Q": [159, 162], "K'": [126, 130], "R": [163, 164], "K": [[111, 118], [112, 119]], "V": [[103, 113], [109, 116]], "example": [99, 171]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the actor, the author, the scientist and the entrepreneur.\nPremise: < Mark Twain likes Florence. Bill Gates likes Ottawa. Ada Lovelace likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is not the author? Answer: No\n Premise: < Natalie Portman likes Guangzhou. Stephen King likes Beijing. Dr. Jane Goodall likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the doctor? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [38, 41], "Q": [82, 83], "K'": [43, 45], "R": [84, 85], "K": [[36, 52], [37, 53]], "V": [[31, 46], [34, 50]], "example": [26, 91]}, {"END": [160, 161], "A'": [156, 158], "V'": [115, 120], "Q": [153, 154], "K'": [122, 124], "R": [155, 156], "K": [[102, 111], [106, 114]], "V": [[96, 107], [100, 109]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the author, the scientist, the entrepreneur and the actor.\nPremise: < Mark Twain likes Florence. Bill Gates likes Ottawa. Ada Lovelace likes Milan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is not the author? Answer: No\n Premise: < Natalie Portman likes Guangzhou. Stephen King likes Beijing. Dr. Jane Goodall likes Birmingham. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the author? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [38, 41], "Q": [82, 83], "K'": [43, 45], "R": [84, 85], "K": [[36, 52], [37, 53]], "V": [[31, 46], [34, 50]], "example": [26, 91]}, {"END": [160, 161], "A'": [156, 158], "V'": [115, 120], "Q": [153, 154], "K'": [122, 124], "R": [155, 156], "K": [[102, 111], [106, 114]], "V": [[96, 107], [100, 109]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist, the artist, the lawyer, the architect and the athlete.\nPremise: < Clarence Darrow likes Tokyo. Cristiano Ronaldo likes Bangkok. Johnny Depp likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the athlete? Answer: Yes\n Premise: < Jane Goodall likes Osaka. Frank Lloyd Wright likes Tokyo. Michelangelo likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the artist? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [41, 46], "Q": [88, 89], "K'": [48, 51], "R": [90, 91], "K": [[39, 57], [40, 59]], "V": [[33, 52], [37, 55]], "example": [28, 98]}, {"END": [162, 163], "A'": [158, 160], "V'": [118, 121], "Q": [155, 156], "K'": [123, 126], "R": [157, 158], "K": [[108, 116], [110, 117]], "V": [[103, 111], [106, 114]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the artist, the athlete, the actor, the scientist and the architect.\nPremise: < Clarence Darrow likes Tokyo. Cristiano Ronaldo likes Bangkok. Johnny Depp likes Osaka. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the athlete? Answer: Yes\n Premise: < Jane Goodall likes Osaka. Frank Lloyd Wright likes Tokyo. Michelangelo likes Pattaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the architect? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [41, 46], "Q": [88, 89], "K'": [48, 51], "R": [90, 91], "K": [[39, 57], [40, 59]], "V": [[33, 52], [37, 55]], "example": [28, 98]}, {"END": [162, 163], "A'": [158, 160], "V'": [118, 121], "Q": [155, 156], "K'": [123, 126], "R": [157, 158], "K": [[108, 116], [110, 117]], "V": [[103, 111], [106, 114]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the lawyer, the doctor, the artist, the musician and the architect.\nPremise: < Rosie Franklin likes Bras\u00edlia. Dr. Gabor Mat\u00e9 likes Osaka. Alan Dershowitz likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is not the scientist? Answer: No\n Premise: < Ed Sheeran likes Munich. Frida Kahlo likes Manchester. Ieoh Ming Pei likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Germany is not the artist? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [41, 47], "Q": [91, 92], "K'": [49, 51], "R": [93, 94], "K": [[38, 59], [40, 62]], "V": [[33, 52], [36, 57]], "example": [28, 101]}, {"END": [170, 171], "A'": [166, 168], "V'": [115, 120], "Q": [163, 164], "K'": [122, 123], "R": [165, 166], "K": [[112, 133], [114, 134]], "V": [[106, 124], [110, 131]], "example": [102, 172]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the musician, the scientist, the architect, the lawyer and the doctor.\nPremise: < Rosie Franklin likes Bras\u00edlia. Dr. Gabor Mat\u00e9 likes Osaka. Alan Dershowitz likes Sao Paulo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is not the scientist? Answer: No\n Premise: < Ed Sheeran likes Munich. Frida Kahlo likes Manchester. Ieoh Ming Pei likes Berlin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Germany is not the musician? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [41, 47], "Q": [91, 92], "K'": [49, 51], "R": [93, 94], "K": [[38, 59], [40, 62]], "V": [[33, 52], [36, 57]], "example": [28, 101]}, {"END": [171, 172], "A'": [166, 169], "V'": [115, 120], "Q": [163, 164], "K'": [122, 123], "R": [165, 166], "K": [[112, 133], [114, 134]], "V": [[106, 124], [110, 131]], "example": [102, 173]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Los Angeles attracts Salvador Dal\u00ed. New York attracts Dr. Sylvia Earle. Shanghai attracts Taylor Swift. >. The person who wants to go to a city of the United States is not the musician\n < Birmingham attracts Harper Lee. London attracts Justin Bieber. Sydney attracts Clarence Darrow. >. The person who wants to go to a city of the United Kingdom is not the lawyer\n", "ranges": [{"END": [68, 69], "A'": [69, 71], "V'": [48, 50], "Q": [63, 66], "K'": [44, 46], "R": [67, 68], "K": [[25, 33], [27, 35]], "V": [[29, 37], [32, 43]], "example": [24, 71]}, {"END": [114, 115], "A'": [115, 116], "V'": [92, 96], "Q": [109, 112], "K'": [89, 90], "R": [113, 114], "K": [[73, 81], [75, 82]], "V": [[77, 84], [80, 88]], "example": [72, 116]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< London attracts Natalie Portman. Mumbai attracts Dr. Gabor Mat\u00e9. Bangalore attracts Rihanna. >. The person who wants to go to a city of India is not the actor\n < Bangalore attracts Neil deGrasse Tyson. Rio de Janeiro attracts Eminem. Bras\u00edlia attracts LeBron James. >. The person who wants to go to a city of Brazil is not the scientist\n", "ranges": [{"END": [71, 72], "A'": [72, 73], "V'": [30, 34], "Q": [68, 69], "K'": [27, 28], "R": [70, 71], "K": [[35, 47], [38, 50]], "V": [[40, 52], [46, 55]], "example": [26, 73]}, {"END": [121, 122], "A'": [122, 124], "V'": [80, 87], "Q": [118, 119], "K'": [75, 78], "R": [120, 121], "K": [[88, 97], [91, 99]], "V": [[93, 101], [96, 105]], "example": [74, 124]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the author, the athlete and the scientist.\n< Chiang Mai attracts Stephen Hawking. Birmingham attracts Sergey Brin. London attracts J.R.R. Tolkien. >. The person who wants to go to a city of the United Kingdom is not the scientist\n < Brisbane attracts Usain Bolt. Osaka attracts J.K. Rowling. Tokyo attracts Ruth Bader Ginsburg. >. The person who wants to go to a city of Japan is not the athlete\n", "ranges": [{"END": [76, 77], "A'": [77, 79], "V'": [33, 36], "Q": [71, 74], "K'": [28, 31], "R": [75, 76], "K": [[37, 46], [39, 47]], "V": [[41, 49], [45, 58]], "example": [27, 79]}, {"END": [128, 129], "A'": [129, 131], "V'": [87, 91], "Q": [125, 126], "K'": [81, 85], "R": [127, 128], "K": [[92, 103], [94, 104]], "V": [[96, 106], [102, 112]], "example": [80, 131]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the athlete and the artist.\n< New Delhi attracts Kanye West. Florence attracts LeBron James. Bangalore attracts Eminem. >. The person who wants to go to a city of India is not the athlete\n < Mumbai attracts Lionel Messi. Bangalore attracts Andy Warhol. Venice attracts Barack Obama. >. The person who wants to go to a city of India is not the lawyer\n", "ranges": [{"END": [65, 66], "A'": [66, 68], "V'": [36, 40], "Q": [62, 63], "K'": [33, 34], "R": [64, 65], "K": [[23, 41], [26, 44]], "V": [[28, 46], [32, 49]], "example": [22, 68]}, {"END": [113, 114], "A'": [114, 115], "V'": [93, 97], "Q": [110, 111], "K'": [89, 91], "R": [112, 113], "K": [[70, 80], [73, 83]], "V": [[75, 85], [79, 88]], "example": [69, 115]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the athlete, the entrepreneur, the doctor, the artist and the actor.\n< New York attracts Dr. Temple Grandin. Washington, D.C attracts Leonardo DiCaprio. Seoul attracts Justin Bieber. >. The person who wants to go to a city of the United States is not the musician\n < Rio de Janeiro attracts Bill Gates. Bras\u00edlia attracts LeBron James. Marseille attracts Vincent van Gogh. >. The person who wants to go to a city of Brazil is not the artist\n", "ranges": [{"END": [80, 81], "A'": [81, 83], "V'": [58, 62], "Q": [75, 78], "K'": [54, 56], "R": [79, 80], "K": [[31, 41], [33, 46]], "V": [[35, 48], [40, 53]], "example": [30, 83]}, {"END": [128, 129], "A'": [129, 130], "V'": [107, 112], "Q": [125, 126], "K'": [103, 105], "R": [127, 128], "K": [[85, 94], [88, 96]], "V": [[90, 98], [93, 102]], "example": [84, 130]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the lawyer.\n< Mumbai attracts Marie Curie. Incheon attracts Sonia Sotomayor. Bangalore attracts Simone Biles. >. The person who wants to go to a city of India is not the lawyer\n < Milan attracts Tom Brady. Chiang Mai attracts Jennifer Lawrence. Rome attracts Lionel Messi. >. The person who wants to go to a city of Italy is not the actor\n", "ranges": [{"END": [70, 71], "A'": [71, 72], "V'": [37, 44], "Q": [67, 68], "K'": [32, 35], "R": [69, 70], "K": [[23, 45], [26, 48]], "V": [[28, 50], [31, 54]], "example": [22, 72]}, {"END": [113, 114], "A'": [114, 115], "V'": [86, 89], "Q": [110, 111], "K'": [81, 84], "R": [112, 113], "K": [[74, 90], [75, 91]], "V": [[77, 93], [80, 97]], "example": [73, 115]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the athlete and the doctor.\n< Venice attracts Toni Morrison. Bras\u00edlia attracts Steve Jobs. Rome attracts Agatha Christie. >. The person who wants to go to a city of Italy is not the entrepreneur\n < Osaka attracts Dr. Gabor Mat\u00e9. Madrid attracts Usain Bolt. Kyoto attracts Neil deGrasse Tyson. >. The person who wants to go to a city of Japan is not the athlete\n", "ranges": [{"END": [70, 71], "A'": [71, 74], "V'": [42, 45], "Q": [67, 68], "K'": [38, 40], "R": [69, 70], "K": [[28, 46], [30, 47]], "V": [[32, 49], [37, 54]], "example": [27, 74]}, {"END": [122, 123], "A'": [123, 125], "V'": [90, 94], "Q": [119, 120], "K'": [87, 88], "R": [121, 122], "K": [[76, 95], [78, 97]], "V": [[80, 99], [86, 106]], "example": [75, 125]}]}
{"task_id": "rlr_gen[countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the athlete, the doctor, the musician and the author.\n< Guangzhou attracts Natalie Portman. Beijing attracts Stephen King. Birmingham attracts Dr. Jane Goodall. >. The person who wants to go to a city of China is not the doctor\n < Hamburg attracts Alex Morgan. Munich attracts Kanye West. Zurich attracts Sonia Sotomayor. >. The person who wants to go to a city of Germany is not the lawyer\n", "ranges": [{"END": [73, 74], "A'": [74, 75], "V'": [52, 57], "Q": [70, 71], "K'": [48, 50], "R": [72, 73], "K": [[29, 40], [33, 43]], "V": [[35, 45], [39, 47]], "example": [28, 75]}, {"END": [119, 120], "A'": [120, 121], "V'": [96, 103], "Q": [116, 117], "K'": [92, 94], "R": [118, 119], "K": [[77, 83], [78, 85]], "V": [[80, 87], [82, 91]], "example": [76, 121]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < Los Angeles attracts Salvador Dal\u00ed. New York attracts Dr. Sylvia Earle. Shanghai attracts Taylor Swift. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is not the artist? Answer: No\n Premise: < Paris attracts Harper Lee. Lyon attracts Justin Bieber. Vancouver attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the lawyer? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [52, 54], "Q": [83, 86], "K'": [48, 50], "R": [87, 88], "K": [[29, 37], [31, 39]], "V": [[33, 41], [36, 47]], "example": [24, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [118, 122], "Q": [151, 152], "K'": [114, 116], "R": [153, 154], "K": [[99, 106], [100, 107]], "V": [[102, 109], [105, 113]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < Los Angeles attracts Salvador Dal\u00ed. New York attracts Dr. Sylvia Earle. Shanghai attracts Taylor Swift. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United States is not the artist? Answer: No\n Premise: < Paris attracts Harper Lee. Lyon attracts Justin Bieber. Vancouver attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the musician? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [52, 54], "Q": [83, 86], "K'": [48, 50], "R": [87, 88], "K": [[29, 37], [31, 39]], "V": [[33, 41], [36, 47]], "example": [24, 94]}, {"END": [159, 160], "A'": [154, 157], "V'": [118, 122], "Q": [151, 152], "K'": [114, 116], "R": [153, 154], "K": [[99, 106], [100, 107]], "V": [[102, 109], [105, 113]], "example": [95, 161]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the musician, the author, the doctor and the artist.\nPremise: < Bangalore attracts Dr. Jane Goodall. Kyoto attracts Claude Monet. Mumbai attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of India is not the artist? Answer: Yes\n Premise: < London attracts Louis Sullivan. Brisbane attracts Agatha Christie. Manchester attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the author? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [44, 47], "Q": [86, 87], "K'": [40, 42], "R": [88, 89], "K": [[29, 48], [32, 51]], "V": [[34, 53], [39, 57]], "example": [24, 95]}, {"END": [164, 165], "A'": [160, 162], "V'": [114, 119], "Q": [155, 158], "K'": [108, 112], "R": [159, 160], "K": [[100, 120], [101, 121]], "V": [[103, 123], [107, 126]], "example": [96, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the artist, the architect and the author.\nPremise: < Bangalore attracts Dr. Jane Goodall. Kyoto attracts Claude Monet. Mumbai attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of India is not the artist? Answer: Yes\n Premise: < London attracts Louis Sullivan. Brisbane attracts Agatha Christie. Manchester attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the architect? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [44, 47], "Q": [86, 87], "K'": [40, 42], "R": [88, 89], "K": [[29, 48], [32, 51]], "V": [[34, 53], [39, 57]], "example": [24, 95]}, {"END": [164, 165], "A'": [160, 162], "V'": [114, 119], "Q": [155, 158], "K'": [108, 112], "R": [159, 160], "K": [[100, 120], [101, 121]], "V": [[103, 123], [107, 126]], "example": [96, 166]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the athlete, the doctor, the actor, the artist and the author.\nPremise: < Lyon attracts Leonardo da Vinci. Marseille attracts J.R.R. Tolkien. Bangalore attracts Dr. Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the doctor? Answer: Yes\n Premise: < Chiang Mai attracts Serena Williams. New Delhi attracts Sonia Sotomayor. Pattaya attracts Brad Pitt. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Thailand is not the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [60, 69], "Q": [98, 99], "K'": [55, 58], "R": [100, 101], "K": [[32, 41], [33, 43]], "V": [[35, 45], [40, 54]], "example": [27, 107]}, {"END": [178, 179], "A'": [174, 176], "V'": [126, 133], "Q": [170, 172], "K'": [121, 124], "R": [173, 174], "K": [[112, 134], [115, 137]], "V": [[117, 139], [120, 141]], "example": [108, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the actor, the artist, the author, the lawyer and the athlete.\nPremise: < Lyon attracts Leonardo da Vinci. Marseille attracts J.R.R. Tolkien. Bangalore attracts Dr. Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of France is not the doctor? Answer: Yes\n Premise: < Chiang Mai attracts Serena Williams. New Delhi attracts Sonia Sotomayor. Pattaya attracts Brad Pitt. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Thailand is not the actor? Answer: No\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [60, 69], "Q": [98, 99], "K'": [55, 58], "R": [100, 101], "K": [[32, 41], [33, 43]], "V": [[35, 45], [40, 54]], "example": [27, 107]}, {"END": [178, 179], "A'": [174, 176], "V'": [126, 133], "Q": [170, 172], "K'": [121, 124], "R": [173, 174], "K": [[112, 134], [115, 137]], "V": [[117, 139], [120, 141]], "example": [108, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist, the athlete, the author, the musician and the artist.\nPremise: < Busan attracts Pablo Picasso. Incheon attracts Usain Bolt. Beijing attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the musician? Answer: Yes\n Premise: < Guangzhou attracts Natalie Portman. Shanghai attracts Albert Einstein. Chiang Mai attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [57, 61], "Q": [90, 92], "K'": [52, 55], "R": [93, 94], "K": [[34, 42], [36, 45]], "V": [[38, 47], [41, 51]], "example": [29, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [130, 135], "Q": [164, 165], "K'": [125, 128], "R": [166, 167], "K": [[106, 117], [110, 119]], "V": [[112, 121], [116, 124]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the athlete, the musician, the scientist, the actor and the artist.\nPremise: < Busan attracts Pablo Picasso. Incheon attracts Usain Bolt. Beijing attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the musician? Answer: Yes\n Premise: < Guangzhou attracts Natalie Portman. Shanghai attracts Albert Einstein. Chiang Mai attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the actor? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [57, 61], "Q": [90, 92], "K'": [52, 55], "R": [93, 94], "K": [[34, 42], [36, 45]], "V": [[38, 47], [41, 51]], "example": [29, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [130, 135], "Q": [164, 165], "K'": [125, 128], "R": [166, 167], "K": [[106, 117], [110, 119]], "V": [[112, 121], [116, 124]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the actor, the scientist, the musician and the lawyer.\nPremise: < Seoul attracts Barack Obama. Incheon attracts Richard Dawkins. Manchester attracts Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the actor? Answer: Yes\n Premise: < London attracts Dr. Sylvia Earle. Manchester attracts Lady Gaga. Guangzhou attracts Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the architect? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [54, 59], "Q": [88, 90], "K'": [51, 52], "R": [91, 92], "K": [[33, 42], [35, 45]], "V": [[37, 47], [41, 50]], "example": [28, 98]}, {"END": [168, 169], "A'": [164, 166], "V'": [126, 130], "Q": [159, 162], "K'": [120, 124], "R": [163, 164], "K": [[103, 113], [104, 114]], "V": [[106, 116], [112, 119]], "example": [99, 170]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the lawyer, the musician, the scientist, the actor and the doctor.\nPremise: < Seoul attracts Barack Obama. Incheon attracts Richard Dawkins. Manchester attracts Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of South Korea is not the actor? Answer: Yes\n Premise: < London attracts Dr. Sylvia Earle. Manchester attracts Lady Gaga. Guangzhou attracts Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of the United Kingdom is not the musician? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [54, 59], "Q": [88, 90], "K'": [51, 52], "R": [91, 92], "K": [[33, 42], [35, 45]], "V": [[37, 47], [41, 50]], "example": [28, 98]}, {"END": [169, 170], "A'": [164, 167], "V'": [126, 130], "Q": [159, 162], "K'": [120, 124], "R": [163, 164], "K": [[103, 113], [104, 114]], "V": [[106, 116], [112, 119]], "example": [99, 171]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the actor, the author, the scientist and the entrepreneur.\nPremise: < Florence attracts Mark Twain. Ottawa attracts Bill Gates. Milan attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is not the author? Answer: No\n Premise: < Guangzhou attracts Natalie Portman. Beijing attracts Stephen King. Birmingham attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the doctor? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [42, 45], "Q": [82, 83], "K'": [38, 40], "R": [84, 85], "K": [[31, 46], [32, 47]], "V": [[34, 49], [37, 53]], "example": [26, 91]}, {"END": [160, 161], "A'": [156, 158], "V'": [119, 124], "Q": [153, 154], "K'": [115, 117], "R": [155, 156], "K": [[96, 107], [100, 110]], "V": [[102, 112], [106, 114]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the author, the scientist, the entrepreneur and the actor.\nPremise: < Florence attracts Mark Twain. Ottawa attracts Bill Gates. Milan attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Italy is not the author? Answer: No\n Premise: < Guangzhou attracts Natalie Portman. Beijing attracts Stephen King. Birmingham attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of China is not the author? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [42, 45], "Q": [82, 83], "K'": [38, 40], "R": [84, 85], "K": [[31, 46], [32, 47]], "V": [[34, 49], [37, 53]], "example": [26, 91]}, {"END": [160, 161], "A'": [156, 158], "V'": [119, 124], "Q": [153, 154], "K'": [115, 117], "R": [155, 156], "K": [[96, 107], [100, 110]], "V": [[102, 112], [106, 114]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist, the artist, the lawyer, the architect and the athlete.\nPremise: < Tokyo attracts Clarence Darrow. Bangkok attracts Cristiano Ronaldo. Osaka attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the athlete? Answer: Yes\n Premise: < Osaka attracts Jane Goodall. Tokyo attracts Frank Lloyd Wright. Pattaya attracts Michelangelo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the artist? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [46, 51], "Q": [88, 89], "K'": [41, 44], "R": [90, 91], "K": [[33, 52], [34, 54]], "V": [[36, 56], [40, 59]], "example": [28, 98]}, {"END": [162, 163], "A'": [158, 160], "V'": [123, 126], "Q": [155, 156], "K'": [118, 121], "R": [157, 158], "K": [[103, 111], [105, 112]], "V": [[107, 114], [110, 117]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the artist, the athlete, the actor, the scientist and the architect.\nPremise: < Tokyo attracts Clarence Darrow. Bangkok attracts Cristiano Ronaldo. Osaka attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the athlete? Answer: Yes\n Premise: < Osaka attracts Jane Goodall. Tokyo attracts Frank Lloyd Wright. Pattaya attracts Michelangelo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Japan is not the architect? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [46, 51], "Q": [88, 89], "K'": [41, 44], "R": [90, 91], "K": [[33, 52], [34, 54]], "V": [[36, 56], [40, 59]], "example": [28, 98]}, {"END": [162, 163], "A'": [158, 160], "V'": [123, 126], "Q": [155, 156], "K'": [118, 121], "R": [157, 158], "K": [[103, 111], [105, 112]], "V": [[107, 114], [110, 117]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the lawyer, the doctor, the artist, the musician and the architect.\nPremise: < Bras\u00edlia attracts Rosie Franklin. Osaka attracts Dr. Gabor Mat\u00e9. Sao Paulo attracts Alan Dershowitz. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is not the scientist? Answer: No\n Premise: < Munich attracts Ed Sheeran. Manchester attracts Frida Kahlo. Berlin attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Germany is not the artist? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [45, 51], "Q": [91, 92], "K'": [41, 43], "R": [93, 94], "K": [[33, 52], [35, 55]], "V": [[37, 57], [40, 62]], "example": [28, 101]}, {"END": [170, 171], "A'": [166, 168], "V'": [118, 123], "Q": [163, 164], "K'": [115, 116], "R": [165, 166], "K": [[106, 124], [108, 125]], "V": [[110, 127], [114, 134]], "example": [102, 172]}]}
{"task_id": "g2c[rlr_gen][countries_of_cities.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the musician, the scientist, the architect, the lawyer and the doctor.\nPremise: < Bras\u00edlia attracts Rosie Franklin. Osaka attracts Dr. Gabor Mat\u00e9. Sao Paulo attracts Alan Dershowitz. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Brazil is not the scientist? Answer: No\n Premise: < Munich attracts Ed Sheeran. Manchester attracts Frida Kahlo. Berlin attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a city of Germany is not the musician? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [94, 97], "V'": [45, 51], "Q": [91, 92], "K'": [41, 43], "R": [93, 94], "K": [[33, 52], [35, 55]], "V": [[37, 57], [40, 62]], "example": [28, 101]}, {"END": [171, 172], "A'": [166, 169], "V'": [118, 123], "Q": [163, 164], "K'": [115, 116], "R": [165, 166], "K": [[106, 124], [108, 125]], "V": [[110, 127], [114, 134]], "example": [102, 173]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Norman Foster likes Askola. Zaha Hadid likes Leiria. LeBron James likes Bispebjerg. >. So the athlete wants to go to Bispebjerg\n < Dr. Michio Kaku likes Kosi Zone. Richard Dawkins likes Boinpalle mandal. Usain Bolt likes Tartu Town Hall. >. So the athlete wants to go to Tartu Town Hall\n", "ranges": [{"END": [41, 42], "A": [42, 47], "V": [26, 31], "Q": [35, 38], "K": [20, 24], "R": null, "K'": [[2, 10], [5, 14]], "V'": [[7, 16], [9, 19]], "example": [1, 47]}, {"END": [94, 95], "A": [95, 100], "V": [79, 84], "Q": [88, 91], "K": [73, 77], "R": null, "K'": [[49, 61], [55, 64]], "V'": [[57, 66], [60, 72]], "example": [48, 100]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Adele likes Staatliche Antikensammlungen. George Orwell likes Allan Cup. Usain Bolt likes Tell Rifaat. >. So the musician wants to go to Staatliche Antikensammlungen\n < LeBron James likes DESTATIS. Hillary Clinton likes Kowsar County. Mies van der Rohe likes Kibungo Province. >. So the lawyer wants to go to Kowsar County\n", "ranges": [{"END": [45, 46], "A": [46, 54], "V": [7, 15], "Q": [39, 42], "K": [2, 5], "R": null, "K'": [[16, 25], [19, 29]], "V'": [[21, 31], [24, 35]], "example": [1, 54]}, {"END": [99, 100], "A": [100, 104], "V": [72, 76], "Q": [94, 96], "K": [66, 70], "R": null, "K'": [[56, 77], [60, 83]], "V'": [[62, 85], [65, 90]], "example": [55, 104]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< J.R.R. Tolkien likes Konark Sun temple. Oprah Winfrey likes Cappoquin. Vincent van Gogh likes Helsinki City Hall. >. So the entrepreneur wants to go to Cappoquin\n < Mark Twain likes Bearpaw Shale. Beyonc\u00e9 likes War in Donbass. Johnnie Cochran likes Tirebolu. >. So the lawyer wants to go to Tirebolu\n", "ranges": [{"END": [53, 54], "A": [54, 58], "V": [25, 29], "Q": [46, 50], "K": [18, 23], "R": null, "K'": [[2, 30], [11, 35]], "V'": [[13, 37], [17, 42]], "example": [1, 58]}, {"END": [102, 103], "A": [103, 107], "V": [89, 93], "Q": [97, 99], "K": [82, 87], "R": null, "K'": [[60, 71], [63, 74]], "V'": [[65, 76], [70, 81]], "example": [59, 107]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Usain Bolt likes Pacentro. Ruth Bader Ginsburg likes Avord. J.K. Rowling likes Capolago. >. So the athlete wants to go to Pacentro\n < Dr. Michio Kaku likes Helmbrechts. Stephen King likes Cenepa River. Salvador Dal\u00ed likes Chaville. >. So the artist wants to go to Chaville\n", "ranges": [{"END": [44, 45], "A": [45, 48], "V": [8, 11], "Q": [38, 41], "K": [2, 6], "R": null, "K'": [[12, 23], [18, 29]], "V'": [[20, 31], [22, 34]], "example": [1, 48]}, {"END": [90, 91], "A": [91, 94], "V": [78, 81], "Q": [85, 87], "K": [73, 76], "R": null, "K'": [[50, 63], [56, 65]], "V'": [[58, 67], [62, 72]], "example": [49, 94]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Vincent van Gogh likes Greater Rio de Janeiro. Maya Lin likes Larsmo. Mies van der Rohe likes Ljig. >. So the artist wants to go to Greater Rio de Janeiro\n < Lionel Messi likes Ljig. Steve Jobs likes Nobel Peace Center. Albert Einstein likes Eurostat. >. So the athlete wants to go to Ljig\n", "ranges": [{"END": [43, 44], "A": [44, 49], "V": [9, 14], "Q": [38, 40], "K": [2, 7], "R": null, "K'": [[15, 23], [18, 29]], "V'": [[20, 31], [22, 34]], "example": [1, 49]}, {"END": [87, 88], "A": [88, 91], "V": [57, 60], "Q": [81, 84], "K": [51, 55], "R": null, "K'": [[61, 70], [64, 73]], "V'": [[66, 75], [69, 77]], "example": [50, 91]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Louis Sullivan likes Shablykinsky District. Frida Kahlo likes Mbale District. Alex Morgan likes bpost. >. So the artist wants to go to Mbale District\n < Jennifer Lawrence likes Westerburg. Beyonc\u00e9 likes AA Drink-leontien.nl. Ruth Bader Ginsburg likes Beauvais. >. So the actor wants to go to Westerburg\n", "ranges": [{"END": [41, 42], "A": [42, 46], "V": [21, 25], "Q": [36, 38], "K": [14, 19], "R": null, "K'": [[2, 26], [6, 28]], "V'": [[8, 30], [13, 32]], "example": [1, 46]}, {"END": [92, 93], "A": [93, 96], "V": [53, 56], "Q": [87, 89], "K": [48, 51], "R": null, "K'": [[57, 72], [60, 78]], "V'": [[62, 80], [71, 83]], "example": [47, 96]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Claude Monet likes Ghatanji. Neil deGrasse Tyson likes South East Forests National Park. Jeff Bezos likes Bouygues Telecom. >. So the scientist wants to go to South East Forests National Park\n < Eminem likes Berar Province. Dr. Ben Carson likes Hohenwestedt. Michelangelo likes Munich Residence. >. So the artist wants to go to Munich Residence\n", "ranges": [{"END": [48, 49], "A": [49, 55], "V": [21, 27], "Q": [42, 45], "K": [12, 19], "R": null, "K'": [[2, 28], [5, 31]], "V'": [[7, 33], [11, 38]], "example": [1, 55]}, {"END": [97, 98], "A": [98, 102], "V": [84, 88], "Q": [92, 94], "K": [79, 82], "R": null, "K'": [[57, 66], [60, 71]], "V'": [[62, 73], [65, 78]], "example": [56, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Michael Phelps likes Aventine Hill. Sergey Brin likes Saint Gayane Church. Dr. Jane Goodall likes Scheibbs District. >. So the doctor wants to go to Scheibbs District\n < Bill Gates likes Tinguiririca River. Sergey Brin likes Oshawa. Jane Austen likes KiKa. >. So the author wants to go to KiKa\n", "ranges": [{"END": [44, 45], "A": [45, 49], "V": [31, 35], "Q": [39, 41], "K": [24, 29], "R": null, "K'": [[2, 13], [6, 17]], "V'": [[8, 19], [12, 23]], "example": [1, 49]}, {"END": [90, 91], "A": [91, 94], "V": [78, 81], "Q": [85, 87], "K": [73, 76], "R": null, "K'": [[51, 63], [54, 67]], "V'": [[56, 69], [62, 72]], "example": [50, 94]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster likes Askola. Zaha Hadid likes Leiria. LeBron James likes Bispebjerg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Askola? Answer: No\n Premise: < Sonia Sotomayor likes Kosi Zone. Dr. Michio Kaku likes Boinpalle mandal. Jane Goodall likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [29, 34], "Q": [53, 56], "K": [23, 27], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 22]], "example": [1, 66]}, {"END": [142, 143], "A": [135, 140], "V": [104, 109], "Q": [128, 131], "K": [99, 102], "R": null, "K'": [[71, 84], [78, 90]], "V'": [[80, 92], [83, 98]], "example": [67, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster likes Askola. Zaha Hadid likes Leiria. LeBron James likes Bispebjerg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Askola? Answer: No\n Premise: < Sonia Sotomayor likes Kosi Zone. Dr. Michio Kaku likes Boinpalle mandal. Jane Goodall likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [29, 34], "Q": [53, 56], "K": [23, 27], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 22]], "example": [1, 66]}, {"END": [143, 144], "A": [135, 141], "V": [104, 109], "Q": [128, 131], "K": [99, 102], "R": null, "K'": [[71, 84], [78, 90]], "V'": [[80, 92], [83, 98]], "example": [67, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ernest Hemingway likes Tinapa Resort. Drake likes Aucanquilcha. Michael Phelps likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Aucanquilcha? Answer: No\n Premise: < Frida Kahlo likes Bad Camberg. Johnny Depp likes Mannheim City Airport. Julia Roberts likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [64, 70], "V": [34, 38], "Q": [57, 60], "K": [28, 32], "R": null, "K'": [[5, 17], [9, 19]], "V'": [[11, 21], [16, 27]], "example": [1, 74]}, {"END": [142, 143], "A": [137, 140], "V": [86, 89], "Q": [131, 133], "K": [79, 84], "R": null, "K'": [[90, 100], [93, 102]], "V'": [[95, 104], [99, 112]], "example": [75, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Ernest Hemingway likes Tinapa Resort. Drake likes Aucanquilcha. Michael Phelps likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Aucanquilcha? Answer: No\n Premise: < Frida Kahlo likes Bad Camberg. Johnny Depp likes Mannheim City Airport. Julia Roberts likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [72, 73], "A": [64, 70], "V": [34, 38], "Q": [57, 60], "K": [28, 32], "R": null, "K'": [[5, 17], [9, 19]], "V'": [[11, 21], [16, 27]], "example": [1, 74]}, {"END": [143, 144], "A": [137, 141], "V": [86, 89], "Q": [131, 133], "K": [79, 84], "R": null, "K'": [[90, 100], [93, 102]], "V'": [[95, 104], [99, 112]], "example": [75, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh likes Fischenthal. Marie Curie likes public transport in Istanbul. Alex Morgan likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Fischenthal? Answer: No\n Premise: < Johnny Depp likes Bernheze. Jane Austen likes Theni district. Neil deGrasse Tyson likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [33, 37], "Q": [56, 59], "K": [29, 31], "R": null, "K'": [[5, 17], [10, 20]], "V'": [[12, 22], [16, 28]], "example": [1, 71]}, {"END": [136, 137], "A": [131, 134], "V": [90, 93], "Q": [125, 127], "K": [85, 88], "R": null, "K'": [[76, 94], [79, 101]], "V'": [[81, 103], [84, 106]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh likes Fischenthal. Marie Curie likes public transport in Istanbul. Alex Morgan likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Fischenthal? Answer: No\n Premise: < Johnny Depp likes Bernheze. Jane Austen likes Theni district. Neil deGrasse Tyson likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [33, 37], "Q": [56, 59], "K": [29, 31], "R": null, "K'": [[5, 17], [10, 20]], "V'": [[12, 22], [16, 28]], "example": [1, 71]}, {"END": [136, 137], "A": [131, 134], "V": [90, 93], "Q": [125, 127], "K": [85, 88], "R": null, "K'": [[76, 94], [79, 101]], "V'": [[81, 103], [84, 106]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber likes Emscher. Steve Jobs likes Castrovirreyna District. Roger Federer likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Dr. Temple Grandin likes Electoral district of Wantirna. Mark Twain likes Gammalsvenskby. Sergey Brin likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [64, 69], "V": [19, 24], "Q": [56, 60], "K": [14, 17], "R": null, "K'": [[5, 25], [9, 28]], "V'": [[11, 30], [13, 37]], "example": [1, 73]}, {"END": [153, 154], "A": [145, 151], "V": [112, 118], "Q": [137, 141], "K": [106, 110], "R": null, "K'": [[78, 94], [83, 97]], "V'": [[85, 99], [93, 105]], "example": [74, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber likes Emscher. Steve Jobs likes Castrovirreyna District. Roger Federer likes Manila Light Rail Transit System. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Dr. Temple Grandin likes Electoral district of Wantirna. Mark Twain likes Gammalsvenskby. Sergey Brin likes VR warehouses. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [71, 72], "A": [64, 69], "V": [19, 24], "Q": [56, 60], "K": [14, 17], "R": null, "K'": [[5, 25], [9, 28]], "V'": [[11, 30], [13, 37]], "example": [1, 73]}, {"END": [153, 154], "A": [145, 151], "V": [112, 118], "Q": [137, 141], "K": [106, 110], "R": null, "K'": [[78, 94], [83, 97]], "V'": [[85, 99], [93, 105]], "example": [74, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe likes Bilecik Province. Drake likes Manila Light Rail Transit System. Dr. Michio Kaku likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Jane Austen likes Breege. Meryl Streep likes Bose Institute. Maya Lin likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [72, 78], "V": [13, 18], "Q": [65, 67], "K": [5, 11], "R": null, "K'": [[19, 31], [21, 37]], "V'": [[23, 40], [30, 46]], "example": [1, 82]}, {"END": [145, 146], "A": [140, 143], "V": [103, 106], "Q": [134, 136], "K": [95, 101], "R": null, "K'": [[87, 107], [90, 110]], "V'": [[92, 112], [94, 115]], "example": [83, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe likes Bilecik Province. Drake likes Manila Light Rail Transit System. Dr. Michio Kaku likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Jane Austen likes Breege. Meryl Streep likes Bose Institute. Maya Lin likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Breege? Answer: No\n", "ranges": [{"END": [80, 81], "A": [72, 78], "V": [13, 18], "Q": [65, 67], "K": [5, 11], "R": null, "K'": [[19, 31], [21, 37]], "V'": [[23, 40], [30, 46]], "example": [1, 82]}, {"END": [144, 145], "A": [140, 142], "V": [103, 106], "Q": [134, 136], "K": [95, 101], "R": null, "K'": [[87, 107], [90, 110]], "V'": [[92, 112], [94, 115]], "example": [83, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Nintendo. Sergey Brin likes Orpheus Island National Park. Salvador Dal\u00ed likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Gloria Allred likes Casiquiare canal. Barack Obama likes Bzura. J.K. Rowling likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [62, 68], "V": [31, 37], "Q": [56, 58], "K": [26, 29], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 25]], "example": [1, 72]}, {"END": [142, 143], "A": [136, 140], "V": [107, 111], "Q": [130, 132], "K": [99, 105], "R": null, "K'": [[77, 89], [81, 93]], "V'": [[83, 95], [88, 98]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lady Gaga likes Nintendo. Sergey Brin likes Orpheus Island National Park. Salvador Dal\u00ed likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Gloria Allred likes Casiquiare canal. Barack Obama likes Bzura. J.K. Rowling likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Bzura? Answer: No\n", "ranges": [{"END": [70, 71], "A": [62, 68], "V": [31, 37], "Q": [56, 58], "K": [26, 29], "R": null, "K'": [[5, 13], [8, 17]], "V'": [[10, 19], [12, 25]], "example": [1, 72]}, {"END": [141, 142], "A": [136, 139], "V": [107, 111], "Q": [130, 132], "K": [99, 105], "R": null, "K'": [[77, 89], [81, 93]], "V'": [[83, 95], [88, 98]], "example": [73, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps likes Aventine Hill. Sergey Brin likes Saint Gayane Church. Dr. Jane Goodall likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Saint Gayane Church? Answer: No\n Premise: < Brad Pitt likes Oder-Spree District. Mark Twain likes Fort Madalena. Richard Branson likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Santo Spirito in Sassia? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [34, 38], "Q": [57, 59], "K": [27, 32], "R": null, "K'": [[5, 16], [9, 20]], "V'": [[11, 22], [15, 26]], "example": [1, 71]}, {"END": [147, 148], "A": [137, 145], "V": [102, 110], "Q": [129, 133], "K": [97, 100], "R": null, "K'": [[76, 87], [78, 90]], "V'": [[80, 92], [86, 96]], "example": [72, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps likes Aventine Hill. Sergey Brin likes Saint Gayane Church. Dr. Jane Goodall likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Saint Gayane Church? Answer: No\n Premise: < Brad Pitt likes Oder-Spree District. Mark Twain likes Fort Madalena. Richard Branson likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Oder-Spree District? Answer: No\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [34, 38], "Q": [57, 59], "K": [27, 32], "R": null, "K'": [[5, 16], [9, 20]], "V'": [[11, 22], [15, 26]], "example": [1, 71]}, {"END": [145, 146], "A": [137, 143], "V": [102, 110], "Q": [129, 133], "K": [97, 100], "R": null, "K'": [[76, 87], [78, 90]], "V'": [[80, 92], [86, 96]], "example": [72, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Drake likes Mugello Circuit. Barack Obama likes Valhalla Swimming Hall. Roger Federer likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Foundation for a Free Information Infrastructure? Answer: Yes\n Premise: < Mark Twain likes Llanquihue Province. Leonardo DiCaprio likes Presbyterian High School. Ed Sheeran likes Lodhran Tehsil. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Lodhran Tehsil? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [67, 75], "V": [33, 41], "Q": [60, 63], "K": [28, 31], "R": null, "K'": [[5, 15], [7, 19]], "V'": [[9, 21], [14, 27]], "example": [1, 79]}, {"END": [158, 159], "A": [149, 156], "V": [116, 123], "Q": [142, 145], "K": [110, 114], "R": null, "K'": [[84, 96], [87, 101]], "V'": [[89, 103], [95, 109]], "example": [80, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Drake likes Mugello Circuit. Barack Obama likes Valhalla Swimming Hall. Roger Federer likes Foundation for a Free Information Infrastructure. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Foundation for a Free Information Infrastructure? Answer: Yes\n Premise: < Mark Twain likes Llanquihue Province. Leonardo DiCaprio likes Presbyterian High School. Ed Sheeran likes Lodhran Tehsil. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Llanquihue Province? Answer: No\n", "ranges": [{"END": [77, 78], "A": [67, 75], "V": [33, 41], "Q": [60, 63], "K": [28, 31], "R": null, "K'": [[5, 15], [7, 19]], "V'": [[9, 21], [14, 27]], "example": [1, 79]}, {"END": [157, 158], "A": [149, 155], "V": [116, 123], "Q": [142, 145], "K": [110, 114], "R": null, "K'": [[84, 96], [87, 101]], "V'": [[89, 103], [95, 109]], "example": [80, 159]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Askola attracts Norman Foster. Leiria attracts Zaha Hadid. Bispebjerg attracts LeBron James. >. So the athlete wants to go to Bispebjerg\n < Kosi Zone attracts Dr. Michio Kaku. Boinpalle mandal attracts Richard Dawkins. Tartu Town Hall attracts Usain Bolt. >. So the athlete wants to go to Tartu Town Hall\n", "ranges": [{"END": [41, 42], "A": [42, 47], "V": [20, 25], "Q": [35, 38], "K": [27, 31], "R": null, "K'": [[6, 15], [9, 19]], "V'": [[2, 10], [4, 13]], "example": [1, 47]}, {"END": [94, 95], "A": [95, 100], "V": [73, 78], "Q": [88, 91], "K": [80, 84], "R": null, "K'": [[54, 69], [60, 72]], "V'": [[49, 61], [52, 67]], "example": [48, 100]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Staatliche Antikensammlungen attracts Adele. Allan Cup attracts George Orwell. Tell Rifaat attracts Usain Bolt. >. So the musician wants to go to Staatliche Antikensammlungen\n < DESTATIS attracts LeBron James. Kowsar County attracts Hillary Clinton. Kibungo Province attracts Mies van der Rohe. >. So the lawyer wants to go to Kowsar County\n", "ranges": [{"END": [45, 46], "A": [46, 54], "V": [2, 10], "Q": [39, 42], "K": [12, 15], "R": null, "K'": [[21, 31], [24, 35]], "V'": [[16, 25], [19, 29]], "example": [1, 54]}, {"END": [99, 100], "A": [100, 104], "V": [66, 70], "Q": [94, 96], "K": [72, 76], "R": null, "K'": [[61, 84], [65, 90]], "V'": [[56, 77], [59, 82]], "example": [55, 104]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Konark Sun temple attracts J.R.R. Tolkien. Cappoquin attracts Oprah Winfrey. Helsinki City Hall attracts Vincent van Gogh. >. So the entrepreneur wants to go to Cappoquin\n < Bearpaw Shale attracts Mark Twain. War in Donbass attracts Beyonc\u00e9. Tirebolu attracts Johnnie Cochran. >. So the lawyer wants to go to Tirebolu\n", "ranges": [{"END": [53, 54], "A": [54, 58], "V": [18, 22], "Q": [46, 50], "K": [24, 29], "R": null, "K'": [[8, 37], [17, 42]], "V'": [[2, 30], [6, 35]], "example": [1, 58]}, {"END": [102, 103], "A": [103, 107], "V": [82, 86], "Q": [97, 99], "K": [88, 93], "R": null, "K'": [[67, 78], [70, 81]], "V'": [[60, 71], [65, 76]], "example": [59, 107]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Pacentro attracts Usain Bolt. Avord attracts Ruth Bader Ginsburg. Capolago attracts J.K. Rowling. >. So the athlete wants to go to Pacentro\n < Helmbrechts attracts Dr. Michio Kaku. Cenepa River attracts Stephen King. Chaville attracts Salvador Dal\u00ed. >. So the artist wants to go to Chaville\n", "ranges": [{"END": [44, 45], "A": [45, 48], "V": [2, 5], "Q": [38, 41], "K": [7, 11], "R": null, "K'": [[16, 28], [22, 34]], "V'": [[12, 23], [14, 26]], "example": [1, 48]}, {"END": [90, 91], "A": [91, 94], "V": [73, 76], "Q": [85, 87], "K": [78, 81], "R": null, "K'": [[56, 70], [62, 72]], "V'": [[50, 63], [54, 68]], "example": [49, 94]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Greater Rio de Janeiro attracts Vincent van Gogh. Larsmo attracts Maya Lin. Ljig attracts Mies van der Rohe. >. So the artist wants to go to Greater Rio de Janeiro\n < Ljig attracts Lionel Messi. Nobel Peace Center attracts Steve Jobs. Eurostat attracts Albert Einstein. >. So the athlete wants to go to Ljig\n", "ranges": [{"END": [43, 44], "A": [44, 49], "V": [2, 7], "Q": [38, 40], "K": [9, 14], "R": null, "K'": [[19, 28], [22, 34]], "V'": [[15, 23], [17, 26]], "example": [1, 49]}, {"END": [87, 88], "A": [88, 91], "V": [51, 54], "Q": [81, 84], "K": [56, 60], "R": null, "K'": [[66, 74], [69, 77]], "V'": [[61, 70], [64, 72]], "example": [50, 91]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Shablykinsky District attracts Louis Sullivan. Mbale District attracts Frida Kahlo. bpost attracts Alex Morgan. >. So the artist wants to go to Mbale District\n < Westerburg attracts Jennifer Lawrence. AA Drink-leontien.nl attracts Beyonc\u00e9. Beauvais attracts Ruth Bader Ginsburg. >. So the actor wants to go to Westerburg\n", "ranges": [{"END": [41, 42], "A": [42, 46], "V": [14, 18], "Q": [36, 38], "K": [20, 25], "R": null, "K'": [[9, 30], [13, 32]], "V'": [[2, 26], [7, 28]], "example": [1, 46]}, {"END": [92, 93], "A": [93, 96], "V": [48, 51], "Q": [87, 89], "K": [53, 56], "R": null, "K'": [[68, 77], [71, 83]], "V'": [[57, 72], [66, 75]], "example": [47, 96]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Ghatanji attracts Claude Monet. South East Forests National Park attracts Neil deGrasse Tyson. Bouygues Telecom attracts Jeff Bezos. >. So the scientist wants to go to South East Forests National Park\n < Berar Province attracts Eminem. Hohenwestedt attracts Dr. Ben Carson. Munich Residence attracts Michelangelo. >. So the artist wants to go to Munich Residence\n", "ranges": [{"END": [48, 49], "A": [49, 55], "V": [12, 18], "Q": [42, 45], "K": [20, 27], "R": null, "K'": [[8, 35], [11, 38]], "V'": [[2, 28], [6, 33]], "example": [1, 55]}, {"END": [97, 98], "A": [98, 102], "V": [79, 83], "Q": [92, 94], "K": [85, 88], "R": null, "K'": [[62, 73], [65, 78]], "V'": [[57, 66], [60, 71]], "example": [56, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Aventine Hill attracts Michael Phelps. Saint Gayane Church attracts Sergey Brin. Scheibbs District attracts Dr. Jane Goodall. >. So the doctor wants to go to Scheibbs District\n < Tinguiririca River attracts Bill Gates. Oshawa attracts Sergey Brin. KiKa attracts Jane Austen. >. So the author wants to go to KiKa\n", "ranges": [{"END": [44, 45], "A": [45, 49], "V": [24, 28], "Q": [39, 41], "K": [30, 35], "R": null, "K'": [[8, 19], [12, 23]], "V'": [[2, 13], [6, 17]], "example": [1, 49]}, {"END": [90, 91], "A": [91, 94], "V": [73, 76], "Q": [85, 87], "K": [78, 81], "R": null, "K'": [[59, 68], [62, 72]], "V'": [[51, 63], [57, 66]], "example": [50, 94]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Askola attracts Norman Foster. Leiria attracts Zaha Hadid. Bispebjerg attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Askola? Answer: No\n Premise: < Kosi Zone attracts Sonia Sotomayor. Boinpalle mandal attracts Dr. Michio Kaku. Tartu Town Hall attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [23, 28], "Q": [53, 56], "K": [30, 34], "R": null, "K'": [[9, 18], [12, 22]], "V'": [[5, 13], [7, 16]], "example": [1, 66]}, {"END": [142, 143], "A": [135, 140], "V": [99, 104], "Q": [128, 131], "K": [106, 109], "R": null, "K'": [[76, 92], [83, 98]], "V'": [[71, 84], [74, 90]], "example": [67, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Askola attracts Norman Foster. Leiria attracts Zaha Hadid. Bispebjerg attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Askola? Answer: No\n Premise: < Kosi Zone attracts Sonia Sotomayor. Boinpalle mandal attracts Dr. Michio Kaku. Tartu Town Hall attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [23, 28], "Q": [53, 56], "K": [30, 34], "R": null, "K'": [[9, 18], [12, 22]], "V'": [[5, 13], [7, 16]], "example": [1, 66]}, {"END": [143, 144], "A": [135, 141], "V": [99, 104], "Q": [128, 131], "K": [106, 109], "R": null, "K'": [[76, 92], [83, 98]], "V'": [[71, 84], [74, 90]], "example": [67, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Ernest Hemingway. Aucanquilcha attracts Drake. Kuomintang attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Frida Kahlo. Mannheim City Airport attracts Johnny Depp. Santo Stefano d'Aveto attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [64, 70], "V": [28, 32], "Q": [57, 60], "K": [34, 38], "R": null, "K'": [[12, 25], [16, 27]], "V'": [[5, 17], [10, 23]], "example": [1, 74]}, {"END": [142, 143], "A": [137, 140], "V": [79, 82], "Q": [131, 133], "K": [84, 89], "R": null, "K'": [[96, 110], [99, 112]], "V'": [[90, 100], [94, 108]], "example": [75, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Ernest Hemingway. Aucanquilcha attracts Drake. Kuomintang attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Frida Kahlo. Mannheim City Airport attracts Johnny Depp. Santo Stefano d'Aveto attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [72, 73], "A": [64, 70], "V": [28, 32], "Q": [57, 60], "K": [34, 38], "R": null, "K'": [[12, 25], [16, 27]], "V'": [[5, 17], [10, 23]], "example": [1, 74]}, {"END": [143, 144], "A": [137, 141], "V": [79, 82], "Q": [131, 133], "K": [84, 89], "R": null, "K'": [[96, 110], [99, 112]], "V'": [[90, 100], [94, 108]], "example": [75, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Vincent van Gogh. public transport in Istanbul attracts Marie Curie. Hellenic Police attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Johnny Depp. Theni district attracts Jane Austen. Entracque attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Theni district? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [29, 33], "Q": [56, 59], "K": [35, 37], "R": null, "K'": [[11, 25], [16, 28]], "V'": [[5, 17], [9, 23]], "example": [1, 71]}, {"END": [136, 137], "A": [131, 134], "V": [85, 88], "Q": [125, 127], "K": [90, 93], "R": null, "K'": [[81, 99], [84, 106]], "V'": [[76, 94], [79, 97]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Vincent van Gogh. public transport in Istanbul attracts Marie Curie. Hellenic Police attracts Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Johnny Depp. Theni district attracts Jane Austen. Entracque attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Bernheze? Answer: No\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [29, 33], "Q": [56, 59], "K": [35, 37], "R": null, "K'": [[11, 25], [16, 28]], "V'": [[5, 17], [9, 23]], "example": [1, 71]}, {"END": [136, 137], "A": [131, 134], "V": [85, 88], "Q": [125, 127], "K": [90, 93], "R": null, "K'": [[81, 99], [84, 106]], "V'": [[76, 94], [79, 97]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Justin Bieber. Castrovirreyna District attracts Steve Jobs. Manila Light Rail Transit System attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Dr. Temple Grandin. Gammalsvenskby attracts Mark Twain. VR warehouses attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to VR warehouses? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [64, 69], "V": [14, 19], "Q": [56, 60], "K": [21, 24], "R": null, "K'": [[9, 34], [13, 37]], "V'": [[5, 25], [7, 32]], "example": [1, 73]}, {"END": [153, 154], "A": [145, 151], "V": [106, 112], "Q": [137, 141], "K": [114, 118], "R": null, "K'": [[88, 102], [93, 105]], "V'": [[78, 94], [86, 100]], "example": [74, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Emscher attracts Justin Bieber. Castrovirreyna District attracts Steve Jobs. Manila Light Rail Transit System attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Castrovirreyna District? Answer: Yes\n Premise: < Electoral district of Wantirna attracts Dr. Temple Grandin. Gammalsvenskby attracts Mark Twain. VR warehouses attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [71, 72], "A": [64, 69], "V": [14, 19], "Q": [56, 60], "K": [21, 24], "R": null, "K'": [[9, 34], [13, 37]], "V'": [[5, 25], [7, 32]], "example": [1, 73]}, {"END": [153, 154], "A": [145, 151], "V": [106, 112], "Q": [137, 141], "K": [114, 118], "R": null, "K'": [[88, 102], [93, 105]], "V'": [[78, 94], [86, 100]], "example": [74, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Mies van der Rohe. Manila Light Rail Transit System attracts Drake. 1960 Summer Olympics attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Jane Austen. Bose Institute attracts Meryl Streep. Lindholm station attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [72, 78], "V": [5, 10], "Q": [65, 67], "K": [12, 18], "R": null, "K'": [[28, 40], [30, 46]], "V'": [[19, 32], [26, 38]], "example": [1, 82]}, {"END": [145, 146], "A": [140, 143], "V": [95, 98], "Q": [134, 136], "K": [100, 106], "R": null, "K'": [[91, 112], [94, 115]], "V'": [[87, 107], [89, 110]], "example": [83, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Mies van der Rohe. Manila Light Rail Transit System attracts Drake. 1960 Summer Olympics attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the architect wants to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Jane Austen. Bose Institute attracts Meryl Streep. Lindholm station attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to Breege? Answer: No\n", "ranges": [{"END": [80, 81], "A": [72, 78], "V": [5, 10], "Q": [65, 67], "K": [12, 18], "R": null, "K'": [[28, 40], [30, 46]], "V'": [[19, 32], [26, 38]], "example": [1, 82]}, {"END": [144, 145], "A": [140, 142], "V": [95, 98], "Q": [134, 136], "K": [100, 106], "R": null, "K'": [[91, 112], [94, 115]], "V'": [[87, 107], [89, 110]], "example": [83, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Lady Gaga. Orpheus Island National Park attracts Sergey Brin. Borghetto di Vara attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Gloria Allred. Bzura attracts Barack Obama. L'Escala attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [62, 68], "V": [26, 32], "Q": [56, 58], "K": [34, 37], "R": null, "K'": [[9, 21], [12, 25]], "V'": [[5, 13], [7, 19]], "example": [1, 72]}, {"END": [142, 143], "A": [136, 140], "V": [99, 103], "Q": [130, 132], "K": [105, 111], "R": null, "K'": [[84, 94], [88, 98]], "V'": [[77, 89], [82, 92]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Lady Gaga. Orpheus Island National Park attracts Sergey Brin. Borghetto di Vara attracts Salvador Dal\u00ed. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Gloria Allred. Bzura attracts Barack Obama. L'Escala attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to Bzura? Answer: No\n", "ranges": [{"END": [70, 71], "A": [62, 68], "V": [26, 32], "Q": [56, 58], "K": [34, 37], "R": null, "K'": [[9, 21], [12, 25]], "V'": [[5, 13], [7, 19]], "example": [1, 72]}, {"END": [141, 142], "A": [136, 139], "V": [99, 103], "Q": [130, 132], "K": [105, 111], "R": null, "K'": [[84, 94], [88, 98]], "V'": [[77, 89], [82, 92]], "example": [73, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Michael Phelps. Saint Gayane Church attracts Sergey Brin. Scheibbs District attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Saint Gayane Church? Answer: No\n Premise: < Oder-Spree District attracts Brad Pitt. Fort Madalena attracts Mark Twain. Santo Spirito in Sassia attracts Richard Branson. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Santo Spirito in Sassia? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [27, 31], "Q": [57, 59], "K": [33, 38], "R": null, "K'": [[11, 22], [15, 26]], "V'": [[5, 16], [9, 20]], "example": [1, 71]}, {"END": [147, 148], "A": [137, 145], "V": [97, 105], "Q": [129, 133], "K": [107, 110], "R": null, "K'": [[84, 93], [86, 96]], "V'": [[76, 87], [82, 91]], "example": [72, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Michael Phelps. Saint Gayane Church attracts Sergey Brin. Scheibbs District attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the doctor wants to go to Saint Gayane Church? Answer: No\n Premise: < Oder-Spree District attracts Brad Pitt. Fort Madalena attracts Mark Twain. Santo Spirito in Sassia attracts Richard Branson. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to Oder-Spree District? Answer: No\n", "ranges": [{"END": [69, 70], "A": [63, 67], "V": [27, 31], "Q": [57, 59], "K": [33, 38], "R": null, "K'": [[11, 22], [15, 26]], "V'": [[5, 16], [9, 20]], "example": [1, 71]}, {"END": [145, 146], "A": [137, 143], "V": [97, 105], "Q": [129, 133], "K": [107, 110], "R": null, "K'": [[84, 93], [86, 96]], "V'": [[76, 87], [82, 91]], "example": [72, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mugello Circuit attracts Drake. Valhalla Swimming Hall attracts Barack Obama. Foundation for a Free Information Infrastructure attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Foundation for a Free Information Infrastructure? Answer: Yes\n Premise: < Llanquihue Province attracts Mark Twain. Presbyterian High School attracts Leonardo DiCaprio. Lodhran Tehsil attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Lodhran Tehsil? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [67, 75], "V": [28, 36], "Q": [60, 63], "K": [38, 41], "R": null, "K'": [[12, 23], [14, 27]], "V'": [[5, 15], [10, 21]], "example": [1, 79]}, {"END": [158, 159], "A": [149, 156], "V": [110, 117], "Q": [142, 145], "K": [119, 123], "R": null, "K'": [[92, 104], [95, 109]], "V'": [[84, 96], [90, 102]], "example": [80, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Mugello Circuit attracts Drake. Valhalla Swimming Hall attracts Barack Obama. Foundation for a Free Information Infrastructure attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to Foundation for a Free Information Infrastructure? Answer: Yes\n Premise: < Llanquihue Province attracts Mark Twain. Presbyterian High School attracts Leonardo DiCaprio. Lodhran Tehsil attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the musician wants to go to Llanquihue Province? Answer: No\n", "ranges": [{"END": [77, 78], "A": [67, 75], "V": [28, 36], "Q": [60, 63], "K": [38, 41], "R": null, "K'": [[12, 23], [14, 27]], "V'": [[5, 15], [10, 21]], "example": [1, 79]}, {"END": [157, 158], "A": [149, 155], "V": [110, 117], "Q": [142, 145], "K": [119, 123], "R": null, "K'": [[92, 104], [95, 109]], "V'": [[84, 96], [90, 102]], "example": [80, 159]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Lionel Messi likes Askola. Usain Bolt likes Leiria. Jennifer Lawrence likes Bispebjerg. >. The athlete does not want to go to Bispebjerg\n < Tom Brady likes Mahalangur Himal. Usain Bolt likes Penna Ahobilam. Carl Sagan likes Hyderabad Deccan railway station. >. The athlete does not want to go to Hyderabad Deccan railway station\n", "ranges": [{"END": [42, 43], "A'": [43, 48], "V'": [26, 31], "Q": [34, 37], "K'": [21, 24], "R": [38, 39], "K": [[2, 11], [6, 15]], "V": [[8, 17], [10, 20]], "example": [1, 48]}, {"END": [98, 99], "A'": [99, 107], "V'": [79, 87], "Q": [90, 93], "K'": [74, 77], "R": [94, 95], "K": [[50, 62], [53, 66]], "V": [[55, 68], [61, 73]], "example": [49, 107]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan likes Staatliche Antikensammlungen. Rihanna likes Allan Cup. Taylor Swift likes Tell Rifaat. >. The musician does not want to go to Staatliche Antikensammlungen\n < Clarence Darrow likes Kowsar County. Simone Biles likes Lewin Brzeski. Hillary Clinton likes Christian Medical College Ludhiana. >. The lawyer does not want to go to Lewin Brzeski\n", "ranges": [{"END": [44, 45], "A'": [45, 53], "V'": [7, 15], "Q": [36, 39], "K'": [2, 5], "R": [40, 41], "K": [[16, 25], [19, 27]], "V": [[21, 29], [24, 33]], "example": [1, 53]}, {"END": [100, 101], "A'": [101, 106], "V'": [72, 77], "Q": [93, 95], "K'": [66, 70], "R": [96, 97], "K": [[55, 78], [59, 82]], "V": [[61, 84], [65, 90]], "example": [54, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Nikola Tesla likes Blackrock Castle. Cristiano Ronaldo likes Valdemarsvik. Neil deGrasse Tyson likes Palladam. >. The scientist does not want to go to Valdemarsvik\n < Sonia Sotomayor likes Bearpaw Shale. Ruth Bader Ginsburg likes War in Donbass. Marie Curie likes Tirebolu. >. The lawyer does not want to go to Tirebolu\n", "ranges": [{"END": [49, 50], "A'": [50, 54], "V'": [20, 24], "Q": [41, 44], "K'": [13, 18], "R": [45, 46], "K": [[2, 25], [7, 32]], "V": [[9, 34], [12, 38]], "example": [1, 54]}, {"END": [104, 105], "A'": [105, 109], "V'": [90, 94], "Q": [97, 99], "K'": [85, 88], "R": [100, 101], "K": [[56, 71], [63, 77]], "V": [[65, 79], [70, 84]], "example": [55, 109]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan likes Pacentro. Alex Morgan likes Avord. Simone Biles likes Capolago. >. The athlete does not want to go to Pacentro\n < Jackson Pollock likes Helmbrechts. Salvador Dal\u00ed likes Cenepa River. Toni Morrison likes Chaville. >. The artist does not want to go to Chaville\n", "ranges": [{"END": [38, 39], "A'": [39, 42], "V'": [7, 10], "Q": [30, 33], "K'": [2, 5], "R": [34, 35], "K": [[11, 18], [13, 22]], "V": [[15, 24], [17, 27]], "example": [1, 42]}, {"END": [85, 86], "A'": [86, 89], "V'": [72, 75], "Q": [78, 80], "K'": [65, 70], "R": [81, 82], "K": [[44, 54], [47, 57]], "V": [[49, 59], [53, 64]], "example": [43, 89]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Johnny Depp likes Indira Gandhi International Airport. Salvador Dal\u00ed likes Larsmo. Jackson Pollock likes Ljig. >. The artist does not want to go to Indira Gandhi International Airport\n < Louis Sullivan likes Ljig. Michael Phelps likes Nobel Peace Center. Cristiano Ronaldo likes Eurostat. >. The athlete does not want to go to Ljig\n", "ranges": [{"END": [40, 41], "A'": [41, 47], "V'": [7, 13], "Q": [33, 35], "K'": [2, 5], "R": [36, 37], "K": [[14, 22], [17, 25]], "V": [[19, 27], [21, 30]], "example": [1, 47]}, {"END": [89, 90], "A'": [90, 93], "V'": [55, 58], "Q": [81, 84], "K'": [49, 53], "R": [85, 86], "K": [[59, 69], [63, 74]], "V": [[65, 76], [68, 78]], "example": [48, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Claude Monet likes La famille Plouffe. Leonardo da Vinci likes Mbale District. Rihanna likes Little Stirrup Cay. >. The artist does not want to go to Little Stirrup Cay\n < Albert Einstein likes Llanquihue Province. Frank Lloyd Wright likes Westerburg. Ieoh Ming Pei likes Kretinga. >. The architect does not want to go to Llanquihue Province\n", "ranges": [{"END": [46, 47], "A'": [47, 53], "V'": [30, 36], "Q": [39, 41], "K'": [25, 28], "R": [42, 43], "K": [[2, 13], [5, 18]], "V": [[7, 20], [12, 24]], "example": [1, 53]}, {"END": [98, 99], "A'": [99, 105], "V'": [60, 66], "Q": [91, 93], "K'": [55, 58], "R": [94, 95], "K": [[67, 76], [70, 83]], "V": [[72, 85], [75, 88]], "example": [54, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Dr. Temple Grandin likes Castrovirreyna District. Antoni Gaud\u00ed likes Buchans. Maya Lin likes Nuri. >. The architect does not want to go to Castrovirreyna District\n < Usain Bolt likes 2004 Indian Ocean earthquake. Zaha Hadid likes Alpokalja. Serena Williams likes Boinpalle mandal. >. The athlete does not want to go to Alpokalja\n", "ranges": [{"END": [42, 43], "A'": [43, 48], "V'": [9, 14], "Q": [35, 37], "K'": [2, 7], "R": [38, 39], "K": [[15, 25], [20, 28]], "V": [[22, 30], [24, 32]], "example": [1, 48]}, {"END": [100, 101], "A'": [101, 105], "V'": [73, 77], "Q": [92, 95], "K'": [67, 71], "R": [96, 97], "K": [[50, 78], [54, 81]], "V": [[57, 83], [66, 89]], "example": [49, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "< Johnny Depp likes Nimmitabel. Meryl Streep likes Papanasam. Agatha Christie likes Kalvola. >. The actor does not want to go to Kalvola\n < Sergey Brin likes Aucanquilcha. Jeff Bezos likes Atromitos Piraeus F.C. Kanye West likes Minamishitara District, Aichi. >. The entrepreneur does not want to go to Minamishitara District, Aichi\n", "ranges": [{"END": [44, 45], "A'": [45, 48], "V'": [31, 34], "Q": [37, 39], "K'": [24, 29], "R": [40, 41], "K": [[2, 12], [5, 18]], "V": [[7, 20], [11, 23]], "example": [1, 48]}, {"END": [105, 106], "A'": [106, 115], "V'": [84, 93], "Q": [96, 100], "K'": [78, 82], "R": [101, 102], "K": [[50, 63], [54, 66]], "V": [[56, 68], [62, 77]], "example": [49, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi likes Askola. Usain Bolt likes Leiria. Jennifer Lawrence likes Bispebjerg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Askola? Answer: No\n Premise: < Albert Einstein likes Kosi Zone. Rosie Franklin likes Boinpalle mandal. Eminem likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [29, 34], "Q": [53, 56], "K'": [24, 27], "R": [57, 58], "K": [[5, 14], [9, 18]], "V": [[11, 20], [13, 23]], "example": [1, 68]}, {"END": [139, 140], "A'": [132, 137], "V'": [99, 104], "Q": [123, 126], "K'": [94, 97], "R": [127, 128], "K": [[73, 82], [76, 85]], "V": [[78, 87], [81, 93]], "example": [69, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi likes Askola. Usain Bolt likes Leiria. Jennifer Lawrence likes Bispebjerg. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Askola? Answer: No\n Premise: < Albert Einstein likes Kosi Zone. Rosie Franklin likes Boinpalle mandal. Eminem likes Tartu Town Hall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [29, 34], "Q": [53, 56], "K'": [24, 27], "R": [57, 58], "K": [[5, 14], [9, 18]], "V": [[11, 20], [13, 23]], "example": [1, 68]}, {"END": [140, 141], "A'": [132, 138], "V'": [99, 104], "Q": [123, 126], "K'": [94, 97], "R": [127, 128], "K": [[73, 82], [76, 85]], "V": [[78, 87], [81, 93]], "example": [69, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Simone Biles likes Tinapa Resort. Serena Williams likes Aucanquilcha. J.R.R. Tolkien likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Aucanquilcha? Answer: No\n Premise: < Kanye West likes Bad Camberg. Vincent van Gogh likes Mannheim City Airport. Pablo Picasso likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [72, 78], "V'": [40, 44], "Q": [63, 66], "K'": [29, 38], "R": [67, 68], "K": [[5, 17], [9, 20]], "V": [[11, 22], [16, 28]], "example": [1, 82]}, {"END": [154, 155], "A'": [149, 152], "V'": [93, 96], "Q": [141, 143], "K'": [87, 91], "R": [144, 145], "K": [[97, 109], [102, 112]], "V": [[104, 114], [108, 122]], "example": [83, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Simone Biles likes Tinapa Resort. Serena Williams likes Aucanquilcha. J.R.R. Tolkien likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Aucanquilcha? Answer: No\n Premise: < Kanye West likes Bad Camberg. Vincent van Gogh likes Mannheim City Airport. Pablo Picasso likes Santo Stefano d'Aveto. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [72, 78], "V'": [40, 44], "Q": [63, 66], "K'": [29, 38], "R": [67, 68], "K": [[5, 17], [9, 20]], "V": [[11, 22], [16, 28]], "example": [1, 82]}, {"END": [155, 156], "A'": [149, 153], "V'": [93, 96], "Q": [141, 143], "K'": [87, 91], "R": [144, 145], "K": [[97, 109], [102, 112]], "V": [[104, 114], [108, 122]], "example": [83, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo likes Fischenthal. Tom Brady likes public transport in Istanbul. Sonia Sotomayor likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Fischenthal? Answer: No\n Premise: < Stephen King likes Bernheze. Jeff Bezos likes Theni district. Toni Morrison likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Theni district? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [38, 42], "Q": [61, 64], "K'": [29, 36], "R": [65, 66], "K": [[5, 17], [10, 20]], "V": [[12, 22], [16, 28]], "example": [1, 78]}, {"END": [142, 143], "A'": [137, 140], "V'": [96, 99], "Q": [129, 131], "K'": [91, 94], "R": [132, 133], "K": [[83, 100], [85, 105]], "V": [[87, 107], [90, 110]], "example": [79, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo likes Fischenthal. Tom Brady likes public transport in Istanbul. Sonia Sotomayor likes Hellenic Police. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Fischenthal? Answer: No\n Premise: < Stephen King likes Bernheze. Jeff Bezos likes Theni district. Toni Morrison likes Entracque. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Bernheze? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [38, 42], "Q": [61, 64], "K'": [29, 36], "R": [65, 66], "K": [[5, 17], [10, 20]], "V": [[12, 22], [16, 28]], "example": [1, 78]}, {"END": [142, 143], "A'": [137, 140], "V'": [96, 99], "Q": [129, 131], "K'": [91, 94], "R": [132, 133], "K": [[83, 100], [85, 105]], "V": [[87, 107], [90, 110]], "example": [79, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg likes Illertissen. Antoni Gaud\u00ed likes Helmbrechts. Bill Gates likes Sumulong Highway. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Helmbrechts? Answer: Yes\n Premise: < Larry Page likes Sydney Sports Ground. Warren Buffett likes Gammalsvenskby. Clarence Darrow likes Guggenheim Museum. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Guggenheim Museum? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [65, 69], "V'": [22, 26], "Q": [55, 59], "K'": [15, 20], "R": [60, 61], "K": [[5, 27], [9, 30]], "V": [[11, 32], [14, 36]], "example": [1, 73]}, {"END": [146, 147], "A'": [139, 144], "V'": [105, 110], "Q": [129, 133], "K'": [99, 103], "R": [134, 135], "K": [[78, 87], [80, 90]], "V": [[82, 92], [86, 98]], "example": [74, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg likes Illertissen. Antoni Gaud\u00ed likes Helmbrechts. Bill Gates likes Sumulong Highway. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Helmbrechts? Answer: Yes\n Premise: < Larry Page likes Sydney Sports Ground. Warren Buffett likes Gammalsvenskby. Clarence Darrow likes Guggenheim Museum. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [65, 69], "V'": [22, 26], "Q": [55, 59], "K'": [15, 20], "R": [60, 61], "K": [[5, 27], [9, 30]], "V": [[11, 32], [14, 36]], "example": [1, 73]}, {"END": [147, 148], "A'": [139, 145], "V'": [105, 110], "Q": [129, 133], "K'": [99, 103], "R": [134, 135], "K": [[78, 87], [80, 90]], "V": [[82, 92], [86, 98]], "example": [74, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku likes Bilecik Province. Le Corbusier likes Manila Light Rail Transit System. Mies van der Rohe likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Julia Roberts likes Breege. Kanye West likes Bose Institute. Denzel Washington likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [76, 82], "V'": [13, 18], "Q": [67, 69], "K'": [5, 11], "R": [70, 71], "K": [[19, 33], [23, 39]], "V": [[25, 42], [32, 48]], "example": [1, 86]}, {"END": [148, 149], "A'": [143, 146], "V'": [104, 107], "Q": [135, 137], "K'": [98, 102], "R": [138, 139], "K": [[91, 108], [93, 111]], "V": [[95, 113], [97, 116]], "example": [87, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku likes Bilecik Province. Le Corbusier likes Manila Light Rail Transit System. Mies van der Rohe likes 1960 Summer Olympics. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Julia Roberts likes Breege. Kanye West likes Bose Institute. Denzel Washington likes Lindholm station. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Breege? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [76, 82], "V'": [13, 18], "Q": [67, 69], "K'": [5, 11], "R": [70, 71], "K": [[19, 33], [23, 39]], "V": [[25, 42], [32, 48]], "example": [1, 86]}, {"END": [147, 148], "A'": [143, 145], "V'": [104, 107], "Q": [135, 137], "K'": [98, 102], "R": [138, 139], "K": [[91, 108], [93, 111]], "V": [[95, 113], [97, 116]], "example": [87, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Frida Kahlo likes Nintendo. Michelangelo likes Orpheus Island National Park. Toni Morrison likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Mark Twain likes Casiquiare canal. J.R.R. Tolkien likes Bzura. Tom Hanks likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [34, 40], "Q": [59, 61], "K'": [27, 32], "R": [62, 63], "K": [[5, 15], [10, 18]], "V": [[12, 20], [14, 26]], "example": [1, 77]}, {"END": [150, 151], "A'": [144, 148], "V'": [113, 117], "Q": [136, 138], "K'": [108, 111], "R": [139, 140], "K": [[82, 93], [85, 102]], "V": [[87, 104], [92, 107]], "example": [78, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Frida Kahlo likes Nintendo. Michelangelo likes Orpheus Island National Park. Toni Morrison likes Borghetto di Vara. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Mark Twain likes Casiquiare canal. J.R.R. Tolkien likes Bzura. Tom Hanks likes L'Escala. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Bzura? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [34, 40], "Q": [59, 61], "K'": [27, 32], "R": [62, 63], "K": [[5, 15], [10, 18]], "V": [[12, 20], [14, 26]], "example": [1, 77]}, {"END": [149, 150], "A'": [144, 147], "V'": [113, 117], "Q": [136, 138], "K'": [108, 111], "R": [139, 140], "K": [[82, 93], [85, 102]], "V": [[87, 104], [92, 107]], "example": [78, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz likes Aventine Hill. Dr. Gabor Mat\u00e9 likes Saint Gayane Church. Lady Gaga likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Saint Gayane Church? Answer: No\n Premise: < Elon Musk likes Oder-Spree District. Warren Buffett likes Fort Madalena. Agatha Christie likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Santo Spirito in Sassia? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [68, 72], "V'": [37, 41], "Q": [60, 62], "K'": [32, 35], "R": [63, 64], "K": [[5, 19], [12, 25]], "V": [[14, 27], [18, 31]], "example": [1, 76]}, {"END": [158, 159], "A'": [148, 156], "V'": [111, 119], "Q": [138, 142], "K'": [104, 109], "R": [143, 144], "K": [[81, 94], [85, 97]], "V": [[87, 99], [93, 103]], "example": [77, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz likes Aventine Hill. Dr. Gabor Mat\u00e9 likes Saint Gayane Church. Lady Gaga likes Scheibbs District. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Saint Gayane Church? Answer: No\n Premise: < Elon Musk likes Oder-Spree District. Warren Buffett likes Fort Madalena. Agatha Christie likes Santo Spirito in Sassia. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Oder-Spree District? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [68, 72], "V'": [37, 41], "Q": [60, 62], "K'": [32, 35], "R": [63, 64], "K": [[5, 19], [12, 25]], "V": [[14, 27], [18, 31]], "example": [1, 76]}, {"END": [156, 157], "A'": [148, 154], "V'": [111, 119], "Q": [138, 142], "K'": [104, 109], "R": [143, 144], "K": [[81, 94], [85, 97]], "V": [[87, 99], [93, 103]], "example": [77, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard Branson likes Maella. Serena Williams likes Panagarh. Tom Brady likes Universidad Nacional Federico Villarreal. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Maella? Answer: Yes\n Premise: < Richard Branson likes Nishi-Matsuura District. Bill Gates likes Ghora Gali. Natalie Portman likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Capolago? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [10, 12], "Q": [53, 56], "K'": [5, 8], "R": [57, 58], "K": [[13, 22], [16, 25]], "V": [[18, 27], [21, 34]], "example": [1, 68]}, {"END": [140, 141], "A'": [135, 138], "V'": [103, 106], "Q": [125, 129], "K'": [97, 101], "R": [130, 131], "K": [[73, 87], [76, 90]], "V": [[78, 92], [86, 96]], "example": [69, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard Branson likes Maella. Serena Williams likes Panagarh. Tom Brady likes Universidad Nacional Federico Villarreal. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Maella? Answer: Yes\n Premise: < Richard Branson likes Nishi-Matsuura District. Bill Gates likes Ghora Gali. Natalie Portman likes Capolago. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Nishi-Matsuura District? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [10, 12], "Q": [53, 56], "K'": [5, 8], "R": [57, 58], "K": [[13, 22], [16, 25]], "V": [[18, 27], [21, 34]], "example": [1, 68]}, {"END": [145, 146], "A'": [135, 143], "V'": [103, 106], "Q": [125, 129], "K'": [97, 101], "R": [130, 131], "K": [[73, 87], [76, 90]], "V": [[78, 92], [86, 96]], "example": [69, 147]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Askola attracts Lionel Messi. Leiria attracts Usain Bolt. Bispebjerg attracts Jennifer Lawrence. >. The athlete does not want to go to Bispebjerg\n < Mahalangur Himal attracts Tom Brady. Penna Ahobilam attracts Usain Bolt. Hyderabad Deccan railway station attracts Carl Sagan. >. The athlete does not want to go to Hyderabad Deccan railway station\n", "ranges": [{"END": [42, 43], "A'": [43, 48], "V'": [21, 26], "Q": [34, 37], "K'": [28, 31], "R": [38, 39], "K": [[6, 16], [10, 20]], "V": [[2, 11], [4, 14]], "example": [1, 48]}, {"END": [98, 99], "A'": [99, 107], "V'": [74, 82], "Q": [90, 93], "K'": [84, 87], "R": [94, 95], "K": [[58, 69], [61, 73]], "V": [[50, 62], [56, 67]], "example": [49, 107]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Staatliche Antikensammlungen attracts Carl Sagan. Allan Cup attracts Rihanna. Tell Rifaat attracts Taylor Swift. >. The musician does not want to go to Staatliche Antikensammlungen\n < Kowsar County attracts Clarence Darrow. Lewin Brzeski attracts Simone Biles. Christian Medical College Ludhiana attracts Hillary Clinton. >. The lawyer does not want to go to Lewin Brzeski\n", "ranges": [{"END": [44, 45], "A'": [45, 53], "V'": [2, 10], "Q": [36, 39], "K'": [12, 15], "R": [40, 41], "K": [[21, 31], [24, 33]], "V": [[16, 25], [19, 29]], "example": [1, 53]}, {"END": [100, 101], "A'": [101, 106], "V'": [66, 71], "Q": [93, 95], "K'": [73, 77], "R": [96, 97], "K": [[61, 86], [65, 90]], "V": [[55, 78], [59, 84]], "example": [54, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Blackrock Castle attracts Nikola Tesla. Valdemarsvik attracts Cristiano Ronaldo. Palladam attracts Neil deGrasse Tyson. >. The scientist does not want to go to Valdemarsvik\n < Bearpaw Shale attracts Sonia Sotomayor. War in Donbass attracts Ruth Bader Ginsburg. Tirebolu attracts Marie Curie. >. The lawyer does not want to go to Tirebolu\n", "ranges": [{"END": [49, 50], "A'": [50, 54], "V'": [13, 17], "Q": [41, 44], "K'": [19, 24], "R": [45, 46], "K": [[7, 31], [12, 38]], "V": [[2, 25], [5, 29]], "example": [1, 54]}, {"END": [104, 105], "A'": [105, 109], "V'": [85, 89], "Q": [97, 99], "K'": [91, 94], "R": [100, 101], "K": [[63, 78], [70, 84]], "V": [[56, 71], [61, 76]], "example": [55, 109]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Pacentro attracts Carl Sagan. Avord attracts Alex Morgan. Capolago attracts Simone Biles. >. The athlete does not want to go to Pacentro\n < Helmbrechts attracts Jackson Pollock. Cenepa River attracts Salvador Dal\u00ed. Chaville attracts Toni Morrison. >. The artist does not want to go to Chaville\n", "ranges": [{"END": [38, 39], "A'": [39, 42], "V'": [2, 5], "Q": [30, 33], "K'": [7, 10], "R": [34, 35], "K": [[15, 23], [17, 27]], "V": [[11, 18], [13, 21]], "example": [1, 42]}, {"END": [85, 86], "A'": [86, 89], "V'": [65, 68], "Q": [78, 80], "K'": [70, 75], "R": [81, 82], "K": [[50, 61], [53, 64]], "V": [[44, 54], [48, 59]], "example": [43, 89]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Indira Gandhi International Airport attracts Johnny Depp. Larsmo attracts Salvador Dal\u00ed. Ljig attracts Jackson Pollock. >. The artist does not want to go to Indira Gandhi International Airport\n < Ljig attracts Louis Sullivan. Nobel Peace Center attracts Michael Phelps. Eurostat attracts Cristiano Ronaldo. >. The athlete does not want to go to Ljig\n", "ranges": [{"END": [40, 41], "A'": [41, 47], "V'": [2, 8], "Q": [33, 35], "K'": [10, 13], "R": [36, 37], "K": [[18, 27], [21, 30]], "V": [[14, 22], [16, 25]], "example": [1, 47]}, {"END": [89, 90], "A'": [90, 93], "V'": [49, 52], "Q": [81, 84], "K'": [54, 58], "R": [85, 86], "K": [[64, 73], [68, 78]], "V": [[59, 69], [62, 71]], "example": [48, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< La famille Plouffe attracts Claude Monet. Mbale District attracts Leonardo da Vinci. Little Stirrup Cay attracts Rihanna. >. The artist does not want to go to Little Stirrup Cay\n < Llanquihue Province attracts Albert Einstein. Westerburg attracts Frank Lloyd Wright. Kretinga attracts Ieoh Ming Pei. >. The architect does not want to go to Llanquihue Province\n", "ranges": [{"END": [46, 47], "A'": [47, 53], "V'": [25, 31], "Q": [39, 41], "K'": [33, 36], "R": [42, 43], "K": [[9, 19], [12, 24]], "V": [[2, 13], [7, 17]], "example": [1, 53]}, {"END": [98, 99], "A'": [99, 105], "V'": [55, 61], "Q": [91, 93], "K'": [63, 66], "R": [94, 95], "K": [[72, 81], [75, 88]], "V": [[67, 76], [70, 79]], "example": [54, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Castrovirreyna District attracts Dr. Temple Grandin. Buchans attracts Antoni Gaud\u00ed. Nuri attracts Maya Lin. >. The architect does not want to go to Castrovirreyna District\n < 2004 Indian Ocean earthquake attracts Usain Bolt. Alpokalja attracts Zaha Hadid. Boinpalle mandal attracts Serena Williams. >. The athlete does not want to go to Alpokalja\n", "ranges": [{"END": [42, 43], "A'": [43, 48], "V'": [2, 7], "Q": [35, 37], "K'": [9, 14], "R": [38, 39], "K": [[19, 29], [24, 32]], "V": [[15, 25], [17, 27]], "example": [1, 48]}, {"END": [100, 101], "A'": [101, 105], "V'": [67, 71], "Q": [92, 95], "K'": [73, 77], "R": [96, 97], "K": [[62, 86], [66, 89]], "V": [[51, 78], [60, 84]], "example": [49, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Nimmitabel attracts Johnny Depp. Papanasam attracts Meryl Streep. Kalvola attracts Agatha Christie. >. The actor does not want to go to Kalvola\n < Aucanquilcha attracts Sergey Brin. Atromitos Piraeus F.C attracts Jeff Bezos. Minamishitara District, Aichi attracts Kanye West. >. The entrepreneur does not want to go to Minamishitara District, Aichi\n", "ranges": [{"END": [44, 45], "A'": [45, 48], "V'": [24, 27], "Q": [37, 39], "K'": [29, 34], "R": [40, 41], "K": [[8, 17], [11, 23]], "V": [[2, 12], [6, 15]], "example": [1, 48]}, {"END": [105, 106], "A'": [106, 115], "V'": [78, 87], "Q": [96, 100], "K'": [89, 93], "R": [101, 102], "K": [[58, 74], [62, 77]], "V": [[50, 63], [56, 72]], "example": [49, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Askola attracts Lionel Messi. Leiria attracts Usain Bolt. Bispebjerg attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Askola? Answer: No\n Premise: < Kosi Zone attracts Albert Einstein. Boinpalle mandal attracts Rosie Franklin. Tartu Town Hall attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Tartu Town Hall? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [24, 29], "Q": [53, 56], "K'": [31, 34], "R": [57, 58], "K": [[9, 19], [13, 23]], "V": [[5, 14], [7, 17]], "example": [1, 68]}, {"END": [139, 140], "A'": [132, 137], "V'": [94, 99], "Q": [123, 126], "K'": [101, 104], "R": [127, 128], "K": [[78, 90], [81, 93]], "V": [[73, 82], [76, 88]], "example": [69, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Askola attracts Lionel Messi. Leiria attracts Usain Bolt. Bispebjerg attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Askola? Answer: No\n Premise: < Kosi Zone attracts Albert Einstein. Boinpalle mandal attracts Rosie Franklin. Tartu Town Hall attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to Boinpalle mandal? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [24, 29], "Q": [53, 56], "K'": [31, 34], "R": [57, 58], "K": [[9, 19], [13, 23]], "V": [[5, 14], [7, 17]], "example": [1, 68]}, {"END": [140, 141], "A'": [132, 138], "V'": [94, 99], "Q": [123, 126], "K'": [101, 104], "R": [127, 128], "K": [[78, 90], [81, 93]], "V": [[73, 82], [76, 88]], "example": [69, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Simone Biles. Aucanquilcha attracts Serena Williams. Kuomintang attracts J.R.R. Tolkien. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Kanye West. Mannheim City Airport attracts Vincent van Gogh. Santo Stefano d'Aveto attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Bad Camberg? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [72, 78], "V'": [29, 33], "Q": [63, 66], "K'": [35, 44], "R": [67, 68], "K": [[12, 25], [16, 28]], "V": [[5, 17], [10, 23]], "example": [1, 82]}, {"END": [154, 155], "A'": [149, 152], "V'": [87, 90], "Q": [141, 143], "K'": [92, 96], "R": [144, 145], "K": [[103, 119], [108, 122]], "V": [[97, 109], [101, 117]], "example": [83, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tinapa Resort attracts Simone Biles. Aucanquilcha attracts Serena Williams. Kuomintang attracts J.R.R. Tolkien. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Aucanquilcha? Answer: No\n Premise: < Bad Camberg attracts Kanye West. Mannheim City Airport attracts Vincent van Gogh. Santo Stefano d'Aveto attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Mannheim City Airport? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [72, 78], "V'": [29, 33], "Q": [63, 66], "K'": [35, 44], "R": [67, 68], "K": [[12, 25], [16, 28]], "V": [[5, 17], [10, 23]], "example": [1, 82]}, {"END": [155, 156], "A'": [149, 153], "V'": [87, 90], "Q": [141, 143], "K'": [92, 96], "R": [144, 145], "K": [[103, 119], [108, 122]], "V": [[97, 109], [101, 117]], "example": [83, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Cristiano Ronaldo. public transport in Istanbul attracts Tom Brady. Hellenic Police attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Stephen King. Theni district attracts Jeff Bezos. Entracque attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Theni district? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [29, 33], "Q": [61, 64], "K'": [35, 42], "R": [65, 66], "K": [[11, 25], [16, 28]], "V": [[5, 17], [9, 23]], "example": [1, 78]}, {"END": [142, 143], "A'": [137, 140], "V'": [91, 94], "Q": [129, 131], "K'": [96, 99], "R": [132, 133], "K": [[88, 105], [90, 110]], "V": [[83, 100], [86, 103]], "example": [79, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Fischenthal attracts Cristiano Ronaldo. public transport in Istanbul attracts Tom Brady. Hellenic Police attracts Sonia Sotomayor. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Fischenthal? Answer: No\n Premise: < Bernheze attracts Stephen King. Theni district attracts Jeff Bezos. Entracque attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Bernheze? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [29, 33], "Q": [61, 64], "K'": [35, 42], "R": [65, 66], "K": [[11, 25], [16, 28]], "V": [[5, 17], [9, 23]], "example": [1, 78]}, {"END": [142, 143], "A'": [137, 140], "V'": [91, 94], "Q": [129, 131], "K'": [96, 99], "R": [132, 133], "K": [[88, 105], [90, 110]], "V": [[83, 100], [86, 103]], "example": [79, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Illertissen attracts Mark Zuckerberg. Helmbrechts attracts Antoni Gaud\u00ed. Sumulong Highway attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Helmbrechts? Answer: Yes\n Premise: < Sydney Sports Ground attracts Larry Page. Gammalsvenskby attracts Warren Buffett. Guggenheim Museum attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Guggenheim Museum? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [65, 69], "V'": [15, 19], "Q": [55, 59], "K'": [21, 26], "R": [60, 61], "K": [[10, 33], [14, 36]], "V": [[5, 27], [8, 31]], "example": [1, 73]}, {"END": [146, 147], "A'": [139, 144], "V'": [99, 104], "Q": [129, 133], "K'": [106, 110], "R": [134, 135], "K": [[84, 95], [86, 98]], "V": [[78, 87], [82, 93]], "example": [74, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Illertissen attracts Mark Zuckerberg. Helmbrechts attracts Antoni Gaud\u00ed. Sumulong Highway attracts Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Helmbrechts? Answer: Yes\n Premise: < Sydney Sports Ground attracts Larry Page. Gammalsvenskby attracts Warren Buffett. Guggenheim Museum attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Gammalsvenskby? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [65, 69], "V'": [15, 19], "Q": [55, 59], "K'": [21, 26], "R": [60, 61], "K": [[10, 33], [14, 36]], "V": [[5, 27], [8, 31]], "example": [1, 73]}, {"END": [147, 148], "A'": [139, 145], "V'": [99, 104], "Q": [129, 133], "K'": [106, 110], "R": [134, 135], "K": [[84, 95], [86, 98]], "V": [[78, 87], [82, 93]], "example": [74, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Dr. Michio Kaku. Manila Light Rail Transit System attracts Le Corbusier. 1960 Summer Olympics attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Julia Roberts. Bose Institute attracts Kanye West. Lindholm station attracts Denzel Washington. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Bose Institute? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [76, 82], "V'": [5, 10], "Q": [67, 69], "K'": [12, 18], "R": [70, 71], "K": [[28, 42], [32, 48]], "V": [[19, 34], [26, 40]], "example": [1, 86]}, {"END": [148, 149], "A'": [143, 146], "V'": [98, 101], "Q": [135, 137], "K'": [103, 107], "R": [138, 139], "K": [[95, 113], [97, 116]], "V": [[91, 108], [93, 111]], "example": [87, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bilecik Province attracts Dr. Michio Kaku. Manila Light Rail Transit System attracts Le Corbusier. 1960 Summer Olympics attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to 1960 Summer Olympics? Answer: No\n Premise: < Breege attracts Julia Roberts. Bose Institute attracts Kanye West. Lindholm station attracts Denzel Washington. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to Breege? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [76, 82], "V'": [5, 10], "Q": [67, 69], "K'": [12, 18], "R": [70, 71], "K": [[28, 42], [32, 48]], "V": [[19, 34], [26, 40]], "example": [1, 86]}, {"END": [147, 148], "A'": [143, 145], "V'": [98, 101], "Q": [135, 137], "K'": [103, 107], "R": [138, 139], "K": [[95, 113], [97, 116]], "V": [[91, 108], [93, 111]], "example": [87, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Frida Kahlo. Orpheus Island National Park attracts Michelangelo. Borghetto di Vara attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Mark Twain. Bzura attracts J.R.R. Tolkien. L'Escala attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to L'Escala? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [27, 33], "Q": [59, 61], "K'": [35, 40], "R": [62, 63], "K": [[9, 23], [14, 26]], "V": [[5, 15], [7, 21]], "example": [1, 77]}, {"END": [150, 151], "A'": [144, 148], "V'": [108, 112], "Q": [136, 138], "K'": [114, 117], "R": [139, 140], "K": [[89, 98], [92, 107]], "V": [[82, 93], [87, 96]], "example": [78, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Nintendo attracts Frida Kahlo. Orpheus Island National Park attracts Michelangelo. Borghetto di Vara attracts Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not want to go to Borghetto di Vara? Answer: Yes\n Premise: < Casiquiare canal attracts Mark Twain. Bzura attracts J.R.R. Tolkien. L'Escala attracts Tom Hanks. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to Bzura? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [67, 73], "V'": [27, 33], "Q": [59, 61], "K'": [35, 40], "R": [62, 63], "K": [[9, 23], [14, 26]], "V": [[5, 15], [7, 21]], "example": [1, 77]}, {"END": [149, 150], "A'": [144, 147], "V'": [108, 112], "Q": [136, 138], "K'": [114, 117], "R": [139, 140], "K": [[89, 98], [92, 107]], "V": [[82, 93], [87, 96]], "example": [78, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Dr. Mehmet Oz. Saint Gayane Church attracts Dr. Gabor Mat\u00e9. Scheibbs District attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Saint Gayane Church? Answer: No\n Premise: < Oder-Spree District attracts Elon Musk. Fort Madalena attracts Warren Buffett. Santo Spirito in Sassia attracts Agatha Christie. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Santo Spirito in Sassia? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [68, 72], "V'": [32, 36], "Q": [60, 62], "K'": [38, 41], "R": [63, 64], "K": [[11, 25], [18, 31]], "V": [[5, 19], [9, 23]], "example": [1, 76]}, {"END": [158, 159], "A'": [148, 156], "V'": [104, 112], "Q": [138, 142], "K'": [114, 119], "R": [143, 144], "K": [[89, 100], [93, 103]], "V": [[81, 94], [87, 98]], "example": [77, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Aventine Hill attracts Dr. Mehmet Oz. Saint Gayane Church attracts Dr. Gabor Mat\u00e9. Scheibbs District attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to Saint Gayane Church? Answer: No\n Premise: < Oder-Spree District attracts Elon Musk. Fort Madalena attracts Warren Buffett. Santo Spirito in Sassia attracts Agatha Christie. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Oder-Spree District? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [68, 72], "V'": [32, 36], "Q": [60, 62], "K'": [38, 41], "R": [63, 64], "K": [[11, 25], [18, 31]], "V": [[5, 19], [9, 23]], "example": [1, 76]}, {"END": [156, 157], "A'": [148, 154], "V'": [104, 112], "Q": [138, 142], "K'": [114, 119], "R": [143, 144], "K": [[89, 100], [93, 103]], "V": [[81, 94], [87, 98]], "example": [77, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Maella attracts Richard Branson. Panagarh attracts Serena Williams. Universidad Nacional Federico Villarreal attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Maella? Answer: Yes\n Premise: < Nishi-Matsuura District attracts Richard Branson. Ghora Gali attracts Bill Gates. Capolago attracts Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Capolago? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [5, 7], "Q": [53, 56], "K'": [9, 12], "R": [57, 58], "K": [[18, 31], [21, 34]], "V": [[13, 22], [16, 29]], "example": [1, 68]}, {"END": [140, 141], "A'": [135, 138], "V'": [97, 100], "Q": [125, 129], "K'": [102, 106], "R": [130, 131], "K": [[83, 93], [86, 96]], "V": [[73, 87], [81, 91]], "example": [69, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Maella attracts Richard Branson. Panagarh attracts Serena Williams. Universidad Nacional Federico Villarreal attracts Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to Maella? Answer: Yes\n Premise: < Nishi-Matsuura District attracts Richard Branson. Ghora Gali attracts Bill Gates. Capolago attracts Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not want to go to Nishi-Matsuura District? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [5, 7], "Q": [53, 56], "K'": [9, 12], "R": [57, 58], "K": [[18, 31], [21, 34]], "V": [[13, 22], [16, 29]], "example": [1, 68]}, {"END": [145, 146], "A'": [135, 143], "V'": [97, 100], "Q": [125, 129], "K'": [102, 106], "R": [130, 131], "K": [[83, 93], [86, 96]], "V": [[73, 87], [81, 91]], "example": [69, 147]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Instituto Pedro Nunes. Stephen Hawking likes Bilecik Province. >. So who wants to go to Bilecik Province? the scientist\n < Harper Lee likes Selbu. Justin Bieber likes Autonomous District Lok Sabha constituency. Clarence Darrow likes Foundation for a Free Information Infrastructure. >. So who wants to go to Foundation for a Free Information Infrastructure? the lawyer\n", "ranges": [{"END": [78, 79], "A": [79, 81], "V": [53, 56], "Q": [72, 77], "K": [58, 63], "R": null, "K'": [[36, 48], [42, 52]], "V'": [[30, 43], [34, 46]], "example": [29, 81]}, {"END": [139, 140], "A": [140, 141], "V": [107, 111], "Q": [130, 138], "K": [113, 121], "R": null, "K'": [[88, 97], [90, 106]], "V'": [[83, 91], [86, 95]], "example": [82, 141]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Dr. Gabor Mat\u00e9 likes Staatliche Antikensammlungen. Simone Biles likes Allan Cup. Mies van der Rohe likes Tell Rifaat. >. So who wants to go to Staatliche Antikensammlungen? the doctor\n < Zaha Hadid likes Kowsar County. Cristiano Ronaldo likes DESTATIS. Eminem likes Kibungo Province. >. So who wants to go to Kowsar County? the architect\n", "ranges": [{"END": [80, 81], "A": [81, 82], "V": [23, 29], "Q": [71, 79], "K": [31, 39], "R": null, "K'": [[46, 58], [49, 62]], "V'": [[40, 50], [44, 56]], "example": [22, 82]}, {"END": [130, 131], "A": [131, 132], "V": [84, 88], "Q": [125, 129], "K": [90, 94], "R": null, "K'": [[102, 111], [105, 116]], "V'": [[95, 106], [100, 109]], "example": [83, 132]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Neil deGrasse Tyson likes Wakefield Park. Vincent van Gogh likes Aucanquilcha. Dr. Neil deGrasse Tyson likes Bobolice. >. So who wants to go to Bobolice? the doctor\n < Claude Monet likes Komarichsky District. Lady Gaga likes Passeier Valley. Johnnie Cochran likes Niederweningen. >. So who wants to go to Komarichsky District? the artist\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [54, 63], "Q": [77, 80], "K": [65, 68], "R": null, "K'": [[35, 47], [39, 53]], "V'": [[26, 56, 40], [33, 63, 45]], "example": [25, 83]}, {"END": [131, 132], "A": [132, 133], "V": [85, 88], "Q": [125, 130], "K": [90, 95], "R": null, "K'": [[101, 113], [105, 116]], "V'": [[96, 106], [99, 111]], "example": [84, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Kanye West likes Holycross-Ballycahill GAA. LeBron James likes Lajran Rural District. Eminem likes Kondotty. >. So who wants to go to Lajran Rural District? the athlete\n < Tom Brady likes Roman Catholic Archdiocese of Lucca. Leonardo da Vinci likes ERT World. Rem Koolhaas likes Dawa River. >. So who wants to go to Roman Catholic Archdiocese of Lucca? the athlete\n", "ranges": [{"END": [79, 80], "A": [80, 82], "V": [41, 45], "Q": [72, 78], "K": [47, 53], "R": null, "K'": [[29, 59], [40, 63]], "V'": [[23, 54], [27, 57]], "example": [22, 82]}, {"END": [139, 140], "A": [140, 142], "V": [84, 87], "Q": [129, 138], "K": [89, 98], "R": null, "K'": [[106, 117], [109, 120]], "V'": [[99, 110], [104, 115]], "example": [83, 142]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the doctor.\n< Dr. Temple Grandin likes Broken Pencil. Agatha Christie likes Dent Island Light. Dr. Sylvia Earle likes 2009 Speedway Ekstraliga. >. So who wants to go to Dent Island Light? the author\n < Dr. Mehmet Oz likes United Mine Workers. LeBron James likes Saint Gayane Church. Richard Dawkins likes Central Black Forest. >. So who wants to go to Central Black Forest? the scientist\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [36, 41], "Q": [76, 80], "K": [43, 47], "R": null, "K'": [[30, 57], [35, 67]], "V'": [[23, 48], [28, 54]], "example": [22, 83]}, {"END": [131, 132], "A": [132, 134], "V": [110, 113], "Q": [127, 130], "K": [115, 118], "R": null, "K'": [[94, 105], [98, 109]], "V'": [[85, 99], [92, 103]], "example": [84, 134]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the athlete, the doctor and the author.\n< Simone Biles likes Buchans. Harper Lee likes West Darfur. Dr. Gabor Mat\u00e9 likes Nimmitabel. >. So who wants to go to Nimmitabel? the doctor\n < Tom Brady likes 2004 Indian Ocean earthquake. Jennifer Lawrence likes Khasavyurt. Lionel Messi likes Penna Ahobilam. >. So who wants to go to Khasavyurt? the actor\n", "ranges": [{"END": [66, 67], "A": [67, 68], "V": [40, 46], "Q": [61, 65], "K": [48, 52], "R": null, "K'": [[28, 36], [30, 39]], "V'": [[22, 31], [26, 34]], "example": [21, 68]}, {"END": [121, 122], "A": [122, 123], "V": [86, 89], "Q": [116, 120], "K": [91, 95], "R": null, "K'": [[76, 102], [85, 107]], "V'": [[70, 96], [73, 100]], "example": [69, 123]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the author, the doctor, the entrepreneur, the scientist and the musician.\n< Ernest Hemingway likes Saint Gayane Church. Michael Phelps likes Garbeta. Oprah Winfrey likes Mugello Circuit. >. So who wants to go to Garbeta? the athlete\n < Dr. Gabor Mat\u00e9 likes Santo Spirito in Sassia. Jane Goodall likes Kluuvi. Kanye West likes KiKa. >. So who wants to go to Kluuvi? the scientist\n", "ranges": [{"END": [76, 77], "A": [77, 79], "V": [43, 47], "Q": [73, 75], "K": [49, 51], "R": null, "K'": [[38, 59], [42, 64]], "V'": [[32, 52], [36, 57]], "example": [31, 79]}, {"END": [131, 132], "A": [132, 134], "V": [98, 101], "Q": [126, 130], "K": [103, 107], "R": null, "K'": [[89, 114], [97, 117]], "V'": [[81, 108], [87, 112]], "example": [80, 134]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the entrepreneur, the doctor and the artist.\n< Lady Gaga likes Universidad Nacional Federico Villarreal. Dr. Sanjay Gupta likes Foundation for a Free Information Infrastructure. Warren Buffett likes Rottumerplaat. >. So who wants to go to Rottumerplaat? the entrepreneur\n < Dr. Mehmet Oz likes Scheibbs District. Larry Page likes Ateneo de Madrid. Georgia O'Keeffe likes Augusta Raurica. >. So who wants to go to Ateneo de Madrid? the entrepreneur\n", "ranges": [{"END": [80, 81], "A": [81, 84], "V": [55, 58], "Q": [74, 79], "K": [60, 65], "R": null, "K'": [[29, 46], [36, 54]], "V'": [[24, 37], [27, 44]], "example": [23, 84]}, {"END": [140, 141], "A": [141, 144], "V": [100, 102], "Q": [133, 139], "K": [104, 110], "R": null, "K'": [[95, 119], [99, 124]], "V'": [[86, 111], [93, 117]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Instituto Pedro Nunes. Stephen Hawking likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is the athlete? Answer: No\n Premise: < Harper Lee likes Al-Hasakah Governorate. Justin Bieber likes Selbu. Clarence Darrow likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Koriya district is the lawyer? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [57, 60], "Q": [93, 98], "K": [62, 67], "R": null, "K'": [[40, 52], [46, 56]], "V'": [[34, 47], [38, 50]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [133, 137], "Q": [169, 173], "K": [139, 143], "R": null, "K'": [[116, 130], [123, 132]], "V'": [[111, 124], [114, 128]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Instituto Pedro Nunes. Stephen Hawking likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is the athlete? Answer: No\n Premise: < Harper Lee likes Al-Hasakah Governorate. Justin Bieber likes Selbu. Clarence Darrow likes Koriya district. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Koriya district is the musician? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [57, 60], "Q": [93, 98], "K": [62, 67], "R": null, "K'": [[40, 52], [46, 56]], "V'": [[34, 47], [38, 50]], "example": [29, 106]}, {"END": [179, 180], "A": [174, 177], "V": [133, 137], "Q": [169, 173], "K": [139, 143], "R": null, "K'": [[116, 130], [123, 132]], "V'": [[111, 124], [114, 128]], "example": [107, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Georgia O'Keeffe likes Fryderyk Chopin University of Music. Richard Dawkins likes Warsaw Uprising Museum. LeBron James likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Annweiler am Trifels is the scientist? Answer: No\n Premise: < Claude Monet likes Taksim Military Barracks. George Orwell likes Olten railway station. Neil deGrasse Tyson likes Louth County Council. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Olten railway station is the author? Answer: Yes\n", "ranges": [{"END": [110, 111], "A": [105, 108], "V": [58, 62], "Q": [97, 104], "K": [64, 71], "R": null, "K'": [[35, 51], [45, 57]], "V'": [[27, 46], [33, 49]], "example": [22, 112]}, {"END": [187, 188], "A": [183, 185], "V": [129, 132], "Q": [178, 182], "K": [134, 138], "R": null, "K'": [[122, 148], [128, 152]], "V'": [[117, 139], [120, 146]], "example": [113, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Georgia O'Keeffe likes Fryderyk Chopin University of Music. Richard Dawkins likes Warsaw Uprising Museum. LeBron James likes Annweiler am Trifels. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Annweiler am Trifels is the scientist? Answer: No\n Premise: < Claude Monet likes Taksim Military Barracks. George Orwell likes Olten railway station. Neil deGrasse Tyson likes Louth County Council. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Olten railway station is the artist? Answer: No\n", "ranges": [{"END": [110, 111], "A": [105, 108], "V": [58, 62], "Q": [97, 104], "K": [64, 71], "R": null, "K'": [[35, 51], [45, 57]], "V'": [[27, 46], [33, 49]], "example": [22, 112]}, {"END": [187, 188], "A": [183, 185], "V": [129, 132], "Q": [178, 182], "K": [134, 138], "R": null, "K'": [[122, 148], [128, 152]], "V'": [[117, 139], [120, 146]], "example": [113, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Dr. Mehmet Oz likes Bhinmal. Jane Goodall likes Shoranur. Roger Federer likes Beneden Merwede. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bhinmal is the athlete? Answer: No\n Premise: < Eminem likes Chaville. Meryl Streep likes Holycross-Ballycahill GAA. Pablo Picasso likes New England. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Holycross-Ballycahill GAA is the actor? Answer: Yes\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [34, 41], "Q": [93, 96], "K": [43, 46], "R": null, "K'": [[52, 62], [56, 67]], "V'": [[47, 57], [50, 60]], "example": [29, 104]}, {"END": [187, 188], "A": [183, 185], "V": [118, 124], "Q": [171, 182], "K": [126, 137], "R": null, "K'": [[114, 143], [117, 145]], "V'": [[109, 138], [112, 141]], "example": [105, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Dr. Mehmet Oz likes Bhinmal. Jane Goodall likes Shoranur. Roger Federer likes Beneden Merwede. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bhinmal is the athlete? Answer: No\n Premise: < Eminem likes Chaville. Meryl Streep likes Holycross-Ballycahill GAA. Pablo Picasso likes New England. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Holycross-Ballycahill GAA is the artist? Answer: No\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [34, 41], "Q": [93, 96], "K": [43, 46], "R": null, "K'": [[52, 62], [56, 67]], "V'": [[47, 57], [50, 60]], "example": [29, 104]}, {"END": [187, 188], "A": [183, 185], "V": [118, 124], "Q": [171, 182], "K": [126, 137], "R": null, "K'": [[114, 143], [117, 145]], "V'": [[109, 138], [112, 141]], "example": [105, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the actor, the musician and the lawyer.\nPremise: < Sonia Sotomayor likes Nobel Peace Center. Rihanna likes Eurostat. Mies van der Rohe likes Ljig. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ljig is the musician? Answer: No\n Premise: < Ruth Bader Ginsburg likes Central Black Forest. Beyonc\u00e9 likes Croom, County Limerick. Jennifer Lawrence likes bpost. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to bpost is the actor? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [47, 53], "Q": [84, 87], "K": [55, 58], "R": null, "K'": [[35, 44], [38, 46]], "V'": [[26, 39], [33, 42]], "example": [21, 95]}, {"END": [165, 166], "A": [161, 163], "V": [125, 128], "Q": [158, 160], "K": [130, 132], "R": null, "K'": [[108, 117], [111, 124]], "V'": [[100, 112], [106, 115]], "example": [96, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the architect, the actor and the lawyer.\nPremise: < Sonia Sotomayor likes Nobel Peace Center. Rihanna likes Eurostat. Mies van der Rohe likes Ljig. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ljig is the musician? Answer: No\n Premise: < Ruth Bader Ginsburg likes Central Black Forest. Beyonc\u00e9 likes Croom, County Limerick. Jennifer Lawrence likes bpost. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to bpost is the lawyer? Answer: No\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [47, 53], "Q": [84, 87], "K": [55, 58], "R": null, "K'": [[35, 44], [38, 46]], "V'": [[26, 39], [33, 42]], "example": [21, 95]}, {"END": [165, 166], "A": [161, 163], "V": [125, 128], "Q": [158, 160], "K": [130, 132], "R": null, "K'": [[108, 117], [111, 124]], "V'": [[100, 112], [106, 115]], "example": [96, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < Johnny Depp likes prefectural road. Jane Goodall likes Helsinki City Hall. George Orwell likes South East Forests National Park. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Helsinki City Hall is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright likes Berar Province. Tom Brady likes Munich Residence. Norman Foster likes Hohenwestedt. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is the athlete? Answer: Yes\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [40, 43], "Q": [88, 93], "K": [45, 50], "R": null, "K'": [[35, 56], [39, 62]], "V'": [[30, 51], [33, 54]], "example": [25, 101]}, {"END": [171, 172], "A": [166, 169], "V": [115, 118], "Q": [161, 165], "K": [120, 124], "R": null, "K'": [[111, 130], [114, 135]], "V'": [[106, 125], [109, 128]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < Johnny Depp likes prefectural road. Jane Goodall likes Helsinki City Hall. George Orwell likes South East Forests National Park. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Helsinki City Hall is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright likes Berar Province. Tom Brady likes Munich Residence. Norman Foster likes Hohenwestedt. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is the architect? Answer: No\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [40, 43], "Q": [88, 93], "K": [45, 50], "R": null, "K'": [[35, 56], [39, 62]], "V'": [[30, 51], [33, 54]], "example": [25, 101]}, {"END": [170, 171], "A": [166, 168], "V": [115, 118], "Q": [161, 165], "K": [120, 124], "R": null, "K'": [[111, 130], [114, 135]], "V'": [[106, 125], [109, 128]], "example": [102, 172]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the scientist, the athlete and the entrepreneur.\nPremise: < Rosie Franklin likes Santo Spirito in Sassia. Roger Federer likes Oder-Spree District. Warren Buffett likes Fort Madalena. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Santo Spirito in Sassia is the athlete? Answer: No\n Premise: < Barack Obama likes Umarex. Albert Einstein likes National Congress of Brasil. Serena Williams likes Haut Atlas. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Umarex is the lawyer? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [29, 32], "Q": [90, 98], "K": [34, 42], "R": null, "K'": [[48, 60], [54, 64]], "V'": [[43, 55], [46, 58]], "example": [24, 106]}, {"END": [172, 173], "A": [168, 170], "V": [111, 115], "Q": [164, 167], "K": [117, 120], "R": null, "K'": [[126, 136], [130, 138]], "V'": [[121, 131], [124, 134]], "example": [107, 174]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the athlete and the scientist.\nPremise: < Rosie Franklin likes Santo Spirito in Sassia. Roger Federer likes Oder-Spree District. Warren Buffett likes Fort Madalena. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Santo Spirito in Sassia is the athlete? Answer: No\n Premise: < Barack Obama likes Umarex. Albert Einstein likes National Congress of Brasil. Serena Williams likes Haut Atlas. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Umarex is the scientist? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [29, 32], "Q": [90, 98], "K": [34, 42], "R": null, "K'": [[48, 60], [54, 64]], "V'": [[43, 55], [46, 58]], "example": [24, 106]}, {"END": [173, 174], "A": [168, 171], "V": [111, 115], "Q": [164, 167], "K": [117, 120], "R": null, "K'": [[126, 136], [130, 138]], "V'": [[121, 131], [124, 134]], "example": [107, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the actor and the artist.\nPremise: < Thurgood Marshall likes Koriya district. Leonardo DiCaprio likes Vijayawada Junction railway station. Dr. Sanjay Gupta likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vijayawada Junction railway station is the actor? Answer: Yes\n Premise: < Frida Kahlo likes Westerburg. Dr. Neil deGrasse Tyson likes Pazhayangadi. Dr. Michio Kaku likes Askola. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is the artist? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [100, 102], "V": [36, 41], "Q": [90, 99], "K": [43, 52], "R": null, "K'": [[31, 62], [35, 64]], "V'": [[25, 53], [29, 60]], "example": [20, 106]}, {"END": [183, 184], "A": [179, 181], "V": [111, 116], "Q": [175, 178], "K": [118, 121], "R": null, "K'": [[133, 147], [138, 149]], "V'": [[122, 139], [131, 145]], "example": [107, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the actor, the artist and the lawyer.\nPremise: < Thurgood Marshall likes Koriya district. Leonardo DiCaprio likes Vijayawada Junction railway station. Dr. Sanjay Gupta likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vijayawada Junction railway station is the actor? Answer: Yes\n Premise: < Frida Kahlo likes Westerburg. Dr. Neil deGrasse Tyson likes Pazhayangadi. Dr. Michio Kaku likes Askola. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A": [100, 102], "V": [36, 41], "Q": [90, 99], "K": [43, 52], "R": null, "K'": [[31, 62], [35, 64]], "V'": [[25, 53], [29, 60]], "example": [20, 106]}, {"END": [183, 184], "A": [179, 181], "V": [111, 116], "Q": [175, 178], "K": [118, 121], "R": null, "K'": [[133, 147], [138, 149]], "V'": [[122, 139], [131, 145]], "example": [107, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the lawyer, the entrepreneur, the athlete and the artist.\nPremise: < Oprah Winfrey likes Ogrodzieniec. Jane Goodall likes Banesh Rural District. Johnnie Cochran likes University of Zaragoza. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to University of Zaragoza is the scientist? Answer: No\n Premise: < Georgia O'Keeffe likes Nintendo. Usain Bolt likes Al Daayen. Thurgood Marshall likes Bannu. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bannu is the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A": [100, 103], "V": [56, 61], "Q": [94, 99], "K": [63, 68], "R": null, "K'": [[39, 50], [44, 55]], "V'": [[32, 45], [37, 48]], "example": [27, 107]}, {"END": [177, 178], "A": [173, 175], "V": [134, 138], "Q": [169, 172], "K": [140, 143], "R": null, "K'": [[120, 129], [122, 133]], "V'": [[112, 123], [118, 127]], "example": [108, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the artist, the scientist, the athlete and the lawyer.\nPremise: < Oprah Winfrey likes Ogrodzieniec. Jane Goodall likes Banesh Rural District. Johnnie Cochran likes University of Zaragoza. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to University of Zaragoza is the scientist? Answer: No\n Premise: < Georgia O'Keeffe likes Nintendo. Usain Bolt likes Al Daayen. Thurgood Marshall likes Bannu. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bannu is the artist? Answer: No\n", "ranges": [{"END": [105, 106], "A": [100, 103], "V": [56, 61], "Q": [94, 99], "K": [63, 68], "R": null, "K'": [[39, 50], [44, 55]], "V'": [[32, 45], [37, 48]], "example": [27, 107]}, {"END": [177, 178], "A": [173, 175], "V": [134, 138], "Q": [169, 172], "K": [140, 143], "R": null, "K'": [[120, 129], [122, 133]], "V'": [[112, 123], [118, 127]], "example": [108, 179]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Ust-Katav attracts Usain Bolt. Instituto Pedro Nunes attracts Salvador Dal\u00ed. Bilecik Province attracts Stephen Hawking. >. So who wants to go to Bilecik Province? the scientist\n < Selbu attracts Harper Lee. Autonomous District Lok Sabha constituency attracts Justin Bieber. Foundation for a Free Information Infrastructure attracts Clarence Darrow. >. So who wants to go to Foundation for a Free Information Infrastructure? the lawyer\n", "ranges": [{"END": [78, 79], "A": [79, 81], "V": [60, 63], "Q": [72, 77], "K": [53, 58], "R": null, "K'": [[30, 43], [36, 47]], "V'": [[38, 49], [42, 52]], "example": [29, 81]}, {"END": [139, 140], "A": [140, 141], "V": [117, 121], "Q": [130, 138], "K": [107, 115], "R": null, "K'": [[83, 91], [85, 100]], "V'": [[87, 102], [90, 106]], "example": [82, 141]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Staatliche Antikensammlungen attracts Dr. Gabor Mat\u00e9. Allan Cup attracts Simone Biles. Tell Rifaat attracts Mies van der Rohe. >. So who wants to go to Staatliche Antikensammlungen? the doctor\n < Kowsar County attracts Zaha Hadid. DESTATIS attracts Cristiano Ronaldo. Kibungo Province attracts Eminem. >. So who wants to go to Kowsar County? the architect\n", "ranges": [{"END": [80, 81], "A": [81, 82], "V": [33, 39], "Q": [71, 79], "K": [23, 31], "R": null, "K'": [[40, 50], [43, 54]], "V'": [[45, 56], [49, 62]], "example": [22, 82]}, {"END": [130, 131], "A": [131, 132], "V": [90, 94], "Q": [125, 129], "K": [84, 88], "R": null, "K'": [[95, 106], [98, 111]], "V'": [[100, 113], [105, 116]], "example": [83, 132]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Wakefield Park attracts Neil deGrasse Tyson. Aucanquilcha attracts Vincent van Gogh. Bobolice attracts Dr. Neil deGrasse Tyson. >. So who wants to go to Bobolice? the doctor\n < Komarichsky District attracts Claude Monet. Passeier Valley attracts Lady Gaga. Niederweningen attracts Johnnie Cochran. >. So who wants to go to Komarichsky District? the artist\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [59, 68], "Q": [77, 80], "K": [54, 57], "R": null, "K'": [[26, 40], [30, 46]], "V'": [[32, 61, 48], [39, 68, 53]], "example": [25, 83]}, {"END": [131, 132], "A": [132, 133], "V": [92, 95], "Q": [125, 130], "K": [85, 90], "R": null, "K'": [[96, 106], [100, 109]], "V'": [[102, 111], [105, 116]], "example": [84, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Holycross-Ballycahill GAA attracts Kanye West. Lajran Rural District attracts LeBron James. Kondotty attracts Eminem. >. So who wants to go to Lajran Rural District? the athlete\n < Roman Catholic Archdiocese of Lucca attracts Tom Brady. ERT World attracts Leonardo da Vinci. Dawa River attracts Rem Koolhaas. >. So who wants to go to Roman Catholic Archdiocese of Lucca? the athlete\n", "ranges": [{"END": [79, 80], "A": [80, 82], "V": [49, 53], "Q": [72, 78], "K": [41, 47], "R": null, "K'": [[23, 54], [34, 58]], "V'": [[36, 60], [40, 63]], "example": [22, 82]}, {"END": [139, 140], "A": [140, 142], "V": [95, 98], "Q": [129, 138], "K": [84, 93], "R": null, "K'": [[99, 110], [102, 113]], "V'": [[104, 115], [109, 120]], "example": [83, 142]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the doctor.\n< Broken Pencil attracts Dr. Temple Grandin. Dent Island Light attracts Agatha Christie. 2009 Speedway Ekstraliga attracts Dr. Sylvia Earle. >. So who wants to go to Dent Island Light? the author\n < United Mine Workers attracts Dr. Mehmet Oz. Saint Gayane Church attracts LeBron James. Central Black Forest attracts Richard Dawkins. >. So who wants to go to Central Black Forest? the scientist\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [42, 47], "Q": [76, 80], "K": [36, 40], "R": null, "K'": [[23, 49], [28, 59]], "V'": [[30, 61], [35, 67]], "example": [22, 83]}, {"END": [131, 132], "A": [132, 134], "V": [115, 118], "Q": [127, 130], "K": [110, 113], "R": null, "K'": [[85, 99], [89, 103]], "V'": [[91, 105], [98, 109]], "example": [84, 134]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the athlete, the doctor and the author.\n< Buchans attracts Simone Biles. West Darfur attracts Harper Lee. Nimmitabel attracts Dr. Gabor Mat\u00e9. >. So who wants to go to Nimmitabel? the doctor\n < 2004 Indian Ocean earthquake attracts Tom Brady. Khasavyurt attracts Jennifer Lawrence. Penna Ahobilam attracts Lionel Messi. >. So who wants to go to Khasavyurt? the actor\n", "ranges": [{"END": [66, 67], "A": [67, 68], "V": [46, 52], "Q": [61, 65], "K": [40, 44], "R": null, "K'": [[22, 31], [24, 34]], "V'": [[26, 36], [30, 39]], "example": [21, 68]}, {"END": [121, 122], "A": [122, 123], "V": [92, 95], "Q": [116, 120], "K": [86, 90], "R": null, "K'": [[71, 96], [80, 101]], "V'": [[82, 103], [85, 107]], "example": [69, 123]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the author, the doctor, the entrepreneur, the scientist and the musician.\n< Saint Gayane Church attracts Ernest Hemingway. Garbeta attracts Michael Phelps. Mugello Circuit attracts Oprah Winfrey. >. So who wants to go to Garbeta? the athlete\n < Santo Spirito in Sassia attracts Dr. Gabor Mat\u00e9. Kluuvi attracts Jane Goodall. KiKa attracts Kanye West. >. So who wants to go to Kluuvi? the scientist\n", "ranges": [{"END": [76, 77], "A": [77, 79], "V": [47, 51], "Q": [73, 75], "K": [43, 45], "R": null, "K'": [[32, 52], [36, 57]], "V'": [[38, 59], [42, 64]], "example": [31, 79]}, {"END": [131, 132], "A": [132, 134], "V": [104, 107], "Q": [126, 130], "K": [98, 102], "R": null, "K'": [[81, 108], [89, 111]], "V'": [[91, 113], [97, 117]], "example": [80, 134]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the entrepreneur, the doctor and the artist.\n< Universidad Nacional Federico Villarreal attracts Lady Gaga. Foundation for a Free Information Infrastructure attracts Dr. Sanjay Gupta. Rottumerplaat attracts Warren Buffett. >. So who wants to go to Rottumerplaat? the entrepreneur\n < Scheibbs District attracts Dr. Mehmet Oz. Ateneo de Madrid attracts Larry Page. Augusta Raurica attracts Georgia O'Keeffe. >. So who wants to go to Ateneo de Madrid? the entrepreneur\n", "ranges": [{"END": [80, 81], "A": [81, 84], "V": [62, 65], "Q": [74, 79], "K": [55, 60], "R": null, "K'": [[24, 37], [31, 45]], "V'": [[33, 47], [36, 54]], "example": [23, 84]}, {"END": [140, 141], "A": [141, 144], "V": [108, 110], "Q": [133, 139], "K": [100, 106], "R": null, "K'": [[86, 111], [90, 116]], "V'": [[92, 118], [99, 124]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Ust-Katav attracts Usain Bolt. Instituto Pedro Nunes attracts Salvador Dal\u00ed. Bilecik Province attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is the athlete? Answer: No\n Premise: < Al-Hasakah Governorate attracts Harper Lee. Selbu attracts Justin Bieber. Koriya district attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Koriya district is the lawyer? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [64, 67], "Q": [93, 98], "K": [57, 62], "R": null, "K'": [[34, 47], [40, 51]], "V'": [[42, 53], [46, 56]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [139, 143], "Q": [169, 173], "K": [133, 137], "R": null, "K'": [[111, 124], [118, 126]], "V'": [[120, 128], [123, 132]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Ust-Katav attracts Usain Bolt. Instituto Pedro Nunes attracts Salvador Dal\u00ed. Bilecik Province attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is the athlete? Answer: No\n Premise: < Al-Hasakah Governorate attracts Harper Lee. Selbu attracts Justin Bieber. Koriya district attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Koriya district is the musician? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [64, 67], "Q": [93, 98], "K": [57, 62], "R": null, "K'": [[34, 47], [40, 51]], "V'": [[42, 53], [46, 56]], "example": [29, 106]}, {"END": [179, 180], "A": [174, 177], "V": [139, 143], "Q": [169, 173], "K": [133, 137], "R": null, "K'": [[111, 124], [118, 126]], "V'": [[120, 128], [123, 132]], "example": [107, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Fryderyk Chopin University of Music attracts Georgia O'Keeffe. Warsaw Uprising Museum attracts Richard Dawkins. Annweiler am Trifels attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Annweiler am Trifels is the scientist? Answer: No\n Premise: < Taksim Military Barracks attracts Claude Monet. Olten railway station attracts George Orwell. Louth County Council attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Olten railway station is the author? Answer: Yes\n", "ranges": [{"END": [110, 111], "A": [105, 108], "V": [67, 71], "Q": [97, 104], "K": [58, 65], "R": null, "K'": [[27, 46], [37, 52]], "V'": [[39, 54], [45, 57]], "example": [22, 112]}, {"END": [187, 188], "A": [183, 185], "V": [135, 138], "Q": [178, 182], "K": [129, 133], "R": null, "K'": [[117, 139], [123, 143]], "V'": [[125, 145], [128, 152]], "example": [113, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Fryderyk Chopin University of Music attracts Georgia O'Keeffe. Warsaw Uprising Museum attracts Richard Dawkins. Annweiler am Trifels attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Annweiler am Trifels is the scientist? Answer: No\n Premise: < Taksim Military Barracks attracts Claude Monet. Olten railway station attracts George Orwell. Louth County Council attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Olten railway station is the artist? Answer: No\n", "ranges": [{"END": [110, 111], "A": [105, 108], "V": [67, 71], "Q": [97, 104], "K": [58, 65], "R": null, "K'": [[27, 46], [37, 52]], "V'": [[39, 54], [45, 57]], "example": [22, 112]}, {"END": [187, 188], "A": [183, 185], "V": [135, 138], "Q": [178, 182], "K": [129, 133], "R": null, "K'": [[117, 139], [123, 143]], "V'": [[125, 145], [128, 152]], "example": [113, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Bhinmal attracts Dr. Mehmet Oz. Shoranur attracts Jane Goodall. Beneden Merwede attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bhinmal is the athlete? Answer: No\n Premise: < Chaville attracts Eminem. Holycross-Ballycahill GAA attracts Meryl Streep. New England attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Holycross-Ballycahill GAA is the actor? Answer: Yes\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [39, 46], "Q": [93, 96], "K": [34, 37], "R": null, "K'": [[47, 57], [51, 62]], "V'": [[53, 64], [56, 67]], "example": [29, 104]}, {"END": [187, 188], "A": [183, 185], "V": [131, 137], "Q": [171, 182], "K": [118, 129], "R": null, "K'": [[109, 138], [112, 140]], "V'": [[114, 142], [117, 145]], "example": [105, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Bhinmal attracts Dr. Mehmet Oz. Shoranur attracts Jane Goodall. Beneden Merwede attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bhinmal is the athlete? Answer: No\n Premise: < Chaville attracts Eminem. Holycross-Ballycahill GAA attracts Meryl Streep. New England attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Holycross-Ballycahill GAA is the artist? Answer: No\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [39, 46], "Q": [93, 96], "K": [34, 37], "R": null, "K'": [[47, 57], [51, 62]], "V'": [[53, 64], [56, 67]], "example": [29, 104]}, {"END": [187, 188], "A": [183, 185], "V": [131, 137], "Q": [171, 182], "K": [118, 129], "R": null, "K'": [[109, 138], [112, 140]], "V'": [[114, 142], [117, 145]], "example": [105, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the actor, the musician and the lawyer.\nPremise: < Nobel Peace Center attracts Sonia Sotomayor. Eurostat attracts Rihanna. Ljig attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ljig is the musician? Answer: No\n Premise: < Central Black Forest attracts Ruth Bader Ginsburg. Croom, County Limerick attracts Beyonc\u00e9. bpost attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to bpost is the actor? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [52, 58], "Q": [84, 87], "K": [47, 50], "R": null, "K'": [[26, 39], [29, 41]], "V'": [[31, 43], [38, 46]], "example": [21, 95]}, {"END": [165, 166], "A": [161, 163], "V": [129, 132], "Q": [158, 160], "K": [125, 127], "R": null, "K'": [[100, 112], [103, 119]], "V'": [[105, 121], [111, 124]], "example": [96, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the architect, the actor and the lawyer.\nPremise: < Nobel Peace Center attracts Sonia Sotomayor. Eurostat attracts Rihanna. Ljig attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ljig is the musician? Answer: No\n Premise: < Central Black Forest attracts Ruth Bader Ginsburg. Croom, County Limerick attracts Beyonc\u00e9. bpost attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to bpost is the lawyer? Answer: No\n", "ranges": [{"END": [93, 94], "A": [88, 91], "V": [52, 58], "Q": [84, 87], "K": [47, 50], "R": null, "K'": [[26, 39], [29, 41]], "V'": [[31, 43], [38, 46]], "example": [21, 95]}, {"END": [165, 166], "A": [161, 163], "V": [129, 132], "Q": [158, 160], "K": [125, 127], "R": null, "K'": [[100, 112], [103, 119]], "V'": [[105, 121], [111, 124]], "example": [96, 167]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < prefectural road attracts Johnny Depp. Helsinki City Hall attracts Jane Goodall. South East Forests National Park attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Helsinki City Hall is the scientist? Answer: Yes\n Premise: < Berar Province attracts Frank Lloyd Wright. Munich Residence attracts Tom Brady. Hohenwestedt attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is the athlete? Answer: Yes\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [47, 50], "Q": [88, 93], "K": [40, 45], "R": null, "K'": [[30, 51], [34, 57]], "V'": [[36, 59], [39, 62]], "example": [25, 101]}, {"END": [171, 172], "A": [166, 169], "V": [121, 124], "Q": [161, 165], "K": [115, 119], "R": null, "K'": [[106, 125], [109, 130]], "V'": [[111, 132], [114, 135]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < prefectural road attracts Johnny Depp. Helsinki City Hall attracts Jane Goodall. South East Forests National Park attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Helsinki City Hall is the scientist? Answer: Yes\n Premise: < Berar Province attracts Frank Lloyd Wright. Munich Residence attracts Tom Brady. Hohenwestedt attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is the architect? Answer: No\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [47, 50], "Q": [88, 93], "K": [40, 45], "R": null, "K'": [[30, 51], [34, 57]], "V'": [[36, 59], [39, 62]], "example": [25, 101]}, {"END": [170, 171], "A": [166, 168], "V": [121, 124], "Q": [161, 165], "K": [115, 119], "R": null, "K'": [[106, 125], [109, 130]], "V'": [[111, 132], [114, 135]], "example": [102, 172]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the scientist, the athlete and the entrepreneur.\nPremise: < Santo Spirito in Sassia attracts Rosie Franklin. Oder-Spree District attracts Roger Federer. Fort Madalena attracts Warren Buffett. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Santo Spirito in Sassia is the athlete? Answer: No\n Premise: < Umarex attracts Barack Obama. National Congress of Brasil attracts Albert Einstein. Haut Atlas attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Umarex is the lawyer? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [39, 42], "Q": [90, 98], "K": [29, 37], "R": null, "K'": [[43, 55], [49, 59]], "V'": [[51, 61], [54, 64]], "example": [24, 106]}, {"END": [172, 173], "A": [168, 170], "V": [116, 120], "Q": [164, 167], "K": [111, 114], "R": null, "K'": [[121, 131], [125, 133]], "V'": [[127, 135], [130, 138]], "example": [107, 174]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the athlete and the scientist.\nPremise: < Santo Spirito in Sassia attracts Rosie Franklin. Oder-Spree District attracts Roger Federer. Fort Madalena attracts Warren Buffett. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Santo Spirito in Sassia is the athlete? Answer: No\n Premise: < Umarex attracts Barack Obama. National Congress of Brasil attracts Albert Einstein. Haut Atlas attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Umarex is the scientist? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [39, 42], "Q": [90, 98], "K": [29, 37], "R": null, "K'": [[43, 55], [49, 59]], "V'": [[51, 61], [54, 64]], "example": [24, 106]}, {"END": [173, 174], "A": [168, 171], "V": [116, 120], "Q": [164, 167], "K": [111, 114], "R": null, "K'": [[121, 131], [125, 133]], "V'": [[127, 135], [130, 138]], "example": [107, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the actor and the artist.\nPremise: < Koriya district attracts Thurgood Marshall. Vijayawada Junction railway station attracts Leonardo DiCaprio. Calw attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vijayawada Junction railway station is the actor? Answer: Yes\n Premise: < Westerburg attracts Frida Kahlo. Pazhayangadi attracts Dr. Neil deGrasse Tyson. Askola attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is the artist? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [100, 102], "V": [47, 52], "Q": [90, 99], "K": [36, 45], "R": null, "K'": [[25, 53], [29, 55]], "V'": [[31, 57], [35, 64]], "example": [20, 106]}, {"END": [183, 184], "A": [179, 181], "V": [116, 121], "Q": [175, 178], "K": [111, 114], "R": null, "K'": [[122, 139], [127, 141]], "V'": [[129, 143], [138, 149]], "example": [107, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the actor, the artist and the lawyer.\nPremise: < Koriya district attracts Thurgood Marshall. Vijayawada Junction railway station attracts Leonardo DiCaprio. Calw attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Vijayawada Junction railway station is the actor? Answer: Yes\n Premise: < Westerburg attracts Frida Kahlo. Pazhayangadi attracts Dr. Neil deGrasse Tyson. Askola attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A": [100, 102], "V": [47, 52], "Q": [90, 99], "K": [36, 45], "R": null, "K'": [[25, 53], [29, 55]], "V'": [[31, 57], [35, 64]], "example": [20, 106]}, {"END": [183, 184], "A": [179, 181], "V": [116, 121], "Q": [175, 178], "K": [111, 114], "R": null, "K'": [[122, 139], [127, 141]], "V'": [[129, 143], [138, 149]], "example": [107, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the lawyer, the entrepreneur, the athlete and the artist.\nPremise: < Ogrodzieniec attracts Oprah Winfrey. Banesh Rural District attracts Jane Goodall. University of Zaragoza attracts Johnnie Cochran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to University of Zaragoza is the scientist? Answer: No\n Premise: < Nintendo attracts Georgia O'Keeffe. Al Daayen attracts Usain Bolt. Bannu attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bannu is the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A": [100, 103], "V": [63, 68], "Q": [94, 99], "K": [56, 61], "R": null, "K'": [[32, 45], [37, 50]], "V'": [[39, 52], [44, 55]], "example": [27, 107]}, {"END": [177, 178], "A": [173, 175], "V": [139, 143], "Q": [169, 172], "K": [134, 137], "R": null, "K'": [[112, 123], [114, 127]], "V'": [[116, 129], [122, 133]], "example": [108, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the artist, the scientist, the athlete and the lawyer.\nPremise: < Ogrodzieniec attracts Oprah Winfrey. Banesh Rural District attracts Jane Goodall. University of Zaragoza attracts Johnnie Cochran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to University of Zaragoza is the scientist? Answer: No\n Premise: < Nintendo attracts Georgia O'Keeffe. Al Daayen attracts Usain Bolt. Bannu attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bannu is the artist? Answer: No\n", "ranges": [{"END": [105, 106], "A": [100, 103], "V": [63, 68], "Q": [94, 99], "K": [56, 61], "R": null, "K'": [[32, 45], [37, 50]], "V'": [[39, 52], [44, 55]], "example": [27, 107]}, {"END": [177, 178], "A": [173, 175], "V": [139, 143], "Q": [169, 172], "K": [134, 137], "R": null, "K'": [[112, 123], [114, 127]], "V'": [[116, 129], [122, 133]], "example": [108, 179]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the musician, the actor, the lawyer, the athlete and the scientist.\n< Ieoh Ming Pei likes Central Black Forest. Justin Bieber likes Bilecik Province. Roger Federer likes Bilecik Province. >. The person who wants to go to Bilecik Province is not the architect\n < Jennifer Lawrence likes Komarichsky District. Sonia Sotomayor likes Komarichsky District. Rosie Franklin likes Calw. >. The person who wants to go to Komarichsky District is not the scientist\n", "ranges": [{"END": [82, 83], "A'": [83, 84], "V'": [30, 37], "Q": [75, 80], "K'": [39, 42], "R": [81, 82], "K": [[49, 60], [54, 65]], "V": [[43, 55], [47, 58]], "example": [29, 84]}, {"END": [136, 137], "A'": [137, 139], "V'": [112, 115], "Q": [129, 134], "K'": [117, 119], "R": [135, 136], "K": [[91, 106], [96, 111]], "V": [[86, 97], [89, 104]], "example": [85, 139]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the artist, the entrepreneur, the lawyer and the doctor.\n< Jeff Bezos likes Welschnofen. Norman Foster likes Bolpur. Rem Koolhaas likes Bolpur. >. The person who wants to go to Bolpur is not the entrepreneur\n < Pablo Picasso likes Electoral district of Wantirna. Thurgood Marshall likes Colleville-Montgomery. Dr. Sylvia Earle likes Electoral district of Wantirna. >. The person who wants to go to Electoral district of Wantirna is not the lawyer\n", "ranges": [{"END": [67, 68], "A'": [68, 71], "V'": [26, 29], "Q": [63, 65], "K'": [31, 35], "R": [66, 67], "K": [[41, 51], [43, 53]], "V": [[36, 44], [39, 49]], "example": [25, 71]}, {"END": [137, 138], "A'": [138, 139], "V'": [87, 91], "Q": [127, 135], "K'": [93, 100], "R": [136, 137], "K": [[78, 109], [86, 117]], "V": [[73, 101], [76, 107]], "example": [72, 139]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the author, the scientist and the entrepreneur.\n< Louis Sullivan likes Trento. Agatha Christie likes Olten railway station. Norman Foster likes Trento. >. The person who wants to go to Trento is not the author\n < Stephen Hawking likes AA Drink-leontien.nl. Sergey Brin likes Bobolice. J.R.R. Tolkien likes Bobolice. >. The person who wants to go to Bobolice is not the scientist\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [33, 38], "Q": [62, 64], "K'": [40, 44], "R": [65, 66], "K": [[30, 50], [32, 52]], "V": [[24, 45], [28, 48]], "example": [23, 68]}, {"END": [124, 125], "A'": [125, 127], "V'": [70, 73], "Q": [119, 122], "K'": [75, 84], "R": [123, 124], "K": [[91, 106], [94, 109]], "V": [[85, 95], [89, 104]], "example": [69, 127]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author and the artist.\n< Dr. Jane Goodall likes Thuringian Highland. Frida Kahlo likes Thuringian Highland. George Orwell likes Canton of Schaffhausen. >. The person who wants to go to Thuringian Highland is not the author\n < Dr. Michio Kaku likes Lannemezan. Toni Morrison likes Lannemezan. Thurgood Marshall likes Lodhran Tehsil. >. The person who wants to go to Lannemezan is not the lawyer\n", "ranges": [{"END": [75, 76], "A'": [76, 77], "V'": [47, 50], "Q": [68, 73], "K'": [52, 58], "R": [74, 75], "K": [[28, 41], [33, 46]], "V": [[21, 34], [26, 39]], "example": [20, 77]}, {"END": [133, 134], "A'": [134, 135], "V'": [104, 108], "Q": [127, 131], "K'": [110, 117], "R": [132, 133], "K": [[87, 99], [91, 103]], "V": [[79, 92], [85, 97]], "example": [78, 135]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the architect, the athlete, the artist and the actor.\n< Sergey Brin likes New Era University. Johnny Depp likes Gmina Konarzyny. Maya Lin likes Gmina Konarzyny. >. The person who wants to go to Gmina Konarzyny is not the entrepreneur\n < Tom Brady likes Guggenheim Museum. Leonardo da Vinci likes Greater Rio de Janeiro. Rem Koolhaas likes Greater Rio de Janeiro. >. The person who wants to go to Greater Rio de Janeiro is not the athlete\n", "ranges": [{"END": [78, 79], "A'": [79, 82], "V'": [27, 31], "Q": [70, 76], "K'": [33, 36], "R": [77, 78], "K": [[42, 54], [48, 60]], "V": [[37, 49], [40, 52]], "example": [26, 82]}, {"END": [137, 138], "A'": [138, 140], "V'": [84, 87], "Q": [130, 135], "K'": [89, 94], "R": [136, 137], "K": [[102, 115], [107, 120]], "V": [[95, 108], [100, 113]], "example": [83, 140]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the architect, the actor and the artist.\n< Frida Kahlo likes Broken Pencil. Alex Morgan likes Gmina Olsztyn. Louis Sullivan likes Gmina Olsztyn. >. The person who wants to go to Gmina Olsztyn is not the artist\n < Ieoh Ming Pei likes Shablykinsky District. Natalie Portman likes bpost. Albert Einstein likes bpost. >. The person who wants to go to bpost is not the architect\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [26, 31], "Q": [72, 78], "K'": [33, 38], "R": [79, 80], "K": [[43, 56], [49, 62]], "V": [[39, 50], [41, 54]], "example": [25, 82]}, {"END": [129, 130], "A'": [130, 131], "V'": [84, 91], "Q": [125, 127], "K'": [93, 98], "R": [128, 129], "K": [[105, 113], [107, 115]], "V": [[99, 108], [103, 111]], "example": [83, 131]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the artist, the author, the musician and the actor.\n< Rosie Franklin likes Al Daayen. Michelangelo likes Capolago. Rihanna likes Capolago. >. The person who wants to go to Capolago is not the scientist\n < Johnny Depp likes prefectural road. Jane Goodall likes National Congress of Brasil. George Orwell likes prefectural road. >. The person who wants to go to prefectural road is not the scientist\n", "ranges": [{"END": [68, 69], "A'": [69, 71], "V'": [26, 29], "Q": [63, 66], "K'": [31, 35], "R": [67, 68], "K": [[41, 50], [44, 53]], "V": [[36, 45], [39, 48]], "example": [25, 71]}, {"END": [118, 119], "A'": [119, 121], "V'": [83, 86], "Q": [112, 116], "K'": [88, 92], "R": [117, 118], "K": [[78, 98], [82, 102]], "V": [[73, 93], [76, 96]], "example": [72, 121]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the doctor, the author and the athlete.\n< Dr. Jane Goodall likes Veysian Rural District. Michael Phelps likes Munich Residence. Sergey Brin likes Munich Residence. >. The person who wants to go to Munich Residence is not the doctor\n < Toni Morrison likes Vijayawada Junction railway station. Steve Jobs likes Hersbruck. Agatha Christie likes Vijayawada Junction railway station. >. The person who wants to go to Vijayawada Junction railway station is not the entrepreneur\n", "ranges": [{"END": [75, 76], "A'": [76, 77], "V'": [24, 29], "Q": [69, 73], "K'": [31, 37], "R": [74, 75], "K": [[44, 55], [48, 59]], "V": [[38, 49], [42, 53]], "example": [23, 77]}, {"END": [143, 144], "A'": [144, 147], "V'": [96, 99], "Q": [132, 141], "K'": [101, 105], "R": [142, 143], "K": [[86, 113], [95, 122]], "V": [[79, 106], [84, 111]], "example": [78, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the actor, the architect, the lawyer and the musician.\nPremise: < Ieoh Ming Pei likes Central Black Forest. Justin Bieber likes Bilecik Province. Roger Federer likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is not the architect? Answer: Yes\n Premise: < Dr. Sanjay Gupta likes Arsk. Jennifer Lawrence likes Arsk. F. Lee Bailey likes Saint-Jacques-de-la-Lande. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Arsk is not the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [33, 40], "Q": [94, 99], "K'": [42, 45], "R": [100, 101], "K": [[52, 63], [57, 68]], "V": [[46, 58], [50, 61]], "example": [28, 107]}, {"END": [184, 185], "A'": [180, 182], "V'": [132, 137], "Q": [176, 178], "K'": [139, 150], "R": [179, 180], "K": [[121, 129], [123, 131]], "V": [[112, 124], [119, 127]], "example": [108, 186]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the architect, the athlete, the musician, the lawyer and the actor.\nPremise: < Ieoh Ming Pei likes Central Black Forest. Justin Bieber likes Bilecik Province. Roger Federer likes Bilecik Province. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is not the architect? Answer: Yes\n Premise: < Dr. Sanjay Gupta likes Arsk. Jennifer Lawrence likes Arsk. F. Lee Bailey likes Saint-Jacques-de-la-Lande. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Arsk is not the actor? Answer: No\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [33, 40], "Q": [94, 99], "K'": [42, 45], "R": [100, 101], "K": [[52, 63], [57, 68]], "V": [[46, 58], [50, 61]], "example": [28, 107]}, {"END": [184, 185], "A'": [180, 182], "V'": [132, 137], "Q": [176, 178], "K'": [139, 150], "R": [179, 180], "K": [[121, 129], [123, 131]], "V": [[112, 124], [119, 127]], "example": [108, 186]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the scientist, the lawyer, the musician, the athlete and the entrepreneur.\nPremise: < Barack Obama likes Aucanquilcha. Jeff Bezos likes Tinapa Resort. Carl Sagan likes Aucanquilcha. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Aucanquilcha is not the lawyer? Answer: No\n Premise: < Usain Bolt likes Addanki mandal. Drake likes Katwijk aan den Rijn. J.R.R. Tolkien likes Katwijk aan den Rijn. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Katwijk aan den Rijn is not the athlete? Answer: Yes\n", "ranges": [{"END": [109, 110], "A'": [105, 107], "V'": [49, 52], "Q": [97, 103], "K'": [54, 59], "R": [104, 105], "K": [[42, 65], [48, 71]], "V": [[36, 60], [40, 63]], "example": [31, 111]}, {"END": [198, 199], "A'": [193, 196], "V'": [116, 120], "Q": [184, 191], "K'": [122, 127], "R": [192, 193], "K": [[132, 151], [139, 158]], "V": [[128, 140], [130, 149]], "example": [112, 200]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the entrepreneur, the musician, the author and the lawyer.\nPremise: < Barack Obama likes Aucanquilcha. Jeff Bezos likes Tinapa Resort. Carl Sagan likes Aucanquilcha. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Aucanquilcha is not the lawyer? Answer: No\n Premise: < Usain Bolt likes Addanki mandal. Drake likes Katwijk aan den Rijn. J.R.R. Tolkien likes Katwijk aan den Rijn. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Katwijk aan den Rijn is not the musician? Answer: No\n", "ranges": [{"END": [109, 110], "A'": [105, 107], "V'": [49, 52], "Q": [97, 103], "K'": [54, 59], "R": [104, 105], "K": [[42, 65], [48, 71]], "V": [[36, 60], [40, 63]], "example": [31, 111]}, {"END": [198, 199], "A'": [193, 196], "V'": [116, 120], "Q": [184, 191], "K'": [122, 127], "R": [192, 193], "K": [[132, 151], [139, 158]], "V": [[128, 140], [130, 149]], "example": [112, 200]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the doctor, the musician and the actor.\nPremise: < Oprah Winfrey likes Komarichsky District. Johnny Depp likes Thiruvattar. Lady Gaga likes Thiruvattar. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Thiruvattar is not the entrepreneur? Answer: Yes\n Premise: < Adele likes Trans-Sahara Highway. Hillary Clinton likes Iximche. Dr. Gabor Mat\u00e9 likes Iximche. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Iximche is not the musician? Answer: Yes\n", "ranges": [{"END": [104, 105], "A'": [98, 102], "V'": [31, 36], "Q": [91, 96], "K'": [38, 43], "R": [97, 98], "K": [[49, 60], [54, 65]], "V": [[44, 55], [47, 58]], "example": [26, 106]}, {"END": [180, 181], "A'": [175, 178], "V'": [111, 114], "Q": [170, 173], "K'": [116, 122], "R": [174, 175], "K": [[129, 141], [132, 144]], "V": [[123, 133], [127, 139]], "example": [107, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the actor, the musician and the doctor.\nPremise: < Oprah Winfrey likes Komarichsky District. Johnny Depp likes Thiruvattar. Lady Gaga likes Thiruvattar. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Thiruvattar is not the entrepreneur? Answer: Yes\n Premise: < Adele likes Trans-Sahara Highway. Hillary Clinton likes Iximche. Dr. Gabor Mat\u00e9 likes Iximche. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Iximche is not the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A'": [98, 102], "V'": [31, 36], "Q": [91, 96], "K'": [38, 43], "R": [97, 98], "K": [[49, 60], [54, 65]], "V": [[44, 55], [47, 58]], "example": [26, 106]}, {"END": [179, 180], "A'": [175, 177], "V'": [111, 114], "Q": [170, 173], "K'": [116, 122], "R": [174, 175], "K": [[129, 141], [132, 144]], "V": [[123, 133], [127, 139]], "example": [107, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the architect, the artist and the musician.\nPremise: < Tom Brady likes Indira Gandhi International Airport. Leonardo da Vinci likes Taronga Western Plains Zoo. Rem Koolhaas likes Taronga Western Plains Zoo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Taronga Western Plains Zoo is not the artist? Answer: No\n Premise: < Drake likes Ticho House. Mies van der Rohe likes Bilbao. Dr. Michio Kaku likes Ticho House. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ticho House is not the architect? Answer: Yes\n", "ranges": [{"END": [113, 114], "A'": [109, 111], "V'": [30, 33], "Q": [99, 107], "K'": [35, 41], "R": [108, 109], "K": [[49, 65], [57, 73]], "V": [[42, 58], [47, 63]], "example": [25, 115]}, {"END": [189, 190], "A'": [185, 187], "V'": [129, 135], "Q": [179, 183], "K'": [137, 140], "R": [184, 185], "K": [[124, 149], [128, 153]], "V": [[120, 141], [122, 147]], "example": [116, 191]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the athlete, the musician and the artist.\nPremise: < Tom Brady likes Indira Gandhi International Airport. Leonardo da Vinci likes Taronga Western Plains Zoo. Rem Koolhaas likes Taronga Western Plains Zoo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Taronga Western Plains Zoo is not the artist? Answer: No\n Premise: < Drake likes Ticho House. Mies van der Rohe likes Bilbao. Dr. Michio Kaku likes Ticho House. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ticho House is not the musician? Answer: No\n", "ranges": [{"END": [113, 114], "A'": [109, 111], "V'": [30, 33], "Q": [99, 107], "K'": [35, 41], "R": [108, 109], "K": [[49, 65], [57, 73]], "V": [[42, 58], [47, 63]], "example": [25, 115]}, {"END": [190, 191], "A'": [185, 188], "V'": [129, 135], "Q": [179, 183], "K'": [137, 140], "R": [184, 185], "K": [[124, 149], [128, 153]], "V": [[120, 141], [122, 147]], "example": [116, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Larry Page likes Mirbag-e Shomali Rural District. Dr. Sanjay Gupta likes Annweiler am Trifels. Michael Phelps likes Mirbag-e Shomali Rural District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Mirbag-e Shomali Rural District is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran likes Bernheze. Richard Dawkins likes Buchan. Stephen King likes Buchan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Buchan is not the lawyer? Answer: Yes\n", "ranges": [{"END": [125, 126], "A'": [121, 123], "V'": [50, 57], "Q": [109, 119], "K'": [59, 66], "R": [120, 121], "K": [[39, 73], [49, 83]], "V": [[35, 67], [37, 71]], "example": [30, 127]}, {"END": [191, 192], "A'": [187, 189], "V'": [132, 137], "Q": [183, 185], "K'": [139, 142], "R": [186, 187], "K": [[148, 155], [150, 157]], "V": [[143, 151], [146, 153]], "example": [128, 193]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Larry Page likes Mirbag-e Shomali Rural District. Dr. Sanjay Gupta likes Annweiler am Trifels. Michael Phelps likes Mirbag-e Shomali Rural District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Mirbag-e Shomali Rural District is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran likes Bernheze. Richard Dawkins likes Buchan. Stephen King likes Buchan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Buchan is not the scientist? Answer: No\n", "ranges": [{"END": [125, 126], "A'": [121, 123], "V'": [50, 57], "Q": [109, 119], "K'": [59, 66], "R": [120, 121], "K": [[39, 73], [49, 83]], "V": [[35, 67], [37, 71]], "example": [30, 127]}, {"END": [192, 193], "A'": [187, 190], "V'": [132, 137], "Q": [183, 185], "K'": [139, 142], "R": [186, 187], "K": [[148, 155], [150, 157]], "V": [[143, 151], [146, 153]], "example": [128, 194]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Dr. Jane Goodall likes Veysian Rural District. Michael Phelps likes Munich Residence. Sergey Brin likes Munich Residence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is not the doctor? Answer: Yes\n Premise: < Sergey Brin likes Hersbruck. Bill Gates likes Hersbruck. Jane Austen likes Lambunao. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hersbruck is not the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [28, 33], "Q": [89, 93], "K'": [35, 41], "R": [94, 95], "K": [[48, 59], [52, 63]], "V": [[42, 53], [46, 57]], "example": [23, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [127, 130], "Q": [161, 165], "K'": [132, 135], "R": [166, 167], "K": [[112, 122], [116, 126]], "V": [[106, 117], [110, 120]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Dr. Jane Goodall likes Veysian Rural District. Michael Phelps likes Munich Residence. Sergey Brin likes Munich Residence. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is not the doctor? Answer: Yes\n Premise: < Sergey Brin likes Hersbruck. Bill Gates likes Hersbruck. Jane Austen likes Lambunao. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hersbruck is not the entrepreneur? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [28, 33], "Q": [89, 93], "K'": [35, 41], "R": [94, 95], "K": [[48, 59], [52, 63]], "V": [[42, 53], [46, 57]], "example": [23, 101]}, {"END": [173, 174], "A'": [167, 171], "V'": [127, 130], "Q": [161, 165], "K'": [132, 135], "R": [166, 167], "K": [[112, 122], [116, 126]], "V": [[106, 117], [110, 120]], "example": [102, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the architect, the entrepreneur, the athlete, the scientist and the actor.\nPremise: < Barack Obama likes Sahneh County. Albert Einstein likes Hida Mountains. Serena Williams likes Hida Mountains. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hida Mountains is not the lawyer? Answer: Yes\n Premise: < Brad Pitt likes Eibenstock. Ieoh Ming Pei likes Albertis Castle. Larry Page likes Albertis Castle. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Albertis Castle is not the actor? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [35, 39], "Q": [88, 91], "K'": [41, 44], "R": [92, 93], "K": [[50, 59], [53, 62]], "V": [[45, 54], [48, 57]], "example": [30, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [104, 106], "Q": [158, 161], "K'": [108, 111], "R": [162, 163], "K": [[121, 129], [124, 132]], "V": [[112, 125], [119, 127]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the architect, the scientist, the lawyer, the athlete and the entrepreneur.\nPremise: < Barack Obama likes Sahneh County. Albert Einstein likes Hida Mountains. Serena Williams likes Hida Mountains. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hida Mountains is not the lawyer? Answer: Yes\n Premise: < Brad Pitt likes Eibenstock. Ieoh Ming Pei likes Albertis Castle. Larry Page likes Albertis Castle. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Albertis Castle is not the architect? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [35, 39], "Q": [88, 91], "K'": [41, 44], "R": [92, 93], "K": [[50, 59], [53, 62]], "V": [[45, 54], [48, 57]], "example": [30, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [104, 106], "Q": [158, 161], "K'": [108, 111], "R": [162, 163], "K": [[121, 129], [124, 132]], "V": [[112, 125], [119, 127]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Simone Biles likes Westerburg. Nikola Tesla likes CNH Industrial. Ruth Bader Ginsburg likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is not the lawyer? Answer: No\n Premise: < Toni Morrison likes Lajran Rural District. Claude Monet likes Party for Freedom. Ed Sheeran likes Party for Freedom. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Party for Freedom is not the author? Answer: Yes\n", "ranges": [{"END": [103, 104], "A'": [99, 101], "V'": [44, 49], "Q": [94, 97], "K'": [51, 56], "R": [98, 99], "K": [[40, 65], [43, 68]], "V": [[34, 57], [38, 63]], "example": [29, 105]}, {"END": [180, 181], "A'": [176, 178], "V'": [110, 115], "Q": [170, 174], "K'": [117, 123], "R": [175, 176], "K": [[129, 140], [133, 144]], "V": [[124, 134], [127, 138]], "example": [106, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Simone Biles likes Westerburg. Nikola Tesla likes CNH Industrial. Ruth Bader Ginsburg likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is not the lawyer? Answer: No\n Premise: < Toni Morrison likes Lajran Rural District. Claude Monet likes Party for Freedom. Ed Sheeran likes Party for Freedom. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Party for Freedom is not the artist? Answer: No\n", "ranges": [{"END": [103, 104], "A'": [99, 101], "V'": [44, 49], "Q": [94, 97], "K'": [51, 56], "R": [98, 99], "K": [[40, 65], [43, 68]], "V": [[34, 57], [38, 63]], "example": [29, 105]}, {"END": [180, 181], "A'": [176, 178], "V'": [110, 115], "Q": [170, 174], "K'": [117, 123], "R": [175, 176], "K": [[129, 140], [133, 144]], "V": [[124, 134], [127, 138]], "example": [106, 182]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the musician, the actor, the lawyer, the athlete and the scientist.\n< Central Black Forest attracts Ieoh Ming Pei. Bilecik Province attracts Justin Bieber. Bilecik Province attracts Roger Federer. >. The person who wants to go to Bilecik Province is not the architect\n < Komarichsky District attracts Jennifer Lawrence. Komarichsky District attracts Sonia Sotomayor. Calw attracts Rosie Franklin. >. The person who wants to go to Komarichsky District is not the scientist\n", "ranges": [{"END": [82, 83], "A'": [83, 84], "V'": [35, 42], "Q": [75, 80], "K'": [30, 33], "R": [81, 82], "K": [[43, 55], [48, 60]], "V": [[50, 62], [54, 65]], "example": [29, 84]}, {"END": [136, 137], "A'": [137, 139], "V'": [116, 119], "Q": [129, 134], "K'": [112, 114], "R": [135, 136], "K": [[86, 97], [91, 102]], "V": [[93, 104], [96, 111]], "example": [85, 139]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the artist, the entrepreneur, the lawyer and the doctor.\n< Welschnofen attracts Jeff Bezos. Bolpur attracts Norman Foster. Bolpur attracts Rem Koolhaas. >. The person who wants to go to Bolpur is not the entrepreneur\n < Electoral district of Wantirna attracts Pablo Picasso. Colleville-Montgomery attracts Thurgood Marshall. Electoral district of Wantirna attracts Dr. Sylvia Earle. >. The person who wants to go to Electoral district of Wantirna is not the lawyer\n", "ranges": [{"END": [67, 68], "A'": [68, 71], "V'": [32, 35], "Q": [63, 65], "K'": [26, 30], "R": [66, 67], "K": [[36, 44], [38, 46]], "V": [[40, 48], [43, 53]], "example": [25, 71]}, {"END": [137, 138], "A'": [138, 139], "V'": [96, 100], "Q": [127, 135], "K'": [87, 94], "R": [136, 137], "K": [[73, 101], [81, 109]], "V": [[83, 111], [86, 117]], "example": [72, 139]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the author, the scientist and the entrepreneur.\n< Trento attracts Louis Sullivan. Olten railway station attracts Agatha Christie. Trento attracts Norman Foster. >. The person who wants to go to Trento is not the author\n < AA Drink-leontien.nl attracts Stephen Hawking. Bobolice attracts Sergey Brin. Bobolice attracts J.R.R. Tolkien. >. The person who wants to go to Bobolice is not the scientist\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [39, 44], "Q": [62, 64], "K'": [33, 37], "R": [65, 66], "K": [[24, 45], [26, 47]], "V": [[28, 49], [32, 52]], "example": [23, 68]}, {"END": [124, 125], "A'": [125, 127], "V'": [81, 84], "Q": [119, 122], "K'": [70, 79], "R": [123, 124], "K": [[85, 95], [88, 98]], "V": [[90, 100], [94, 109]], "example": [69, 127]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author and the artist.\n< Thuringian Highland attracts Dr. Jane Goodall. Thuringian Highland attracts Frida Kahlo. Canton of Schaffhausen attracts George Orwell. >. The person who wants to go to Thuringian Highland is not the author\n < Lannemezan attracts Dr. Michio Kaku. Lannemezan attracts Toni Morrison. Lodhran Tehsil attracts Thurgood Marshall. >. The person who wants to go to Lannemezan is not the lawyer\n", "ranges": [{"END": [75, 76], "A'": [76, 77], "V'": [55, 58], "Q": [68, 73], "K'": [47, 53], "R": [74, 75], "K": [[21, 34], [26, 39]], "V": [[28, 41], [33, 46]], "example": [20, 77]}, {"END": [133, 134], "A'": [134, 135], "V'": [113, 117], "Q": [127, 131], "K'": [104, 111], "R": [132, 133], "K": [[79, 92], [83, 96]], "V": [[85, 98], [91, 103]], "example": [78, 135]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the architect, the athlete, the artist and the actor.\n< New Era University attracts Sergey Brin. Gmina Konarzyny attracts Johnny Depp. Gmina Konarzyny attracts Maya Lin. >. The person who wants to go to Gmina Konarzyny is not the entrepreneur\n < Guggenheim Museum attracts Tom Brady. Greater Rio de Janeiro attracts Leonardo da Vinci. Greater Rio de Janeiro attracts Rem Koolhaas. >. The person who wants to go to Greater Rio de Janeiro is not the athlete\n", "ranges": [{"END": [78, 79], "A'": [79, 82], "V'": [32, 36], "Q": [70, 76], "K'": [27, 30], "R": [77, 78], "K": [[37, 49], [43, 55]], "V": [[45, 57], [48, 60]], "example": [26, 82]}, {"END": [137, 138], "A'": [138, 140], "V'": [91, 94], "Q": [130, 135], "K'": [84, 89], "R": [136, 137], "K": [[95, 108], [100, 113]], "V": [[102, 115], [107, 120]], "example": [83, 140]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the architect, the actor and the artist.\n< Broken Pencil attracts Frida Kahlo. Gmina Olsztyn attracts Alex Morgan. Gmina Olsztyn attracts Louis Sullivan. >. The person who wants to go to Gmina Olsztyn is not the artist\n < Shablykinsky District attracts Ieoh Ming Pei. bpost attracts Natalie Portman. bpost attracts Albert Einstein. >. The person who wants to go to bpost is not the architect\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [33, 38], "Q": [72, 78], "K'": [26, 31], "R": [79, 80], "K": [[39, 50], [45, 56]], "V": [[47, 58], [49, 62]], "example": [25, 82]}, {"END": [129, 130], "A'": [130, 131], "V'": [91, 98], "Q": [125, 127], "K'": [84, 89], "R": [128, 129], "K": [[99, 108], [101, 110]], "V": [[103, 112], [107, 115]], "example": [83, 131]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the artist, the author, the musician and the actor.\n< Al Daayen attracts Rosie Franklin. Capolago attracts Michelangelo. Capolago attracts Rihanna. >. The person who wants to go to Capolago is not the scientist\n < prefectural road attracts Johnny Depp. National Congress of Brasil attracts Jane Goodall. prefectural road attracts George Orwell. >. The person who wants to go to prefectural road is not the scientist\n", "ranges": [{"END": [68, 69], "A'": [69, 71], "V'": [32, 35], "Q": [63, 66], "K'": [26, 30], "R": [67, 68], "K": [[36, 45], [39, 48]], "V": [[41, 50], [44, 53]], "example": [25, 71]}, {"END": [118, 119], "A'": [119, 121], "V'": [89, 92], "Q": [112, 116], "K'": [83, 87], "R": [117, 118], "K": [[73, 93], [77, 97]], "V": [[79, 99], [82, 102]], "example": [72, 121]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the doctor, the author and the athlete.\n< Veysian Rural District attracts Dr. Jane Goodall. Munich Residence attracts Michael Phelps. Munich Residence attracts Sergey Brin. >. The person who wants to go to Munich Residence is not the doctor\n < Vijayawada Junction railway station attracts Toni Morrison. Hersbruck attracts Steve Jobs. Vijayawada Junction railway station attracts Agatha Christie. >. The person who wants to go to Vijayawada Junction railway station is not the entrepreneur\n", "ranges": [{"END": [75, 76], "A'": [76, 77], "V'": [32, 37], "Q": [69, 73], "K'": [24, 30], "R": [74, 75], "K": [[38, 49], [42, 53]], "V": [[44, 55], [48, 59]], "example": [23, 77]}, {"END": [143, 144], "A'": [144, 147], "V'": [102, 105], "Q": [132, 141], "K'": [96, 100], "R": [142, 143], "K": [[79, 106], [88, 115]], "V": [[90, 117], [95, 122]], "example": [78, 147]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the actor, the architect, the lawyer and the musician.\nPremise: < Central Black Forest attracts Ieoh Ming Pei. Bilecik Province attracts Justin Bieber. Bilecik Province attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is not the architect? Answer: Yes\n Premise: < Arsk attracts Dr. Sanjay Gupta. Arsk attracts Jennifer Lawrence. Saint-Jacques-de-la-Lande attracts F. Lee Bailey. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Arsk is not the lawyer? Answer: Yes\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [38, 45], "Q": [94, 99], "K'": [33, 36], "R": [100, 101], "K": [[46, 58], [51, 63]], "V": [[53, 65], [57, 68]], "example": [28, 107]}, {"END": [184, 185], "A'": [180, 182], "V'": [145, 150], "Q": [176, 178], "K'": [132, 143], "R": [179, 180], "K": [[112, 124], [114, 126]], "V": [[116, 128], [123, 131]], "example": [108, 186]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the architect, the athlete, the musician, the lawyer and the actor.\nPremise: < Central Black Forest attracts Ieoh Ming Pei. Bilecik Province attracts Justin Bieber. Bilecik Province attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Bilecik Province is not the architect? Answer: Yes\n Premise: < Arsk attracts Dr. Sanjay Gupta. Arsk attracts Jennifer Lawrence. Saint-Jacques-de-la-Lande attracts F. Lee Bailey. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Arsk is not the actor? Answer: No\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [38, 45], "Q": [94, 99], "K'": [33, 36], "R": [100, 101], "K": [[46, 58], [51, 63]], "V": [[53, 65], [57, 68]], "example": [28, 107]}, {"END": [184, 185], "A'": [180, 182], "V'": [145, 150], "Q": [176, 178], "K'": [132, 143], "R": [179, 180], "K": [[112, 124], [114, 126]], "V": [[116, 128], [123, 131]], "example": [108, 186]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the scientist, the lawyer, the musician, the athlete and the entrepreneur.\nPremise: < Aucanquilcha attracts Barack Obama. Tinapa Resort attracts Jeff Bezos. Aucanquilcha attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Aucanquilcha is not the lawyer? Answer: No\n Premise: < Addanki mandal attracts Usain Bolt. Katwijk aan den Rijn attracts Drake. Katwijk aan den Rijn attracts J.R.R. Tolkien. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Katwijk aan den Rijn is not the athlete? Answer: Yes\n", "ranges": [{"END": [109, 110], "A'": [105, 107], "V'": [56, 59], "Q": [97, 103], "K'": [49, 54], "R": [104, 105], "K": [[36, 60], [42, 66]], "V": [[44, 68], [48, 71]], "example": [31, 111]}, {"END": [198, 199], "A'": [193, 196], "V'": [123, 127], "Q": [184, 191], "K'": [116, 121], "R": [192, 193], "K": [[128, 140], [135, 147]], "V": [[137, 149], [139, 158]], "example": [112, 200]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the entrepreneur, the musician, the author and the lawyer.\nPremise: < Aucanquilcha attracts Barack Obama. Tinapa Resort attracts Jeff Bezos. Aucanquilcha attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Aucanquilcha is not the lawyer? Answer: No\n Premise: < Addanki mandal attracts Usain Bolt. Katwijk aan den Rijn attracts Drake. Katwijk aan den Rijn attracts J.R.R. Tolkien. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Katwijk aan den Rijn is not the musician? Answer: No\n", "ranges": [{"END": [109, 110], "A'": [105, 107], "V'": [56, 59], "Q": [97, 103], "K'": [49, 54], "R": [104, 105], "K": [[36, 60], [42, 66]], "V": [[44, 68], [48, 71]], "example": [31, 111]}, {"END": [198, 199], "A'": [193, 196], "V'": [123, 127], "Q": [184, 191], "K'": [116, 121], "R": [192, 193], "K": [[128, 140], [135, 147]], "V": [[137, 149], [139, 158]], "example": [112, 200]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the doctor, the musician and the actor.\nPremise: < Komarichsky District attracts Oprah Winfrey. Thiruvattar attracts Johnny Depp. Thiruvattar attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Thiruvattar is not the entrepreneur? Answer: Yes\n Premise: < Trans-Sahara Highway attracts Adele. Iximche attracts Hillary Clinton. Iximche attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Iximche is not the musician? Answer: Yes\n", "ranges": [{"END": [104, 105], "A'": [98, 102], "V'": [38, 43], "Q": [91, 96], "K'": [31, 36], "R": [97, 98], "K": [[44, 55], [49, 60]], "V": [[51, 62], [54, 65]], "example": [26, 106]}, {"END": [180, 181], "A'": [175, 178], "V'": [119, 122], "Q": [170, 173], "K'": [111, 117], "R": [174, 175], "K": [[123, 133], [126, 136]], "V": [[128, 138], [132, 144]], "example": [107, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the entrepreneur, the actor, the musician and the doctor.\nPremise: < Komarichsky District attracts Oprah Winfrey. Thiruvattar attracts Johnny Depp. Thiruvattar attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Thiruvattar is not the entrepreneur? Answer: Yes\n Premise: < Trans-Sahara Highway attracts Adele. Iximche attracts Hillary Clinton. Iximche attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Iximche is not the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A'": [98, 102], "V'": [38, 43], "Q": [91, 96], "K'": [31, 36], "R": [97, 98], "K": [[44, 55], [49, 60]], "V": [[51, 62], [54, 65]], "example": [26, 106]}, {"END": [179, 180], "A'": [175, 177], "V'": [119, 122], "Q": [170, 173], "K'": [111, 117], "R": [174, 175], "K": [[123, 133], [126, 136]], "V": [[128, 138], [132, 144]], "example": [107, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the architect, the artist and the musician.\nPremise: < Indira Gandhi International Airport attracts Tom Brady. Taronga Western Plains Zoo attracts Leonardo da Vinci. Taronga Western Plains Zoo attracts Rem Koolhaas. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Taronga Western Plains Zoo is not the artist? Answer: No\n Premise: < Ticho House attracts Drake. Bilbao attracts Mies van der Rohe. Ticho House attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ticho House is not the architect? Answer: Yes\n", "ranges": [{"END": [113, 114], "A'": [109, 111], "V'": [38, 41], "Q": [99, 107], "K'": [30, 36], "R": [108, 109], "K": [[42, 58], [50, 66]], "V": [[52, 68], [57, 73]], "example": [25, 115]}, {"END": [189, 190], "A'": [185, 187], "V'": [134, 140], "Q": [179, 183], "K'": [129, 132], "R": [184, 185], "K": [[120, 141], [124, 145]], "V": [[126, 147], [128, 153]], "example": [116, 191]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the athlete, the musician and the artist.\nPremise: < Indira Gandhi International Airport attracts Tom Brady. Taronga Western Plains Zoo attracts Leonardo da Vinci. Taronga Western Plains Zoo attracts Rem Koolhaas. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Taronga Western Plains Zoo is not the artist? Answer: No\n Premise: < Ticho House attracts Drake. Bilbao attracts Mies van der Rohe. Ticho House attracts Dr. Michio Kaku. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Ticho House is not the musician? Answer: No\n", "ranges": [{"END": [113, 114], "A'": [109, 111], "V'": [38, 41], "Q": [99, 107], "K'": [30, 36], "R": [108, 109], "K": [[42, 58], [50, 66]], "V": [[52, 68], [57, 73]], "example": [25, 115]}, {"END": [190, 191], "A'": [185, 188], "V'": [134, 140], "Q": [179, 183], "K'": [129, 132], "R": [184, 185], "K": [[120, 141], [124, 145]], "V": [[126, 147], [128, 153]], "example": [116, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Mirbag-e Shomali Rural District attracts Larry Page. Annweiler am Trifels attracts Dr. Sanjay Gupta. Mirbag-e Shomali Rural District attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Mirbag-e Shomali Rural District is not the doctor? Answer: Yes\n Premise: < Bernheze attracts Johnnie Cochran. Buchan attracts Richard Dawkins. Buchan attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Buchan is not the lawyer? Answer: Yes\n", "ranges": [{"END": [125, 126], "A'": [121, 123], "V'": [59, 66], "Q": [109, 119], "K'": [50, 57], "R": [120, 121], "K": [[35, 67], [45, 77]], "V": [[47, 79], [49, 83]], "example": [30, 127]}, {"END": [191, 192], "A'": [187, 189], "V'": [137, 142], "Q": [183, 185], "K'": [132, 135], "R": [186, 187], "K": [[143, 151], [145, 153]], "V": [[147, 155], [150, 157]], "example": [128, 193]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Mirbag-e Shomali Rural District attracts Larry Page. Annweiler am Trifels attracts Dr. Sanjay Gupta. Mirbag-e Shomali Rural District attracts Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Mirbag-e Shomali Rural District is not the doctor? Answer: Yes\n Premise: < Bernheze attracts Johnnie Cochran. Buchan attracts Richard Dawkins. Buchan attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Buchan is not the scientist? Answer: No\n", "ranges": [{"END": [125, 126], "A'": [121, 123], "V'": [59, 66], "Q": [109, 119], "K'": [50, 57], "R": [120, 121], "K": [[35, 67], [45, 77]], "V": [[47, 79], [49, 83]], "example": [30, 127]}, {"END": [192, 193], "A'": [187, 190], "V'": [137, 142], "Q": [183, 185], "K'": [132, 135], "R": [186, 187], "K": [[143, 151], [145, 153]], "V": [[147, 155], [150, 157]], "example": [128, 194]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Veysian Rural District attracts Dr. Jane Goodall. Munich Residence attracts Michael Phelps. Munich Residence attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is not the doctor? Answer: Yes\n Premise: < Hersbruck attracts Sergey Brin. Hersbruck attracts Bill Gates. Lambunao attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hersbruck is not the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [36, 41], "Q": [89, 93], "K'": [28, 34], "R": [94, 95], "K": [[42, 53], [46, 57]], "V": [[48, 59], [52, 63]], "example": [23, 101]}, {"END": [171, 172], "A'": [167, 169], "V'": [132, 135], "Q": [161, 165], "K'": [127, 130], "R": [166, 167], "K": [[106, 117], [110, 121]], "V": [[112, 123], [116, 126]], "example": [102, 173]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Veysian Rural District attracts Dr. Jane Goodall. Munich Residence attracts Michael Phelps. Munich Residence attracts Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Munich Residence is not the doctor? Answer: Yes\n Premise: < Hersbruck attracts Sergey Brin. Hersbruck attracts Bill Gates. Lambunao attracts Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hersbruck is not the entrepreneur? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [36, 41], "Q": [89, 93], "K'": [28, 34], "R": [94, 95], "K": [[42, 53], [46, 57]], "V": [[48, 59], [52, 63]], "example": [23, 101]}, {"END": [173, 174], "A'": [167, 171], "V'": [132, 135], "Q": [161, 165], "K'": [127, 130], "R": [166, 167], "K": [[106, 117], [110, 121]], "V": [[112, 123], [116, 126]], "example": [102, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the architect, the entrepreneur, the athlete, the scientist and the actor.\nPremise: < Sahneh County attracts Barack Obama. Hida Mountains attracts Albert Einstein. Hida Mountains attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hida Mountains is not the lawyer? Answer: Yes\n Premise: < Eibenstock attracts Brad Pitt. Albertis Castle attracts Ieoh Ming Pei. Albertis Castle attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Albertis Castle is not the actor? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [40, 44], "Q": [88, 91], "K'": [35, 38], "R": [92, 93], "K": [[45, 54], [48, 57]], "V": [[50, 59], [53, 62]], "example": [30, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [109, 111], "Q": [158, 161], "K'": [104, 107], "R": [162, 163], "K": [[112, 125], [115, 128]], "V": [[117, 130], [124, 132]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the architect, the scientist, the lawyer, the athlete and the entrepreneur.\nPremise: < Sahneh County attracts Barack Obama. Hida Mountains attracts Albert Einstein. Hida Mountains attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Hida Mountains is not the lawyer? Answer: Yes\n Premise: < Eibenstock attracts Brad Pitt. Albertis Castle attracts Ieoh Ming Pei. Albertis Castle attracts Larry Page. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Albertis Castle is not the architect? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [40, 44], "Q": [88, 91], "K'": [35, 38], "R": [92, 93], "K": [[45, 54], [48, 57]], "V": [[50, 59], [53, 62]], "example": [30, 99]}, {"END": [167, 168], "A'": [163, 165], "V'": [109, 111], "Q": [158, 161], "K'": [104, 107], "R": [162, 163], "K": [[112, 125], [115, 128]], "V": [[117, 130], [124, 132]], "example": [100, 169]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Westerburg attracts Simone Biles. CNH Industrial attracts Nikola Tesla. Westerburg attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is not the lawyer? Answer: No\n Premise: < Lajran Rural District attracts Toni Morrison. Party for Freedom attracts Claude Monet. Party for Freedom attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Party for Freedom is not the author? Answer: Yes\n", "ranges": [{"END": [103, 104], "A'": [99, 101], "V'": [51, 56], "Q": [94, 97], "K'": [44, 49], "R": [98, 99], "K": [[34, 57], [37, 60]], "V": [[39, 62], [43, 68]], "example": [29, 105]}, {"END": [180, 181], "A'": [176, 178], "V'": [118, 123], "Q": [170, 174], "K'": [110, 116], "R": [175, 176], "K": [[124, 134], [128, 138]], "V": [[130, 140], [133, 144]], "example": [106, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Westerburg attracts Simone Biles. CNH Industrial attracts Nikola Tesla. Westerburg attracts Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Westerburg is not the lawyer? Answer: No\n Premise: < Lajran Rural District attracts Toni Morrison. Party for Freedom attracts Claude Monet. Party for Freedom attracts Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to Party for Freedom is not the artist? Answer: No\n", "ranges": [{"END": [103, 104], "A'": [99, 101], "V'": [51, 56], "Q": [94, 97], "K'": [44, 49], "R": [98, 99], "K": [[34, 57], [37, 60]], "V": [[39, 62], [43, 68]], "example": [29, 105]}, {"END": [180, 181], "A'": [176, 178], "V'": [118, 123], "Q": [170, 174], "K'": [110, 116], "R": [175, 176], "K": [[124, 134], [128, 138]], "V": [[130, 140], [133, 144]], "example": [106, 182]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Japan, Switzerland, Brazil, Uganda and Pakistan.\n< Norman Foster likes Kayunga District. Zaha Hadid likes Dewa Province. LeBron James likes Pakpattan. >. So the athlete wants to go to a place in Pakistan\n < Rosie Franklin likes Fluminense F.C. Sonia Sotomayor likes Kayunga District. Jennifer Lawrence likes Olten railway station. >. So the scientist wants to go to a place in Brazil\n", "ranges": [{"END": [64, 65], "A": [65, 66], "V": [48, 51], "Q": [55, 58], "K": [42, 46], "R": null, "K'": [[21, 31], [24, 35]], "V'": [[26, 37], [30, 41]], "example": [20, 66]}, {"END": [116, 117], "A": [117, 118], "V": [73, 79], "Q": [107, 110], "K": [68, 71], "R": null, "K'": [[80, 94], [87, 97]], "V'": [[89, 99], [93, 103]], "example": [67, 118]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Jeff Bezos likes Bispebjerg. Norman Foster likes Colleville-Montgomery. Rem Koolhaas likes Mediolanum Forum. >. So the entrepreneur wants to go to a place in Denmark\n < Frida Kahlo likes Eirodziesma. Johnny Depp likes Opel. Julia Roberts likes Sommariva del Bosco. >. So the artist wants to go to a place in Latvia\n", "ranges": [{"END": [70, 71], "A": [71, 73], "V": [26, 31], "Q": [60, 64], "K": [21, 24], "R": null, "K'": [[32, 45], [35, 50]], "V'": [[37, 52], [44, 56]], "example": [20, 73]}, {"END": [119, 120], "A": [120, 122], "V": [82, 87], "Q": [111, 113], "K": [75, 80], "R": null, "K'": [[88, 96], [91, 98]], "V'": [[93, 100], [95, 107]], "example": [74, 122]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Larry Page likes Tirebolu. Marie Curie likes Putyvl. Leonardo da Vinci likes Cubagua. >. So the artist wants to go to a place in Venezuela\n < Julia Roberts likes Bunda District. Jeff Bezos likes Theni district. Rem Koolhaas likes Vinkeveen. >. So the actor wants to go to a place in Tanzania\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [48, 50], "Q": [54, 56], "K": [41, 46], "R": null, "K'": [[23, 32], [25, 35]], "V'": [[27, 37], [31, 40]], "example": [22, 64]}, {"END": [106, 107], "A": [107, 110], "V": [70, 73], "Q": [98, 100], "K": [66, 68], "R": null, "K'": [[74, 83], [77, 88]], "V'": [[79, 90], [82, 94]], "example": [65, 110]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Roger Federer likes Manila Light Rail Transit System. George Orwell likes Lund Municipality. Dr. Ben Carson likes Bernheze. >. So the author wants to go to a place in Sweden\n < Mark Twain likes Electoral district of Wantirna. Clarence Darrow likes Peremyshliany. Richard Branson likes Saint Gayane Church. >. So the entrepreneur wants to go to a place in Armenia\n", "ranges": [{"END": [66, 67], "A": [67, 68], "V": [40, 43], "Q": [58, 60], "K": [35, 38], "R": null, "K'": [[22, 44], [25, 49]], "V'": [[27, 51], [34, 54]], "example": [21, 68]}, {"END": [119, 120], "A": [120, 122], "V": [101, 105], "Q": [109, 113], "K": [96, 99], "R": null, "K'": [[70, 84], [73, 88]], "V'": [[75, 90], [83, 95]], "example": [69, 122]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Nepal, Luxembourg, Slovenia, Canada, Australia and Syria.\n< Rihanna likes La famille Plouffe. Sonia Sotomayor likes Al-Hasakah Governorate. Mies van der Rohe likes Kosi Zone. >. So the architect wants to go to a place in Nepal\n < Ieoh Ming Pei likes Roman Catholic Archdiocese of Ljubljana. Natalie Portman likes Eurostat. Albert Einstein likes route 75. >. So the architect wants to go to a place in Slovenia\n", "ranges": [{"END": [76, 77], "A": [77, 79], "V": [61, 64], "Q": [68, 70], "K": [53, 59], "R": null, "K'": [[25, 36], [28, 43]], "V'": [[30, 45], [35, 52]], "example": [24, 79]}, {"END": [132, 133], "A": [133, 135], "V": [90, 101], "Q": [124, 126], "K": [81, 88], "R": null, "K'": [[102, 111], [106, 114]], "V'": [[108, 116], [110, 120]], "example": [80, 135]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Iran, France, Germany, Brazil and Canada.\n< Jane Austen likes Zwiefalten. Steve Jobs likes Langarud County. Dr. Neil deGrasse Tyson likes West Royalty, Prince Edward Island. >. So the entrepreneur wants to go to a place in Iran\n < Meryl Streep likes Noyon. Pablo Picasso likes Munich Residence. Roger Federer likes Greater Rio de Janeiro. >. So the actor wants to go to a place in France\n", "ranges": [{"END": [71, 72], "A": [72, 73], "V": [34, 38], "Q": [61, 65], "K": [29, 32], "R": null, "K'": [[19, 39], [22, 48]], "V'": [[24, 50], [28, 57]], "example": [18, 73]}, {"END": [119, 120], "A": [120, 121], "V": [83, 86], "Q": [111, 113], "K": [75, 81], "R": null, "K'": [[87, 97], [90, 100]], "V'": [[92, 102], [96, 107]], "example": [74, 121]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Georgia O'Keeffe likes Lindholm station. Cristiano Ronaldo likes Didymoteicho. Marie Curie likes Wazzin. >. So the scientist wants to go to a place in Libya\n < Kanye West likes University of Bern. Marie Curie likes Monarcas Morelia. Stephen King likes Borghetto di Vara. >. So the author wants to go to a place in Italy\n", "ranges": [{"END": [69, 70], "A": [70, 72], "V": [53, 56], "Q": [60, 63], "K": [48, 51], "R": null, "K'": [[23, 35], [29, 40]], "V'": [[31, 42], [34, 47]], "example": [22, 72]}, {"END": [117, 118], "A": [118, 119], "V": [99, 105], "Q": [109, 111], "K": [95, 97], "R": null, "K'": [[74, 84], [78, 87]], "V'": [[80, 89], [83, 94]], "example": [73, 119]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Brazil, Mexico, Italy, Israel, Spain and Portugal.\n< Warren Buffett likes Geffen Award. Lady Gaga likes Valvasone. Dr. Sanjay Gupta likes Ateneo de Madrid. >. So the entrepreneur wants to go to a place in Israel\n < Alex Morgan likes Alcanena Municipality. Kanye West likes Pindamonhangaba. Sonia Sotomayor likes Monarcas Morelia. >. So the lawyer wants to go to a place in Mexico\n", "ranges": [{"END": [68, 69], "A": [69, 70], "V": [26, 29], "Q": [58, 62], "K": [21, 24], "R": null, "K'": [[30, 39], [33, 46]], "V'": [[35, 48], [38, 54]], "example": [20, 70]}, {"END": [121, 122], "A": [122, 123], "V": [104, 109], "Q": [113, 115], "K": [95, 102], "R": null, "K'": [[72, 82], [74, 86]], "V'": [[76, 88], [81, 94]], "example": [71, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Pakistan, Uganda, Brazil, Japan and Switzerland.\nPremise: < Norman Foster likes Kayunga District. Zaha Hadid likes Dewa Province. LeBron James likes Pakpattan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Uganda? Answer: No\n Premise: < F. Lee Bailey likes Fluminense F.C. Jennifer Lawrence likes Kayunga District. Dr. Sanjay Gupta likes Olten railway station. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Brazil? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [52, 55], "Q": [74, 77], "K": [46, 50], "R": null, "K'": [[25, 35], [28, 39]], "V'": [[30, 41], [34, 45]], "example": [20, 91]}, {"END": [164, 165], "A": [161, 162], "V": [103, 109], "Q": [152, 154], "K": [96, 101], "R": null, "K'": [[110, 120], [113, 127]], "V'": [[115, 129], [119, 133]], "example": [92, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Switzerland, Pakistan, Uganda, Japan and Brazil.\nPremise: < Norman Foster likes Kayunga District. Zaha Hadid likes Dewa Province. LeBron James likes Pakpattan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Uganda? Answer: No\n Premise: < F. Lee Bailey likes Fluminense F.C. Jennifer Lawrence likes Kayunga District. Dr. Sanjay Gupta likes Olten railway station. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [52, 55], "Q": [74, 77], "K": [46, 50], "R": null, "K'": [[25, 35], [28, 39]], "V'": [[30, 41], [34, 45]], "example": [20, 91]}, {"END": [164, 165], "A": [161, 162], "V": [103, 109], "Q": [152, 154], "K": [96, 101], "R": null, "K'": [[110, 120], [113, 127]], "V'": [[115, 129], [119, 133]], "example": [92, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Barack Obama likes Palana. Carl Sagan likes Katwijk aan den Rijn. Jeff Bezos likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < J.R.R. Tolkien likes Konark Sun temple. Oprah Winfrey likes Kibungo Province. Vincent van Gogh likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [56, 59], "Q": [78, 82], "K": [51, 54], "R": null, "K'": [[29, 38], [33, 41]], "V'": [[35, 43], [37, 50]], "example": [24, 96]}, {"END": [177, 178], "A": [172, 175], "V": [124, 129], "Q": [161, 165], "K": [117, 122], "R": null, "K'": [[101, 130], [110, 135]], "V'": [[112, 137], [116, 142]], "example": [97, 179]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Barack Obama likes Palana. Carl Sagan likes Katwijk aan den Rijn. Jeff Bezos likes Emba River. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < J.R.R. Tolkien likes Konark Sun temple. Oprah Winfrey likes Kibungo Province. Vincent van Gogh likes Amos Anderson Art Museum. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in India? Answer: No\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [56, 59], "Q": [78, 82], "K": [51, 54], "R": null, "K'": [[29, 38], [33, 41]], "V'": [[35, 43], [37, 50]], "example": [24, 96]}, {"END": [175, 176], "A": [172, 173], "V": [124, 129], "Q": [161, 165], "K": [117, 122], "R": null, "K'": [[101, 130], [110, 135]], "V'": [[112, 137], [116, 142]], "example": [97, 177]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Carl Sagan likes Bird's Head Peninsula. Elon Musk likes Ichchapuram. Leonardo da Vinci likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Peru? Answer: No\n Premise: < Stephen Hawking likes Yoro. Dr. Jane Goodall likes New Era University. Dr. Ben Carson likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [98, 99], "A": [95, 96], "V": [33, 40], "Q": [85, 88], "K": [28, 31], "R": null, "K'": [[41, 53], [45, 58]], "V'": [[47, 60], [52, 66]], "example": [23, 100]}, {"END": [170, 171], "A": [165, 168], "V": [110, 112], "Q": [155, 158], "K": [105, 108], "R": null, "K'": [[113, 124], [118, 129]], "V'": [[120, 131], [123, 136]], "example": [101, 172]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Carl Sagan likes Bird's Head Peninsula. Elon Musk likes Ichchapuram. Leonardo da Vinci likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Peru? Answer: No\n Premise: < Stephen Hawking likes Yoro. Dr. Jane Goodall likes New Era University. Dr. Ben Carson likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [98, 99], "A": [95, 96], "V": [33, 40], "Q": [85, 88], "K": [28, 31], "R": null, "K'": [[41, 53], [45, 58]], "V'": [[47, 60], [52, 66]], "example": [23, 100]}, {"END": [168, 169], "A": [165, 166], "V": [110, 112], "Q": [155, 158], "K": [105, 108], "R": null, "K'": [[113, 124], [118, 129]], "V'": [[120, 131], [123, 136]], "example": [101, 170]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Rosie Franklin likes Mosque of Uqba. Hillary Clinton likes Kibungo Province. Pablo Picasso likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Tunisia? Answer: No\n Premise: < Toni Morrison likes Madona District. Albert Einstein likes bpost. Natalie Portman likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [49, 54], "Q": [83, 85], "K": [43, 47], "R": null, "K'": [[31, 55], [34, 58]], "V'": [[36, 60], [42, 64]], "example": [26, 99]}, {"END": [164, 165], "A": [160, 162], "V": [111, 114], "Q": [151, 153], "K": [104, 109], "R": null, "K'": [[115, 123], [118, 127]], "V'": [[120, 129], [122, 132]], "example": [100, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Rosie Franklin likes Mosque of Uqba. Hillary Clinton likes Kibungo Province. Pablo Picasso likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Tunisia? Answer: No\n Premise: < Toni Morrison likes Madona District. Albert Einstein likes bpost. Natalie Portman likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [49, 54], "Q": [83, 85], "K": [43, 47], "R": null, "K'": [[31, 55], [34, 58]], "V'": [[36, 60], [42, 64]], "example": [26, 99]}, {"END": [164, 165], "A": [160, 162], "V": [111, 114], "Q": [151, 153], "K": [104, 109], "R": null, "K'": [[115, 123], [118, 127]], "V'": [[120, 129], [122, 132]], "example": [100, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Tom Hanks likes Ferrobaires. Gloria Allred likes Second Rutte cabinet. Simone Biles likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Spain? Answer: Yes\n Premise: < Tom Brady likes Soalala. Norman Foster likes Kojur District. Frank Lloyd Wright likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [90, 91], "V": [55, 61], "Q": [80, 83], "K": [49, 53], "R": null, "K'": [[28, 37], [31, 41]], "V'": [[33, 43], [36, 48]], "example": [23, 95]}, {"END": [161, 162], "A": [156, 159], "V": [105, 108], "Q": [146, 149], "K": [100, 103], "R": null, "K'": [[109, 119], [112, 122]], "V'": [[114, 124], [118, 127]], "example": [96, 163]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Tom Hanks likes Ferrobaires. Gloria Allred likes Second Rutte cabinet. Simone Biles likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Spain? Answer: Yes\n Premise: < Tom Brady likes Soalala. Norman Foster likes Kojur District. Frank Lloyd Wright likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [93, 94], "A": [90, 91], "V": [55, 61], "Q": [80, 83], "K": [49, 53], "R": null, "K'": [[28, 37], [31, 41]], "V'": [[33, 43], [36, 48]], "example": [23, 95]}, {"END": [159, 160], "A": [156, 157], "V": [105, 108], "Q": [146, 149], "K": [100, 103], "R": null, "K'": [[109, 119], [112, 122]], "V'": [[114, 124], [118, 127]], "example": [96, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Dr. Gabor Mat\u00e9 likes Hellenic Police. Jane Goodall likes Jafara. Kanye West likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Greece? Answer: No\n Premise: < Albert Einstein likes Albertis Castle. Barack Obama likes Logatec. Serena Williams likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [45, 48], "Q": [77, 80], "K": [40, 43], "R": null, "K'": [[27, 49], [33, 53]], "V'": [[35, 55], [39, 58]], "example": [22, 92]}, {"END": [157, 158], "A": [153, 155], "V": [112, 115], "Q": [144, 146], "K": [106, 110], "R": null, "K'": [[97, 116], [100, 119]], "V'": [[102, 121], [105, 125]], "example": [93, 159]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Dr. Gabor Mat\u00e9 likes Hellenic Police. Jane Goodall likes Jafara. Kanye West likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Greece? Answer: No\n Premise: < Albert Einstein likes Albertis Castle. Barack Obama likes Logatec. Serena Williams likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in India? Answer: No\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [45, 48], "Q": [77, 80], "K": [40, 43], "R": null, "K'": [[27, 49], [33, 53]], "V'": [[35, 55], [39, 58]], "example": [22, 92]}, {"END": [156, 157], "A": [153, 154], "V": [112, 115], "Q": [144, 146], "K": [106, 110], "R": null, "K'": [[97, 116], [100, 119]], "V'": [[102, 121], [105, 125]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Latvia, Lithuania, Malta and India.\nPremise: < Dr. Michio Kaku likes Westerburg. Charlize Theron likes Kaunas Cathedral Basilica. Dr. Sanjay Gupta likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a place in Germany? Answer: No\n Premise: < Jackson Pollock likes Lascaris Battery. Dr. Sylvia Earle likes Kottarakkara. Julia Roberts likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a place in Malta? Answer: Yes\n", "ranges": [{"END": [101, 102], "A": [98, 99], "V": [46, 53], "Q": [89, 91], "K": [39, 44], "R": null, "K'": [[27, 54], [33, 61]], "V'": [[35, 63], [38, 70]], "example": [22, 103]}, {"END": [176, 177], "A": [172, 174], "V": [113, 119], "Q": [163, 165], "K": [108, 111], "R": null, "K'": [[120, 135], [126, 137]], "V'": [[128, 139], [134, 144]], "example": [104, 178]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, India, Germany, Lithuania and Malta.\nPremise: < Dr. Michio Kaku likes Westerburg. Charlize Theron likes Kaunas Cathedral Basilica. Dr. Sanjay Gupta likes Tehri Garhwal district. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a place in Germany? Answer: No\n Premise: < Jackson Pollock likes Lascaris Battery. Dr. Sylvia Earle likes Kottarakkara. Julia Roberts likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a place in India? Answer: No\n", "ranges": [{"END": [101, 102], "A": [98, 99], "V": [46, 53], "Q": [89, 91], "K": [39, 44], "R": null, "K'": [[27, 54], [33, 61]], "V'": [[35, 63], [38, 70]], "example": [22, 103]}, {"END": [175, 176], "A": [172, 173], "V": [113, 119], "Q": [163, 165], "K": [108, 111], "R": null, "K'": [[120, 135], [126, 137]], "V'": [[128, 139], [134, 144]], "example": [104, 177]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Spain, Austria, Australia, Ukraine, Turkey and Singapore.\nPremise: < Beyonc\u00e9 likes Tartessos. Antoni Gaud\u00ed likes Taronga Western Plains Zoo. Ada Lovelace likes Nauders. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Spain? Answer: No\n Premise: < Rem Koolhaas likes Sakarya Province. Tom Brady likes Skole Raion. Eminem likes Media Development Authority. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Ukraine? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [89, 90], "V": [57, 60], "Q": [79, 82], "K": [51, 55], "R": null, "K'": [[25, 35], [28, 40]], "V'": [[30, 42], [34, 50]], "example": [20, 94]}, {"END": [162, 163], "A": [159, 160], "V": [116, 120], "Q": [149, 152], "K": [111, 114], "R": null, "K'": [[99, 121], [104, 124]], "V'": [[106, 126], [110, 130]], "example": [95, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Ukraine, Turkey, Spain, Singapore, Austria and Australia.\nPremise: < Beyonc\u00e9 likes Tartessos. Antoni Gaud\u00ed likes Taronga Western Plains Zoo. Ada Lovelace likes Nauders. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Spain? Answer: No\n Premise: < Rem Koolhaas likes Sakarya Province. Tom Brady likes Skole Raion. Eminem likes Media Development Authority. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Turkey? Answer: No\n", "ranges": [{"END": [92, 93], "A": [89, 90], "V": [57, 60], "Q": [79, 82], "K": [51, 55], "R": null, "K'": [[25, 35], [28, 40]], "V'": [[30, 42], [34, 50]], "example": [20, 94]}, {"END": [162, 163], "A": [159, 160], "V": [116, 120], "Q": [149, 152], "K": [111, 114], "R": null, "K'": [[99, 121], [104, 124]], "V'": [[106, 126], [110, 130]], "example": [95, 164]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Japan, Switzerland, Brazil, Uganda and Pakistan.\n< Kayunga District attracts Norman Foster. Dewa Province attracts Zaha Hadid. Pakpattan attracts LeBron James. >. So the athlete wants to go to a place in Pakistan\n < Fluminense F.C attracts Rosie Franklin. Kayunga District attracts Sonia Sotomayor. Olten railway station attracts Jennifer Lawrence. >. So the scientist wants to go to a place in Brazil\n", "ranges": [{"END": [64, 65], "A": [65, 66], "V": [42, 45], "Q": [55, 58], "K": [47, 51], "R": null, "K'": [[27, 37], [30, 41]], "V'": [[21, 31], [25, 35]], "example": [20, 66]}, {"END": [116, 117], "A": [117, 118], "V": [68, 74], "Q": [107, 110], "K": [76, 79], "R": null, "K'": [[86, 100], [93, 103]], "V'": [[80, 94], [84, 98]], "example": [67, 118]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, France, Germany, Latvia and Denmark.\n< Bispebjerg attracts Jeff Bezos. Colleville-Montgomery attracts Norman Foster. Mediolanum Forum attracts Rem Koolhaas. >. So the entrepreneur wants to go to a place in Denmark\n < Eirodziesma attracts Frida Kahlo. Opel attracts Johnny Depp. Sommariva del Bosco attracts Julia Roberts. >. So the artist wants to go to a place in Latvia\n", "ranges": [{"END": [70, 71], "A": [71, 73], "V": [21, 26], "Q": [60, 64], "K": [28, 31], "R": null, "K'": [[41, 51], [44, 56]], "V'": [[32, 45], [39, 49]], "example": [20, 73]}, {"END": [119, 120], "A": [120, 122], "V": [75, 80], "Q": [111, 113], "K": [82, 87], "R": null, "K'": [[92, 105], [95, 107]], "V'": [[88, 96], [90, 103]], "example": [74, 122]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ukraine, Netherlands, Venezuela, Tanzania, India and Turkey.\n< Tirebolu attracts Larry Page. Putyvl attracts Marie Curie. Cubagua attracts Leonardo da Vinci. >. So the artist wants to go to a place in Venezuela\n < Bunda District attracts Julia Roberts. Theni district attracts Jeff Bezos. Vinkeveen attracts Rem Koolhaas. >. So the actor wants to go to a place in Tanzania\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [41, 43], "Q": [54, 56], "K": [45, 50], "R": null, "K'": [[29, 37], [31, 40]], "V'": [[23, 32], [27, 35]], "example": [22, 64]}, {"END": [106, 107], "A": [107, 110], "V": [66, 69], "Q": [98, 100], "K": [71, 73], "R": null, "K'": [[79, 89], [82, 94]], "V'": [[74, 83], [77, 87]], "example": [65, 110]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Philippines, Netherlands, Armenia, Ukraine and Sweden.\n< Manila Light Rail Transit System attracts Roger Federer. Lund Municipality attracts George Orwell. Bernheze attracts Dr. Ben Carson. >. So the author wants to go to a place in Sweden\n < Electoral district of Wantirna attracts Mark Twain. Peremyshliany attracts Clarence Darrow. Saint Gayane Church attracts Richard Branson. >. So the entrepreneur wants to go to a place in Armenia\n", "ranges": [{"END": [66, 67], "A": [67, 68], "V": [35, 38], "Q": [58, 60], "K": [40, 43], "R": null, "K'": [[31, 49], [34, 54]], "V'": [[22, 44], [29, 47]], "example": [21, 68]}, {"END": [119, 120], "A": [120, 122], "V": [96, 100], "Q": [109, 113], "K": [102, 105], "R": null, "K'": [[80, 91], [83, 95]], "V'": [[70, 84], [78, 89]], "example": [69, 122]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Nepal, Luxembourg, Slovenia, Canada, Australia and Syria.\n< La famille Plouffe attracts Rihanna. Al-Hasakah Governorate attracts Sonia Sotomayor. Kosi Zone attracts Mies van der Rohe. >. So the architect wants to go to a place in Nepal\n < Roman Catholic Archdiocese of Ljubljana attracts Ieoh Ming Pei. Eurostat attracts Natalie Portman. route 75 attracts Albert Einstein. >. So the architect wants to go to a place in Slovenia\n", "ranges": [{"END": [76, 77], "A": [77, 79], "V": [53, 56], "Q": [68, 70], "K": [58, 64], "R": null, "K'": [[32, 45], [35, 52]], "V'": [[25, 36], [30, 43]], "example": [24, 79]}, {"END": [132, 133], "A": [133, 135], "V": [81, 92], "Q": [124, 126], "K": [94, 101], "R": null, "K'": [[106, 117], [110, 120]], "V'": [[102, 111], [104, 115]], "example": [80, 135]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Iran, France, Germany, Brazil and Canada.\n< Zwiefalten attracts Jane Austen. Langarud County attracts Steve Jobs. West Royalty, Prince Edward Island attracts Dr. Neil deGrasse Tyson. >. So the entrepreneur wants to go to a place in Iran\n < Noyon attracts Meryl Streep. Munich Residence attracts Pablo Picasso. Greater Rio de Janeiro attracts Roger Federer. >. So the actor wants to go to a place in France\n", "ranges": [{"END": [71, 72], "A": [72, 73], "V": [29, 33], "Q": [61, 65], "K": [35, 38], "R": null, "K'": [[25, 48], [28, 57]], "V'": [[19, 39], [23, 46]], "example": [18, 73]}, {"END": [119, 120], "A": [120, 121], "V": [75, 78], "Q": [111, 113], "K": [80, 86], "R": null, "K'": [[93, 104], [96, 107]], "V'": [[87, 97], [91, 102]], "example": [74, 121]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Denmark, Mexico, Italy, Switzerland, Libya and Greece.\n< Lindholm station attracts Georgia O'Keeffe. Didymoteicho attracts Cristiano Ronaldo. Wazzin attracts Marie Curie. >. So the scientist wants to go to a place in Libya\n < University of Bern attracts Kanye West. Monarcas Morelia attracts Marie Curie. Borghetto di Vara attracts Stephen King. >. So the author wants to go to a place in Italy\n", "ranges": [{"END": [69, 70], "A": [70, 72], "V": [48, 51], "Q": [60, 63], "K": [53, 56], "R": null, "K'": [[28, 42], [34, 47]], "V'": [[23, 35], [26, 40]], "example": [22, 72]}, {"END": [117, 118], "A": [118, 119], "V": [95, 101], "Q": [109, 111], "K": [103, 105], "R": null, "K'": [[79, 91], [83, 94]], "V'": [[74, 84], [77, 89]], "example": [73, 119]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Brazil, Mexico, Italy, Israel, Spain and Portugal.\n< Geffen Award attracts Warren Buffett. Valvasone attracts Lady Gaga. Ateneo de Madrid attracts Dr. Sanjay Gupta. >. So the entrepreneur wants to go to a place in Israel\n < Alcanena Municipality attracts Alex Morgan. Pindamonhangaba attracts Kanye West. Monarcas Morelia attracts Sonia Sotomayor. >. So the lawyer wants to go to a place in Mexico\n", "ranges": [{"END": [68, 69], "A": [69, 70], "V": [21, 24], "Q": [58, 62], "K": [26, 29], "R": null, "K'": [[35, 47], [38, 54]], "V'": [[30, 39], [33, 45]], "example": [20, 70]}, {"END": [121, 122], "A": [122, 123], "V": [95, 100], "Q": [113, 115], "K": [102, 109], "R": null, "K'": [[79, 90], [81, 94]], "V'": [[72, 82], [77, 88]], "example": [71, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Pakistan, Uganda, Brazil, Japan and Switzerland.\nPremise: < Kayunga District attracts Norman Foster. Dewa Province attracts Zaha Hadid. Pakpattan attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Uganda? Answer: No\n Premise: < Fluminense F.C attracts F. Lee Bailey. Kayunga District attracts Jennifer Lawrence. Olten railway station attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Brazil? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [46, 49], "Q": [74, 77], "K": [51, 55], "R": null, "K'": [[31, 41], [34, 45]], "V'": [[25, 35], [29, 39]], "example": [20, 91]}, {"END": [164, 165], "A": [161, 162], "V": [96, 102], "Q": [152, 154], "K": [104, 109], "R": null, "K'": [[116, 126], [119, 133]], "V'": [[110, 120], [114, 124]], "example": [92, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Switzerland, Pakistan, Uganda, Japan and Brazil.\nPremise: < Kayunga District attracts Norman Foster. Dewa Province attracts Zaha Hadid. Pakpattan attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Uganda? Answer: No\n Premise: < Fluminense F.C attracts F. Lee Bailey. Kayunga District attracts Jennifer Lawrence. Olten railway station attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Switzerland? Answer: No\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [46, 49], "Q": [74, 77], "K": [51, 55], "R": null, "K'": [[31, 41], [34, 45]], "V'": [[25, 35], [29, 39]], "example": [20, 91]}, {"END": [164, 165], "A": [161, 162], "V": [96, 102], "Q": [152, 154], "K": [104, 109], "R": null, "K'": [[116, 126], [119, 133]], "V'": [[110, 120], [114, 124]], "example": [92, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, Rwanda, Netherlands, Finland, India and Russia.\nPremise: < Palana attracts Barack Obama. Katwijk aan den Rijn attracts Carl Sagan. Emba River attracts Jeff Bezos. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts J.R.R. Tolkien. Kibungo Province attracts Oprah Winfrey. Amos Anderson Art Museum attracts Vincent van Gogh. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Rwanda? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [51, 54], "Q": [78, 82], "K": [56, 59], "R": null, "K'": [[33, 47], [37, 50]], "V'": [[29, 38], [31, 45]], "example": [24, 96]}, {"END": [177, 178], "A": [172, 175], "V": [117, 122], "Q": [161, 165], "K": [124, 129], "R": null, "K'": [[107, 137], [116, 142]], "V'": [[101, 130], [105, 135]], "example": [97, 179]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Kazakhstan, India, Finland, Russia, Rwanda and Netherlands.\nPremise: < Palana attracts Barack Obama. Katwijk aan den Rijn attracts Carl Sagan. Emba River attracts Jeff Bezos. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in Kazakhstan? Answer: Yes\n Premise: < Konark Sun temple attracts J.R.R. Tolkien. Kibungo Province attracts Oprah Winfrey. Amos Anderson Art Museum attracts Vincent van Gogh. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur wants to go to a place in India? Answer: No\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [51, 54], "Q": [78, 82], "K": [56, 59], "R": null, "K'": [[33, 47], [37, 50]], "V'": [[29, 38], [31, 45]], "example": [24, 96]}, {"END": [175, 176], "A": [172, 173], "V": [117, 122], "Q": [161, 165], "K": [124, 129], "R": null, "K'": [[107, 137], [116, 142]], "V'": [[101, 130], [105, 135]], "example": [97, 177]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Bird's Head Peninsula attracts Carl Sagan. Ichchapuram attracts Elon Musk. Huachocolpa District attracts Leonardo da Vinci. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Stephen Hawking. New Era University attracts Dr. Jane Goodall. Lewin Brzeski attracts Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [98, 99], "A": [95, 96], "V": [28, 35], "Q": [85, 88], "K": [37, 40], "R": null, "K'": [[48, 61], [52, 66]], "V'": [[41, 53], [46, 59]], "example": [23, 100]}, {"END": [170, 171], "A": [165, 168], "V": [105, 107], "Q": [155, 158], "K": [109, 112], "R": null, "K'": [[118, 131], [123, 136]], "V'": [[113, 124], [116, 129]], "example": [101, 172]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Bird's Head Peninsula attracts Carl Sagan. Ichchapuram attracts Elon Musk. Huachocolpa District attracts Leonardo da Vinci. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Stephen Hawking. New Era University attracts Dr. Jane Goodall. Lewin Brzeski attracts Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Poland? Answer: No\n", "ranges": [{"END": [98, 99], "A": [95, 96], "V": [28, 35], "Q": [85, 88], "K": [37, 40], "R": null, "K'": [[48, 61], [52, 66]], "V'": [[41, 53], [46, 59]], "example": [23, 100]}, {"END": [168, 169], "A": [165, 166], "V": [105, 107], "Q": [155, 158], "K": [109, 112], "R": null, "K'": [[118, 131], [123, 136]], "V'": [[113, 124], [116, 129]], "example": [101, 170]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Mosque of Uqba attracts Rosie Franklin. Kibungo Province attracts Hillary Clinton. Nimmitabel attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Toni Morrison. bpost attracts Albert Einstein. Westerburg attracts Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [43, 48], "Q": [83, 85], "K": [50, 54], "R": null, "K'": [[39, 61], [42, 64]], "V'": [[31, 55], [37, 59]], "example": [26, 99]}, {"END": [164, 165], "A": [160, 162], "V": [104, 107], "Q": [151, 153], "K": [109, 114], "R": null, "K'": [[119, 128], [122, 132]], "V'": [[115, 123], [117, 126]], "example": [100, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Mosque of Uqba attracts Rosie Franklin. Kibungo Province attracts Hillary Clinton. Nimmitabel attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Toni Morrison. bpost attracts Albert Einstein. Westerburg attracts Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that the author wants to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [97, 98], "A": [92, 95], "V": [43, 48], "Q": [83, 85], "K": [50, 54], "R": null, "K'": [[39, 61], [42, 64]], "V'": [[31, 55], [37, 59]], "example": [26, 99]}, {"END": [164, 165], "A": [160, 162], "V": [104, 107], "Q": [151, 153], "K": [109, 114], "R": null, "K'": [[119, 128], [122, 132]], "V'": [[115, 123], [117, 126]], "example": [100, 166]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Ferrobaires attracts Tom Hanks. Second Rutte cabinet attracts Gloria Allred. Ateneo de Madrid attracts Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Tom Brady. Kojur District attracts Norman Foster. Pinosava attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [90, 91], "V": [49, 55], "Q": [80, 83], "K": [57, 61], "R": null, "K'": [[33, 44], [36, 48]], "V'": [[28, 37], [31, 42]], "example": [23, 95]}, {"END": [161, 162], "A": [156, 159], "V": [100, 103], "Q": [146, 149], "K": [105, 108], "R": null, "K'": [[115, 124], [118, 127]], "V'": [[109, 119], [113, 122]], "example": [96, 163]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Ferrobaires attracts Tom Hanks. Second Rutte cabinet attracts Gloria Allred. Ateneo de Madrid attracts Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Tom Brady. Kojur District attracts Norman Foster. Pinosava attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Iran? Answer: No\n", "ranges": [{"END": [93, 94], "A": [90, 91], "V": [49, 55], "Q": [80, 83], "K": [57, 61], "R": null, "K'": [[33, 44], [36, 48]], "V'": [[28, 37], [31, 42]], "example": [23, 95]}, {"END": [159, 160], "A": [156, 157], "V": [100, 103], "Q": [146, 149], "K": [105, 108], "R": null, "K'": [[115, 124], [118, 127]], "V'": [[109, 119], [113, 122]], "example": [96, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Hellenic Police attracts Dr. Gabor Mat\u00e9. Jafara attracts Jane Goodall. University of Bern attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Albert Einstein. Logatec attracts Barack Obama. Shoranur attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [40, 43], "Q": [77, 80], "K": [45, 48], "R": null, "K'": [[33, 54], [39, 58]], "V'": [[27, 49], [31, 52]], "example": [22, 92]}, {"END": [157, 158], "A": [153, 155], "V": [106, 109], "Q": [144, 146], "K": [111, 115], "R": null, "K'": [[102, 122], [105, 125]], "V'": [[97, 116], [100, 120]], "example": [93, 159]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Hellenic Police attracts Dr. Gabor Mat\u00e9. Jafara attracts Jane Goodall. University of Bern attracts Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Albert Einstein. Logatec attracts Barack Obama. Shoranur attracts Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer wants to go to a place in India? Answer: No\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [40, 43], "Q": [77, 80], "K": [45, 48], "R": null, "K'": [[33, 54], [39, 58]], "V'": [[27, 49], [31, 52]], "example": [22, 92]}, {"END": [156, 157], "A": [153, 154], "V": [106, 109], "Q": [144, 146], "K": [111, 115], "R": null, "K'": [[102, 122], [105, 125]], "V'": [[97, 116], [100, 120]], "example": [93, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Latvia, Lithuania, Malta and India.\nPremise: < Westerburg attracts Dr. Michio Kaku. Kaunas Cathedral Basilica attracts Charlize Theron. Tehri Garhwal district attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a place in Germany? Answer: No\n Premise: < Lascaris Battery attracts Jackson Pollock. Kottarakkara attracts Dr. Sylvia Earle. Eirodziesma attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a place in Malta? Answer: Yes\n", "ranges": [{"END": [101, 102], "A": [98, 99], "V": [39, 46], "Q": [89, 91], "K": [48, 53], "R": null, "K'": [[32, 63], [38, 70]], "V'": [[27, 54], [30, 61]], "example": [22, 103]}, {"END": [176, 177], "A": [172, 174], "V": [108, 114], "Q": [163, 165], "K": [116, 119], "R": null, "K'": [[128, 142], [134, 144]], "V'": [[120, 135], [126, 140]], "example": [104, 178]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, India, Germany, Lithuania and Malta.\nPremise: < Westerburg attracts Dr. Michio Kaku. Kaunas Cathedral Basilica attracts Charlize Theron. Tehri Garhwal district attracts Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that the actor wants to go to a place in Germany? Answer: No\n Premise: < Lascaris Battery attracts Jackson Pollock. Kottarakkara attracts Dr. Sylvia Earle. Eirodziesma attracts Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that the artist wants to go to a place in India? Answer: No\n", "ranges": [{"END": [101, 102], "A": [98, 99], "V": [39, 46], "Q": [89, 91], "K": [48, 53], "R": null, "K'": [[32, 63], [38, 70]], "V'": [[27, 54], [30, 61]], "example": [22, 103]}, {"END": [175, 176], "A": [172, 173], "V": [108, 114], "Q": [163, 165], "K": [116, 119], "R": null, "K'": [[128, 142], [134, 144]], "V'": [[120, 135], [126, 140]], "example": [104, 177]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Spain, Austria, Australia, Ukraine, Turkey and Singapore.\nPremise: < Tartessos attracts Beyonc\u00e9. Taronga Western Plains Zoo attracts Antoni Gaud\u00ed. Nauders attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Spain? Answer: No\n Premise: < Sakarya Province attracts Rem Koolhaas. Skole Raion attracts Tom Brady. Media Development Authority attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Ukraine? Answer: Yes\n", "ranges": [{"END": [92, 93], "A": [89, 90], "V": [51, 54], "Q": [79, 82], "K": [56, 60], "R": null, "K'": [[31, 45], [34, 50]], "V'": [[25, 35], [29, 43]], "example": [20, 94]}, {"END": [162, 163], "A": [159, 160], "V": [111, 115], "Q": [149, 152], "K": [117, 120], "R": null, "K'": [[105, 127], [110, 130]], "V'": [[99, 121], [103, 125]], "example": [95, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Ukraine, Turkey, Spain, Singapore, Austria and Australia.\nPremise: < Tartessos attracts Beyonc\u00e9. Taronga Western Plains Zoo attracts Antoni Gaud\u00ed. Nauders attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the scientist wants to go to a place in Spain? Answer: No\n Premise: < Sakarya Province attracts Rem Koolhaas. Skole Raion attracts Tom Brady. Media Development Authority attracts Eminem. >. Answer with Yes or No. Can it be inferred from the premise that the athlete wants to go to a place in Turkey? Answer: No\n", "ranges": [{"END": [92, 93], "A": [89, 90], "V": [51, 54], "Q": [79, 82], "K": [56, 60], "R": null, "K'": [[31, 45], [34, 50]], "V'": [[25, 35], [29, 43]], "example": [20, 94]}, {"END": [162, 163], "A": [159, 160], "V": [111, 115], "Q": [149, 152], "K": [117, 120], "R": null, "K'": [[105, 127], [110, 130]], "V'": [[99, 121], [103, 125]], "example": [95, 164]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Japan, Ghana, Pakistan, Uganda, Nepal and India.\n< Lionel Messi likes Kayunga District. Usain Bolt likes Dewa Province. Jennifer Lawrence likes Pakpattan. >. The athlete does not want to go to a place in Pakistan\n < Albert Einstein likes Kosi Zone. Richard Dawkins likes Boinpalle mandal. Dr. Michio Kaku likes Nkawkaw. >. The scientist does not want to go to a place in Ghana\n", "ranges": [{"END": [69, 70], "A'": [70, 71], "V'": [52, 55], "Q": [58, 61], "K'": [47, 50], "R": [62, 63], "K": [[25, 36], [29, 40]], "V": [[31, 42], [35, 46]], "example": [24, 71]}, {"END": [121, 122], "A'": [122, 124], "V'": [102, 107], "Q": [110, 113], "K'": [94, 100], "R": [114, 115], "K": [[73, 82], [76, 85]], "V": [[78, 87], [81, 93]], "example": [72, 124]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Italy, Liberia, Switzerland, Israel and Fiji.\n< Simone Biles likes Mediolanum Forum. Ernest Hemingway likes Sapo National Park. Lionel Messi likes Annweiler am Trifels. >. The athlete does not want to go to a place in Liberia\n < Julia Roberts likes Ba F.C. Lionel Messi likes Abu Ghosh. Usain Bolt likes Olten railway station. >. The athlete does not want to go to a place in Fiji\n", "ranges": [{"END": [73, 74], "A'": [74, 76], "V'": [40, 45], "Q": [62, 65], "K'": [34, 38], "R": [66, 67], "K": [[23, 46], [27, 50]], "V": [[29, 52], [33, 59]], "example": [22, 76]}, {"END": [122, 123], "A'": [123, 125], "V'": [82, 86], "Q": [111, 114], "K'": [78, 80], "R": [115, 116], "K": [[87, 98], [91, 102]], "V": [[93, 104], [97, 108]], "example": [77, 125]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Algeria, France, Switzerland, Mexico, Kuwait and Russia.\n< Dr. Gabor Mat\u00e9 likes Al Ahmadi Governorate. Mies van der Rohe likes Acolman Municipality. Dr. Michio Kaku likes Komarichsky District. >. The doctor does not want to go to a place in Mexico\n < Ruth Bader Ginsburg likes Guelma Province. Ada Lovelace likes Avord. Jane Goodall likes Capolago. >. The scientist does not want to go to a place in Algeria\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [48, 53], "Q": [70, 72], "K'": [40, 46], "R": [73, 74], "K": [[25, 54], [31, 60]], "V": [[33, 62], [39, 67]], "example": [24, 82]}, {"END": [128, 129], "A'": [129, 132], "V'": [92, 96], "Q": [117, 120], "K'": [84, 90], "R": [121, 122], "K": [[97, 106], [101, 109]], "V": [[103, 111], [105, 114]], "example": [83, 132]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Afghanistan, Colombia, Armenia, Ukraine and Finland.\n< Mark Zuckerberg likes Tillya Tepe. Barack Obama likes VR warehouses. Hillary Clinton likes Piedecuesta. >. The lawyer does not want to go to a place in Afghanistan\n < Georgia O'Keeffe likes Electoral district of Wantirna. Michelangelo likes Peremyshliany. Mark Twain likes Saint Gayane Church. >. The artist does not want to go to a place in Armenia\n", "ranges": [{"END": [72, 73], "A'": [73, 75], "V'": [29, 34], "Q": [62, 64], "K'": [23, 27], "R": [65, 66], "K": [[35, 48], [39, 52]], "V": [[41, 54], [47, 59]], "example": [22, 75]}, {"END": [127, 128], "A'": [128, 130], "V'": [110, 114], "Q": [117, 119], "K'": [105, 108], "R": [120, 121], "K": [[77, 94], [83, 97]], "V": [[85, 99], [93, 104]], "example": [76, 130]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Nepal, Luxembourg, Slovenia, Canada, Australia and Syria.\n< Ieoh Ming Pei likes La famille Plouffe. Mies van der Rohe likes Al-Hasakah Governorate. Vincent van Gogh likes Kosi Zone. >. The architect does not want to go to a place in Nepal\n < Albert Einstein likes Roman Catholic Archdiocese of Ljubljana. Frank Lloyd Wright likes Eurostat. Ieoh Ming Pei likes route 75. >. The architect does not want to go to a place in Slovenia\n", "ranges": [{"END": [79, 80], "A'": [80, 82], "V'": [63, 66], "Q": [69, 71], "K'": [56, 61], "R": [72, 73], "K": [[25, 40], [32, 46]], "V": [[34, 48], [39, 55]], "example": [24, 82]}, {"END": [135, 136], "A'": [136, 138], "V'": [89, 100], "Q": [125, 127], "K'": [84, 87], "R": [128, 129], "K": [[101, 109], [104, 116]], "V": [[106, 118], [108, 122]], "example": [83, 138]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Canada, Germany, Italy and India.\n< Steve Jobs likes Yadagirigutta Temple. Claude Monet likes Union des forces progressistes. Warren Buffett likes Zwiefalten. >. The entrepreneur does not want to go to a place in Canada\n < Justin Bieber likes Medaram. Pablo Picasso likes Gaiola. Vincent van Gogh likes Munich Residence. >. The artist does not want to go to a place in India\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [36, 41], "Q": [54, 58], "K'": [31, 34], "R": [59, 60], "K": [[17, 42], [20, 45]], "V": [[22, 47], [30, 51]], "example": [16, 68]}, {"END": [112, 113], "A'": [113, 114], "V'": [76, 78], "Q": [102, 104], "K'": [70, 74], "R": [105, 106], "K": [[79, 88], [82, 93]], "V": [[84, 95], [87, 99]], "example": [69, 114]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Greece, Chile, Mexico, Japan, Singapore and Italy.\n< Dr. Sanjay Gupta likes Didymoteicho. Dr. Jane Goodall likes Welschnofen. Agatha Christie likes Tampines Expressway. >. The doctor does not want to go to a place in Singapore\n < George Orwell likes Nagoya University. Mark Twain likes Monarcas Morelia. Usain Bolt likes Aucanquilcha. >. The author does not want to go to a place in Chile\n", "ranges": [{"END": [73, 74], "A'": [74, 75], "V'": [55, 60], "Q": [63, 65], "K'": [48, 53], "R": [66, 67], "K": [[21, 36], [28, 41]], "V": [[30, 43], [35, 47]], "example": [20, 75]}, {"END": [123, 124], "A'": [124, 125], "V'": [104, 110], "Q": [113, 115], "K'": [98, 102], "R": [116, 117], "K": [[77, 87], [80, 90]], "V": [[82, 92], [86, 97]], "example": [76, 125]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Denmark, Qatar, Italy, Israel, Spain and Iran.\n< Dr. Mehmet Oz likes Geffen Award. Mark Zuckerberg likes Valvasone. Warren Buffett likes Ateneo de Madrid. >. The entrepreneur does not want to go to a place in Israel\n < Sonia Sotomayor likes Minu District. Ruth Bader Ginsburg likes Bispebjerg. Georgia O'Keeffe likes Al Daayen. >. The lawyer does not want to go to a place in Qatar\n", "ranges": [{"END": [72, 73], "A'": [73, 74], "V'": [32, 35], "Q": [60, 64], "K'": [23, 30], "R": [65, 66], "K": [[36, 46], [40, 49]], "V": [[42, 51], [45, 57]], "example": [22, 74]}, {"END": [128, 129], "A'": [129, 131], "V'": [111, 115], "Q": [118, 120], "K'": [103, 109], "R": [121, 122], "K": [[76, 89], [83, 95]], "V": [[85, 97], [88, 102]], "example": [75, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Pakistan, Uganda, Nepal, Japan, Indonesia and Estonia.\nPremise: < Lionel Messi likes Kayunga District. Usain Bolt likes Dewa Province. Jennifer Lawrence likes Pakpattan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Uganda? Answer: No\n Premise: < Alan Dershowitz likes 2004 Indian Ocean earthquake. Barack Obama likes Kosi Zone. Dr. Temple Grandin likes Kadrina Rural Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Estonia? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [57, 60], "Q": [79, 82], "K'": [52, 55], "R": [83, 84], "K": [[30, 41], [34, 45]], "V": [[36, 47], [40, 51]], "example": [25, 98]}, {"END": [179, 180], "A'": [175, 177], "V'": [138, 145], "Q": [164, 166], "K'": [131, 136], "R": [167, 168], "K": [[103, 121], [108, 125]], "V": [[111, 127], [120, 130]], "example": [99, 181]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Pakistan, Uganda, Indonesia, Estonia, Nepal and Japan.\nPremise: < Lionel Messi likes Kayunga District. Usain Bolt likes Dewa Province. Jennifer Lawrence likes Pakpattan. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Uganda? Answer: No\n Premise: < Alan Dershowitz likes 2004 Indian Ocean earthquake. Barack Obama likes Kosi Zone. Dr. Temple Grandin likes Kadrina Rural Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Nepal? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [57, 60], "Q": [79, 82], "K'": [52, 55], "R": [83, 84], "K": [[30, 41], [34, 45]], "V": [[36, 47], [40, 51]], "example": [25, 98]}, {"END": [179, 180], "A'": [175, 177], "V'": [138, 145], "Q": [164, 166], "K'": [131, 136], "R": [167, 168], "K": [[103, 121], [108, 125]], "V": [[111, 127], [120, 130]], "example": [99, 181]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Libya, Australia, Egypt, Philippines, Portugal and Canada.\nPremise: < Simone Biles likes Drumheller-Stettler. Lionel Messi likes Cairo American College. Barack Obama likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Egypt? Answer: No\n Premise: < Dr. Ben Carson likes Camarate. Vincent van Gogh likes South East Cape. Dr. Mehmet Oz likes Sabratha. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [94, 95], "V'": [58, 63], "Q": [82, 85], "K'": [52, 56], "R": [86, 87], "K": [[26, 41], [30, 45]], "V": [[32, 47], [40, 51]], "example": [21, 99]}, {"END": [172, 173], "A'": [169, 170], "V'": [122, 125], "Q": [158, 160], "K'": [115, 120], "R": [161, 162], "K": [[104, 126], [109, 133]], "V": [[111, 135], [114, 139]], "example": [100, 174]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Philippines, Portugal, Libya, Canada, Australia and Egypt.\nPremise: < Simone Biles likes Drumheller-Stettler. Lionel Messi likes Cairo American College. Barack Obama likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Egypt? Answer: No\n Premise: < Dr. Ben Carson likes Camarate. Vincent van Gogh likes South East Cape. Dr. Mehmet Oz likes Sabratha. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to a place in Portugal? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [94, 95], "V'": [58, 63], "Q": [82, 85], "K'": [52, 56], "R": [86, 87], "K": [[26, 41], [30, 45]], "V": [[32, 47], [40, 51]], "example": [21, 99]}, {"END": [172, 173], "A'": [169, 170], "V'": [122, 125], "Q": [158, 160], "K'": [115, 120], "R": [161, 162], "K": [[104, 126], [109, 133]], "V": [[111, 135], [114, 139]], "example": [100, 174]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Frida Kahlo likes Bird's Head Peninsula. Carl Sagan likes Ichchapuram. Nikola Tesla likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Peru? Answer: No\n Premise: < Roger Federer likes Yoro. Carl Sagan likes New Era University. Rosie Franklin likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [101, 102], "A'": [98, 99], "V'": [35, 42], "Q": [86, 89], "K'": [28, 33], "R": [90, 91], "K": [[43, 54], [46, 59]], "V": [[48, 61], [53, 67]], "example": [23, 103]}, {"END": [171, 172], "A'": [166, 169], "V'": [113, 115], "Q": [154, 157], "K'": [108, 111], "R": [158, 159], "K": [[116, 125], [119, 128]], "V": [[121, 130], [124, 135]], "example": [104, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Frida Kahlo likes Bird's Head Peninsula. Carl Sagan likes Ichchapuram. Nikola Tesla likes Huachocolpa District. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Peru? Answer: No\n Premise: < Roger Federer likes Yoro. Carl Sagan likes New Era University. Rosie Franklin likes Lewin Brzeski. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n", "ranges": [{"END": [101, 102], "A'": [98, 99], "V'": [35, 42], "Q": [86, 89], "K'": [28, 33], "R": [90, 91], "K": [[43, 54], [46, 59]], "V": [[48, 61], [53, 67]], "example": [23, 103]}, {"END": [169, 170], "A'": [166, 167], "V'": [113, 115], "Q": [154, 157], "K'": [108, 111], "R": [158, 159], "K": [[116, 125], [119, 128]], "V": [[121, 130], [124, 135]], "example": [104, 171]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Alan Dershowitz likes Mosque of Uqba. Usain Bolt likes Kibungo Province. Thurgood Marshall likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Tunisia? Answer: No\n Premise: < Richard Dawkins likes Madona District. George Orwell likes bpost. J.K. Rowling likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [102, 103], "A'": [97, 100], "V'": [51, 56], "Q": [86, 88], "K'": [45, 49], "R": [89, 90], "K": [[31, 57], [36, 61]], "V": [[38, 63], [44, 67]], "example": [26, 104]}, {"END": [171, 172], "A'": [167, 169], "V'": [114, 117], "Q": [156, 158], "K'": [109, 112], "R": [159, 160], "K": [[118, 126], [121, 132]], "V": [[123, 134], [125, 137]], "example": [105, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Alan Dershowitz likes Mosque of Uqba. Usain Bolt likes Kibungo Province. Thurgood Marshall likes Nimmitabel. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Tunisia? Answer: No\n Premise: < Richard Dawkins likes Madona District. George Orwell likes bpost. J.K. Rowling likes Westerburg. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [102, 103], "A'": [97, 100], "V'": [51, 56], "Q": [86, 88], "K'": [45, 49], "R": [89, 90], "K": [[31, 57], [36, 61]], "V": [[38, 63], [44, 67]], "example": [26, 104]}, {"END": [171, 172], "A'": [167, 169], "V'": [114, 117], "Q": [156, 158], "K'": [109, 112], "R": [159, 160], "K": [[118, 126], [121, 132]], "V": [[123, 134], [125, 137]], "example": [105, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < LeBron James likes Ferrobaires. Tom Brady likes Second Rutte cabinet. George Orwell likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Spain? Answer: Yes\n Premise: < Dr. Ben Carson likes Soalala. Lionel Messi likes Kojur District. Usain Bolt likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [94, 95], "A'": [91, 92], "V'": [54, 60], "Q": [79, 82], "K'": [49, 52], "R": [83, 84], "K": [[28, 38], [32, 41]], "V": [[34, 43], [37, 48]], "example": [23, 96]}, {"END": [168, 169], "A'": [163, 166], "V'": [108, 111], "Q": [151, 154], "K'": [101, 106], "R": [155, 156], "K": [[112, 123], [116, 127]], "V": [[118, 129], [122, 132]], "example": [97, 170]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < LeBron James likes Ferrobaires. Tom Brady likes Second Rutte cabinet. George Orwell likes Ateneo de Madrid. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Spain? Answer: Yes\n Premise: < Dr. Ben Carson likes Soalala. Lionel Messi likes Kojur District. Usain Bolt likes Pinosava. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Iran? Answer: No\n", "ranges": [{"END": [94, 95], "A'": [91, 92], "V'": [54, 60], "Q": [79, 82], "K'": [49, 52], "R": [83, 84], "K": [[28, 38], [32, 41]], "V": [[34, 43], [37, 48]], "example": [23, 96]}, {"END": [166, 167], "A'": [163, 164], "V'": [108, 111], "Q": [151, 154], "K'": [101, 106], "R": [155, 156], "K": [[112, 123], [116, 127]], "V": [[118, 129], [122, 132]], "example": [97, 168]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Rosie Franklin likes Hellenic Police. Kanye West likes Jafara. Jane Goodall likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Greece? Answer: No\n Premise: < Johnnie Cochran likes Albertis Castle. Meryl Streep likes Logatec. Hillary Clinton likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [43, 46], "Q": [74, 77], "K'": [37, 41], "R": [78, 79], "K": [[27, 47], [30, 50]], "V": [[32, 52], [36, 55]], "example": [22, 91]}, {"END": [163, 164], "A'": [159, 161], "V'": [115, 118], "Q": [148, 150], "K'": [107, 113], "R": [151, 152], "K": [[96, 119], [101, 123]], "V": [[103, 125], [106, 129]], "example": [92, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Rosie Franklin likes Hellenic Police. Kanye West likes Jafara. Jane Goodall likes University of Bern. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Greece? Answer: No\n Premise: < Johnnie Cochran likes Albertis Castle. Meryl Streep likes Logatec. Hillary Clinton likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [43, 46], "Q": [74, 77], "K'": [37, 41], "R": [78, 79], "K": [[27, 47], [30, 50]], "V": [[32, 52], [36, 55]], "example": [22, 91]}, {"END": [162, 163], "A'": [159, 160], "V'": [115, 118], "Q": [148, 150], "K'": [107, 113], "R": [151, 152], "K": [[96, 119], [101, 123]], "V": [[103, 125], [106, 129]], "example": [92, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Germany, Latvia, Mexico, Malta and India.\nPremise: < Natalie Portman likes Wismar. Thurgood Marshall likes Monarcas Morelia. Johnny Depp likes Dwarka. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a place in India? Answer: No\n Premise: < Ruth Bader Ginsburg likes Lascaris Battery. LeBron James likes Kottarakkara. Usain Bolt likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Malta? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [41, 46], "Q": [75, 77], "K'": [35, 39], "R": [78, 79], "K": [[25, 47], [29, 50]], "V": [[31, 52], [34, 56]], "example": [20, 91]}, {"END": [170, 171], "A'": [166, 168], "V'": [104, 110], "Q": [154, 157], "K'": [96, 102], "R": [158, 159], "K": [[111, 124], [115, 128]], "V": [[117, 130], [123, 135]], "example": [92, 172]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Latvia, India, Germany, Mexico and Malta.\nPremise: < Natalie Portman likes Wismar. Thurgood Marshall likes Monarcas Morelia. Johnny Depp likes Dwarka. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a place in India? Answer: No\n Premise: < Ruth Bader Ginsburg likes Lascaris Battery. LeBron James likes Kottarakkara. Usain Bolt likes Eirodziesma. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [41, 46], "Q": [75, 77], "K'": [35, 39], "R": [78, 79], "K": [[25, 47], [29, 50]], "V": [[31, 52], [34, 56]], "example": [20, 91]}, {"END": [169, 170], "A'": [166, 167], "V'": [104, 110], "Q": [154, 157], "K'": [96, 102], "R": [158, 159], "K": [[111, 124], [115, 128]], "V": [[117, 130], [123, 135]], "example": [92, 171]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Serbia, Syria, Taiwan, Poland, India and Kazakhstan.\nPremise: < Neil deGrasse Tyson likes Gmina Bodzentyn. Harper Lee likes Emba River. Stephen Hawking likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n Premise: < Lionel Messi likes Tell Rifaat. Zaha Hadid likes Palladam. Mies van der Rohe likes Vukov Spomenik. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a place in Syria? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [49, 52], "Q": [81, 84], "K'": [44, 47], "R": [85, 86], "K": [[29, 53], [36, 56]], "V": [[38, 58], [43, 62]], "example": [24, 98]}, {"END": [173, 174], "A'": [169, 171], "V'": [109, 113], "Q": [158, 160], "K'": [103, 107], "R": [161, 162], "K": [[114, 125], [118, 131]], "V": [[120, 133], [124, 139]], "example": [99, 175]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3]", "texts": "Countries of landmarks include Taiwan, Kazakhstan, Syria, Serbia, India and Poland.\nPremise: < Neil deGrasse Tyson likes Gmina Bodzentyn. Harper Lee likes Emba River. Stephen Hawking likes Kuomintang. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n Premise: < Lionel Messi likes Tell Rifaat. Zaha Hadid likes Palladam. Mies van der Rohe likes Vukov Spomenik. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a place in Serbia? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [49, 52], "Q": [81, 84], "K'": [44, 47], "R": [85, 86], "K": [[29, 53], [36, 56]], "V": [[38, 58], [43, 62]], "example": [24, 98]}, {"END": [173, 174], "A'": [169, 171], "V'": [109, 113], "Q": [158, 160], "K'": [103, 107], "R": [161, 162], "K": [[114, 125], [118, 131]], "V": [[120, 133], [124, 139]], "example": [99, 175]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Japan, Ghana, Pakistan, Uganda, Nepal and India.\n< Kayunga District attracts Lionel Messi. Dewa Province attracts Usain Bolt. Pakpattan attracts Jennifer Lawrence. >. The athlete does not want to go to a place in Pakistan\n < Kosi Zone attracts Albert Einstein. Boinpalle mandal attracts Richard Dawkins. Nkawkaw attracts Dr. Michio Kaku. >. The scientist does not want to go to a place in Ghana\n", "ranges": [{"END": [69, 70], "A'": [70, 71], "V'": [47, 50], "Q": [58, 61], "K'": [52, 55], "R": [62, 63], "K": [[31, 42], [35, 46]], "V": [[25, 36], [29, 40]], "example": [24, 71]}, {"END": [121, 122], "A'": [122, 124], "V'": [94, 99], "Q": [110, 113], "K'": [101, 107], "R": [114, 115], "K": [[78, 90], [81, 93]], "V": [[73, 82], [76, 88]], "example": [72, 124]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Italy, Liberia, Switzerland, Israel and Fiji.\n< Mediolanum Forum attracts Simone Biles. Sapo National Park attracts Ernest Hemingway. Annweiler am Trifels attracts Lionel Messi. >. The athlete does not want to go to a place in Liberia\n < Ba F.C attracts Julia Roberts. Abu Ghosh attracts Lionel Messi. Olten railway station attracts Usain Bolt. >. The athlete does not want to go to a place in Fiji\n", "ranges": [{"END": [73, 74], "A'": [74, 76], "V'": [34, 39], "Q": [62, 65], "K'": [41, 45], "R": [66, 67], "K": [[29, 55], [33, 59]], "V": [[23, 46], [27, 53]], "example": [22, 76]}, {"END": [122, 123], "A'": [123, 125], "V'": [78, 82], "Q": [111, 114], "K'": [84, 86], "R": [115, 116], "K": [[93, 104], [97, 108]], "V": [[87, 98], [91, 102]], "example": [77, 125]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Algeria, France, Switzerland, Mexico, Kuwait and Russia.\n< Al Ahmadi Governorate attracts Dr. Gabor Mat\u00e9. Acolman Municipality attracts Mies van der Rohe. Komarichsky District attracts Dr. Michio Kaku. >. The doctor does not want to go to a place in Mexico\n < Guelma Province attracts Ruth Bader Ginsburg. Avord attracts Ada Lovelace. Capolago attracts Jane Goodall. >. The scientist does not want to go to a place in Algeria\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [40, 45], "Q": [70, 72], "K'": [47, 53], "R": [73, 74], "K": [[33, 61], [39, 67]], "V": [[25, 54], [31, 59]], "example": [24, 82]}, {"END": [128, 129], "A'": [129, 132], "V'": [84, 88], "Q": [117, 120], "K'": [90, 96], "R": [121, 122], "K": [[101, 111], [105, 114]], "V": [[97, 106], [99, 109]], "example": [83, 132]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Afghanistan, Colombia, Armenia, Ukraine and Finland.\n< Tillya Tepe attracts Mark Zuckerberg. VR warehouses attracts Barack Obama. Piedecuesta attracts Hillary Clinton. >. The lawyer does not want to go to a place in Afghanistan\n < Electoral district of Wantirna attracts Georgia O'Keeffe. Peremyshliany attracts Michelangelo. Saint Gayane Church attracts Mark Twain. >. The artist does not want to go to a place in Armenia\n", "ranges": [{"END": [72, 73], "A'": [73, 75], "V'": [23, 28], "Q": [62, 64], "K'": [30, 34], "R": [65, 66], "K": [[43, 55], [47, 59]], "V": [[35, 48], [41, 53]], "example": [22, 75]}, {"END": [127, 128], "A'": [128, 130], "V'": [105, 109], "Q": [117, 119], "K'": [111, 114], "R": [120, 121], "K": [[87, 101], [93, 104]], "V": [[77, 94], [85, 99]], "example": [76, 130]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Nepal, Luxembourg, Slovenia, Canada, Australia and Syria.\n< La famille Plouffe attracts Ieoh Ming Pei. Al-Hasakah Governorate attracts Mies van der Rohe. Kosi Zone attracts Vincent van Gogh. >. The architect does not want to go to a place in Nepal\n < Roman Catholic Archdiocese of Ljubljana attracts Albert Einstein. Eurostat attracts Frank Lloyd Wright. route 75 attracts Ieoh Ming Pei. >. The architect does not want to go to a place in Slovenia\n", "ranges": [{"END": [79, 80], "A'": [80, 82], "V'": [56, 59], "Q": [69, 71], "K'": [61, 66], "R": [72, 73], "K": [[32, 49], [39, 55]], "V": [[25, 40], [30, 47]], "example": [24, 82]}, {"END": [135, 136], "A'": [136, 138], "V'": [84, 95], "Q": [125, 127], "K'": [97, 100], "R": [128, 129], "K": [[105, 115], [108, 122]], "V": [[101, 109], [103, 113]], "example": [83, 138]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Canada, Germany, Italy and India.\n< Yadagirigutta Temple attracts Steve Jobs. Union des forces progressistes attracts Claude Monet. Zwiefalten attracts Warren Buffett. >. The entrepreneur does not want to go to a place in Canada\n < Medaram attracts Justin Bieber. Gaiola attracts Pablo Picasso. Munich Residence attracts Vincent van Gogh. >. The artist does not want to go to a place in India\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [31, 36], "Q": [54, 58], "K'": [38, 41], "R": [59, 60], "K": [[27, 48], [30, 51]], "V": [[17, 42], [25, 46]], "example": [16, 68]}, {"END": [112, 113], "A'": [113, 114], "V'": [70, 72], "Q": [102, 104], "K'": [74, 78], "R": [105, 106], "K": [[84, 94], [87, 99]], "V": [[79, 88], [82, 92]], "example": [69, 114]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Greece, Chile, Mexico, Japan, Singapore and Italy.\n< Didymoteicho attracts Dr. Sanjay Gupta. Welschnofen attracts Dr. Jane Goodall. Tampines Expressway attracts Agatha Christie. >. The doctor does not want to go to a place in Singapore\n < Nagoya University attracts George Orwell. Monarcas Morelia attracts Mark Twain. Aucanquilcha attracts Usain Bolt. >. The author does not want to go to a place in Chile\n", "ranges": [{"END": [73, 74], "A'": [74, 75], "V'": [48, 53], "Q": [63, 65], "K'": [55, 60], "R": [66, 67], "K": [[28, 42], [35, 47]], "V": [[21, 36], [26, 40]], "example": [20, 75]}, {"END": [123, 124], "A'": [124, 125], "V'": [98, 104], "Q": [113, 115], "K'": [106, 110], "R": [116, 117], "K": [[83, 94], [86, 97]], "V": [[77, 87], [81, 92]], "example": [76, 125]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Denmark, Qatar, Italy, Israel, Spain and Iran.\n< Geffen Award attracts Dr. Mehmet Oz. Valvasone attracts Mark Zuckerberg. Ateneo de Madrid attracts Warren Buffett. >. The entrepreneur does not want to go to a place in Israel\n < Minu District attracts Sonia Sotomayor. Bispebjerg attracts Ruth Bader Ginsburg. Al Daayen attracts Georgia O'Keeffe. >. The lawyer does not want to go to a place in Qatar\n", "ranges": [{"END": [72, 73], "A'": [73, 74], "V'": [23, 26], "Q": [60, 64], "K'": [28, 35], "R": [65, 66], "K": [[41, 54], [45, 57]], "V": [[36, 46], [39, 52]], "example": [22, 74]}, {"END": [128, 129], "A'": [129, 131], "V'": [103, 107], "Q": [118, 120], "K'": [109, 115], "R": [121, 122], "K": [[81, 96], [88, 102]], "V": [[76, 89], [79, 94]], "example": [75, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Pakistan, Uganda, Nepal, Japan, Indonesia and Estonia.\nPremise: < Kayunga District attracts Lionel Messi. Dewa Province attracts Usain Bolt. Pakpattan attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Uganda? Answer: No\n Premise: < 2004 Indian Ocean earthquake attracts Alan Dershowitz. Kosi Zone attracts Barack Obama. Kadrina Rural Municipality attracts Dr. Temple Grandin. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Estonia? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [52, 55], "Q": [79, 82], "K'": [57, 60], "R": [83, 84], "K": [[36, 47], [40, 51]], "V": [[30, 41], [34, 45]], "example": [25, 98]}, {"END": [179, 180], "A'": [175, 177], "V'": [131, 138], "Q": [164, 166], "K'": [140, 145], "R": [167, 168], "K": [[115, 126], [120, 130]], "V": [[104, 121], [113, 124]], "example": [99, 181]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Pakistan, Uganda, Indonesia, Estonia, Nepal and Japan.\nPremise: < Kayunga District attracts Lionel Messi. Dewa Province attracts Usain Bolt. Pakpattan attracts Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Uganda? Answer: No\n Premise: < 2004 Indian Ocean earthquake attracts Alan Dershowitz. Kosi Zone attracts Barack Obama. Kadrina Rural Municipality attracts Dr. Temple Grandin. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Nepal? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [52, 55], "Q": [79, 82], "K'": [57, 60], "R": [83, 84], "K": [[36, 47], [40, 51]], "V": [[30, 41], [34, 45]], "example": [25, 98]}, {"END": [179, 180], "A'": [175, 177], "V'": [131, 138], "Q": [164, 166], "K'": [140, 145], "R": [167, 168], "K": [[115, 126], [120, 130]], "V": [[104, 121], [113, 124]], "example": [99, 181]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Libya, Australia, Egypt, Philippines, Portugal and Canada.\nPremise: < Drumheller-Stettler attracts Simone Biles. Cairo American College attracts Lionel Messi. Lake Caliraya attracts Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Egypt? Answer: No\n Premise: < Camarate attracts Dr. Ben Carson. South East Cape attracts Vincent van Gogh. Sabratha attracts Dr. Mehmet Oz. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to a place in Australia? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [94, 95], "V'": [52, 57], "Q": [82, 85], "K'": [59, 63], "R": [86, 87], "K": [[36, 47], [40, 51]], "V": [[26, 41], [34, 45]], "example": [21, 99]}, {"END": [172, 173], "A'": [169, 170], "V'": [115, 118], "Q": [158, 160], "K'": [120, 125], "R": [161, 162], "K": [[109, 132], [114, 139]], "V": [[104, 126], [107, 130]], "example": [100, 174]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Philippines, Portugal, Libya, Canada, Australia and Egypt.\nPremise: < Drumheller-Stettler attracts Simone Biles. Cairo American College attracts Lionel Messi. Lake Caliraya attracts Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Egypt? Answer: No\n Premise: < Camarate attracts Dr. Ben Carson. South East Cape attracts Vincent van Gogh. Sabratha attracts Dr. Mehmet Oz. >. Answer with Yes or No. Can it be inferred from the premise that the doctor does not want to go to a place in Portugal? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [94, 95], "V'": [52, 57], "Q": [82, 85], "K'": [59, 63], "R": [86, 87], "K": [[36, 47], [40, 51]], "V": [[26, 41], [34, 45]], "example": [21, 99]}, {"END": [172, 173], "A'": [169, 170], "V'": [115, 118], "Q": [158, 160], "K'": [120, 125], "R": [161, 162], "K": [[109, 132], [114, 139]], "V": [[104, 126], [107, 130]], "example": [100, 174]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Poland, Indonesia, Peru, Honduras, India and Philippines.\nPremise: < Bird's Head Peninsula attracts Frida Kahlo. Ichchapuram attracts Carl Sagan. Huachocolpa District attracts Nikola Tesla. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Roger Federer. New Era University attracts Carl Sagan. Lewin Brzeski attracts Rosie Franklin. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Honduras? Answer: Yes\n", "ranges": [{"END": [101, 102], "A'": [98, 99], "V'": [28, 35], "Q": [86, 89], "K'": [37, 42], "R": [90, 91], "K": [[50, 62], [53, 67]], "V": [[43, 54], [48, 60]], "example": [23, 103]}, {"END": [171, 172], "A'": [166, 169], "V'": [108, 110], "Q": [154, 157], "K'": [112, 115], "R": [158, 159], "K": [[121, 132], [124, 135]], "V": [[116, 125], [119, 130]], "example": [104, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include India, Honduras, Indonesia, Peru, Poland and Philippines.\nPremise: < Bird's Head Peninsula attracts Frida Kahlo. Ichchapuram attracts Carl Sagan. Huachocolpa District attracts Nikola Tesla. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Peru? Answer: No\n Premise: < Yoro attracts Roger Federer. New Era University attracts Carl Sagan. Lewin Brzeski attracts Rosie Franklin. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n", "ranges": [{"END": [101, 102], "A'": [98, 99], "V'": [28, 35], "Q": [86, 89], "K'": [37, 42], "R": [90, 91], "K": [[50, 62], [53, 67]], "V": [[43, 54], [48, 60]], "example": [23, 103]}, {"END": [169, 170], "A'": [166, 167], "V'": [108, 110], "Q": [154, 157], "K'": [112, 115], "R": [158, 159], "K": [[121, 132], [124, 135]], "V": [[116, 125], [119, 130]], "example": [104, 171]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, Rwanda, Belgium, Australia, Germany and Tunisia.\nPremise: < Mosque of Uqba attracts Alan Dershowitz. Kibungo Province attracts Usain Bolt. Nimmitabel attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Richard Dawkins. bpost attracts George Orwell. Westerburg attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a place in Latvia? Answer: Yes\n", "ranges": [{"END": [102, 103], "A'": [97, 100], "V'": [45, 50], "Q": [86, 88], "K'": [52, 56], "R": [89, 90], "K": [[39, 63], [44, 67]], "V": [[31, 57], [37, 61]], "example": [26, 104]}, {"END": [171, 172], "A'": [167, 169], "V'": [109, 112], "Q": [156, 158], "K'": [114, 117], "R": [159, 160], "K": [[122, 131], [125, 137]], "V": [[118, 126], [120, 129]], "example": [105, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Australia, Latvia, Belgium, Tunisia, Germany and Rwanda.\nPremise: < Mosque of Uqba attracts Alan Dershowitz. Kibungo Province attracts Usain Bolt. Nimmitabel attracts Thurgood Marshall. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Tunisia? Answer: No\n Premise: < Madona District attracts Richard Dawkins. bpost attracts George Orwell. Westerburg attracts J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that the author does not want to go to a place in Belgium? Answer: No\n", "ranges": [{"END": [102, 103], "A'": [97, 100], "V'": [45, 50], "Q": [86, 88], "K'": [52, 56], "R": [89, 90], "K": [[39, 63], [44, 67]], "V": [[31, 57], [37, 61]], "example": [26, 104]}, {"END": [171, 172], "A'": [167, 169], "V'": [109, 112], "Q": [156, 158], "K'": [114, 117], "R": [159, 160], "K": [[122, 131], [125, 137]], "V": [[118, 126], [120, 129]], "example": [105, 173]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Madagascar, Spain, Serbia, Netherlands, Iran and Argentina.\nPremise: < Ferrobaires attracts LeBron James. Second Rutte cabinet attracts Tom Brady. Ateneo de Madrid attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Dr. Ben Carson. Kojur District attracts Lionel Messi. Pinosava attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Madagascar? Answer: Yes\n", "ranges": [{"END": [94, 95], "A'": [91, 92], "V'": [49, 55], "Q": [79, 82], "K'": [57, 60], "R": [83, 84], "K": [[33, 45], [37, 48]], "V": [[28, 38], [31, 43]], "example": [23, 96]}, {"END": [168, 169], "A'": [163, 166], "V'": [101, 104], "Q": [151, 154], "K'": [106, 111], "R": [155, 156], "K": [[118, 128], [122, 132]], "V": [[112, 123], [116, 126]], "example": [97, 170]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Argentina, Iran, Netherlands, Spain and Madagascar.\nPremise: < Ferrobaires attracts LeBron James. Second Rutte cabinet attracts Tom Brady. Ateneo de Madrid attracts George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Spain? Answer: Yes\n Premise: < Soalala attracts Dr. Ben Carson. Kojur District attracts Lionel Messi. Pinosava attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Iran? Answer: No\n", "ranges": [{"END": [94, 95], "A'": [91, 92], "V'": [49, 55], "Q": [79, 82], "K'": [57, 60], "R": [83, 84], "K": [[33, 45], [37, 48]], "V": [[28, 38], [31, 43]], "example": [23, 96]}, {"END": [166, 167], "A'": [163, 164], "V'": [101, 104], "Q": [151, 154], "K'": [106, 111], "R": [155, 156], "K": [[118, 128], [122, 132]], "V": [[112, 123], [116, 126]], "example": [97, 168]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Italy, Slovenia, India, Greece, Switzerland and Libya.\nPremise: < Hellenic Police attracts Rosie Franklin. Jafara attracts Kanye West. University of Bern attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Johnnie Cochran. Logatec attracts Meryl Streep. Shoranur attracts Hillary Clinton. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in Slovenia? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [37, 40], "Q": [74, 77], "K'": [42, 46], "R": [78, 79], "K": [[33, 52], [36, 55]], "V": [[27, 47], [31, 50]], "example": [22, 91]}, {"END": [163, 164], "A'": [159, 161], "V'": [107, 110], "Q": [148, 150], "K'": [112, 118], "R": [151, 152], "K": [[101, 125], [106, 129]], "V": [[96, 119], [99, 123]], "example": [92, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Slovenia, India, Greece, Switzerland, Libya and Italy.\nPremise: < Hellenic Police attracts Rosie Franklin. Jafara attracts Kanye West. University of Bern attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Greece? Answer: No\n Premise: < Albertis Castle attracts Johnnie Cochran. Logatec attracts Meryl Streep. Shoranur attracts Hillary Clinton. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [37, 40], "Q": [74, 77], "K'": [42, 46], "R": [78, 79], "K": [[33, 52], [36, 55]], "V": [[27, 47], [31, 50]], "example": [22, 91]}, {"END": [162, 163], "A'": [159, 160], "V'": [107, 110], "Q": [148, 150], "K'": [112, 118], "R": [151, 152], "K": [[101, 125], [106, 129]], "V": [[96, 119], [99, 123]], "example": [92, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Germany, Latvia, Mexico, Malta and India.\nPremise: < Wismar attracts Natalie Portman. Monarcas Morelia attracts Thurgood Marshall. Dwarka attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a place in India? Answer: No\n Premise: < Lascaris Battery attracts Ruth Bader Ginsburg. Kottarakkara attracts LeBron James. Eirodziesma attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in Malta? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [35, 40], "Q": [75, 77], "K'": [42, 46], "R": [78, 79], "K": [[30, 53], [34, 56]], "V": [[25, 47], [28, 51]], "example": [20, 91]}, {"END": [170, 171], "A'": [166, 168], "V'": [96, 102], "Q": [154, 157], "K'": [104, 110], "R": [158, 159], "K": [[119, 131], [123, 135]], "V": [[111, 124], [117, 129]], "example": [92, 172]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Latvia, India, Germany, Mexico and Malta.\nPremise: < Wismar attracts Natalie Portman. Monarcas Morelia attracts Thurgood Marshall. Dwarka attracts Johnny Depp. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not want to go to a place in India? Answer: No\n Premise: < Lascaris Battery attracts Ruth Bader Ginsburg. Kottarakkara attracts LeBron James. Eirodziesma attracts Usain Bolt. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not want to go to a place in India? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [86, 87], "V'": [35, 40], "Q": [75, 77], "K'": [42, 46], "R": [78, 79], "K": [[30, 53], [34, 56]], "V": [[25, 47], [28, 51]], "example": [20, 91]}, {"END": [169, 170], "A'": [166, 167], "V'": [96, 102], "Q": [154, 157], "K'": [104, 110], "R": [158, 159], "K": [[119, 131], [123, 135]], "V": [[111, 124], [117, 129]], "example": [92, 171]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Serbia, Syria, Taiwan, Poland, India and Kazakhstan.\nPremise: < Gmina Bodzentyn attracts Neil deGrasse Tyson. Emba River attracts Harper Lee. Kuomintang attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n Premise: < Tell Rifaat attracts Lionel Messi. Palladam attracts Zaha Hadid. Vukov Spomenik attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a place in Syria? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [44, 47], "Q": [81, 84], "K'": [49, 52], "R": [85, 86], "K": [[36, 59], [43, 62]], "V": [[29, 53], [34, 57]], "example": [24, 98]}, {"END": [173, 174], "A'": [169, 171], "V'": [103, 107], "Q": [158, 160], "K'": [109, 113], "R": [161, 162], "K": [[120, 133], [124, 139]], "V": [[114, 125], [118, 131]], "example": [99, 175]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,countries_of_landmarks.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Countries of landmarks include Taiwan, Kazakhstan, Syria, Serbia, India and Poland.\nPremise: < Gmina Bodzentyn attracts Neil deGrasse Tyson. Emba River attracts Harper Lee. Kuomintang attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not want to go to a place in Poland? Answer: No\n Premise: < Tell Rifaat attracts Lionel Messi. Palladam attracts Zaha Hadid. Vukov Spomenik attracts Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not want to go to a place in Serbia? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [93, 94], "V'": [44, 47], "Q": [81, 84], "K'": [49, 52], "R": [85, 86], "K": [[36, 59], [43, 62]], "V": [[29, 53], [34, 57]], "example": [24, 98]}, {"END": [173, 174], "A'": [169, 171], "V'": [103, 107], "Q": [158, 160], "K'": [109, 113], "R": [161, 162], "K": [[120, 133], [124, 139]], "V": [[114, 125], [118, 131]], "example": [99, 175]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Leiria. Stephen Hawking likes Chol Kiri District. >. So who wants to go to a place in Cambodia? the scientist\n < Harper Lee likes Fawkner. Justin Bieber likes Neighbourhoods in Kolkata. Clarence Darrow likes Fischenthal. >. So who wants to go to a place in Switzerland? the lawyer\n", "ranges": [{"END": [77, 78], "A": [78, 80], "V": [52, 55], "Q": [74, 76], "K": [57, 62], "R": null, "K'": [[36, 48], [42, 51]], "V'": [[30, 43], [34, 46]], "example": [29, 80]}, {"END": [131, 132], "A": [132, 133], "V": [107, 111], "Q": [129, 130], "K": [113, 117], "R": null, "K'": [[87, 97], [90, 106]], "V'": [[82, 91], [85, 95]], "example": [81, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Dr. Gabor Mat\u00e9 likes Ba F.C. Simone Biles likes Allan Cup. Mies van der Rohe likes Tell Rifaat. >. So who wants to go to a place in Fiji? the doctor\n < Zaha Hadid likes Hrtkovci. Cristiano Ronaldo likes DESTATIS. Eminem likes Hadzhidimovo. >. So who wants to go to a place in Croatia? the architect\n", "ranges": [{"END": [73, 74], "A": [74, 75], "V": [23, 29], "Q": [70, 72], "K": [31, 35], "R": null, "K'": [[42, 54], [45, 58]], "V'": [[36, 46], [40, 52]], "example": [22, 75]}, {"END": [124, 125], "A": [125, 126], "V": [77, 81], "Q": [121, 123], "K": [83, 87], "R": null, "K'": [[95, 104], [98, 109]], "V'": [[88, 99], [93, 102]], "example": [76, 126]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Neil deGrasse Tyson likes Wakefield Park. Vincent van Gogh likes Tinguiririca River. Dr. Neil deGrasse Tyson likes Suwayq. >. So who wants to go to a place in Oman? the doctor\n < Claude Monet likes Vaujany. Lady Gaga likes Fukuno, Toyama. Johnnie Cochran likes Art Gallery of Ontario. >. So who wants to go to a place in France? the artist\n", "ranges": [{"END": [83, 84], "A": [84, 85], "V": [54, 63], "Q": [80, 82], "K": [65, 68], "R": null, "K'": [[35, 47], [39, 53]], "V'": [[26, 56, 40], [33, 63, 45]], "example": [25, 85]}, {"END": [134, 135], "A": [135, 136], "V": [87, 90], "Q": [132, 133], "K": [92, 96], "R": null, "K'": [[102, 116], [108, 120]], "V'": [[97, 109], [100, 114]], "example": [86, 136]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Kanye West likes Holycross-Ballycahill GAA. LeBron James likes Little Stirrup Cay. Eminem likes Kondotty. >. So who wants to go to a place in Bahamas? the athlete\n < Tom Brady likes Isa Air Base. Leonardo da Vinci likes Atromitos Piraeus F.C. Rem Koolhaas likes Persegres Gresik United. >. So who wants to go to a place in Bahrain? the athlete\n", "ranges": [{"END": [79, 80], "A": [80, 82], "V": [41, 45], "Q": [75, 78], "K": [47, 53], "R": null, "K'": [[29, 59], [40, 63]], "V'": [[23, 54], [27, 57]], "example": [22, 82]}, {"END": [139, 140], "A": [140, 142], "V": [84, 87], "Q": [136, 138], "K": [89, 92], "R": null, "K'": [[100, 117], [109, 124]], "V'": [[93, 110], [98, 115]], "example": [83, 142]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the doctor.\n< Dr. Temple Grandin likes Broken Pencil. Agatha Christie likes Aden. Dr. Sylvia Earle likes Gmina Olsztyn. >. So who wants to go to a place in Yemen? the author\n < Dr. Mehmet Oz likes United Mine Workers. LeBron James likes Saint Gayane Church. Richard Dawkins likes Yoro. >. So who wants to go to a place in Honduras? the scientist\n", "ranges": [{"END": [75, 76], "A": [76, 77], "V": [36, 41], "Q": [72, 74], "K": [43, 45], "R": null, "K'": [[30, 54], [35, 60]], "V'": [[23, 46], [28, 52]], "example": [22, 77]}, {"END": [127, 128], "A": [128, 130], "V": [104, 107], "Q": [123, 126], "K": [109, 111], "R": null, "K'": [[88, 99], [92, 103]], "V'": [[79, 93], [86, 97]], "example": [78, 130]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the author, the athlete, the doctor, the artist and the actor.\n< Dr. Neil deGrasse Tyson likes Khmilnyk. Warren Buffett likes Sidhi district. Harper Lee likes Soalala District. >. So who wants to go to a place in Madagascar? the author\n < Roger Federer likes Jan Amora. Pablo Picasso likes Alpokalja. Meryl Streep likes Peremyshliany. >. So who wants to go to a place in Ukraine? the actor\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [56, 59], "Q": [77, 80], "K": [61, 65], "R": null, "K'": [[41, 52], [46, 55]], "V'": [[30, 47], [39, 50]], "example": [29, 83]}, {"END": [131, 132], "A": [132, 133], "V": [104, 110], "Q": [129, 130], "K": [112, 117], "R": null, "K'": [[90, 99], [93, 103]], "V'": [[85, 94], [88, 97]], "example": [84, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the entrepreneur, the scientist and the doctor.\n< Toni Morrison likes Aventine Hill. Steve Jobs likes Kowsar County. Agatha Christie likes Vijayawada Junction railway station. >. So who wants to go to a place in Iran? the entrepreneur\n < Warren Buffett likes Hamilton Mountain. Dr. Gabor Mat\u00e9 likes Lindholm station. Jane Goodall likes Campeche Bank. >. So who wants to go to a place in Mexico? the scientist\n", "ranges": [{"END": [76, 77], "A": [77, 80], "V": [36, 39], "Q": [74, 75], "K": [41, 45], "R": null, "K'": [[31, 53], [35, 62]], "V'": [[24, 46], [29, 51]], "example": [23, 80]}, {"END": [124, 125], "A": [125, 127], "V": [102, 105], "Q": [122, 123], "K": [107, 110], "R": null, "K'": [[87, 98], [89, 101]], "V'": [[82, 90], [85, 96]], "example": [81, 127]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the entrepreneur, the doctor and the artist.\n< Lady Gaga likes Puerto Maldonado. Dr. Sanjay Gupta likes Foundation for a Free Information Infrastructure. Warren Buffett likes Teshie. >. So who wants to go to a place in Ghana? the entrepreneur\n < Dr. Mehmet Oz likes Fort Madalena. Larry Page likes La Ribera Baixa. Georgia O'Keeffe likes Pakpattan. >. So who wants to go to a place in Spain? the entrepreneur\n", "ranges": [{"END": [76, 77], "A": [77, 80], "V": [53, 56], "Q": [73, 75], "K": [58, 61], "R": null, "K'": [[29, 44], [34, 52]], "V'": [[24, 35], [27, 42]], "example": [23, 80]}, {"END": [132, 133], "A": [133, 136], "V": [96, 98], "Q": [130, 131], "K": [100, 106], "R": null, "K'": [[91, 115], [95, 118]], "V'": [[82, 107], [89, 113]], "example": [81, 136]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Leiria. Stephen Hawking likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is the athlete? Answer: No\n Premise: < Harper Lee likes Al-Hasakah Governorate. Justin Bieber likes Ledaal. Clarence Darrow likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the lawyer? Answer: Yes\n", "ranges": [{"END": [103, 104], "A": [98, 101], "V": [56, 59], "Q": [95, 97], "K": [61, 66], "R": null, "K'": [[40, 52], [46, 55]], "V'": [[34, 47], [38, 50]], "example": [29, 105]}, {"END": [179, 180], "A": [175, 177], "V": [133, 137], "Q": [172, 174], "K": [139, 143], "R": null, "K'": [[115, 129], [122, 132]], "V'": [[110, 123], [113, 127]], "example": [106, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Usain Bolt likes Ust-Katav. Salvador Dal\u00ed likes Leiria. Stephen Hawking likes Chol Kiri District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is the athlete? Answer: No\n Premise: < Harper Lee likes Al-Hasakah Governorate. Justin Bieber likes Ledaal. Clarence Darrow likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the musician? Answer: No\n", "ranges": [{"END": [103, 104], "A": [98, 101], "V": [56, 59], "Q": [95, 97], "K": [61, 66], "R": null, "K'": [[40, 52], [46, 55]], "V'": [[34, 47], [38, 50]], "example": [29, 105]}, {"END": [180, 181], "A": [175, 178], "V": [133, 137], "Q": [172, 174], "K": [139, 143], "R": null, "K'": [[115, 129], [122, 132]], "V'": [[110, 123], [113, 127]], "example": [106, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Georgia O'Keeffe likes Etobicoke North. Richard Dawkins likes Gmina Kleczew. LeBron James likes Madona District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Latvia is the scientist? Answer: No\n Premise: < Claude Monet likes Istanbul Airport. George Orwell likes Mbale District. Neil deGrasse Tyson likes Grianan of Aileach. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Uganda is the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [53, 57], "Q": [91, 93], "K": [59, 62], "R": null, "K'": [[35, 47], [41, 52]], "V'": [[27, 42], [33, 45]], "example": [22, 101]}, {"END": [179, 180], "A": [175, 177], "V": [116, 119], "Q": [171, 174], "K": [121, 125], "R": null, "K'": [[111, 135], [115, 142]], "V'": [[106, 126], [109, 133]], "example": [102, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Georgia O'Keeffe likes Etobicoke North. Richard Dawkins likes Gmina Kleczew. LeBron James likes Madona District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Latvia is the scientist? Answer: No\n Premise: < Claude Monet likes Istanbul Airport. George Orwell likes Mbale District. Neil deGrasse Tyson likes Grianan of Aileach. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Uganda is the artist? Answer: No\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [53, 57], "Q": [91, 93], "K": [59, 62], "R": null, "K'": [[35, 47], [41, 52]], "V'": [[27, 42], [33, 45]], "example": [22, 101]}, {"END": [179, 180], "A": [175, 177], "V": [116, 119], "Q": [171, 174], "K": [121, 125], "R": null, "K'": [[111, 135], [115, 142]], "V'": [[106, 126], [109, 133]], "example": [102, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Dr. Mehmet Oz likes Al Daayen. Jane Goodall likes Theni district. Roger Federer likes Beneden Merwede. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the athlete? Answer: No\n Premise: < Eminem likes Chaville. Meryl Streep likes Dospat Municipality. Pablo Picasso likes Sydney Peace Prize. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the actor? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [34, 41], "Q": [96, 98], "K": [43, 47], "R": null, "K'": [[53, 62], [56, 67]], "V'": [[48, 57], [51, 60]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [120, 126], "Q": [171, 173], "K": [128, 133], "R": null, "K'": [[116, 139], [119, 142]], "V'": [[111, 134], [114, 137]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Dr. Mehmet Oz likes Al Daayen. Jane Goodall likes Theni district. Roger Federer likes Beneden Merwede. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the athlete? Answer: No\n Premise: < Eminem likes Chaville. Meryl Streep likes Dospat Municipality. Pablo Picasso likes Sydney Peace Prize. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the artist? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [34, 41], "Q": [96, 98], "K": [43, 47], "R": null, "K'": [[53, 62], [56, 67]], "V'": [[48, 57], [51, 60]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [120, 126], "Q": [171, 173], "K": [128, 133], "R": null, "K'": [[116, 139], [119, 142]], "V'": [[111, 134], [114, 137]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the scientist, the doctor and the actor.\nPremise: < Dr. Sylvia Earle likes Velbert. Rihanna likes Bird's Head Peninsula. Albert Einstein likes Dent Island Light. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is the doctor? Answer: No\n Premise: < Roger Federer likes Stara Zagora. Johnny Depp likes Gobardanga. Dr. Gabor Mat\u00e9 likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the athlete? Answer: Yes\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [42, 45], "Q": [93, 95], "K": [47, 54], "R": null, "K'": [[39, 60], [41, 64]], "V'": [[31, 55], [37, 58]], "example": [26, 102]}, {"END": [174, 175], "A": [169, 172], "V": [107, 110], "Q": [166, 168], "K": [112, 116], "R": null, "K'": [[122, 135], [126, 137]], "V'": [[117, 127], [120, 133]], "example": [103, 176]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the actor, the musician and the doctor.\nPremise: < Dr. Sylvia Earle likes Velbert. Rihanna likes Bird's Head Peninsula. Albert Einstein likes Dent Island Light. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is the doctor? Answer: No\n Premise: < Roger Federer likes Stara Zagora. Johnny Depp likes Gobardanga. Dr. Gabor Mat\u00e9 likes Calw. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the actor? Answer: No\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [42, 45], "Q": [93, 95], "K": [47, 54], "R": null, "K'": [[39, 60], [41, 64]], "V'": [[31, 55], [37, 58]], "example": [26, 102]}, {"END": [173, 174], "A": [169, 171], "V": [107, 110], "Q": [166, 168], "K": [112, 116], "R": null, "K'": [[122, 135], [126, 137]], "V'": [[117, 127], [120, 133]], "example": [103, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < Leonardo DiCaprio likes Zwiefalten. Charlize Theron likes West Royalty, Prince Edward Island. Frida Kahlo likes Langarud County. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the artist? Answer: Yes\n Premise: < Elon Musk likes Kandiaro Taluka. Ruth Bader Ginsburg likes Tovuz District. Dr. Jane Goodall likes Panagarh. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Azerbaijan is the lawyer? Answer: Yes\n", "ranges": [{"END": [103, 104], "A": [99, 101], "V": [57, 62], "Q": [97, 98], "K": [64, 68], "R": null, "K'": [[37, 49], [41, 56]], "V'": [[30, 42], [35, 47]], "example": [25, 105]}, {"END": [185, 186], "A": [181, 183], "V": [123, 129], "Q": [175, 180], "K": [131, 135], "R": null, "K'": [[116, 143], [122, 146]], "V'": [[110, 136], [114, 141]], "example": [106, 187]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < Leonardo DiCaprio likes Zwiefalten. Charlize Theron likes West Royalty, Prince Edward Island. Frida Kahlo likes Langarud County. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the artist? Answer: Yes\n Premise: < Elon Musk likes Kandiaro Taluka. Ruth Bader Ginsburg likes Tovuz District. Dr. Jane Goodall likes Panagarh. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Azerbaijan is the entrepreneur? Answer: No\n", "ranges": [{"END": [103, 104], "A": [99, 101], "V": [57, 62], "Q": [97, 98], "K": [64, 68], "R": null, "K'": [[37, 49], [41, 56]], "V'": [[30, 42], [35, 47]], "example": [25, 105]}, {"END": [187, 188], "A": [181, 185], "V": [123, 129], "Q": [175, 180], "K": [131, 135], "R": null, "K'": [[116, 143], [122, 146]], "V'": [[110, 136], [114, 141]], "example": [106, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the musician, the doctor, the entrepreneur and the author.\nPremise: < Mark Twain likes Electoral district of Wantirna. Bill Gates likes Shakhenat Rural District. Ada Lovelace likes Vijayawada Junction railway station. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the author? Answer: No\n Premise: < Lady Gaga likes Puerto Maldonado. Dr. Sanjay Gupta likes Foundation for a Free Information Infrastructure. Warren Buffett likes Teshie. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ghana is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [46, 49], "Q": [103, 104], "K": [51, 58], "R": null, "K'": [[37, 65], [45, 74]], "V'": [[32, 59], [35, 63]], "example": [27, 111]}, {"END": [191, 192], "A": [185, 189], "V": [145, 148], "Q": [182, 184], "K": [150, 153], "R": null, "K'": [[121, 136], [126, 144]], "V'": [[116, 127], [119, 134]], "example": [112, 193]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the musician and the doctor.\nPremise: < Mark Twain likes Electoral district of Wantirna. Bill Gates likes Shakhenat Rural District. Ada Lovelace likes Vijayawada Junction railway station. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the author? Answer: No\n Premise: < Lady Gaga likes Puerto Maldonado. Dr. Sanjay Gupta likes Foundation for a Free Information Infrastructure. Warren Buffett likes Teshie. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ghana is the musician? Answer: No\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [46, 49], "Q": [103, 104], "K": [51, 58], "R": null, "K'": [[37, 65], [45, 74]], "V'": [[32, 59], [35, 63]], "example": [27, 111]}, {"END": [190, 191], "A": [185, 188], "V": [145, 148], "Q": [182, 184], "K": [150, 153], "R": null, "K'": [[121, 136], [126, 144]], "V'": [[116, 127], [119, 134]], "example": [112, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the author, the artist, the architect, the musician and the lawyer.\nPremise: < Johnny Depp likes K.S.V. Roeselare. Hillary Clinton likes Ozumba. Adele likes 2004 Indian Ocean earthquake. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is the actor? Answer: No\n Premise: < J.K. Rowling likes FC Anker Wismar. Ieoh Ming Pei likes Free National Movement. Claude Monet likes Warsaw Uprising Museum. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bahamas is the architect? Answer: Yes\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [48, 52], "Q": [103, 104], "K": [54, 58], "R": null, "K'": [[37, 65], [47, 74]], "V'": [[32, 59], [35, 62]], "example": [27, 111]}, {"END": [193, 194], "A": [189, 191], "V": [131, 138], "Q": [185, 188], "K": [140, 144], "R": null, "K'": [[124, 150], [130, 156]], "V'": [[116, 145], [122, 148]], "example": [112, 195]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the musician, the architect, the artist and the author.\nPremise: < Johnny Depp likes K.S.V. Roeselare. Hillary Clinton likes Ozumba. Adele likes 2004 Indian Ocean earthquake. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is the actor? Answer: No\n Premise: < J.K. Rowling likes FC Anker Wismar. Ieoh Ming Pei likes Free National Movement. Claude Monet likes Warsaw Uprising Museum. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bahamas is the artist? Answer: No\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [48, 52], "Q": [103, 104], "K": [54, 58], "R": null, "K'": [[37, 65], [47, 74]], "V'": [[32, 59], [35, 62]], "example": [27, 111]}, {"END": [193, 194], "A": [189, 191], "V": [131, 138], "Q": [185, 188], "K": [140, 144], "R": null, "K'": [[124, 150], [130, 156]], "V'": [[116, 145], [122, 148]], "example": [112, 195]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Cristiano Ronaldo likes Soalala District. Kanye West likes Gmina Bodzentyn. Ieoh Ming Pei likes Alberta Alliance Party. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is the athlete? Answer: Yes\n Premise: < Serena Williams likes Media Development Authority. Vincent van Gogh likes Sakarya Province. Frank Lloyd Wright likes Skole Raion. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ukraine is the architect? Answer: Yes\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [27, 32], "Q": [93, 96], "K": [34, 38], "R": null, "K'": [[45, 60], [50, 64]], "V'": [[39, 51], [43, 58]], "example": [22, 104]}, {"END": [175, 176], "A": [171, 173], "V": [131, 134], "Q": [169, 170], "K": [136, 140], "R": null, "K'": [[114, 126], [118, 130]], "V'": [[109, 119], [112, 124]], "example": [105, 177]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Cristiano Ronaldo likes Soalala District. Kanye West likes Gmina Bodzentyn. Ieoh Ming Pei likes Alberta Alliance Party. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is the athlete? Answer: Yes\n Premise: < Serena Williams likes Media Development Authority. Vincent van Gogh likes Sakarya Province. Frank Lloyd Wright likes Skole Raion. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ukraine is the artist? Answer: No\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [27, 32], "Q": [93, 96], "K": [34, 38], "R": null, "K'": [[45, 60], [50, 64]], "V'": [[39, 51], [43, 58]], "example": [22, 104]}, {"END": [175, 176], "A": [171, 173], "V": [131, 134], "Q": [169, 170], "K": [136, 140], "R": null, "K'": [[114, 126], [118, 130]], "V'": [[109, 119], [112, 124]], "example": [105, 177]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the athlete, the author and the musician.\n< Ust-Katav attracts Usain Bolt. Leiria attracts Salvador Dal\u00ed. Chol Kiri District attracts Stephen Hawking. >. So who wants to go to a place in Cambodia? the scientist\n < Fawkner attracts Harper Lee. Neighbourhoods in Kolkata attracts Justin Bieber. Fischenthal attracts Clarence Darrow. >. So who wants to go to a place in Switzerland? the lawyer\n", "ranges": [{"END": [77, 78], "A": [78, 80], "V": [59, 62], "Q": [74, 76], "K": [52, 57], "R": null, "K'": [[30, 43], [36, 46]], "V'": [[38, 48], [42, 51]], "example": [29, 80]}, {"END": [131, 132], "A": [132, 133], "V": [113, 117], "Q": [129, 130], "K": [107, 111], "R": null, "K'": [[82, 91], [85, 100]], "V'": [[87, 102], [90, 106]], "example": [81, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Ba F.C attracts Dr. Gabor Mat\u00e9. Allan Cup attracts Simone Biles. Tell Rifaat attracts Mies van der Rohe. >. So who wants to go to a place in Fiji? the doctor\n < Hrtkovci attracts Zaha Hadid. DESTATIS attracts Cristiano Ronaldo. Hadzhidimovo attracts Eminem. >. So who wants to go to a place in Croatia? the architect\n", "ranges": [{"END": [73, 74], "A": [74, 75], "V": [29, 35], "Q": [70, 72], "K": [23, 27], "R": null, "K'": [[36, 46], [39, 50]], "V'": [[41, 52], [45, 58]], "example": [22, 75]}, {"END": [124, 125], "A": [125, 126], "V": [83, 87], "Q": [121, 123], "K": [77, 81], "R": null, "K'": [[88, 99], [91, 104]], "V'": [[93, 106], [98, 109]], "example": [76, 126]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Wakefield Park attracts Neil deGrasse Tyson. Tinguiririca River attracts Vincent van Gogh. Suwayq attracts Dr. Neil deGrasse Tyson. >. So who wants to go to a place in Oman? the doctor\n < Vaujany attracts Claude Monet. Fukuno, Toyama attracts Lady Gaga. Art Gallery of Ontario attracts Johnnie Cochran. >. So who wants to go to a place in France? the artist\n", "ranges": [{"END": [83, 84], "A": [84, 85], "V": [59, 68], "Q": [80, 82], "K": [54, 57], "R": null, "K'": [[26, 40], [30, 46]], "V'": [[32, 61, 48], [39, 68, 53]], "example": [25, 85]}, {"END": [134, 135], "A": [135, 136], "V": [93, 96], "Q": [132, 133], "K": [87, 91], "R": null, "K'": [[97, 109], [103, 113]], "V'": [[105, 115], [108, 120]], "example": [86, 136]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Holycross-Ballycahill GAA attracts Kanye West. Little Stirrup Cay attracts LeBron James. Kondotty attracts Eminem. >. So who wants to go to a place in Bahamas? the athlete\n < Isa Air Base attracts Tom Brady. Atromitos Piraeus F.C attracts Leonardo da Vinci. Persegres Gresik United attracts Rem Koolhaas. >. So who wants to go to a place in Bahrain? the athlete\n", "ranges": [{"END": [79, 80], "A": [80, 82], "V": [49, 53], "Q": [75, 78], "K": [41, 47], "R": null, "K'": [[23, 54], [34, 58]], "V'": [[36, 60], [40, 63]], "example": [22, 82]}, {"END": [139, 140], "A": [140, 142], "V": [89, 92], "Q": [136, 138], "K": [84, 87], "R": null, "K'": [[93, 110], [102, 117]], "V'": [[104, 119], [109, 124]], "example": [83, 142]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the doctor.\n< Broken Pencil attracts Dr. Temple Grandin. Aden attracts Agatha Christie. Gmina Olsztyn attracts Dr. Sylvia Earle. >. So who wants to go to a place in Yemen? the author\n < United Mine Workers attracts Dr. Mehmet Oz. Saint Gayane Church attracts LeBron James. Yoro attracts Richard Dawkins. >. So who wants to go to a place in Honduras? the scientist\n", "ranges": [{"END": [75, 76], "A": [76, 77], "V": [40, 45], "Q": [72, 74], "K": [36, 38], "R": null, "K'": [[23, 46], [28, 52]], "V'": [[30, 54], [35, 60]], "example": [22, 77]}, {"END": [127, 128], "A": [128, 130], "V": [108, 111], "Q": [123, 126], "K": [104, 106], "R": null, "K'": [[79, 93], [83, 97]], "V'": [[85, 99], [92, 103]], "example": [78, 130]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the author, the athlete, the doctor, the artist and the actor.\n< Khmilnyk attracts Dr. Neil deGrasse Tyson. Sidhi district attracts Warren Buffett. Soalala District attracts Harper Lee. >. So who wants to go to a place in Madagascar? the author\n < Jan Amora attracts Roger Federer. Alpokalja attracts Pablo Picasso. Peremyshliany attracts Meryl Streep. >. So who wants to go to a place in Ukraine? the actor\n", "ranges": [{"END": [81, 82], "A": [82, 83], "V": [62, 65], "Q": [77, 80], "K": [56, 60], "R": null, "K'": [[30, 47], [35, 50]], "V'": [[37, 52], [46, 55]], "example": [29, 83]}, {"END": [131, 132], "A": [132, 133], "V": [111, 117], "Q": [129, 130], "K": [104, 109], "R": null, "K'": [[85, 94], [88, 98]], "V'": [[90, 100], [93, 103]], "example": [84, 133]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the entrepreneur, the scientist and the doctor.\n< Aventine Hill attracts Toni Morrison. Kowsar County attracts Steve Jobs. Vijayawada Junction railway station attracts Agatha Christie. >. So who wants to go to a place in Iran? the entrepreneur\n < Hamilton Mountain attracts Warren Buffett. Lindholm station attracts Dr. Gabor Mat\u00e9. Campeche Bank attracts Jane Goodall. >. So who wants to go to a place in Mexico? the scientist\n", "ranges": [{"END": [76, 77], "A": [77, 80], "V": [42, 45], "Q": [74, 75], "K": [36, 40], "R": null, "K'": [[24, 46], [28, 55]], "V'": [[30, 57], [35, 62]], "example": [23, 80]}, {"END": [124, 125], "A": [125, 127], "V": [107, 110], "Q": [122, 123], "K": [102, 105], "R": null, "K'": [[82, 90], [84, 93]], "V'": [[86, 95], [89, 101]], "example": [81, 127]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the entrepreneur, the doctor and the artist.\n< Puerto Maldonado attracts Lady Gaga. Foundation for a Free Information Infrastructure attracts Dr. Sanjay Gupta. Teshie attracts Warren Buffett. >. So who wants to go to a place in Ghana? the entrepreneur\n < Fort Madalena attracts Dr. Mehmet Oz. La Ribera Baixa attracts Larry Page. Pakpattan attracts Georgia O'Keeffe. >. So who wants to go to a place in Spain? the entrepreneur\n", "ranges": [{"END": [76, 77], "A": [77, 80], "V": [58, 61], "Q": [73, 75], "K": [53, 56], "R": null, "K'": [[24, 35], [29, 43]], "V'": [[31, 45], [34, 52]], "example": [23, 80]}, {"END": [132, 133], "A": [133, 136], "V": [104, 106], "Q": [130, 131], "K": [96, 102], "R": null, "K'": [[82, 107], [86, 110]], "V'": [[88, 112], [95, 118]], "example": [81, 136]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the musician, the artist, the author and the lawyer.\nPremise: < Ust-Katav attracts Usain Bolt. Leiria attracts Salvador Dal\u00ed. Chol Kiri District attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is the athlete? Answer: No\n Premise: < Al-Hasakah Governorate attracts Harper Lee. Ledaal attracts Justin Bieber. Al Daayen attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the lawyer? Answer: Yes\n", "ranges": [{"END": [103, 104], "A": [98, 101], "V": [63, 66], "Q": [95, 97], "K": [56, 61], "R": null, "K'": [[34, 47], [40, 50]], "V'": [[42, 52], [46, 55]], "example": [29, 105]}, {"END": [179, 180], "A": [175, 177], "V": [139, 143], "Q": [172, 174], "K": [133, 137], "R": null, "K'": [[110, 123], [117, 126]], "V'": [[119, 128], [122, 132]], "example": [106, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author, the lawyer, the musician and the artist.\nPremise: < Ust-Katav attracts Usain Bolt. Leiria attracts Salvador Dal\u00ed. Chol Kiri District attracts Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is the athlete? Answer: No\n Premise: < Al-Hasakah Governorate attracts Harper Lee. Ledaal attracts Justin Bieber. Al Daayen attracts Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the musician? Answer: No\n", "ranges": [{"END": [103, 104], "A": [98, 101], "V": [63, 66], "Q": [95, 97], "K": [56, 61], "R": null, "K'": [[34, 47], [40, 50]], "V'": [[42, 52], [46, 55]], "example": [29, 105]}, {"END": [180, 181], "A": [175, 178], "V": [139, 143], "Q": [172, 174], "K": [133, 137], "R": null, "K'": [[110, 123], [117, 126]], "V'": [[119, 128], [122, 132]], "example": [106, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Etobicoke North attracts Georgia O'Keeffe. Gmina Kleczew attracts Richard Dawkins. Madona District attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Latvia is the scientist? Answer: No\n Premise: < Istanbul Airport attracts Claude Monet. Mbale District attracts George Orwell. Grianan of Aileach attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Uganda is the author? Answer: Yes\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [58, 62], "Q": [91, 93], "K": [53, 56], "R": null, "K'": [[27, 42], [33, 47]], "V'": [[35, 49], [41, 52]], "example": [22, 101]}, {"END": [179, 180], "A": [175, 177], "V": [122, 125], "Q": [171, 174], "K": [116, 120], "R": null, "K'": [[106, 126], [110, 133]], "V'": [[112, 135], [115, 142]], "example": [102, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Etobicoke North attracts Georgia O'Keeffe. Gmina Kleczew attracts Richard Dawkins. Madona District attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Latvia is the scientist? Answer: No\n Premise: < Istanbul Airport attracts Claude Monet. Mbale District attracts George Orwell. Grianan of Aileach attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Uganda is the artist? Answer: No\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [58, 62], "Q": [91, 93], "K": [53, 56], "R": null, "K'": [[27, 42], [33, 47]], "V'": [[35, 49], [41, 52]], "example": [22, 101]}, {"END": [179, 180], "A": [175, 177], "V": [122, 125], "Q": [171, 174], "K": [116, 120], "R": null, "K'": [[106, 126], [110, 133]], "V'": [[112, 135], [115, 142]], "example": [102, 181]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Al Daayen attracts Dr. Mehmet Oz. Theni district attracts Jane Goodall. Beneden Merwede attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the athlete? Answer: No\n Premise: < Chaville attracts Eminem. Dospat Municipality attracts Meryl Streep. Sydney Peace Prize attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the actor? Answer: Yes\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [40, 47], "Q": [96, 98], "K": [34, 38], "R": null, "K'": [[48, 57], [51, 62]], "V'": [[53, 64], [56, 67]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [127, 133], "Q": [171, 173], "K": [120, 125], "R": null, "K'": [[111, 134], [114, 137]], "V'": [[116, 139], [119, 142]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Al Daayen attracts Dr. Mehmet Oz. Theni district attracts Jane Goodall. Beneden Merwede attracts Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is the athlete? Answer: No\n Premise: < Chaville attracts Eminem. Dospat Municipality attracts Meryl Streep. Sydney Peace Prize attracts Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the artist? Answer: No\n", "ranges": [{"END": [104, 105], "A": [99, 102], "V": [40, 47], "Q": [96, 98], "K": [34, 38], "R": null, "K'": [[48, 57], [51, 62]], "V'": [[53, 64], [56, 67]], "example": [29, 106]}, {"END": [178, 179], "A": [174, 176], "V": [127, 133], "Q": [171, 173], "K": [120, 125], "R": null, "K'": [[111, 134], [114, 137]], "V'": [[116, 139], [119, 142]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the scientist, the doctor and the actor.\nPremise: < Velbert attracts Dr. Sylvia Earle. Bird's Head Peninsula attracts Rihanna. Dent Island Light attracts Albert Einstein. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is the doctor? Answer: No\n Premise: < Stara Zagora attracts Roger Federer. Gobardanga attracts Johnny Depp. Calw attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the athlete? Answer: Yes\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [51, 54], "Q": [93, 95], "K": [42, 49], "R": null, "K'": [[31, 55], [33, 59]], "V'": [[35, 61], [41, 64]], "example": [26, 102]}, {"END": [174, 175], "A": [169, 172], "V": [113, 116], "Q": [166, 168], "K": [107, 111], "R": null, "K'": [[117, 127], [121, 129]], "V'": [[123, 131], [126, 137]], "example": [103, 176]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the actor, the musician and the doctor.\nPremise: < Velbert attracts Dr. Sylvia Earle. Bird's Head Peninsula attracts Rihanna. Dent Island Light attracts Albert Einstein. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is the doctor? Answer: No\n Premise: < Stara Zagora attracts Roger Federer. Gobardanga attracts Johnny Depp. Calw attracts Dr. Gabor Mat\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bulgaria is the actor? Answer: No\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [51, 54], "Q": [93, 95], "K": [42, 49], "R": null, "K'": [[31, 55], [33, 59]], "V'": [[35, 61], [41, 64]], "example": [26, 102]}, {"END": [173, 174], "A": [169, 171], "V": [113, 116], "Q": [166, 168], "K": [107, 111], "R": null, "K'": [[117, 127], [121, 129]], "V'": [[123, 131], [126, 137]], "example": [103, 175]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < Zwiefalten attracts Leonardo DiCaprio. West Royalty, Prince Edward Island attracts Charlize Theron. Langarud County attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the artist? Answer: Yes\n Premise: < Kandiaro Taluka attracts Elon Musk. Tovuz District attracts Ruth Bader Ginsburg. Panagarh attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Azerbaijan is the lawyer? Answer: Yes\n", "ranges": [{"END": [103, 104], "A": [99, 101], "V": [63, 68], "Q": [97, 98], "K": [57, 61], "R": null, "K'": [[30, 42], [34, 49]], "V'": [[36, 51], [41, 56]], "example": [25, 105]}, {"END": [185, 186], "A": [181, 183], "V": [129, 135], "Q": [175, 180], "K": [123, 127], "R": null, "K'": [[110, 136], [116, 139]], "V'": [[118, 141], [122, 146]], "example": [106, 187]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < Zwiefalten attracts Leonardo DiCaprio. West Royalty, Prince Edward Island attracts Charlize Theron. Langarud County attracts Frida Kahlo. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the artist? Answer: Yes\n Premise: < Kandiaro Taluka attracts Elon Musk. Tovuz District attracts Ruth Bader Ginsburg. Panagarh attracts Dr. Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Azerbaijan is the entrepreneur? Answer: No\n", "ranges": [{"END": [103, 104], "A": [99, 101], "V": [63, 68], "Q": [97, 98], "K": [57, 61], "R": null, "K'": [[30, 42], [34, 49]], "V'": [[36, 51], [41, 56]], "example": [25, 105]}, {"END": [187, 188], "A": [181, 185], "V": [129, 135], "Q": [175, 180], "K": [123, 127], "R": null, "K'": [[110, 136], [116, 139]], "V'": [[118, 141], [122, 146]], "example": [106, 189]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the musician, the doctor, the entrepreneur and the author.\nPremise: < Electoral district of Wantirna attracts Mark Twain. Shakhenat Rural District attracts Bill Gates. Vijayawada Junction railway station attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the author? Answer: No\n Premise: < Puerto Maldonado attracts Lady Gaga. Foundation for a Free Information Infrastructure attracts Dr. Sanjay Gupta. Teshie attracts Warren Buffett. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ghana is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [55, 58], "Q": [103, 104], "K": [46, 53], "R": null, "K'": [[32, 59], [40, 68]], "V'": [[42, 70], [45, 74]], "example": [27, 111]}, {"END": [191, 192], "A": [185, 189], "V": [150, 153], "Q": [182, 184], "K": [145, 148], "R": null, "K'": [[116, 127], [121, 135]], "V'": [[123, 137], [126, 144]], "example": [112, 193]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the musician and the doctor.\nPremise: < Electoral district of Wantirna attracts Mark Twain. Shakhenat Rural District attracts Bill Gates. Vijayawada Junction railway station attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Iran is the author? Answer: No\n Premise: < Puerto Maldonado attracts Lady Gaga. Foundation for a Free Information Infrastructure attracts Dr. Sanjay Gupta. Teshie attracts Warren Buffett. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ghana is the musician? Answer: No\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [55, 58], "Q": [103, 104], "K": [46, 53], "R": null, "K'": [[32, 59], [40, 68]], "V'": [[42, 70], [45, 74]], "example": [27, 111]}, {"END": [190, 191], "A": [185, 188], "V": [150, 153], "Q": [182, 184], "K": [145, 148], "R": null, "K'": [[116, 127], [121, 135]], "V'": [[123, 137], [126, 144]], "example": [112, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the author, the artist, the architect, the musician and the lawyer.\nPremise: < K.S.V. Roeselare attracts Johnny Depp. Ozumba attracts Hillary Clinton. 2004 Indian Ocean earthquake attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is the actor? Answer: No\n Premise: < FC Anker Wismar attracts J.K. Rowling. Free National Movement attracts Ieoh Ming Pei. Warsaw Uprising Museum attracts Claude Monet. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bahamas is the architect? Answer: Yes\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [54, 58], "Q": [103, 104], "K": [48, 52], "R": null, "K'": [[32, 60], [42, 69]], "V'": [[44, 71], [47, 74]], "example": [27, 111]}, {"END": [193, 194], "A": [189, 191], "V": [137, 144], "Q": [185, 188], "K": [131, 135], "R": null, "K'": [[116, 145], [122, 151]], "V'": [[124, 153], [130, 156]], "example": [112, 195]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the musician, the architect, the artist and the author.\nPremise: < K.S.V. Roeselare attracts Johnny Depp. Ozumba attracts Hillary Clinton. 2004 Indian Ocean earthquake attracts Adele. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is the actor? Answer: No\n Premise: < FC Anker Wismar attracts J.K. Rowling. Free National Movement attracts Ieoh Ming Pei. Warsaw Uprising Museum attracts Claude Monet. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Bahamas is the artist? Answer: No\n", "ranges": [{"END": [109, 110], "A": [105, 107], "V": [54, 58], "Q": [103, 104], "K": [48, 52], "R": null, "K'": [[32, 60], [42, 69]], "V'": [[44, 71], [47, 74]], "example": [27, 111]}, {"END": [193, 194], "A": [189, 191], "V": [137, 144], "Q": [185, 188], "K": [131, 135], "R": null, "K'": [[116, 145], [122, 151]], "V'": [[124, 153], [130, 156]], "example": [112, 195]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the architect, the artist and the athlete.\nPremise: < Soalala District attracts Cristiano Ronaldo. Gmina Bodzentyn attracts Kanye West. Alberta Alliance Party attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is the athlete? Answer: Yes\n Premise: < Media Development Authority attracts Serena Williams. Sakarya Province attracts Vincent van Gogh. Skole Raion attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ukraine is the architect? Answer: Yes\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [33, 38], "Q": [93, 96], "K": [27, 31], "R": null, "K'": [[39, 51], [44, 55]], "V'": [[46, 57], [50, 64]], "example": [22, 104]}, {"END": [175, 176], "A": [171, 173], "V": [137, 140], "Q": [169, 170], "K": [131, 135], "R": null, "K'": [[109, 119], [113, 123]], "V'": [[115, 125], [118, 130]], "example": [105, 177]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the artist, the architect and the musician.\nPremise: < Soalala District attracts Cristiano Ronaldo. Gmina Bodzentyn attracts Kanye West. Alberta Alliance Party attracts Ieoh Ming Pei. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is the athlete? Answer: Yes\n Premise: < Media Development Authority attracts Serena Williams. Sakarya Province attracts Vincent van Gogh. Skole Raion attracts Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ukraine is the artist? Answer: No\n", "ranges": [{"END": [102, 103], "A": [97, 100], "V": [33, 38], "Q": [93, 96], "K": [27, 31], "R": null, "K'": [[39, 51], [44, 55]], "V'": [[46, 57], [50, 64]], "example": [22, 104]}, {"END": [175, 176], "A": [171, 173], "V": [137, 140], "Q": [169, 170], "K": [131, 135], "R": null, "K'": [[109, 119], [113, 123]], "V'": [[115, 125], [118, 130]], "example": [105, 177]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the lawyer, the musician, the athlete and the author.\n< Roger Federer likes Chol Kiri District. Usain Bolt likes Chol Kiri District. Jane Goodall likes Central Black Forest. >. The person who wants to go to a place in Cambodia is not the scientist\n < Harper Lee likes Adliswil. Justin Bieber likes Canton of Schaffhausen. Clarence Darrow likes Koriya district. >. The person who wants to go to a place in Switzerland is not the lawyer\n", "ranges": [{"END": [75, 76], "A'": [76, 78], "V'": [50, 53], "Q": [71, 73], "K'": [55, 58], "R": [74, 75], "K": [[32, 44], [37, 49]], "V": [[27, 38], [30, 42]], "example": [26, 78]}, {"END": [129, 130], "A'": [130, 131], "V'": [103, 107], "Q": [126, 127], "K'": [109, 113], "R": [128, 129], "K": [[85, 96], [89, 102]], "V": [[80, 90], [83, 94]], "example": [79, 131]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Natalie Portman likes Staatliche Antikensammlungen. Dr. Gabor Mat\u00e9 likes Cubagua. Rihanna likes Casiquiare canal. >. The person who wants to go to a place in Venezuela is not the actor\n < Neil deGrasse Tyson likes Gmina Warlubie. Eminem likes Tillya Tepe. LeBron James likes Bamyan. >. The person who wants to go to a place in Afghanistan is not the scientist\n", "ranges": [{"END": [79, 80], "A'": [80, 81], "V'": [27, 31], "Q": [76, 77], "K'": [33, 41], "R": [78, 79], "K": [[50, 58], [52, 63]], "V": [[42, 53], [48, 56]], "example": [26, 81]}, {"END": [135, 136], "A'": [136, 138], "V'": [83, 90], "Q": [131, 133], "K'": [92, 97], "R": [134, 135], "K": [[103, 115], [108, 118]], "V": [[98, 109], [101, 113]], "example": [82, 138]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the entrepreneur, the scientist, the author, the actor and the artist.\n< Leonardo da Vinci likes Gammalsvenskby. Marie Curie likes Al Ahmadi Governorate. Larry Page likes Al Ahmadi Governorate. >. The person who wants to go to a place in Kuwait is not the artist\n < Denzel Washington likes Chol Kiri District. J.K. Rowling likes Putyvl. Eminem likes Chol Kiri District. >. The person who wants to go to a place in Cambodia is not the author\n", "ranges": [{"END": [85, 86], "A'": [86, 87], "V'": [31, 36], "Q": [80, 83], "K'": [38, 44], "R": [84, 85], "K": [[50, 61], [56, 67]], "V": [[45, 57], [48, 59]], "example": [30, 87]}, {"END": [139, 140], "A'": [140, 141], "V'": [100, 106], "Q": [135, 137], "K'": [108, 111], "R": [138, 139], "K": [[94, 117], [99, 122]], "V": [[89, 112], [92, 115]], "example": [88, 141]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the doctor, the musician, the artist, the athlete and the lawyer.\n< Adele likes Trans-Sahara Highway. Hillary Clinton likes Guelma Province. Dr. Gabor Mat\u00e9 likes Guelma Province. >. The person who wants to go to a place in Algeria is not the musician\n < Cristiano Ronaldo likes Kondotty. Albert Einstein likes Stara Zagora. Pablo Picasso likes Dospat Municipality. >. The person who wants to go to a place in Bulgaria is not the athlete\n", "ranges": [{"END": [83, 84], "A'": [84, 86], "V'": [30, 33], "Q": [78, 81], "K'": [35, 41], "R": [82, 83], "K": [[48, 61], [52, 65]], "V": [[42, 53], [46, 59]], "example": [29, 86]}, {"END": [137, 138], "A'": [138, 140], "V'": [88, 93], "Q": [133, 135], "K'": [95, 99], "R": [136, 137], "K": [[105, 115], [109, 120]], "V": [[100, 110], [103, 113]], "example": [87, 140]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the author, the doctor, the actor and the lawyer.\n< J.R.R. Tolkien likes Guelma Province. Bill Gates likes Oshawa. Leonardo DiCaprio likes Guelma Province. >. The person who wants to go to a place in Algeria is not the entrepreneur\n < Leonardo DiCaprio likes Tillya Tepe. Dr. Neil deGrasse Tyson likes Bamyan. Alan Dershowitz likes Broken Pencil. >. The person who wants to go to a place in Afghanistan is not the lawyer\n", "ranges": [{"END": [80, 81], "A'": [81, 84], "V'": [42, 45], "Q": [75, 78], "K'": [47, 50], "R": [79, 80], "K": [[37, 58], [41, 62]], "V": [[26, 51], [35, 56]], "example": [25, 84]}, {"END": [143, 144], "A'": [144, 145], "V'": [114, 119], "Q": [139, 141], "K'": [121, 126], "R": [142, 143], "K": [[93, 110], [98, 113]], "V": [[86, 99], [91, 108]], "example": [85, 145]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the actor, the scientist, the athlete and the doctor.\n< Taylor Swift likes Pragersko. Dr. Gabor Mat\u00e9 likes Westerburg. Jane Goodall likes Roman Catholic Archdiocese of Ljubljana. >. The person who wants to go to a place in Slovenia is not the doctor\n < Rosie Franklin likes Bilecik Province. Usain Bolt likes Borghetto di Vara. Johnny Depp likes public transport in Istanbul. >. The person who wants to go to a place in Turkey is not the athlete\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [35, 41], "Q": [76, 78], "K'": [43, 46], "R": [79, 80], "K": [[31, 52], [34, 63]], "V": [[27, 47], [29, 50]], "example": [26, 82]}, {"END": [135, 136], "A'": [136, 138], "V'": [95, 99], "Q": [132, 133], "K'": [101, 107], "R": [134, 135], "K": [[89, 113], [94, 119]], "V": [[84, 108], [87, 111]], "example": [83, 138]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the author, the architect and the entrepreneur.\n< Dr. Sylvia Earle likes Lower Assam. Lady Gaga likes Yadagirigutta Temple. Louis Sullivan likes Komarichsky District. >. The person who wants to go to a place in India is not the architect\n < Sergey Brin likes West Darfur. Bill Gates likes Nuri. Jane Austen likes Vijayawada Junction railway station. >. The person who wants to go to a place in Sudan is not the author\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [53, 57], "Q": [77, 78], "K'": [59, 64], "R": [79, 80], "K": [[35, 44], [38, 52]], "V": [[27, 39], [33, 42]], "example": [26, 82]}, {"END": [133, 134], "A'": [134, 135], "V'": [102, 105], "Q": [129, 131], "K'": [107, 116], "R": [132, 133], "K": [[90, 99], [93, 101]], "V": [[84, 94], [88, 97]], "example": [83, 135]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the actor, the lawyer, the athlete and the musician.\n< Barack Obama likes Sommariva del Bosco. Drake likes Villa La Pietra. Roger Federer likes Agios Dimitrios. >. The person who wants to go to a place in Italy is not the athlete\n < Tom Hanks likes Aventine Hill. LeBron James likes Ticho House. J.R.R. Tolkien likes Geffen Award. >. The person who wants to go to a place in Israel is not the actor\n", "ranges": [{"END": [75, 76], "A'": [76, 78], "V'": [49, 52], "Q": [72, 73], "K'": [54, 59], "R": [74, 75], "K": [[32, 44], [39, 48]], "V": [[26, 40], [30, 42]], "example": [25, 78]}, {"END": [131, 132], "A'": [132, 133], "V'": [80, 83], "Q": [128, 129], "K'": [85, 89], "R": [130, 131], "K": [[96, 112], [100, 115]], "V": [[90, 101], [94, 110]], "example": [79, 133]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the artist.\nPremise: < Roger Federer likes Chol Kiri District. Usain Bolt likes Chol Kiri District. Jane Goodall likes Central Black Forest. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is not the scientist? Answer: Yes\n Premise: < Johnny Depp likes Neighbourhoods in Kolkata. Frida Kahlo likes Al Daayen. Ada Lovelace likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is not the actor? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [50, 53], "Q": [87, 89], "K'": [55, 58], "R": [90, 91], "K": [[32, 44], [37, 49]], "V": [[27, 38], [30, 42]], "example": [22, 98]}, {"END": [177, 178], "A'": [173, 175], "V'": [103, 106], "Q": [169, 171], "K'": [108, 117], "R": [172, 173], "K": [[125, 136], [129, 140]], "V": [[118, 130], [123, 134]], "example": [99, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the artist and the actor.\nPremise: < Roger Federer likes Chol Kiri District. Usain Bolt likes Chol Kiri District. Jane Goodall likes Central Black Forest. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is not the scientist? Answer: Yes\n Premise: < Johnny Depp likes Neighbourhoods in Kolkata. Frida Kahlo likes Al Daayen. Ada Lovelace likes Al Daayen. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is not the artist? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [50, 53], "Q": [87, 89], "K'": [55, 58], "R": [90, 91], "K": [[32, 44], [37, 49]], "V": [[27, 38], [30, 42]], "example": [22, 98]}, {"END": [177, 178], "A'": [173, 175], "V'": [103, 106], "Q": [169, 171], "K'": [108, 117], "R": [172, 173], "K": [[125, 136], [129, 140]], "V": [[118, 130], [123, 134]], "example": [99, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the athlete, the lawyer, the architect and the entrepreneur.\nPremise: < Beyonc\u00e9 likes Nyeri County. Michael Phelps likes Arjoun. Barack Obama likes Moi International Sports Centre. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kenya is not the musician? Answer: No\n Premise: < Michael Phelps likes Helsinki City Hall. Larry Page likes Lambunao. Norman Foster likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Philippines is not the athlete? Answer: Yes\n", "ranges": [{"END": [101, 102], "A'": [96, 99], "V'": [42, 46], "Q": [92, 94], "K'": [48, 51], "R": [95, 96], "K": [[37, 58], [41, 63]], "V": [[32, 52], [35, 56]], "example": [27, 103]}, {"END": [175, 176], "A'": [170, 173], "V'": [108, 112], "Q": [167, 168], "K'": [114, 119], "R": [169, 170], "K": [[124, 133], [127, 138]], "V": [[120, 128], [122, 131]], "example": [104, 177]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the athlete, the architect, the entrepreneur and the musician.\nPremise: < Beyonc\u00e9 likes Nyeri County. Michael Phelps likes Arjoun. Barack Obama likes Moi International Sports Centre. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kenya is not the musician? Answer: No\n Premise: < Michael Phelps likes Helsinki City Hall. Larry Page likes Lambunao. Norman Foster likes Lake Caliraya. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Philippines is not the entrepreneur? Answer: No\n", "ranges": [{"END": [101, 102], "A'": [96, 99], "V'": [42, 46], "Q": [92, 94], "K'": [48, 51], "R": [95, 96], "K": [[37, 58], [41, 63]], "V": [[32, 52], [35, 56]], "example": [27, 103]}, {"END": [176, 177], "A'": [170, 174], "V'": [108, 112], "Q": [167, 168], "K'": [114, 119], "R": [169, 170], "K": [[124, 133], [127, 138]], "V": [[120, 128], [122, 131]], "example": [104, 178]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the architect, the entrepreneur, the musician, the scientist and the lawyer.\nPremise: < Richard Dawkins likes Komarichsky District. J.K. Rowling likes Were Ilu. Lady Gaga likes Beles River. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ethiopia is not the scientist? Answer: Yes\n Premise: < Oprah Winfrey likes Simeulue. Thurgood Marshall likes Balige. Maya Lin likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is not the architect? Answer: Yes\n", "ranges": [{"END": [106, 107], "A'": [101, 104], "V'": [35, 38], "Q": [96, 99], "K'": [40, 45], "R": [100, 101], "K": [[54, 64], [58, 67]], "V": [[46, 59], [52, 62]], "example": [30, 108]}, {"END": [180, 181], "A'": [176, 178], "V'": [134, 137], "Q": [172, 174], "K'": [139, 143], "R": [175, 176], "K": [[120, 131], [124, 133]], "V": [[113, 125], [118, 129]], "example": [109, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the musician, the architect, the scientist and the author.\nPremise: < Richard Dawkins likes Komarichsky District. J.K. Rowling likes Were Ilu. Lady Gaga likes Beles River. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ethiopia is not the scientist? Answer: Yes\n Premise: < Oprah Winfrey likes Simeulue. Thurgood Marshall likes Balige. Maya Lin likes Lannemezan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is not the lawyer? Answer: No\n", "ranges": [{"END": [106, 107], "A'": [101, 104], "V'": [35, 38], "Q": [96, 99], "K'": [40, 45], "R": [100, 101], "K": [[54, 64], [58, 67]], "V": [[46, 59], [52, 62]], "example": [30, 108]}, {"END": [180, 181], "A'": [176, 178], "V'": [134, 137], "Q": [172, 174], "K'": [139, 143], "R": [175, 176], "K": [[120, 131], [124, 133]], "V": [[113, 125], [118, 129]], "example": [109, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the entrepreneur, the doctor, the musician and the author.\nPremise: < Steve Jobs likes Saint Gayane Church. Carl Sagan likes Saint Gayane Church. Stephen King likes Electoral district of Wantirna. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Armenia is not the entrepreneur? Answer: No\n Premise: < Dr. Temple Grandin likes Sana'a International Airport. Leonardo DiCaprio likes Aden. Justin Bieber likes Velbert. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Yemen is not the musician? Answer: Yes\n", "ranges": [{"END": [106, 107], "A'": [100, 104], "V'": [55, 57], "Q": [96, 98], "K'": [59, 67], "R": [99, 100], "K": [[40, 50], [44, 54]], "V": [[35, 45], [38, 48]], "example": [30, 108]}, {"END": [183, 184], "A'": [178, 181], "V'": [137, 141], "Q": [174, 176], "K'": [143, 145], "R": [177, 178], "K": [[120, 134], [126, 136]], "V": [[113, 127], [118, 132]], "example": [109, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the doctor, the musician, the actor, the author and the entrepreneur.\nPremise: < Steve Jobs likes Saint Gayane Church. Carl Sagan likes Saint Gayane Church. Stephen King likes Electoral district of Wantirna. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Armenia is not the entrepreneur? Answer: No\n Premise: < Dr. Temple Grandin likes Sana'a International Airport. Leonardo DiCaprio likes Aden. Justin Bieber likes Velbert. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Yemen is not the actor? Answer: No\n", "ranges": [{"END": [106, 107], "A'": [100, 104], "V'": [55, 57], "Q": [96, 98], "K'": [59, 67], "R": [99, 100], "K": [[40, 50], [44, 54]], "V": [[35, 45], [38, 48]], "example": [30, 108]}, {"END": [182, 183], "A'": [178, 180], "V'": [137, 141], "Q": [174, 176], "K'": [143, 145], "R": [177, 178], "K": [[120, 134], [126, 136]], "V": [[113, 127], [118, 132]], "example": [109, 184]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the actor, the scientist, the doctor, the athlete and the author.\nPremise: < Dr. Neil deGrasse Tyson likes Soalala District. Warren Buffett likes Soalala. Harper Lee likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is not the entrepreneur? Answer: No\n Premise: < Richard Dawkins likes Hilir Perak. Johnny Depp likes Kapar. LeBron James likes Persegres Gresik United. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Malaysia is not the athlete? Answer: Yes\n", "ranges": [{"END": [110, 111], "A'": [104, 108], "V'": [60, 63], "Q": [99, 102], "K'": [65, 70], "R": [103, 104], "K": [[46, 46, 56], [50, 49, 59]], "V": [[35, 51], [44, 54]], "example": [30, 112]}, {"END": [186, 187], "A'": [181, 184], "V'": [135, 139], "Q": [177, 179], "K'": [141, 148], "R": [180, 181], "K": [[122, 132], [126, 134]], "V": [[117, 127], [120, 130]], "example": [113, 188]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the scientist, the author, the entrepreneur, the actor and the athlete.\nPremise: < Dr. Neil deGrasse Tyson likes Soalala District. Warren Buffett likes Soalala. Harper Lee likes Castrovirreyna District. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is not the entrepreneur? Answer: No\n Premise: < Richard Dawkins likes Hilir Perak. Johnny Depp likes Kapar. LeBron James likes Persegres Gresik United. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Malaysia is not the actor? Answer: No\n", "ranges": [{"END": [110, 111], "A'": [104, 108], "V'": [60, 63], "Q": [99, 102], "K'": [65, 70], "R": [103, 104], "K": [[46, 46, 56], [50, 49, 59]], "V": [[35, 51], [44, 54]], "example": [30, 112]}, {"END": [185, 186], "A'": [181, 183], "V'": [135, 139], "Q": [177, 179], "K'": [141, 148], "R": [180, 181], "K": [[122, 132], [126, 134]], "V": [[117, 127], [120, 130]], "example": [113, 187]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the doctor, the scientist and the athlete.\nPremise: < Dr. Gabor Mat\u00e9 likes Hultsfred Municipality. Usain Bolt likes Khmilnyk. Neil deGrasse Tyson likes Lund Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Sweden is not the scientist? Answer: No\n Premise: < Frida Kahlo likes Pampilhosa da Serra. Dr. Sylvia Earle likes Circuito da Boavista. LeBron James likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Portugal is not the athlete? Answer: Yes\n", "ranges": [{"END": [103, 104], "A'": [98, 101], "V'": [42, 46], "Q": [95, 96], "K'": [48, 53], "R": [97, 98], "K": [[35, 63], [41, 66]], "V": [[27, 54], [33, 61]], "example": [22, 105]}, {"END": [190, 191], "A'": [185, 188], "V'": [142, 146], "Q": [182, 183], "K'": [148, 153], "R": [184, 185], "K": [[117, 134], [125, 141]], "V": [[110, 126], [115, 132]], "example": [106, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the artist and the doctor.\nPremise: < Dr. Gabor Mat\u00e9 likes Hultsfred Municipality. Usain Bolt likes Khmilnyk. Neil deGrasse Tyson likes Lund Municipality. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Sweden is not the scientist? Answer: No\n Premise: < Frida Kahlo likes Pampilhosa da Serra. Dr. Sylvia Earle likes Circuito da Boavista. LeBron James likes Preet Vihar. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Portugal is not the doctor? Answer: No\n", "ranges": [{"END": [103, 104], "A'": [98, 101], "V'": [42, 46], "Q": [95, 96], "K'": [48, 53], "R": [97, 98], "K": [[35, 63], [41, 66]], "V": [[27, 54], [33, 61]], "example": [22, 105]}, {"END": [189, 190], "A'": [185, 187], "V'": [142, 146], "Q": [182, 183], "K'": [148, 153], "R": [184, 185], "K": [[117, 134], [125, 141]], "V": [[110, 126], [115, 132]], "example": [106, 191]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the scientist, the musician and the athlete.\nPremise: < Kanye West likes Al Ahmadi Governorate. Dr. Mehmet Oz likes Wellington Island. Carl Sagan likes Al Ahmadi Governorate. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kuwait is not the scientist? Answer: No\n Premise: < Dr. Ben Carson likes Monarcas Morelia. Beyonc\u00e9 likes Kapar. LeBron James likes Campeche Bank. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is not the musician? Answer: Yes\n", "ranges": [{"END": [104, 105], "A'": [99, 102], "V'": [41, 48], "Q": [94, 97], "K'": [50, 53], "R": [98, 99], "K": [[34, 59], [40, 65]], "V": [[28, 54], [32, 57]], "example": [23, 106]}, {"END": [178, 179], "A'": [173, 176], "V'": [124, 127], "Q": [170, 171], "K'": [129, 131], "R": [172, 173], "K": [[118, 138], [123, 141]], "V": [[111, 132], [116, 136]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the doctor, the musician and the athlete.\nPremise: < Kanye West likes Al Ahmadi Governorate. Dr. Mehmet Oz likes Wellington Island. Carl Sagan likes Al Ahmadi Governorate. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kuwait is not the scientist? Answer: No\n Premise: < Dr. Ben Carson likes Monarcas Morelia. Beyonc\u00e9 likes Kapar. LeBron James likes Campeche Bank. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is not the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A'": [99, 102], "V'": [41, 48], "Q": [94, 97], "K'": [50, 53], "R": [98, 99], "K": [[34, 59], [40, 65]], "V": [[28, 54], [32, 57]], "example": [23, 106]}, {"END": [177, 178], "A'": [173, 175], "V'": [124, 127], "Q": [170, 171], "K'": [129, 131], "R": [172, 173], "K": [[118, 138], [123, 141]], "V": [[111, 132], [116, 136]], "example": [107, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the musician, the author and the architect.\nPremise: < J.K. Rowling likes Laslea. Louis Sullivan likes Capolago. Charlize Theron likes Transylvanian Plateau. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Romania is not the architect? Answer: Yes\n Premise: < Zaha Hadid likes Sapo National Park. Johnny Depp likes Sapo National Park. Rihanna likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Liberia is not the musician? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [37, 41], "Q": [89, 91], "K'": [43, 46], "R": [92, 93], "K": [[34, 54], [36, 60]], "V": [[26, 47], [32, 52]], "example": [21, 99]}, {"END": [174, 175], "A'": [169, 172], "V'": [127, 130], "Q": [165, 167], "K'": [132, 136], "R": [168, 169], "K": [[110, 121], [115, 126]], "V": [[104, 116], [108, 119]], "example": [100, 176]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the actor, the musician and the architect.\nPremise: < J.K. Rowling likes Laslea. Louis Sullivan likes Capolago. Charlize Theron likes Transylvanian Plateau. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Romania is not the architect? Answer: Yes\n Premise: < Zaha Hadid likes Sapo National Park. Johnny Depp likes Sapo National Park. Rihanna likes Shoranur. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Liberia is not the actor? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [37, 41], "Q": [89, 91], "K'": [43, 46], "R": [92, 93], "K": [[34, 54], [36, 60]], "V": [[26, 47], [32, 52]], "example": [21, 99]}, {"END": [173, 174], "A'": [169, 171], "V'": [127, 130], "Q": [165, 167], "K'": [132, 136], "R": [168, 169], "K": [[110, 121], [115, 126]], "V": [[104, 116], [108, 119]], "example": [100, 175]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the lawyer, the musician, the athlete and the author.\n< Chol Kiri District attracts Roger Federer. Chol Kiri District attracts Usain Bolt. Central Black Forest attracts Jane Goodall. >. The person who wants to go to a place in Cambodia is not the scientist\n < Adliswil attracts Harper Lee. Canton of Schaffhausen attracts Justin Bieber. Koriya district attracts Clarence Darrow. >. The person who wants to go to a place in Switzerland is not the lawyer\n", "ranges": [{"END": [75, 76], "A'": [76, 78], "V'": [55, 58], "Q": [71, 73], "K'": [50, 53], "R": [74, 75], "K": [[27, 38], [32, 43]], "V": [[34, 45], [37, 49]], "example": [26, 78]}, {"END": [129, 130], "A'": [130, 131], "V'": [109, 113], "Q": [126, 127], "K'": [103, 107], "R": [128, 129], "K": [[80, 90], [84, 96]], "V": [[86, 98], [89, 102]], "example": [79, 131]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Staatliche Antikensammlungen attracts Natalie Portman. Cubagua attracts Dr. Gabor Mat\u00e9. Casiquiare canal attracts Rihanna. >. The person who wants to go to a place in Venezuela is not the actor\n < Gmina Warlubie attracts Neil deGrasse Tyson. Tillya Tepe attracts Eminem. Bamyan attracts LeBron James. >. The person who wants to go to a place in Afghanistan is not the scientist\n", "ranges": [{"END": [79, 80], "A'": [80, 81], "V'": [37, 41], "Q": [76, 77], "K'": [27, 35], "R": [78, 79], "K": [[42, 53], [44, 58]], "V": [[46, 60], [52, 63]], "example": [26, 81]}, {"END": [135, 136], "A'": [136, 138], "V'": [90, 97], "Q": [131, 133], "K'": [83, 88], "R": [134, 135], "K": [[98, 109], [103, 112]], "V": [[105, 114], [108, 118]], "example": [82, 138]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the entrepreneur, the scientist, the author, the actor and the artist.\n< Gammalsvenskby attracts Leonardo da Vinci. Al Ahmadi Governorate attracts Marie Curie. Al Ahmadi Governorate attracts Larry Page. >. The person who wants to go to a place in Kuwait is not the artist\n < Chol Kiri District attracts Denzel Washington. Putyvl attracts J.K. Rowling. Chol Kiri District attracts Eminem. >. The person who wants to go to a place in Cambodia is not the author\n", "ranges": [{"END": [85, 86], "A'": [86, 87], "V'": [39, 44], "Q": [80, 83], "K'": [31, 37], "R": [84, 85], "K": [[45, 57], [51, 63]], "V": [[53, 65], [56, 67]], "example": [30, 87]}, {"END": [139, 140], "A'": [140, 141], "V'": [105, 111], "Q": [135, 137], "K'": [100, 103], "R": [138, 139], "K": [[89, 112], [94, 117]], "V": [[96, 119], [99, 122]], "example": [88, 141]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the doctor, the musician, the artist, the athlete and the lawyer.\n< Trans-Sahara Highway attracts Adele. Guelma Province attracts Hillary Clinton. Guelma Province attracts Dr. Gabor Mat\u00e9. >. The person who wants to go to a place in Algeria is not the musician\n < Kondotty attracts Cristiano Ronaldo. Stara Zagora attracts Albert Einstein. Dospat Municipality attracts Pablo Picasso. >. The person who wants to go to a place in Bulgaria is not the athlete\n", "ranges": [{"END": [83, 84], "A'": [84, 86], "V'": [38, 41], "Q": [78, 81], "K'": [30, 36], "R": [82, 83], "K": [[42, 53], [46, 57]], "V": [[48, 59], [52, 65]], "example": [29, 86]}, {"END": [137, 138], "A'": [138, 140], "V'": [94, 99], "Q": [133, 135], "K'": [88, 92], "R": [136, 137], "K": [[100, 110], [104, 115]], "V": [[106, 117], [109, 120]], "example": [87, 140]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the author, the doctor, the actor and the lawyer.\n< Guelma Province attracts J.R.R. Tolkien. Oshawa attracts Bill Gates. Guelma Province attracts Leonardo DiCaprio. >. The person who wants to go to a place in Algeria is not the entrepreneur\n < Tillya Tepe attracts Leonardo DiCaprio. Bamyan attracts Dr. Neil deGrasse Tyson. Broken Pencil attracts Alan Dershowitz. >. The person who wants to go to a place in Afghanistan is not the lawyer\n", "ranges": [{"END": [80, 81], "A'": [81, 84], "V'": [47, 50], "Q": [75, 78], "K'": [42, 45], "R": [79, 80], "K": [[26, 51], [30, 55]], "V": [[32, 57], [41, 62]], "example": [25, 84]}, {"END": [143, 144], "A'": [144, 145], "V'": [121, 126], "Q": [139, 141], "K'": [114, 119], "R": [142, 143], "K": [[86, 99], [91, 102]], "V": [[93, 104], [98, 113]], "example": [85, 145]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the actor, the scientist, the athlete and the doctor.\n< Pragersko attracts Taylor Swift. Westerburg attracts Dr. Gabor Mat\u00e9. Roman Catholic Archdiocese of Ljubljana attracts Jane Goodall. >. The person who wants to go to a place in Slovenia is not the doctor\n < Bilecik Province attracts Rosie Franklin. Borghetto di Vara attracts Usain Bolt. public transport in Istanbul attracts Johnny Depp. >. The person who wants to go to a place in Turkey is not the athlete\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [40, 46], "Q": [76, 78], "K'": [35, 38], "R": [79, 80], "K": [[27, 47], [30, 58]], "V": [[32, 60], [34, 63]], "example": [26, 82]}, {"END": [135, 136], "A'": [136, 138], "V'": [103, 107], "Q": [132, 133], "K'": [95, 101], "R": [134, 135], "K": [[84, 108], [89, 114]], "V": [[91, 116], [94, 119]], "example": [83, 138]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the author, the architect and the entrepreneur.\n< Lower Assam attracts Dr. Sylvia Earle. Yadagirigutta Temple attracts Lady Gaga. Komarichsky District attracts Louis Sullivan. >. The person who wants to go to a place in India is not the architect\n < West Darfur attracts Sergey Brin. Nuri attracts Bill Gates. Vijayawada Junction railway station attracts Jane Austen. >. The person who wants to go to a place in Sudan is not the author\n", "ranges": [{"END": [80, 81], "A'": [81, 82], "V'": [60, 64], "Q": [77, 78], "K'": [53, 58], "R": [79, 80], "K": [[27, 39], [30, 47]], "V": [[32, 49], [38, 52]], "example": [26, 82]}, {"END": [133, 134], "A'": [134, 135], "V'": [113, 116], "Q": [129, 131], "K'": [102, 111], "R": [132, 133], "K": [[84, 94], [87, 96]], "V": [[89, 98], [93, 101]], "example": [83, 135]}]}
{"task_id": "rlr_gen[countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the actor, the lawyer, the athlete and the musician.\n< Sommariva del Bosco attracts Barack Obama. Villa La Pietra attracts Drake. Agios Dimitrios attracts Roger Federer. >. The person who wants to go to a place in Italy is not the athlete\n < Aventine Hill attracts Tom Hanks. Ticho House attracts LeBron James. Geffen Award attracts J.R.R. Tolkien. >. The person who wants to go to a place in Israel is not the actor\n", "ranges": [{"END": [75, 76], "A'": [76, 78], "V'": [56, 59], "Q": [72, 73], "K'": [49, 54], "R": [74, 75], "K": [[26, 40], [33, 44]], "V": [[35, 46], [39, 48]], "example": [25, 78]}, {"END": [131, 132], "A'": [132, 133], "V'": [86, 89], "Q": [128, 129], "K'": [80, 84], "R": [130, 131], "K": [[90, 101], [94, 104]], "V": [[96, 106], [100, 115]], "example": [79, 133]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the artist.\nPremise: < Chol Kiri District attracts Roger Federer. Chol Kiri District attracts Usain Bolt. Central Black Forest attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is not the scientist? Answer: Yes\n Premise: < Neighbourhoods in Kolkata attracts Johnny Depp. Al Daayen attracts Frida Kahlo. Al Daayen attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is not the actor? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [55, 58], "Q": [87, 89], "K'": [50, 53], "R": [90, 91], "K": [[27, 38], [32, 43]], "V": [[34, 45], [37, 49]], "example": [22, 98]}, {"END": [177, 178], "A'": [173, 175], "V'": [114, 117], "Q": [169, 171], "K'": [103, 112], "R": [172, 173], "K": [[118, 130], [122, 134]], "V": [[124, 136], [129, 140]], "example": [99, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the artist and the actor.\nPremise: < Chol Kiri District attracts Roger Federer. Chol Kiri District attracts Usain Bolt. Central Black Forest attracts Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Cambodia is not the scientist? Answer: Yes\n Premise: < Neighbourhoods in Kolkata attracts Johnny Depp. Al Daayen attracts Frida Kahlo. Al Daayen attracts Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Qatar is not the artist? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [91, 94], "V'": [55, 58], "Q": [87, 89], "K'": [50, 53], "R": [90, 91], "K": [[27, 38], [32, 43]], "V": [[34, 45], [37, 49]], "example": [22, 98]}, {"END": [177, 178], "A'": [173, 175], "V'": [114, 117], "Q": [169, 171], "K'": [103, 112], "R": [172, 173], "K": [[118, 130], [122, 134]], "V": [[124, 136], [129, 140]], "example": [99, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the athlete, the lawyer, the architect and the entrepreneur.\nPremise: < Nyeri County attracts Beyonc\u00e9. Arjoun attracts Michael Phelps. Moi International Sports Centre attracts Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kenya is not the musician? Answer: No\n Premise: < Helsinki City Hall attracts Michael Phelps. Lambunao attracts Larry Page. Lake Caliraya attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Philippines is not the athlete? Answer: Yes\n", "ranges": [{"END": [101, 102], "A'": [96, 99], "V'": [47, 51], "Q": [92, 94], "K'": [42, 45], "R": [95, 96], "K": [[32, 52], [36, 57]], "V": [[38, 59], [41, 63]], "example": [27, 103]}, {"END": [175, 176], "A'": [170, 173], "V'": [115, 119], "Q": [167, 168], "K'": [108, 113], "R": [169, 170], "K": [[120, 128], [123, 133]], "V": [[125, 135], [127, 138]], "example": [104, 177]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the athlete, the architect, the entrepreneur and the musician.\nPremise: < Nyeri County attracts Beyonc\u00e9. Arjoun attracts Michael Phelps. Moi International Sports Centre attracts Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kenya is not the musician? Answer: No\n Premise: < Helsinki City Hall attracts Michael Phelps. Lambunao attracts Larry Page. Lake Caliraya attracts Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Philippines is not the entrepreneur? Answer: No\n", "ranges": [{"END": [101, 102], "A'": [96, 99], "V'": [47, 51], "Q": [92, 94], "K'": [42, 45], "R": [95, 96], "K": [[32, 52], [36, 57]], "V": [[38, 59], [41, 63]], "example": [27, 103]}, {"END": [176, 177], "A'": [170, 174], "V'": [115, 119], "Q": [167, 168], "K'": [108, 113], "R": [169, 170], "K": [[120, 128], [123, 133]], "V": [[125, 135], [127, 138]], "example": [104, 178]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the architect, the entrepreneur, the musician, the scientist and the lawyer.\nPremise: < Komarichsky District attracts Richard Dawkins. Were Ilu attracts J.K. Rowling. Beles River attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ethiopia is not the scientist? Answer: Yes\n Premise: < Simeulue attracts Oprah Winfrey. Balige attracts Thurgood Marshall. Lannemezan attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is not the architect? Answer: Yes\n", "ranges": [{"END": [106, 107], "A'": [101, 104], "V'": [42, 45], "Q": [96, 99], "K'": [35, 40], "R": [100, 101], "K": [[46, 59], [50, 62]], "V": [[52, 64], [58, 67]], "example": [30, 108]}, {"END": [180, 181], "A'": [176, 178], "V'": [140, 143], "Q": [172, 174], "K'": [134, 138], "R": [175, 176], "K": [[113, 125], [117, 127]], "V": [[119, 129], [124, 133]], "example": [109, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the musician, the architect, the scientist and the author.\nPremise: < Komarichsky District attracts Richard Dawkins. Were Ilu attracts J.K. Rowling. Beles River attracts Lady Gaga. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Ethiopia is not the scientist? Answer: Yes\n Premise: < Simeulue attracts Oprah Winfrey. Balige attracts Thurgood Marshall. Lannemezan attracts Maya Lin. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Indonesia is not the lawyer? Answer: No\n", "ranges": [{"END": [106, 107], "A'": [101, 104], "V'": [42, 45], "Q": [96, 99], "K'": [35, 40], "R": [100, 101], "K": [[46, 59], [50, 62]], "V": [[52, 64], [58, 67]], "example": [30, 108]}, {"END": [180, 181], "A'": [176, 178], "V'": [140, 143], "Q": [172, 174], "K'": [134, 138], "R": [175, 176], "K": [[113, 125], [117, 127]], "V": [[119, 129], [124, 133]], "example": [109, 182]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the entrepreneur, the doctor, the musician and the author.\nPremise: < Saint Gayane Church attracts Steve Jobs. Saint Gayane Church attracts Carl Sagan. Electoral district of Wantirna attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Armenia is not the entrepreneur? Answer: No\n Premise: < Sana'a International Airport attracts Dr. Temple Grandin. Aden attracts Leonardo DiCaprio. Velbert attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Yemen is not the musician? Answer: Yes\n", "ranges": [{"END": [106, 107], "A'": [100, 104], "V'": [65, 67], "Q": [96, 98], "K'": [55, 63], "R": [99, 100], "K": [[35, 45], [39, 49]], "V": [[41, 51], [44, 54]], "example": [30, 108]}, {"END": [183, 184], "A'": [178, 181], "V'": [141, 145], "Q": [174, 176], "K'": [137, 139], "R": [177, 178], "K": [[113, 127], [119, 129]], "V": [[121, 131], [126, 136]], "example": [109, 185]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the doctor, the musician, the actor, the author and the entrepreneur.\nPremise: < Saint Gayane Church attracts Steve Jobs. Saint Gayane Church attracts Carl Sagan. Electoral district of Wantirna attracts Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Armenia is not the entrepreneur? Answer: No\n Premise: < Sana'a International Airport attracts Dr. Temple Grandin. Aden attracts Leonardo DiCaprio. Velbert attracts Justin Bieber. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Yemen is not the actor? Answer: No\n", "ranges": [{"END": [106, 107], "A'": [100, 104], "V'": [65, 67], "Q": [96, 98], "K'": [55, 63], "R": [99, 100], "K": [[35, 45], [39, 49]], "V": [[41, 51], [44, 54]], "example": [30, 108]}, {"END": [182, 183], "A'": [178, 180], "V'": [141, 145], "Q": [174, 176], "K'": [137, 139], "R": [177, 178], "K": [[113, 127], [119, 129]], "V": [[121, 131], [126, 136]], "example": [109, 184]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the actor, the scientist, the doctor, the athlete and the author.\nPremise: < Soalala District attracts Dr. Neil deGrasse Tyson. Soalala attracts Warren Buffett. Castrovirreyna District attracts Harper Lee. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is not the entrepreneur? Answer: No\n Premise: < Hilir Perak attracts Richard Dawkins. Kapar attracts Johnny Depp. Persegres Gresik United attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Malaysia is not the athlete? Answer: Yes\n", "ranges": [{"END": [110, 111], "A'": [104, 108], "V'": [67, 70], "Q": [99, 102], "K'": [60, 65], "R": [103, 104], "K": [[35, 35, 51], [39, 38, 54]], "V": [[41, 56], [50, 59]], "example": [30, 112]}, {"END": [186, 187], "A'": [181, 184], "V'": [144, 148], "Q": [177, 179], "K'": [135, 142], "R": [180, 181], "K": [[117, 127], [121, 129]], "V": [[123, 131], [126, 134]], "example": [113, 188]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the scientist, the author, the entrepreneur, the actor and the athlete.\nPremise: < Soalala District attracts Dr. Neil deGrasse Tyson. Soalala attracts Warren Buffett. Castrovirreyna District attracts Harper Lee. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Madagascar is not the entrepreneur? Answer: No\n Premise: < Hilir Perak attracts Richard Dawkins. Kapar attracts Johnny Depp. Persegres Gresik United attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Malaysia is not the actor? Answer: No\n", "ranges": [{"END": [110, 111], "A'": [104, 108], "V'": [67, 70], "Q": [99, 102], "K'": [60, 65], "R": [103, 104], "K": [[35, 35, 51], [39, 38, 54]], "V": [[41, 56], [50, 59]], "example": [30, 112]}, {"END": [185, 186], "A'": [181, 183], "V'": [144, 148], "Q": [177, 179], "K'": [135, 142], "R": [180, 181], "K": [[117, 127], [121, 129]], "V": [[123, 131], [126, 134]], "example": [113, 187]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the doctor, the scientist and the athlete.\nPremise: < Hultsfred Municipality attracts Dr. Gabor Mat\u00e9. Khmilnyk attracts Usain Bolt. Lund Municipality attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Sweden is not the scientist? Answer: No\n Premise: < Pampilhosa da Serra attracts Frida Kahlo. Circuito da Boavista attracts Dr. Sylvia Earle. Preet Vihar attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Portugal is not the athlete? Answer: Yes\n", "ranges": [{"END": [103, 104], "A'": [98, 101], "V'": [49, 53], "Q": [95, 96], "K'": [42, 47], "R": [97, 98], "K": [[27, 54], [33, 57]], "V": [[35, 59], [41, 66]], "example": [22, 105]}, {"END": [190, 191], "A'": [185, 188], "V'": [149, 153], "Q": [182, 183], "K'": [142, 147], "R": [184, 185], "K": [[110, 126], [118, 133]], "V": [[120, 135], [125, 141]], "example": [106, 192]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the artist and the doctor.\nPremise: < Hultsfred Municipality attracts Dr. Gabor Mat\u00e9. Khmilnyk attracts Usain Bolt. Lund Municipality attracts Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Sweden is not the scientist? Answer: No\n Premise: < Pampilhosa da Serra attracts Frida Kahlo. Circuito da Boavista attracts Dr. Sylvia Earle. Preet Vihar attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Portugal is not the doctor? Answer: No\n", "ranges": [{"END": [103, 104], "A'": [98, 101], "V'": [49, 53], "Q": [95, 96], "K'": [42, 47], "R": [97, 98], "K": [[27, 54], [33, 57]], "V": [[35, 59], [41, 66]], "example": [22, 105]}, {"END": [189, 190], "A'": [185, 187], "V'": [149, 153], "Q": [182, 183], "K'": [142, 147], "R": [184, 185], "K": [[110, 126], [118, 133]], "V": [[120, 135], [125, 141]], "example": [106, 191]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the scientist, the musician and the athlete.\nPremise: < Al Ahmadi Governorate attracts Kanye West. Wellington Island attracts Dr. Mehmet Oz. Al Ahmadi Governorate attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kuwait is not the scientist? Answer: No\n Premise: < Monarcas Morelia attracts Dr. Ben Carson. Kapar attracts Beyonc\u00e9. Campeche Bank attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is not the musician? Answer: Yes\n", "ranges": [{"END": [104, 105], "A'": [99, 102], "V'": [46, 53], "Q": [94, 97], "K'": [41, 44], "R": [98, 99], "K": [[28, 54], [34, 60]], "V": [[36, 62], [40, 65]], "example": [23, 106]}, {"END": [178, 179], "A'": [173, 176], "V'": [128, 131], "Q": [170, 171], "K'": [124, 126], "R": [172, 173], "K": [[111, 132], [116, 135]], "V": [[118, 137], [123, 141]], "example": [107, 180]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the doctor, the musician and the athlete.\nPremise: < Al Ahmadi Governorate attracts Kanye West. Wellington Island attracts Dr. Mehmet Oz. Al Ahmadi Governorate attracts Carl Sagan. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Kuwait is not the scientist? Answer: No\n Premise: < Monarcas Morelia attracts Dr. Ben Carson. Kapar attracts Beyonc\u00e9. Campeche Bank attracts LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Mexico is not the doctor? Answer: No\n", "ranges": [{"END": [104, 105], "A'": [99, 102], "V'": [46, 53], "Q": [94, 97], "K'": [41, 44], "R": [98, 99], "K": [[28, 54], [34, 60]], "V": [[36, 62], [40, 65]], "example": [23, 106]}, {"END": [177, 178], "A'": [173, 175], "V'": [128, 131], "Q": [170, 171], "K'": [124, 126], "R": [172, 173], "K": [[111, 132], [116, 135]], "V": [[118, 137], [123, 141]], "example": [107, 179]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the musician, the author and the architect.\nPremise: < Laslea attracts J.K. Rowling. Capolago attracts Louis Sullivan. Transylvanian Plateau attracts Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Romania is not the architect? Answer: Yes\n Premise: < Sapo National Park attracts Zaha Hadid. Sapo National Park attracts Johnny Depp. Shoranur attracts Rihanna. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Liberia is not the musician? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [42, 46], "Q": [89, 91], "K'": [37, 40], "R": [92, 93], "K": [[26, 47], [28, 53]], "V": [[30, 55], [36, 60]], "example": [21, 99]}, {"END": [174, 175], "A'": [169, 172], "V'": [133, 136], "Q": [165, 167], "K'": [127, 131], "R": [168, 169], "K": [[104, 116], [109, 121]], "V": [[111, 123], [115, 126]], "example": [100, 176]}]}
{"task_id": "g2c[rlr_gen][countries_of_landmarks.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the actor, the musician and the architect.\nPremise: < Laslea attracts J.K. Rowling. Capolago attracts Louis Sullivan. Transylvanian Plateau attracts Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Romania is not the architect? Answer: Yes\n Premise: < Sapo National Park attracts Zaha Hadid. Sapo National Park attracts Johnny Depp. Shoranur attracts Rihanna. >. Answer with Yes or No. Can it be inferred from the premise that the person who wants to go to a place in Liberia is not the actor? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [93, 95], "V'": [42, 46], "Q": [89, 91], "K'": [37, 40], "R": [92, 93], "K": [[26, 47], [28, 53]], "V": [[30, 55], [36, 60]], "example": [21, 99]}, {"END": [173, 174], "A'": [169, 171], "V'": [133, 136], "Q": [165, 167], "K'": [127, 131], "R": [168, 169], "K": [[104, 116], [109, 121]], "V": [[111, 123], [115, 126]], "example": [100, 175]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Norman Foster has jeans. Zaha Hadid has cake. LeBron James has rabbit. >. So the athlete owns rabbit\n < Rosie Franklin has plum. Sonia Sotomayor has jeans. Jennifer Lawrence has watermelon. >. So the scientist owns plum\n", "ranges": [{"END": [32, 33], "A": [33, 35], "V": [22, 24], "Q": [28, 31], "K": [17, 21], "R": null, "K'": [[2, 9], [5, 13]], "V'": [[6, 14], [8, 16]], "example": [1, 35]}, {"END": [71, 72], "A": [72, 74], "V": [41, 43], "Q": [67, 70], "K": [37, 40], "R": null, "K'": [[44, 55], [51, 58]], "V'": [[52, 59], [54, 63]], "example": [36, 74]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Adele has monkey. George Orwell has whiskey. Usain Bolt has pants. >. So the musician owns monkey\n < LeBron James has goat. Hillary Clinton has motorcycle. Mies van der Rohe has guitar. >. So the lawyer owns motorcycle\n", "ranges": [{"END": [31, 32], "A": [32, 34], "V": [6, 8], "Q": [27, 30], "K": [2, 5], "R": null, "K'": [[9, 16], [12, 20]], "V'": [[13, 21], [15, 23]], "example": [1, 34]}, {"END": [67, 68], "A": [68, 70], "V": [49, 51], "Q": [64, 66], "K": [44, 48], "R": null, "K'": [[36, 52], [40, 58]], "V'": [[41, 59], [43, 60]], "example": [35, 70]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< J.R.R. Tolkien has orange. Oprah Winfrey has soda. Vincent van Gogh has football. >. So the entrepreneur owns soda\n < Mark Twain has tea. Beyonc\u00e9 has baseball. Johnnie Cochran has sweater. >. So the lawyer owns sweater\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [20, 22], "Q": [34, 38], "K": [14, 19], "R": null, "K'": [[2, 23], [11, 28]], "V'": [[12, 29], [13, 30]], "example": [1, 42]}, {"END": [71, 72], "A": [72, 74], "V": [62, 64], "Q": [68, 70], "K": [56, 61], "R": null, "K'": [[44, 50], [47, 53]], "V'": [[48, 54], [49, 55]], "example": [43, 74]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Usain Bolt has hamburger. Ruth Bader Ginsburg has gorilla. J.K. Rowling has strawberries. >. So the athlete owns hamburger\n < Dr. Michio Kaku has pig. Salvador Dal\u00ed has fox. Stephen King has horse. >. So the artist owns fox\n", "ranges": [{"END": [41, 42], "A": [42, 45], "V": [7, 10], "Q": [37, 40], "K": [2, 6], "R": null, "K'": [[11, 22], [17, 28]], "V'": [[18, 29], [21, 33]], "example": [1, 45]}, {"END": [75, 76], "A": [76, 78], "V": [61, 63], "Q": [72, 74], "K": [57, 60], "R": null, "K'": [[47, 64], [53, 66]], "V'": [[54, 67], [56, 68]], "example": [46, 78]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Mies van der Rohe has elephant. Maya Lin has baseball. Vincent van Gogh has jeep. >. So the artist owns jeep\n < Leonardo DiCaprio has kiwi. Bill Gates has grenade. J.R.R. Tolkien has sweater. >. So the entrepreneur owns grenade\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [25, 27], "Q": [31, 33], "K": [19, 24], "R": null, "K'": [[2, 13], [8, 16]], "V'": [[9, 17], [12, 18]], "example": [1, 37]}, {"END": [77, 78], "A": [78, 81], "V": [52, 55], "Q": [72, 76], "K": [48, 51], "R": null, "K'": [[39, 56], [44, 65]], "V'": [[45, 66], [47, 68]], "example": [38, 81]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Dr. Mehmet Oz has sheep. Stephen King has mango. Charlize Theron has vodka. >. So the actor owns vodka\n < Tom Brady has strawberries. Georgia O'Keeffe has jeep. Ed Sheeran has peach. >. So the athlete owns strawberries\n", "ranges": [{"END": [34, 35], "A": [35, 38], "V": [24, 27], "Q": [31, 33], "K": [18, 23], "R": null, "K'": [[2, 12], [9, 14]], "V'": [[10, 15], [11, 17]], "example": [1, 38]}, {"END": [74, 75], "A": [75, 79], "V": [44, 48], "Q": [70, 73], "K": [40, 43], "R": null, "K'": [[49, 59], [55, 63]], "V'": [[56, 64], [58, 66]], "example": [39, 79]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Marie Curie has jeans. Dr. Sanjay Gupta has dog. Justin Bieber has lemon. >. So the doctor owns dog\n < Agatha Christie has jeep. Denzel Washington has peach. Marie Curie has papaya. >. So the scientist owns papaya\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [17, 18], "Q": [30, 32], "K": [9, 16], "R": null, "K'": [[2, 19], [5, 23]], "V'": [[6, 24], [8, 26]], "example": [1, 35]}, {"END": [67, 68], "A": [68, 70], "V": [57, 59], "Q": [63, 66], "K": [53, 56], "R": null, "K'": [[37, 46], [42, 49]], "V'": [[43, 50], [45, 52]], "example": [36, 70]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Serena Williams has bread. Steve Jobs has basketball. Georgia O'Keeffe has horse. >. So the athlete owns bread\n < Dr. Gabor Mat\u00e9 has shotgun. Usain Bolt has pizza. Neil deGrasse Tyson has papaya. >. So the athlete owns pizza\n", "ranges": [{"END": [30, 31], "A": [31, 32], "V": [6, 7], "Q": [26, 29], "K": [2, 5], "R": null, "K'": [[8, 14], [11, 20]], "V'": [[12, 21], [13, 22]], "example": [1, 32]}, {"END": [70, 71], "A": [71, 73], "V": [49, 51], "Q": [66, 69], "K": [44, 48], "R": null, "K'": [[34, 52], [40, 59]], "V'": [[41, 60], [43, 62]], "example": [33, 73]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster has jeans. Zaha Hadid has cake. LeBron James has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns jeans? Answer: No\n Premise: < F. Lee Bailey has plum. Jennifer Lawrence has jeans. Dr. Sanjay Gupta has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns plum? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [25, 27], "Q": [46, 49], "K": [20, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[9, 17], [11, 19]], "example": [1, 57]}, {"END": [117, 118], "A": [113, 115], "V": [68, 70], "Q": [109, 111], "K": [62, 67], "R": null, "K'": [[71, 78], [74, 85]], "V'": [[75, 86], [77, 90]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Norman Foster has jeans. Zaha Hadid has cake. LeBron James has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns jeans? Answer: No\n Premise: < F. Lee Bailey has plum. Jennifer Lawrence has jeans. Dr. Sanjay Gupta has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns watermelon? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [25, 27], "Q": [46, 49], "K": [20, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[9, 17], [11, 19]], "example": [1, 57]}, {"END": [119, 120], "A": [113, 117], "V": [68, 70], "Q": [109, 111], "K": [62, 67], "R": null, "K'": [[71, 78], [74, 85]], "V'": [[75, 86], [77, 90]], "example": [58, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps has donkey. Drake has car. Ernest Hemingway has deer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns deer? Answer: No\n Premise: < Frida Kahlo has cat. Johnny Depp has rabbit. Julia Roberts has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns cat? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [10, 12], "Q": [44, 47], "K": [5, 9], "R": null, "K'": [[13, 18], [15, 22]], "V'": [[16, 23], [17, 25]], "example": [1, 55]}, {"END": [107, 108], "A": [104, 105], "V": [66, 67], "Q": [100, 102], "K": [60, 65], "R": null, "K'": [[68, 75], [71, 77]], "V'": [[72, 78], [74, 81]], "example": [56, 109]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael Phelps has donkey. Drake has car. Ernest Hemingway has deer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns deer? Answer: No\n Premise: < Frida Kahlo has cat. Johnny Depp has rabbit. Julia Roberts has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns rabbit? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [10, 12], "Q": [44, 47], "K": [5, 9], "R": null, "K'": [[13, 18], [15, 22]], "V'": [[16, 23], [17, 25]], "example": [1, 55]}, {"END": [108, 109], "A": [104, 106], "V": [66, 67], "Q": [100, 102], "K": [60, 65], "R": null, "K'": [[68, 75], [71, 77]], "V'": [[72, 78], [74, 81]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has durian. Marie Curie has jersey. Alex Morgan has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns durian? Answer: No\n Premise: < Johnny Depp has underwear. Jane Austen has peach. Neil deGrasse Tyson has burger. >. Answer with Yes or No. Can it be inferred from the premise that the author owns peach? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [25, 27], "Q": [46, 49], "K": [22, 24], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[11, 18], [13, 21]], "example": [1, 57]}, {"END": [114, 115], "A": [110, 112], "V": [74, 76], "Q": [106, 108], "K": [70, 73], "R": null, "K'": [[62, 77], [65, 84]], "V'": [[66, 85], [69, 87]], "example": [58, 116]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has durian. Marie Curie has jersey. Alex Morgan has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns durian? Answer: No\n Premise: < Johnny Depp has underwear. Jane Austen has peach. Neil deGrasse Tyson has burger. >. Answer with Yes or No. Can it be inferred from the premise that the author owns underwear? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [25, 27], "Q": [46, 49], "K": [22, 24], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[11, 18], [13, 21]], "example": [1, 57]}, {"END": [115, 116], "A": [110, 113], "V": [74, 76], "Q": [106, 108], "K": [70, 73], "R": null, "K'": [[62, 77], [65, 84]], "V'": [[66, 85], [69, 87]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber has mouse. Steve Jobs has horse. Roger Federer has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns horse? Answer: Yes\n Premise: < Dr. Temple Grandin has bee. Mark Twain has baseball. Sergey Brin has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns basketball? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [16, 17], "Q": [43, 47], "K": [12, 15], "R": null, "K'": [[5, 18], [9, 21]], "V'": [[10, 22], [11, 24]], "example": [1, 54]}, {"END": [108, 109], "A": [105, 106], "V": [79, 80], "Q": [99, 103], "K": [74, 78], "R": null, "K'": [[59, 68], [64, 71]], "V'": [[65, 72], [67, 73]], "example": [55, 110]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Justin Bieber has mouse. Steve Jobs has horse. Roger Federer has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns horse? Answer: Yes\n Premise: < Dr. Temple Grandin has bee. Mark Twain has baseball. Sergey Brin has basketball. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns baseball? Answer: No\n", "ranges": [{"END": [52, 53], "A": [49, 50], "V": [16, 17], "Q": [43, 47], "K": [12, 15], "R": null, "K'": [[5, 18], [9, 21]], "V'": [[10, 22], [11, 24]], "example": [1, 54]}, {"END": [108, 109], "A": [105, 106], "V": [79, 80], "Q": [99, 103], "K": [74, 78], "R": null, "K'": [[59, 68], [64, 71]], "V'": [[65, 72], [67, 73]], "example": [55, 110]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe has sweater. Drake has squirrel. Dr. Michio Kaku has soda. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns soda? Answer: No\n Premise: < Maya Lin has revolver. Jane Austen has cat. Meryl Streep has mango. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns mango? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [12, 14], "Q": [50, 52], "K": [5, 11], "R": null, "K'": [[15, 22], [17, 28]], "V'": [[18, 29], [21, 31]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [85, 87], "Q": [106, 108], "K": [78, 84], "R": null, "K'": [[65, 72], [68, 75]], "V'": [[69, 76], [71, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mies van der Rohe has sweater. Drake has squirrel. Dr. Michio Kaku has soda. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns soda? Answer: No\n Premise: < Maya Lin has revolver. Jane Austen has cat. Meryl Streep has mango. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns revolver? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [12, 14], "Q": [50, 52], "K": [5, 11], "R": null, "K'": [[15, 22], [17, 28]], "V'": [[18, 29], [21, 31]], "example": [1, 60]}, {"END": [114, 115], "A": [110, 112], "V": [85, 87], "Q": [106, 108], "K": [78, 84], "R": null, "K'": [[65, 72], [68, 75]], "V'": [[69, 76], [71, 77]], "example": [61, 116]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Stephen King has blackberries. Johnnie Cochran has mosquito. Richard Dawkins has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns mosquito? Answer: Yes\n Premise: < Frida Kahlo has goat. Leonardo DiCaprio has beer. Charlize Theron has cat. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns goat? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [51, 54], "V": [18, 21], "Q": [47, 49], "K": [12, 17], "R": null, "K'": [[5, 22], [7, 25]], "V'": [[8, 26], [11, 28]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [69, 71], "Q": [107, 109], "K": [63, 68], "R": null, "K'": [[72, 81], [77, 86]], "V'": [[78, 87], [80, 88]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Stephen King has blackberries. Johnnie Cochran has mosquito. Richard Dawkins has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns mosquito? Answer: Yes\n Premise: < Frida Kahlo has goat. Leonardo DiCaprio has beer. Charlize Theron has cat. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns beer? Answer: No\n", "ranges": [{"END": [56, 57], "A": [51, 54], "V": [18, 21], "Q": [47, 49], "K": [12, 17], "R": null, "K'": [[5, 22], [7, 25]], "V'": [[8, 26], [11, 28]], "example": [1, 58]}, {"END": [115, 116], "A": [111, 113], "V": [69, 71], "Q": [107, 109], "K": [63, 68], "R": null, "K'": [[72, 81], [77, 86]], "V'": [[78, 87], [80, 88]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Bill Gates has whiskey. Carl Sagan has costume. Kanye West has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns whiskey? Answer: No\n Premise: < Adele has cake. Brad Pitt has grapes. George Orwell has fox. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns grapes? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [16, 18], "Q": [45, 48], "K": [12, 15], "R": null, "K'": [[5, 19], [8, 23]], "V'": [[9, 24], [11, 26]], "example": [1, 56]}, {"END": [109, 110], "A": [104, 107], "V": [71, 74], "Q": [100, 102], "K": [68, 70], "R": null, "K'": [[61, 75], [64, 78]], "V'": [[65, 79], [67, 81]], "example": [57, 111]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Bill Gates has whiskey. Carl Sagan has costume. Kanye West has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns whiskey? Answer: No\n Premise: < Adele has cake. Brad Pitt has grapes. George Orwell has fox. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns cake? Answer: No\n", "ranges": [{"END": [54, 55], "A": [50, 52], "V": [16, 18], "Q": [45, 48], "K": [12, 15], "R": null, "K'": [[5, 19], [8, 23]], "V'": [[9, 24], [11, 26]], "example": [1, 56]}, {"END": [108, 109], "A": [104, 106], "V": [71, 74], "Q": [100, 102], "K": [68, 70], "R": null, "K'": [[61, 75], [64, 78]], "V'": [[65, 79], [67, 81]], "example": [57, 110]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Albert Einstein has burger. Barack Obama has pistol. Serena Williams has peach. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns pistol? Answer: Yes\n Premise: < Nikola Tesla has plum. Oprah Winfrey has sheep. Louis Sullivan has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns grapes? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [17, 19], "Q": [45, 47], "K": [12, 16], "R": null, "K'": [[5, 20], [8, 23]], "V'": [[9, 24], [11, 26]], "example": [1, 55]}, {"END": [113, 114], "A": [108, 111], "V": [82, 85], "Q": [104, 106], "K": [77, 81], "R": null, "K'": [[60, 69], [65, 74]], "V'": [[66, 75], [68, 76]], "example": [56, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Albert Einstein has burger. Barack Obama has pistol. Serena Williams has peach. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns pistol? Answer: Yes\n Premise: < Nikola Tesla has plum. Oprah Winfrey has sheep. Louis Sullivan has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns sheep? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [17, 19], "Q": [45, 47], "K": [12, 16], "R": null, "K'": [[5, 20], [8, 23]], "V'": [[9, 24], [11, 26]], "example": [1, 55]}, {"END": [111, 112], "A": [108, 109], "V": [82, 85], "Q": [104, 106], "K": [77, 81], "R": null, "K'": [[60, 69], [65, 74]], "V'": [[66, 75], [68, 76]], "example": [56, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jeans is Norman Foster's. The cake is Zaha Hadid's. The rabbit is LeBron James's. >. So the athlete owns rabbit\n < The plum is Rosie Franklin's. The jeans is Sonia Sotomayor's. The watermelon is Jennifer Lawrence's. >. So the scientist owns plum\n", "ranges": [{"END": [41, 42], "A": [42, 44], "V": [24, 26], "Q": [37, 40], "K": [27, 31], "R": null, "K'": [[6, 16], [9, 20]], "V'": [[3, 13], [5, 15]], "example": [1, 44]}, {"END": [89, 90], "A": [90, 92], "V": [47, 49], "Q": [85, 88], "K": [50, 53], "R": null, "K'": [[60, 76], [67, 79]], "V'": [[57, 71], [59, 75]], "example": [45, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The monkey is Adele's. The whiskey is George Orwell's. The pants is Usain Bolt's. >. So the musician owns monkey\n < The goat is LeBron James's. The motorcycle is Hillary Clinton's. The guitar is Mies van der Rohe's. >. So the lawyer owns motorcycle\n", "ranges": [{"END": [40, 41], "A": [41, 43], "V": [3, 5], "Q": [36, 39], "K": [6, 9], "R": null, "K'": [[16, 26], [19, 30]], "V'": [[13, 23], [15, 25]], "example": [1, 43]}, {"END": [85, 86], "A": [86, 88], "V": [57, 59], "Q": [82, 84], "K": [60, 64], "R": null, "K'": [[49, 70], [53, 76]], "V'": [[46, 68], [48, 69]], "example": [44, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The orange is J.R.R. Tolkien's. The soda is Oprah Winfrey's. The football is Vincent van Gogh's. >. So the entrepreneur owns soda\n < The tea is Mark Twain's. The baseball is Beyonc\u00e9's. The sweater is Johnnie Cochran's. >. So the lawyer owns sweater\n", "ranges": [{"END": [48, 49], "A": [49, 51], "V": [18, 20], "Q": [43, 47], "K": [21, 26], "R": null, "K'": [[5, 32], [14, 37]], "V'": [[3, 30], [4, 31]], "example": [1, 51]}, {"END": [89, 90], "A": [90, 92], "V": [72, 74], "Q": [86, 88], "K": [75, 80], "R": null, "K'": [[56, 65], [59, 68]], "V'": [[54, 63], [55, 64]], "example": [52, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The hamburger is Usain Bolt's. The gorilla is Ruth Bader Ginsburg's. The strawberries is J.K. Rowling's. >. So the athlete owns hamburger\n < The pig is Dr. Michio Kaku's. The fox is Salvador Dal\u00ed's. The horse is Stephen King's. >. So the artist owns fox\n", "ranges": [{"END": [50, 51], "A": [51, 54], "V": [3, 6], "Q": [46, 49], "K": [7, 11], "R": null, "K'": [[19, 34], [25, 40]], "V'": [[15, 29], [18, 33]], "example": [1, 54]}, {"END": [93, 94], "A": [94, 96], "V": [70, 72], "Q": [90, 92], "K": [73, 76], "R": null, "K'": [[60, 82], [66, 84]], "V'": [[57, 80], [59, 81]], "example": [55, 96]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The elephant is Mies van der Rohe's. The baseball is Maya Lin's. The jeep is Vincent van Gogh's. >. So the artist owns jeep\n < The kiwi is Leonardo DiCaprio's. The grenade is Bill Gates's. The sweater is J.R.R. Tolkien's. >. So the entrepreneur owns grenade\n", "ranges": [{"END": [43, 44], "A": [44, 46], "V": [26, 28], "Q": [40, 42], "K": [29, 34], "R": null, "K'": [[7, 19], [13, 22]], "V'": [[3, 17], [6, 18]], "example": [1, 46]}, {"END": [95, 96], "A": [96, 99], "V": [61, 64], "Q": [90, 94], "K": [65, 68], "R": null, "K'": [[52, 75], [57, 84]], "V'": [[49, 72], [51, 74]], "example": [47, 99]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The sheep is Dr. Mehmet Oz's. The mango is Stephen King's. The vodka is Charlize Theron's. >. So the actor owns vodka\n < The strawberries is Tom Brady's. The jeep is Georgia O'Keeffe's. The peach is Ed Sheeran's. >. So the athlete owns strawberries\n", "ranges": [{"END": [43, 44], "A": [44, 47], "V": [25, 28], "Q": [40, 42], "K": [29, 34], "R": null, "K'": [[5, 19], [12, 21]], "V'": [[3, 16], [4, 18]], "example": [1, 47]}, {"END": [92, 93], "A": [93, 97], "V": [50, 54], "Q": [88, 91], "K": [55, 58], "R": null, "K'": [[65, 78], [71, 82]], "V'": [[62, 75], [64, 77]], "example": [48, 97]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jeans is Marie Curie's. The dog is Dr. Sanjay Gupta's. The lemon is Justin Bieber's. >. So the doctor owns dog\n < The jeep is Agatha Christie's. The peach is Denzel Washington's. The papaya is Marie Curie's. >. So the scientist owns papaya\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [13, 14], "Q": [39, 41], "K": [15, 22], "R": null, "K'": [[6, 29], [9, 33]], "V'": [[3, 26], [5, 28]], "example": [1, 44]}, {"END": [85, 86], "A": [86, 88], "V": [69, 71], "Q": [81, 84], "K": [72, 75], "R": null, "K'": [[50, 62], [55, 65]], "V'": [[47, 59], [49, 61]], "example": [45, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The bread is Serena Williams's. The basketball is Steve Jobs's. The horse is Georgia O'Keeffe's. >. So the athlete owns bread\n < The shotgun is Dr. Gabor Mat\u00e9's. The pizza is Usain Bolt's. The papaya is Neil deGrasse Tyson's. >. So the athlete owns pizza\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [3, 4], "Q": [35, 38], "K": [5, 8], "R": null, "K'": [[14, 23], [17, 29]], "V'": [[12, 21], [13, 22]], "example": [1, 41]}, {"END": [88, 89], "A": [89, 91], "V": [57, 59], "Q": [84, 87], "K": [60, 64], "R": null, "K'": [[47, 71], [53, 78]], "V'": [[44, 68], [46, 70]], "example": [42, 91]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Norman Foster's. The cake is Zaha Hadid's. The rabbit is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns jeans? Answer: No\n Premise: < The plum is F. Lee Bailey's. The jeans is Jennifer Lawrence's. The watermelon is Dr. Sanjay Gupta's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns plum? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [27, 29], "Q": [55, 58], "K": [30, 34], "R": null, "K'": [[9, 19], [12, 23]], "V'": [[6, 16], [8, 18]], "example": [1, 66]}, {"END": [135, 136], "A": [131, 133], "V": [72, 74], "Q": [127, 129], "K": [75, 80], "R": null, "K'": [[87, 99], [90, 106]], "V'": [[84, 94], [86, 98]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Norman Foster's. The cake is Zaha Hadid's. The rabbit is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns jeans? Answer: No\n Premise: < The plum is F. Lee Bailey's. The jeans is Jennifer Lawrence's. The watermelon is Dr. Sanjay Gupta's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns watermelon? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [27, 29], "Q": [55, 58], "K": [30, 34], "R": null, "K'": [[9, 19], [12, 23]], "V'": [[6, 16], [8, 18]], "example": [1, 66]}, {"END": [137, 138], "A": [131, 135], "V": [72, 74], "Q": [127, 129], "K": [75, 80], "R": null, "K'": [[87, 99], [90, 106]], "V'": [[84, 94], [86, 98]], "example": [67, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Michael Phelps's. The car is Drake's. The deer is Ernest Hemingway's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns deer? Answer: No\n Premise: < The cat is Frida Kahlo's. The rabbit is Johnny Depp's. The cocktail is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns cat? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [6, 8], "Q": [53, 56], "K": [9, 13], "R": null, "K'": [[19, 28], [21, 32]], "V'": [[17, 25], [18, 27]], "example": [1, 64]}, {"END": [125, 126], "A": [122, 123], "V": [70, 71], "Q": [118, 120], "K": [72, 77], "R": null, "K'": [[84, 95], [87, 97]], "V'": [[81, 91], [83, 94]], "example": [65, 127]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is Michael Phelps's. The car is Drake's. The deer is Ernest Hemingway's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns deer? Answer: No\n Premise: < The cat is Frida Kahlo's. The rabbit is Johnny Depp's. The cocktail is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns rabbit? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [6, 8], "Q": [53, 56], "K": [9, 13], "R": null, "K'": [[19, 28], [21, 32]], "V'": [[17, 25], [18, 27]], "example": [1, 64]}, {"END": [126, 127], "A": [122, 124], "V": [70, 71], "Q": [118, 120], "K": [72, 77], "R": null, "K'": [[84, 95], [87, 97]], "V'": [[81, 91], [83, 94]], "example": [65, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Vincent van Gogh's. The jersey is Marie Curie's. The handgun is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns durian? Answer: No\n Premise: < The underwear is Johnny Depp's. The peach is Jane Austen's. The burger is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns peach? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [29, 31], "Q": [55, 58], "K": [32, 34], "R": null, "K'": [[9, 22], [14, 25]], "V'": [[6, 18], [8, 21]], "example": [1, 66]}, {"END": [132, 133], "A": [128, 130], "V": [83, 85], "Q": [124, 126], "K": [86, 89], "R": null, "K'": [[76, 96], [79, 103]], "V'": [[72, 93], [75, 95]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Vincent van Gogh's. The jersey is Marie Curie's. The handgun is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns durian? Answer: No\n Premise: < The underwear is Johnny Depp's. The peach is Jane Austen's. The burger is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns underwear? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [29, 31], "Q": [55, 58], "K": [32, 34], "R": null, "K'": [[9, 22], [14, 25]], "V'": [[6, 18], [8, 21]], "example": [1, 66]}, {"END": [133, 134], "A": [128, 131], "V": [83, 85], "Q": [124, 126], "K": [86, 89], "R": null, "K'": [[76, 96], [79, 103]], "V'": [[72, 93], [75, 95]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Justin Bieber's. The horse is Steve Jobs's. The sweater is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns horse? Answer: Yes\n Premise: < The bee is Dr. Temple Grandin's. The baseball is Mark Twain's. The basketball is Sergey Brin's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns basketball? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [16, 17], "Q": [52, 56], "K": [18, 21], "R": null, "K'": [[8, 28], [12, 31]], "V'": [[6, 25], [7, 27]], "example": [1, 63]}, {"END": [126, 127], "A": [123, 124], "V": [90, 91], "Q": [117, 121], "K": [92, 96], "R": null, "K'": [[72, 83], [77, 86]], "V'": [[69, 81], [71, 82]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The mouse is Justin Bieber's. The horse is Steve Jobs's. The sweater is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns horse? Answer: Yes\n Premise: < The bee is Dr. Temple Grandin's. The baseball is Mark Twain's. The basketball is Sergey Brin's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns baseball? Answer: No\n", "ranges": [{"END": [61, 62], "A": [58, 59], "V": [16, 17], "Q": [52, 56], "K": [18, 21], "R": null, "K'": [[8, 28], [12, 31]], "V'": [[6, 25], [7, 27]], "example": [1, 63]}, {"END": [126, 127], "A": [123, 124], "V": [90, 91], "Q": [117, 121], "K": [92, 96], "R": null, "K'": [[72, 83], [77, 86]], "V'": [[69, 81], [71, 82]], "example": [64, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Mies van der Rohe's. The squirrel is Drake's. The soda is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns soda? Answer: No\n Premise: < The revolver is Maya Lin's. The cat is Jane Austen's. The mango is Meryl Streep's. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns mango? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [6, 8], "Q": [59, 61], "K": [9, 15], "R": null, "K'": [[23, 32], [25, 38]], "V'": [[19, 29], [22, 31]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [94, 96], "Q": [124, 126], "K": [97, 103], "R": null, "K'": [[78, 87], [81, 90]], "V'": [[75, 85], [77, 86]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Mies van der Rohe's. The squirrel is Drake's. The soda is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns soda? Answer: No\n Premise: < The revolver is Maya Lin's. The cat is Jane Austen's. The mango is Meryl Streep's. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns revolver? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [6, 8], "Q": [59, 61], "K": [9, 15], "R": null, "K'": [[23, 32], [25, 38]], "V'": [[19, 29], [22, 31]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [94, 96], "Q": [124, 126], "K": [97, 103], "R": null, "K'": [[78, 87], [81, 90]], "V'": [[75, 85], [77, 86]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Stephen King's. The mosquito is Johnnie Cochran's. The wolf is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns mosquito? Answer: Yes\n Premise: < The goat is Frida Kahlo's. The beer is Leonardo DiCaprio's. The cat is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns goat? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [60, 63], "V": [16, 19], "Q": [56, 58], "K": [20, 25], "R": null, "K'": [[10, 32], [12, 35]], "V'": [[6, 29], [9, 31]], "example": [1, 67]}, {"END": [133, 134], "A": [129, 131], "V": [73, 75], "Q": [125, 127], "K": [76, 81], "R": null, "K'": [[88, 99], [93, 104]], "V'": [[85, 97], [87, 98]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Stephen King's. The mosquito is Johnnie Cochran's. The wolf is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns mosquito? Answer: Yes\n Premise: < The goat is Frida Kahlo's. The beer is Leonardo DiCaprio's. The cat is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns beer? Answer: No\n", "ranges": [{"END": [65, 66], "A": [60, 63], "V": [16, 19], "Q": [56, 58], "K": [20, 25], "R": null, "K'": [[10, 32], [12, 35]], "V'": [[6, 29], [9, 31]], "example": [1, 67]}, {"END": [133, 134], "A": [129, 131], "V": [73, 75], "Q": [125, 127], "K": [76, 81], "R": null, "K'": [[88, 99], [93, 104]], "V'": [[85, 97], [87, 98]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Bill Gates's. The costume is Carl Sagan's. The pizza is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns whiskey? Answer: No\n Premise: < The cake is Adele's. The grapes is Brad Pitt's. The fox is George Orwell's. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns grapes? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [16, 18], "Q": [54, 57], "K": [19, 22], "R": null, "K'": [[9, 29], [12, 33]], "V'": [[6, 26], [8, 28]], "example": [1, 65]}, {"END": [127, 128], "A": [122, 125], "V": [81, 84], "Q": [118, 120], "K": [85, 87], "R": null, "K'": [[74, 94], [77, 97]], "V'": [[71, 91], [73, 93]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Bill Gates's. The costume is Carl Sagan's. The pizza is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns whiskey? Answer: No\n Premise: < The cake is Adele's. The grapes is Brad Pitt's. The fox is George Orwell's. >. Answer with Yes or No. Can it be inferred from the premise that the actor owns cake? Answer: No\n", "ranges": [{"END": [63, 64], "A": [59, 61], "V": [16, 18], "Q": [54, 57], "K": [19, 22], "R": null, "K'": [[9, 29], [12, 33]], "V'": [[6, 26], [8, 28]], "example": [1, 65]}, {"END": [126, 127], "A": [122, 124], "V": [81, 84], "Q": [118, 120], "K": [85, 87], "R": null, "K'": [[74, 94], [77, 97]], "V'": [[71, 91], [73, 93]], "example": [66, 128]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Albert Einstein's. The pistol is Barack Obama's. The peach is Serena Williams's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns pistol? Answer: Yes\n Premise: < The plum is Nikola Tesla's. The sheep is Oprah Winfrey's. The grapes is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns grapes? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [16, 18], "Q": [54, 56], "K": [19, 23], "R": null, "K'": [[9, 30], [12, 33]], "V'": [[6, 27], [8, 29]], "example": [1, 64]}, {"END": [131, 132], "A": [126, 129], "V": [93, 96], "Q": [122, 124], "K": [97, 101], "R": null, "K'": [[73, 84], [78, 89]], "V'": [[70, 82], [72, 83]], "example": [65, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Albert Einstein's. The pistol is Barack Obama's. The peach is Serena Williams's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns pistol? Answer: Yes\n Premise: < The plum is Nikola Tesla's. The sheep is Oprah Winfrey's. The grapes is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the architect owns sheep? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [16, 18], "Q": [54, 56], "K": [19, 23], "R": null, "K'": [[9, 30], [12, 33]], "V'": [[6, 27], [8, 29]], "example": [1, 64]}, {"END": [129, 130], "A": [126, 127], "V": [93, 96], "Q": [122, 124], "K": [97, 101], "R": null, "K'": [[73, 84], [78, 89]], "V'": [[70, 82], [72, 83]], "example": [65, 131]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Lionel Messi has jeans. Usain Bolt has cake. Jennifer Lawrence has rabbit. >. The athlete does not own rabbit\n < Albert Einstein has spaghetti. Richard Dawkins has plum. Dr. Michio Kaku has guitar. >. The scientist does not own guitar\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [22, 24], "Q": [27, 30], "K'": [18, 21], "R": [31, 32], "K": [[2, 10], [6, 14]], "V": [[7, 15], [9, 17]], "example": [1, 35]}, {"END": [68, 69], "A'": [69, 70], "V'": [59, 60], "Q": [63, 66], "K'": [52, 58], "R": [67, 68], "K": [[37, 45], [40, 48]], "V": [[41, 49], [44, 51]], "example": [36, 70]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan has monkey. Rihanna has whiskey. Taylor Swift has pants. >. The musician does not own monkey\n < Clarence Darrow has motorcycle. Simone Biles has shoes. Hillary Clinton has grapes. >. The lawyer does not own shoes\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [6, 8], "Q": [24, 27], "K'": [2, 5], "R": [28, 29], "K": [[9, 16], [12, 18]], "V": [[13, 19], [15, 21]], "example": [1, 32]}, {"END": [65, 66], "A'": [66, 68], "V'": [47, 49], "Q": [61, 63], "K'": [42, 46], "R": [64, 65], "K": [[34, 50], [38, 54]], "V": [[39, 55], [41, 58]], "example": [33, 68]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Nikola Tesla has vodka. Cristiano Ronaldo has mouse. Neil deGrasse Tyson has peach. >. The scientist does not own mouse\n < Sonia Sotomayor has tea. Ruth Bader Ginsburg has baseball. Marie Curie has sweater. >. The lawyer does not own sweater\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [18, 19], "Q": [33, 36], "K'": [12, 17], "R": [37, 38], "K": [[2, 20], [7, 27]], "V": [[8, 28], [11, 30]], "example": [1, 40]}, {"END": [74, 75], "A'": [75, 77], "V'": [65, 67], "Q": [70, 72], "K'": [61, 64], "R": [73, 74], "K": [[42, 52], [49, 58]], "V": [[50, 59], [51, 60]], "example": [41, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Carl Sagan has hamburger. Alex Morgan has gorilla. Simone Biles has strawberries. >. The athlete does not own hamburger\n < Jackson Pollock has pig. Toni Morrison has fox. Salvador Dal\u00ed has horse. >. The artist does not own fox\n", "ranges": [{"END": [34, 35], "A'": [35, 38], "V'": [6, 9], "Q": [29, 32], "K'": [2, 5], "R": [33, 34], "K": [[10, 17], [12, 21]], "V": [[13, 22], [16, 26]], "example": [1, 38]}, {"END": [68, 69], "A'": [69, 71], "V'": [53, 55], "Q": [64, 66], "K'": [47, 52], "R": [67, 68], "K": [[40, 56], [43, 59]], "V": [[44, 60], [46, 61]], "example": [39, 71]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Jackson Pollock has elephant. Salvador Dal\u00ed has baseball. Johnny Depp has blueberries. >. The artist does not own blueberries\n < Elon Musk has apricot. Beyonc\u00e9 has banana. Warren Buffett has sweater. >. The entrepreneur does not own banana\n", "ranges": [{"END": [30, 31], "A'": [31, 34], "V'": [20, 23], "Q": [26, 28], "K'": [16, 19], "R": [29, 30], "K": [[2, 10], [5, 13]], "V": [[6, 14], [9, 15]], "example": [1, 34]}, {"END": [67, 68], "A'": [68, 70], "V'": [49, 51], "Q": [61, 65], "K'": [45, 48], "R": [66, 67], "K": [[36, 52], [40, 55]], "V": [[41, 56], [44, 58]], "example": [35, 70]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Natalie Portman has sheep. Julia Roberts has mango. Clarence Darrow has vodka. >. The actor does not own vodka\n < Cristiano Ronaldo has bee. Dr. Gabor Mat\u00e9 has apple. Alex Morgan has pants. >. The athlete does not own apple\n", "ranges": [{"END": [30, 31], "A'": [31, 34], "V'": [20, 23], "Q": [26, 28], "K'": [15, 19], "R": [29, 30], "K": [[2, 9], [6, 11]], "V": [[7, 12], [8, 14]], "example": [1, 34]}, {"END": [67, 68], "A'": [68, 69], "V'": [52, 53], "Q": [62, 65], "K'": [45, 51], "R": [66, 67], "K": [[36, 54], [41, 56]], "V": [[42, 57], [44, 59]], "example": [35, 69]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Steve Jobs has lemon. Claude Monet has wolf. Warren Buffett has goat. >. The entrepreneur does not own wolf\n < Justin Bieber has goat. Pablo Picasso has beer. Vincent van Gogh has cat. >. The artist does not own goat\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [13, 15], "Q": [25, 29], "K'": [9, 12], "R": [30, 31], "K": [[2, 16], [5, 19]], "V": [[6, 20], [8, 22]], "example": [1, 34]}, {"END": [65, 66], "A'": [66, 68], "V'": [41, 43], "Q": [61, 63], "K'": [36, 40], "R": [64, 65], "K": [[44, 51], [47, 56]], "V": [[48, 57], [50, 58]], "example": [35, 68]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "< Johnnie Cochran has bread. Lady Gaga has uniform. Eminem has monkey. >. The musician does not own bread\n < Dr. Anthony Fauci has car. Brad Pitt has rabbit. Dr. Sanjay Gupta has cherries. >. The doctor does not own rabbit\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [8, 9], "Q": [25, 28], "K'": [2, 7], "R": [29, 30], "K": [[10, 16], [13, 19]], "V": [[14, 20], [15, 22]], "example": [1, 32]}, {"END": [66, 67], "A'": [67, 69], "V'": [46, 48], "Q": [62, 64], "K'": [43, 45], "R": [65, 66], "K": [[34, 49], [40, 56]], "V": [[41, 57], [42, 59]], "example": [33, 69]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi has jeans. Usain Bolt has cake. Jennifer Lawrence has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own jeans? Answer: No\n Premise: < Alan Dershowitz has jeans. Barack Obama has gun. Dr. Temple Grandin has meat. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own meat? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [25, 27], "Q": [46, 49], "K'": [21, 24], "R": [50, 51], "K": [[5, 13], [9, 17]], "V": [[10, 18], [12, 20]], "example": [1, 58]}, {"END": [113, 114], "A'": [110, 111], "V'": [85, 86], "Q": [105, 107], "K'": [79, 84], "R": [108, 109], "K": [[63, 72], [68, 76]], "V": [[69, 77], [71, 78]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Lionel Messi has jeans. Usain Bolt has cake. Jennifer Lawrence has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own jeans? Answer: No\n Premise: < Alan Dershowitz has jeans. Barack Obama has gun. Dr. Temple Grandin has meat. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own gun? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [25, 27], "Q": [46, 49], "K'": [21, 24], "R": [50, 51], "K": [[5, 13], [9, 17]], "V": [[10, 18], [12, 20]], "example": [1, 58]}, {"END": [113, 114], "A'": [110, 111], "V'": [85, 86], "Q": [105, 107], "K'": [79, 84], "R": [108, 109], "K": [[63, 72], [68, 76]], "V": [[69, 77], [71, 78]], "example": [59, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has donkey. Serena Williams has car. Simone Biles has deer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own deer? Answer: No\n Premise: < Kanye West has cat. Vincent van Gogh has rabbit. Pablo Picasso has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own cat? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [15, 17], "Q": [50, 53], "K'": [5, 14], "R": [54, 55], "K": [[18, 24], [21, 28]], "V": [[22, 29], [23, 31]], "example": [1, 62]}, {"END": [117, 118], "A'": [114, 115], "V'": [72, 73], "Q": [109, 111], "K'": [67, 71], "R": [112, 113], "K": [[74, 83], [79, 86]], "V": [[80, 87], [82, 90]], "example": [63, 119]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has donkey. Serena Williams has car. Simone Biles has deer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own deer? Answer: No\n Premise: < Kanye West has cat. Vincent van Gogh has rabbit. Pablo Picasso has cocktail. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own rabbit? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [56, 58], "V'": [15, 17], "Q": [50, 53], "K'": [5, 14], "R": [54, 55], "K": [[18, 24], [21, 28]], "V": [[22, 29], [23, 31]], "example": [1, 62]}, {"END": [118, 119], "A'": [114, 116], "V'": [72, 73], "Q": [109, 111], "K'": [67, 71], "R": [112, 113], "K": [[74, 83], [79, 86]], "V": [[80, 87], [82, 90]], "example": [63, 120]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo has durian. Tom Brady has jersey. Sonia Sotomayor has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own durian? Answer: No\n Premise: < Stephen King has underwear. Jeff Bezos has peach. Toni Morrison has burger. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own peach? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [30, 32], "Q": [51, 54], "K'": [22, 29], "R": [55, 56], "K": [[5, 14], [10, 17]], "V": [[11, 18], [13, 21]], "example": [1, 63]}, {"END": [118, 119], "A'": [114, 116], "V'": [79, 81], "Q": [109, 111], "K'": [75, 78], "R": [112, 113], "K": [[68, 82], [70, 87]], "V": [[71, 88], [74, 90]], "example": [64, 120]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo has durian. Tom Brady has jersey. Sonia Sotomayor has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own durian? Answer: No\n Premise: < Stephen King has underwear. Jeff Bezos has peach. Toni Morrison has burger. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own underwear? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [30, 32], "Q": [51, 54], "K'": [22, 29], "R": [55, 56], "K": [[5, 14], [10, 17]], "V": [[11, 18], [13, 21]], "example": [1, 63]}, {"END": [119, 120], "A'": [114, 117], "V'": [79, 81], "Q": [109, 111], "K'": [75, 78], "R": [112, 113], "K": [[68, 82], [70, 87]], "V": [[71, 88], [74, 90]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg has wolf. Antoni Gaud\u00ed has pig. Bill Gates has mouse. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own pig? Answer: Yes\n Premise: < Larry Page has car. Warren Buffett has baseball. Clarence Darrow has goose. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own goose? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [19, 21], "Q": [46, 50], "K'": [13, 18], "R": [51, 52], "K": [[5, 22], [9, 25]], "V": [[10, 26], [12, 27]], "example": [1, 59]}, {"END": [112, 113], "A'": [108, 110], "V'": [80, 82], "Q": [101, 105], "K'": [75, 79], "R": [106, 107], "K": [[64, 69], [66, 72]], "V": [[67, 73], [68, 74]], "example": [60, 114]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg has wolf. Antoni Gaud\u00ed has pig. Bill Gates has mouse. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own pig? Answer: Yes\n Premise: < Larry Page has car. Warren Buffett has baseball. Clarence Darrow has goose. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own baseball? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [19, 21], "Q": [46, 50], "K'": [13, 18], "R": [51, 52], "K": [[5, 22], [9, 25]], "V": [[10, 26], [12, 27]], "example": [1, 59]}, {"END": [111, 112], "A'": [108, 109], "V'": [80, 82], "Q": [101, 105], "K'": [75, 79], "R": [106, 107], "K": [[64, 69], [66, 72]], "V": [[67, 73], [68, 74]], "example": [60, 113]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku has sweater. Le Corbusier has squirrel. Mies van der Rohe has soda. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own soda? Answer: No\n Premise: < Denzel Washington has revolver. Julia Roberts has cat. Kanye West has mango. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own mango? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [12, 14], "Q": [52, 54], "K'": [5, 11], "R": [55, 56], "K": [[15, 24], [19, 30]], "V": [[20, 31], [23, 33]], "example": [1, 63]}, {"END": [115, 116], "A'": [111, 113], "V'": [85, 87], "Q": [106, 108], "K'": [80, 84], "R": [109, 110], "K": [[68, 75], [71, 77]], "V": [[72, 78], [74, 79]], "example": [64, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dr. Michio Kaku has sweater. Le Corbusier has squirrel. Mies van der Rohe has soda. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own soda? Answer: No\n Premise: < Denzel Washington has revolver. Julia Roberts has cat. Kanye West has mango. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own revolver? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [57, 59], "V'": [12, 14], "Q": [52, 54], "K'": [5, 11], "R": [55, 56], "K": [[15, 24], [19, 30]], "V": [[20, 31], [23, 33]], "example": [1, 63]}, {"END": [115, 116], "A'": [111, 113], "V'": [85, 87], "Q": [106, 108], "K'": [80, 84], "R": [109, 110], "K": [[68, 75], [71, 77]], "V": [[72, 78], [74, 79]], "example": [64, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Thurgood Marshall has blackberries. Michelangelo has steak. Johnnie Cochran has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own steak? Answer: Yes\n Premise: < Justin Bieber has goat. Pablo Picasso has beer. Vincent van Gogh has cat. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own goat? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [18, 20], "Q": [48, 50], "K'": [14, 17], "R": [51, 52], "K": [[5, 21], [9, 26]], "V": [[10, 27], [13, 29]], "example": [1, 59]}, {"END": [114, 115], "A'": [110, 112], "V'": [69, 71], "Q": [105, 107], "K'": [64, 68], "R": [108, 109], "K": [[72, 79], [75, 84]], "V": [[76, 85], [78, 86]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Thurgood Marshall has blackberries. Michelangelo has steak. Johnnie Cochran has wolf. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own steak? Answer: Yes\n Premise: < Justin Bieber has goat. Pablo Picasso has beer. Vincent van Gogh has cat. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own beer? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [18, 20], "Q": [48, 50], "K'": [14, 17], "R": [51, 52], "K": [[5, 21], [9, 26]], "V": [[10, 27], [13, 29]], "example": [1, 59]}, {"END": [114, 115], "A'": [110, 112], "V'": [69, 71], "Q": [105, 107], "K'": [64, 68], "R": [108, 109], "K": [[72, 79], [75, 84]], "V": [[76, 85], [78, 86]], "example": [60, 116]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nikola Tesla has whiskey. Dr. Anthony Fauci has costume. Jane Goodall has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not own whiskey? Answer: No\n Premise: < Meryl Streep has cake. Jeff Bezos has grapes. Julia Roberts has fox. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own grapes? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [49, 52], "K'": [14, 20], "R": [53, 54], "K": [[5, 24], [10, 27]], "V": [[11, 28], [13, 30]], "example": [1, 61]}, {"END": [118, 119], "A'": [113, 116], "V'": [80, 83], "Q": [108, 110], "K'": [76, 79], "R": [111, 112], "K": [[66, 84], [72, 86]], "V": [[73, 87], [75, 89]], "example": [62, 120]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Nikola Tesla has whiskey. Dr. Anthony Fauci has costume. Jane Goodall has pizza. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not own whiskey? Answer: No\n Premise: < Meryl Streep has cake. Jeff Bezos has grapes. Julia Roberts has fox. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own cake? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [49, 52], "K'": [14, 20], "R": [53, 54], "K": [[5, 24], [10, 27]], "V": [[11, 28], [13, 30]], "example": [1, 61]}, {"END": [117, 118], "A'": [113, 115], "V'": [80, 83], "Q": [108, 110], "K'": [76, 79], "R": [111, 112], "K": [[66, 84], [72, 86]], "V": [[73, 87], [75, 89]], "example": [62, 119]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Johnnie Cochran has burger. Meryl Streep has pistol. Hillary Clinton has peach. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own pistol? Answer: Yes\n Premise: < Larry Page has squirrel. Rem Koolhaas has kiwi. Antoni Gaud\u00ed has plum. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own squirrel? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [50, 52], "K'": [14, 20], "R": [53, 54], "K": [[5, 24], [10, 28]], "V": [[11, 29], [13, 31]], "example": [1, 61]}, {"END": [119, 120], "A'": [114, 117], "V'": [69, 72], "Q": [109, 111], "K'": [66, 68], "R": [112, 113], "K": [[73, 82], [78, 87]], "V": [[79, 88], [81, 90]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Johnnie Cochran has burger. Meryl Streep has pistol. Hillary Clinton has peach. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own pistol? Answer: Yes\n Premise: < Larry Page has squirrel. Rem Koolhaas has kiwi. Antoni Gaud\u00ed has plum. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own kiwi? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [21, 23], "Q": [50, 52], "K'": [14, 20], "R": [53, 54], "K": [[5, 24], [10, 28]], "V": [[11, 29], [13, 31]], "example": [1, 61]}, {"END": [118, 119], "A'": [114, 116], "V'": [69, 72], "Q": [109, 111], "K'": [66, 68], "R": [112, 113], "K": [[73, 82], [78, 87]], "V": [[79, 88], [81, 90]], "example": [62, 120]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The jeans is Lionel Messi's. The cake is Usain Bolt's. The rabbit is Jennifer Lawrence's. >. The athlete does not own rabbit\n < The spaghetti is Albert Einstein's. The plum is Richard Dawkins's. The guitar is Dr. Michio Kaku's. >. The scientist does not own guitar\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [25, 27], "Q": [36, 39], "K'": [28, 31], "R": [40, 41], "K": [[6, 17], [10, 21]], "V": [[3, 14], [5, 16]], "example": [1, 44]}, {"END": [86, 87], "A'": [87, 88], "V'": [68, 69], "Q": [81, 84], "K'": [70, 76], "R": [85, 86], "K": [[51, 61], [54, 64]], "V": [[47, 58], [50, 60]], "example": [45, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The monkey is Carl Sagan's. The whiskey is Rihanna's. The pants is Taylor Swift's. >. The musician does not own monkey\n < The motorcycle is Clarence Darrow's. The shoes is Simone Biles's. The grapes is Hillary Clinton's. >. The lawyer does not own shoes\n", "ranges": [{"END": [38, 39], "A'": [39, 41], "V'": [3, 5], "Q": [33, 36], "K'": [6, 9], "R": [37, 38], "K": [[16, 26], [19, 28]], "V": [[13, 23], [15, 25]], "example": [1, 41]}, {"END": [83, 84], "A'": [84, 86], "V'": [55, 57], "Q": [79, 81], "K'": [58, 62], "R": [82, 83], "K": [[47, 70], [51, 74]], "V": [[44, 66], [46, 69]], "example": [42, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The vodka is Nikola Tesla's. The mouse is Cristiano Ronaldo's. The peach is Neil deGrasse Tyson's. >. The scientist does not own mouse\n < The tea is Sonia Sotomayor's. The baseball is Ruth Bader Ginsburg's. The sweater is Marie Curie's. >. The lawyer does not own sweater\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [16, 17], "Q": [42, 45], "K'": [18, 23], "R": [46, 47], "K": [[7, 30], [12, 37]], "V": [[3, 27], [6, 29]], "example": [1, 49]}, {"END": [92, 93], "A'": [93, 95], "V'": [77, 79], "Q": [88, 90], "K'": [80, 83], "R": [91, 92], "K": [[54, 67], [61, 73]], "V": [[52, 65], [53, 66]], "example": [50, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The hamburger is Carl Sagan's. The gorilla is Alex Morgan's. The strawberries is Simone Biles's. >. The athlete does not own hamburger\n < The pig is Jackson Pollock's. The fox is Toni Morrison's. The horse is Salvador Dal\u00ed's. >. The artist does not own fox\n", "ranges": [{"END": [43, 44], "A'": [44, 47], "V'": [3, 6], "Q": [38, 41], "K'": [7, 10], "R": [42, 43], "K": [[18, 29], [20, 33]], "V": [[14, 24], [17, 28]], "example": [1, 47]}, {"END": [86, 87], "A'": [87, 89], "V'": [60, 62], "Q": [82, 84], "K'": [63, 68], "R": [85, 86], "K": [[53, 74], [56, 77]], "V": [[50, 72], [52, 73]], "example": [48, 89]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The elephant is Jackson Pollock's. The baseball is Salvador Dal\u00ed's. The blueberries is Johnny Depp's. >. The artist does not own blueberries\n < The apricot is Elon Musk's. The banana is Beyonc\u00e9's. The sweater is Warren Buffett's. >. The entrepreneur does not own banana\n", "ranges": [{"END": [39, 40], "A'": [40, 43], "V'": [23, 26], "Q": [35, 37], "K'": [27, 30], "R": [38, 39], "K": [[7, 16], [10, 19]], "V": [[3, 14], [6, 15]], "example": [1, 43]}, {"END": [85, 86], "A'": [86, 88], "V'": [58, 60], "Q": [79, 83], "K'": [61, 64], "R": [84, 85], "K": [[50, 71], [54, 74]], "V": [[46, 68], [49, 70]], "example": [44, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The sheep is Natalie Portman's. The mango is Julia Roberts's. The vodka is Clarence Darrow's. >. The actor does not own vodka\n < The bee is Cristiano Ronaldo's. The apple is Dr. Gabor Mat\u00e9's. The pants is Alex Morgan's. >. The athlete does not own apple\n", "ranges": [{"END": [39, 40], "A'": [40, 43], "V'": [22, 25], "Q": [35, 37], "K'": [26, 30], "R": [38, 39], "K": [[5, 16], [9, 18]], "V": [[3, 13], [4, 15]], "example": [1, 43]}, {"END": [85, 86], "A'": [86, 87], "V'": [58, 59], "Q": [80, 83], "K'": [60, 66], "R": [84, 85], "K": [[49, 73], [54, 75]], "V": [[46, 70], [48, 72]], "example": [44, 87]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The lemon is Steve Jobs's. The wolf is Claude Monet's. The goat is Warren Buffett's. >. The entrepreneur does not own wolf\n < The goat is Justin Bieber's. The beer is Pablo Picasso's. The cat is Vincent van Gogh's. >. The artist does not own goat\n", "ranges": [{"END": [40, 41], "A'": [41, 43], "V'": [13, 15], "Q": [34, 38], "K'": [16, 19], "R": [39, 40], "K": [[6, 26], [9, 29]], "V": [[3, 23], [5, 25]], "example": [1, 43]}, {"END": [83, 84], "A'": [84, 86], "V'": [46, 48], "Q": [79, 81], "K'": [49, 53], "R": [82, 83], "K": [[60, 69], [63, 74]], "V": [[57, 67], [59, 68]], "example": [44, 86]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< The bread is Johnnie Cochran's. The uniform is Lady Gaga's. The monkey is Eminem's. >. The musician does not own bread\n < The car is Dr. Anthony Fauci's. The rabbit is Brad Pitt's. The cherries is Dr. Sanjay Gupta's. >. The doctor does not own rabbit\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [3, 4], "Q": [34, 37], "K'": [5, 10], "R": [38, 39], "K": [[16, 26], [19, 29]], "V": [[14, 23], [15, 25]], "example": [1, 41]}, {"END": [84, 85], "A'": [85, 87], "V'": [56, 58], "Q": [80, 82], "K'": [59, 61], "R": [83, 84], "K": [[46, 68], [52, 75]], "V": [[44, 65], [45, 67]], "example": [42, 87]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Lionel Messi's. The cake is Usain Bolt's. The rabbit is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own jeans? Answer: No\n Premise: < The jeans is Alan Dershowitz's. The gun is Barack Obama's. The meat is Dr. Temple Grandin's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own meat? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [28, 30], "Q": [55, 58], "K'": [31, 34], "R": [59, 60], "K": [[9, 20], [13, 24]], "V": [[6, 17], [8, 19]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [95, 96], "Q": [123, 125], "K'": [97, 102], "R": [126, 127], "K": [[76, 87], [81, 91]], "V": [[73, 85], [75, 86]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Lionel Messi's. The cake is Usain Bolt's. The rabbit is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own jeans? Answer: No\n Premise: < The jeans is Alan Dershowitz's. The gun is Barack Obama's. The meat is Dr. Temple Grandin's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own gun? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [61, 63], "V'": [28, 30], "Q": [55, 58], "K'": [31, 34], "R": [59, 60], "K": [[9, 20], [13, 24]], "V": [[6, 17], [8, 19]], "example": [1, 67]}, {"END": [131, 132], "A'": [128, 129], "V'": [95, 96], "Q": [123, 125], "K'": [97, 102], "R": [126, 127], "K": [[76, 87], [81, 91]], "V": [[73, 85], [75, 86]], "example": [68, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is J.R.R. Tolkien's. The car is Serena Williams's. The deer is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own deer? Answer: No\n Premise: < The cat is Kanye West's. The rabbit is Vincent van Gogh's. The cocktail is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own cat? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [6, 8], "Q": [59, 62], "K'": [9, 18], "R": [63, 64], "K": [[24, 34], [27, 38]], "V": [[22, 31], [23, 33]], "example": [1, 71]}, {"END": [135, 136], "A'": [132, 133], "V'": [77, 78], "Q": [127, 129], "K'": [79, 83], "R": [130, 131], "K": [[90, 103], [95, 106]], "V": [[87, 99], [89, 102]], "example": [72, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The donkey is J.R.R. Tolkien's. The car is Serena Williams's. The deer is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own deer? Answer: No\n Premise: < The cat is Kanye West's. The rabbit is Vincent van Gogh's. The cocktail is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own rabbit? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [6, 8], "Q": [59, 62], "K'": [9, 18], "R": [63, 64], "K": [[24, 34], [27, 38]], "V": [[22, 31], [23, 33]], "example": [1, 71]}, {"END": [136, 137], "A'": [132, 134], "V'": [77, 78], "Q": [127, 129], "K'": [79, 83], "R": [130, 131], "K": [[90, 103], [95, 106]], "V": [[87, 99], [89, 102]], "example": [72, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Cristiano Ronaldo's. The jersey is Tom Brady's. The handgun is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own durian? Answer: No\n Premise: < The underwear is Stephen King's. The peach is Jeff Bezos's. The burger is Toni Morrison's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own peach? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [29, 31], "Q": [60, 63], "K'": [32, 39], "R": [64, 65], "K": [[9, 22], [14, 25]], "V": [[6, 18], [8, 21]], "example": [1, 72]}, {"END": [136, 137], "A'": [132, 134], "V'": [88, 90], "Q": [127, 129], "K'": [91, 94], "R": [130, 131], "K": [[82, 101], [84, 106]], "V": [[78, 98], [81, 100]], "example": [73, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Cristiano Ronaldo's. The jersey is Tom Brady's. The handgun is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own durian? Answer: No\n Premise: < The underwear is Stephen King's. The peach is Jeff Bezos's. The burger is Toni Morrison's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own underwear? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [29, 31], "Q": [60, 63], "K'": [32, 39], "R": [64, 65], "K": [[9, 22], [14, 25]], "V": [[6, 18], [8, 21]], "example": [1, 72]}, {"END": [137, 138], "A'": [132, 135], "V'": [88, 90], "Q": [127, 129], "K'": [91, 94], "R": [130, 131], "K": [[82, 101], [84, 106]], "V": [[78, 98], [81, 100]], "example": [73, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The wolf is Mark Zuckerberg's. The pig is Antoni Gaud\u00ed's. The mouse is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own pig? Answer: Yes\n Premise: < The car is Larry Page's. The baseball is Warren Buffett's. The goose is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own goose? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [17, 19], "Q": [55, 59], "K'": [20, 25], "R": [60, 61], "K": [[9, 31], [13, 34]], "V": [[6, 29], [8, 30]], "example": [1, 68]}, {"END": [130, 131], "A'": [126, 128], "V'": [91, 93], "Q": [119, 123], "K'": [94, 98], "R": [124, 125], "K": [[76, 84], [78, 87]], "V": [[74, 82], [75, 83]], "example": [69, 132]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The wolf is Mark Zuckerberg's. The pig is Antoni Gaud\u00ed's. The mouse is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own pig? Answer: Yes\n Premise: < The car is Larry Page's. The baseball is Warren Buffett's. The goose is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own baseball? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [17, 19], "Q": [55, 59], "K'": [20, 25], "R": [60, 61], "K": [[9, 31], [13, 34]], "V": [[6, 29], [8, 30]], "example": [1, 68]}, {"END": [129, 130], "A'": [126, 127], "V'": [91, 93], "Q": [119, 123], "K'": [94, 98], "R": [124, 125], "K": [[76, 84], [78, 87]], "V": [[74, 82], [75, 83]], "example": [69, 131]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Dr. Michio Kaku's. The squirrel is Le Corbusier's. The soda is Mies van der Rohe's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own soda? Answer: No\n Premise: < The revolver is Denzel Washington's. The cat is Julia Roberts's. The mango is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own mango? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [6, 8], "Q": [61, 63], "K'": [9, 15], "R": [64, 65], "K": [[23, 34], [27, 40]], "V": [[19, 31], [22, 33]], "example": [1, 72]}, {"END": [133, 134], "A'": [129, 131], "V'": [96, 98], "Q": [124, 126], "K'": [99, 103], "R": [127, 128], "K": [[81, 90], [84, 92]], "V": [[78, 88], [80, 89]], "example": [73, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Dr. Michio Kaku's. The squirrel is Le Corbusier's. The soda is Mies van der Rohe's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own soda? Answer: No\n Premise: < The revolver is Denzel Washington's. The cat is Julia Roberts's. The mango is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own revolver? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [6, 8], "Q": [61, 63], "K'": [9, 15], "R": [64, 65], "K": [[23, 34], [27, 40]], "V": [[19, 31], [22, 33]], "example": [1, 72]}, {"END": [133, 134], "A'": [129, 131], "V'": [96, 98], "Q": [124, 126], "K'": [99, 103], "R": [127, 128], "K": [[81, 90], [84, 92]], "V": [[78, 88], [80, 89]], "example": [73, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Thurgood Marshall's. The steak is Michelangelo's. The wolf is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own steak? Answer: Yes\n Premise: < The goat is Justin Bieber's. The beer is Pablo Picasso's. The cat is Vincent van Gogh's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own goat? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [18, 20], "Q": [57, 59], "K'": [21, 24], "R": [60, 61], "K": [[10, 31], [14, 36]], "V": [[6, 28], [9, 30]], "example": [1, 68]}, {"END": [132, 133], "A'": [128, 130], "V'": [74, 76], "Q": [123, 125], "K'": [77, 81], "R": [126, 127], "K": [[88, 97], [91, 102]], "V": [[85, 95], [87, 96]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Thurgood Marshall's. The steak is Michelangelo's. The wolf is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own steak? Answer: Yes\n Premise: < The goat is Justin Bieber's. The beer is Pablo Picasso's. The cat is Vincent van Gogh's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own beer? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [62, 64], "V'": [18, 20], "Q": [57, 59], "K'": [21, 24], "R": [60, 61], "K": [[10, 31], [14, 36]], "V": [[6, 28], [9, 30]], "example": [1, 68]}, {"END": [132, 133], "A'": [128, 130], "V'": [74, 76], "Q": [123, 125], "K'": [77, 81], "R": [126, 127], "K": [[88, 97], [91, 102]], "V": [[85, 95], [87, 96]], "example": [69, 134]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Nikola Tesla's. The costume is Dr. Anthony Fauci's. The pizza is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not own whiskey? Answer: No\n Premise: < The cake is Meryl Streep's. The grapes is Jeff Bezos's. The fox is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own grapes? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [18, 20], "Q": [58, 61], "K'": [21, 27], "R": [62, 63], "K": [[9, 34], [14, 37]], "V": [[6, 31], [8, 33]], "example": [1, 70]}, {"END": [136, 137], "A'": [131, 134], "V'": [89, 92], "Q": [126, 128], "K'": [93, 96], "R": [129, 130], "K": [[79, 103], [85, 105]], "V": [[76, 100], [78, 102]], "example": [71, 138]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The whiskey is Nikola Tesla's. The costume is Dr. Anthony Fauci's. The pizza is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not own whiskey? Answer: No\n Premise: < The cake is Meryl Streep's. The grapes is Jeff Bezos's. The fox is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own cake? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [18, 20], "Q": [58, 61], "K'": [21, 27], "R": [62, 63], "K": [[9, 34], [14, 37]], "V": [[6, 31], [8, 33]], "example": [1, 70]}, {"END": [135, 136], "A'": [131, 133], "V'": [89, 92], "Q": [126, 128], "K'": [93, 96], "R": [129, 130], "K": [[79, 103], [85, 105]], "V": [[76, 100], [78, 102]], "example": [71, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Johnnie Cochran's. The pistol is Meryl Streep's. The peach is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own pistol? Answer: Yes\n Premise: < The squirrel is Larry Page's. The kiwi is Rem Koolhaas's. The plum is Antoni Gaud\u00ed's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own squirrel? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [18, 20], "Q": [59, 61], "K'": [21, 27], "R": [62, 63], "K": [[9, 34], [14, 38]], "V": [[6, 31], [8, 33]], "example": [1, 70]}, {"END": [137, 138], "A'": [132, 135], "V'": [76, 79], "Q": [127, 129], "K'": [80, 82], "R": [130, 131], "K": [[89, 101], [94, 106]], "V": [[86, 98], [88, 100]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Johnnie Cochran's. The pistol is Meryl Streep's. The peach is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own pistol? Answer: Yes\n Premise: < The squirrel is Larry Page's. The kiwi is Rem Koolhaas's. The plum is Antoni Gaud\u00ed's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not own kiwi? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [18, 20], "Q": [59, 61], "K'": [21, 27], "R": [62, 63], "K": [[9, 34], [14, 38]], "V": [[6, 31], [8, 33]], "example": [1, 70]}, {"END": [136, 137], "A'": [132, 134], "V'": [76, 79], "Q": [127, 129], "K'": [80, 82], "R": [130, 131], "K": [[89, 101], [94, 106]], "V": [[86, 98], [88, 100]], "example": [71, 138]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Salvador Dal\u00ed has lion. Dr. Sylvia Earle has papaya. Taylor Swift has sweater. >. So who owns sweater? the musician\n < Harper Lee has cannon. Justin Bieber has mango. Clarence Darrow has pig. >. So who owns pig? the lawyer\n", "ranges": [{"END": [34, 35], "A": [35, 37], "V": [19, 21], "Q": [31, 33], "K": [22, 24], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[2, 9], [5, 15]], "example": [1, 37]}, {"END": [71, 72], "A": [72, 73], "V": [54, 58], "Q": [68, 70], "K": [59, 61], "R": null, "K'": [[43, 51], [45, 53]], "V'": [[39, 46], [42, 50]], "example": [38, 73]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Simone Biles has squirrel. Toni Morrison has wine. Sonia Sotomayor has rabbit. >. So who owns squirrel? the athlete\n < Johnny Depp has juice. Julia Roberts has cat. Frida Kahlo has bee. >. So who owns bee? the artist\n", "ranges": [{"END": [40, 41], "A": [41, 43], "V": [2, 6], "Q": [36, 39], "K": [7, 10], "R": null, "K'": [[17, 27], [18, 29]], "V'": [[11, 19], [16, 26]], "example": [1, 43]}, {"END": [75, 76], "A": [76, 77], "V": [57, 62], "Q": [72, 74], "K": [63, 65], "R": null, "K'": [[49, 55], [51, 56]], "V'": [[45, 52], [48, 54]], "example": [44, 77]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Claude Monet has jersey. George Orwell has papaya. Neil deGrasse Tyson has soda. >. So who owns papaya? the author\n < Lionel Messi has cocktail. J.K. Rowling has papaya. Jennifer Lawrence has mouse. >. So who owns mouse? the actor\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [10, 13], "Q": [34, 36], "K": [14, 16], "R": null, "K'": [[6, 25], [9, 27]], "V'": [[2, 17], [5, 24]], "example": [1, 39]}, {"END": [74, 75], "A": [75, 76], "V": [60, 63], "Q": [72, 73], "K": [64, 65], "R": null, "K'": [[46, 57], [49, 59]], "V'": [[41, 50], [45, 56]], "example": [40, 76]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Kanye West has lime. Roger Federer has costume. Zaha Hadid has grenade. >. So who owns lime? the musician\n < Eminem has fox. Meryl Streep has vodka. Pablo Picasso has mosquito. >. So who owns vodka? the actor\n", "ranges": [{"END": [35, 36], "A": [36, 38], "V": [2, 6], "Q": [32, 34], "K": [7, 9], "R": null, "K'": [[14, 22], [16, 25]], "V'": [[10, 17], [13, 21]], "example": [1, 38]}, {"END": [76, 77], "A": [77, 78], "V": [47, 53], "Q": [72, 75], "K": [54, 57], "R": null, "K'": [[44, 62], [46, 65]], "V'": [[40, 58], [43, 61]], "example": [39, 78]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Ieoh Ming Pei has blueberries. Thurgood Marshall has jeans. Leonardo da Vinci has beetle. >. So who owns jeans? the lawyer\n < Sonia Sotomayor has strawberries. Rihanna has cannon. Mies van der Rohe has gun. >. So who owns gun? the architect\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [14, 18], "Q": [38, 40], "K": [19, 21], "R": null, "K'": [[10, 28], [13, 31]], "V'": [[2, 22], [9, 27]], "example": [1, 43]}, {"END": [82, 83], "A": [83, 84], "V": [65, 71], "Q": [80, 81], "K": [72, 73], "R": null, "K'": [[53, 62], [57, 64]], "V'": [[45, 58], [52, 61]], "example": [44, 84]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Ruth Bader Ginsburg has elephant. Beyonc\u00e9 has vodka. Jennifer Lawrence has pistol. >. So who owns pistol? the actor\n < Rosie Franklin has deer. Michelangelo has bus. Rihanna has banana. >. So who owns deer? the scientist\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [21, 24], "Q": [34, 36], "K": [25, 27], "R": null, "K'": [[9, 17], [12, 20]], "V'": [[2, 13], [8, 16]], "example": [1, 39]}, {"END": [70, 71], "A": [71, 73], "V": [41, 44], "Q": [67, 69], "K": [45, 47], "R": null, "K'": [[52, 58], [53, 60]], "V'": [[48, 54], [51, 57]], "example": [40, 73]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Barack Obama has blackberries. Richard Dawkins has plum. Charlize Theron has spaghetti. >. So who owns spaghetti? the actor\n < Dr. Sylvia Earle has beer. Lady Gaga has cow. Louis Sullivan has lemon. >. So who owns lemon? the architect\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [18, 23], "Q": [34, 37], "K": [24, 27], "R": null, "K'": [[7, 15], [10, 17]], "V'": [[2, 11], [6, 14]], "example": [1, 40]}, {"END": [75, 76], "A": [76, 77], "V": [58, 62], "Q": [72, 74], "K": [63, 65], "R": null, "K'": [[49, 56], [51, 57]], "V'": [[42, 52], [48, 55]], "example": [41, 77]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Warren Buffett has monkey. Salvador Dal\u00ed has steak. Brad Pitt has uniform. >. So who owns monkey? the entrepreneur\n < Mark Twain has car. Bill Gates has rabbit. Ada Lovelace has cherries. >. So who owns rabbit? the entrepreneur\n", "ranges": [{"END": [30, 31], "A": [31, 34], "V": [2, 5], "Q": [27, 29], "K": [6, 8], "R": null, "K'": [[13, 19], [15, 20]], "V'": [[9, 16], [12, 18]], "example": [1, 34]}, {"END": [66, 67], "A": [67, 70], "V": [42, 45], "Q": [63, 65], "K": [46, 48], "R": null, "K'": [[40, 54], [41, 56]], "V'": [[36, 49], [39, 53]], "example": [35, 70]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Salvador Dal\u00ed has lion. Dr. Sylvia Earle has papaya. Taylor Swift has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is the artist? Answer: No\n Premise: < Harper Lee has pants. Justin Bieber has cannon. Clarence Darrow has peach. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is the lawyer? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [22, 24], "Q": [51, 53], "K": [25, 27], "R": null, "K'": [[9, 19], [11, 21]], "V'": [[5, 12], [8, 18]], "example": [1, 60]}, {"END": [118, 119], "A": [114, 116], "V": [80, 84], "Q": [111, 113], "K": [85, 87], "R": null, "K'": [[69, 77], [71, 79]], "V'": [[65, 72], [68, 76]], "example": [61, 120]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Salvador Dal\u00ed has lion. Dr. Sylvia Earle has papaya. Taylor Swift has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is the artist? Answer: No\n Premise: < Harper Lee has pants. Justin Bieber has cannon. Clarence Darrow has peach. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is the musician? Answer: No\n", "ranges": [{"END": [58, 59], "A": [54, 56], "V": [22, 24], "Q": [51, 53], "K": [25, 27], "R": null, "K'": [[9, 19], [11, 21]], "V'": [[5, 12], [8, 18]], "example": [1, 60]}, {"END": [119, 120], "A": [114, 117], "V": [80, 84], "Q": [111, 113], "K": [85, 87], "R": null, "K'": [[69, 77], [71, 79]], "V'": [[65, 72], [68, 76]], "example": [61, 121]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Natalie Portman has pig. Dr. Gabor Mat\u00e9 has rabbit. Rihanna has vodka. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns pig is the musician? Answer: No\n Premise: < Zaha Hadid has motorcycle. Cristiano Ronaldo has goat. Eminem has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns motorcycle is the architect? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [57, 60], "V": [5, 9], "Q": [54, 56], "K": [10, 12], "R": null, "K'": [[20, 27], [22, 30]], "V'": [[13, 23], [19, 26]], "example": [1, 64]}, {"END": [122, 123], "A": [118, 120], "V": [69, 73], "Q": [115, 117], "K": [74, 76], "R": null, "K'": [[83, 90], [85, 91]], "V'": [[77, 86], [82, 89]], "example": [65, 124]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Natalie Portman has pig. Dr. Gabor Mat\u00e9 has rabbit. Rihanna has vodka. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns pig is the musician? Answer: No\n Premise: < Zaha Hadid has motorcycle. Cristiano Ronaldo has goat. Eminem has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns motorcycle is the athlete? Answer: No\n", "ranges": [{"END": [62, 63], "A": [57, 60], "V": [5, 9], "Q": [54, 56], "K": [10, 12], "R": null, "K'": [[20, 27], [22, 30]], "V'": [[13, 23], [19, 26]], "example": [1, 64]}, {"END": [123, 124], "A": [118, 121], "V": [69, 73], "Q": [115, 117], "K": [74, 76], "R": null, "K'": [[83, 90], [85, 91]], "V'": [[77, 86], [82, 89]], "example": [65, 125]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has jacket. Rem Koolhaas has sweater. Lady Gaga has piano. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns piano is the author? Answer: No\n Premise: < Leonardo da Vinci has goat. Carl Sagan has lime. Elon Musk has durian. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is the scientist? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [27, 30], "Q": [56, 57], "K": [31, 32], "R": null, "K'": [[15, 24], [17, 26]], "V'": [[5, 18], [14, 23]], "example": [1, 64]}, {"END": [124, 125], "A": [119, 122], "V": [78, 81], "Q": [116, 118], "K": [82, 84], "R": null, "K'": [[75, 90], [77, 92]], "V'": [[69, 85], [74, 89]], "example": [65, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has jacket. Rem Koolhaas has sweater. Lady Gaga has piano. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns piano is the author? Answer: No\n Premise: < Leonardo da Vinci has goat. Carl Sagan has lime. Elon Musk has durian. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is the artist? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [27, 30], "Q": [56, 57], "K": [31, 32], "R": null, "K'": [[15, 24], [17, 26]], "V'": [[5, 18], [14, 23]], "example": [1, 64]}, {"END": [123, 124], "A": [119, 121], "V": [78, 81], "Q": [116, 118], "K": [82, 84], "R": null, "K'": [[75, 90], [77, 92]], "V'": [[69, 85], [74, 89]], "example": [65, 125]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Eminem has plum. Meryl Streep has burger. Pablo Picasso has fox. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the actor? Answer: Yes\n Premise: < Ieoh Ming Pei has blueberries. Thurgood Marshall has juice. Leonardo da Vinci has bee. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is the lawyer? Answer: Yes\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [12, 18], "Q": [52, 54], "K": [19, 21], "R": null, "K'": [[9, 26], [11, 28]], "V'": [[5, 22], [8, 25]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [78, 82], "Q": [118, 120], "K": [83, 85], "R": null, "K'": [[74, 92], [77, 94]], "V'": [[66, 86], [73, 91]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Eminem has plum. Meryl Streep has burger. Pablo Picasso has fox. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the actor? Answer: Yes\n Premise: < Ieoh Ming Pei has blueberries. Thurgood Marshall has juice. Leonardo da Vinci has bee. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is the artist? Answer: No\n", "ranges": [{"END": [59, 60], "A": [55, 57], "V": [12, 18], "Q": [52, 54], "K": [19, 21], "R": null, "K'": [[9, 26], [11, 28]], "V'": [[5, 22], [8, 25]], "example": [1, 61]}, {"END": [125, 126], "A": [121, 123], "V": [78, 82], "Q": [118, 120], "K": [83, 85], "R": null, "K'": [[74, 92], [77, 94]], "V'": [[66, 86], [73, 91]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Temple Grandin has apricot. Agatha Christie has banana. Dr. Sylvia Earle has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns banana is the doctor? Answer: No\n Premise: < Roger Federer has vodka. Johnny Depp has mango. Dr. Gabor Mat\u00e9 has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns vodka is the athlete? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [15, 20], "Q": [57, 59], "K": [21, 23], "R": null, "K'": [[11, 31], [14, 33]], "V'": [[5, 24], [10, 30]], "example": [1, 66]}, {"END": [127, 128], "A": [122, 125], "V": [71, 74], "Q": [118, 121], "K": [75, 78], "R": null, "K'": [[83, 93], [85, 94]], "V'": [[79, 86], [82, 92]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Temple Grandin has apricot. Agatha Christie has banana. Dr. Sylvia Earle has sweater. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns banana is the doctor? Answer: No\n Premise: < Roger Federer has vodka. Johnny Depp has mango. Dr. Gabor Mat\u00e9 has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns vodka is the actor? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [15, 20], "Q": [57, 59], "K": [21, 23], "R": null, "K'": [[11, 31], [14, 33]], "V'": [[5, 24], [10, 30]], "example": [1, 66]}, {"END": [126, 127], "A": [122, 124], "V": [71, 74], "Q": [118, 121], "K": [75, 78], "R": null, "K'": [[83, 93], [85, 94]], "V'": [[79, 86], [82, 92]], "example": [67, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has burger. Sonia Sotomayor has car. Simone Biles has apricot. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the lawyer? Answer: Yes\n Premise: < LeBron James has T-shirt. Agatha Christie has duck. Charlize Theron has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns T-shirt is the athlete? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 19], "Q": [54, 55], "K": [20, 21], "R": null, "K'": [[9, 27], [11, 30]], "V'": [[5, 22], [8, 26]], "example": [1, 62]}, {"END": [128, 129], "A": [123, 126], "V": [67, 71], "Q": [118, 122], "K": [72, 76], "R": null, "K'": [[83, 92], [85, 94]], "V'": [[77, 86], [82, 91]], "example": [63, 130]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has burger. Sonia Sotomayor has car. Simone Biles has apricot. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the lawyer? Answer: Yes\n Premise: < LeBron James has T-shirt. Agatha Christie has duck. Charlize Theron has tiger. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns T-shirt is the author? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 19], "Q": [54, 55], "K": [20, 21], "R": null, "K'": [[9, 27], [11, 30]], "V'": [[5, 22], [8, 26]], "example": [1, 62]}, {"END": [127, 128], "A": [123, 125], "V": [67, 71], "Q": [118, 122], "K": [72, 76], "R": null, "K'": [[83, 92], [85, 94]], "V'": [[77, 86], [82, 91]], "example": [63, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Toni Morrison has meat. Steve Jobs has blackberries. Agatha Christie has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is the author? Answer: No\n Premise: < Toni Morrison has blackberries. Sonia Sotomayor has burger. Roger Federer has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the lawyer? Answer: Yes\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [13, 16], "Q": [54, 57], "K": [17, 20], "R": null, "K'": [[11, 27], [12, 30]], "V'": [[5, 21], [10, 26]], "example": [1, 64]}, {"END": [127, 128], "A": [123, 125], "V": [79, 86], "Q": [120, 122], "K": [87, 89], "R": null, "K'": [[75, 94], [78, 96]], "V'": [[69, 90], [74, 93]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Toni Morrison has meat. Steve Jobs has blackberries. Agatha Christie has grapes. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is the author? Answer: No\n Premise: < Toni Morrison has blackberries. Sonia Sotomayor has burger. Roger Federer has rabbit. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the author? Answer: No\n", "ranges": [{"END": [62, 63], "A": [58, 60], "V": [13, 16], "Q": [54, 57], "K": [17, 20], "R": null, "K'": [[11, 27], [12, 30]], "V'": [[5, 21], [10, 26]], "example": [1, 64]}, {"END": [127, 128], "A": [123, 125], "V": [79, 86], "Q": [120, 122], "K": [87, 89], "R": null, "K'": [[75, 94], [78, 96]], "V'": [[69, 90], [74, 93]], "example": [65, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Stephen King has mango. Dr. Temple Grandin has car. Lady Gaga has pig. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the doctor? Answer: Yes\n Premise: < Lady Gaga has pineapple. Natalie Portman has cake. Neil deGrasse Tyson has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns strawberries is the scientist? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [11, 16], "Q": [49, 50], "K": [17, 18], "R": null, "K'": [[8, 23], [10, 25]], "V'": [[5, 19], [7, 22]], "example": [1, 57]}, {"END": [124, 125], "A": [119, 122], "V": [78, 85], "Q": [114, 118], "K": [86, 90], "R": null, "K'": [[66, 75], [69, 77]], "V'": [[62, 70], [65, 74]], "example": [58, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Stephen King has mango. Dr. Temple Grandin has car. Lady Gaga has pig. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the doctor? Answer: Yes\n Premise: < Lady Gaga has pineapple. Natalie Portman has cake. Neil deGrasse Tyson has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns strawberries is the actor? Answer: No\n", "ranges": [{"END": [55, 56], "A": [51, 53], "V": [11, 16], "Q": [49, 50], "K": [17, 18], "R": null, "K'": [[8, 23], [10, 25]], "V'": [[5, 19], [7, 22]], "example": [1, 57]}, {"END": [123, 124], "A": [119, 121], "V": [78, 85], "Q": [114, 118], "K": [86, 90], "R": null, "K'": [[66, 75], [69, 77]], "V'": [[62, 70], [65, 74]], "example": [58, 125]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lion is Salvador Dal\u00ed's. The papaya is Dr. Sylvia Earle's. The sweater is Taylor Swift's. >. So who owns sweater? the musician\n < The cannon is Harper Lee's. The mango is Justin Bieber's. The pig is Clarence Darrow's. >. So who owns pig? the lawyer\n", "ranges": [{"END": [43, 44], "A": [44, 46], "V": [29, 31], "Q": [40, 42], "K": [26, 28], "R": null, "K'": [[3, 13], [5, 15]], "V'": [[6, 16], [9, 22]], "example": [1, 46]}, {"END": [89, 90], "A": [90, 91], "V": [73, 77], "Q": [86, 88], "K": [70, 72], "R": null, "K'": [[49, 59], [51, 61]], "V'": [[52, 62], [55, 66]], "example": [47, 91]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The squirrel is Simone Biles's. The wine is Toni Morrison's. The rabbit is Sonia Sotomayor's. >. So who owns squirrel? the athlete\n < The juice is Johnny Depp's. The cat is Julia Roberts's. The bee is Frida Kahlo's. >. So who owns bee? the artist\n", "ranges": [{"END": [49, 50], "A": [50, 52], "V": [7, 11], "Q": [45, 48], "K": [3, 6], "R": null, "K'": [[15, 26], [16, 28]], "V'": [[17, 29], [22, 36]], "example": [1, 52]}, {"END": [93, 94], "A": [94, 95], "V": [76, 81], "Q": [90, 92], "K": [73, 75], "R": null, "K'": [[55, 65], [57, 66]], "V'": [[58, 67], [61, 69]], "example": [53, 95]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jersey is Claude Monet's. The papaya is George Orwell's. The soda is Neil deGrasse Tyson's. >. So who owns papaya? the author\n < The cocktail is Lionel Messi's. The papaya is J.K. Rowling's. The mouse is Jennifer Lawrence's. >. So who owns mouse? the actor\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [17, 20], "Q": [43, 45], "K": [14, 16], "R": null, "K'": [[3, 24], [6, 26]], "V'": [[7, 27], [10, 34]], "example": [1, 48]}, {"END": [92, 93], "A": [93, 94], "V": [78, 81], "Q": [90, 91], "K": [76, 77], "R": null, "K'": [[51, 63], [54, 65]], "V'": [[55, 66], [59, 72]], "example": [49, 94]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lime is Kanye West's. The costume is Roger Federer's. The grenade is Zaha Hadid's. >. So who owns lime? the musician\n < The fox is Eminem's. The vodka is Meryl Streep's. The mosquito is Pablo Picasso's. >. So who owns vodka? the actor\n", "ranges": [{"END": [44, 45], "A": [45, 47], "V": [6, 10], "Q": [41, 43], "K": [3, 5], "R": null, "K'": [[14, 24], [16, 27]], "V'": [[17, 28], [20, 32]], "example": [1, 47]}, {"END": [94, 95], "A": [95, 96], "V": [64, 70], "Q": [90, 93], "K": [60, 63], "R": null, "K'": [[50, 74], [52, 77]], "V'": [[53, 78], [56, 81]], "example": [48, 96]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blueberries is Ieoh Ming Pei's. The jeans is Thurgood Marshall's. The beetle is Leonardo da Vinci's. >. So who owns jeans? the lawyer\n < The strawberries is Sonia Sotomayor's. The cannon is Rihanna's. The gun is Mies van der Rohe's. >. So who owns gun? the architect\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [21, 25], "Q": [47, 49], "K": [18, 20], "R": null, "K'": [[3, 29], [6, 32]], "V'": [[7, 33], [14, 38]], "example": [1, 52]}, {"END": [100, 101], "A": [101, 102], "V": [83, 89], "Q": [98, 99], "K": [81, 82], "R": null, "K'": [[55, 71], [59, 73]], "V'": [[60, 74], [67, 77]], "example": [53, 102]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The elephant is Ruth Bader Ginsburg's. The vodka is Beyonc\u00e9's. The pistol is Jennifer Lawrence's. >. So who owns pistol? the actor\n < The deer is Rosie Franklin's. The bus is Michelangelo's. The banana is Rihanna's. >. So who owns deer? the scientist\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [31, 34], "Q": [43, 45], "K": [28, 30], "R": null, "K'": [[3, 17], [6, 20]], "V'": [[7, 21], [13, 24]], "example": [1, 48]}, {"END": [88, 89], "A": [89, 91], "V": [54, 57], "Q": [85, 87], "K": [51, 53], "R": null, "K'": [[61, 70], [62, 72]], "V'": [[63, 73], [66, 76]], "example": [49, 91]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Barack Obama's. The plum is Richard Dawkins's. The spaghetti is Charlize Theron's. >. So who owns spaghetti? the actor\n < The beer is Dr. Sylvia Earle's. The cow is Lady Gaga's. The lemon is Louis Sullivan's. >. So who owns lemon? the architect\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [29, 34], "Q": [43, 46], "K": [25, 28], "R": null, "K'": [[3, 15], [6, 17]], "V'": [[7, 18], [11, 21]], "example": [1, 49]}, {"END": [93, 94], "A": [94, 95], "V": [77, 81], "Q": [90, 92], "K": [74, 76], "R": null, "K'": [[52, 65], [54, 66]], "V'": [[55, 67], [61, 70]], "example": [50, 95]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The monkey is Warren Buffett's. The steak is Salvador Dal\u00ed's. The uniform is Brad Pitt's. >. So who owns monkey? the entrepreneur\n < The car is Mark Twain's. The rabbit is Bill Gates's. The cherries is Ada Lovelace's. >. So who owns rabbit? the entrepreneur\n", "ranges": [{"END": [39, 40], "A": [40, 43], "V": [6, 9], "Q": [36, 38], "K": [3, 5], "R": null, "K'": [[13, 23], [15, 24]], "V'": [[16, 25], [19, 27]], "example": [1, 43]}, {"END": [84, 85], "A": [85, 88], "V": [58, 61], "Q": [81, 83], "K": [55, 57], "R": null, "K'": [[46, 65], [47, 67]], "V'": [[48, 68], [51, 72]], "example": [44, 88]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Salvador Dal\u00ed's. The papaya is Dr. Sylvia Earle's. The sweater is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is the artist? Answer: No\n Premise: < The pants is Harper Lee's. The cannon is Justin Bieber's. The peach is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is the lawyer? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [32, 34], "Q": [60, 62], "K": [29, 31], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 25]], "example": [1, 69]}, {"END": [136, 137], "A": [132, 134], "V": [99, 103], "Q": [129, 131], "K": [96, 98], "R": null, "K'": [[75, 85], [77, 87]], "V'": [[78, 88], [81, 92]], "example": [70, 138]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Salvador Dal\u00ed's. The papaya is Dr. Sylvia Earle's. The sweater is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is the artist? Answer: No\n Premise: < The pants is Harper Lee's. The cannon is Justin Bieber's. The peach is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is the musician? Answer: No\n", "ranges": [{"END": [67, 68], "A": [63, 65], "V": [32, 34], "Q": [60, 62], "K": [29, 31], "R": null, "K'": [[6, 16], [8, 18]], "V'": [[9, 19], [12, 25]], "example": [1, 69]}, {"END": [137, 138], "A": [132, 135], "V": [99, 103], "Q": [129, 131], "K": [96, 98], "R": null, "K'": [[75, 85], [77, 87]], "V'": [[78, 88], [81, 92]], "example": [70, 139]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Natalie Portman's. The rabbit is Dr. Gabor Mat\u00e9's. The vodka is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns pig is the musician? Answer: No\n Premise: < The motorcycle is Zaha Hadid's. The goat is Cristiano Ronaldo's. The guitar is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns motorcycle is the architect? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [66, 69], "V": [9, 13], "Q": [63, 65], "K": [6, 8], "R": null, "K'": [[17, 30], [19, 33]], "V'": [[20, 34], [26, 37]], "example": [1, 73]}, {"END": [140, 141], "A": [136, 138], "V": [82, 86], "Q": [133, 135], "K": [79, 81], "R": null, "K'": [[90, 102], [92, 103]], "V'": [[93, 104], [98, 107]], "example": [74, 142]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Natalie Portman's. The rabbit is Dr. Gabor Mat\u00e9's. The vodka is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns pig is the musician? Answer: No\n Premise: < The motorcycle is Zaha Hadid's. The goat is Cristiano Ronaldo's. The guitar is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns motorcycle is the athlete? Answer: No\n", "ranges": [{"END": [71, 72], "A": [66, 69], "V": [9, 13], "Q": [63, 65], "K": [6, 8], "R": null, "K'": [[17, 30], [19, 33]], "V'": [[20, 34], [26, 37]], "example": [1, 73]}, {"END": [141, 142], "A": [136, 139], "V": [82, 86], "Q": [133, 135], "K": [79, 81], "R": null, "K'": [[90, 102], [92, 103]], "V'": [[93, 104], [98, 107]], "example": [74, 143]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is J.R.R. Tolkien's. The sweater is Rem Koolhaas's. The piano is Lady Gaga's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns piano is the author? Answer: No\n Premise: < The goat is Leonardo da Vinci's. The lime is Carl Sagan's. The durian is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is the scientist? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [36, 39], "Q": [65, 66], "K": [34, 35], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [18, 30]], "example": [1, 73]}, {"END": [142, 143], "A": [137, 140], "V": [94, 97], "Q": [134, 136], "K": [91, 93], "R": null, "K'": [[79, 101], [81, 103]], "V'": [[82, 104], [87, 108]], "example": [74, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jacket is J.R.R. Tolkien's. The sweater is Rem Koolhaas's. The piano is Lady Gaga's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns piano is the author? Answer: No\n Premise: < The goat is Leonardo da Vinci's. The lime is Carl Sagan's. The durian is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is the artist? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [36, 39], "Q": [65, 66], "K": [34, 35], "R": null, "K'": [[6, 22], [8, 24]], "V'": [[9, 25], [18, 30]], "example": [1, 73]}, {"END": [141, 142], "A": [137, 139], "V": [94, 97], "Q": [134, 136], "K": [91, 93], "R": null, "K'": [[79, 101], [81, 103]], "V'": [[82, 104], [87, 108]], "example": [74, 143]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Eminem's. The burger is Meryl Streep's. The fox is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the actor? Answer: Yes\n Premise: < The blueberries is Ieoh Ming Pei's. The juice is Thurgood Marshall's. The bee is Leonardo da Vinci's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is the lawyer? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [19, 25], "Q": [61, 63], "K": [16, 18], "R": null, "K'": [[6, 29], [8, 31]], "V'": [[9, 32], [12, 35]], "example": [1, 70]}, {"END": [143, 144], "A": [139, 141], "V": [94, 98], "Q": [136, 138], "K": [91, 93], "R": null, "K'": [[76, 102], [79, 104]], "V'": [[80, 105], [87, 110]], "example": [71, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Eminem's. The burger is Meryl Streep's. The fox is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the actor? Answer: Yes\n Premise: < The blueberries is Ieoh Ming Pei's. The juice is Thurgood Marshall's. The bee is Leonardo da Vinci's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is the artist? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [19, 25], "Q": [61, 63], "K": [16, 18], "R": null, "K'": [[6, 29], [8, 31]], "V'": [[9, 32], [12, 35]], "example": [1, 70]}, {"END": [143, 144], "A": [139, 141], "V": [94, 98], "Q": [136, 138], "K": [91, 93], "R": null, "K'": [[76, 102], [79, 104]], "V'": [[80, 105], [87, 110]], "example": [71, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Dr. Temple Grandin's. The banana is Agatha Christie's. The sweater is Dr. Sylvia Earle's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns banana is the doctor? Answer: No\n Premise: < The vodka is Roger Federer's. The mango is Johnny Depp's. The sheep is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns vodka is the athlete? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [69, 71], "V": [22, 27], "Q": [66, 68], "K": [19, 21], "R": null, "K'": [[6, 31], [9, 33]], "V'": [[10, 34], [15, 40]], "example": [1, 75]}, {"END": [145, 146], "A": [140, 143], "V": [85, 88], "Q": [136, 139], "K": [81, 84], "R": null, "K'": [[92, 102], [94, 103]], "V'": [[95, 104], [98, 110]], "example": [76, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apricot is Dr. Temple Grandin's. The banana is Agatha Christie's. The sweater is Dr. Sylvia Earle's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns banana is the doctor? Answer: No\n Premise: < The vodka is Roger Federer's. The mango is Johnny Depp's. The sheep is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns vodka is the actor? Answer: No\n", "ranges": [{"END": [73, 74], "A": [69, 71], "V": [22, 27], "Q": [66, 68], "K": [19, 21], "R": null, "K'": [[6, 31], [9, 33]], "V'": [[10, 34], [15, 40]], "example": [1, 75]}, {"END": [144, 145], "A": [140, 142], "V": [85, 88], "Q": [136, 139], "K": [81, 84], "R": null, "K'": [[92, 102], [94, 103]], "V'": [[95, 104], [98, 110]], "example": [76, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Marie Curie's. The car is Sonia Sotomayor's. The apricot is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the lawyer? Answer: Yes\n Premise: < T-shirt is LeBron James's. The duck is Agatha Christie's. The tiger is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns T-shirt is the athlete? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [18, 25], "Q": [63, 64], "K": [16, 17], "R": null, "K'": [[6, 29], [8, 32]], "V'": [[9, 33], [12, 37]], "example": [1, 71]}, {"END": [145, 146], "A": [140, 143], "V": [81, 85], "Q": [135, 139], "K": [76, 80], "R": null, "K'": [[89, 101], [91, 103]], "V'": [[92, 104], [97, 109]], "example": [72, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Marie Curie's. The car is Sonia Sotomayor's. The apricot is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the lawyer? Answer: Yes\n Premise: < T-shirt is LeBron James's. The duck is Agatha Christie's. The tiger is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns T-shirt is the author? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [18, 25], "Q": [63, 64], "K": [16, 17], "R": null, "K'": [[6, 29], [8, 32]], "V'": [[9, 33], [12, 37]], "example": [1, 71]}, {"END": [144, 145], "A": [140, 142], "V": [81, 85], "Q": [135, 139], "K": [76, 80], "R": null, "K'": [[89, 101], [91, 103]], "V'": [[92, 104], [97, 109]], "example": [72, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The meat is Toni Morrison's. The blackberries is Steve Jobs's. The grapes is Agatha Christie's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is the author? Answer: No\n Premise: < The blackberries is Toni Morrison's. The burger is Sonia Sotomayor's. The rabbit is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the lawyer? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [21, 24], "Q": [63, 66], "K": [17, 20], "R": null, "K'": [[6, 28], [7, 31]], "V'": [[8, 32], [13, 37]], "example": [1, 73]}, {"END": [145, 146], "A": [141, 143], "V": [95, 102], "Q": [138, 140], "K": [92, 94], "R": null, "K'": [[79, 106], [82, 108]], "V'": [[83, 109], [88, 112]], "example": [74, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The meat is Toni Morrison's. The blackberries is Steve Jobs's. The grapes is Agatha Christie's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is the author? Answer: No\n Premise: < The blackberries is Toni Morrison's. The burger is Sonia Sotomayor's. The rabbit is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns burger is the author? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [21, 24], "Q": [63, 66], "K": [17, 20], "R": null, "K'": [[6, 28], [7, 31]], "V'": [[8, 32], [13, 37]], "example": [1, 73]}, {"END": [145, 146], "A": [141, 143], "V": [95, 102], "Q": [138, 140], "K": [92, 94], "R": null, "K'": [[79, 106], [82, 108]], "V'": [[83, 109], [88, 112]], "example": [74, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The mango is Stephen King's. The car is Dr. Temple Grandin's. The pig is Lady Gaga's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the doctor? Answer: Yes\n Premise: < The pineapple is Lady Gaga's. The cake is Natalie Portman's. The strawberries is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns strawberries is the scientist? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [17, 22], "Q": [58, 59], "K": [15, 16], "R": null, "K'": [[6, 26], [8, 28]], "V'": [[9, 29], [11, 32]], "example": [1, 66]}, {"END": [142, 143], "A": [137, 140], "V": [99, 106], "Q": [132, 136], "K": [94, 98], "R": null, "K'": [[72, 83], [75, 85]], "V'": [[76, 86], [79, 90]], "example": [67, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The mango is Stephen King's. The car is Dr. Temple Grandin's. The pig is Lady Gaga's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns car is the doctor? Answer: Yes\n Premise: < The pineapple is Lady Gaga's. The cake is Natalie Portman's. The strawberries is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns strawberries is the actor? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [17, 22], "Q": [58, 59], "K": [15, 16], "R": null, "K'": [[6, 26], [8, 28]], "V'": [[9, 29], [11, 32]], "example": [1, 66]}, {"END": [141, 142], "A": [137, 139], "V": [99, 106], "Q": [132, 136], "K": [94, 98], "R": null, "K'": [[72, 83], [75, 85]], "V'": [[76, 86], [79, 90]], "example": [67, 143]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Roger Federer has sweater. Usain Bolt has sweater. Jane Goodall has elephant. >. The person who owns sweater is not the scientist\n < Pablo Picasso has juice. Rihanna has pig. Dr. Sanjay Gupta has pig. >. The person who owns pig is not the artist\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [17, 20], "Q": [32, 34], "K'": [21, 24], "R": [35, 36], "K": [[6, 14], [8, 16]], "V": [[2, 9], [5, 13]], "example": [1, 39]}, {"END": [77, 78], "A'": [78, 79], "V'": [41, 44], "Q": [73, 75], "K'": [45, 47], "R": [76, 77], "K": [[52, 63], [54, 65]], "V": [[48, 55], [51, 62]], "example": [40, 79]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Usain Bolt has piano. George Orwell has piano. Adele has pizza. >. The person who owns piano is not the musician\n < Dr. Gabor Mat\u00e9 has football. Simone Biles has wine. Mies van der Rohe has wine. >. The person who owns wine is not the doctor\n", "ranges": [{"END": [32, 33], "A'": [33, 35], "V'": [15, 18], "Q": [29, 30], "K'": [19, 21], "R": [31, 32], "K": [[7, 13], [8, 14]], "V": [[2, 9], [6, 12]], "example": [1, 35]}, {"END": [72, 73], "A'": [73, 74], "V'": [37, 43], "Q": [69, 70], "K'": [44, 45], "R": [71, 72], "K": [[51, 60], [52, 61]], "V": [[46, 53], [50, 59]], "example": [36, 74]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Neil deGrasse Tyson has goat. Eminem has violin. LeBron James has violin. >. The person who owns violin is not the scientist\n < Claude Monet has sweater. George Orwell has vodka. Neil deGrasse Tyson has sweater. >. The person who owns sweater is not the author\n", "ranges": [{"END": [39, 40], "A'": [40, 42], "V'": [2, 9], "Q": [35, 37], "K'": [10, 12], "R": [38, 39], "K": [[17, 25], [19, 27]], "V": [[13, 20], [16, 24]], "example": [1, 42]}, {"END": [81, 82], "A'": [82, 83], "V'": [51, 54], "Q": [77, 79], "K'": [55, 58], "R": [80, 81], "K": [[48, 67], [50, 69]], "V": [[44, 59], [47, 66]], "example": [43, 83]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Zaha Hadid has juice. Andy Warhol has juice. Johnnie Cochran has durian. >. The person who owns juice is not the lawyer\n < Claude Monet has durian. Lady Gaga has burger. Johnnie Cochran has burger. >. The person who owns burger is not the artist\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [17, 22], "Q": [33, 35], "K'": [23, 25], "R": [36, 37], "K": [[7, 14], [9, 16]], "V": [[2, 10], [6, 13]], "example": [1, 39]}, {"END": [75, 76], "A'": [76, 77], "V'": [41, 44], "Q": [71, 73], "K'": [45, 47], "R": [74, 75], "K": [[52, 61], [54, 63]], "V": [[48, 55], [51, 60]], "example": [40, 77]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Oprah Winfrey has fox. Thurgood Marshall has fox. Maya Lin has bread. >. The person who owns fox is not the architect\n < Cristiano Ronaldo has bus. Albert Einstein has cannon. Pablo Picasso has cannon. >. The person who owns cannon is not the athlete\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [19, 22], "Q": [32, 34], "K'": [23, 24], "R": [35, 36], "K": [[8, 16], [10, 18]], "V": [[2, 11], [7, 15]], "example": [1, 38]}, {"END": [73, 74], "A'": [74, 76], "V'": [40, 45], "Q": [69, 71], "K'": [46, 47], "R": [72, 73], "K": [[52, 59], [54, 61]], "V": [[48, 55], [51, 58]], "example": [39, 76]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Tom Brady has blueberries. Leonardo da Vinci has beetle. Rem Koolhaas has beetle. >. The person who owns beetle is not the athlete\n < Usain Bolt has mouse. Oprah Winfrey has mouse. Ruth Bader Ginsburg has trousers. >. The person who owns mouse is not the lawyer\n", "ranges": [{"END": [42, 43], "A'": [43, 45], "V'": [2, 5], "Q": [37, 40], "K'": [6, 9], "R": [41, 42], "K": [[16, 26], [19, 29]], "V": [[10, 20], [15, 25]], "example": [1, 45]}, {"END": [83, 84], "A'": [84, 85], "V'": [62, 68], "Q": [80, 81], "K'": [69, 72], "R": [82, 83], "K": [[52, 60], [53, 61]], "V": [[47, 54], [51, 59]], "example": [46, 85]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Lionel Messi has beetle. Antoni Gaud\u00ed has beetle. Dr. Anthony Fauci has duck. >. The person who owns beetle is not the doctor\n < Tom Brady has cat. Georgia O'Keeffe has taxi. Ed Sheeran has taxi. >. The person who owns taxi is not the athlete\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [21, 27], "Q": [38, 41], "K'": [28, 30], "R": [42, 43], "K": [[7, 17], [10, 20]], "V": [[2, 11], [6, 16]], "example": [1, 45]}, {"END": [82, 83], "A'": [83, 85], "V'": [47, 50], "Q": [78, 80], "K'": [51, 52], "R": [81, 82], "K": [[60, 68], [62, 70]], "V": [[53, 63], [59, 67]], "example": [46, 85]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Dr. Neil deGrasse Tyson has baseball. Warren Buffett has baseball. Harper Lee has cherries. >. The person who owns baseball is not the author\n < Justin Bieber has beer. Leonardo DiCaprio has beer. Richard Dawkins has dog. >. The person who owns beer is not the scientist\n", "ranges": [{"END": [37, 38], "A'": [38, 39], "V'": [20, 23], "Q": [34, 35], "K'": [24, 26], "R": [36, 37], "K": [[12, 18], [13, 19]], "V": [[2, 14], [11, 17]], "example": [1, 39]}, {"END": [75, 76], "A'": [76, 78], "V'": [58, 61], "Q": [71, 73], "K'": [62, 63], "R": [74, 75], "K": [[46, 55], [48, 57]], "V": [[41, 49], [45, 54]], "example": [40, 78]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Roger Federer has sweater. Usain Bolt has sweater. Jane Goodall has elephant. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is not the scientist? Answer: Yes\n Premise: < Johnny Depp has cocktail. Frida Kahlo has peach. Ada Lovelace has peach. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is not the actor? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [20, 23], "Q": [51, 53], "K'": [24, 27], "R": [54, 55], "K": [[9, 17], [11, 19]], "V": [[5, 12], [8, 16]], "example": [1, 62]}, {"END": [123, 124], "A'": [119, 121], "V'": [67, 70], "Q": [115, 117], "K'": [71, 74], "R": [118, 119], "K": [[81, 89], [83, 91]], "V": [[75, 84], [80, 88]], "example": [63, 125]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Roger Federer has sweater. Usain Bolt has sweater. Jane Goodall has elephant. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is not the scientist? Answer: Yes\n Premise: < Johnny Depp has cocktail. Frida Kahlo has peach. Ada Lovelace has peach. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is not the artist? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [20, 23], "Q": [51, 53], "K'": [24, 27], "R": [54, 55], "K": [[9, 17], [11, 19]], "V": [[5, 12], [8, 16]], "example": [1, 62]}, {"END": [123, 124], "A'": [119, 121], "V'": [67, 70], "Q": [115, 117], "K'": [71, 74], "R": [118, 119], "K": [[81, 89], [83, 91]], "V": [[75, 84], [80, 88]], "example": [63, 125]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ernest Hemingway has squirrel. Drake has squirrel. Michael Phelps has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns squirrel is not the athlete? Answer: Yes\n Premise: < Dr. Jane Goodall has juice. Claude Monet has cat. Kanye West has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is not the artist? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [21, 25], "Q": [52, 55], "K'": [26, 28], "R": [56, 57], "K": [[10, 17], [13, 20]], "V": [[5, 14], [9, 16]], "example": [1, 64]}, {"END": [123, 124], "A'": [119, 121], "V'": [78, 81], "Q": [115, 117], "K'": [82, 83], "R": [118, 119], "K": [[75, 89], [77, 91]], "V": [[69, 84], [74, 88]], "example": [65, 125]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ernest Hemingway has squirrel. Drake has squirrel. Michael Phelps has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns squirrel is not the athlete? Answer: Yes\n Premise: < Dr. Jane Goodall has juice. Claude Monet has cat. Kanye West has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is not the musician? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [57, 60], "V'": [21, 25], "Q": [52, 55], "K'": [26, 28], "R": [56, 57], "K": [[10, 17], [13, 20]], "V": [[5, 14], [9, 16]], "example": [1, 64]}, {"END": [124, 125], "A'": [119, 122], "V'": [78, 81], "Q": [115, 117], "K'": [82, 83], "R": [118, 119], "K": [[75, 89], [77, 91]], "V": [[69, 84], [74, 88]], "example": [65, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ed Sheeran has gun. Ernest Hemingway has piano. Claude Monet has gun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: No\n Premise: < Zaha Hadid has mouse. Andy Warhol has mouse. Johnnie Cochran has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns mouse is not the lawyer? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [51, 54], "V'": [12, 16], "Q": [48, 49], "K'": [17, 18], "R": [50, 51], "K": [[10, 23], [11, 24]], "V": [[5, 19], [9, 22]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [76, 81], "Q": [108, 109], "K'": [82, 84], "R": [110, 111], "K": [[68, 74], [69, 75]], "V": [[63, 70], [67, 73]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ed Sheeran has gun. Ernest Hemingway has piano. Claude Monet has gun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: No\n Premise: < Zaha Hadid has mouse. Andy Warhol has mouse. Johnnie Cochran has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns mouse is not the artist? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [51, 54], "V'": [12, 16], "Q": [48, 49], "K'": [17, 18], "R": [50, 51], "K": [[10, 23], [11, 24]], "V": [[5, 19], [9, 22]], "example": [1, 58]}, {"END": [115, 116], "A'": [111, 113], "V'": [76, 81], "Q": [108, 109], "K'": [82, 84], "R": [110, 111], "K": [[68, 74], [69, 75]], "V": [[63, 70], [67, 73]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Warren Buffett has soda. Tom Brady has lime. Jane Goodall has lime. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is not the entrepreneur? Answer: Yes\n Premise: < Dr. Jane Goodall has shirt. Serena Williams has shirt. Justin Bieber has burger. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns shirt is not the musician? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [5, 8], "Q": [49, 51], "K'": [9, 11], "R": [52, 53], "K": [[16, 23], [18, 25]], "V": [[12, 19], [15, 22]], "example": [1, 61]}, {"END": [122, 123], "A'": [117, 120], "V'": [82, 86], "Q": [113, 115], "K'": [87, 89], "R": [116, 117], "K": [[72, 79], [74, 81]], "V": [[66, 75], [71, 78]], "example": [62, 124]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Warren Buffett has soda. Tom Brady has lime. Jane Goodall has lime. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is not the entrepreneur? Answer: Yes\n Premise: < Dr. Jane Goodall has shirt. Serena Williams has shirt. Justin Bieber has burger. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns shirt is not the athlete? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [53, 57], "V'": [5, 8], "Q": [49, 51], "K'": [9, 11], "R": [52, 53], "K": [[16, 23], [18, 25]], "V": [[12, 19], [15, 22]], "example": [1, 61]}, {"END": [122, 123], "A'": [117, 120], "V'": [82, 86], "Q": [113, 115], "K'": [87, 89], "R": [116, 117], "K": [[72, 79], [74, 81]], "V": [[66, 75], [71, 78]], "example": [62, 124]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Tom Brady has blueberries. Leonardo da Vinci has beetle. Rem Koolhaas has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns beetle is not the athlete? Answer: Yes\n Premise: < Pablo Picasso has gun. Usain Bolt has gun. Justin Bieber has duck. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [61, 64], "V'": [5, 8], "Q": [56, 59], "K'": [9, 12], "R": [60, 61], "K": [[19, 29], [22, 32]], "V": [[13, 23], [18, 28]], "example": [1, 68]}, {"END": [125, 126], "A'": [120, 123], "V'": [86, 90], "Q": [117, 118], "K'": [91, 93], "R": [119, 120], "K": [[77, 84], [78, 85]], "V": [[73, 79], [76, 83]], "example": [69, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Tom Brady has blueberries. Leonardo da Vinci has beetle. Rem Koolhaas has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns beetle is not the athlete? Answer: Yes\n Premise: < Pablo Picasso has gun. Usain Bolt has gun. Justin Bieber has duck. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the artist? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [61, 64], "V'": [5, 8], "Q": [56, 59], "K'": [9, 12], "R": [60, 61], "K": [[19, 29], [22, 32]], "V": [[13, 23], [18, 28]], "example": [1, 68]}, {"END": [124, 125], "A'": [120, 122], "V'": [86, 90], "Q": [117, 118], "K'": [91, 93], "R": [119, 120], "K": [[77, 84], [78, 85]], "V": [[73, 79], [76, 83]], "example": [69, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth Bader Ginsburg has elephant. Beyonc\u00e9 has elephant. Jennifer Lawrence has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns elephant is not the lawyer? Answer: No\n Premise: < Mies van der Rohe has shotgun. Sonia Sotomayor has costume. Oprah Winfrey has costume. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns costume is not the architect? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [24, 27], "Q": [55, 58], "K'": [28, 31], "R": [59, 60], "K": [[12, 20], [15, 23]], "V": [[5, 16], [11, 19]], "example": [1, 66]}, {"END": [132, 133], "A'": [128, 130], "V'": [71, 77], "Q": [124, 126], "K'": [78, 80], "R": [127, 128], "K": [[89, 98], [91, 100]], "V": [[81, 92], [88, 97]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ruth Bader Ginsburg has elephant. Beyonc\u00e9 has elephant. Jennifer Lawrence has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns elephant is not the lawyer? Answer: No\n Premise: < Mies van der Rohe has shotgun. Sonia Sotomayor has costume. Oprah Winfrey has costume. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns costume is not the entrepreneur? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [60, 62], "V'": [24, 27], "Q": [55, 58], "K'": [28, 31], "R": [59, 60], "K": [[12, 20], [15, 23]], "V": [[5, 16], [11, 19]], "example": [1, 66]}, {"END": [134, 135], "A'": [128, 132], "V'": [71, 77], "Q": [124, 126], "K'": [78, 80], "R": [127, 128], "K": [[89, 98], [91, 100]], "V": [[81, 92], [88, 97]], "example": [67, 136]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barack Obama has blackberries. Richard Dawkins has blackberries. Charlize Theron has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the actor? Answer: Yes\n Premise: < Ada Lovelace has goat. Johnnie Cochran has cherries. Claude Monet has goat. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns goat is not the lawyer? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [22, 27], "Q": [54, 57], "K'": [28, 30], "R": [58, 59], "K": [[10, 18], [13, 21]], "V": [[5, 14], [9, 17]], "example": [1, 65]}, {"END": [125, 126], "A'": [121, 123], "V'": [78, 83], "Q": [117, 119], "K'": [84, 86], "R": [120, 121], "K": [[75, 91], [77, 93]], "V": [[70, 87], [74, 90]], "example": [66, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barack Obama has blackberries. Richard Dawkins has blackberries. Charlize Theron has juice. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the actor? Answer: Yes\n Premise: < Ada Lovelace has goat. Johnnie Cochran has cherries. Claude Monet has goat. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns goat is not the artist? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [59, 61], "V'": [22, 27], "Q": [54, 57], "K'": [28, 30], "R": [58, 59], "K": [[10, 18], [13, 21]], "V": [[5, 14], [9, 17]], "example": [1, 65]}, {"END": [125, 126], "A'": [121, 123], "V'": [78, 83], "Q": [117, 119], "K'": [84, 86], "R": [120, 121], "K": [[75, 91], [77, 93]], "V": [[70, 87], [74, 90]], "example": [66, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Warren Buffett has jeans. Salvador Dal\u00ed has monkey. Brad Pitt has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns monkey is not the entrepreneur? Answer: Yes\n Premise: < Toni Morrison has blackberries. Adele has blackberries. Dr. Mehmet Oz has wine. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the doctor? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [5, 8], "Q": [48, 50], "K'": [9, 11], "R": [51, 52], "K": [[16, 22], [18, 24]], "V": [[12, 19], [15, 21]], "example": [1, 60]}, {"END": [125, 126], "A'": [121, 123], "V'": [83, 90], "Q": [116, 119], "K'": [91, 92], "R": [120, 121], "K": [[71, 79], [74, 82]], "V": [[65, 75], [70, 78]], "example": [61, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Warren Buffett has jeans. Salvador Dal\u00ed has monkey. Brad Pitt has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns monkey is not the entrepreneur? Answer: Yes\n Premise: < Toni Morrison has blackberries. Adele has blackberries. Dr. Mehmet Oz has wine. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the musician? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [52, 56], "V'": [5, 8], "Q": [48, 50], "K'": [9, 11], "R": [51, 52], "K": [[16, 22], [18, 24]], "V": [[12, 19], [15, 21]], "example": [1, 60]}, {"END": [126, 127], "A'": [121, 124], "V'": [83, 90], "Q": [116, 119], "K'": [91, 92], "R": [120, 121], "K": [[71, 79], [74, 82]], "V": [[65, 75], [70, 78]], "example": [61, 128]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The sweater is Roger Federer's. The sweater is Usain Bolt's. The elephant is Jane Goodall's. >. The person who owns sweater is not the scientist\n < The juice is Pablo Picasso's. The pig is Rihanna's. The pig is Dr. Sanjay Gupta's. >. The person who owns pig is not the artist\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [28, 31], "Q": [41, 43], "K'": [24, 27], "R": [44, 45], "K": [[3, 13], [5, 15]], "V": [[6, 16], [9, 20]], "example": [1, 48]}, {"END": [95, 96], "A'": [96, 97], "V'": [54, 57], "Q": [91, 93], "K'": [51, 53], "R": [94, 95], "K": [[61, 71], [63, 73]], "V": [[64, 74], [67, 81]], "example": [49, 97]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The piano is Usain Bolt's. The piano is George Orwell's. The pizza is Adele's. >. The person who owns piano is not the musician\n < The football is Dr. Gabor Mat\u00e9's. The wine is Simone Biles's. The wine is Mies van der Rohe's. >. The person who owns wine is not the doctor\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [25, 28], "Q": [38, 39], "K'": [22, 24], "R": [40, 41], "K": [[3, 13], [4, 14]], "V": [[5, 15], [9, 18]], "example": [1, 44]}, {"END": [90, 91], "A'": [91, 92], "V'": [49, 55], "Q": [87, 88], "K'": [47, 48], "R": [89, 90], "K": [[59, 69], [60, 70]], "V": [[61, 71], [65, 77]], "example": [45, 92]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The goat is Neil deGrasse Tyson's. The violin is Eminem's. The violin is LeBron James's. >. The person who owns violin is not the scientist\n < The sweater is Claude Monet's. The vodka is George Orwell's. The sweater is Neil deGrasse Tyson's. >. The person who owns sweater is not the author\n", "ranges": [{"END": [48, 49], "A'": [49, 51], "V'": [6, 13], "Q": [44, 46], "K'": [3, 5], "R": [47, 48], "K": [[17, 27], [19, 29]], "V": [[20, 30], [23, 34]], "example": [1, 51]}, {"END": [99, 100], "A'": [100, 101], "V'": [68, 71], "Q": [95, 97], "K'": [64, 67], "R": [98, 99], "K": [[54, 75], [56, 77]], "V": [[57, 78], [60, 85]], "example": [52, 101]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The juice is Zaha Hadid's. The juice is Andy Warhol's. The durian is Johnnie Cochran's. >. The person who owns juice is not the lawyer\n < The durian is Claude Monet's. The burger is Lady Gaga's. The burger is Johnnie Cochran's. >. The person who owns burger is not the artist\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [27, 32], "Q": [42, 44], "K'": [24, 26], "R": [45, 46], "K": [[3, 14], [5, 16]], "V": [[6, 17], [10, 20]], "example": [1, 48]}, {"END": [93, 94], "A'": [94, 95], "V'": [54, 57], "Q": [89, 91], "K'": [51, 53], "R": [92, 93], "K": [[61, 71], [63, 73]], "V": [[64, 74], [67, 79]], "example": [49, 95]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The fox is Oprah Winfrey's. The fox is Thurgood Marshall's. The bread is Maya Lin's. >. The person who owns fox is not the architect\n < The bus is Cristiano Ronaldo's. The cannon is Albert Einstein's. The cannon is Pablo Picasso's. >. The person who owns cannon is not the athlete\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [28, 31], "Q": [41, 43], "K'": [26, 27], "R": [44, 45], "K": [[3, 15], [5, 17]], "V": [[6, 18], [11, 22]], "example": [1, 47]}, {"END": [91, 92], "A'": [92, 94], "V'": [52, 57], "Q": [87, 89], "K'": [50, 51], "R": [90, 91], "K": [[61, 71], [63, 73]], "V": [[64, 74], [67, 77]], "example": [48, 94]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blueberries is Tom Brady's. The beetle is Leonardo da Vinci's. The beetle is Rem Koolhaas's. >. The person who owns beetle is not the athlete\n < The mouse is Usain Bolt's. The mouse is Oprah Winfrey's. The trousers is Ruth Bader Ginsburg's. >. The person who owns mouse is not the lawyer\n", "ranges": [{"END": [51, 52], "A'": [52, 54], "V'": [7, 10], "Q": [46, 49], "K'": [3, 6], "R": [50, 51], "K": [[14, 27], [17, 30]], "V": [[18, 31], [23, 36]], "example": [1, 54]}, {"END": [101, 102], "A'": [102, 103], "V'": [82, 88], "Q": [98, 99], "K'": [78, 81], "R": [100, 101], "K": [[57, 67], [58, 68]], "V": [[59, 69], [63, 74]], "example": [55, 103]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The beetle is Lionel Messi's. The beetle is Antoni Gaud\u00ed's. The duck is Dr. Anthony Fauci's. >. The person who owns beetle is not the doctor\n < The cat is Tom Brady's. The taxi is Georgia O'Keeffe's. The taxi is Ed Sheeran's. >. The person who owns taxi is not the athlete\n", "ranges": [{"END": [52, 53], "A'": [53, 54], "V'": [31, 37], "Q": [47, 50], "K'": [28, 30], "R": [51, 52], "K": [[3, 15], [6, 18]], "V": [[7, 19], [11, 24]], "example": [1, 54]}, {"END": [100, 101], "A'": [101, 103], "V'": [59, 62], "Q": [96, 98], "K'": [57, 58], "R": [99, 100], "K": [[66, 79], [68, 81]], "V": [[69, 82], [75, 86]], "example": [55, 103]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The baseball is Dr. Neil deGrasse Tyson's. The baseball is Warren Buffett's. The cherries is Harper Lee's. >. The person who owns baseball is not the author\n < The beer is Justin Bieber's. The beer is Leonardo DiCaprio's. The dog is Richard Dawkins's. >. The person who owns beer is not the scientist\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [30, 33], "Q": [43, 44], "K'": [27, 29], "R": [45, 46], "K": [[3, 18], [4, 19]], "V": [[5, 20], [14, 23]], "example": [1, 48]}, {"END": [93, 94], "A'": [94, 96], "V'": [76, 79], "Q": [89, 91], "K'": [74, 75], "R": [92, 93], "K": [[51, 62], [53, 64]], "V": [[54, 65], [58, 70]], "example": [49, 96]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Roger Federer's. The sweater is Usain Bolt's. The elephant is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is not the scientist? Answer: Yes\n Premise: < The cocktail is Johnny Depp's. The peach is Frida Kahlo's. The peach is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is not the actor? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [64, 67], "V'": [31, 34], "Q": [60, 62], "K'": [27, 30], "R": [63, 64], "K": [[6, 16], [8, 18]], "V": [[9, 19], [12, 23]], "example": [1, 71]}, {"END": [141, 142], "A'": [137, 139], "V'": [81, 84], "Q": [133, 135], "K'": [77, 80], "R": [136, 137], "K": [[88, 100], [90, 102]], "V": [[91, 103], [96, 107]], "example": [72, 143]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The sweater is Roger Federer's. The sweater is Usain Bolt's. The elephant is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns sweater is not the scientist? Answer: Yes\n Premise: < The cocktail is Johnny Depp's. The peach is Frida Kahlo's. The peach is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns peach is not the artist? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [64, 67], "V'": [31, 34], "Q": [60, 62], "K'": [27, 30], "R": [63, 64], "K": [[6, 16], [8, 18]], "V": [[9, 19], [12, 23]], "example": [1, 71]}, {"END": [141, 142], "A'": [137, 139], "V'": [81, 84], "Q": [133, 135], "K'": [77, 80], "R": [136, 137], "K": [[88, 100], [90, 102]], "V": [[91, 103], [96, 107]], "example": [72, 143]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Ernest Hemingway's. The squirrel is Drake's. The juice is Michael Phelps's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns squirrel is not the athlete? Answer: Yes\n Premise: < The juice is Dr. Jane Goodall's. The cat is Claude Monet's. The juice is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is not the artist? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [31, 35], "Q": [61, 64], "K'": [28, 30], "R": [65, 66], "K": [[6, 18], [9, 21]], "V": [[10, 22], [14, 24]], "example": [1, 73]}, {"END": [141, 142], "A'": [137, 139], "V'": [93, 96], "Q": [133, 135], "K'": [91, 92], "R": [136, 137], "K": [[79, 100], [81, 102]], "V": [[82, 103], [87, 107]], "example": [74, 143]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The squirrel is Ernest Hemingway's. The squirrel is Drake's. The juice is Michael Phelps's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns squirrel is not the athlete? Answer: Yes\n Premise: < The juice is Dr. Jane Goodall's. The cat is Claude Monet's. The juice is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns juice is not the musician? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [31, 35], "Q": [61, 64], "K'": [28, 30], "R": [65, 66], "K": [[6, 18], [9, 21]], "V": [[10, 22], [14, 24]], "example": [1, 73]}, {"END": [142, 143], "A'": [137, 140], "V'": [93, 96], "Q": [133, 135], "K'": [91, 92], "R": [136, 137], "K": [[79, 100], [81, 102]], "V": [[82, 103], [87, 107]], "example": [74, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Ed Sheeran's. The piano is Ernest Hemingway's. The gun is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: No\n Premise: < The mouse is Zaha Hadid's. The mouse is Andy Warhol's. The shoes is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns mouse is not the lawyer? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [60, 63], "V'": [18, 22], "Q": [57, 58], "K'": [16, 17], "R": [59, 60], "K": [[6, 26], [7, 27]], "V": [[8, 28], [12, 31]], "example": [1, 67]}, {"END": [133, 134], "A'": [129, 131], "V'": [95, 100], "Q": [126, 127], "K'": [92, 94], "R": [128, 129], "K": [[73, 83], [74, 84]], "V": [[75, 85], [79, 88]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The gun is Ed Sheeran's. The piano is Ernest Hemingway's. The gun is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: No\n Premise: < The mouse is Zaha Hadid's. The mouse is Andy Warhol's. The shoes is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns mouse is not the artist? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [60, 63], "V'": [18, 22], "Q": [57, 58], "K'": [16, 17], "R": [59, 60], "K": [[6, 26], [7, 27]], "V": [[8, 28], [12, 31]], "example": [1, 67]}, {"END": [133, 134], "A'": [129, 131], "V'": [95, 100], "Q": [126, 127], "K'": [92, 94], "R": [128, 129], "K": [[73, 83], [74, 84]], "V": [[75, 85], [79, 88]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Warren Buffett's. The lime is Tom Brady's. The lime is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is not the entrepreneur? Answer: Yes\n Premise: < The shirt is Dr. Jane Goodall's. The shirt is Serena Williams's. The burger is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns shirt is not the musician? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [9, 12], "Q": [58, 60], "K'": [6, 8], "R": [61, 62], "K": [[16, 26], [18, 28]], "V": [[19, 29], [22, 32]], "example": [1, 70]}, {"END": [140, 141], "A'": [135, 138], "V'": [101, 105], "Q": [131, 133], "K'": [98, 100], "R": [134, 135], "K": [[76, 88], [78, 90]], "V": [[79, 91], [84, 94]], "example": [71, 142]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The soda is Warren Buffett's. The lime is Tom Brady's. The lime is Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns lime is not the entrepreneur? Answer: Yes\n Premise: < The shirt is Dr. Jane Goodall's. The shirt is Serena Williams's. The burger is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns shirt is not the athlete? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [62, 66], "V'": [9, 12], "Q": [58, 60], "K'": [6, 8], "R": [61, 62], "K": [[16, 26], [18, 28]], "V": [[19, 29], [22, 32]], "example": [1, 70]}, {"END": [140, 141], "A'": [135, 138], "V'": [101, 105], "Q": [131, 133], "K'": [98, 100], "R": [134, 135], "K": [[76, 88], [78, 90]], "V": [[79, 91], [84, 94]], "example": [71, 142]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blueberries is Tom Brady's. The beetle is Leonardo da Vinci's. The beetle is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns beetle is not the athlete? Answer: Yes\n Premise: < The gun is Pablo Picasso's. The gun is Usain Bolt's. The duck is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the musician? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [10, 13], "Q": [65, 68], "K'": [6, 9], "R": [69, 70], "K": [[17, 30], [20, 33]], "V": [[21, 34], [26, 39]], "example": [1, 77]}, {"END": [143, 144], "A'": [138, 141], "V'": [105, 109], "Q": [135, 136], "K'": [102, 104], "R": [137, 138], "K": [[83, 92], [84, 93]], "V": [[85, 94], [88, 98]], "example": [78, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blueberries is Tom Brady's. The beetle is Leonardo da Vinci's. The beetle is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns beetle is not the athlete? Answer: Yes\n Premise: < The gun is Pablo Picasso's. The gun is Usain Bolt's. The duck is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns gun is not the artist? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [10, 13], "Q": [65, 68], "K'": [6, 9], "R": [69, 70], "K": [[17, 30], [20, 33]], "V": [[21, 34], [26, 39]], "example": [1, 77]}, {"END": [142, 143], "A'": [138, 140], "V'": [105, 109], "Q": [135, 136], "K'": [102, 104], "R": [137, 138], "K": [[83, 92], [84, 93]], "V": [[85, 94], [88, 98]], "example": [78, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Ruth Bader Ginsburg's. The elephant is Beyonc\u00e9's. The beetle is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns elephant is not the lawyer? Answer: No\n Premise: < The shotgun is Mies van der Rohe's. The costume is Sonia Sotomayor's. The costume is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns costume is not the architect? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [35, 38], "Q": [64, 67], "K'": [31, 34], "R": [68, 69], "K": [[6, 20], [9, 23]], "V": [[10, 24], [16, 27]], "example": [1, 75]}, {"END": [150, 151], "A'": [146, 148], "V'": [84, 90], "Q": [142, 144], "K'": [81, 83], "R": [145, 146], "K": [[94, 108], [96, 110]], "V": [[97, 111], [104, 116]], "example": [76, 152]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Ruth Bader Ginsburg's. The elephant is Beyonc\u00e9's. The beetle is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns elephant is not the lawyer? Answer: No\n Premise: < The shotgun is Mies van der Rohe's. The costume is Sonia Sotomayor's. The costume is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns costume is not the entrepreneur? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [69, 71], "V'": [35, 38], "Q": [64, 67], "K'": [31, 34], "R": [68, 69], "K": [[6, 20], [9, 23]], "V": [[10, 24], [16, 27]], "example": [1, 75]}, {"END": [152, 153], "A'": [146, 150], "V'": [84, 90], "Q": [142, 144], "K'": [81, 83], "R": [145, 146], "K": [[94, 108], [96, 110]], "V": [[97, 111], [104, 116]], "example": [76, 154]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Barack Obama's. The blackberries is Richard Dawkins's. The juice is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the actor? Answer: Yes\n Premise: < The goat is Ada Lovelace's. The cherries is Johnnie Cochran's. The goat is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns goat is not the lawyer? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [32, 37], "Q": [63, 66], "K'": [29, 31], "R": [67, 68], "K": [[6, 18], [9, 21]], "V": [[10, 22], [14, 25]], "example": [1, 74]}, {"END": [143, 144], "A'": [139, 141], "V'": [94, 99], "Q": [135, 137], "K'": [91, 93], "R": [138, 139], "K": [[80, 103], [82, 105]], "V": [[83, 106], [87, 109]], "example": [75, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The blackberries is Barack Obama's. The blackberries is Richard Dawkins's. The juice is Charlize Theron's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the actor? Answer: Yes\n Premise: < The goat is Ada Lovelace's. The cherries is Johnnie Cochran's. The goat is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns goat is not the artist? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [32, 37], "Q": [63, 66], "K'": [29, 31], "R": [67, 68], "K": [[6, 18], [9, 21]], "V": [[10, 22], [14, 25]], "example": [1, 74]}, {"END": [143, 144], "A'": [139, 141], "V'": [94, 99], "Q": [135, 137], "K'": [91, 93], "R": [138, 139], "K": [[80, 103], [82, 105]], "V": [[83, 106], [87, 109]], "example": [75, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Warren Buffett's. The monkey is Salvador Dal\u00ed's. The monkey is Brad Pitt's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns monkey is not the entrepreneur? Answer: Yes\n Premise: < The blackberries is Toni Morrison's. The blackberries is Adele's. The wine is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the doctor? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [61, 65], "V'": [9, 12], "Q": [57, 59], "K'": [6, 8], "R": [60, 61], "K": [[16, 26], [18, 28]], "V": [[19, 29], [22, 31]], "example": [1, 69]}, {"END": [143, 144], "A'": [139, 141], "V'": [101, 108], "Q": [134, 137], "K'": [99, 100], "R": [138, 139], "K": [[75, 88], [78, 91]], "V": [[79, 92], [84, 95]], "example": [70, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_equal,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeans is Warren Buffett's. The monkey is Salvador Dal\u00ed's. The monkey is Brad Pitt's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns monkey is not the entrepreneur? Answer: Yes\n Premise: < The blackberries is Toni Morrison's. The blackberries is Adele's. The wine is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns blackberries is not the musician? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [61, 65], "V'": [9, 12], "Q": [57, 59], "K'": [6, 8], "R": [60, 61], "K": [[16, 26], [18, 28]], "V": [[19, 29], [22, 31]], "example": [1, 69]}, {"END": [144, 145], "A'": [139, 142], "V'": [101, 108], "Q": [134, 137], "K'": [99, 100], "R": [138, 139], "K": [[75, 88], [78, 91]], "V": [[79, 92], [84, 95]], "example": [70, 146]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Norman Foster has pig. Zaha Hadid has shirt. LeBron James has kiwi. >. So the athlete owns a kind of fruit\n < Rosie Franklin has spaghetti. Sonia Sotomayor has underwear. Jennifer Lawrence has papaya. >. So the scientist owns a kind of food\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [22, 24], "Q": [28, 31], "K": [17, 21], "R": null, "K'": [[2, 9], [5, 13]], "V'": [[6, 14], [8, 16]], "example": [1, 37]}, {"END": [76, 77], "A": [77, 78], "V": [43, 46], "Q": [69, 72], "K": [39, 42], "R": null, "K'": [[47, 59], [54, 62]], "V'": [[55, 63], [58, 65]], "example": [38, 78]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< George Orwell has grenade. Adele has blueberries. Usain Bolt has meat. >. So the musician owns a kind of fruit\n < Carl Sagan has spaghetti. Barack Obama has cocktail. Jeff Bezos has banana. >. So the entrepreneur owns a kind of fruit\n", "ranges": [{"END": [35, 36], "A": [36, 37], "V": [14, 17], "Q": [28, 31], "K": [10, 13], "R": null, "K'": [[2, 18], [5, 22]], "V'": [[6, 23], [9, 24]], "example": [1, 37]}, {"END": [74, 75], "A": [75, 76], "V": [60, 62], "Q": [66, 70], "K": [56, 59], "R": null, "K'": [[39, 47], [42, 51]], "V'": [[43, 52], [46, 55]], "example": [38, 76]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Agatha Christie has lime. Norman Foster has baseball. Louis Sullivan has tea. >. So the author owns a kind of fruit\n < Andy Warhol has handgun. Justin Bieber has lime. Mies van der Rohe has hamburger. >. So the architect owns a kind of food\n", "ranges": [{"END": [33, 34], "A": [34, 35], "V": [8, 10], "Q": [27, 29], "K": [2, 7], "R": null, "K'": [[11, 17], [14, 21]], "V'": [[15, 22], [16, 23]], "example": [1, 35]}, {"END": [72, 73], "A": [73, 74], "V": [59, 62], "Q": [66, 68], "K": [52, 58], "R": null, "K'": [[37, 44], [40, 48]], "V'": [[41, 49], [43, 51]], "example": [36, 74]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Dr. Neil deGrasse Tyson has wine. Leonardo da Vinci has shoes. J.R.R. Tolkien has jacket. >. So the doctor owns a kind of drink\n < George Orwell has lion. Dr. Ben Carson has tea. Roger Federer has lime. >. So the author owns a kind of animal\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [12, 13], "Q": [39, 41], "K": [2, 11], "R": null, "K'": [[14, 23], [19, 32]], "V'": [[20, 33], [22, 35]], "example": [1, 47]}, {"END": [80, 81], "A": [81, 82], "V": [53, 55], "Q": [74, 76], "K": [49, 52], "R": null, "K'": [[56, 64], [61, 67]], "V'": [[62, 68], [63, 70]], "example": [48, 82]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Meryl Streep has cake. Dr. Anthony Fauci has pineapple. Thurgood Marshall has mosquito. >. So the lawyer owns a kind of insect\n < Usain Bolt has pants. Ruth Bader Ginsburg has vodka. Oprah Winfrey has mouse. >. So the lawyer owns a kind of drink\n", "ranges": [{"END": [41, 42], "A": [42, 43], "V": [28, 31], "Q": [35, 37], "K": [23, 27], "R": null, "K'": [[2, 12], [8, 18]], "V'": [[9, 19], [11, 22]], "example": [1, 43]}, {"END": [81, 82], "A": [82, 83], "V": [60, 63], "Q": [75, 77], "K": [53, 59], "R": null, "K'": [[45, 64], [49, 69]], "V'": [[50, 70], [52, 71]], "example": [44, 83]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Natalie Portman has bee. Ieoh Ming Pei has T-shirt. Albert Einstein has deer. >. So the architect owns a kind of clothes\n < Sonia Sotomayor has guitar. Oprah Winfrey has soda. Mies van der Rohe has grenade. >. So the architect owns a kind of weapon\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [18, 22], "Q": [33, 35], "K": [10, 17], "R": null, "K'": [[2, 23], [6, 26]], "V'": [[7, 27], [9, 29]], "example": [1, 41]}, {"END": [82, 83], "A": [83, 84], "V": [69, 72], "Q": [76, 78], "K": [62, 68], "R": null, "K'": [[43, 53], [50, 58]], "V'": [[51, 59], [52, 61]], "example": [42, 84]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Barack Obama has hamburger. J.K. Rowling has dog. Gloria Allred has plum. >. So the author owns a kind of animal\n < Claude Monet has shotgun. Johnnie Cochran has football. Ada Lovelace has motorcycle. >. So the lawyer owns a kind of sport\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [18, 19], "Q": [31, 33], "K": [11, 17], "R": null, "K'": [[2, 20], [6, 24]], "V'": [[7, 25], [10, 27]], "example": [1, 39]}, {"END": [73, 74], "A": [74, 75], "V": [54, 55], "Q": [67, 69], "K": [48, 53], "R": null, "K'": [[41, 56], [44, 60]], "V'": [[45, 61], [47, 63]], "example": [40, 75]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Toni Morrison has bus. Agatha Christie has revolver. Steve Jobs has banana. >. So the entrepreneur owns a kind of fruit\n < Roger Federer has tiger. Sonia Sotomayor has jacket. Toni Morrison has steak. >. So the lawyer owns a kind of clothes\n", "ranges": [{"END": [37, 38], "A": [38, 39], "V": [23, 25], "Q": [29, 33], "K": [19, 22], "R": null, "K'": [[2, 10], [7, 15]], "V'": [[8, 16], [9, 18]], "example": [1, 39]}, {"END": [77, 78], "A": [78, 79], "V": [56, 58], "Q": [71, 73], "K": [48, 55], "R": null, "K'": [[41, 59], [44, 64]], "V'": [[45, 65], [47, 67]], "example": [40, 79]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Norman Foster has pig. Zaha Hadid has shirt. LeBron James has kiwi. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of animal? Answer: No\n Premise: < F. Lee Bailey has spaghetti. Jennifer Lawrence has underwear. Dr. Sanjay Gupta has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of food? Answer: Yes\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [25, 27], "Q": [46, 49], "K": [20, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[9, 17], [11, 19]], "example": [1, 59]}, {"END": [121, 122], "A": [118, 119], "V": [70, 73], "Q": [111, 113], "K": [64, 69], "R": null, "K'": [[74, 82], [77, 89]], "V'": [[78, 90], [81, 92]], "example": [60, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Norman Foster has pig. Zaha Hadid has shirt. LeBron James has kiwi. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of animal? Answer: No\n Premise: < F. Lee Bailey has spaghetti. Jennifer Lawrence has underwear. Dr. Sanjay Gupta has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of fruit? Answer: No\n", "ranges": [{"END": [57, 58], "A": [54, 55], "V": [25, 27], "Q": [46, 49], "K": [20, 24], "R": null, "K'": [[5, 12], [8, 16]], "V'": [[9, 17], [11, 19]], "example": [1, 59]}, {"END": [121, 122], "A": [118, 119], "V": [70, 73], "Q": [111, 113], "K": [64, 69], "R": null, "K'": [[74, 82], [77, 89]], "V'": [[78, 90], [81, 92]], "example": [60, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michael Phelps has elephant. Drake has piano. Ernest Hemingway has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < Frida Kahlo has plum. Johnny Depp has monkey. Julia Roberts has bee. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [10, 13], "Q": [47, 50], "K": [5, 9], "R": null, "K'": [[14, 19], [16, 23]], "V'": [[17, 24], [18, 28]], "example": [1, 60]}, {"END": [115, 116], "A": [112, 113], "V": [71, 73], "Q": [105, 107], "K": [65, 70], "R": null, "K'": [[74, 81], [77, 83]], "V'": [[78, 84], [80, 86]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Michael Phelps has elephant. Drake has piano. Ernest Hemingway has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < Frida Kahlo has plum. Johnny Depp has monkey. Julia Roberts has bee. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n", "ranges": [{"END": [58, 59], "A": [55, 56], "V": [10, 13], "Q": [47, 50], "K": [5, 9], "R": null, "K'": [[14, 19], [16, 23]], "V'": [[17, 24], [18, 28]], "example": [1, 60]}, {"END": [115, 116], "A": [112, 113], "V": [71, 73], "Q": [105, 107], "K": [65, 70], "R": null, "K'": [[74, 81], [77, 83]], "V'": [[78, 84], [80, 86]], "example": [61, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has durian. Marie Curie has bus. Alex Morgan has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < Johnny Depp has violin. Jane Austen has spaghetti. Neil deGrasse Tyson has gun. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of food? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [23, 25], "Q": [44, 47], "K": [20, 22], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[11, 18], [13, 19]], "example": [1, 57]}, {"END": [115, 116], "A": [112, 113], "V": [73, 76], "Q": [105, 107], "K": [69, 72], "R": null, "K'": [[62, 77], [65, 84]], "V'": [[66, 85], [68, 86]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has durian. Marie Curie has bus. Alex Morgan has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < Johnny Depp has violin. Jane Austen has spaghetti. Neil deGrasse Tyson has gun. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of instrument? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [23, 25], "Q": [44, 47], "K": [20, 22], "R": null, "K'": [[5, 14], [10, 17]], "V'": [[11, 18], [13, 19]], "example": [1, 57]}, {"END": [115, 116], "A": [112, 113], "V": [73, 76], "Q": [105, 107], "K": [69, 72], "R": null, "K'": [[62, 77], [65, 84]], "V'": [[66, 85], [68, 86]], "example": [58, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steve Jobs has lion. Roger Federer has tea. Justin Bieber has lime. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: Yes\n Premise: < Meryl Streep has cake. Dr. Anthony Fauci has pineapple. Thurgood Marshall has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [9, 11], "Q": [44, 48], "K": [5, 8], "R": null, "K'": [[12, 18], [15, 22]], "V'": [[16, 23], [17, 25]], "example": [1, 58]}, {"END": [121, 122], "A": [118, 119], "V": [89, 92], "Q": [111, 113], "K": [84, 88], "R": null, "K'": [[63, 73], [69, 79]], "V'": [[70, 80], [72, 83]], "example": [59, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steve Jobs has lion. Roger Federer has tea. Justin Bieber has lime. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: Yes\n Premise: < Meryl Streep has cake. Dr. Anthony Fauci has pineapple. Thurgood Marshall has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of food? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [9, 11], "Q": [44, 48], "K": [5, 8], "R": null, "K'": [[12, 18], [15, 22]], "V'": [[16, 23], [17, 25]], "example": [1, 58]}, {"END": [121, 122], "A": [118, 119], "V": [89, 92], "Q": [111, 113], "K": [84, 88], "R": null, "K'": [[63, 73], [69, 79]], "V'": [[70, 80], [72, 83]], "example": [59, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Louis Sullivan has dog. Frida Kahlo has violin. Alex Morgan has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n Premise: < LeBron James has trousers. Dr. Mehmet Oz has apple. Richard Dawkins has juice. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of drink? Answer: Yes\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [18, 20], "Q": [45, 47], "K": [12, 17], "R": null, "K'": [[5, 21], [9, 23]], "V'": [[10, 24], [11, 26]], "example": [1, 57]}, {"END": [117, 118], "A": [114, 115], "V": [85, 87], "Q": [106, 109], "K": [81, 84], "R": null, "K'": [[62, 71], [66, 78]], "V'": [[67, 79], [70, 80]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Louis Sullivan has dog. Frida Kahlo has violin. Alex Morgan has pistol. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n Premise: < LeBron James has trousers. Dr. Mehmet Oz has apple. Richard Dawkins has juice. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of fruit? Answer: No\n", "ranges": [{"END": [55, 56], "A": [52, 53], "V": [18, 20], "Q": [45, 47], "K": [12, 17], "R": null, "K'": [[5, 21], [9, 23]], "V'": [[10, 24], [11, 26]], "example": [1, 57]}, {"END": [117, 118], "A": [114, 115], "V": [85, 87], "Q": [106, 109], "K": [81, 84], "R": null, "K'": [[62, 71], [66, 78]], "V'": [[67, 79], [70, 80]], "example": [58, 119]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Simone Biles has pants. Marie Curie has motorcycle. Sonia Sotomayor has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n Premise: < Agatha Christie has jacket. Denzel Washington has peach. Marie Curie has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [28, 31], "Q": [50, 52], "K": [20, 27], "R": null, "K'": [[5, 13], [9, 16]], "V'": [[10, 17], [12, 19]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [87, 89], "Q": [108, 111], "K": [83, 86], "R": null, "K'": [[67, 76], [72, 79]], "V'": [[73, 80], [75, 82]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Simone Biles has pants. Marie Curie has motorcycle. Sonia Sotomayor has mosquito. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n Premise: < Agatha Christie has jacket. Denzel Washington has peach. Marie Curie has cannon. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of fruit? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [28, 31], "Q": [50, 52], "K": [20, 27], "R": null, "K'": [[5, 13], [9, 16]], "V'": [[10, 17], [12, 19]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [87, 89], "Q": [108, 111], "K": [83, 86], "R": null, "K'": [[67, 76], [72, 79]], "V'": [[73, 80], [75, 82]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sergey Brin has durian. Bill Gates has grenade. Jane Austen has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of fruit? Answer: No\n Premise: < Ada Lovelace has monkey. Mark Twain has horse. Bill Gates has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [25, 27], "Q": [46, 48], "K": [21, 24], "R": null, "K'": [[5, 13], [9, 16]], "V'": [[10, 17], [12, 20]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [81, 84], "Q": [103, 107], "K": [77, 80], "R": null, "K'": [[63, 71], [67, 74]], "V'": [[68, 75], [70, 76]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sergey Brin has durian. Bill Gates has grenade. Jane Austen has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of fruit? Answer: No\n Premise: < Ada Lovelace has monkey. Mark Twain has horse. Bill Gates has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: No\n", "ranges": [{"END": [56, 57], "A": [53, 54], "V": [25, 27], "Q": [46, 48], "K": [21, 24], "R": null, "K'": [[5, 13], [9, 16]], "V'": [[10, 17], [12, 20]], "example": [1, 58]}, {"END": [115, 116], "A": [112, 113], "V": [81, 84], "Q": [103, 107], "K": [77, 80], "R": null, "K'": [[63, 71], [67, 74]], "V'": [[68, 75], [70, 76]], "example": [59, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark Twain has jeep. Ed Sheeran has grenade. Leonardo DiCaprio has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the musician owns a kind of weapon? Answer: Yes\n Premise: < Natalie Portman has grenade. Michelangelo has violin. Frank Lloyd Wright has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of instrument? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [17, 20], "Q": [49, 52], "K": [12, 16], "R": null, "K'": [[5, 21], [8, 26]], "V'": [[9, 27], [11, 30]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [80, 82], "Q": [109, 111], "K": [76, 79], "R": null, "K'": [[67, 83], [71, 86]], "V'": [[72, 87], [75, 90]], "example": [63, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark Twain has jeep. Ed Sheeran has grenade. Leonardo DiCaprio has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the musician owns a kind of weapon? Answer: Yes\n Premise: < Natalie Portman has grenade. Michelangelo has violin. Frank Lloyd Wright has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of weapon? Answer: No\n", "ranges": [{"END": [60, 61], "A": [57, 58], "V": [17, 20], "Q": [49, 52], "K": [12, 16], "R": null, "K'": [[5, 21], [8, 26]], "V'": [[9, 27], [11, 30]], "example": [1, 62]}, {"END": [119, 120], "A": [116, 117], "V": [80, 82], "Q": [109, 111], "K": [76, 79], "R": null, "K'": [[67, 83], [71, 86]], "V'": [[72, 87], [75, 90]], "example": [63, 121]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pig is Norman Foster's. The shirt is Zaha Hadid's. The kiwi is LeBron James's. >. So the athlete owns a kind of fruit\n < The spaghetti is Rosie Franklin's. The underwear is Sonia Sotomayor's. The papaya is Jennifer Lawrence's. >. So the scientist owns a kind of food\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [24, 26], "Q": [37, 40], "K": [27, 31], "R": null, "K'": [[6, 16], [9, 20]], "V'": [[3, 13], [5, 15]], "example": [1, 46]}, {"END": [94, 95], "A": [95, 96], "V": [49, 52], "Q": [87, 90], "K": [53, 56], "R": null, "K'": [[64, 78], [71, 81]], "V'": [[60, 75], [63, 77]], "example": [47, 96]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The grenade is George Orwell's. The blueberries is Adele's. The meat is Usain Bolt's. >. So the musician owns a kind of fruit\n < The spaghetti is Carl Sagan's. The cocktail is Barack Obama's. The banana is Jeff Bezos's. >. So the entrepreneur owns a kind of fruit\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [14, 17], "Q": [37, 40], "K": [18, 21], "R": null, "K'": [[7, 27], [10, 31]], "V'": [[3, 25], [6, 26]], "example": [1, 46]}, {"END": [92, 93], "A": [93, 94], "V": [72, 74], "Q": [84, 88], "K": [75, 78], "R": null, "K'": [[53, 64], [56, 68]], "V'": [[49, 60], [52, 63]], "example": [47, 94]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lime is Agatha Christie's. The baseball is Norman Foster's. The tea is Louis Sullivan's. >. So the author owns a kind of fruit\n < The handgun is Andy Warhol's. The lime is Justin Bieber's. The hamburger is Mies van der Rohe's. >. So the architect owns a kind of food\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [3, 5], "Q": [36, 38], "K": [6, 11], "R": null, "K'": [[17, 26], [20, 30]], "V'": [[15, 24], [16, 25]], "example": [1, 44]}, {"END": [90, 91], "A": [91, 92], "V": [68, 71], "Q": [84, 86], "K": [72, 78], "R": null, "K'": [[50, 60], [53, 64]], "V'": [[47, 57], [49, 59]], "example": [45, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The wine is Dr. Neil deGrasse Tyson's. The shoes is Leonardo da Vinci's. The jacket is J.R.R. Tolkien's. >. So the doctor owns a kind of drink\n < The lion is George Orwell's. The tea is Dr. Ben Carson's. The lime is Roger Federer's. >. So the author owns a kind of animal\n", "ranges": [{"END": [54, 55], "A": [55, 56], "V": [3, 4], "Q": [48, 50], "K": [5, 14], "R": null, "K'": [[21, 33], [26, 42]], "V'": [[18, 30], [20, 32]], "example": [1, 56]}, {"END": [98, 99], "A": [99, 100], "V": [59, 61], "Q": [92, 94], "K": [62, 65], "R": null, "K'": [[71, 83], [76, 86]], "V'": [[69, 80], [70, 82]], "example": [57, 100]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is Meryl Streep's. The pineapple is Dr. Anthony Fauci's. The mosquito is Thurgood Marshall's. >. So the lawyer owns a kind of insect\n < The pants is Usain Bolt's. The vodka is Ruth Bader Ginsburg's. The mouse is Oprah Winfrey's. >. So the lawyer owns a kind of drink\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [30, 33], "Q": [44, 46], "K": [34, 38], "R": null, "K'": [[6, 20], [12, 26]], "V'": [[3, 16], [5, 19]], "example": [1, 52]}, {"END": [99, 100], "A": [100, 101], "V": [66, 69], "Q": [93, 95], "K": [70, 76], "R": null, "K'": [[58, 82], [62, 87]], "V'": [[55, 80], [57, 81]], "example": [53, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bee is Natalie Portman's. T-shirt is Ieoh Ming Pei's. The deer is Albert Einstein's. >. So the architect owns a kind of clothes\n < The guitar is Sonia Sotomayor's. The soda is Oprah Winfrey's. The grenade is Mies van der Rohe's. >. So the architect owns a kind of weapon\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [13, 17], "Q": [41, 43], "K": [18, 25], "R": null, "K'": [[6, 32], [10, 35]], "V'": [[3, 29], [5, 31]], "example": [1, 49]}, {"END": [99, 100], "A": [100, 101], "V": [77, 80], "Q": [93, 95], "K": [81, 87], "R": null, "K'": [[54, 68], [61, 73]], "V'": [[52, 65], [53, 67]], "example": [50, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The hamburger is Barack Obama's. The dog is J.K. Rowling's. The plum is Gloria Allred's. >. So the author owns a kind of animal\n < The shotgun is Claude Monet's. The football is Johnnie Cochran's. The motorcycle is Ada Lovelace's. >. So the lawyer owns a kind of sport\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [15, 16], "Q": [40, 42], "K": [17, 23], "R": null, "K'": [[7, 30], [11, 34]], "V'": [[3, 27], [6, 29]], "example": [1, 48]}, {"END": [91, 92], "A": [92, 93], "V": [61, 62], "Q": [85, 87], "K": [63, 68], "R": null, "K'": [[54, 75], [57, 79]], "V'": [[51, 72], [53, 74]], "example": [49, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bus is Toni Morrison's. The revolver is Agatha Christie's. The banana is Steve Jobs's. >. So the entrepreneur owns a kind of fruit\n < The tiger is Roger Federer's. The jacket is Sonia Sotomayor's. The steak is Toni Morrison's. >. So the lawyer owns a kind of clothes\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [26, 28], "Q": [38, 42], "K": [29, 32], "R": null, "K'": [[5, 17], [10, 22]], "V'": [[3, 14], [4, 16]], "example": [1, 48]}, {"END": [95, 96], "A": [96, 97], "V": [61, 63], "Q": [89, 91], "K": [64, 71], "R": null, "K'": [[54, 78], [57, 83]], "V'": [[51, 75], [53, 77]], "example": [49, 97]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Norman Foster's. The shirt is Zaha Hadid's. The kiwi is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of animal? Answer: No\n Premise: < The spaghetti is F. Lee Bailey's. The underwear is Jennifer Lawrence's. The papaya is Dr. Sanjay Gupta's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of food? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [27, 29], "Q": [55, 58], "K": [30, 34], "R": null, "K'": [[9, 19], [12, 23]], "V'": [[6, 16], [8, 18]], "example": [1, 68]}, {"END": [139, 140], "A": [136, 137], "V": [74, 77], "Q": [129, 131], "K": [78, 83], "R": null, "K'": [[91, 101], [94, 108]], "V'": [[87, 98], [90, 100]], "example": [69, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Norman Foster's. The shirt is Zaha Hadid's. The kiwi is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of animal? Answer: No\n Premise: < The spaghetti is F. Lee Bailey's. The underwear is Jennifer Lawrence's. The papaya is Dr. Sanjay Gupta's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of fruit? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [27, 29], "Q": [55, 58], "K": [30, 34], "R": null, "K'": [[9, 19], [12, 23]], "V'": [[6, 16], [8, 18]], "example": [1, 68]}, {"END": [139, 140], "A": [136, 137], "V": [74, 77], "Q": [129, 131], "K": [78, 83], "R": null, "K'": [[91, 101], [94, 108]], "V'": [[87, 98], [90, 100]], "example": [69, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Michael Phelps's. The piano is Drake's. The watermelon is Ernest Hemingway's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < The plum is Frida Kahlo's. The monkey is Johnny Depp's. The bee is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of fruit? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [6, 9], "Q": [56, 59], "K": [10, 14], "R": null, "K'": [[20, 31], [22, 35]], "V'": [[18, 26], [19, 30]], "example": [1, 69]}, {"END": [133, 134], "A": [130, 131], "V": [75, 77], "Q": [123, 125], "K": [78, 83], "R": null, "K'": [[90, 100], [93, 102]], "V'": [[87, 97], [89, 99]], "example": [70, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Michael Phelps's. The piano is Drake's. The watermelon is Ernest Hemingway's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < The plum is Frida Kahlo's. The monkey is Johnny Depp's. The bee is Julia Roberts's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [6, 9], "Q": [56, 59], "K": [10, 14], "R": null, "K'": [[20, 31], [22, 35]], "V'": [[18, 26], [19, 30]], "example": [1, 69]}, {"END": [133, 134], "A": [130, 131], "V": [75, 77], "Q": [123, 125], "K": [78, 83], "R": null, "K'": [[90, 100], [93, 102]], "V'": [[87, 97], [89, 99]], "example": [70, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Vincent van Gogh's. The bus is Marie Curie's. The shoes is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < The violin is Johnny Depp's. The spaghetti is Jane Austen's. The gun is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of food? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [27, 29], "Q": [53, 56], "K": [30, 32], "R": null, "K'": [[9, 20], [14, 23]], "V'": [[6, 18], [8, 19]], "example": [1, 66]}, {"END": [133, 134], "A": [130, 131], "V": [82, 85], "Q": [123, 125], "K": [86, 89], "R": null, "K'": [[75, 95], [78, 102]], "V'": [[72, 93], [74, 94]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Vincent van Gogh's. The bus is Marie Curie's. The shoes is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete owns a kind of fruit? Answer: No\n Premise: < The violin is Johnny Depp's. The spaghetti is Jane Austen's. The gun is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of instrument? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [27, 29], "Q": [53, 56], "K": [30, 32], "R": null, "K'": [[9, 20], [14, 23]], "V'": [[6, 18], [8, 19]], "example": [1, 66]}, {"END": [133, 134], "A": [130, 131], "V": [82, 85], "Q": [123, 125], "K": [86, 89], "R": null, "K'": [[75, 95], [78, 102]], "V'": [[72, 93], [74, 94]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Steve Jobs's. The tea is Roger Federer's. The lime is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: Yes\n Premise: < The cake is Meryl Streep's. The pineapple is Dr. Anthony Fauci's. The mosquito is Thurgood Marshall's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [6, 8], "Q": [53, 57], "K": [9, 12], "R": null, "K'": [[18, 28], [21, 32]], "V'": [[16, 25], [17, 27]], "example": [1, 67]}, {"END": [139, 140], "A": [136, 137], "V": [100, 103], "Q": [129, 131], "K": [104, 108], "R": null, "K'": [[76, 90], [82, 96]], "V'": [[73, 86], [75, 89]], "example": [68, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lion is Steve Jobs's. The tea is Roger Federer's. The lime is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: Yes\n Premise: < The cake is Meryl Streep's. The pineapple is Dr. Anthony Fauci's. The mosquito is Thurgood Marshall's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of food? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [6, 8], "Q": [53, 57], "K": [9, 12], "R": null, "K'": [[18, 28], [21, 32]], "V'": [[16, 25], [17, 27]], "example": [1, 67]}, {"END": [139, 140], "A": [136, 137], "V": [100, 103], "Q": [129, 131], "K": [104, 108], "R": null, "K'": [[76, 90], [82, 96]], "V'": [[73, 86], [75, 89]], "example": [68, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Louis Sullivan's. The violin is Frida Kahlo's. The pistol is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n Premise: < The trousers is LeBron James's. The apple is Dr. Mehmet Oz's. The juice is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of drink? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [16, 18], "Q": [54, 56], "K": [19, 24], "R": null, "K'": [[8, 31], [12, 33]], "V'": [[6, 28], [7, 30]], "example": [1, 66]}, {"END": [135, 136], "A": [132, 133], "V": [97, 99], "Q": [124, 127], "K": [100, 103], "R": null, "K'": [[76, 86], [80, 93]], "V'": [[72, 84], [75, 85]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The dog is Louis Sullivan's. The violin is Frida Kahlo's. The pistol is Alex Morgan's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of animal? Answer: No\n Premise: < The trousers is LeBron James's. The apple is Dr. Mehmet Oz's. The juice is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of fruit? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [16, 18], "Q": [54, 56], "K": [19, 24], "R": null, "K'": [[8, 31], [12, 33]], "V'": [[6, 28], [7, 30]], "example": [1, 66]}, {"END": [135, 136], "A": [132, 133], "V": [97, 99], "Q": [124, 127], "K": [100, 103], "R": null, "K'": [[76, 86], [80, 93]], "V'": [[72, 84], [75, 85]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Simone Biles's. The motorcycle is Marie Curie's. The mosquito is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n Premise: < The jacket is Agatha Christie's. The peach is Denzel Washington's. The cannon is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of weapon? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [27, 30], "Q": [59, 61], "K": [31, 38], "R": null, "K'": [[9, 20], [13, 23]], "V'": [[6, 17], [8, 19]], "example": [1, 71]}, {"END": [137, 138], "A": [134, 135], "V": [99, 101], "Q": [126, 129], "K": [102, 105], "R": null, "K'": [[80, 92], [85, 95]], "V'": [[77, 89], [79, 91]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pants is Simone Biles's. The motorcycle is Marie Curie's. The mosquito is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer owns a kind of insect? Answer: Yes\n Premise: < The jacket is Agatha Christie's. The peach is Denzel Washington's. The cannon is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist owns a kind of fruit? Answer: No\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [27, 30], "Q": [59, 61], "K": [31, 38], "R": null, "K'": [[9, 20], [13, 23]], "V'": [[6, 17], [8, 19]], "example": [1, 71]}, {"END": [137, 138], "A": [134, 135], "V": [99, 101], "Q": [126, 129], "K": [102, 105], "R": null, "K'": [[80, 92], [85, 95]], "V'": [[77, 89], [79, 91]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Sergey Brin's. The grenade is Bill Gates's. The monkey is Jane Austen's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of fruit? Answer: No\n Premise: < The monkey is Ada Lovelace's. The horse is Mark Twain's. The jersey is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of clothes? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [28, 30], "Q": [55, 57], "K": [31, 34], "R": null, "K'": [[9, 21], [13, 24]], "V'": [[6, 17], [8, 20]], "example": [1, 67]}, {"END": [133, 134], "A": [130, 131], "V": [93, 96], "Q": [121, 125], "K": [97, 100], "R": null, "K'": [[76, 86], [80, 89]], "V'": [[73, 84], [75, 85]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Sergey Brin's. The grenade is Bill Gates's. The monkey is Jane Austen's. >. Answer with Yes or No. Can it be inferred from the premise that the author owns a kind of fruit? Answer: No\n Premise: < The monkey is Ada Lovelace's. The horse is Mark Twain's. The jersey is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur owns a kind of animal? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [28, 30], "Q": [55, 57], "K": [31, 34], "R": null, "K'": [[9, 21], [13, 24]], "V'": [[6, 17], [8, 20]], "example": [1, 67]}, {"END": [133, 134], "A": [130, 131], "V": [93, 96], "Q": [121, 125], "K": [97, 100], "R": null, "K'": [[76, 86], [80, 89]], "V'": [[73, 84], [75, 85]], "example": [68, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Mark Twain's. The grenade is Ed Sheeran's. The trousers is Leonardo DiCaprio's. >. Answer with Yes or No. Can it be inferred from the premise that the musician owns a kind of weapon? Answer: Yes\n Premise: < The grenade is Natalie Portman's. The violin is Michelangelo's. The beetle is Frank Lloyd Wright's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of instrument? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [16, 19], "Q": [58, 61], "K": [20, 24], "R": null, "K'": [[9, 32], [12, 37]], "V'": [[6, 28], [8, 31]], "example": [1, 71]}, {"END": [137, 138], "A": [134, 135], "V": [89, 91], "Q": [127, 129], "K": [92, 95], "R": null, "K'": [[81, 103], [85, 106]], "V'": [[77, 99], [80, 102]], "example": [72, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Mark Twain's. The grenade is Ed Sheeran's. The trousers is Leonardo DiCaprio's. >. Answer with Yes or No. Can it be inferred from the premise that the musician owns a kind of weapon? Answer: Yes\n Premise: < The grenade is Natalie Portman's. The violin is Michelangelo's. The beetle is Frank Lloyd Wright's. >. Answer with Yes or No. Can it be inferred from the premise that the artist owns a kind of weapon? Answer: No\n", "ranges": [{"END": [69, 70], "A": [66, 67], "V": [16, 19], "Q": [58, 61], "K": [20, 24], "R": null, "K'": [[9, 32], [12, 37]], "V'": [[6, 28], [8, 31]], "example": [1, 71]}, {"END": [137, 138], "A": [134, 135], "V": [89, 91], "Q": [127, 129], "K": [92, 95], "R": null, "K'": [[81, 103], [85, 106]], "V'": [[77, 99], [80, 102]], "example": [72, 139]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Lionel Messi has pig. Usain Bolt has shirt. Jennifer Lawrence has kiwi. >. The athlete does not own a kind of fruit\n < Albert Einstein has spaghetti. Richard Dawkins has plum. Dr. Michio Kaku has basketball. >. The scientist does not own a kind of sport\n", "ranges": [{"END": [35, 36], "A'": [36, 37], "V'": [22, 24], "Q": [27, 30], "K'": [18, 21], "R": [31, 32], "K": [[2, 10], [6, 14]], "V": [[7, 15], [9, 17]], "example": [1, 37]}, {"END": [73, 74], "A'": [74, 75], "V'": [61, 62], "Q": [65, 68], "K'": [54, 60], "R": [69, 70], "K": [[39, 47], [42, 50]], "V": [[43, 51], [46, 53]], "example": [38, 75]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Rihanna has grenade. Carl Sagan has blueberries. Taylor Swift has meat. >. The musician does not own a kind of fruit\n < Oprah Winfrey has spaghetti. Larry Page has cocktail. LeBron James has banana. >. The entrepreneur does not own a kind of fruit\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [14, 17], "Q": [25, 28], "K'": [10, 13], "R": [29, 30], "K": [[2, 18], [5, 20]], "V": [[6, 21], [9, 22]], "example": [1, 35]}, {"END": [73, 74], "A'": [74, 75], "V'": [59, 61], "Q": [64, 68], "K'": [54, 58], "R": [69, 70], "K": [[37, 47], [42, 49]], "V": [[43, 50], [46, 53]], "example": [36, 75]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Beyonc\u00e9 has lime. Mark Twain has baseball. Ernest Hemingway has tea. >. The author does not own a kind of fruit\n < Ieoh Ming Pei has handgun. Mies van der Rohe has lime. Vincent van Gogh has hamburger. >. The architect does not own a kind of food\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [6, 8], "Q": [24, 26], "K'": [2, 5], "R": [27, 28], "K": [[9, 15], [12, 19]], "V": [[13, 20], [14, 21]], "example": [1, 33]}, {"END": [75, 76], "A'": [76, 77], "V'": [62, 65], "Q": [68, 70], "K'": [56, 61], "R": [71, 72], "K": [[35, 46], [42, 52]], "V": [[43, 53], [45, 55]], "example": [34, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Dr. Temple Grandin has jersey. Dr. Mehmet Oz has pistol. J.K. Rowling has pizza. >. The doctor does not own a kind of food\n < Mark Zuckerberg has soda. Hillary Clinton has uniform. Barack Obama has goat. >. The lawyer does not own a kind of drink\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [30, 32], "Q": [35, 37], "K'": [23, 29], "R": [38, 39], "K": [[2, 12], [7, 19]], "V": [[8, 20], [11, 22]], "example": [1, 44]}, {"END": [78, 79], "A'": [79, 80], "V'": [51, 53], "Q": [71, 73], "K'": [46, 50], "R": [74, 75], "K": [[54, 61], [58, 65]], "V": [[59, 66], [60, 68]], "example": [45, 80]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Meryl Streep has mango. Hillary Clinton has T-shirt. Alan Dershowitz has mouse. >. The lawyer does not own a kind of fruit\n < Drake has piano. Alan Dershowitz has squirrel. Hillary Clinton has soda. >. The lawyer does not own a kind of instrument\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [9, 11], "Q": [32, 34], "K'": [2, 8], "R": [35, 36], "K": [[12, 22], [16, 27]], "V": [[17, 28], [21, 29]], "example": [1, 41]}, {"END": [75, 76], "A'": [76, 77], "V'": [46, 47], "Q": [68, 70], "K'": [43, 45], "R": [71, 72], "K": [[48, 58], [53, 62]], "V": [[54, 63], [57, 65]], "example": [42, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Usain Bolt has pistol. Lionel Messi has cat. Jane Austen has piano. >. The athlete does not own a kind of instrument\n < Taylor Swift has baseball. Thurgood Marshall has guitar. Alan Dershowitz has cherries. >. The lawyer does not own a kind of sport\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [21, 22], "Q": [25, 28], "K'": [17, 20], "R": [29, 30], "K": [[2, 10], [6, 14]], "V": [[7, 15], [9, 16]], "example": [1, 35]}, {"END": [67, 68], "A'": [68, 69], "V'": [40, 41], "Q": [60, 62], "K'": [37, 39], "R": [63, 64], "K": [[42, 49], [46, 54]], "V": [[47, 55], [48, 57]], "example": [36, 69]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Dr. Jane Goodall has guitar. Dr. Sylvia Earle has hamburger. Simone Biles has gorilla. >. The doctor does not own a kind of animal\n < Ada Lovelace has peach. Albert Einstein has jeep. Johnny Depp has pizza. >. The scientist does not own a kind of food\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [26, 29], "Q": [32, 34], "K'": [21, 25], "R": [35, 36], "K": [[2, 10], [7, 16]], "V": [[8, 17], [9, 20]], "example": [1, 41]}, {"END": [75, 76], "A'": [76, 77], "V'": [62, 64], "Q": [67, 70], "K'": [58, 61], "R": [71, 72], "K": [[43, 51], [47, 54]], "V": [[48, 55], [50, 57]], "example": [42, 77]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "< Drake has uniform. Michael Phelps has horse. Simone Biles has monkey. >. The athlete does not own a kind of clothes\n < Alex Morgan has papaya. Usain Bolt has pear. Zaha Hadid has soda. >. The athlete does not own a kind of drink\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [5, 6], "Q": [24, 27], "K'": [2, 4], "R": [28, 29], "K": [[7, 14], [11, 18]], "V": [[12, 19], [13, 21]], "example": [1, 34]}, {"END": [68, 69], "A'": [69, 70], "V'": [55, 57], "Q": [60, 63], "K'": [50, 54], "R": [64, 65], "K": [[36, 42], [38, 46]], "V": [[39, 47], [41, 49]], "example": [35, 70]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lionel Messi has pig. Usain Bolt has shirt. Jennifer Lawrence has kiwi. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of animal? Answer: No\n Premise: < Alan Dershowitz has shoes. Barack Obama has spaghetti. Dr. Temple Grandin has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [25, 27], "Q": [46, 49], "K'": [21, 24], "R": [50, 51], "K": [[5, 13], [9, 17]], "V": [[10, 18], [12, 20]], "example": [1, 60]}, {"END": [121, 122], "A'": [118, 119], "V'": [89, 91], "Q": [110, 112], "K'": [83, 88], "R": [113, 114], "K": [[65, 74], [70, 78]], "V": [[71, 79], [73, 82]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lionel Messi has pig. Usain Bolt has shirt. Jennifer Lawrence has kiwi. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of animal? Answer: No\n Premise: < Alan Dershowitz has shoes. Barack Obama has spaghetti. Dr. Temple Grandin has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of food? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [25, 27], "Q": [46, 49], "K'": [21, 24], "R": [50, 51], "K": [[5, 13], [9, 17]], "V": [[10, 18], [12, 20]], "example": [1, 60]}, {"END": [121, 122], "A'": [118, 119], "V'": [89, 91], "Q": [110, 112], "K'": [83, 88], "R": [113, 114], "K": [[65, 74], [70, 78]], "V": [[71, 79], [73, 82]], "example": [61, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has elephant. Serena Williams has piano. Simone Biles has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < Kanye West has plum. Vincent van Gogh has monkey. Pablo Picasso has bee. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of fruit? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [15, 18], "Q": [53, 56], "K'": [5, 14], "R": [57, 58], "K": [[19, 25], [22, 29]], "V": [[23, 30], [24, 34]], "example": [1, 67]}, {"END": [125, 126], "A'": [122, 123], "V'": [77, 79], "Q": [114, 116], "K'": [72, 76], "R": [117, 118], "K": [[80, 89], [85, 92]], "V": [[86, 93], [88, 95]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < J.R.R. Tolkien has elephant. Serena Williams has piano. Simone Biles has watermelon. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < Kanye West has plum. Vincent van Gogh has monkey. Pablo Picasso has bee. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of animal? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [15, 18], "Q": [53, 56], "K'": [5, 14], "R": [57, 58], "K": [[19, 25], [22, 29]], "V": [[23, 30], [24, 34]], "example": [1, 67]}, {"END": [125, 126], "A'": [122, 123], "V'": [77, 79], "Q": [114, 116], "K'": [72, 76], "R": [117, 118], "K": [[80, 89], [85, 92]], "V": [[86, 93], [88, 95]], "example": [68, 127]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo has durian. Tom Brady has bus. Sonia Sotomayor has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < Stephen King has violin. Jeff Bezos has spaghetti. Toni Morrison has gun. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [28, 30], "Q": [49, 52], "K'": [20, 27], "R": [53, 54], "K": [[5, 14], [10, 17]], "V": [[11, 18], [13, 19]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [78, 81], "Q": [108, 110], "K'": [74, 77], "R": [111, 112], "K": [[68, 82], [70, 87]], "V": [[71, 88], [73, 89]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Cristiano Ronaldo has durian. Tom Brady has bus. Sonia Sotomayor has shoes. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < Stephen King has violin. Jeff Bezos has spaghetti. Toni Morrison has gun. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own a kind of instrument? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [58, 59], "V'": [28, 30], "Q": [49, 52], "K'": [20, 27], "R": [53, 54], "K": [[5, 14], [10, 17]], "V": [[11, 18], [13, 19]], "example": [1, 63]}, {"END": [119, 120], "A'": [116, 117], "V'": [78, 81], "Q": [108, 110], "K'": [74, 77], "R": [111, 112], "K": [[68, 82], [70, 87]], "V": [[71, 88], [73, 89]], "example": [64, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg has elephant. Antoni Gaud\u00ed has banana. Bill Gates has squirrel. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: No\n Premise: < Clarence Darrow has lion. Larry Page has cake. Warren Buffett has piano. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [20, 22], "Q": [49, 53], "K'": [14, 19], "R": [54, 55], "K": [[5, 23], [9, 26]], "V": [[10, 27], [13, 30]], "example": [1, 64]}, {"END": [120, 121], "A'": [117, 118], "V'": [74, 76], "Q": [107, 111], "K'": [69, 73], "R": [112, 113], "K": [[77, 83], [79, 86]], "V": [[80, 87], [82, 88]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark Zuckerberg has elephant. Antoni Gaud\u00ed has banana. Bill Gates has squirrel. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: No\n Premise: < Clarence Darrow has lion. Larry Page has cake. Warren Buffett has piano. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of food? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [59, 60], "V'": [20, 22], "Q": [49, 53], "K'": [14, 19], "R": [54, 55], "K": [[5, 23], [9, 26]], "V": [[10, 27], [13, 30]], "example": [1, 64]}, {"END": [120, 121], "A'": [117, 118], "V'": [74, 76], "Q": [107, 111], "K'": [69, 73], "R": [112, 113], "K": [[77, 83], [79, 86]], "V": [[80, 87], [82, 88]], "example": [65, 122]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Drake has piano. Alan Dershowitz has squirrel. Hillary Clinton has soda. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of drink? Answer: No\n Premise: < Denzel Washington has jeep. Julia Roberts has cat. Kanye West has burger. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [8, 9], "Q": [46, 48], "K'": [5, 7], "R": [49, 50], "K": [[10, 20], [15, 24]], "V": [[16, 25], [19, 27]], "example": [1, 59]}, {"END": [113, 114], "A'": [110, 111], "V'": [81, 83], "Q": [102, 104], "K'": [76, 80], "R": [105, 106], "K": [[64, 71], [67, 73]], "V": [[68, 74], [70, 75]], "example": [60, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Drake has piano. Alan Dershowitz has squirrel. Hillary Clinton has soda. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of drink? Answer: No\n Premise: < Denzel Washington has jeep. Julia Roberts has cat. Kanye West has burger. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [54, 55], "V'": [8, 9], "Q": [46, 48], "K'": [5, 7], "R": [49, 50], "K": [[10, 20], [15, 24]], "V": [[16, 25], [19, 27]], "example": [1, 59]}, {"END": [113, 114], "A'": [110, 111], "V'": [81, 83], "Q": [102, 104], "K'": [76, 80], "R": [105, 106], "K": [[64, 71], [67, 73]], "V": [[68, 74], [70, 75]], "example": [60, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Thurgood Marshall has wolf. Johnnie Cochran has spaghetti. Michelangelo has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of animal? Answer: No\n Premise: < Frida Kahlo has lemon. Dr. Anthony Fauci has sheep. Jackson Pollock has cherries. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of animal? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [27, 30], "Q": [49, 51], "K'": [23, 26], "R": [52, 53], "K": [[5, 13], [9, 18]], "V": [[10, 19], [12, 22]], "example": [1, 62]}, {"END": [121, 122], "A'": [118, 119], "V'": [83, 84], "Q": [110, 112], "K'": [76, 82], "R": [113, 114], "K": [[67, 85], [72, 88]], "V": [[73, 89], [75, 91]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Thurgood Marshall has wolf. Johnnie Cochran has spaghetti. Michelangelo has jersey. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of animal? Answer: No\n Premise: < Frida Kahlo has lemon. Dr. Anthony Fauci has sheep. Jackson Pollock has cherries. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [57, 58], "V'": [27, 30], "Q": [49, 51], "K'": [23, 26], "R": [52, 53], "K": [[5, 13], [9, 18]], "V": [[10, 19], [12, 22]], "example": [1, 62]}, {"END": [121, 122], "A'": [118, 119], "V'": [83, 84], "Q": [110, 112], "K'": [76, 82], "R": [113, 114], "K": [[67, 85], [72, 88]], "V": [[73, 89], [75, 91]], "example": [63, 123]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Jane Goodall has burger. Frida Kahlo has revolver. Andy Warhol has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of food? Answer: Yes\n Premise: < Simone Biles has cannon. Michael Phelps has jeans. Natalie Portman has meat. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [11, 13], "Q": [48, 50], "K'": [5, 10], "R": [51, 52], "K": [[14, 23], [19, 26]], "V": [[20, 27], [22, 29]], "example": [1, 61]}, {"END": [119, 120], "A'": [116, 117], "V'": [87, 88], "Q": [107, 110], "K'": [82, 86], "R": [111, 112], "K": [[66, 74], [70, 78]], "V": [[71, 79], [73, 81]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Jane Goodall has burger. Frida Kahlo has revolver. Andy Warhol has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of food? Answer: Yes\n Premise: < Simone Biles has cannon. Michael Phelps has jeans. Natalie Portman has meat. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of clothes? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [56, 57], "V'": [11, 13], "Q": [48, 50], "K'": [5, 10], "R": [51, 52], "K": [[14, 23], [19, 26]], "V": [[20, 27], [22, 29]], "example": [1, 61]}, {"END": [119, 120], "A'": [116, 117], "V'": [87, 88], "Q": [107, 110], "K'": [82, 86], "R": [111, 112], "K": [[66, 74], [70, 78]], "V": [[71, 79], [73, 81]], "example": [62, 121]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Johnny Depp has bus. Leonardo DiCaprio has jeep. Frida Kahlo has soda. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n Premise: < Denzel Washington has pistol. Natalie Portman has squirrel. Mark Twain has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [26, 28], "Q": [47, 49], "K'": [20, 25], "R": [50, 51], "K": [[5, 11], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 60]}, {"END": [116, 117], "A'": [113, 114], "V'": [85, 86], "Q": [105, 107], "K'": [81, 84], "R": [108, 109], "K": [[65, 72], [68, 76]], "V": [[69, 77], [71, 80]], "example": [61, 118]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3]", "texts": "Premise: < Johnny Depp has bus. Leonardo DiCaprio has jeep. Frida Kahlo has soda. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n Premise: < Denzel Washington has pistol. Natalie Portman has squirrel. Mark Twain has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of weapon? Answer: No\n", "ranges": [{"END": [58, 59], "A'": [55, 56], "V'": [26, 28], "Q": [47, 49], "K'": [20, 25], "R": [50, 51], "K": [[5, 11], [8, 16]], "V": [[9, 17], [10, 19]], "example": [1, 60]}, {"END": [116, 117], "A'": [113, 114], "V'": [85, 86], "Q": [105, 107], "K'": [81, 84], "R": [108, 109], "K": [[65, 72], [68, 76]], "V": [[69, 77], [71, 80]], "example": [61, 118]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pig is Lionel Messi's. The shirt is Usain Bolt's. The kiwi is Jennifer Lawrence's. >. The athlete does not own a kind of fruit\n < The spaghetti is Albert Einstein's. The plum is Richard Dawkins's. The basketball is Dr. Michio Kaku's. >. The scientist does not own a kind of sport\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [25, 27], "Q": [36, 39], "K'": [28, 31], "R": [40, 41], "K": [[6, 17], [10, 21]], "V": [[3, 14], [5, 16]], "example": [1, 46]}, {"END": [91, 92], "A'": [92, 93], "V'": [70, 71], "Q": [83, 86], "K'": [72, 78], "R": [87, 88], "K": [[53, 63], [56, 66]], "V": [[49, 60], [52, 62]], "example": [47, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The grenade is Rihanna's. The blueberries is Carl Sagan's. The meat is Taylor Swift's. >. The musician does not own a kind of fruit\n < The spaghetti is Oprah Winfrey's. The cocktail is Larry Page's. The banana is LeBron James's. >. The entrepreneur does not own a kind of fruit\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [14, 17], "Q": [34, 37], "K'": [18, 21], "R": [38, 39], "K": [[7, 27], [10, 29]], "V": [[3, 25], [6, 26]], "example": [1, 44]}, {"END": [91, 92], "A'": [92, 93], "V'": [70, 72], "Q": [82, 86], "K'": [73, 77], "R": [87, 88], "K": [[51, 64], [56, 66]], "V": [[47, 60], [50, 63]], "example": [45, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lime is Beyonc\u00e9's. The baseball is Mark Twain's. The tea is Ernest Hemingway's. >. The author does not own a kind of fruit\n < The handgun is Ieoh Ming Pei's. The lime is Mies van der Rohe's. The hamburger is Vincent van Gogh's. >. The architect does not own a kind of food\n", "ranges": [{"END": [40, 41], "A'": [41, 42], "V'": [3, 5], "Q": [33, 35], "K'": [6, 9], "R": [36, 37], "K": [[15, 24], [18, 28]], "V": [[13, 22], [14, 23]], "example": [1, 42]}, {"END": [93, 94], "A'": [94, 95], "V'": [72, 75], "Q": [86, 88], "K'": [76, 81], "R": [89, 90], "K": [[48, 62], [55, 68]], "V": [[45, 59], [47, 61]], "example": [43, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jersey is Dr. Temple Grandin's. The pistol is Dr. Mehmet Oz's. The pizza is J.K. Rowling's. >. The doctor does not own a kind of food\n < The soda is Mark Zuckerberg's. The uniform is Hillary Clinton's. The goat is Barack Obama's. >. The lawyer does not own a kind of drink\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [30, 32], "Q": [44, 46], "K'": [33, 39], "R": [47, 48], "K": [[7, 19], [12, 26]], "V": [[3, 16], [6, 18]], "example": [1, 53]}, {"END": [96, 97], "A'": [97, 98], "V'": [56, 58], "Q": [89, 91], "K'": [59, 63], "R": [92, 93], "K": [[69, 80], [73, 84]], "V": [[67, 77], [68, 79]], "example": [54, 98]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mango is Meryl Streep's. T-shirt is Hillary Clinton's. The mouse is Alan Dershowitz's. >. The lawyer does not own a kind of fruit\n < The piano is Drake's. The squirrel is Alan Dershowitz's. The soda is Hillary Clinton's. >. The lawyer does not own a kind of instrument\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [3, 5], "Q": [40, 42], "K'": [6, 12], "R": [43, 44], "K": [[20, 30], [24, 35]], "V": [[15, 28], [19, 29]], "example": [1, 49]}, {"END": [92, 93], "A'": [93, 94], "V'": [52, 53], "Q": [85, 87], "K'": [54, 56], "R": [88, 89], "K": [[64, 76], [69, 80]], "V": [[60, 73], [63, 75]], "example": [50, 94]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The pistol is Usain Bolt's. The cat is Lionel Messi's. The piano is Jane Austen's. >. The athlete does not own a kind of instrument\n < The baseball is Taylor Swift's. The guitar is Thurgood Marshall's. The cherries is Alan Dershowitz's. >. The lawyer does not own a kind of sport\n", "ranges": [{"END": [42, 43], "A'": [43, 44], "V'": [24, 25], "Q": [34, 37], "K'": [26, 29], "R": [38, 39], "K": [[6, 16], [10, 20]], "V": [[3, 14], [5, 15]], "example": [1, 44]}, {"END": [85, 86], "A'": [86, 87], "V'": [47, 48], "Q": [78, 80], "K'": [49, 51], "R": [81, 82], "K": [[57, 68], [61, 73]], "V": [[55, 65], [56, 67]], "example": [45, 87]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The guitar is Dr. Jane Goodall's. The hamburger is Dr. Sylvia Earle's. The gorilla is Simone Biles's. >. The doctor does not own a kind of animal\n < The peach is Ada Lovelace's. The jeep is Albert Einstein's. The pizza is Johnny Depp's. >. The scientist does not own a kind of food\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [28, 31], "Q": [41, 43], "K'": [32, 36], "R": [44, 45], "K": [[5, 18], [10, 24]], "V": [[3, 14], [4, 17]], "example": [1, 50]}, {"END": [93, 94], "A'": [94, 95], "V'": [74, 76], "Q": [85, 88], "K'": [77, 80], "R": [89, 90], "K": [[56, 67], [60, 70]], "V": [[53, 64], [55, 66]], "example": [51, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The uniform is Drake's. The horse is Michael Phelps's. The monkey is Simone Biles's. >. The athlete does not own a kind of clothes\n < The papaya is Alex Morgan's. The pear is Usain Bolt's. The soda is Zaha Hadid's. >. The athlete does not own a kind of drink\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [3, 4], "Q": [33, 36], "K'": [5, 7], "R": [37, 38], "K": [[13, 24], [17, 28]], "V": [[11, 21], [12, 23]], "example": [1, 43]}, {"END": [86, 87], "A'": [87, 88], "V'": [66, 68], "Q": [78, 81], "K'": [69, 73], "R": [82, 83], "K": [[49, 58], [51, 62]], "V": [[46, 55], [48, 57]], "example": [44, 88]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Lionel Messi's. The shirt is Usain Bolt's. The kiwi is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of animal? Answer: No\n Premise: < The shoes is Alan Dershowitz's. The spaghetti is Barack Obama's. The jeep is Dr. Temple Grandin's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of vehicle? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [28, 30], "Q": [55, 58], "K'": [31, 34], "R": [59, 60], "K": [[9, 20], [13, 24]], "V": [[6, 17], [8, 19]], "example": [1, 69]}, {"END": [139, 140], "A'": [136, 137], "V'": [99, 101], "Q": [128, 130], "K'": [102, 107], "R": [131, 132], "K": [[78, 91], [83, 95]], "V": [[75, 87], [77, 90]], "example": [70, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The pig is Lionel Messi's. The shirt is Usain Bolt's. The kiwi is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of animal? Answer: No\n Premise: < The shoes is Alan Dershowitz's. The spaghetti is Barack Obama's. The jeep is Dr. Temple Grandin's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of food? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [28, 30], "Q": [55, 58], "K'": [31, 34], "R": [59, 60], "K": [[9, 20], [13, 24]], "V": [[6, 17], [8, 19]], "example": [1, 69]}, {"END": [139, 140], "A'": [136, 137], "V'": [99, 101], "Q": [128, 130], "K'": [102, 107], "R": [131, 132], "K": [[78, 91], [83, 95]], "V": [[75, 87], [77, 90]], "example": [70, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is J.R.R. Tolkien's. The piano is Serena Williams's. The watermelon is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < The plum is Kanye West's. The monkey is Vincent van Gogh's. The bee is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of fruit? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [6, 9], "Q": [62, 65], "K'": [10, 19], "R": [66, 67], "K": [[25, 37], [28, 41]], "V": [[23, 32], [24, 36]], "example": [1, 76]}, {"END": [143, 144], "A'": [140, 141], "V'": [82, 84], "Q": [132, 134], "K'": [85, 89], "R": [135, 136], "K": [[96, 108], [101, 111]], "V": [[93, 105], [95, 107]], "example": [77, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is J.R.R. Tolkien's. The piano is Serena Williams's. The watermelon is Simone Biles's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < The plum is Kanye West's. The monkey is Vincent van Gogh's. The bee is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of animal? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [6, 9], "Q": [62, 65], "K'": [10, 19], "R": [66, 67], "K": [[25, 37], [28, 41]], "V": [[23, 32], [24, 36]], "example": [1, 76]}, {"END": [143, 144], "A'": [140, 141], "V'": [82, 84], "Q": [132, 134], "K'": [85, 89], "R": [135, 136], "K": [[96, 108], [101, 111]], "V": [[93, 105], [95, 107]], "example": [77, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Cristiano Ronaldo's. The bus is Tom Brady's. The shoes is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < The violin is Stephen King's. The spaghetti is Jeff Bezos's. The gun is Toni Morrison's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [27, 29], "Q": [58, 61], "K'": [30, 37], "R": [62, 63], "K": [[9, 20], [14, 23]], "V": [[6, 18], [8, 19]], "example": [1, 72]}, {"END": [137, 138], "A'": [134, 135], "V'": [87, 90], "Q": [126, 128], "K'": [91, 94], "R": [129, 130], "K": [[81, 100], [83, 105]], "V": [[78, 98], [80, 99]], "example": [73, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The durian is Cristiano Ronaldo's. The bus is Tom Brady's. The shoes is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of fruit? Answer: No\n Premise: < The violin is Stephen King's. The spaghetti is Jeff Bezos's. The gun is Toni Morrison's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not own a kind of instrument? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [67, 68], "V'": [27, 29], "Q": [58, 61], "K'": [30, 37], "R": [62, 63], "K": [[9, 20], [14, 23]], "V": [[6, 18], [8, 19]], "example": [1, 72]}, {"END": [137, 138], "A'": [134, 135], "V'": [87, 90], "Q": [126, 128], "K'": [91, 94], "R": [129, 130], "K": [[81, 100], [83, 105]], "V": [[78, 98], [80, 99]], "example": [73, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Mark Zuckerberg's. The banana is Antoni Gaud\u00ed's. The squirrel is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: No\n Premise: < The lion is Clarence Darrow's. The cake is Larry Page's. The piano is Warren Buffett's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [18, 20], "Q": [58, 62], "K'": [21, 26], "R": [63, 64], "K": [[10, 34], [14, 37]], "V": [[6, 30], [9, 33]], "example": [1, 73]}, {"END": [138, 139], "A'": [135, 136], "V'": [79, 81], "Q": [125, 129], "K'": [82, 86], "R": [130, 131], "K": [[93, 101], [95, 104]], "V": [[90, 99], [92, 100]], "example": [74, 140]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The elephant is Mark Zuckerberg's. The banana is Antoni Gaud\u00ed's. The squirrel is Bill Gates's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of animal? Answer: No\n Premise: < The lion is Clarence Darrow's. The cake is Larry Page's. The piano is Warren Buffett's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not own a kind of food? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [18, 20], "Q": [58, 62], "K'": [21, 26], "R": [63, 64], "K": [[10, 34], [14, 37]], "V": [[6, 30], [9, 33]], "example": [1, 73]}, {"END": [138, 139], "A'": [135, 136], "V'": [79, 81], "Q": [125, 129], "K'": [82, 86], "R": [130, 131], "K": [[93, 101], [95, 104]], "V": [[90, 99], [92, 100]], "example": [74, 140]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Drake's. The squirrel is Alan Dershowitz's. The soda is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of drink? Answer: No\n Premise: < The jeep is Denzel Washington's. The cat is Julia Roberts's. The burger is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [6, 7], "Q": [55, 57], "K'": [8, 10], "R": [58, 59], "K": [[18, 30], [23, 34]], "V": [[14, 27], [17, 29]], "example": [1, 68]}, {"END": [131, 132], "A'": [128, 129], "V'": [92, 94], "Q": [120, 122], "K'": [95, 99], "R": [123, 124], "K": [[77, 86], [80, 88]], "V": [[74, 84], [76, 85]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Drake's. The squirrel is Alan Dershowitz's. The soda is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of drink? Answer: No\n Premise: < The jeep is Denzel Washington's. The cat is Julia Roberts's. The burger is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [6, 7], "Q": [55, 57], "K'": [8, 10], "R": [58, 59], "K": [[18, 30], [23, 34]], "V": [[14, 27], [17, 29]], "example": [1, 68]}, {"END": [131, 132], "A'": [128, 129], "V'": [92, 94], "Q": [120, 122], "K'": [95, 99], "R": [123, 124], "K": [[77, 86], [80, 88]], "V": [[74, 84], [76, 85]], "example": [69, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The wolf is Thurgood Marshall's. The spaghetti is Johnnie Cochran's. The jersey is Michelangelo's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of animal? Answer: No\n Premise: < The lemon is Frida Kahlo's. The sheep is Dr. Anthony Fauci's. The cherries is Jackson Pollock's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of animal? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [66, 67], "V'": [30, 33], "Q": [58, 60], "K'": [34, 37], "R": [61, 62], "K": [[9, 21], [13, 26]], "V": [[6, 17], [8, 20]], "example": [1, 71]}, {"END": [139, 140], "A'": [136, 137], "V'": [89, 90], "Q": [128, 130], "K'": [91, 97], "R": [131, 132], "K": [[80, 104], [85, 107]], "V": [[77, 101], [79, 103]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The wolf is Thurgood Marshall's. The spaghetti is Johnnie Cochran's. The jersey is Michelangelo's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not own a kind of animal? Answer: No\n Premise: < The lemon is Frida Kahlo's. The sheep is Dr. Anthony Fauci's. The cherries is Jackson Pollock's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of fruit? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [66, 67], "V'": [30, 33], "Q": [58, 60], "K'": [34, 37], "R": [61, 62], "K": [[9, 21], [13, 26]], "V": [[6, 17], [8, 20]], "example": [1, 71]}, {"END": [139, 140], "A'": [136, 137], "V'": [89, 90], "Q": [128, 130], "K'": [91, 97], "R": [131, 132], "K": [[80, 104], [85, 107]], "V": [[77, 101], [79, 103]], "example": [72, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Dr. Jane Goodall's. The revolver is Frida Kahlo's. The monkey is Andy Warhol's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of food? Answer: Yes\n Premise: < The cannon is Simone Biles's. The jeans is Michael Phelps's. The meat is Natalie Portman's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of food? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [6, 8], "Q": [57, 59], "K'": [9, 14], "R": [60, 61], "K": [[21, 33], [26, 36]], "V": [[18, 30], [20, 32]], "example": [1, 70]}, {"END": [137, 138], "A'": [134, 135], "V'": [98, 99], "Q": [125, 128], "K'": [100, 104], "R": [129, 130], "K": [[79, 90], [83, 94]], "V": [[76, 87], [78, 89]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The burger is Dr. Jane Goodall's. The revolver is Frida Kahlo's. The monkey is Andy Warhol's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not own a kind of food? Answer: Yes\n Premise: < The cannon is Simone Biles's. The jeans is Michael Phelps's. The meat is Natalie Portman's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not own a kind of clothes? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [6, 8], "Q": [57, 59], "K'": [9, 14], "R": [60, 61], "K": [[21, 33], [26, 36]], "V": [[18, 30], [20, 32]], "example": [1, 70]}, {"END": [137, 138], "A'": [134, 135], "V'": [98, 99], "Q": [125, 128], "K'": [100, 104], "R": [129, 130], "K": [[79, 90], [83, 94]], "V": [[76, 87], [78, 89]], "example": [71, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bus is Johnny Depp's. The jeep is Leonardo DiCaprio's. The soda is Frida Kahlo's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n Premise: < The pistol is Denzel Washington's. The squirrel is Natalie Portman's. The baseball is Mark Twain's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of sport? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [27, 29], "Q": [56, 58], "K'": [30, 35], "R": [59, 60], "K": [[8, 18], [11, 23]], "V": [[6, 15], [7, 17]], "example": [1, 69]}, {"END": [134, 135], "A'": [131, 132], "V'": [97, 98], "Q": [123, 125], "K'": [99, 102], "R": [126, 127], "K": [[78, 89], [81, 93]], "V": [[75, 85], [77, 88]], "example": [70, 136]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,kinds_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bus is Johnny Depp's. The jeep is Leonardo DiCaprio's. The soda is Frida Kahlo's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of vehicle? Answer: No\n Premise: < The pistol is Denzel Washington's. The squirrel is Natalie Portman's. The baseball is Mark Twain's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not own a kind of weapon? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [27, 29], "Q": [56, 58], "K'": [30, 35], "R": [59, 60], "K": [[8, 18], [11, 23]], "V": [[6, 15], [7, 17]], "example": [1, 69]}, {"END": [134, 135], "A'": [131, 132], "V'": [97, 98], "Q": [123, 125], "K'": [99, 102], "R": [126, 127], "K": [[78, 89], [81, 93]], "V": [[75, 85], [77, 88]], "example": [70, 136]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Taylor Swift has cake. Gloria Allred has burger. Tom Brady has apple. >. So who owns a kind of fruit? the athlete\n < Harper Lee has uniform. Justin Bieber has taxi. Clarence Darrow has meat. >. So who owns a kind of food? the lawyer\n", "ranges": [{"END": [33, 34], "A": [34, 36], "V": [16, 19], "Q": [31, 32], "K": [20, 21], "R": null, "K'": [[5, 13], [7, 15]], "V'": [[2, 8], [4, 12]], "example": [1, 36]}, {"END": [70, 71], "A": [71, 72], "V": [52, 56], "Q": [68, 69], "K": [57, 58], "R": null, "K'": [[42, 49], [43, 51]], "V'": [[38, 44], [41, 48]], "example": [37, 72]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Simone Biles has wine. Toni Morrison has bread. Sonia Sotomayor has rabbit. >. So who owns a kind of drink? the athlete\n < Johnny Depp has juice. Julia Roberts has cat. Frida Kahlo has football. >. So who owns a kind of sport? the artist\n", "ranges": [{"END": [39, 40], "A": [40, 42], "V": [2, 6], "Q": [37, 38], "K": [7, 8], "R": null, "K'": [[15, 25], [16, 27]], "V'": [[9, 17], [14, 24]], "example": [1, 42]}, {"END": [75, 76], "A": [76, 77], "V": [56, 61], "Q": [73, 74], "K": [62, 63], "R": null, "K'": [[48, 54], [50, 55]], "V'": [[44, 51], [47, 53]], "example": [43, 77]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Claude Monet has piano. George Orwell has cannon. Neil deGrasse Tyson has vodka. >. So who owns a kind of weapon? the author\n < Lionel Messi has spaghetti. J.K. Rowling has durian. Jennifer Lawrence has juice. >. So who owns a kind of drink? the actor\n", "ranges": [{"END": [38, 39], "A": [39, 40], "V": [8, 11], "Q": [36, 37], "K": [12, 14], "R": null, "K'": [[6, 23], [7, 26]], "V'": [[2, 15], [5, 22]], "example": [1, 40]}, {"END": [79, 80], "A": [80, 81], "V": [61, 64], "Q": [77, 78], "K": [65, 67], "R": null, "K'": [[47, 58], [50, 60]], "V'": [[42, 51], [46, 57]], "example": [41, 81]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Kanye West has mosquito. Roger Federer has football. Zaha Hadid has revolver. >. So who owns a kind of insect? the musician\n < Eminem has fox. Meryl Streep has mosquito. Pablo Picasso has cannon. >. So who owns a kind of insect? the actor\n", "ranges": [{"END": [36, 37], "A": [37, 39], "V": [2, 6], "Q": [34, 35], "K": [7, 10], "R": null, "K'": [[15, 22], [16, 24]], "V'": [[11, 17], [14, 21]], "example": [1, 39]}, {"END": [77, 78], "A": [78, 79], "V": [48, 54], "Q": [75, 76], "K": [55, 58], "R": null, "K'": [[45, 63], [47, 65]], "V'": [[41, 59], [44, 62]], "example": [40, 79]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Ieoh Ming Pei has blueberries. Thurgood Marshall has violin. Leonardo da Vinci has beetle. >. So who owns a kind of instrument? the lawyer\n < Sonia Sotomayor has strawberries. Rihanna has grenade. Mies van der Rohe has shirt. >. So who owns a kind of clothes? the architect\n", "ranges": [{"END": [43, 44], "A": [44, 45], "V": [14, 18], "Q": [41, 42], "K": [19, 21], "R": null, "K'": [[10, 28], [13, 31]], "V'": [[2, 22], [9, 27]], "example": [1, 45]}, {"END": [89, 90], "A": [90, 91], "V": [68, 74], "Q": [87, 88], "K": [75, 77], "R": null, "K'": [[55, 64], [59, 67]], "V'": [[47, 60], [54, 63]], "example": [46, 91]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Ruth Bader Ginsburg has elephant. Beyonc\u00e9 has vodka. Jennifer Lawrence has shirt. >. So who owns a kind of clothes? the actor\n < Rosie Franklin has juice. Michelangelo has trousers. Rihanna has apple. >. So who owns a kind of drink? the scientist\n", "ranges": [{"END": [39, 40], "A": [40, 41], "V": [21, 24], "Q": [37, 38], "K": [25, 27], "R": null, "K'": [[9, 17], [12, 20]], "V'": [[2, 13], [8, 16]], "example": [1, 41]}, {"END": [75, 76], "A": [76, 78], "V": [43, 46], "Q": [73, 74], "K": [47, 49], "R": null, "K'": [[54, 62], [57, 63]], "V'": [[50, 58], [53, 61]], "example": [42, 78]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Barack Obama has blackberries. Richard Dawkins has plum. Charlize Theron has T-shirt. >. So who owns a kind of clothes? the actor\n < Dr. Sylvia Earle has coffee. Lady Gaga has cow. Louis Sullivan has burger. >. So who owns a kind of food? the architect\n", "ranges": [{"END": [40, 41], "A": [41, 42], "V": [18, 23], "Q": [38, 39], "K": [24, 28], "R": null, "K'": [[7, 15], [10, 17]], "V'": [[2, 11], [6, 14]], "example": [1, 42]}, {"END": [78, 79], "A": [79, 80], "V": [59, 63], "Q": [76, 77], "K": [64, 66], "R": null, "K'": [[51, 57], [52, 58]], "V'": [[44, 53], [50, 56]], "example": [43, 80]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Dr. Anthony Fauci has grapes. Frida Kahlo has cannon. Salvador Dal\u00ed has T-shirt. >. So who owns a kind of fruit? the doctor\n < Mark Twain has baseball. Bill Gates has plum. Ada Lovelace has wine. >. So who owns a kind of fruit? the entrepreneur\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [2, 8], "Q": [40, 41], "K": [9, 12], "R": null, "K'": [[19, 26], [21, 30]], "V'": [[13, 22], [18, 25]], "example": [1, 44]}, {"END": [77, 78], "A": [78, 81], "V": [52, 55], "Q": [75, 76], "K": [56, 58], "R": null, "K'": [[50, 64], [51, 65]], "V'": [[46, 59], [49, 63]], "example": [45, 81]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Taylor Swift has cake. Gloria Allred has burger. Tom Brady has apple. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the athlete? Answer: Yes\n Premise: < Dr. Sylvia Earle has hamburger. Leonardo DiCaprio has cherries. Ada Lovelace has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is the doctor? Answer: Yes\n", "ranges": [{"END": [58, 59], "A": [53, 56], "V": [19, 22], "Q": [51, 52], "K": [23, 24], "R": null, "K'": [[8, 16], [10, 18]], "V'": [[5, 11], [7, 15]], "example": [1, 60]}, {"END": [126, 127], "A": [122, 124], "V": [65, 71], "Q": [120, 121], "K": [72, 75], "R": null, "K'": [[82, 90], [84, 93]], "V'": [[76, 85], [81, 89]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Taylor Swift has cake. Gloria Allred has burger. Tom Brady has apple. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the athlete? Answer: Yes\n Premise: < Dr. Sylvia Earle has hamburger. Leonardo DiCaprio has cherries. Ada Lovelace has trousers. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is the actor? Answer: No\n", "ranges": [{"END": [58, 59], "A": [53, 56], "V": [19, 22], "Q": [51, 52], "K": [23, 24], "R": null, "K'": [[8, 16], [10, 18]], "V'": [[5, 11], [7, 15]], "example": [1, 60]}, {"END": [126, 127], "A": [122, 124], "V": [65, 71], "Q": [120, 121], "K": [72, 75], "R": null, "K'": [[82, 90], [84, 93]], "V'": [[76, 85], [81, 89]], "example": [61, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mies van der Rohe has grenade. Hillary Clinton has blueberries. LeBron James has meat. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the architect? Answer: No\n Premise: < Oprah Winfrey has sheep. Vincent van Gogh has blackberries. J.R.R. Tolkien has gun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [16, 20], "Q": [58, 59], "K": [21, 24], "R": null, "K'": [[12, 30], [15, 31]], "V'": [[5, 25], [11, 29]], "example": [1, 66]}, {"END": [135, 136], "A": [129, 133], "V": [71, 76], "Q": [127, 128], "K": [77, 78], "R": null, "K'": [[85, 99], [88, 100]], "V'": [[79, 89], [84, 98]], "example": [67, 137]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mies van der Rohe has grenade. Hillary Clinton has blueberries. LeBron James has meat. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the architect? Answer: No\n Premise: < Oprah Winfrey has sheep. Vincent van Gogh has blackberries. J.R.R. Tolkien has gun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the artist? Answer: No\n", "ranges": [{"END": [64, 65], "A": [60, 62], "V": [16, 20], "Q": [58, 59], "K": [21, 24], "R": null, "K'": [[12, 30], [15, 31]], "V'": [[5, 25], [11, 29]], "example": [1, 66]}, {"END": [133, 134], "A": [129, 131], "V": [71, 76], "Q": [127, 128], "K": [77, 78], "R": null, "K'": [[85, 99], [88, 100]], "V'": [[79, 89], [84, 98]], "example": [67, 135]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Neil deGrasse Tyson has apple. Vincent van Gogh has bee. Dr. Neil deGrasse Tyson has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the scientist? Answer: No\n Premise: < Leonardo da Vinci has goat. Carl Sagan has beetle. Elon Musk has durian. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the scientist? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [64, 67], "V": [24, 33], "Q": [62, 63], "K": [34, 35], "R": null, "K'": [[13, 21], [14, 23]], "V'": [[5, 26, 15], [12, 33, 20]], "example": [1, 71]}, {"END": [134, 135], "A": [129, 132], "V": [85, 88], "Q": [127, 128], "K": [89, 92], "R": null, "K'": [[82, 98], [84, 100]], "V'": [[76, 93], [81, 97]], "example": [72, 136]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Neil deGrasse Tyson has apple. Vincent van Gogh has bee. Dr. Neil deGrasse Tyson has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the scientist? Answer: No\n Premise: < Leonardo da Vinci has goat. Carl Sagan has beetle. Elon Musk has durian. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the artist? Answer: No\n", "ranges": [{"END": [69, 70], "A": [64, 67], "V": [24, 33], "Q": [62, 63], "K": [34, 35], "R": null, "K'": [[13, 21], [14, 23]], "V'": [[5, 26, 15], [12, 33, 20]], "example": [1, 71]}, {"END": [133, 134], "A": [129, 131], "V": [85, 88], "Q": [127, 128], "K": [89, 92], "R": null, "K'": [[82, 98], [84, 100]], "V'": [[76, 93], [81, 97]], "example": [72, 135]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Eminem has plum. Meryl Streep has bus. Pablo Picasso has fox. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n Premise: < Tom Brady has motorcycle. Leonardo da Vinci has beetle. Rem Koolhaas has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the athlete? Answer: Yes\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 18], "Q": [54, 55], "K": [19, 20], "R": null, "K'": [[9, 25], [11, 27]], "V'": [[5, 21], [8, 24]], "example": [1, 62]}, {"END": [126, 127], "A": [121, 124], "V": [67, 70], "Q": [119, 120], "K": [71, 73], "R": null, "K'": [[80, 90], [83, 92]], "V'": [[74, 84], [79, 89]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Eminem has plum. Meryl Streep has bus. Pablo Picasso has fox. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n Premise: < Tom Brady has motorcycle. Leonardo da Vinci has beetle. Rem Koolhaas has handgun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n", "ranges": [{"END": [60, 61], "A": [56, 58], "V": [12, 18], "Q": [54, 55], "K": [19, 20], "R": null, "K'": [[9, 25], [11, 27]], "V'": [[5, 21], [8, 24]], "example": [1, 62]}, {"END": [125, 126], "A": [121, 123], "V": [67, 70], "Q": [119, 120], "K": [71, 73], "R": null, "K'": [[80, 90], [83, 92]], "V'": [[74, 84], [79, 89]], "example": [63, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Sylvia Earle has rabbit. Rihanna has football. Albert Einstein has grenade. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the doctor? Answer: No\n Premise: < Roger Federer has beetle. Johnny Depp has mango. Dr. Gabor Mat\u00e9 has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the athlete? Answer: Yes\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [15, 18], "Q": [55, 56], "K": [19, 20], "R": null, "K'": [[12, 25], [14, 28]], "V'": [[5, 21], [11, 24]], "example": [1, 63]}, {"END": [125, 126], "A": [120, 123], "V": [68, 71], "Q": [118, 119], "K": [72, 75], "R": null, "K'": [[80, 90], [82, 91]], "V'": [[76, 83], [79, 89]], "example": [64, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Sylvia Earle has rabbit. Rihanna has football. Albert Einstein has grenade. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the doctor? Answer: No\n Premise: < Roger Federer has beetle. Johnny Depp has mango. Dr. Gabor Mat\u00e9 has sheep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the actor? Answer: No\n", "ranges": [{"END": [61, 62], "A": [57, 59], "V": [15, 18], "Q": [55, 56], "K": [19, 20], "R": null, "K'": [[12, 25], [14, 28]], "V'": [[5, 21], [11, 24]], "example": [1, 63]}, {"END": [124, 125], "A": [120, 122], "V": [68, 71], "Q": [118, 119], "K": [72, 75], "R": null, "K'": [[80, 90], [82, 91]], "V'": [[76, 83], [79, 89]], "example": [64, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Neil deGrasse Tyson has guitar. Warren Buffett has cherries. Harper Lee has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the entrepreneur? Answer: No\n Premise: < Richard Dawkins has guitar. Johnny Depp has hamburger. LeBron James has gorilla. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the athlete? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [58, 62], "V": [24, 27], "Q": [56, 57], "K": [28, 29], "R": null, "K'": [[15, 21], [16, 23]], "V'": [[5, 17], [14, 20]], "example": [1, 66]}, {"END": [127, 128], "A": [122, 125], "V": [85, 89], "Q": [120, 121], "K": [90, 93], "R": null, "K'": [[75, 81], [76, 84]], "V'": [[71, 77], [74, 80]], "example": [67, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Neil deGrasse Tyson has guitar. Warren Buffett has cherries. Harper Lee has baseball. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the entrepreneur? Answer: No\n Premise: < Richard Dawkins has guitar. Johnny Depp has hamburger. LeBron James has gorilla. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the actor? Answer: No\n", "ranges": [{"END": [64, 65], "A": [58, 62], "V": [24, 27], "Q": [56, 57], "K": [28, 29], "R": null, "K'": [[15, 21], [16, 23]], "V'": [[5, 17], [14, 20]], "example": [1, 66]}, {"END": [126, 127], "A": [122, 124], "V": [85, 89], "Q": [120, 121], "K": [90, 93], "R": null, "K'": [[75, 81], [76, 84]], "V'": [[71, 77], [74, 80]], "example": [67, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has guitar. Georgia O'Keeffe has blackberries. Cristiano Ronaldo has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the athlete? Answer: No\n Premise: < Dr. Gabor Mat\u00e9 has plum. Usain Bolt has mouse. Neil deGrasse Tyson has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the athlete? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [59, 62], "V": [5, 8], "Q": [57, 58], "K": [9, 10], "R": null, "K'": [[18, 28], [21, 30]], "V'": [[11, 22], [17, 27]], "example": [1, 66]}, {"END": [134, 135], "A": [129, 132], "V": [81, 85], "Q": [127, 128], "K": [86, 87], "R": null, "K'": [[78, 96], [80, 100]], "V'": [[71, 88], [77, 95]], "example": [67, 136]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has guitar. Georgia O'Keeffe has blackberries. Cristiano Ronaldo has shotgun. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the athlete? Answer: No\n Premise: < Dr. Gabor Mat\u00e9 has plum. Usain Bolt has mouse. Neil deGrasse Tyson has strawberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the scientist? Answer: No\n", "ranges": [{"END": [64, 65], "A": [59, 62], "V": [5, 8], "Q": [57, 58], "K": [9, 10], "R": null, "K'": [[18, 28], [21, 30]], "V'": [[11, 22], [17, 27]], "example": [1, 66]}, {"END": [134, 135], "A": [129, 132], "V": [81, 85], "Q": [127, 128], "K": [86, 87], "R": null, "K'": [[78, 96], [80, 100]], "V'": [[71, 88], [77, 95]], "example": [67, 136]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz has piano. Dr. Sanjay Gupta has goose. Ed Sheeran has banana. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the musician? Answer: Yes\n Premise: < Alex Morgan has pizza. Kanye West has trousers. Sonia Sotomayor has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the lawyer? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [62, 65], "V": [26, 30], "Q": [60, 61], "K": [31, 33], "R": null, "K'": [[13, 23], [14, 25]], "V'": [[5, 15], [12, 22]], "example": [1, 69]}, {"END": [132, 133], "A": [128, 130], "V": [89, 96], "Q": [126, 127], "K": [97, 99], "R": null, "K'": [[77, 85], [79, 88]], "V'": [[74, 80], [76, 84]], "example": [70, 134]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz has piano. Dr. Sanjay Gupta has goose. Ed Sheeran has banana. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the musician? Answer: Yes\n Premise: < Alex Morgan has pizza. Kanye West has trousers. Sonia Sotomayor has monkey. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the musician? Answer: No\n", "ranges": [{"END": [67, 68], "A": [62, 65], "V": [26, 30], "Q": [60, 61], "K": [31, 33], "R": null, "K'": [[13, 23], [14, 25]], "V'": [[5, 15], [12, 22]], "example": [1, 69]}, {"END": [133, 134], "A": [128, 131], "V": [89, 96], "Q": [126, 127], "K": [97, 99], "R": null, "K'": [[77, 85], [79, 88]], "V'": [[74, 80], [76, 84]], "example": [70, 135]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cake is Taylor Swift's. The burger is Gloria Allred's. The apple is Tom Brady's. >. So who owns a kind of fruit? the athlete\n < The uniform is Harper Lee's. The taxi is Justin Bieber's. The meat is Clarence Darrow's. >. So who owns a kind of food? the lawyer\n", "ranges": [{"END": [42, 43], "A": [43, 45], "V": [25, 28], "Q": [40, 41], "K": [23, 24], "R": null, "K'": [[3, 12], [5, 14]], "V'": [[6, 15], [8, 19]], "example": [1, 45]}, {"END": [88, 89], "A": [89, 90], "V": [70, 74], "Q": [86, 87], "K": [68, 69], "R": null, "K'": [[48, 57], [49, 59]], "V'": [[50, 60], [53, 64]], "example": [46, 90]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The wine is Simone Biles's. The bread is Toni Morrison's. The rabbit is Sonia Sotomayor's. >. So who owns a kind of drink? the athlete\n < The juice is Johnny Depp's. The cat is Julia Roberts's. The football is Frida Kahlo's. >. So who owns a kind of sport? the artist\n", "ranges": [{"END": [48, 49], "A": [49, 51], "V": [5, 9], "Q": [46, 47], "K": [3, 4], "R": null, "K'": [[13, 24], [14, 26]], "V'": [[15, 27], [20, 34]], "example": [1, 51]}, {"END": [93, 94], "A": [94, 95], "V": [74, 79], "Q": [91, 92], "K": [72, 73], "R": null, "K'": [[54, 64], [56, 65]], "V'": [[57, 66], [60, 68]], "example": [52, 95]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The piano is Claude Monet's. The cannon is George Orwell's. The vodka is Neil deGrasse Tyson's. >. So who owns a kind of weapon? the author\n < The spaghetti is Lionel Messi's. The durian is J.K. Rowling's. The juice is Jennifer Lawrence's. >. So who owns a kind of drink? the actor\n", "ranges": [{"END": [47, 48], "A": [48, 49], "V": [15, 18], "Q": [45, 46], "K": [12, 14], "R": null, "K'": [[3, 22], [4, 25]], "V'": [[5, 26], [8, 33]], "example": [1, 49]}, {"END": [97, 98], "A": [98, 99], "V": [80, 83], "Q": [95, 96], "K": [77, 79], "R": null, "K'": [[52, 64], [55, 66]], "V'": [[56, 67], [60, 73]], "example": [50, 99]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The mosquito is Kanye West's. The football is Roger Federer's. The revolver is Zaha Hadid's. >. So who owns a kind of insect? the musician\n < The fox is Eminem's. The mosquito is Meryl Streep's. The cannon is Pablo Picasso's. >. So who owns a kind of insect? the actor\n", "ranges": [{"END": [45, 46], "A": [46, 48], "V": [7, 11], "Q": [43, 44], "K": [3, 6], "R": null, "K'": [[15, 24], [16, 26]], "V'": [[17, 27], [20, 31]], "example": [1, 48]}, {"END": [95, 96], "A": [96, 97], "V": [65, 71], "Q": [93, 94], "K": [61, 64], "R": null, "K'": [[51, 75], [53, 77]], "V'": [[54, 78], [57, 81]], "example": [49, 97]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blueberries is Ieoh Ming Pei's. The violin is Thurgood Marshall's. The beetle is Leonardo da Vinci's. >. So who owns a kind of instrument? the lawyer\n < The strawberries is Sonia Sotomayor's. The grenade is Rihanna's. The shirt is Mies van der Rohe's. >. So who owns a kind of clothes? the architect\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [21, 25], "Q": [50, 51], "K": [18, 20], "R": null, "K'": [[3, 29], [6, 32]], "V'": [[7, 33], [14, 38]], "example": [1, 54]}, {"END": [107, 108], "A": [108, 109], "V": [87, 93], "Q": [105, 106], "K": [84, 86], "R": null, "K'": [[57, 73], [61, 76]], "V'": [[62, 77], [69, 80]], "example": [55, 109]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The elephant is Ruth Bader Ginsburg's. The vodka is Beyonc\u00e9's. The shirt is Jennifer Lawrence's. >. So who owns a kind of clothes? the actor\n < The juice is Rosie Franklin's. The trousers is Michelangelo's. The apple is Rihanna's. >. So who owns a kind of drink? the scientist\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [31, 34], "Q": [46, 47], "K": [28, 30], "R": null, "K'": [[3, 17], [6, 20]], "V'": [[7, 21], [13, 24]], "example": [1, 50]}, {"END": [93, 94], "A": [94, 96], "V": [56, 59], "Q": [91, 92], "K": [53, 55], "R": null, "K'": [[63, 74], [66, 75]], "V'": [[67, 76], [70, 79]], "example": [51, 96]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The blackberries is Barack Obama's. The plum is Richard Dawkins's. T-shirt is Charlize Theron's. >. So who owns a kind of clothes? the actor\n < The coffee is Dr. Sylvia Earle's. The cow is Lady Gaga's. The burger is Louis Sullivan's. >. So who owns a kind of food? the architect\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [29, 34], "Q": [46, 47], "K": [24, 28], "R": null, "K'": [[3, 15], [6, 17]], "V'": [[7, 18], [11, 21]], "example": [1, 50]}, {"END": [95, 96], "A": [96, 97], "V": [77, 81], "Q": [93, 94], "K": [74, 76], "R": null, "K'": [[53, 65], [54, 66]], "V'": [[55, 67], [61, 70]], "example": [51, 97]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The grapes is Dr. Anthony Fauci's. The cannon is Frida Kahlo's. T-shirt is Salvador Dal\u00ed's. >. So who owns a kind of fruit? the doctor\n < The baseball is Mark Twain's. The plum is Bill Gates's. The wine is Ada Lovelace's. >. So who owns a kind of fruit? the entrepreneur\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [7, 13], "Q": [48, 49], "K": [3, 6], "R": null, "K'": [[17, 28], [19, 32]], "V'": [[20, 33], [25, 36]], "example": [1, 52]}, {"END": [94, 95], "A": [95, 98], "V": [67, 70], "Q": [92, 93], "K": [64, 66], "R": null, "K'": [[55, 74], [56, 75]], "V'": [[57, 76], [60, 80]], "example": [53, 98]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Taylor Swift's. The burger is Gloria Allred's. The apple is Tom Brady's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the athlete? Answer: Yes\n Premise: < The hamburger is Dr. Sylvia Earle's. The cherries is Leonardo DiCaprio's. The trousers is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is the doctor? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [62, 65], "V": [28, 31], "Q": [60, 61], "K": [26, 27], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 22]], "example": [1, 69]}, {"END": [144, 145], "A": [140, 142], "V": [79, 85], "Q": [138, 139], "K": [75, 78], "R": null, "K'": [[89, 101], [91, 104]], "V'": [[92, 105], [97, 109]], "example": [70, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The cake is Taylor Swift's. The burger is Gloria Allred's. The apple is Tom Brady's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the athlete? Answer: Yes\n Premise: < The hamburger is Dr. Sylvia Earle's. The cherries is Leonardo DiCaprio's. The trousers is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is the actor? Answer: No\n", "ranges": [{"END": [67, 68], "A": [62, 65], "V": [28, 31], "Q": [60, 61], "K": [26, 27], "R": null, "K'": [[6, 15], [8, 17]], "V'": [[9, 18], [11, 22]], "example": [1, 69]}, {"END": [144, 145], "A": [140, 142], "V": [79, 85], "Q": [138, 139], "K": [75, 78], "R": null, "K'": [[89, 101], [91, 104]], "V'": [[92, 105], [97, 109]], "example": [70, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The grenade is Mies van der Rohe's. The blueberries is Hillary Clinton's. The meat is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the architect? Answer: No\n Premise: < The sheep is Oprah Winfrey's. The blackberries is Vincent van Gogh's. The gun is J.R.R. Tolkien's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [69, 71], "V": [24, 28], "Q": [67, 68], "K": [20, 23], "R": null, "K'": [[6, 32], [9, 33]], "V'": [[10, 34], [16, 38]], "example": [1, 75]}, {"END": [153, 154], "A": [147, 151], "V": [83, 88], "Q": [145, 146], "K": [81, 82], "R": null, "K'": [[92, 105], [95, 106]], "V'": [[96, 107], [101, 116]], "example": [76, 155]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The grenade is Mies van der Rohe's. The blueberries is Hillary Clinton's. The meat is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the architect? Answer: No\n Premise: < The sheep is Oprah Winfrey's. The blackberries is Vincent van Gogh's. The gun is J.R.R. Tolkien's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the artist? Answer: No\n", "ranges": [{"END": [73, 74], "A": [69, 71], "V": [24, 28], "Q": [67, 68], "K": [20, 23], "R": null, "K'": [[6, 32], [9, 33]], "V'": [[10, 34], [16, 38]], "example": [1, 75]}, {"END": [151, 152], "A": [147, 149], "V": [83, 88], "Q": [145, 146], "K": [81, 82], "R": null, "K'": [[92, 105], [95, 106]], "V'": [[96, 107], [101, 116]], "example": [76, 153]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apple is Neil deGrasse Tyson's. The bee is Vincent van Gogh's. The guitar is Dr. Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the scientist? Answer: No\n Premise: < The goat is Leonardo da Vinci's. The beetle is Carl Sagan's. The durian is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the scientist? Answer: Yes\n", "ranges": [{"END": [78, 79], "A": [73, 76], "V": [33, 42], "Q": [71, 72], "K": [31, 32], "R": null, "K'": [[6, 19], [7, 21]], "V'": [[8, 35, 22], [15, 42, 27]], "example": [1, 80]}, {"END": [152, 153], "A": [147, 150], "V": [102, 105], "Q": [145, 146], "K": [98, 101], "R": null, "K'": [[86, 109], [88, 111]], "V'": [[89, 112], [94, 116]], "example": [81, 154]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The apple is Neil deGrasse Tyson's. The bee is Vincent van Gogh's. The guitar is Dr. Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the scientist? Answer: No\n Premise: < The goat is Leonardo da Vinci's. The beetle is Carl Sagan's. The durian is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the artist? Answer: No\n", "ranges": [{"END": [78, 79], "A": [73, 76], "V": [33, 42], "Q": [71, 72], "K": [31, 32], "R": null, "K'": [[6, 19], [7, 21]], "V'": [[8, 35, 22], [15, 42, 27]], "example": [1, 80]}, {"END": [151, 152], "A": [147, 149], "V": [102, 105], "Q": [145, 146], "K": [98, 101], "R": null, "K'": [[86, 109], [88, 111]], "V'": [[89, 112], [94, 116]], "example": [81, 153]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Eminem's. The bus is Meryl Streep's. The fox is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n Premise: < The motorcycle is Tom Brady's. The beetle is Leonardo da Vinci's. The handgun is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the athlete? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [18, 24], "Q": [63, 64], "K": [16, 17], "R": null, "K'": [[6, 28], [8, 30]], "V'": [[9, 31], [12, 34]], "example": [1, 71]}, {"END": [144, 145], "A": [139, 142], "V": [80, 83], "Q": [137, 138], "K": [77, 79], "R": null, "K'": [[87, 100], [90, 102]], "V'": [[91, 103], [96, 108]], "example": [72, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The plum is Eminem's. The bus is Meryl Streep's. The fox is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n Premise: < The motorcycle is Tom Brady's. The beetle is Leonardo da Vinci's. The handgun is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is the artist? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [18, 24], "Q": [63, 64], "K": [16, 17], "R": null, "K'": [[6, 28], [8, 30]], "V'": [[9, 31], [12, 34]], "example": [1, 71]}, {"END": [143, 144], "A": [139, 141], "V": [80, 83], "Q": [137, 138], "K": [77, 79], "R": null, "K'": [[87, 100], [90, 102]], "V'": [[91, 103], [96, 108]], "example": [72, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Dr. Sylvia Earle's. The football is Rihanna's. The grenade is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the doctor? Answer: No\n Premise: < The beetle is Roger Federer's. The mango is Johnny Depp's. The sheep is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the athlete? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [21, 24], "Q": [64, 65], "K": [19, 20], "R": null, "K'": [[6, 28], [8, 31]], "V'": [[9, 32], [15, 35]], "example": [1, 72]}, {"END": [143, 144], "A": [138, 141], "V": [82, 85], "Q": [136, 137], "K": [78, 81], "R": null, "K'": [[89, 99], [91, 100]], "V'": [[92, 101], [95, 107]], "example": [73, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The rabbit is Dr. Sylvia Earle's. The football is Rihanna's. The grenade is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the doctor? Answer: No\n Premise: < The beetle is Roger Federer's. The mango is Johnny Depp's. The sheep is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is the actor? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [21, 24], "Q": [64, 65], "K": [19, 20], "R": null, "K'": [[6, 28], [8, 31]], "V'": [[9, 32], [15, 35]], "example": [1, 72]}, {"END": [142, 143], "A": [138, 140], "V": [82, 85], "Q": [136, 137], "K": [78, 81], "R": null, "K'": [[89, 99], [91, 100]], "V'": [[92, 101], [95, 107]], "example": [73, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Dr. Neil deGrasse Tyson's. The cherries is Warren Buffett's. The baseball is Harper Lee's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the entrepreneur? Answer: No\n Premise: < The guitar is Richard Dawkins's. The hamburger is Johnny Depp's. The gorilla is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the athlete? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [67, 71], "V": [33, 36], "Q": [65, 66], "K": [31, 32], "R": null, "K'": [[6, 21], [7, 23]], "V'": [[8, 24], [17, 27]], "example": [1, 75]}, {"END": [145, 146], "A": [140, 143], "V": [105, 109], "Q": [138, 139], "K": [101, 104], "R": null, "K'": [[81, 90], [82, 93]], "V'": [[83, 94], [86, 97]], "example": [76, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Dr. Neil deGrasse Tyson's. The cherries is Warren Buffett's. The baseball is Harper Lee's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is the entrepreneur? Answer: No\n Premise: < The guitar is Richard Dawkins's. The hamburger is Johnny Depp's. The gorilla is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the actor? Answer: No\n", "ranges": [{"END": [73, 74], "A": [67, 71], "V": [33, 36], "Q": [65, 66], "K": [31, 32], "R": null, "K'": [[6, 21], [7, 23]], "V'": [[8, 24], [17, 27]], "example": [1, 75]}, {"END": [144, 145], "A": [140, 142], "V": [105, 109], "Q": [138, 139], "K": [101, 104], "R": null, "K'": [[81, 90], [82, 93]], "V'": [[83, 94], [86, 97]], "example": [76, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Marie Curie's. The blackberries is Georgia O'Keeffe's. The shotgun is Cristiano Ronaldo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the athlete? Answer: No\n Premise: < The plum is Dr. Gabor Mat\u00e9's. The mouse is Usain Bolt's. The strawberries is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the athlete? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [8, 11], "Q": [66, 67], "K": [6, 7], "R": null, "K'": [[15, 29], [18, 31]], "V'": [[19, 32], [25, 37]], "example": [1, 75]}, {"END": [152, 153], "A": [147, 150], "V": [96, 100], "Q": [145, 146], "K": [94, 95], "R": null, "K'": [[81, 104], [83, 108]], "V'": [[84, 109], [90, 116]], "example": [76, 154]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The guitar is Marie Curie's. The blackberries is Georgia O'Keeffe's. The shotgun is Cristiano Ronaldo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is the athlete? Answer: No\n Premise: < The plum is Dr. Gabor Mat\u00e9's. The mouse is Usain Bolt's. The strawberries is Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the scientist? Answer: No\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [8, 11], "Q": [66, 67], "K": [6, 7], "R": null, "K'": [[15, 29], [18, 31]], "V'": [[19, 32], [25, 37]], "example": [1, 75]}, {"END": [152, 153], "A": [147, 150], "V": [96, 100], "Q": [145, 146], "K": [94, 95], "R": null, "K'": [[81, 104], [83, 108]], "V'": [[84, 109], [90, 116]], "example": [76, 154]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Dr. Mehmet Oz's. The goose is Dr. Sanjay Gupta's. The banana is Ed Sheeran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the musician? Answer: Yes\n Premise: < The pizza is Alex Morgan's. The trousers is Kanye West's. The monkey is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the lawyer? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [36, 40], "Q": [69, 70], "K": [33, 35], "R": null, "K'": [[6, 19], [7, 21]], "V'": [[8, 22], [15, 29]], "example": [1, 78]}, {"END": [150, 151], "A": [146, 148], "V": [108, 115], "Q": [144, 145], "K": [105, 107], "R": null, "K'": [[84, 93], [86, 96]], "V'": [[87, 97], [89, 101]], "example": [79, 152]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The piano is Dr. Mehmet Oz's. The goose is Dr. Sanjay Gupta's. The banana is Ed Sheeran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is the musician? Answer: Yes\n Premise: < The pizza is Alex Morgan's. The trousers is Kanye West's. The monkey is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is the musician? Answer: No\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [36, 40], "Q": [69, 70], "K": [33, 35], "R": null, "K'": [[6, 19], [7, 21]], "V'": [[8, 22], [15, 29]], "example": [1, 78]}, {"END": [151, 152], "A": [146, 149], "V": [108, 115], "Q": [144, 145], "K": [105, 107], "R": null, "K'": [[84, 93], [86, 96]], "V'": [[87, 97], [89, 101]], "example": [79, 153]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Taylor Swift has lemon. Gloria Allred has plum. Tom Brady has lion. >. The person who owns a kind of fruit is not the athlete\n < Gloria Allred has pizza. Harper Lee has hamburger. Mark Zuckerberg has lemon. >. The person who owns a kind of food is not the entrepreneur\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [16, 19], "Q": [33, 34], "K'": [20, 22], "R": [35, 36], "K": [[5, 13], [7, 15]], "V": [[2, 8], [4, 12]], "example": [1, 39]}, {"END": [78, 79], "A'": [79, 82], "V'": [57, 61], "Q": [75, 76], "K'": [62, 64], "R": [77, 78], "K": [[46, 53], [48, 56]], "V": [[41, 49], [45, 52]], "example": [40, 82]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Simone Biles has peach. Toni Morrison has vodka. Sonia Sotomayor has coffee. >. The person who owns a kind of drink is not the athlete\n < Dr. Jane Goodall has basketball. Claude Monet has wolf. Kanye West has football. >. The person who owns a kind of sport is not the artist\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [2, 6], "Q": [40, 41], "K'": [7, 9], "R": [42, 43], "K": [[16, 28], [19, 29]], "V": [[10, 20], [15, 27]], "example": [1, 46]}, {"END": [83, 84], "A'": [84, 85], "V'": [56, 59], "Q": [80, 81], "K'": [60, 62], "R": [82, 83], "K": [[54, 68], [55, 69]], "V": [[48, 63], [53, 67]], "example": [47, 85]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Ernest Hemingway has steak. Rihanna has monkey. Nikola Tesla has bread. >. The person who owns a kind of food is not the musician\n < Zaha Hadid has basketball. Andy Warhol has football. Johnnie Cochran has blackberries. >. The person who owns a kind of sport is not the lawyer\n", "ranges": [{"END": [38, 39], "A'": [39, 41], "V'": [10, 13], "Q": [35, 36], "K'": [14, 16], "R": [37, 38], "K": [[7, 23], [9, 24]], "V": [[2, 17], [6, 22]], "example": [1, 41]}, {"END": [79, 80], "A'": [80, 81], "V'": [56, 61], "Q": [76, 77], "K'": [62, 65], "R": [78, 79], "K": [[48, 54], [49, 55]], "V": [[43, 50], [47, 53]], "example": [42, 81]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Warren Buffett has soda. Tom Brady has apricot. Jane Goodall has blackberries. >. The person who owns a kind of fruit is not the entrepreneur\n < Dr. Jane Goodall has guitar. Serena Williams has violin. Justin Bieber has pizza. >. The person who owns a kind of instrument is not the musician\n", "ranges": [{"END": [38, 39], "A'": [39, 42], "V'": [2, 5], "Q": [35, 36], "K'": [6, 8], "R": [37, 38], "K": [[13, 21], [16, 24]], "V": [[9, 17], [12, 20]], "example": [1, 42]}, {"END": [80, 81], "A'": [81, 83], "V'": [59, 63], "Q": [77, 78], "K'": [64, 66], "R": [79, 80], "K": [[50, 56], [51, 58]], "V": [[44, 52], [49, 55]], "example": [43, 83]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Mies van der Rohe has goat. Meryl Streep has violin. Andy Warhol has guitar. >. The person who owns a kind of instrument is not the architect\n < Drake has durian. Mies van der Rohe has spaghetti. Dr. Michio Kaku has orange. >. The person who owns a kind of fruit is not the architect\n", "ranges": [{"END": [41, 42], "A'": [42, 43], "V'": [2, 8], "Q": [38, 39], "K'": [9, 11], "R": [40, 41], "K": [[19, 26], [21, 27]], "V": [[12, 22], [18, 25]], "example": [1, 43]}, {"END": [84, 85], "A'": [85, 86], "V'": [51, 57], "Q": [81, 82], "K'": [58, 61], "R": [83, 84], "K": [[48, 69], [50, 70]], "V": [[45, 62], [47, 68]], "example": [44, 86]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Jane Austen has cocktail. Maya Lin has tea. Meryl Streep has pants. >. The person who owns a kind of drink is not the actor\n < Taylor Swift has pear. Dr. Gabor Mat\u00e9 has jersey. Jane Goodall has kiwi. >. The person who owns a kind of fruit is not the doctor\n", "ranges": [{"END": [39, 40], "A'": [40, 41], "V'": [16, 22], "Q": [36, 37], "K'": [23, 25], "R": [38, 39], "K": [[6, 14], [9, 15]], "V": [[2, 10], [5, 13]], "example": [1, 41]}, {"END": [80, 81], "A'": [81, 82], "V'": [49, 55], "Q": [77, 78], "K'": [56, 59], "R": [79, 80], "K": [[46, 64], [48, 66]], "V": [[43, 60], [45, 63]], "example": [42, 82]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Rosie Franklin has bus. Usain Bolt has violin. Johnny Depp has taxi. >. The person who owns a kind of vehicle is not the athlete\n < LeBron James has plum. Agatha Christie has piano. Charlize Theron has guitar. >. The person who owns a kind of instrument is not the athlete\n", "ranges": [{"END": [36, 37], "A'": [37, 39], "V'": [8, 12], "Q": [33, 34], "K'": [13, 15], "R": [35, 36], "K": [[6, 20], [7, 22]], "V": [[2, 16], [5, 19]], "example": [1, 39]}, {"END": [78, 79], "A'": [79, 81], "V'": [41, 45], "Q": [75, 76], "K'": [46, 48], "R": [77, 78], "K": [[55, 63], [56, 64]], "V": [[49, 57], [54, 62]], "example": [40, 81]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "< Marie Curie has jersey. Georgia O'Keeffe has wine. Cristiano Ronaldo has juice. >. The person who owns a kind of drink is not the scientist\n < Steve Jobs has horse. Usain Bolt has costume. Marie Curie has uniform. >. The person who owns a kind of clothes is not the entrepreneur\n", "ranges": [{"END": [41, 42], "A'": [42, 44], "V'": [2, 5], "Q": [38, 39], "K'": [6, 9], "R": [40, 41], "K": [[17, 25], [18, 27]], "V": [[10, 19], [16, 24]], "example": [1, 44]}, {"END": [79, 80], "A'": [80, 83], "V'": [46, 49], "Q": [76, 77], "K'": [50, 51], "R": [78, 79], "K": [[57, 64], [59, 65]], "V": [[52, 60], [56, 63]], "example": [45, 83]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Taylor Swift has lemon. Gloria Allred has plum. Tom Brady has lion. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < Gloria Allred has pizza. Harper Lee has hamburger. Mark Zuckerberg has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is not the entrepreneur? Answer: Yes\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [19, 22], "Q": [52, 53], "K'": [23, 25], "R": [54, 55], "K": [[8, 16], [10, 18]], "V": [[5, 11], [7, 15]], "example": [1, 62]}, {"END": [126, 127], "A'": [120, 124], "V'": [83, 87], "Q": [117, 118], "K'": [88, 90], "R": [119, 120], "K": [[72, 79], [74, 82]], "V": [[67, 75], [71, 78]], "example": [63, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Taylor Swift has lemon. Gloria Allred has plum. Tom Brady has lion. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < Gloria Allred has pizza. Harper Lee has hamburger. Mark Zuckerberg has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is not the author? Answer: No\n", "ranges": [{"END": [60, 61], "A'": [55, 58], "V'": [19, 22], "Q": [52, 53], "K'": [23, 25], "R": [54, 55], "K": [[8, 16], [10, 18]], "V": [[5, 11], [7, 15]], "example": [1, 62]}, {"END": [124, 125], "A'": [120, 122], "V'": [83, 87], "Q": [117, 118], "K'": [88, 90], "R": [119, 120], "K": [[72, 79], [74, 82]], "V": [[67, 75], [71, 78]], "example": [63, 126]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Natalie Portman has bee. Dr. Gabor Mat\u00e9 has grapes. Rihanna has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < Zaha Hadid has grapes. Cristiano Ronaldo has piano. Eminem has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the architect? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [61, 64], "V'": [5, 9], "Q": [58, 59], "K'": [10, 12], "R": [60, 61], "K": [[20, 28], [23, 31]], "V": [[13, 24], [19, 27]], "example": [1, 68]}, {"END": [129, 130], "A'": [125, 127], "V'": [73, 77], "Q": [122, 123], "K'": [78, 81], "R": [124, 125], "K": [[88, 94], [89, 95]], "V": [[82, 90], [87, 93]], "example": [69, 131]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Natalie Portman has bee. Dr. Gabor Mat\u00e9 has grapes. Rihanna has blueberries. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < Zaha Hadid has grapes. Cristiano Ronaldo has piano. Eminem has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [61, 64], "V'": [5, 9], "Q": [58, 59], "K'": [10, 12], "R": [60, 61], "K": [[20, 28], [23, 31]], "V": [[13, 24], [19, 27]], "example": [1, 68]}, {"END": [130, 131], "A'": [125, 128], "V'": [73, 77], "Q": [122, 123], "K'": [78, 81], "R": [124, 125], "K": [[88, 94], [89, 95]], "V": [[82, 90], [87, 93]], "example": [69, 132]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has kiwi. Michelangelo has plum. Oprah Winfrey has tea. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the artist? Answer: No\n Premise: < Leonardo da Vinci has mosquito. Carl Sagan has burger. Elon Musk has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is not the scientist? Answer: Yes\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [21, 26], "Q": [55, 56], "K'": [27, 28], "R": [57, 58], "K": [[11, 18], [13, 20]], "V": [[5, 14], [10, 17]], "example": [1, 64]}, {"END": [129, 130], "A'": [124, 127], "V'": [79, 82], "Q": [121, 122], "K'": [83, 85], "R": [123, 124], "K": [[75, 91], [78, 94]], "V": [[69, 86], [74, 90]], "example": [65, 131]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Vincent van Gogh has kiwi. Michelangelo has plum. Oprah Winfrey has tea. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the artist? Answer: No\n Premise: < Leonardo da Vinci has mosquito. Carl Sagan has burger. Elon Musk has beetle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is not the artist? Answer: No\n", "ranges": [{"END": [62, 63], "A'": [58, 60], "V'": [21, 26], "Q": [55, 56], "K'": [27, 28], "R": [57, 58], "K": [[11, 18], [13, 20]], "V": [[5, 14], [10, 17]], "example": [1, 64]}, {"END": [128, 129], "A'": [124, 126], "V'": [79, 82], "Q": [121, 122], "K'": [83, 85], "R": [123, 124], "K": [[75, 91], [78, 94]], "V": [[69, 86], [74, 90]], "example": [65, 130]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kanye West has jeep. LeBron James has vodka. Eminem has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the musician? Answer: No\n Premise: < Tom Brady has sweater. Leonardo da Vinci has bus. Rem Koolhaas has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the athlete? Answer: Yes\n", "ranges": [{"END": [63, 64], "A'": [58, 61], "V'": [13, 17], "Q": [55, 56], "K'": [18, 21], "R": [57, 58], "K": [[10, 26], [12, 28]], "V": [[5, 22], [9, 25]], "example": [1, 65]}, {"END": [128, 129], "A'": [123, 126], "V'": [70, 73], "Q": [120, 121], "K'": [74, 76], "R": [122, 123], "K": [[83, 91], [84, 93]], "V": [[77, 85], [82, 90]], "example": [66, 130]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kanye West has jeep. LeBron James has vodka. Eminem has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the musician? Answer: No\n Premise: < Tom Brady has sweater. Leonardo da Vinci has bus. Rem Koolhaas has taxi. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the artist? Answer: No\n", "ranges": [{"END": [63, 64], "A'": [58, 61], "V'": [13, 17], "Q": [55, 56], "K'": [18, 21], "R": [57, 58], "K": [[10, 26], [12, 28]], "V": [[5, 22], [9, 25]], "example": [1, 65]}, {"END": [127, 128], "A'": [123, 125], "V'": [70, 73], "Q": [120, 121], "K'": [74, 76], "R": [122, 123], "K": [[83, 91], [84, 93]], "V": [[77, 85], [82, 90]], "example": [66, 129]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Frida Kahlo has banana. Alex Morgan has baseball. Louis Sullivan has football. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the architect? Answer: No\n Premise: < Dr. Mehmet Oz has tiger. LeBron James has pig. Richard Dawkins has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the scientist? Answer: Yes\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [5, 10], "Q": [52, 53], "K'": [11, 13], "R": [54, 55], "K": [[17, 24], [18, 25]], "V": [[14, 19], [16, 23]], "example": [1, 61]}, {"END": [126, 127], "A'": [121, 124], "V'": [85, 88], "Q": [118, 119], "K'": [89, 91], "R": [120, 121], "K": [[74, 82], [76, 84]], "V": [[66, 77], [73, 81]], "example": [62, 128]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Frida Kahlo has banana. Alex Morgan has baseball. Louis Sullivan has football. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the architect? Answer: No\n Premise: < Dr. Mehmet Oz has tiger. LeBron James has pig. Richard Dawkins has papaya. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the doctor? Answer: No\n", "ranges": [{"END": [59, 60], "A'": [55, 57], "V'": [5, 10], "Q": [52, 53], "K'": [11, 13], "R": [54, 55], "K": [[17, 24], [18, 25]], "V": [[14, 19], [16, 23]], "example": [1, 61]}, {"END": [125, 126], "A'": [121, 123], "V'": [85, 88], "Q": [118, 119], "K'": [89, 91], "R": [120, 121], "K": [[74, 82], [76, 84]], "V": [[66, 77], [73, 81]], "example": [62, 127]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Simone Biles has basketball. Harper Lee has football. Dr. Gabor Mat\u00e9 has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the athlete? Answer: No\n Premise: < Tom Brady has piano. Jennifer Lawrence has jeep. Lionel Messi has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the actor? Answer: Yes\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [18, 24], "Q": [53, 54], "K'": [25, 26], "R": [55, 56], "K": [[10, 16], [11, 17]], "V": [[5, 12], [9, 15]], "example": [1, 63]}, {"END": [121, 122], "A'": [117, 119], "V'": [74, 77], "Q": [114, 115], "K'": [78, 80], "R": [116, 117], "K": [[72, 86], [73, 87]], "V": [[68, 81], [71, 85]], "example": [64, 123]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Simone Biles has basketball. Harper Lee has football. Dr. Gabor Mat\u00e9 has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the athlete? Answer: No\n Premise: < Tom Brady has piano. Jennifer Lawrence has jeep. Lionel Messi has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n", "ranges": [{"END": [61, 62], "A'": [56, 59], "V'": [18, 24], "Q": [53, 54], "K'": [25, 26], "R": [55, 56], "K": [[10, 16], [11, 17]], "V": [[5, 12], [9, 15]], "example": [1, 63]}, {"END": [122, 123], "A'": [117, 120], "V'": [74, 77], "Q": [114, 115], "K'": [78, 80], "R": [116, 117], "K": [[72, 86], [73, 87]], "V": [[68, 81], [71, 85]], "example": [64, 124]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has motorcycle. Georgia O'Keeffe has piano. Cristiano Ronaldo has violin. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n Premise: < Dr. Gabor Mat\u00e9 has monkey. Jane Goodall has strawberries. Kanye West has goose. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the scientist? Answer: Yes\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [5, 8], "Q": [56, 57], "K'": [9, 11], "R": [58, 59], "K": [[19, 27], [20, 29]], "V": [[12, 21], [18, 26]], "example": [1, 66]}, {"END": [132, 133], "A'": [127, 130], "V'": [81, 84], "Q": [124, 125], "K'": [85, 89], "R": [126, 127], "K": [[78, 95], [80, 97]], "V": [[71, 90], [77, 94]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Marie Curie has motorcycle. Georgia O'Keeffe has piano. Cristiano Ronaldo has violin. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n Premise: < Dr. Gabor Mat\u00e9 has monkey. Jane Goodall has strawberries. Kanye West has goose. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the musician? Answer: No\n", "ranges": [{"END": [64, 65], "A'": [59, 62], "V'": [5, 8], "Q": [56, 57], "K'": [9, 11], "R": [58, 59], "K": [[19, 27], [20, 29]], "V": [[12, 21], [18, 26]], "example": [1, 66]}, {"END": [132, 133], "A'": [127, 130], "V'": [81, 84], "Q": [124, 125], "K'": [85, 89], "R": [126, 127], "K": [[78, 95], [80, 97]], "V": [[71, 90], [77, 94]], "example": [67, 134]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz has kiwi. Dr. Sanjay Gupta has apple. Ed Sheeran has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: Yes\n Premise: < Alex Morgan has goat. Kanye West has elephant. Sonia Sotomayor has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the lawyer? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [26, 30], "Q": [59, 60], "K'": [31, 32], "R": [61, 62], "K": [[13, 24], [15, 25]], "V": [[5, 16], [12, 23]], "example": [1, 69]}, {"END": [133, 134], "A'": [129, 131], "V'": [89, 96], "Q": [126, 127], "K'": [97, 99], "R": [128, 129], "K": [[77, 85], [79, 88]], "V": [[74, 80], [76, 84]], "example": [70, 135]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Dr. Mehmet Oz has kiwi. Dr. Sanjay Gupta has apple. Ed Sheeran has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: Yes\n Premise: < Alex Morgan has goat. Kanye West has elephant. Sonia Sotomayor has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the musician? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [62, 65], "V'": [26, 30], "Q": [59, 60], "K'": [31, 32], "R": [61, 62], "K": [[13, 24], [15, 25]], "V": [[5, 16], [12, 23]], "example": [1, 69]}, {"END": [134, 135], "A'": [129, 132], "V'": [89, 96], "Q": [126, 127], "K'": [97, 99], "R": [128, 129], "K": [[77, 85], [79, 88]], "V": [[74, 80], [76, 84]], "example": [70, 136]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The lemon is Taylor Swift's. The plum is Gloria Allred's. The lion is Tom Brady's. >. The person who owns a kind of fruit is not the athlete\n < The pizza is Gloria Allred's. The hamburger is Harper Lee's. The lemon is Mark Zuckerberg's. >. The person who owns a kind of food is not the entrepreneur\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [26, 29], "Q": [42, 43], "K'": [23, 25], "R": [44, 45], "K": [[3, 12], [5, 14]], "V": [[6, 15], [8, 19]], "example": [1, 48]}, {"END": [96, 97], "A'": [97, 100], "V'": [76, 80], "Q": [93, 94], "K'": [73, 75], "R": [95, 96], "K": [[51, 62], [53, 65]], "V": [[54, 66], [58, 69]], "example": [49, 100]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The peach is Simone Biles's. The vodka is Toni Morrison's. The coffee is Sonia Sotomayor's. >. The person who owns a kind of drink is not the athlete\n < The basketball is Dr. Jane Goodall's. The wolf is Claude Monet's. The football is Kanye West's. >. The person who owns a kind of sport is not the artist\n", "ranges": [{"END": [52, 53], "A'": [53, 55], "V'": [6, 10], "Q": [49, 50], "K'": [3, 5], "R": [51, 52], "K": [[14, 27], [17, 28]], "V": [[18, 29], [23, 36]], "example": [1, 55]}, {"END": [101, 102], "A'": [102, 103], "V'": [72, 75], "Q": [98, 99], "K'": [69, 71], "R": [100, 101], "K": [[58, 79], [59, 80]], "V": [[60, 81], [65, 85]], "example": [56, 103]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The steak is Ernest Hemingway's. The monkey is Rihanna's. The bread is Nikola Tesla's. >. The person who owns a kind of food is not the musician\n < The basketball is Zaha Hadid's. The football is Andy Warhol's. The blackberries is Johnnie Cochran's. >. The person who owns a kind of sport is not the lawyer\n", "ranges": [{"END": [47, 48], "A'": [48, 50], "V'": [17, 20], "Q": [44, 45], "K'": [14, 16], "R": [46, 47], "K": [[3, 24], [5, 25]], "V": [[6, 26], [10, 31]], "example": [1, 50]}, {"END": [97, 98], "A'": [98, 99], "V'": [76, 81], "Q": [94, 95], "K'": [72, 75], "R": [96, 97], "K": [[53, 63], [54, 64]], "V": [[55, 65], [59, 68]], "example": [51, 99]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The soda is Warren Buffett's. The apricot is Tom Brady's. The blackberries is Jane Goodall's. >. The person who owns a kind of fruit is not the entrepreneur\n < The guitar is Dr. Jane Goodall's. The violin is Serena Williams's. The pizza is Justin Bieber's. >. The person who owns a kind of instrument is not the musician\n", "ranges": [{"END": [47, 48], "A'": [48, 51], "V'": [6, 9], "Q": [44, 45], "K'": [3, 5], "R": [46, 47], "K": [[13, 24], [16, 27]], "V": [[17, 28], [20, 31]], "example": [1, 51]}, {"END": [98, 99], "A'": [99, 101], "V'": [78, 82], "Q": [95, 96], "K'": [75, 77], "R": [97, 98], "K": [[54, 65], [55, 67]], "V": [[56, 68], [61, 71]], "example": [52, 101]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The goat is Mies van der Rohe's. The violin is Meryl Streep's. The guitar is Andy Warhol's. >. The person who owns a kind of instrument is not the architect\n < The durian is Drake's. The spaghetti is Mies van der Rohe's. The orange is Dr. Michio Kaku's. >. The person who owns a kind of fruit is not the architect\n", "ranges": [{"END": [50, 51], "A'": [51, 52], "V'": [6, 12], "Q": [47, 48], "K'": [3, 5], "R": [49, 50], "K": [[16, 29], [18, 30]], "V": [[19, 31], [25, 34]], "example": [1, 52]}, {"END": [102, 103], "A'": [103, 104], "V'": [68, 74], "Q": [99, 100], "K'": [64, 67], "R": [101, 102], "K": [[55, 78], [57, 79]], "V": [[58, 80], [60, 86]], "example": [53, 104]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The cocktail is Jane Austen's. The tea is Maya Lin's. The pants is Meryl Streep's. >. The person who owns a kind of drink is not the actor\n < The pear is Taylor Swift's. The jersey is Dr. Gabor Mat\u00e9's. The kiwi is Jane Goodall's. >. The person who owns a kind of fruit is not the doctor\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [26, 32], "Q": [45, 46], "K'": [23, 25], "R": [47, 48], "K": [[3, 14], [6, 15]], "V": [[7, 16], [10, 19]], "example": [1, 50]}, {"END": [98, 99], "A'": [99, 100], "V'": [66, 72], "Q": [95, 96], "K'": [62, 65], "R": [97, 98], "K": [[53, 76], [55, 78]], "V": [[56, 79], [58, 82]], "example": [51, 100]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The bus is Rosie Franklin's. The violin is Usain Bolt's. The taxi is Johnny Depp's. >. The person who owns a kind of vehicle is not the athlete\n < The plum is LeBron James's. The piano is Agatha Christie's. The guitar is Charlize Theron's. >. The person who owns a kind of instrument is not the athlete\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [15, 19], "Q": [42, 43], "K'": [12, 14], "R": [44, 45], "K": [[3, 23], [4, 25]], "V": [[5, 26], [8, 29]], "example": [1, 48]}, {"END": [96, 97], "A'": [97, 99], "V'": [54, 58], "Q": [93, 94], "K'": [51, 53], "R": [95, 96], "K": [[62, 73], [63, 74]], "V": [[64, 75], [69, 80]], "example": [49, 99]}]}
{"task_id": "rlr_gen[kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< The jersey is Marie Curie's. The wine is Georgia O'Keeffe's. The juice is Cristiano Ronaldo's. >. The person who owns a kind of drink is not the scientist\n < The horse is Steve Jobs's. The costume is Usain Bolt's. The uniform is Marie Curie's. >. The person who owns a kind of clothes is not the entrepreneur\n", "ranges": [{"END": [50, 51], "A'": [51, 53], "V'": [7, 10], "Q": [47, 48], "K'": [3, 6], "R": [49, 50], "K": [[14, 26], [15, 28]], "V": [[16, 29], [22, 34]], "example": [1, 53]}, {"END": [97, 98], "A'": [98, 101], "V'": [58, 61], "Q": [94, 95], "K'": [56, 57], "R": [96, 97], "K": [[65, 76], [67, 77]], "V": [[68, 78], [72, 81]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Taylor Swift's. The plum is Gloria Allred's. The lion is Tom Brady's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < The pizza is Gloria Allred's. The hamburger is Harper Lee's. The taxi is Mark Zuckerberg's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is not the entrepreneur? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [64, 67], "V'": [29, 32], "Q": [61, 62], "K'": [26, 28], "R": [63, 64], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 22]], "example": [1, 71]}, {"END": [144, 145], "A'": [138, 142], "V'": [102, 106], "Q": [135, 136], "K'": [99, 101], "R": [137, 138], "K": [[77, 88], [79, 91]], "V": [[80, 92], [84, 95]], "example": [72, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The lemon is Taylor Swift's. The plum is Gloria Allred's. The lion is Tom Brady's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < The pizza is Gloria Allred's. The hamburger is Harper Lee's. The taxi is Mark Zuckerberg's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of food is not the author? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [64, 67], "V'": [29, 32], "Q": [61, 62], "K'": [26, 28], "R": [63, 64], "K": [[6, 15], [8, 17]], "V": [[9, 18], [11, 22]], "example": [1, 71]}, {"END": [142, 143], "A'": [138, 140], "V'": [102, 106], "Q": [135, 136], "K'": [99, 101], "R": [137, 138], "K": [[77, 88], [79, 91]], "V": [[80, 92], [84, 95]], "example": [72, 144]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bee is Natalie Portman's. The grapes is Dr. Gabor Mat\u00e9's. The blueberries is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < The grapes is Zaha Hadid's. The piano is Cristiano Ronaldo's. The guitar is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the architect? Answer: Yes\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [9, 13], "Q": [67, 68], "K'": [6, 8], "R": [69, 70], "K": [[17, 31], [20, 34]], "V": [[21, 35], [27, 38]], "example": [1, 77]}, {"END": [147, 148], "A'": [143, 145], "V'": [87, 91], "Q": [140, 141], "K'": [83, 86], "R": [142, 143], "K": [[95, 106], [96, 107]], "V": [[97, 108], [102, 111]], "example": [78, 149]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The bee is Natalie Portman's. The grapes is Dr. Gabor Mat\u00e9's. The blueberries is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: No\n Premise: < The grapes is Zaha Hadid's. The piano is Cristiano Ronaldo's. The guitar is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n", "ranges": [{"END": [75, 76], "A'": [70, 73], "V'": [9, 13], "Q": [67, 68], "K'": [6, 8], "R": [69, 70], "K": [[17, 31], [20, 34]], "V": [[21, 35], [27, 38]], "example": [1, 77]}, {"END": [148, 149], "A'": [143, 146], "V'": [87, 91], "Q": [140, 141], "K'": [83, 86], "R": [142, 143], "K": [[95, 106], [96, 107]], "V": [[97, 108], [102, 111]], "example": [78, 150]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Vincent van Gogh's. The plum is Michelangelo's. The tea is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the artist? Answer: No\n Premise: < The mosquito is Leonardo da Vinci's. The burger is Carl Sagan's. The beetle is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is not the scientist? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [30, 35], "Q": [64, 65], "K'": [28, 29], "R": [66, 67], "K": [[6, 18], [8, 20]], "V": [[9, 21], [14, 24]], "example": [1, 73]}, {"END": [147, 148], "A'": [142, 145], "V'": [95, 98], "Q": [139, 140], "K'": [92, 94], "R": [141, 142], "K": [[79, 102], [82, 105]], "V": [[83, 106], [88, 110]], "example": [74, 149]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Vincent van Gogh's. The plum is Michelangelo's. The tea is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the artist? Answer: No\n Premise: < The mosquito is Leonardo da Vinci's. The burger is Carl Sagan's. The beetle is Elon Musk's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of insect is not the artist? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [30, 35], "Q": [64, 65], "K'": [28, 29], "R": [66, 67], "K": [[6, 18], [8, 20]], "V": [[9, 21], [14, 24]], "example": [1, 73]}, {"END": [146, 147], "A'": [142, 144], "V'": [95, 98], "Q": [139, 140], "K'": [92, 94], "R": [141, 142], "K": [[79, 102], [82, 105]], "V": [[83, 106], [88, 110]], "example": [74, 148]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Kanye West's. The vodka is LeBron James's. The motorcycle is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the musician? Answer: No\n Premise: < The sweater is Tom Brady's. The bus is Leonardo da Vinci's. The taxi is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the athlete? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [67, 70], "V'": [21, 25], "Q": [64, 65], "K'": [17, 20], "R": [66, 67], "K": [[6, 29], [8, 31]], "V": [[9, 32], [13, 35]], "example": [1, 74]}, {"END": [146, 147], "A'": [141, 144], "V'": [83, 86], "Q": [138, 139], "K'": [80, 82], "R": [140, 141], "K": [[90, 101], [91, 103]], "V": [[92, 104], [97, 109]], "example": [75, 148]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The jeep is Kanye West's. The vodka is LeBron James's. The motorcycle is Eminem's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the musician? Answer: No\n Premise: < The sweater is Tom Brady's. The bus is Leonardo da Vinci's. The taxi is Rem Koolhaas's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of vehicle is not the artist? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [67, 70], "V'": [21, 25], "Q": [64, 65], "K'": [17, 20], "R": [66, 67], "K": [[6, 29], [8, 31]], "V": [[9, 32], [13, 35]], "example": [1, 74]}, {"END": [145, 146], "A'": [141, 143], "V'": [83, 86], "Q": [138, 139], "K'": [80, 82], "R": [140, 141], "K": [[90, 101], [91, 103]], "V": [[92, 104], [97, 109]], "example": [75, 147]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The banana is Frida Kahlo's. The baseball is Alex Morgan's. The football is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the architect? Answer: No\n Premise: < The tiger is Dr. Mehmet Oz's. The pig is LeBron James's. The papaya is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the scientist? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [9, 14], "Q": [61, 62], "K'": [6, 8], "R": [63, 64], "K": [[18, 26], [19, 27]], "V": [[20, 28], [22, 32]], "example": [1, 70]}, {"END": [144, 145], "A'": [139, 142], "V'": [104, 107], "Q": [136, 137], "K'": [101, 103], "R": [138, 139], "K": [[76, 90], [78, 92]], "V": [[79, 93], [86, 97]], "example": [71, 146]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The banana is Frida Kahlo's. The baseball is Alex Morgan's. The football is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the architect? Answer: No\n Premise: < The tiger is Dr. Mehmet Oz's. The pig is LeBron James's. The papaya is Richard Dawkins's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the doctor? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [9, 14], "Q": [61, 62], "K'": [6, 8], "R": [63, 64], "K": [[18, 26], [19, 27]], "V": [[20, 28], [22, 32]], "example": [1, 70]}, {"END": [143, 144], "A'": [139, 141], "V'": [104, 107], "Q": [136, 137], "K'": [101, 103], "R": [138, 139], "K": [[76, 90], [78, 92]], "V": [[79, 93], [86, 97]], "example": [71, 145]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Simone Biles's. The football is Harper Lee's. The guitar is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the athlete? Answer: No\n Premise: < The piano is Tom Brady's. The jeep is Jennifer Lawrence's. The guitar is Lionel Messi's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the actor? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [65, 68], "V'": [27, 33], "Q": [62, 63], "K'": [25, 26], "R": [64, 65], "K": [[6, 16], [7, 17]], "V": [[8, 18], [12, 21]], "example": [1, 72]}, {"END": [139, 140], "A'": [135, 137], "V'": [90, 93], "Q": [132, 133], "K'": [87, 89], "R": [134, 135], "K": [[78, 97], [79, 98]], "V": [[80, 99], [83, 103]], "example": [73, 141]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The basketball is Simone Biles's. The football is Harper Lee's. The guitar is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of sport is not the athlete? Answer: No\n Premise: < The piano is Tom Brady's. The jeep is Jennifer Lawrence's. The guitar is Lionel Messi's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [65, 68], "V'": [27, 33], "Q": [62, 63], "K'": [25, 26], "R": [64, 65], "K": [[6, 16], [7, 17]], "V": [[8, 18], [12, 21]], "example": [1, 72]}, {"END": [140, 141], "A'": [135, 138], "V'": [90, 93], "Q": [132, 133], "K'": [87, 89], "R": [134, 135], "K": [[78, 97], [79, 98]], "V": [[80, 99], [83, 103]], "example": [73, 142]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Marie Curie's. The piano is Georgia O'Keeffe's. The violin is Cristiano Ronaldo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n Premise: < The monkey is Dr. Gabor Mat\u00e9's. The strawberries is Jane Goodall's. The goose is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the scientist? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [9, 12], "Q": [65, 66], "K'": [6, 8], "R": [67, 68], "K": [[16, 28], [17, 30]], "V": [[18, 31], [24, 36]], "example": [1, 75]}, {"END": [150, 151], "A'": [145, 148], "V'": [99, 102], "Q": [142, 143], "K'": [94, 98], "R": [144, 145], "K": [[81, 106], [83, 108]], "V": [[84, 109], [90, 113]], "example": [76, 152]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The motorcycle is Marie Curie's. The piano is Georgia O'Keeffe's. The violin is Cristiano Ronaldo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of instrument is not the athlete? Answer: No\n Premise: < The monkey is Dr. Gabor Mat\u00e9's. The strawberries is Jane Goodall's. The goose is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the musician? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [9, 12], "Q": [65, 66], "K'": [6, 8], "R": [67, 68], "K": [[16, 28], [17, 30]], "V": [[18, 31], [24, 36]], "example": [1, 75]}, {"END": [150, 151], "A'": [145, 148], "V'": [99, 102], "Q": [142, 143], "K'": [94, 98], "R": [144, 145], "K": [[81, 106], [83, 108]], "V": [[84, 109], [90, 113]], "example": [76, 152]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Dr. Mehmet Oz's. The apple is Dr. Sanjay Gupta's. The horse is Ed Sheeran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: Yes\n Premise: < The goat is Alex Morgan's. The elephant is Kanye West's. The jeep is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the lawyer? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [35, 39], "Q": [68, 69], "K'": [33, 34], "R": [70, 71], "K": [[6, 20], [8, 21]], "V": [[9, 22], [16, 29]], "example": [1, 78]}, {"END": [151, 152], "A'": [147, 149], "V'": [108, 115], "Q": [144, 145], "K'": [105, 107], "R": [146, 147], "K": [[84, 93], [86, 96]], "V": [[87, 97], [89, 101]], "example": [79, 153]}]}
{"task_id": "g2c[rlr_gen][kinds_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < The kiwi is Dr. Mehmet Oz's. The apple is Dr. Sanjay Gupta's. The horse is Ed Sheeran's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of fruit is not the musician? Answer: Yes\n Premise: < The goat is Alex Morgan's. The elephant is Kanye West's. The jeep is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the person who owns a kind of animal is not the musician? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [35, 39], "Q": [68, 69], "K'": [33, 34], "R": [70, 71], "K": [[6, 20], [8, 21]], "V": [[9, 22], [16, 29]], "example": [1, 78]}, {"END": [152, 153], "A'": [147, 150], "V'": [108, 115], "Q": [144, 145], "K'": [105, 107], "R": [146, 147], "K": [[84, 93], [86, 96]], "V": [[87, 97], [89, 101]], "example": [79, 154]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, cooking, calculating and swiming.\n< Norman Foster has goggles. Zaha Hadid has pan. LeBron James has computer. >. So the athlete has a thing used for calculating\n < Jane Goodall has abacus. Dr. Michio Kaku has goggles. Sonia Sotomayor has broom. >. So the scientist has a thing used for calculating\n", "ranges": [{"END": [53, 54], "A": [54, 55], "V": [41, 42], "Q": [46, 49], "K": [36, 40], "R": null, "K'": [[20, 29], [23, 33]], "V'": [[24, 34], [28, 35]], "example": [19, 55]}, {"END": [98, 99], "A": [99, 100], "V": [61, 64], "Q": [91, 94], "K": [57, 60], "R": null, "K'": [[65, 77], [71, 84]], "V'": [[72, 85], [76, 87]], "example": [56, 100]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, riding, killing, driving and calculating.\n< Serena Williams has gun. Ada Lovelace has truck. Usain Bolt has bicycle. >. So the scientist has a thing used for driving\n < Pablo Picasso has gun. Dr. Sylvia Earle has violin. Thurgood Marshall has computer. >. So the lawyer has a thing used for calculating\n", "ranges": [{"END": [52, 53], "A": [53, 54], "V": [30, 32], "Q": [45, 48], "K": [25, 29], "R": null, "K'": [[19, 33], [22, 37]], "V'": [[23, 38], [24, 41]], "example": [18, 54]}, {"END": [88, 89], "A": [89, 90], "V": [77, 78], "Q": [82, 84], "K": [72, 76], "R": null, "K'": [[56, 62], [59, 68]], "V'": [[60, 69], [61, 71]], "example": [55, 90]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, driving, playing, communicating and flying.\n< Andy Warhol has plane. Neil deGrasse Tyson has vacuum cleaner. Jackson Pollock has guitar. >. So the scientist has a thing used for cleaning\n < J.K. Rowling has piano. Denzel Washington has telephone. Eminem has car. >. So the author has a thing used for playing\n", "ranges": [{"END": [55, 56], "A": [56, 58], "V": [34, 38], "Q": [48, 51], "K": [26, 33], "R": null, "K'": [[20, 39], [23, 42]], "V'": [[24, 43], [25, 44]], "example": [19, 58]}, {"END": [91, 92], "A": [92, 93], "V": [67, 68], "Q": [85, 87], "K": [60, 66], "R": null, "K'": [[69, 76], [72, 79]], "V'": [[73, 80], [75, 81]], "example": [59, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, flying, calculating, cooking and swiming.\n< Antoni Gaud\u00ed has plane. Salvador Dal\u00ed has oven. Justin Bieber has helicopter. >. So the artist has a thing used for cooking\n < Mark Twain has calculator. Clarence Darrow has pencil. Richard Branson has swim fins. >. So the entrepreneur has a thing used for swiming\n", "ranges": [{"END": [54, 55], "A": [55, 57], "V": [33, 35], "Q": [48, 50], "K": [29, 32], "R": null, "K'": [[21, 36], [26, 40]], "V'": [[27, 41], [28, 44]], "example": [20, 57]}, {"END": [94, 95], "A": [95, 98], "V": [79, 82], "Q": [86, 90], "K": [75, 78], "R": null, "K'": [[59, 66], [62, 70]], "V'": [[63, 71], [65, 74]], "example": [58, 98]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, cooking, calculating, painting and driving.\n< Rosie Franklin has computer. Hillary Clinton has car. Pablo Picasso has calculator. >. So the lawyer has a thing used for driving\n < Frank Lloyd Wright has swim fins. Maya Lin has pan. Simone Biles has brush. >. So the athlete has a thing used for painting\n", "ranges": [{"END": [50, 51], "A": [51, 52], "V": [32, 33], "Q": [44, 46], "K": [27, 31], "R": null, "K'": [[21, 34], [24, 37]], "V'": [[25, 38], [26, 40]], "example": [20, 52]}, {"END": [86, 87], "A": [87, 88], "V": [73, 75], "Q": [79, 82], "K": [68, 72], "R": null, "K'": [[54, 62], [57, 65]], "V'": [[58, 66], [61, 67]], "example": [53, 88]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, writing, killing, cooking, swiming and communicating.\n< Jane Austen has pot. Steve Jobs has plane. Dr. Neil deGrasse Tyson has telegraph. >. So the entrepreneur has a thing used for flying\n < Meryl Streep has knife. Pablo Picasso has pencil. Roger Federer has swim fins. >. So the actor has a thing used for killing\n", "ranges": [{"END": [60, 61], "A": [61, 62], "V": [34, 35], "Q": [52, 56], "K": [30, 33], "R": null, "K'": [[24, 36], [27, 45]], "V'": [[28, 46], [29, 48]], "example": [23, 62]}, {"END": [99, 100], "A": [100, 101], "V": [71, 73], "Q": [93, 95], "K": [64, 70], "R": null, "K'": [[74, 82], [77, 85]], "V'": [[78, 86], [81, 89]], "example": [63, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< Marie Curie has motorcycle. Georgia O'Keeffe has oven. Cristiano Ronaldo has spray. >. So the scientist has a thing used for riding\n < Dr. Gabor Mat\u00e9 has spray. Usain Bolt has bicycle. Neil deGrasse Tyson has truck. >. So the athlete has a thing used for riding\n", "ranges": [{"END": [54, 55], "A": [55, 57], "V": [22, 24], "Q": [47, 50], "K": [18, 21], "R": null, "K'": [[25, 35], [31, 40]], "V'": [[32, 41], [34, 43]], "example": [17, 57]}, {"END": [99, 100], "A": [100, 102], "V": [74, 77], "Q": [92, 95], "K": [69, 73], "R": null, "K'": [[59, 78], [65, 85]], "V'": [[66, 86], [68, 88]], "example": [58, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, writing, killing and calculating.\n< Warren Buffett has biro. Lady Gaga has vacuum cleaner. Dr. Sanjay Gupta has dagger. >. So the entrepreneur has a thing used for writing\n < Kanye West has pen. Alex Morgan has calculator. Sonia Sotomayor has gun. >. So the lawyer has a thing used for killing\n", "ranges": [{"END": [55, 56], "A": [56, 57], "V": [21, 23], "Q": [47, 51], "K": [17, 20], "R": null, "K'": [[24, 33], [27, 40]], "V'": [[28, 41], [32, 43]], "example": [16, 57]}, {"END": [91, 92], "A": [92, 93], "V": [80, 81], "Q": [85, 87], "K": [72, 79], "R": null, "K'": [[59, 66], [63, 68]], "V'": [[64, 69], [65, 71]], "example": [58, 93]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, flying, riding, cooking, calculating and killing.\nPremise: < Norman Foster has goggles. Zaha Hadid has pan. LeBron James has computer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for calculating? Answer: Yes\n Premise: < Rosie Franklin has glider. Jennifer Lawrence has dagger. Sonia Sotomayor has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for flying? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [49, 50], "Q": [69, 72], "K": [44, 48], "R": null, "K'": [[28, 37], [31, 41]], "V'": [[32, 42], [36, 43]], "example": [23, 82]}, {"END": [141, 142], "A": [138, 139], "V": [91, 93], "Q": [130, 133], "K": [87, 90], "R": null, "K'": [[94, 101], [97, 108]], "V'": [[98, 109], [100, 111]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include flying, killing, swiming, cooking, riding and calculating.\nPremise: < Norman Foster has goggles. Zaha Hadid has pan. LeBron James has computer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for calculating? Answer: Yes\n Premise: < Rosie Franklin has glider. Jennifer Lawrence has dagger. Sonia Sotomayor has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for killing? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [49, 50], "Q": [69, 72], "K": [44, 48], "R": null, "K'": [[28, 37], [31, 41]], "V'": [[32, 42], [36, 43]], "example": [23, 82]}, {"END": [141, 142], "A": [138, 139], "V": [91, 93], "Q": [130, 133], "K": [87, 90], "R": null, "K'": [[94, 101], [97, 108]], "V'": [[98, 109], [100, 111]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, cooking, flying, calculating and driving.\nPremise: < Claude Monet has swimsuit. Kanye West has pan. Dr. Jane Goodall has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the artist has a thing used for swiming? Answer: Yes\n Premise: < Agatha Christie has abacus. Norman Foster has plane. Louis Sullivan has pot. >. Answer with Yes or No. Can it be inferred from the premise that the author has a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [74, 77], "V": [29, 32], "Q": [67, 69], "K": [25, 28], "R": null, "K'": [[33, 40], [37, 45]], "V'": [[38, 46], [39, 48]], "example": [20, 81]}, {"END": [137, 138], "A": [134, 135], "V": [92, 95], "Q": [127, 129], "K": [86, 91], "R": null, "K'": [[96, 102], [99, 106]], "V'": [[100, 107], [101, 108]], "example": [82, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, driving, swiming, flying and calculating.\nPremise: < Claude Monet has swimsuit. Kanye West has pan. Dr. Jane Goodall has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the artist has a thing used for swiming? Answer: Yes\n Premise: < Agatha Christie has abacus. Norman Foster has plane. Louis Sullivan has pot. >. Answer with Yes or No. Can it be inferred from the premise that the author has a thing used for cooking? Answer: No\n", "ranges": [{"END": [79, 80], "A": [74, 77], "V": [29, 32], "Q": [67, 69], "K": [25, 28], "R": null, "K'": [[33, 40], [37, 45]], "V'": [[38, 46], [39, 48]], "example": [20, 81]}, {"END": [138, 139], "A": [134, 136], "V": [92, 95], "Q": [127, 129], "K": [86, 91], "R": null, "K'": [[96, 102], [99, 106]], "V'": [[100, 107], [101, 108]], "example": [82, 140]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, cleaning, swiming, communicating and calculating.\nPremise: < Roger Federer has radio. Jane Goodall has mop. Dr. Mehmet Oz has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the doctor has a thing used for communicating? Answer: No\n Premise: < Eminem has telegraph. Meryl Streep has brush. Pablo Picasso has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for painting? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [76, 78], "V": [47, 50], "Q": [69, 71], "K": [39, 46], "R": null, "K'": [[26, 32], [29, 35]], "V'": [[30, 36], [31, 38]], "example": [21, 82]}, {"END": [140, 141], "A": [137, 138], "V": [101, 103], "Q": [130, 132], "K": [94, 100], "R": null, "K'": [[87, 104], [90, 107]], "V'": [[91, 108], [93, 111]], "example": [83, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, communicating, calculating, cleaning and painting.\nPremise: < Roger Federer has radio. Jane Goodall has mop. Dr. Mehmet Oz has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the doctor has a thing used for communicating? Answer: No\n Premise: < Eminem has telegraph. Meryl Streep has brush. Pablo Picasso has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for swiming? Answer: No\n", "ranges": [{"END": [80, 81], "A": [76, 78], "V": [47, 50], "Q": [69, 71], "K": [39, 46], "R": null, "K'": [[26, 32], [29, 35]], "V'": [[30, 36], [31, 38]], "example": [21, 82]}, {"END": [142, 143], "A": [137, 140], "V": [101, 103], "Q": [130, 132], "K": [94, 100], "R": null, "K'": [[87, 104], [90, 107]], "V'": [[91, 108], [93, 111]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < Albert Einstein has pencil. Dr. Sylvia Earle has mop. Rihanna has phone. >. Answer with Yes or No. Can it be inferred from the premise that the musician has a thing used for writing? Answer: No\n Premise: < Johnny Depp has abacus. Dr. Gabor Mat\u00e9 has plane. Roger Federer has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [50, 51], "Q": [70, 73], "K": [46, 49], "R": null, "K'": [[28, 36], [31, 42]], "V'": [[32, 43], [35, 45]], "example": [23, 83]}, {"END": [145, 146], "A": [140, 143], "V": [109, 113], "Q": [132, 135], "K": [105, 108], "R": null, "K'": [[88, 96], [91, 102]], "V'": [[92, 103], [95, 104]], "example": [84, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < Albert Einstein has pencil. Dr. Sylvia Earle has mop. Rihanna has phone. >. Answer with Yes or No. Can it be inferred from the premise that the musician has a thing used for writing? Answer: No\n Premise: < Johnny Depp has abacus. Dr. Gabor Mat\u00e9 has plane. Roger Federer has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for flying? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [50, 51], "Q": [70, 73], "K": [46, 49], "R": null, "K'": [[28, 36], [31, 42]], "V'": [[32, 43], [35, 45]], "example": [23, 83]}, {"END": [143, 144], "A": [140, 141], "V": [109, 113], "Q": [132, 135], "K": [105, 108], "R": null, "K'": [[88, 96], [91, 102]], "V'": [[92, 103], [95, 104]], "example": [84, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving, cooking, swiming, cleaning and communicating.\nPremise: < Richard Dawkins has jeep. LeBron James has pan. Johnny Depp has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for cooking? Answer: Yes\n Premise: < Bill Gates has phone. Carl Sagan has goggles. Kanye West has mop. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [77, 79], "V": [42, 43], "Q": [69, 72], "K": [37, 41], "R": null, "K'": [[30, 44], [33, 47]], "V'": [[34, 48], [36, 50]], "example": [25, 83]}, {"END": [142, 143], "A": [137, 140], "V": [98, 102], "Q": [129, 132], "K": [94, 97], "R": null, "K'": [[88, 103], [91, 107]], "V'": [[92, 108], [93, 110]], "example": [84, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, riding, communicating, driving, swiming and cleaning.\nPremise: < Richard Dawkins has jeep. LeBron James has pan. Johnny Depp has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for cooking? Answer: Yes\n Premise: < Bill Gates has phone. Carl Sagan has goggles. Kanye West has mop. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for communicating? Answer: No\n", "ranges": [{"END": [81, 82], "A": [77, 79], "V": [42, 43], "Q": [69, 72], "K": [37, 41], "R": null, "K'": [[30, 44], [33, 47]], "V'": [[34, 48], [36, 50]], "example": [25, 83]}, {"END": [141, 142], "A": [137, 139], "V": [98, 102], "Q": [129, 132], "K": [94, 97], "R": null, "K'": [[88, 103], [91, 107]], "V'": [[92, 108], [93, 110]], "example": [84, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, calculating, painting, flying and riding.\nPremise: < Frida Kahlo has goggles. Hillary Clinton has plane. Brad Pitt has brush. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer has a thing used for flying? Answer: Yes\n Premise: < Jane Goodall has goggles. Elon Musk has horse. Maya Lin has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [41, 42], "Q": [67, 69], "K": [36, 40], "R": null, "K'": [[25, 43], [30, 45]], "V'": [[31, 46], [35, 48]], "example": [20, 79]}, {"END": [139, 140], "A": [135, 137], "V": [98, 99], "Q": [126, 130], "K": [93, 97], "R": null, "K'": [[84, 100], [87, 103]], "V'": [[88, 104], [92, 107]], "example": [80, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, flying, calculating, painting and riding.\nPremise: < Frida Kahlo has goggles. Hillary Clinton has plane. Brad Pitt has brush. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer has a thing used for flying? Answer: Yes\n Premise: < Jane Goodall has goggles. Elon Musk has horse. Maya Lin has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for swiming? Answer: No\n", "ranges": [{"END": [77, 78], "A": [74, 75], "V": [41, 42], "Q": [67, 69], "K": [36, 40], "R": null, "K'": [[25, 43], [30, 45]], "V'": [[31, 46], [35, 48]], "example": [20, 79]}, {"END": [140, 141], "A": [135, 138], "V": [98, 99], "Q": [126, 130], "K": [93, 97], "R": null, "K'": [[84, 100], [87, 103]], "V'": [[88, 104], [92, 107]], "example": [80, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, communicating, driving, riding, painting and killing.\nPremise: < Jeff Bezos has horse. Ruth Bader Ginsburg has computer. Marie Curie has telephone. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n Premise: < Michael Phelps has dagger. Antoni Gaud\u00ed has car. Claude Monet has spray. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for driving? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [30, 31], "Q": [66, 70], "K": [26, 29], "R": null, "K'": [[32, 41], [38, 44]], "V'": [[39, 45], [40, 47]], "example": [21, 81]}, {"END": [137, 138], "A": [134, 135], "V": [100, 101], "Q": [127, 129], "K": [94, 99], "R": null, "K'": [[86, 102], [90, 105]], "V'": [[91, 106], [93, 108]], "example": [82, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, riding, communicating, killing, painting and calculating.\nPremise: < Jeff Bezos has horse. Ruth Bader Ginsburg has computer. Marie Curie has telephone. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n Premise: < Michael Phelps has dagger. Antoni Gaud\u00ed has car. Claude Monet has spray. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for painting? Answer: No\n", "ranges": [{"END": [79, 80], "A": [75, 77], "V": [30, 31], "Q": [66, 70], "K": [26, 29], "R": null, "K'": [[32, 41], [38, 44]], "V'": [[39, 45], [40, 47]], "example": [21, 81]}, {"END": [137, 138], "A": [134, 135], "V": [100, 101], "Q": [127, 129], "K": [94, 99], "R": null, "K'": [[86, 102], [90, 105]], "V'": [[91, 106], [93, 108]], "example": [82, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < Zaha Hadid has guitar. Usain Bolt has car. Barack Obama has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for playing? Answer: Yes\n Premise: < Meryl Streep has knife. Vincent van Gogh has glider. Oprah Winfrey has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for killing? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [31, 32], "Q": [66, 68], "K": [26, 30], "R": null, "K'": [[33, 40], [37, 44]], "V'": [[38, 45], [39, 47]], "example": [21, 78]}, {"END": [140, 141], "A": [137, 138], "V": [90, 92], "Q": [130, 132], "K": [83, 89], "R": null, "K'": [[93, 102], [98, 107]], "V'": [[99, 108], [101, 111]], "example": [79, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < Zaha Hadid has guitar. Usain Bolt has car. Barack Obama has telegraph. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for playing? Answer: Yes\n Premise: < Meryl Streep has knife. Vincent van Gogh has glider. Oprah Winfrey has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for flying? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [31, 32], "Q": [66, 68], "K": [26, 30], "R": null, "K'": [[33, 40], [37, 44]], "V'": [[38, 45], [39, 47]], "example": [21, 78]}, {"END": [140, 141], "A": [137, 138], "V": [90, 92], "Q": [130, 132], "K": [83, 89], "R": null, "K'": [[93, 102], [98, 107]], "V'": [[99, 108], [101, 111]], "example": [79, 142]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, cooking, calculating and swiming.\n< The goggles is Norman Foster's. The pan is Zaha Hadid's. The computer is LeBron James's. >. So the athlete has a thing used for calculating\n < The abacus is Jane Goodall's. The goggles is Dr. Michio Kaku's. The broom is Sonia Sotomayor's. >. So the scientist has a thing used for calculating\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [43, 44], "Q": [55, 58], "K": [45, 49], "R": null, "K'": [[26, 35], [29, 39]], "V'": [[21, 33], [25, 34]], "example": [19, 64]}, {"END": [116, 117], "A": [117, 118], "V": [67, 70], "Q": [109, 112], "K": [71, 74], "R": null, "K'": [[83, 96], [89, 103]], "V'": [[78, 93], [82, 95]], "example": [65, 118]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, riding, killing, driving and calculating.\n< The gun is Serena Williams's. The truck is Ada Lovelace's. The bicycle is Usain Bolt's. >. So the scientist has a thing used for driving\n < The gun is Pablo Picasso's. The violin is Dr. Sylvia Earle's. The computer is Thurgood Marshall's. >. So the lawyer has a thing used for calculating\n", "ranges": [{"END": [61, 62], "A": [62, 63], "V": [29, 31], "Q": [54, 57], "K": [32, 36], "R": null, "K'": [[22, 44], [25, 48]], "V'": [[20, 40], [21, 43]], "example": [18, 63]}, {"END": [106, 107], "A": [107, 108], "V": [88, 89], "Q": [100, 102], "K": [90, 94], "R": null, "K'": [[68, 78], [71, 84]], "V'": [[66, 75], [67, 77]], "example": [64, 108]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, driving, playing, communicating and flying.\n< The plane is Andy Warhol's. The vacuum cleaner is Neil deGrasse Tyson's. The guitar is Jackson Pollock's. >. So the scientist has a thing used for cleaning\n < The piano is J.K. Rowling's. The telephone is Denzel Washington's. The car is Eminem's. >. So the author has a thing used for playing\n", "ranges": [{"END": [64, 65], "A": [65, 67], "V": [30, 34], "Q": [57, 60], "K": [35, 42], "R": null, "K'": [[23, 48], [26, 51]], "V'": [[21, 46], [22, 47]], "example": [19, 67]}, {"END": [109, 110], "A": [110, 111], "V": [70, 71], "Q": [103, 105], "K": [72, 78], "R": null, "K'": [[85, 94], [88, 97]], "V'": [[82, 92], [84, 93]], "example": [68, 111]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, flying, calculating, cooking and swiming.\n< The plane is Antoni Gaud\u00ed's. The oven is Salvador Dal\u00ed's. The helicopter is Justin Bieber's. >. So the artist has a thing used for cooking\n < The calculator is Mark Twain's. The pencil is Clarence Darrow's. The swim fins is Richard Branson's. >. So the entrepreneur has a thing used for swiming\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [33, 35], "Q": [57, 59], "K": [36, 39], "R": null, "K'": [[24, 47], [29, 51]], "V'": [[22, 43], [23, 46]], "example": [20, 66]}, {"END": [112, 113], "A": [113, 116], "V": [91, 94], "Q": [104, 108], "K": [95, 98], "R": null, "K'": [[72, 83], [75, 87]], "V'": [[69, 79], [71, 82]], "example": [67, 116]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, cooking, calculating, painting and driving.\n< The computer is Rosie Franklin's. The car is Hillary Clinton's. The calculator is Pablo Picasso's. >. So the lawyer has a thing used for driving\n < The swim fins is Frank Lloyd Wright's. The pan is Maya Lin's. The brush is Simone Biles's. >. So the athlete has a thing used for painting\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [31, 32], "Q": [53, 55], "K": [33, 37], "R": null, "K'": [[24, 44], [27, 47]], "V'": [[22, 41], [23, 43]], "example": [20, 61]}, {"END": [104, 105], "A": [105, 106], "V": [84, 86], "Q": [97, 100], "K": [87, 91], "R": null, "K'": [[68, 77], [71, 80]], "V'": [[64, 75], [67, 76]], "example": [62, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, writing, killing, cooking, swiming and communicating.\n< The pot is Jane Austen's. The plane is Steve Jobs's. The telegraph is Dr. Neil deGrasse Tyson's. >. So the entrepreneur has a thing used for flying\n < The knife is Meryl Streep's. The pencil is Pablo Picasso's. The swim fins is Roger Federer's. >. So the actor has a thing used for killing\n", "ranges": [{"END": [69, 70], "A": [70, 71], "V": [34, 35], "Q": [61, 65], "K": [36, 39], "R": null, "K'": [[27, 46], [30, 55]], "V'": [[25, 43], [26, 45]], "example": [23, 71]}, {"END": [117, 118], "A": [118, 119], "V": [74, 76], "Q": [111, 113], "K": [77, 83], "R": null, "K'": [[91, 102], [94, 105]], "V'": [[87, 98], [90, 101]], "example": [72, 119]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, painting and cooking.\n< The motorcycle is Marie Curie's. The oven is Georgia O'Keeffe's. The spray is Cristiano Ronaldo's. >. So the scientist has a thing used for riding\n < The spray is Dr. Gabor Mat\u00e9's. The bicycle is Usain Bolt's. The truck is Neil deGrasse Tyson's. >. So the athlete has a thing used for riding\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [19, 21], "Q": [56, 59], "K": [22, 25], "R": null, "K'": [[32, 45], [38, 50]], "V'": [[29, 42], [31, 44]], "example": [17, 66]}, {"END": [117, 118], "A": [118, 120], "V": [82, 85], "Q": [110, 113], "K": [86, 90], "R": null, "K'": [[72, 97], [78, 104]], "V'": [[69, 94], [71, 96]], "example": [67, 120]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, writing, killing and calculating.\n< The biro is Warren Buffett's. The vacuum cleaner is Lady Gaga's. The dagger is Dr. Sanjay Gupta's. >. So the entrepreneur has a thing used for writing\n < The pen is Kanye West's. The calculator is Alex Morgan's. The gun is Sonia Sotomayor's. >. So the lawyer has a thing used for killing\n", "ranges": [{"END": [64, 65], "A": [65, 66], "V": [18, 20], "Q": [56, 60], "K": [21, 24], "R": null, "K'": [[33, 43], [36, 50]], "V'": [[28, 40], [32, 42]], "example": [16, 66]}, {"END": [109, 110], "A": [110, 111], "V": [88, 89], "Q": [103, 105], "K": [90, 97], "R": null, "K'": [[71, 82], [75, 84]], "V'": [[69, 79], [70, 81]], "example": [67, 111]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, flying, riding, cooking, calculating and killing.\nPremise: < The goggles is Norman Foster's. The pan is Zaha Hadid's. The computer is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for calculating? Answer: Yes\n Premise: < The glider is Rosie Franklin's. The dagger is Jennifer Lawrence's. The motorcycle is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for flying? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [51, 52], "Q": [78, 81], "K": [53, 57], "R": null, "K'": [[34, 43], [37, 47]], "V'": [[29, 41], [33, 42]], "example": [23, 91]}, {"END": [159, 160], "A": [156, 157], "V": [97, 99], "Q": [148, 151], "K": [100, 103], "R": null, "K'": [[110, 120], [113, 127]], "V'": [[107, 117], [109, 119]], "example": [92, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include flying, killing, swiming, cooking, riding and calculating.\nPremise: < The goggles is Norman Foster's. The pan is Zaha Hadid's. The computer is LeBron James's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for calculating? Answer: Yes\n Premise: < The glider is Rosie Franklin's. The dagger is Jennifer Lawrence's. The motorcycle is Sonia Sotomayor's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for killing? Answer: No\n", "ranges": [{"END": [89, 90], "A": [86, 87], "V": [51, 52], "Q": [78, 81], "K": [53, 57], "R": null, "K'": [[34, 43], [37, 47]], "V'": [[29, 41], [33, 42]], "example": [23, 91]}, {"END": [159, 160], "A": [156, 157], "V": [97, 99], "Q": [148, 151], "K": [100, 103], "R": null, "K'": [[110, 120], [113, 127]], "V'": [[107, 117], [109, 119]], "example": [92, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, cooking, flying, calculating and driving.\nPremise: < The swimsuit is Claude Monet's. The pan is Kanye West's. The jeep is Dr. Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the artist has a thing used for swiming? Answer: Yes\n Premise: < The abacus is Agatha Christie's. The plane is Norman Foster's. The pot is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the author has a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [26, 29], "Q": [76, 78], "K": [30, 33], "R": null, "K'": [[39, 50], [43, 55]], "V'": [[37, 47], [38, 49]], "example": [20, 90]}, {"END": [155, 156], "A": [152, 153], "V": [96, 99], "Q": [145, 147], "K": [100, 105], "R": null, "K'": [[111, 120], [114, 124]], "V'": [[109, 118], [110, 119]], "example": [91, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, driving, swiming, flying and calculating.\nPremise: < The swimsuit is Claude Monet's. The pan is Kanye West's. The jeep is Dr. Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the artist has a thing used for swiming? Answer: Yes\n Premise: < The abacus is Agatha Christie's. The plane is Norman Foster's. The pot is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the author has a thing used for cooking? Answer: No\n", "ranges": [{"END": [88, 89], "A": [83, 86], "V": [26, 29], "Q": [76, 78], "K": [30, 33], "R": null, "K'": [[39, 50], [43, 55]], "V'": [[37, 47], [38, 49]], "example": [20, 90]}, {"END": [156, 157], "A": [152, 154], "V": [96, 99], "Q": [145, 147], "K": [100, 105], "R": null, "K'": [[111, 120], [114, 124]], "V'": [[109, 118], [110, 119]], "example": [91, 158]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, cleaning, swiming, communicating and calculating.\nPremise: < The radio is Roger Federer's. The mop is Jane Goodall's. The abacus is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the doctor has a thing used for communicating? Answer: No\n Premise: < The telegraph is Eminem's. The brush is Meryl Streep's. The swimsuit is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for painting? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [85, 87], "V": [46, 49], "Q": [78, 80], "K": [50, 57], "R": null, "K'": [[29, 39], [32, 42]], "V'": [[27, 36], [28, 38]], "example": [21, 91]}, {"END": [158, 159], "A": [155, 156], "V": [107, 109], "Q": [148, 150], "K": [110, 116], "R": null, "K'": [[100, 124], [103, 127]], "V'": [[97, 120], [99, 123]], "example": [92, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, communicating, calculating, cleaning and painting.\nPremise: < The radio is Roger Federer's. The mop is Jane Goodall's. The abacus is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the doctor has a thing used for communicating? Answer: No\n Premise: < The telegraph is Eminem's. The brush is Meryl Streep's. The swimsuit is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for swiming? Answer: No\n", "ranges": [{"END": [89, 90], "A": [85, 87], "V": [46, 49], "Q": [78, 80], "K": [50, 57], "R": null, "K'": [[29, 39], [32, 42]], "V'": [[27, 36], [28, 38]], "example": [21, 91]}, {"END": [160, 161], "A": [155, 158], "V": [107, 109], "Q": [148, 150], "K": [110, 116], "R": null, "K'": [[100, 124], [103, 127]], "V'": [[97, 120], [99, 123]], "example": [92, 162]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, calculating, flying, writing, swiming and cleaning.\nPremise: < The pencil is Albert Einstein's. The mop is Dr. Sylvia Earle's. The phone is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the musician has a thing used for writing? Answer: No\n Premise: < The abacus is Johnny Depp's. The plane is Dr. Gabor Mat\u00e9's. The goggles is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [53, 54], "Q": [79, 82], "K": [55, 58], "R": null, "K'": [[33, 43], [36, 49]], "V'": [[29, 40], [32, 42]], "example": [23, 92]}, {"END": [163, 164], "A": [158, 161], "V": [121, 125], "Q": [150, 153], "K": [126, 129], "R": null, "K'": [[102, 111], [105, 117]], "V'": [[98, 109], [101, 110]], "example": [93, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, flying, cleaning, communicating, swiming and calculating.\nPremise: < The pencil is Albert Einstein's. The mop is Dr. Sylvia Earle's. The phone is Rihanna's. >. Answer with Yes or No. Can it be inferred from the premise that the musician has a thing used for writing? Answer: No\n Premise: < The abacus is Johnny Depp's. The plane is Dr. Gabor Mat\u00e9's. The goggles is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for flying? Answer: No\n", "ranges": [{"END": [90, 91], "A": [87, 88], "V": [53, 54], "Q": [79, 82], "K": [55, 58], "R": null, "K'": [[33, 43], [36, 49]], "V'": [[29, 40], [32, 42]], "example": [23, 92]}, {"END": [161, 162], "A": [158, 159], "V": [121, 125], "Q": [150, 153], "K": [126, 129], "R": null, "K'": [[102, 111], [105, 117]], "V'": [[98, 109], [101, 110]], "example": [93, 163]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving, cooking, swiming, cleaning and communicating.\nPremise: < The jeep is Richard Dawkins's. The pan is LeBron James's. The motorcycle is Johnny Depp's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for cooking? Answer: Yes\n Premise: < The phone is Bill Gates's. The goggles is Carl Sagan's. The mop is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for swiming? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [41, 42], "Q": [78, 81], "K": [43, 47], "R": null, "K'": [[34, 54], [37, 57]], "V'": [[31, 51], [33, 53]], "example": [25, 92]}, {"END": [160, 161], "A": [155, 158], "V": [107, 111], "Q": [147, 150], "K": [112, 115], "R": null, "K'": [[100, 122], [103, 126]], "V'": [[98, 119], [99, 121]], "example": [93, 162]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, riding, communicating, driving, swiming and cleaning.\nPremise: < The jeep is Richard Dawkins's. The pan is LeBron James's. The motorcycle is Johnny Depp's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete has a thing used for cooking? Answer: Yes\n Premise: < The phone is Bill Gates's. The goggles is Carl Sagan's. The mop is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist has a thing used for communicating? Answer: No\n", "ranges": [{"END": [90, 91], "A": [86, 88], "V": [41, 42], "Q": [78, 81], "K": [43, 47], "R": null, "K'": [[34, 54], [37, 57]], "V'": [[31, 51], [33, 53]], "example": [25, 92]}, {"END": [159, 160], "A": [155, 157], "V": [107, 111], "Q": [147, 150], "K": [112, 115], "R": null, "K'": [[100, 122], [103, 126]], "V'": [[98, 119], [99, 121]], "example": [93, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, calculating, painting, flying and riding.\nPremise: < The goggles is Frida Kahlo's. The plane is Hillary Clinton's. The brush is Brad Pitt's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer has a thing used for flying? Answer: Yes\n Premise: < The goggles is Jane Goodall's. The horse is Elon Musk's. The abacus is Maya Lin's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [40, 41], "Q": [76, 78], "K": [42, 46], "R": null, "K'": [[31, 53], [36, 55]], "V'": [[26, 50], [30, 52]], "example": [20, 88]}, {"END": [157, 158], "A": [153, 155], "V": [106, 107], "Q": [144, 148], "K": [108, 112], "R": null, "K'": [[99, 120], [102, 123]], "V'": [[94, 116], [98, 119]], "example": [89, 159]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, flying, calculating, painting and riding.\nPremise: < The goggles is Frida Kahlo's. The plane is Hillary Clinton's. The brush is Brad Pitt's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer has a thing used for flying? Answer: Yes\n Premise: < The goggles is Jane Goodall's. The horse is Elon Musk's. The abacus is Maya Lin's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for swiming? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [40, 41], "Q": [76, 78], "K": [42, 46], "R": null, "K'": [[31, 53], [36, 55]], "V'": [[26, 50], [30, 52]], "example": [20, 88]}, {"END": [158, 159], "A": [153, 156], "V": [106, 107], "Q": [144, 148], "K": [108, 112], "R": null, "K'": [[99, 120], [102, 123]], "V'": [[94, 116], [98, 119]], "example": [89, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, communicating, driving, riding, painting and killing.\nPremise: < The horse is Jeff Bezos's. The computer is Ruth Bader Ginsburg's. The telephone is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n Premise: < The dagger is Michael Phelps's. The car is Antoni Gaud\u00ed's. The spray is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for driving? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [84, 86], "V": [27, 28], "Q": [75, 79], "K": [29, 32], "R": null, "K'": [[38, 51], [44, 54]], "V'": [[36, 48], [37, 50]], "example": [21, 90]}, {"END": [155, 156], "A": [152, 153], "V": [107, 108], "Q": [145, 147], "K": [109, 114], "R": null, "K'": [[99, 121], [103, 124]], "V'": [[96, 118], [98, 120]], "example": [91, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, riding, communicating, killing, painting and calculating.\nPremise: < The horse is Jeff Bezos's. The computer is Ruth Bader Ginsburg's. The telephone is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur has a thing used for riding? Answer: Yes\n Premise: < The dagger is Michael Phelps's. The car is Antoni Gaud\u00ed's. The spray is Claude Monet's. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for painting? Answer: No\n", "ranges": [{"END": [88, 89], "A": [84, 86], "V": [27, 28], "Q": [75, 79], "K": [29, 32], "R": null, "K'": [[38, 51], [44, 54]], "V'": [[36, 48], [37, 50]], "example": [21, 90]}, {"END": [155, 156], "A": [152, 153], "V": [107, 108], "Q": [145, 147], "K": [109, 114], "R": null, "K'": [[99, 121], [103, 124]], "V'": [[96, 118], [98, 120]], "example": [91, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include driving, flying, playing, riding, killing and communicating.\nPremise: < The guitar is Zaha Hadid's. The car is Usain Bolt's. The telegraph is Barack Obama's. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for playing? Answer: Yes\n Premise: < The knife is Meryl Streep's. The glider is Vincent van Gogh's. The bicycle is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for killing? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [27, 28], "Q": [75, 77], "K": [29, 33], "R": null, "K'": [[39, 50], [43, 54]], "V'": [[37, 47], [38, 49]], "example": [21, 87]}, {"END": [158, 159], "A": [155, 156], "V": [93, 95], "Q": [148, 150], "K": [96, 102], "R": null, "K'": [[109, 122], [114, 127]], "V'": [[106, 118], [108, 121]], "example": [88, 160]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, riding, playing, driving, killing and flying.\nPremise: < The guitar is Zaha Hadid's. The car is Usain Bolt's. The telegraph is Barack Obama's. >. Answer with Yes or No. Can it be inferred from the premise that the architect has a thing used for playing? Answer: Yes\n Premise: < The knife is Meryl Streep's. The glider is Vincent van Gogh's. The bicycle is Oprah Winfrey's. >. Answer with Yes or No. Can it be inferred from the premise that the actor has a thing used for flying? Answer: No\n", "ranges": [{"END": [85, 86], "A": [82, 83], "V": [27, 28], "Q": [75, 77], "K": [29, 33], "R": null, "K'": [[39, 50], [43, 54]], "V'": [[37, 47], [38, 49]], "example": [21, 87]}, {"END": [158, 159], "A": [155, 156], "V": [93, 95], "Q": [148, 150], "K": [96, 102], "R": null, "K'": [[109, 122], [114, 127]], "V'": [[106, 118], [108, 121]], "example": [88, 160]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, cooking, calculating and swiming.\n< Lionel Messi has goggles. Usain Bolt has pan. Jennifer Lawrence has computer. >. The athlete does not have a thing used for calculating\n < Eminem has abacus. Rosie Franklin has goggles. Albert Einstein has broom. >. The scientist does not have a thing used for calculating\n", "ranges": [{"END": [54, 55], "A'": [55, 56], "V'": [41, 42], "Q": [45, 48], "K'": [37, 40], "R": [49, 50], "K": [[20, 30], [24, 34]], "V": [[25, 35], [29, 36]], "example": [19, 56]}, {"END": [93, 94], "A'": [94, 95], "V'": [62, 65], "Q": [84, 87], "K'": [58, 61], "R": [88, 89], "K": [[66, 75], [69, 78]], "V": [[70, 79], [74, 81]], "example": [57, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, driving and killing.\n< Richard Dawkins has gun. George Orwell has truck. Marie Curie has bicycle. >. The scientist does not have a thing used for driving\n < Gloria Allred has horse. F. Lee Bailey has truck. Carl Sagan has gun. >. The lawyer does not have a thing used for killing\n", "ranges": [{"END": [47, 48], "A'": [48, 49], "V'": [25, 27], "Q": [38, 41], "K'": [21, 24], "R": [42, 43], "K": [[15, 28], [18, 31]], "V": [[19, 32], [20, 35]], "example": [14, 49]}, {"END": [83, 84], "A'": [84, 85], "V'": [71, 72], "Q": [75, 77], "K'": [67, 70], "R": [78, 79], "K": [[51, 58], [55, 63]], "V": [[56, 64], [57, 66]], "example": [50, 85]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, driving, playing, communicating and flying.\n< Toni Morrison has plane. Norman Foster has vacuum cleaner. George Orwell has guitar. >. The author does not have a thing used for cleaning\n < Natalie Portman has piano. J.K. Rowling has telephone. George Orwell has car. >. The author does not have a thing used for playing\n", "ranges": [{"END": [53, 54], "A'": [54, 56], "V'": [32, 36], "Q": [45, 47], "K'": [28, 31], "R": [48, 49], "K": [[20, 37], [25, 40]], "V": [[26, 41], [27, 42]], "example": [19, 56]}, {"END": [91, 92], "A'": [92, 93], "V'": [63, 64], "Q": [83, 85], "K'": [58, 62], "R": [86, 87], "K": [[65, 75], [71, 78]], "V": [[72, 79], [74, 80]], "example": [57, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include killing, communicating, writing, cooking and playing.\n< Stephen King has phone. Claude Monet has oven. Frida Kahlo has pencil. >. The artist does not have a thing used for communicating\n < Jackson Pollock has pencil. Salvador Dal\u00ed has dagger. Johnny Depp has guitar. >. The artist does not have a thing used for playing\n", "ranges": [{"END": [52, 53], "A'": [53, 55], "V'": [23, 24], "Q": [44, 46], "K'": [20, 22], "R": [47, 48], "K": [[25, 32], [28, 37]], "V": [[29, 38], [31, 41]], "example": [19, 55]}, {"END": [88, 89], "A'": [89, 90], "V'": [76, 77], "Q": [80, 82], "K'": [72, 75], "R": [83, 84], "K": [[57, 65], [60, 68]], "V": [[61, 69], [64, 71]], "example": [56, 90]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, cooking, calculating, painting and driving.\n< Alan Dershowitz has computer. Usain Bolt has car. Thurgood Marshall has calculator. >. The lawyer does not have a thing used for driving\n < Usain Bolt has swim fins. Lionel Messi has pan. Jane Austen has brush. >. The athlete does not have a thing used for painting\n", "ranges": [{"END": [54, 55], "A'": [55, 56], "V'": [34, 35], "Q": [46, 48], "K'": [29, 33], "R": [49, 50], "K": [[21, 36], [26, 40]], "V": [[27, 41], [28, 43]], "example": [20, 56]}, {"END": [92, 93], "A'": [93, 94], "V'": [78, 80], "Q": [83, 86], "K'": [74, 77], "R": [87, 88], "K": [[58, 67], [62, 71]], "V": [[63, 72], [66, 73]], "example": [57, 94]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, writing, communicating and driving.\n< Steve Jobs has truck. Claude Monet has oven. Warren Buffett has pencil. >. The entrepreneur does not have a thing used for cooking\n < Justin Bieber has oven. Pablo Picasso has telegraph. Vincent van Gogh has pencil. >. The artist does not have a thing used for cooking\n", "ranges": [{"END": [52, 53], "A'": [53, 55], "V'": [29, 31], "Q": [42, 46], "K'": [25, 28], "R": [47, 48], "K": [[18, 32], [21, 35]], "V": [[22, 36], [24, 39]], "example": [17, 55]}, {"END": [92, 93], "A'": [93, 95], "V'": [62, 64], "Q": [84, 86], "K'": [57, 61], "R": [87, 88], "K": [[65, 72], [68, 77]], "V": [[69, 78], [71, 81]], "example": [56, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include painting, communicating, flying and driving.\n< Dr. Sanjay Gupta has spray. Dr. Jane Goodall has brush. Agatha Christie has truck. >. The doctor does not have a thing used for driving\n < George Orwell has roller. Mark Twain has glider. Usain Bolt has telephone. >. The author does not have a thing used for communicating\n", "ranges": [{"END": [56, 57], "A'": [57, 58], "V'": [43, 45], "Q": [48, 50], "K'": [37, 42], "R": [51, 52], "K": [[17, 28], [24, 33]], "V": [[25, 34], [27, 36]], "example": [16, 58]}, {"END": [92, 93], "A'": [93, 95], "V'": [79, 81], "Q": [84, 86], "K'": [74, 78], "R": [87, 88], "K": [[60, 67], [63, 70]], "V": [[64, 71], [66, 73]], "example": [59, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, playing, cleaning, riding, flying and cooking.\n< Taylor Swift has bicycle. Carl Sagan has mop. Nikola Tesla has plane. >. The scientist does not have a thing used for riding\n < Mies van der Rohe has oven. Louis Sullivan has calculator. Oprah Winfrey has piano. >. The architect does not have a thing used for playing\n", "ranges": [{"END": [56, 57], "A'": [57, 59], "V'": [26, 29], "Q": [47, 50], "K'": [23, 25], "R": [51, 52], "K": [[30, 37], [33, 42]], "V": [[34, 43], [36, 44]], "example": [22, 59]}, {"END": [97, 98], "A'": [98, 99], "V'": [85, 86], "Q": [89, 91], "K'": [79, 84], "R": [92, 93], "K": [[61, 71], [67, 75]], "V": [[68, 76], [70, 78]], "example": [60, 99]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, cooking, swiming and cleaning.\nPremise: < Lionel Messi has goggles. Usain Bolt has pan. Jennifer Lawrence has computer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for calculating? Answer: Yes\n Premise: < Dr. Michio Kaku has abacus. Richard Dawkins has goggles. Albert Einstein has broom. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [75, 76], "V'": [45, 46], "Q": [65, 68], "K'": [41, 44], "R": [69, 70], "K": [[24, 34], [28, 38]], "V": [[29, 39], [33, 40]], "example": [19, 80]}, {"END": [143, 144], "A'": [140, 141], "V'": [92, 95], "Q": [130, 133], "K'": [85, 91], "R": [134, 135], "K": [[96, 105], [99, 108]], "V": [[100, 109], [104, 111]], "example": [81, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, cooking, cleaning and calculating.\nPremise: < Lionel Messi has goggles. Usain Bolt has pan. Jennifer Lawrence has computer. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for calculating? Answer: Yes\n Premise: < Dr. Michio Kaku has abacus. Richard Dawkins has goggles. Albert Einstein has broom. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for swiming? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [75, 76], "V'": [45, 46], "Q": [65, 68], "K'": [41, 44], "R": [69, 70], "K": [[24, 34], [28, 38]], "V": [[29, 39], [33, 40]], "example": [19, 80]}, {"END": [145, 146], "A'": [140, 143], "V'": [92, 95], "Q": [130, 133], "K'": [85, 91], "R": [134, 135], "K": [[96, 105], [99, 108]], "V": [[100, 109], [104, 111]], "example": [81, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, cooking, calculating, riding and painting.\nPremise: < Toni Morrison has chalk. Sonia Sotomayor has pot. J.K. Rowling has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the author does not have a thing used for writing? Answer: No\n Premise: < Georgia O'Keeffe has pot. Denzel Washington has spray. Jennifer Lawrence has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [84, 85], "A'": [81, 82], "V'": [41, 42], "Q": [72, 74], "K'": [33, 40], "R": [75, 76], "K": [[24, 43], [29, 49]], "V": [[30, 50], [32, 53]], "example": [19, 86]}, {"END": [145, 146], "A'": [141, 143], "V'": [98, 99], "Q": [132, 134], "K'": [91, 97], "R": [135, 136], "K": [[100, 107], [103, 110]], "V": [[104, 111], [106, 113]], "example": [87, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, cooking, riding, painting and writing.\nPremise: < Toni Morrison has chalk. Sonia Sotomayor has pot. J.K. Rowling has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the author does not have a thing used for writing? Answer: No\n Premise: < Georgia O'Keeffe has pot. Denzel Washington has spray. Jennifer Lawrence has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not have a thing used for painting? Answer: No\n", "ranges": [{"END": [84, 85], "A'": [81, 82], "V'": [41, 42], "Q": [72, 74], "K'": [33, 40], "R": [75, 76], "K": [[24, 43], [29, 49]], "V": [[30, 50], [32, 53]], "example": [19, 86]}, {"END": [144, 145], "A'": [141, 142], "V'": [98, 99], "Q": [132, 134], "K'": [91, 97], "R": [135, 136], "K": [[100, 107], [103, 110]], "V": [[104, 111], [106, 113]], "example": [87, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include communicating, cleaning, driving, flying and calculating.\nPremise: < Denzel Washington has helicopter. Ada Lovelace has telephone. Nikola Tesla has car. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for flying? Answer: Yes\n Premise: < Mies van der Rohe has radio. Ieoh Ming Pei has mop. Roger Federer has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not have a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [28, 31], "Q": [66, 69], "K'": [24, 27], "R": [70, 71], "K": [[32, 40], [36, 45]], "V": [[37, 46], [39, 47]], "example": [19, 81]}, {"END": [144, 145], "A'": [141, 142], "V'": [110, 113], "Q": [132, 134], "K'": [106, 109], "R": [135, 136], "K": [[86, 95], [92, 102]], "V": [[93, 103], [94, 105]], "example": [82, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cleaning, driving, calculating, flying and communicating.\nPremise: < Denzel Washington has helicopter. Ada Lovelace has telephone. Nikola Tesla has car. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for flying? Answer: Yes\n Premise: < Mies van der Rohe has radio. Ieoh Ming Pei has mop. Roger Federer has abacus. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not have a thing used for communicating? Answer: No\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [28, 31], "Q": [66, 69], "K'": [24, 27], "R": [70, 71], "K": [[32, 40], [36, 45]], "V": [[37, 46], [39, 47]], "example": [19, 81]}, {"END": [145, 146], "A'": [141, 143], "V'": [110, 113], "Q": [132, 134], "K'": [106, 109], "R": [135, 136], "K": [[86, 95], [92, 102]], "V": [[93, 103], [94, 105]], "example": [82, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include writing, painting, swiming, riding and killing.\nPremise: < Neil deGrasse Tyson has biro. Gloria Allred has dagger. Hillary Clinton has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for writing? Answer: Yes\n Premise: < Justin Bieber has knife. Harper Lee has roller. Drake has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the musician does not have a thing used for painting? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [33, 35], "Q": [70, 72], "K'": [25, 32], "R": [73, 74], "K": [[36, 44], [40, 48]], "V": [[41, 49], [43, 51]], "example": [20, 84]}, {"END": [142, 143], "A'": [139, 140], "V'": [101, 103], "Q": [129, 132], "K'": [97, 100], "R": [133, 134], "K": [[89, 104], [93, 106]], "V": [[94, 107], [96, 110]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include swiming, killing, painting, riding and writing.\nPremise: < Neil deGrasse Tyson has biro. Gloria Allred has dagger. Hillary Clinton has motorcycle. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for writing? Answer: Yes\n Premise: < Justin Bieber has knife. Harper Lee has roller. Drake has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the musician does not have a thing used for killing? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [79, 80], "V'": [33, 35], "Q": [70, 72], "K'": [25, 32], "R": [73, 74], "K": [[36, 44], [40, 48]], "V": [[41, 49], [43, 51]], "example": [20, 84]}, {"END": [142, 143], "A'": [139, 140], "V'": [101, 103], "Q": [129, 132], "K'": [97, 100], "R": [133, 134], "K": [[89, 104], [93, 106]], "V": [[94, 107], [96, 110]], "example": [85, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, playing, communicating and writing.\nPremise: < Thurgood Marshall has guitar. Michelangelo has radio. Johnnie Cochran has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for communicating? Answer: Yes\n Premise: < Justin Bieber has oven. Pablo Picasso has telegraph. Vincent van Gogh has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [33, 34], "Q": [63, 65], "K'": [29, 32], "R": [66, 67], "K": [[22, 35], [26, 40]], "V": [[27, 41], [28, 44]], "example": [17, 78]}, {"END": [139, 140], "A'": [135, 137], "V'": [88, 90], "Q": [126, 128], "K'": [83, 87], "R": [129, 130], "K": [[91, 98], [94, 103]], "V": [[95, 104], [97, 107]], "example": [79, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include playing, writing, communicating and cooking.\nPremise: < Thurgood Marshall has guitar. Michelangelo has radio. Johnnie Cochran has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for communicating? Answer: Yes\n Premise: < Justin Bieber has oven. Pablo Picasso has telegraph. Vincent van Gogh has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not have a thing used for communicating? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [72, 74], "V'": [33, 34], "Q": [63, 65], "K'": [29, 32], "R": [66, 67], "K": [[22, 35], [26, 40]], "V": [[27, 41], [28, 44]], "example": [17, 78]}, {"END": [139, 140], "A'": [135, 137], "V'": [88, 90], "Q": [126, 128], "K'": [83, 87], "R": [129, 130], "K": [[91, 98], [94, 103]], "V": [[95, 104], [97, 107]], "example": [79, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, writing, calculating, communicating and riding.\nPremise: < Elon Musk has pen. Warren Buffett has telegraph. Agatha Christie has horse. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for writing? Answer: No\n Premise: < Oprah Winfrey has oven. Warren Buffett has abacus. Adele has phone. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [45, 46], "Q": [65, 69], "K'": [39, 44], "R": [70, 71], "K": [[25, 32], [29, 35]], "V": [[30, 36], [31, 38]], "example": [20, 81]}, {"END": [142, 143], "A'": [138, 140], "V'": [107, 108], "Q": [127, 131], "K'": [103, 106], "R": [132, 133], "K": [[86, 95], [91, 98]], "V": [[92, 99], [94, 102]], "example": [82, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, riding, communicating, calculating and writing.\nPremise: < Elon Musk has pen. Warren Buffett has telegraph. Agatha Christie has horse. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for writing? Answer: No\n Premise: < Oprah Winfrey has oven. Warren Buffett has abacus. Adele has phone. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for calculating? Answer: No\n", "ranges": [{"END": [79, 80], "A'": [76, 77], "V'": [45, 46], "Q": [65, 69], "K'": [39, 44], "R": [70, 71], "K": [[25, 32], [29, 35]], "V": [[30, 36], [31, 38]], "example": [20, 81]}, {"END": [141, 142], "A'": [138, 139], "V'": [107, 108], "Q": [127, 131], "K'": [103, 106], "R": [132, 133], "K": [[86, 95], [91, 98]], "V": [[92, 99], [94, 102]], "example": [82, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include calculating, painting, killing and cooking.\nPremise: < Jane Goodall has oven. Louis Sullivan has calculator. Albert Einstein has palette. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n Premise: < Usain Bolt has pan. Clarence Darrow has palette. Serena Williams has gun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for painting? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [33, 35], "Q": [61, 64], "K'": [28, 32], "R": [65, 66], "K": [[21, 36], [24, 39]], "V": [[25, 40], [27, 42]], "example": [16, 76]}, {"END": [133, 134], "A'": [130, 131], "V'": [93, 95], "Q": [120, 123], "K'": [88, 92], "R": [124, 125], "K": [[81, 96], [85, 99]], "V": [[86, 100], [87, 101]], "example": [77, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include cooking, calculating, killing and painting.\nPremise: < Jane Goodall has oven. Louis Sullivan has calculator. Albert Einstein has palette. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n Premise: < Usain Bolt has pan. Clarence Darrow has palette. Serena Williams has gun. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for killing? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [71, 72], "V'": [33, 35], "Q": [61, 64], "K'": [28, 32], "R": [65, 66], "K": [[21, 36], [24, 39]], "V": [[25, 40], [27, 42]], "example": [16, 76]}, {"END": [133, 134], "A'": [130, 131], "V'": [93, 95], "Q": [120, 123], "K'": [88, 92], "R": [124, 125], "K": [[81, 96], [85, 99]], "V": [[86, 100], [87, 101]], "example": [77, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, calculating, cleaning, cooking and flying.\nPremise: < Lady Gaga has oven. Alan Dershowitz has broom. Thurgood Marshall has horse. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n Premise: < Hillary Clinton has abacus. Rosie Franklin has pan. Ruth Bader Ginsburg has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [79, 80], "A'": [75, 77], "V'": [29, 31], "Q": [66, 68], "K'": [25, 28], "R": [69, 70], "K": [[32, 41], [37, 45]], "V": [[38, 46], [40, 47]], "example": [20, 81]}, {"END": [143, 144], "A'": [139, 141], "V'": [99, 100], "Q": [130, 132], "K'": [95, 98], "R": [133, 134], "K": [[86, 101], [90, 107]], "V": [[91, 108], [94, 111]], "example": [82, 145]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3]", "texts": "Capabilities of things include riding, cooking, calculating, cleaning and flying.\nPremise: < Lady Gaga has oven. Alan Dershowitz has broom. Thurgood Marshall has horse. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n Premise: < Hillary Clinton has abacus. Rosie Franklin has pan. Ruth Bader Ginsburg has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for flying? Answer: No\n", "ranges": [{"END": [79, 80], "A'": [75, 77], "V'": [29, 31], "Q": [66, 68], "K'": [25, 28], "R": [69, 70], "K": [[32, 41], [37, 45]], "V": [[38, 46], [40, 47]], "example": [20, 81]}, {"END": [142, 143], "A'": [139, 140], "V'": [99, 100], "Q": [130, 132], "K'": [95, 98], "R": [133, 134], "K": [[86, 101], [90, 107]], "V": [[91, 108], [94, 111]], "example": [82, 144]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, cooking, calculating and swiming.\n< The goggles is Lionel Messi's. The pan is Usain Bolt's. The computer is Jennifer Lawrence's. >. The athlete does not have a thing used for calculating\n < The abacus is Eminem's. The goggles is Rosie Franklin's. The broom is Albert Einstein's. >. The scientist does not have a thing used for calculating\n", "ranges": [{"END": [63, 64], "A'": [64, 65], "V'": [44, 45], "Q": [54, 57], "K'": [46, 49], "R": [58, 59], "K": [[26, 36], [30, 40]], "V": [[21, 34], [25, 35]], "example": [19, 65]}, {"END": [111, 112], "A'": [112, 113], "V'": [68, 71], "Q": [102, 105], "K'": [72, 75], "R": [106, 107], "K": [[84, 94], [87, 97]], "V": [[79, 91], [83, 93]], "example": [66, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, driving and killing.\n< The gun is Richard Dawkins's. The truck is George Orwell's. The bicycle is Marie Curie's. >. The scientist does not have a thing used for driving\n < The horse is Gloria Allred's. The truck is F. Lee Bailey's. The gun is Carl Sagan's. >. The lawyer does not have a thing used for killing\n", "ranges": [{"END": [56, 57], "A'": [57, 58], "V'": [25, 27], "Q": [47, 50], "K'": [28, 31], "R": [51, 52], "K": [[18, 39], [21, 42]], "V": [[16, 35], [17, 38]], "example": [14, 58]}, {"END": [101, 102], "A'": [102, 103], "V'": [83, 84], "Q": [93, 95], "K'": [85, 88], "R": [96, 97], "K": [[63, 74], [67, 79]], "V": [[61, 71], [62, 73]], "example": [59, 103]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, driving, playing, communicating and flying.\n< The plane is Toni Morrison's. The vacuum cleaner is Norman Foster's. The guitar is George Orwell's. >. The author does not have a thing used for cleaning\n < The piano is Natalie Portman's. The telephone is J.K. Rowling's. The car is George Orwell's. >. The author does not have a thing used for playing\n", "ranges": [{"END": [62, 63], "A'": [63, 65], "V'": [32, 36], "Q": [54, 56], "K'": [37, 40], "R": [57, 58], "K": [[23, 46], [28, 49]], "V": [[21, 44], [22, 45]], "example": [19, 65]}, {"END": [109, 110], "A'": [110, 111], "V'": [68, 69], "Q": [101, 103], "K'": [70, 74], "R": [104, 105], "K": [[81, 93], [87, 96]], "V": [[78, 91], [80, 92]], "example": [66, 111]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include killing, communicating, writing, cooking and playing.\n< The phone is Stephen King's. The oven is Claude Monet's. The pencil is Frida Kahlo's. >. The artist does not have a thing used for communicating\n < The pencil is Jackson Pollock's. The dagger is Salvador Dal\u00ed's. The guitar is Johnny Depp's. >. The artist does not have a thing used for playing\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [21, 22], "Q": [53, 55], "K'": [23, 25], "R": [56, 57], "K": [[32, 43], [35, 48]], "V": [[29, 39], [31, 42]], "example": [19, 64]}, {"END": [106, 107], "A'": [107, 108], "V'": [88, 89], "Q": [98, 100], "K'": [90, 93], "R": [101, 102], "K": [[71, 81], [74, 84]], "V": [[67, 78], [70, 80]], "example": [65, 108]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, cooking, calculating, painting and driving.\n< The computer is Alan Dershowitz's. The car is Usain Bolt's. The calculator is Thurgood Marshall's. >. The lawyer does not have a thing used for driving\n < The swim fins is Usain Bolt's. The pan is Lionel Messi's. The brush is Jane Austen's. >. The athlete does not have a thing used for painting\n", "ranges": [{"END": [63, 64], "A'": [64, 65], "V'": [33, 34], "Q": [55, 57], "K'": [35, 39], "R": [58, 59], "K": [[24, 46], [29, 50]], "V": [[22, 43], [23, 45]], "example": [20, 65]}, {"END": [110, 111], "A'": [111, 112], "V'": [90, 92], "Q": [101, 104], "K'": [93, 96], "R": [105, 106], "K": [[72, 82], [76, 86]], "V": [[68, 80], [71, 81]], "example": [66, 112]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, writing, communicating and driving.\n< The truck is Steve Jobs's. The oven is Claude Monet's. The pencil is Warren Buffett's. >. The entrepreneur does not have a thing used for cooking\n < The oven is Justin Bieber's. The telegraph is Pablo Picasso's. The pencil is Vincent van Gogh's. >. The artist does not have a thing used for cooking\n", "ranges": [{"END": [61, 62], "A'": [62, 64], "V'": [29, 31], "Q": [51, 55], "K'": [32, 35], "R": [56, 57], "K": [[22, 43], [25, 46]], "V": [[19, 39], [21, 42]], "example": [17, 64]}, {"END": [110, 111], "A'": [111, 113], "V'": [67, 69], "Q": [102, 104], "K'": [70, 74], "R": [105, 106], "K": [[81, 92], [84, 97]], "V": [[78, 88], [80, 91]], "example": [65, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include painting, communicating, flying and driving.\n< The spray is Dr. Sanjay Gupta's. The brush is Dr. Jane Goodall's. The truck is Agatha Christie's. >. The doctor does not have a thing used for driving\n < The roller is George Orwell's. The glider is Mark Twain's. The telephone is Usain Bolt's. >. The author does not have a thing used for communicating\n", "ranges": [{"END": [65, 66], "A'": [66, 67], "V'": [44, 46], "Q": [57, 59], "K'": [47, 52], "R": [60, 61], "K": [[21, 35], [28, 40]], "V": [[18, 32], [20, 34]], "example": [16, 67]}, {"END": [110, 111], "A'": [111, 113], "V'": [90, 92], "Q": [102, 104], "K'": [93, 97], "R": [105, 106], "K": [[73, 83], [76, 86]], "V": [[70, 80], [72, 82]], "example": [68, 113]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, playing, cleaning, riding, flying and cooking.\n< The bicycle is Taylor Swift's. The mop is Carl Sagan's. The plane is Nikola Tesla's. >. The scientist does not have a thing used for riding\n < The oven is Mies van der Rohe's. The calculator is Louis Sullivan's. The piano is Oprah Winfrey's. >. The architect does not have a thing used for playing\n", "ranges": [{"END": [65, 66], "A'": [66, 68], "V'": [24, 27], "Q": [56, 59], "K'": [28, 30], "R": [60, 61], "K": [[37, 46], [40, 51]], "V": [[34, 44], [36, 45]], "example": [22, 68]}, {"END": [115, 116], "A'": [116, 117], "V'": [95, 96], "Q": [107, 109], "K'": [97, 102], "R": [110, 111], "K": [[74, 87], [80, 91]], "V": [[71, 84], [73, 86]], "example": [69, 117]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, cooking, swiming and cleaning.\nPremise: < The goggles is Lionel Messi's. The pan is Usain Bolt's. The computer is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for calculating? Answer: Yes\n Premise: < The abacus is Dr. Michio Kaku's. The goggles is Richard Dawkins's. The broom is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [48, 49], "Q": [74, 77], "K'": [50, 53], "R": [78, 79], "K": [[30, 40], [34, 44]], "V": [[25, 38], [29, 39]], "example": [19, 89]}, {"END": [161, 162], "A'": [158, 159], "V'": [95, 98], "Q": [148, 151], "K'": [99, 105], "R": [152, 153], "K": [[114, 124], [117, 127]], "V": [[109, 121], [113, 123]], "example": [90, 163]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, cooking, cleaning and calculating.\nPremise: < The goggles is Lionel Messi's. The pan is Usain Bolt's. The computer is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for calculating? Answer: Yes\n Premise: < The abacus is Dr. Michio Kaku's. The goggles is Richard Dawkins's. The broom is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for swiming? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [84, 85], "V'": [48, 49], "Q": [74, 77], "K'": [50, 53], "R": [78, 79], "K": [[30, 40], [34, 44]], "V": [[25, 38], [29, 39]], "example": [19, 89]}, {"END": [163, 164], "A'": [158, 161], "V'": [95, 98], "Q": [148, 151], "K'": [99, 105], "R": [152, 153], "K": [[114, 124], [117, 127]], "V": [[109, 121], [113, 123]], "example": [90, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, cooking, calculating, riding and painting.\nPremise: < The chalk is Toni Morrison's. The pot is Sonia Sotomayor's. The abacus is J.K. Rowling's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not have a thing used for writing? Answer: No\n Premise: < The pot is Georgia O'Keeffe's. The spray is Denzel Washington's. The motorcycle is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [90, 91], "V'": [37, 38], "Q": [81, 83], "K'": [39, 46], "R": [84, 85], "K": [[28, 54], [33, 60]], "V": [[25, 50], [27, 53]], "example": [19, 95]}, {"END": [163, 164], "A'": [159, 161], "V'": [101, 102], "Q": [150, 152], "K'": [103, 109], "R": [153, 154], "K": [[116, 126], [119, 129]], "V": [[113, 123], [115, 125]], "example": [96, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, cooking, riding, painting and writing.\nPremise: < The chalk is Toni Morrison's. The pot is Sonia Sotomayor's. The abacus is J.K. Rowling's. >. Answer with Yes or No. Can it be inferred from the premise that the author does not have a thing used for writing? Answer: No\n Premise: < The pot is Georgia O'Keeffe's. The spray is Denzel Washington's. The motorcycle is Jennifer Lawrence's. >. Answer with Yes or No. Can it be inferred from the premise that the actor does not have a thing used for painting? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [90, 91], "V'": [37, 38], "Q": [81, 83], "K'": [39, 46], "R": [84, 85], "K": [[28, 54], [33, 60]], "V": [[25, 50], [27, 53]], "example": [19, 95]}, {"END": [162, 163], "A'": [159, 160], "V'": [101, 102], "Q": [150, 152], "K'": [103, 109], "R": [153, 154], "K": [[116, 126], [119, 129]], "V": [[113, 123], [115, 125]], "example": [96, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include communicating, cleaning, driving, flying and calculating.\nPremise: < The helicopter is Denzel Washington's. The telephone is Ada Lovelace's. The car is Nikola Tesla's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for flying? Answer: Yes\n Premise: < The radio is Mies van der Rohe's. The mop is Ieoh Ming Pei's. The abacus is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not have a thing used for calculating? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [85, 86], "V'": [25, 28], "Q": [75, 78], "K'": [29, 32], "R": [79, 80], "K": [[39, 49], [43, 54]], "V": [[36, 47], [38, 48]], "example": [19, 90]}, {"END": [162, 163], "A'": [159, 160], "V'": [122, 125], "Q": [150, 152], "K'": [126, 129], "R": [153, 154], "K": [[98, 111], [104, 118]], "V": [[96, 108], [97, 110]], "example": [91, 164]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cleaning, driving, calculating, flying and communicating.\nPremise: < The helicopter is Denzel Washington's. The telephone is Ada Lovelace's. The car is Nikola Tesla's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for flying? Answer: Yes\n Premise: < The radio is Mies van der Rohe's. The mop is Ieoh Ming Pei's. The abacus is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the architect does not have a thing used for communicating? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [85, 86], "V'": [25, 28], "Q": [75, 78], "K'": [29, 32], "R": [79, 80], "K": [[39, 49], [43, 54]], "V": [[36, 47], [38, 48]], "example": [19, 90]}, {"END": [163, 164], "A'": [159, 161], "V'": [122, 125], "Q": [150, 152], "K'": [126, 129], "R": [153, 154], "K": [[98, 111], [104, 118]], "V": [[96, 108], [97, 110]], "example": [91, 165]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include writing, painting, swiming, riding and killing.\nPremise: < The biro is Neil deGrasse Tyson's. The dagger is Gloria Allred's. The motorcycle is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for writing? Answer: Yes\n Premise: < The knife is Justin Bieber's. The roller is Harper Lee's. The swim fins is Drake's. >. Answer with Yes or No. Can it be inferred from the premise that the musician does not have a thing used for painting? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [88, 89], "V'": [26, 28], "Q": [79, 81], "K'": [29, 36], "R": [82, 83], "K": [[43, 54], [47, 58]], "V": [[40, 51], [42, 53]], "example": [20, 93]}, {"END": [160, 161], "A'": [157, 158], "V'": [110, 112], "Q": [147, 150], "K'": [113, 116], "R": [151, 152], "K": [[102, 124], [106, 126]], "V": [[99, 120], [101, 123]], "example": [94, 162]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include swiming, killing, painting, riding and writing.\nPremise: < The biro is Neil deGrasse Tyson's. The dagger is Gloria Allred's. The motorcycle is Hillary Clinton's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for writing? Answer: Yes\n Premise: < The knife is Justin Bieber's. The roller is Harper Lee's. The swim fins is Drake's. >. Answer with Yes or No. Can it be inferred from the premise that the musician does not have a thing used for killing? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [88, 89], "V'": [26, 28], "Q": [79, 81], "K'": [29, 36], "R": [82, 83], "K": [[43, 54], [47, 58]], "V": [[40, 51], [42, 53]], "example": [20, 93]}, {"END": [160, 161], "A'": [157, 158], "V'": [110, 112], "Q": [147, 150], "K'": [113, 116], "R": [151, 152], "K": [[102, 124], [106, 126]], "V": [[99, 120], [101, 123]], "example": [94, 162]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, playing, communicating and writing.\nPremise: < The guitar is Thurgood Marshall's. The radio is Michelangelo's. The pencil is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for communicating? Answer: Yes\n Premise: < The oven is Justin Bieber's. The telegraph is Pablo Picasso's. The pencil is Vincent van Gogh's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [33, 34], "Q": [72, 74], "K'": [35, 38], "R": [75, 76], "K": [[25, 46], [29, 51]], "V": [[23, 42], [24, 45]], "example": [17, 87]}, {"END": [157, 158], "A'": [153, 155], "V'": [93, 95], "Q": [144, 146], "K'": [96, 100], "R": [147, 148], "K": [[107, 118], [110, 123]], "V": [[104, 114], [106, 117]], "example": [88, 159]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include playing, writing, communicating and cooking.\nPremise: < The guitar is Thurgood Marshall's. The radio is Michelangelo's. The pencil is Johnnie Cochran's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for communicating? Answer: Yes\n Premise: < The oven is Justin Bieber's. The telegraph is Pablo Picasso's. The pencil is Vincent van Gogh's. >. Answer with Yes or No. Can it be inferred from the premise that the artist does not have a thing used for communicating? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [33, 34], "Q": [72, 74], "K'": [35, 38], "R": [75, 76], "K": [[25, 46], [29, 51]], "V": [[23, 42], [24, 45]], "example": [17, 87]}, {"END": [157, 158], "A'": [153, 155], "V'": [93, 95], "Q": [144, 146], "K'": [96, 100], "R": [147, 148], "K": [[107, 118], [110, 123]], "V": [[104, 114], [106, 117]], "example": [88, 159]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, writing, calculating, communicating and riding.\nPremise: < The pen is Elon Musk's. The telegraph is Warren Buffett's. The horse is Agatha Christie's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for writing? Answer: No\n Premise: < The oven is Oprah Winfrey's. The abacus is Warren Buffett's. The phone is Adele's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for communicating? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [85, 86], "V'": [46, 47], "Q": [74, 78], "K'": [48, 53], "R": [79, 80], "K": [[28, 39], [32, 42]], "V": [[26, 36], [27, 38]], "example": [20, 90]}, {"END": [160, 161], "A'": [156, 158], "V'": [119, 120], "Q": [145, 149], "K'": [121, 124], "R": [150, 151], "K": [[99, 112], [104, 115]], "V": [[96, 108], [98, 111]], "example": [91, 162]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, riding, communicating, calculating and writing.\nPremise: < The pen is Elon Musk's. The telegraph is Warren Buffett's. The horse is Agatha Christie's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for writing? Answer: No\n Premise: < The oven is Oprah Winfrey's. The abacus is Warren Buffett's. The phone is Adele's. >. Answer with Yes or No. Can it be inferred from the premise that the entrepreneur does not have a thing used for calculating? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [85, 86], "V'": [46, 47], "Q": [74, 78], "K'": [48, 53], "R": [79, 80], "K": [[28, 39], [32, 42]], "V": [[26, 36], [27, 38]], "example": [20, 90]}, {"END": [159, 160], "A'": [156, 157], "V'": [119, 120], "Q": [145, 149], "K'": [121, 124], "R": [150, 151], "K": [[99, 112], [104, 115]], "V": [[96, 108], [98, 111]], "example": [91, 161]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include calculating, painting, killing and cooking.\nPremise: < The oven is Jane Goodall's. The calculator is Louis Sullivan's. The palette is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n Premise: < The pan is Usain Bolt's. The palette is Clarence Darrow's. The gun is Serena Williams's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for painting? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 34], "Q": [70, 73], "K'": [35, 39], "R": [74, 75], "K": [[25, 46], [28, 49]], "V": [[22, 43], [24, 45]], "example": [16, 85]}, {"END": [151, 152], "A'": [148, 149], "V'": [101, 103], "Q": [138, 141], "K'": [104, 108], "R": [142, 143], "K": [[93, 114], [97, 117]], "V": [[91, 112], [92, 113]], "example": [86, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include cooking, calculating, killing and painting.\nPremise: < The oven is Jane Goodall's. The calculator is Louis Sullivan's. The palette is Albert Einstein's. >. Answer with Yes or No. Can it be inferred from the premise that the scientist does not have a thing used for calculating? Answer: Yes\n Premise: < The pan is Usain Bolt's. The palette is Clarence Darrow's. The gun is Serena Williams's. >. Answer with Yes or No. Can it be inferred from the premise that the athlete does not have a thing used for killing? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 34], "Q": [70, 73], "K'": [35, 39], "R": [74, 75], "K": [[25, 46], [28, 49]], "V": [[22, 43], [24, 45]], "example": [16, 85]}, {"END": [151, 152], "A'": [148, 149], "V'": [101, 103], "Q": [138, 141], "K'": [104, 108], "R": [142, 143], "K": [[93, 114], [97, 117]], "V": [[91, 112], [92, 113]], "example": [86, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, calculating, cleaning, cooking and flying.\nPremise: < The oven is Lady Gaga's. The broom is Alan Dershowitz's. The horse is Thurgood Marshall's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n Premise: < The abacus is Hillary Clinton's. The pan is Rosie Franklin's. The helicopter is Ruth Bader Ginsburg's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [26, 28], "Q": [75, 77], "K'": [29, 32], "R": [78, 79], "K": [[39, 50], [44, 54]], "V": [[36, 48], [38, 49]], "example": [20, 90]}, {"END": [161, 162], "A'": [157, 159], "V'": [108, 109], "Q": [148, 150], "K'": [110, 113], "R": [151, 152], "K": [[100, 121], [104, 127]], "V": [[96, 117], [99, 120]], "example": [91, 163]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,capabilities_of_things.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Capabilities of things include riding, cooking, calculating, cleaning and flying.\nPremise: < The oven is Lady Gaga's. The broom is Alan Dershowitz's. The horse is Thurgood Marshall's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for cooking? Answer: Yes\n Premise: < The abacus is Hillary Clinton's. The pan is Rosie Franklin's. The helicopter is Ruth Bader Ginsburg's. >. Answer with Yes or No. Can it be inferred from the premise that the lawyer does not have a thing used for flying? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [26, 28], "Q": [75, 77], "K'": [29, 32], "R": [78, 79], "K": [[39, 50], [44, 54]], "V": [[36, 48], [38, 49]], "example": [20, 90]}, {"END": [160, 161], "A'": [157, 158], "V'": [108, 109], "Q": [148, 150], "K'": [110, 113], "R": [151, 152], "K": [[100, 121], [104, 127]], "V": [[96, 117], [99, 120]], "example": [91, 162]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Salvador Dal\u00ed has knife. Dr. Sylvia Earle has truck. Taylor Swift has swimsuit. >. So who has a thing used for swiming? the musician\n < Harper Lee has swim fins. Justin Bieber has truck. Clarence Darrow has oven. >. So who has a thing used for cooking? the lawyer\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [42, 44], "Q": [58, 61], "K": [45, 48], "R": null, "K'": [[29, 39], [31, 41]], "V'": [[25, 32], [28, 38]], "example": [24, 65]}, {"END": [103, 104], "A": [104, 105], "V": [83, 87], "Q": [100, 102], "K": [88, 90], "R": null, "K'": [[71, 80], [74, 82]], "V'": [[67, 75], [70, 79]], "example": [66, 105]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the architect, the scientist, the author and the lawyer.\n< Mies van der Rohe has radio. Hillary Clinton has bicycle. LeBron James has car. >. So who has a thing used for riding? the lawyer\n < Norman Foster has violin. J.R.R. Tolkien has gun. Marie Curie has computer. >. So who has a thing used for calculating? the scientist\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [35, 39], "Q": [60, 62], "K": [40, 43], "R": null, "K'": [[33, 49], [34, 50]], "V'": [[26, 44], [32, 48]], "example": [25, 65]}, {"END": [103, 104], "A": [104, 106], "V": [86, 89], "Q": [101, 102], "K": [90, 91], "R": null, "K'": [[71, 84], [73, 85]], "V'": [[67, 74], [70, 83]], "example": [66, 106]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the musician, the athlete, the actor and the architect.\n< Lionel Messi has vacuum cleaner. J.K. Rowling has horse. Jennifer Lawrence has biro. >. So who has a thing used for writing? the actor\n < Kanye West has roller. Roger Federer has piano. Zaha Hadid has swim fins. >. So who has a thing used for painting? the musician\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [45, 48], "Q": [61, 62], "K": [49, 51], "R": null, "K'": [[31, 43], [35, 44]], "V'": [[26, 36], [30, 42]], "example": [25, 65]}, {"END": [101, 102], "A": [102, 104], "V": [67, 71], "Q": [99, 100], "K": [72, 74], "R": null, "K'": [[79, 86], [80, 89]], "V'": [[75, 81], [78, 85]], "example": [66, 104]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the artist, the doctor and the scientist.\n< Andy Warhol has pencil. Warren Buffett has roller. Stephen Hawking has pot. >. So who has a thing used for writing? the artist\n < Dr. Anthony Fauci has goggles. Jane Goodall has pencil. Oprah Winfrey has jeep. >. So who has a thing used for swiming? the doctor\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [24, 27], "Q": [54, 55], "K": [28, 31], "R": null, "K'": [[36, 43], [38, 44]], "V'": [[32, 39], [35, 42]], "example": [23, 58]}, {"END": [102, 103], "A": [103, 104], "V": [60, 66], "Q": [98, 101], "K": [67, 71], "R": null, "K'": [[76, 86], [79, 88]], "V'": [[72, 80], [75, 85]], "example": [59, 104]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the scientist and the architect.\n< Maya Lin has dagger. Simone Biles has vacuum cleaner. Frank Lloyd Wright has motorcycle. >. So who has a thing used for cleaning? the athlete\n < Taylor Swift has goggles. Dr. Gabor Mat\u00e9 has pan. Jane Goodall has pencil. >. So who has a thing used for cooking? the doctor\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [34, 38], "Q": [60, 62], "K": [39, 43], "R": null, "K'": [[31, 48], [33, 50]], "V'": [[27, 44], [30, 47]], "example": [26, 66]}, {"END": [105, 106], "A": [106, 107], "V": [76, 82], "Q": [102, 104], "K": [83, 84], "R": null, "K'": [[71, 89], [75, 92]], "V'": [[68, 85], [70, 88]], "example": [67, 107]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the artist, the scientist and the athlete.\n< Leonardo DiCaprio has pot. Charlize Theron has telegraph. Frida Kahlo has plane. >. So who has a thing used for flying? the artist\n < Rosie Franklin has car. Johnnie Cochran has guitar. Michael Phelps has swim fins. >. So who has a thing used for driving? the scientist\n", "ranges": [{"END": [62, 63], "A": [63, 64], "V": [43, 48], "Q": [60, 61], "K": [49, 50], "R": null, "K'": [[32, 40], [33, 42]], "V'": [[26, 34], [31, 39]], "example": [25, 64]}, {"END": [100, 101], "A": [101, 103], "V": [66, 69], "Q": [98, 99], "K": [70, 71], "R": null, "K'": [[78, 85], [79, 88]], "V'": [[72, 80], [77, 84]], "example": [65, 103]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the musician, the athlete and the scientist.\n< Dr. Gabor Mat\u00e9 has oven. Usain Bolt has phone. Neil deGrasse Tyson has pen. >. So who has a thing used for communicating? the athlete\n < Johnny Depp has violin. Taylor Swift has pot. Serena Williams has jeep. >. So who has a thing used for playing? the actor\n", "ranges": [{"END": [66, 67], "A": [67, 69], "V": [37, 41], "Q": [63, 65], "K": [42, 43], "R": null, "K'": [[34, 52], [36, 53]], "V'": [[27, 44], [33, 51]], "example": [26, 69]}, {"END": [101, 102], "A": [102, 103], "V": [71, 74], "Q": [99, 100], "K": [75, 77], "R": null, "K'": [[81, 87], [82, 89]], "V'": [[78, 83], [80, 86]], "example": [70, 103]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the scientist, the actor and the architect.\n< Adele has motorcycle. Louis Sullivan has spray. Carl Sagan has jeep. >. So who has a thing used for riding? the musician\n < Johnny Depp has swim fins. Hillary Clinton has dagger. Adele has swimsuit. >. So who has a thing used for killing? the lawyer\n", "ranges": [{"END": [60, 61], "A": [61, 63], "V": [26, 29], "Q": [57, 59], "K": [30, 32], "R": null, "K'": [[38, 45], [40, 47]], "V'": [[33, 41], [37, 44]], "example": [25, 63]}, {"END": [100, 101], "A": [101, 102], "V": [73, 77], "Q": [98, 99], "K": [78, 80], "R": null, "K'": [[69, 85], [72, 88]], "V'": [[65, 81], [68, 84]], "example": [64, 102]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the lawyer, the doctor, the scientist and the architect.\nPremise: < Salvador Dal\u00ed has knife. Dr. Sylvia Earle has truck. Taylor Swift has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the artist? Answer: No\n Premise: < Carl Sagan has plane. Gloria Allred has swim fins. Norman Foster has knife. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the scientist? Answer: Yes\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [50, 52], "Q": [83, 86], "K": [53, 56], "R": null, "K'": [[37, 47], [39, 49]], "V'": [[33, 40], [36, 46]], "example": [28, 93]}, {"END": [153, 154], "A": [148, 151], "V": [98, 101], "Q": [146, 147], "K": [102, 103], "R": null, "K'": [[109, 117], [112, 119]], "V'": [[104, 113], [108, 116]], "example": [94, 155]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the scientist, the architect, the lawyer and the doctor.\nPremise: < Salvador Dal\u00ed has knife. Dr. Sylvia Earle has truck. Taylor Swift has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the artist? Answer: No\n Premise: < Carl Sagan has plane. Gloria Allred has swim fins. Norman Foster has knife. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the architect? Answer: No\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [50, 52], "Q": [83, 86], "K": [53, 56], "R": null, "K'": [[37, 47], [39, 49]], "V'": [[33, 40], [36, 46]], "example": [28, 93]}, {"END": [152, 153], "A": [148, 150], "V": [98, 101], "Q": [146, 147], "K": [102, 103], "R": null, "K'": [[109, 117], [112, 119]], "V'": [[104, 113], [108, 116]], "example": [94, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the architect, the artist and the actor.\nPremise: < Jennifer Lawrence has pan. Beyonc\u00e9 has broom. Louis Sullivan has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the architect? Answer: No\n Premise: < Vincent van Gogh has telephone. Sonia Sotomayor has plane. Zaha Hadid has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the architect? Answer: Yes\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [29, 32], "Q": [75, 77], "K": [33, 34], "R": null, "K'": [[39, 47], [41, 48]], "V'": [[35, 42], [38, 46]], "example": [24, 84]}, {"END": [152, 153], "A": [148, 150], "V": [108, 112], "Q": [144, 147], "K": [113, 117], "R": null, "K'": [[95, 106], [97, 107]], "V'": [[89, 98], [94, 105]], "example": [85, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the artist, the musician, the actor and the lawyer.\nPremise: < Jennifer Lawrence has pan. Beyonc\u00e9 has broom. Louis Sullivan has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the architect? Answer: No\n Premise: < Vincent van Gogh has telephone. Sonia Sotomayor has plane. Zaha Hadid has goggles. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the lawyer? Answer: No\n", "ranges": [{"END": [82, 83], "A": [78, 80], "V": [29, 32], "Q": [75, 77], "K": [33, 34], "R": null, "K'": [[39, 47], [41, 48]], "V'": [[35, 42], [38, 46]], "example": [24, 84]}, {"END": [152, 153], "A": [148, 150], "V": [108, 112], "Q": [144, 147], "K": [113, 117], "R": null, "K'": [[95, 106], [97, 107]], "V'": [[89, 98], [94, 105]], "example": [85, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the architect, the scientist, the athlete and the artist.\nPremise: < Kanye West has roller. Roger Federer has piano. Zaha Hadid has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n Premise: < Cristiano Ronaldo has plane. Albert Einstein has goggles. Pablo Picasso has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the athlete? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [31, 35], "Q": [80, 81], "K": [36, 38], "R": null, "K'": [[43, 50], [44, 53]], "V'": [[39, 45], [42, 49]], "example": [26, 88]}, {"END": [151, 152], "A": [146, 149], "V": [93, 98], "Q": [144, 145], "K": [99, 100], "R": null, "K'": [[105, 114], [109, 117]], "V'": [[101, 110], [104, 113]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the musician, the artist and the architect.\nPremise: < Kanye West has roller. Roger Federer has piano. Zaha Hadid has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n Premise: < Cristiano Ronaldo has plane. Albert Einstein has goggles. Pablo Picasso has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: No\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [31, 35], "Q": [80, 81], "K": [36, 38], "R": null, "K'": [[43, 50], [44, 53]], "V'": [[39, 45], [42, 49]], "example": [26, 88]}, {"END": [150, 151], "A": [146, 148], "V": [93, 98], "Q": [144, 145], "K": [99, 100], "R": null, "K'": [[105, 114], [109, 117]], "V'": [[101, 110], [104, 113]], "example": [89, 152]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the athlete and the author.\nPremise: < Dr. Temple Grandin has swim fins. Agatha Christie has broom. Dr. Sylvia Earle has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is the doctor? Answer: No\n Premise: < Roger Federer has truck. Johnny Depp has guitar. Dr. Gabor Mat\u00e9 has oven. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is the athlete? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [85, 87], "V": [36, 41], "Q": [82, 84], "K": [42, 44], "R": null, "K'": [[32, 52], [35, 55]], "V'": [[26, 45], [31, 51]], "example": [21, 91]}, {"END": [152, 153], "A": [147, 150], "V": [96, 99], "Q": [145, 146], "K": [100, 102], "R": null, "K'": [[107, 116], [108, 118]], "V'": [[103, 109], [106, 115]], "example": [92, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the author, the actor and the doctor.\nPremise: < Dr. Temple Grandin has swim fins. Agatha Christie has broom. Dr. Sylvia Earle has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is the doctor? Answer: No\n Premise: < Roger Federer has truck. Johnny Depp has guitar. Dr. Gabor Mat\u00e9 has oven. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is the actor? Answer: No\n", "ranges": [{"END": [89, 90], "A": [85, 87], "V": [36, 41], "Q": [82, 84], "K": [42, 44], "R": null, "K'": [[32, 52], [35, 55]], "V'": [[26, 45], [31, 51]], "example": [21, 91]}, {"END": [151, 152], "A": [147, 149], "V": [96, 99], "Q": [145, 146], "K": [100, 102], "R": null, "K'": [[107, 116], [108, 118]], "V'": [[103, 109], [106, 115]], "example": [92, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < Leonardo DiCaprio has pot. Charlize Theron has telegraph. Frida Kahlo has plane. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: Yes\n Premise: < Elon Musk has motorcycle. Ruth Bader Ginsburg has pan. Dr. Jane Goodall has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the lawyer? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [47, 52], "Q": [81, 82], "K": [53, 54], "R": null, "K'": [[36, 44], [37, 46]], "V'": [[30, 38], [35, 43]], "example": [25, 89]}, {"END": [153, 154], "A": [149, 151], "V": [102, 108], "Q": [146, 148], "K": [109, 110], "R": null, "K'": [[99, 117], [101, 119]], "V'": [[94, 111], [98, 116]], "example": [90, 155]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < Leonardo DiCaprio has pot. Charlize Theron has telegraph. Frida Kahlo has plane. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: Yes\n Premise: < Elon Musk has motorcycle. Ruth Bader Ginsburg has pan. Dr. Jane Goodall has jeep. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the entrepreneur? Answer: No\n", "ranges": [{"END": [87, 88], "A": [83, 85], "V": [47, 52], "Q": [81, 82], "K": [53, 54], "R": null, "K'": [[36, 44], [37, 46]], "V'": [[30, 38], [35, 43]], "example": [25, 89]}, {"END": [155, 156], "A": [149, 153], "V": [102, 108], "Q": [146, 148], "K": [109, 110], "R": null, "K'": [[99, 117], [101, 119]], "V'": [[94, 111], [98, 116]], "example": [90, 157]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the musician, the doctor, the entrepreneur and the author.\nPremise: < Mark Twain has calculator. Bill Gates has plane. Ada Lovelace has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the author? Answer: No\n Premise: < Lady Gaga has pan. Dr. Sanjay Gupta has dagger. Warren Buffett has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [80, 82], "V": [39, 42], "Q": [78, 79], "K": [43, 44], "R": null, "K'": [[36, 50], [38, 51]], "V'": [[32, 45], [35, 49]], "example": [27, 86]}, {"END": [152, 153], "A": [146, 150], "V": [108, 111], "Q": [142, 145], "K": [112, 115], "R": null, "K'": [[95, 105], [96, 107]], "V'": [[91, 97], [94, 104]], "example": [87, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the musician and the doctor.\nPremise: < Mark Twain has calculator. Bill Gates has plane. Ada Lovelace has guitar. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the author? Answer: No\n Premise: < Lady Gaga has pan. Dr. Sanjay Gupta has dagger. Warren Buffett has swim fins. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the musician? Answer: No\n", "ranges": [{"END": [84, 85], "A": [80, 82], "V": [39, 42], "Q": [78, 79], "K": [43, 44], "R": null, "K'": [[36, 50], [38, 51]], "V'": [[32, 45], [35, 49]], "example": [27, 86]}, {"END": [151, 152], "A": [146, 149], "V": [108, 111], "Q": [142, 145], "K": [112, 115], "R": null, "K'": [[95, 105], [96, 107]], "V'": [[91, 97], [94, 104]], "example": [87, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the architect, the musician and the lawyer.\nPremise: < Johnny Depp has swim fins. Hillary Clinton has dagger. Adele has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for killing is the actor? Answer: No\n Premise: < Ada Lovelace has brush. Frank Lloyd Wright has pan. Ieoh Ming Pei has broom. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the scientist? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [38, 42], "Q": [80, 81], "K": [43, 45], "R": null, "K'": [[34, 50], [37, 53]], "V'": [[30, 46], [33, 49]], "example": [25, 88]}, {"END": [151, 152], "A": [146, 149], "V": [93, 97], "Q": [144, 145], "K": [98, 100], "R": null, "K'": [[105, 115], [106, 117]], "V'": [[101, 107], [104, 114]], "example": [89, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the lawyer, the scientist, the musician and the architect.\nPremise: < Johnny Depp has swim fins. Hillary Clinton has dagger. Adele has swimsuit. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for killing is the actor? Answer: No\n Premise: < Ada Lovelace has brush. Frank Lloyd Wright has pan. Ieoh Ming Pei has broom. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [38, 42], "Q": [80, 81], "K": [43, 45], "R": null, "K'": [[34, 50], [37, 53]], "V'": [[30, 46], [33, 49]], "example": [25, 88]}, {"END": [150, 151], "A": [146, 148], "V": [93, 97], "Q": [144, 145], "K": [98, 100], "R": null, "K'": [[105, 115], [106, 117]], "V'": [[101, 107], [104, 114]], "example": [89, 152]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the actor, the entrepreneur, the athlete and the musician.\nPremise: < Usain Bolt has dagger. Kanye West has telegraph. Lionel Messi has calculator. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is the athlete? Answer: No\n Premise: < Oprah Winfrey has swim fins. Vincent van Gogh has bicycle. Meryl Streep has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the actor? Answer: Yes\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [40, 44], "Q": [82, 84], "K": [45, 47], "R": null, "K'": [[37, 53], [39, 55]], "V'": [[32, 48], [36, 52]], "example": [27, 92]}, {"END": [160, 161], "A": [156, 158], "V": [117, 123], "Q": [154, 155], "K": [124, 127], "R": null, "K'": [[103, 113], [106, 116]], "V'": [[97, 107], [102, 112]], "example": [93, 162]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the athlete, the actor, the artist and the entrepreneur.\nPremise: < Usain Bolt has dagger. Kanye West has telegraph. Lionel Messi has calculator. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is the athlete? Answer: No\n Premise: < Oprah Winfrey has swim fins. Vincent van Gogh has bicycle. Meryl Streep has helicopter. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the entrepreneur? Answer: No\n", "ranges": [{"END": [90, 91], "A": [85, 88], "V": [40, 44], "Q": [82, 84], "K": [45, 47], "R": null, "K'": [[37, 53], [39, 55]], "V'": [[32, 48], [36, 52]], "example": [27, 92]}, {"END": [162, 163], "A": [156, 160], "V": [117, 123], "Q": [154, 155], "K": [124, 127], "R": null, "K'": [[103, 113], [106, 116]], "V'": [[97, 107], [102, 112]], "example": [93, 164]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< The knife is Salvador Dal\u00ed's. The truck is Dr. Sylvia Earle's. The swimsuit is Taylor Swift's. >. So who has a thing used for swiming? the musician\n < The swim fins is Harper Lee's. The truck is Justin Bieber's. The oven is Clarence Darrow's. >. So who has a thing used for cooking? the lawyer\n", "ranges": [{"END": [71, 72], "A": [72, 74], "V": [53, 55], "Q": [67, 70], "K": [49, 52], "R": null, "K'": [[26, 36], [28, 38]], "V'": [[29, 39], [32, 45]], "example": [24, 74]}, {"END": [121, 122], "A": [122, 123], "V": [102, 106], "Q": [118, 120], "K": [99, 101], "R": null, "K'": [[77, 88], [80, 90]], "V'": [[81, 91], [84, 95]], "example": [75, 123]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the architect, the scientist, the author and the lawyer.\n< The radio is Mies van der Rohe's. The bicycle is Hillary Clinton's. The car is LeBron James's. >. So who has a thing used for riding? the lawyer\n < The violin is Norman Foster's. The gun is J.R.R. Tolkien's. The computer is Marie Curie's. >. So who has a thing used for calculating? the scientist\n", "ranges": [{"END": [72, 73], "A": [73, 74], "V": [43, 47], "Q": [69, 71], "K": [39, 42], "R": null, "K'": [[27, 51], [28, 52]], "V'": [[29, 53], [35, 57]], "example": [25, 74]}, {"END": [121, 122], "A": [122, 124], "V": [104, 107], "Q": [119, 120], "K": [102, 103], "R": null, "K'": [[77, 87], [79, 88]], "V'": [[80, 89], [83, 98]], "example": [75, 124]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the musician, the athlete, the actor and the architect.\n< The vacuum cleaner is Lionel Messi's. The horse is J.K. Rowling's. The biro is Jennifer Lawrence's. >. So who has a thing used for writing? the actor\n < The roller is Kanye West's. The piano is Roger Federer's. The swim fins is Zaha Hadid's. >. So who has a thing used for painting? the musician\n", "ranges": [{"END": [72, 73], "A": [73, 74], "V": [55, 58], "Q": [70, 71], "K": [52, 54], "R": null, "K'": [[27, 40], [31, 41]], "V'": [[32, 42], [36, 48]], "example": [25, 74]}, {"END": [119, 120], "A": [120, 122], "V": [80, 84], "Q": [117, 118], "K": [77, 79], "R": null, "K'": [[88, 97], [89, 100]], "V'": [[90, 101], [93, 105]], "example": [75, 122]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the artist, the doctor and the scientist.\n< The pencil is Andy Warhol's. The roller is Warren Buffett's. The pot is Stephen Hawking's. >. So who has a thing used for writing? the artist\n < The goggles is Dr. Anthony Fauci's. The pencil is Jane Goodall's. The jeep is Oprah Winfrey's. >. So who has a thing used for swiming? the doctor\n", "ranges": [{"END": [65, 66], "A": [66, 67], "V": [29, 32], "Q": [63, 64], "K": [25, 28], "R": null, "K'": [[36, 46], [38, 47]], "V'": [[39, 48], [42, 51]], "example": [23, 67]}, {"END": [120, 121], "A": [121, 122], "V": [75, 81], "Q": [116, 119], "K": [70, 74], "R": null, "K'": [[85, 96], [88, 98]], "V'": [[89, 99], [92, 104]], "example": [68, 122]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the scientist and the architect.\n< The dagger is Maya Lin's. The vacuum cleaner is Simone Biles's. The motorcycle is Frank Lloyd Wright's. >. So who has a thing used for cleaning? the athlete\n < The goggles is Taylor Swift's. The pan is Dr. Gabor Mat\u00e9's. The pencil is Jane Goodall's. >. So who has a thing used for cooking? the doctor\n", "ranges": [{"END": [72, 73], "A": [73, 75], "V": [43, 47], "Q": [69, 71], "K": [38, 42], "R": null, "K'": [[28, 51], [30, 53]], "V'": [[31, 54], [34, 57]], "example": [26, 75]}, {"END": [123, 124], "A": [124, 125], "V": [91, 97], "Q": [120, 122], "K": [89, 90], "R": null, "K'": [[78, 101], [82, 104]], "V'": [[83, 105], [85, 108]], "example": [76, 125]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the artist, the scientist and the athlete.\n< The pot is Leonardo DiCaprio's. The telegraph is Charlize Theron's. The plane is Frida Kahlo's. >. So who has a thing used for flying? the artist\n < The car is Rosie Franklin's. The guitar is Johnnie Cochran's. The swim fins is Michael Phelps's. >. So who has a thing used for driving? the scientist\n", "ranges": [{"END": [71, 72], "A": [72, 73], "V": [52, 57], "Q": [69, 70], "K": [50, 51], "R": null, "K'": [[27, 38], [28, 40]], "V'": [[29, 41], [34, 46]], "example": [25, 73]}, {"END": [118, 119], "A": [119, 121], "V": [78, 81], "Q": [116, 117], "K": [76, 77], "R": null, "K'": [[85, 96], [86, 99]], "V'": [[87, 100], [92, 104]], "example": [74, 121]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the musician, the athlete and the scientist.\n< The oven is Dr. Gabor Mat\u00e9's. The phone is Usain Bolt's. The pen is Neil deGrasse Tyson's. >. So who has a thing used for communicating? the athlete\n < The violin is Johnny Depp's. The pot is Taylor Swift's. The jeep is Serena Williams's. >. So who has a thing used for playing? the actor\n", "ranges": [{"END": [75, 76], "A": [76, 78], "V": [43, 47], "Q": [72, 74], "K": [41, 42], "R": null, "K'": [[28, 51], [30, 52]], "V'": [[31, 53], [37, 60]], "example": [26, 78]}, {"END": [119, 120], "A": [120, 121], "V": [84, 87], "Q": [117, 118], "K": [81, 83], "R": null, "K'": [[91, 99], [92, 101]], "V'": [[93, 102], [95, 105]], "example": [79, 121]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the scientist, the actor and the architect.\n< The motorcycle is Adele's. The spray is Louis Sullivan's. The jeep is Carl Sagan's. >. So who has a thing used for riding? the musician\n < The swim fins is Johnny Depp's. The dagger is Hillary Clinton's. The swimsuit is Adele's. >. So who has a thing used for killing? the lawyer\n", "ranges": [{"END": [69, 70], "A": [70, 72], "V": [30, 33], "Q": [66, 68], "K": [27, 29], "R": null, "K'": [[37, 48], [39, 50]], "V'": [[40, 51], [44, 54]], "example": [25, 72]}, {"END": [118, 119], "A": [119, 120], "V": [89, 93], "Q": [116, 117], "K": [86, 88], "R": null, "K'": [[75, 97], [78, 100]], "V'": [[79, 101], [82, 104]], "example": [73, 120]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the lawyer, the doctor, the scientist and the architect.\nPremise: < The knife is Salvador Dal\u00ed's. The truck is Dr. Sylvia Earle's. The swimsuit is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the artist? Answer: No\n Premise: < The plane is Carl Sagan's. The swim fins is Gloria Allred's. The knife is Norman Foster's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the scientist? Answer: Yes\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [61, 63], "Q": [92, 95], "K": [57, 60], "R": null, "K'": [[34, 44], [36, 46]], "V'": [[37, 47], [40, 53]], "example": [28, 102]}, {"END": [171, 172], "A": [166, 169], "V": [110, 113], "Q": [164, 165], "K": [108, 109], "R": null, "K'": [[117, 129], [120, 131]], "V'": [[121, 132], [125, 135]], "example": [103, 173]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the scientist, the architect, the lawyer and the doctor.\nPremise: < The knife is Salvador Dal\u00ed's. The truck is Dr. Sylvia Earle's. The swimsuit is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the artist? Answer: No\n Premise: < The plane is Carl Sagan's. The swim fins is Gloria Allred's. The knife is Norman Foster's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the architect? Answer: No\n", "ranges": [{"END": [100, 101], "A": [96, 98], "V": [61, 63], "Q": [92, 95], "K": [57, 60], "R": null, "K'": [[34, 44], [36, 46]], "V'": [[37, 47], [40, 53]], "example": [28, 102]}, {"END": [170, 171], "A": [166, 168], "V": [110, 113], "Q": [164, 165], "K": [108, 109], "R": null, "K'": [[117, 129], [120, 131]], "V'": [[121, 132], [125, 135]], "example": [103, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the architect, the artist and the actor.\nPremise: < The pan is Jennifer Lawrence's. The broom is Beyonc\u00e9's. The horse is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the architect? Answer: No\n Premise: < The telephone is Vincent van Gogh's. The plane is Sonia Sotomayor's. The goggles is Zaha Hadid's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the architect? Answer: Yes\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [32, 35], "Q": [84, 86], "K": [30, 31], "R": null, "K'": [[39, 49], [41, 50]], "V'": [[42, 51], [45, 55]], "example": [24, 93]}, {"END": [170, 171], "A": [166, 168], "V": [129, 133], "Q": [162, 165], "K": [124, 128], "R": null, "K'": [[99, 111], [101, 112]], "V'": [[102, 113], [107, 120]], "example": [94, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the artist, the musician, the actor and the lawyer.\nPremise: < The pan is Jennifer Lawrence's. The broom is Beyonc\u00e9's. The horse is Louis Sullivan's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the architect? Answer: No\n Premise: < The telephone is Vincent van Gogh's. The plane is Sonia Sotomayor's. The goggles is Zaha Hadid's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the lawyer? Answer: No\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [32, 35], "Q": [84, 86], "K": [30, 31], "R": null, "K'": [[39, 49], [41, 50]], "V'": [[42, 51], [45, 55]], "example": [24, 93]}, {"END": [170, 171], "A": [166, 168], "V": [129, 133], "Q": [162, 165], "K": [124, 128], "R": null, "K'": [[99, 111], [101, 112]], "V'": [[102, 113], [107, 120]], "example": [94, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the architect, the scientist, the athlete and the artist.\nPremise: < The roller is Kanye West's. The piano is Roger Federer's. The swim fins is Zaha Hadid's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n Premise: < The plane is Cristiano Ronaldo's. The goggles is Albert Einstein's. The swim fins is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the athlete? Answer: Yes\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [35, 39], "Q": [89, 90], "K": [32, 34], "R": null, "K'": [[43, 52], [44, 55]], "V'": [[45, 56], [48, 60]], "example": [26, 97]}, {"END": [169, 170], "A": [164, 167], "V": [105, 110], "Q": [162, 163], "K": [103, 104], "R": null, "K'": [[114, 126], [118, 129]], "V'": [[119, 130], [122, 133]], "example": [98, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the musician, the artist and the architect.\nPremise: < The roller is Kanye West's. The piano is Roger Federer's. The swim fins is Zaha Hadid's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n Premise: < The plane is Cristiano Ronaldo's. The goggles is Albert Einstein's. The swim fins is Pablo Picasso's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: No\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [35, 39], "Q": [89, 90], "K": [32, 34], "R": null, "K'": [[43, 52], [44, 55]], "V'": [[45, 56], [48, 60]], "example": [26, 97]}, {"END": [168, 169], "A": [164, 166], "V": [105, 110], "Q": [162, 163], "K": [103, 104], "R": null, "K'": [[114, 126], [118, 129]], "V'": [[119, 130], [122, 133]], "example": [98, 170]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the athlete and the author.\nPremise: < The swim fins is Dr. Temple Grandin's. The broom is Agatha Christie's. The bicycle is Dr. Sylvia Earle's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is the doctor? Answer: No\n Premise: < The truck is Roger Federer's. The guitar is Johnny Depp's. The oven is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is the athlete? Answer: Yes\n", "ranges": [{"END": [98, 99], "A": [94, 96], "V": [43, 48], "Q": [91, 93], "K": [40, 42], "R": null, "K'": [[27, 52], [30, 55]], "V'": [[31, 56], [36, 62]], "example": [21, 100]}, {"END": [170, 171], "A": [165, 168], "V": [109, 112], "Q": [163, 164], "K": [106, 108], "R": null, "K'": [[116, 125], [117, 127]], "V'": [[118, 128], [121, 134]], "example": [101, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the author, the actor and the doctor.\nPremise: < The swim fins is Dr. Temple Grandin's. The broom is Agatha Christie's. The bicycle is Dr. Sylvia Earle's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is the doctor? Answer: No\n Premise: < The truck is Roger Federer's. The guitar is Johnny Depp's. The oven is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is the actor? Answer: No\n", "ranges": [{"END": [98, 99], "A": [94, 96], "V": [43, 48], "Q": [91, 93], "K": [40, 42], "R": null, "K'": [[27, 52], [30, 55]], "V'": [[31, 56], [36, 62]], "example": [21, 100]}, {"END": [169, 170], "A": [165, 167], "V": [109, 112], "Q": [163, 164], "K": [106, 108], "R": null, "K'": [[116, 125], [117, 127]], "V'": [[118, 128], [121, 134]], "example": [101, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the lawyer, the artist, the doctor and the actor.\nPremise: < The pot is Leonardo DiCaprio's. The telegraph is Charlize Theron's. The plane is Frida Kahlo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: Yes\n Premise: < The motorcycle is Elon Musk's. The pan is Ruth Bader Ginsburg's. The jeep is Dr. Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the lawyer? Answer: Yes\n", "ranges": [{"END": [96, 97], "A": [92, 94], "V": [56, 61], "Q": [90, 91], "K": [54, 55], "R": null, "K'": [[31, 42], [32, 44]], "V'": [[33, 45], [38, 50]], "example": [25, 98]}, {"END": [171, 172], "A": [167, 169], "V": [117, 123], "Q": [164, 166], "K": [115, 116], "R": null, "K'": [[104, 127], [106, 129]], "V'": [[107, 130], [111, 135]], "example": [99, 173]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the artist, the entrepreneur and the lawyer.\nPremise: < The pot is Leonardo DiCaprio's. The telegraph is Charlize Theron's. The plane is Frida Kahlo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the artist? Answer: Yes\n Premise: < The motorcycle is Elon Musk's. The pan is Ruth Bader Ginsburg's. The jeep is Dr. Jane Goodall's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is the entrepreneur? Answer: No\n", "ranges": [{"END": [96, 97], "A": [92, 94], "V": [56, 61], "Q": [90, 91], "K": [54, 55], "R": null, "K'": [[31, 42], [32, 44]], "V'": [[33, 45], [38, 50]], "example": [25, 98]}, {"END": [173, 174], "A": [167, 171], "V": [117, 123], "Q": [164, 166], "K": [115, 116], "R": null, "K'": [[104, 127], [106, 129]], "V'": [[107, 130], [111, 135]], "example": [99, 175]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the musician, the doctor, the entrepreneur and the author.\nPremise: < The calculator is Mark Twain's. The plane is Bill Gates's. The guitar is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the author? Answer: No\n Premise: < The pan is Lady Gaga's. The dagger is Dr. Sanjay Gupta's. The swim fins is Warren Buffett's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the entrepreneur? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [45, 48], "Q": [87, 88], "K": [43, 44], "R": null, "K'": [[33, 52], [35, 53]], "V'": [[36, 54], [39, 58]], "example": [27, 95]}, {"END": [170, 171], "A": [164, 168], "V": [128, 131], "Q": [160, 163], "K": [124, 127], "R": null, "K'": [[101, 110], [102, 112]], "V'": [[103, 113], [106, 120]], "example": [96, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the author, the scientist, the musician and the doctor.\nPremise: < The calculator is Mark Twain's. The plane is Bill Gates's. The guitar is Ada Lovelace's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the author? Answer: No\n Premise: < The pan is Lady Gaga's. The dagger is Dr. Sanjay Gupta's. The swim fins is Warren Buffett's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is the musician? Answer: No\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [45, 48], "Q": [87, 88], "K": [43, 44], "R": null, "K'": [[33, 52], [35, 53]], "V'": [[36, 54], [39, 58]], "example": [27, 95]}, {"END": [169, 170], "A": [164, 167], "V": [128, 131], "Q": [160, 163], "K": [124, 127], "R": null, "K'": [[101, 110], [102, 112]], "V'": [[103, 113], [106, 120]], "example": [96, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the architect, the musician and the lawyer.\nPremise: < The swim fins is Johnny Depp's. The dagger is Hillary Clinton's. The swimsuit is Adele's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for killing is the actor? Answer: No\n Premise: < The brush is Ada Lovelace's. The pan is Frank Lloyd Wright's. The broom is Ieoh Ming Pei's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the scientist? Answer: Yes\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [45, 49], "Q": [89, 90], "K": [42, 44], "R": null, "K'": [[31, 53], [34, 56]], "V'": [[35, 57], [38, 60]], "example": [25, 97]}, {"END": [169, 170], "A": [164, 167], "V": [106, 110], "Q": [162, 163], "K": [103, 105], "R": null, "K'": [[114, 123], [115, 125]], "V'": [[116, 126], [119, 133]], "example": [98, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the lawyer, the scientist, the musician and the architect.\nPremise: < The swim fins is Johnny Depp's. The dagger is Hillary Clinton's. The swimsuit is Adele's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for killing is the actor? Answer: No\n Premise: < The brush is Ada Lovelace's. The pan is Frank Lloyd Wright's. The broom is Ieoh Ming Pei's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for painting is the architect? Answer: No\n", "ranges": [{"END": [95, 96], "A": [91, 93], "V": [45, 49], "Q": [89, 90], "K": [42, 44], "R": null, "K'": [[31, 53], [34, 56]], "V'": [[35, 57], [38, 60]], "example": [25, 97]}, {"END": [168, 169], "A": [164, 166], "V": [106, 110], "Q": [162, 163], "K": [103, 105], "R": null, "K'": [[114, 123], [115, 125]], "V'": [[116, 126], [119, 133]], "example": [98, 170]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the actor, the entrepreneur, the athlete and the musician.\nPremise: < The dagger is Usain Bolt's. The telegraph is Kanye West's. The calculator is Lionel Messi's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is the athlete? Answer: No\n Premise: < The swim fins is Oprah Winfrey's. The bicycle is Vincent van Gogh's. The helicopter is Meryl Streep's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the actor? Answer: Yes\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [47, 51], "Q": [91, 93], "K": [44, 46], "R": null, "K'": [[33, 55], [35, 57]], "V'": [[36, 58], [40, 62]], "example": [27, 101]}, {"END": [178, 179], "A": [174, 176], "V": [137, 143], "Q": [172, 173], "K": [133, 136], "R": null, "K'": [[107, 120], [110, 123]], "V'": [[111, 124], [116, 129]], "example": [102, 180]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the athlete, the actor, the artist and the entrepreneur.\nPremise: < The dagger is Usain Bolt's. The telegraph is Kanye West's. The calculator is Lionel Messi's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is the athlete? Answer: No\n Premise: < The swim fins is Oprah Winfrey's. The bicycle is Vincent van Gogh's. The helicopter is Meryl Streep's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is the entrepreneur? Answer: No\n", "ranges": [{"END": [99, 100], "A": [94, 97], "V": [47, 51], "Q": [91, 93], "K": [44, 46], "R": null, "K'": [[33, 55], [35, 57]], "V'": [[36, 58], [40, 62]], "example": [27, 101]}, {"END": [180, 181], "A": [174, 178], "V": [137, 143], "Q": [172, 173], "K": [133, 136], "R": null, "K'": [[107, 120], [110, 123]], "V'": [[111, 124], [116, 129]], "example": [102, 182]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Salvador Dal\u00ed has swimsuit. Dr. Sylvia Earle has goggles. Taylor Swift has pencil. >. The person who has a thing used for swiming is not the musician\n < Harper Lee has pan. Justin Bieber has oven. Clarence Darrow has car. >. The person who has a thing used for cooking is not the lawyer\n", "ranges": [{"END": [67, 68], "A'": [68, 70], "V'": [45, 47], "Q": [62, 65], "K'": [48, 51], "R": [66, 67], "K": [[29, 40], [32, 44]], "V": [[25, 33], [28, 39]], "example": [24, 70]}, {"END": [107, 108], "A'": [108, 109], "V'": [86, 90], "Q": [103, 105], "K'": [91, 92], "R": [106, 107], "K": [[76, 83], [77, 85]], "V": [[72, 78], [75, 82]], "example": [71, 109]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< Natalie Portman has pen. Dr. Gabor Mat\u00e9 has motorcycle. Rihanna has horse. >. The person who has a thing used for riding is not the actor\n < Neil deGrasse Tyson has telephone. Eminem has swimsuit. LeBron James has swim fins. >. The person who has a thing used for swiming is not the scientist\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [27, 31], "Q": [60, 62], "K'": [32, 33], "R": [63, 64], "K": [[41, 48], [43, 49]], "V": [[34, 44], [40, 47]], "example": [26, 66]}, {"END": [111, 112], "A'": [112, 114], "V'": [68, 75], "Q": [106, 109], "K'": [76, 78], "R": [110, 111], "K": [[83, 92], [86, 95]], "V": [[79, 87], [82, 91]], "example": [67, 114]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the lawyer, the musician, the artist and the author.\n< J.R.R. Tolkien has abacus. Rem Koolhaas has computer. Lady Gaga has pot. >. The person who has a thing used for calculating is not the musician\n < Claude Monet has telephone. Lady Gaga has knife. Johnnie Cochran has gun. >. The person who has a thing used for killing is not the artist\n", "ranges": [{"END": [66, 67], "A'": [67, 69], "V'": [47, 50], "Q": [63, 64], "K'": [51, 52], "R": [65, 66], "K": [[35, 45], [38, 46]], "V": [[25, 39], [34, 44]], "example": [24, 69]}, {"END": [106, 107], "A'": [107, 108], "V'": [71, 74], "Q": [103, 104], "K'": [75, 77], "R": [105, 106], "K": [[82, 91], [84, 92]], "V": [[78, 85], [81, 90]], "example": [70, 108]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the doctor, the actor and the athlete.\n< Dr. Sanjay Gupta has radio. Brad Pitt has roller. Lionel Messi has brush. >. The person who has a thing used for painting is not the doctor\n < Thurgood Marshall has pot. Dr. Anthony Fauci has spray. Meryl Streep has palette. >. The person who has a thing used for painting is not the lawyer\n", "ranges": [{"END": [59, 60], "A'": [60, 61], "V'": [22, 29], "Q": [56, 57], "K'": [30, 31], "R": [58, 59], "K": [[35, 43], [37, 45]], "V": [[32, 38], [34, 42]], "example": [21, 61]}, {"END": [103, 104], "A'": [104, 105], "V'": [63, 67], "Q": [100, 101], "K'": [68, 69], "R": [102, 103], "K": [[77, 87], [79, 89]], "V": [[70, 80], [76, 86]], "example": [62, 105]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the scientist, the architect, the actor and the lawyer.\n< Sonia Sotomayor has abacus. Rihanna has computer. Mies van der Rohe has car. >. The person who has a thing used for calculating is not the architect\n < Ieoh Ming Pei has motorcycle. Natalie Portman has spray. Albert Einstein has brush. >. The person who has a thing used for painting is not the architect\n", "ranges": [{"END": [66, 67], "A'": [67, 68], "V'": [44, 50], "Q": [63, 64], "K'": [51, 52], "R": [65, 66], "K": [[34, 42], [37, 43]], "V": [[26, 38], [33, 41]], "example": [25, 68]}, {"END": [109, 110], "A'": [110, 111], "V'": [70, 77], "Q": [106, 107], "K'": [78, 80], "R": [108, 109], "K": [[86, 93], [88, 95]], "V": [[81, 89], [85, 92]], "example": [69, 111]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the artist, the doctor, the musician and the entrepreneur.\n< Neil deGrasse Tyson has computer. Jeff Bezos has guitar. Claude Monet has violin. >. The person who has a thing used for playing is not the scientist\n < Eminem has oven. Dr. Ben Carson has pan. Michelangelo has jeep. >. The person who has a thing used for cooking is not the artist\n", "ranges": [{"END": [64, 65], "A'": [65, 67], "V'": [28, 35], "Q": [61, 62], "K'": [36, 37], "R": [63, 64], "K": [[42, 48], [43, 50]], "V": [[38, 44], [41, 47]], "example": [27, 67]}, {"END": [105, 106], "A'": [106, 107], "V'": [84, 87], "Q": [101, 103], "K'": [88, 90], "R": [104, 105], "K": [[73, 82], [75, 83]], "V": [[69, 76], [72, 81]], "example": [68, 107]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the author and the doctor.\n< Agatha Christie has swim fins. Elon Musk has swimsuit. Dr. Jane Goodall has roller. >. The person who has a thing used for swiming is not the doctor\n < Jeff Bezos has truck. George Orwell has jeep. LeBron James has palette. >. The person who has a thing used for driving is not the athlete\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [43, 48], "Q": [62, 65], "K'": [49, 51], "R": [66, 67], "K": [[30, 39], [33, 42]], "V": [[24, 34], [29, 38]], "example": [23, 69]}, {"END": [106, 107], "A'": [107, 109], "V'": [85, 89], "Q": [103, 104], "K'": [90, 92], "R": [105, 106], "K": [[75, 82], [77, 84]], "V": [[71, 78], [74, 81]], "example": [70, 109]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the actor, the entrepreneur and the architect.\n< Johnny Depp has guitar. Taylor Swift has telephone. Serena Williams has phone. >. The person who has a thing used for communicating is not the actor\n < Brad Pitt has piano. Ieoh Ming Pei has radio. Larry Page has phone. >. The person who has a thing used for communicating is not the actor\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [28, 31], "Q": [56, 58], "K'": [32, 33], "R": [59, 60], "K": [[37, 44], [39, 45]], "V": [[34, 40], [36, 43]], "example": [27, 62]}, {"END": [98, 99], "A'": [99, 100], "V'": [64, 66], "Q": [94, 96], "K'": [67, 68], "R": [97, 98], "K": [[77, 82], [78, 83]], "V": [[69, 79], [76, 81]], "example": [63, 100]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < Salvador Dal\u00ed has swimsuit. Dr. Sylvia Earle has goggles. Taylor Swift has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is not the artist? Answer: No\n Premise: < Harper Lee has plane. Justin Bieber has helicopter. Clarence Darrow has truck. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the lawyer? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [49, 51], "Q": [82, 85], "K'": [52, 55], "R": [86, 87], "K": [[33, 44], [36, 48]], "V": [[29, 37], [32, 43]], "example": [24, 93]}, {"END": [154, 155], "A'": [150, 152], "V'": [113, 117], "Q": [147, 148], "K'": [118, 120], "R": [149, 150], "K": [[102, 109], [103, 112]], "V": [[98, 104], [101, 108]], "example": [94, 156]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < Salvador Dal\u00ed has swimsuit. Dr. Sylvia Earle has goggles. Taylor Swift has pencil. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is not the artist? Answer: No\n Premise: < Harper Lee has plane. Justin Bieber has helicopter. Clarence Darrow has truck. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the musician? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [49, 51], "Q": [82, 85], "K'": [52, 55], "R": [86, 87], "K": [[33, 44], [36, 48]], "V": [[29, 37], [32, 43]], "example": [24, 93]}, {"END": [155, 156], "A'": [150, 153], "V'": [113, 117], "Q": [147, 148], "K'": [118, 120], "R": [149, 150], "K": [[102, 109], [103, 112]], "V": [[98, 104], [101, 108]], "example": [94, 157]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the scientist, the actor and the author.\nPremise: < Johnny Depp has motorcycle. Mark Twain has pan. Kanye West has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: Yes\n Premise: < Ernest Hemingway has pot. Rihanna has mop. Nikola Tesla has pan. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the musician? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [34, 37], "Q": [73, 75], "K'": [38, 39], "R": [76, 77], "K": [[31, 45], [33, 46]], "V": [[27, 40], [30, 44]], "example": [22, 83]}, {"END": [145, 146], "A'": [140, 143], "V'": [95, 98], "Q": [136, 138], "K'": [99, 101], "R": [139, 140], "K": [[93, 108], [94, 109]], "V": [[88, 102], [92, 107]], "example": [84, 147]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the author, the musician and the scientist.\nPremise: < Johnny Depp has motorcycle. Mark Twain has pan. Kanye West has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: Yes\n Premise: < Ernest Hemingway has pot. Rihanna has mop. Nikola Tesla has pan. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the author? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [77, 79], "V'": [34, 37], "Q": [73, 75], "K'": [38, 39], "R": [76, 77], "K": [[31, 45], [33, 46]], "V": [[27, 40], [30, 44]], "example": [22, 83]}, {"END": [144, 145], "A'": [140, 142], "V'": [95, 98], "Q": [136, 138], "K'": [99, 101], "R": [139, 140], "K": [[93, 108], [94, 109]], "V": [[88, 102], [92, 107]], "example": [84, 146]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the athlete, the doctor, the author and the artist.\nPremise: < Leonardo da Vinci has pan. J.R.R. Tolkien has pot. Dr. Neil deGrasse Tyson has car. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: Yes\n Premise: < Dr. Jane Goodall has abacus. Serena Williams has calculator. Justin Bieber has mop. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for calculating is not the musician? Answer: Yes\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [50, 59], "Q": [88, 90], "K'": [60, 61], "R": [91, 92], "K": [[36, 48], [37, 49]], "V": [[30, 38], [35, 47]], "example": [25, 98]}, {"END": [162, 163], "A'": [157, 160], "V'": [120, 124], "Q": [154, 155], "K'": [125, 127], "R": [156, 157], "K": [[109, 117], [112, 119]], "V": [[103, 113], [108, 116]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the doctor, the athlete, the author and the musician.\nPremise: < Leonardo da Vinci has pan. J.R.R. Tolkien has pot. Dr. Neil deGrasse Tyson has car. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: Yes\n Premise: < Dr. Jane Goodall has abacus. Serena Williams has calculator. Justin Bieber has mop. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for calculating is not the athlete? Answer: No\n", "ranges": [{"END": [96, 97], "A'": [92, 94], "V'": [50, 59], "Q": [88, 90], "K'": [60, 61], "R": [91, 92], "K": [[36, 48], [37, 49]], "V": [[30, 38], [35, 47]], "example": [25, 98]}, {"END": [162, 163], "A'": [157, 160], "V'": [120, 124], "Q": [154, 155], "K'": [125, 127], "R": [156, 157], "K": [[109, 117], [112, 119]], "V": [[103, 113], [108, 116]], "example": [99, 164]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the architect and the lawyer.\nPremise: < Usain Bolt has violin. Oprah Winfrey has piano. Ruth Bader Ginsburg has palette. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for playing is not the athlete? Answer: No\n Premise: < Maya Lin has broom. Simone Biles has computer. Frank Lloyd Wright has mop. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is not the athlete? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [44, 50], "Q": [80, 81], "K'": [51, 53], "R": [82, 83], "K": [[33, 42], [35, 43]], "V": [[28, 36], [32, 41]], "example": [23, 90]}, {"END": [151, 152], "A'": [146, 149], "V'": [102, 106], "Q": [142, 144], "K'": [107, 108], "R": [145, 146], "K": [[99, 113], [101, 115]], "V": [[95, 109], [98, 112]], "example": [91, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the athlete, the lawyer and the entrepreneur.\nPremise: < Usain Bolt has violin. Oprah Winfrey has piano. Ruth Bader Ginsburg has palette. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for playing is not the athlete? Answer: No\n Premise: < Maya Lin has broom. Simone Biles has computer. Frank Lloyd Wright has mop. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is not the architect? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [44, 50], "Q": [80, 81], "K'": [51, 53], "R": [82, 83], "K": [[33, 42], [35, 43]], "V": [[28, 36], [32, 41]], "example": [23, 90]}, {"END": [150, 151], "A'": [146, 148], "V'": [102, 106], "Q": [142, 144], "K'": [107, 108], "R": [145, 146], "K": [[99, 113], [101, 115]], "V": [[95, 109], [98, 112]], "example": [91, 152]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the doctor, the scientist, the actor and the artist.\nPremise: < George Orwell has motorcycle. Tom Hanks has horse. Marie Curie has broom. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: No\n Premise: < Neil deGrasse Tyson has pot. Claude Monet has plane. Dr. Mehmet Oz has glider. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the scientist? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [79, 81], "V'": [42, 45], "Q": [75, 77], "K'": [46, 48], "R": [78, 79], "K": [[33, 40], [35, 41]], "V": [[29, 36], [32, 39]], "example": [24, 85]}, {"END": [151, 152], "A'": [146, 149], "V'": [90, 97], "Q": [143, 144], "K'": [98, 99], "R": [145, 146], "K": [[104, 114], [105, 116]], "V": [[100, 106], [103, 113]], "example": [86, 153]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the author, the scientist, the doctor and the actor.\nPremise: < George Orwell has motorcycle. Tom Hanks has horse. Marie Curie has broom. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: No\n Premise: < Neil deGrasse Tyson has pot. Claude Monet has plane. Dr. Mehmet Oz has glider. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the artist? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [79, 81], "V'": [42, 45], "Q": [75, 77], "K'": [46, 48], "R": [78, 79], "K": [[33, 40], [35, 41]], "V": [[29, 36], [32, 39]], "example": [24, 85]}, {"END": [150, 151], "A'": [146, 148], "V'": [90, 97], "Q": [143, 144], "K'": [98, 99], "R": [145, 146], "K": [[104, 114], [105, 116]], "V": [[100, 106], [103, 113]], "example": [86, 152]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer, the scientist and the author.\nPremise: < Toni Morrison has horse. Sonia Sotomayor has telegraph. Roger Federer has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the lawyer? Answer: Yes\n Premise: < Bill Gates has telegraph. Marie Curie has phone. Usain Bolt has pen. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is not the athlete? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [40, 47], "Q": [85, 87], "K'": [48, 50], "R": [88, 89], "K": [[38, 55], [39, 58]], "V": [[32, 51], [37, 54]], "example": [27, 95]}, {"END": [155, 156], "A'": [150, 153], "V'": [113, 117], "Q": [146, 148], "K'": [118, 119], "R": [149, 150], "K": [[104, 111], [106, 112]], "V": [[100, 107], [103, 110]], "example": [96, 157]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the entrepreneur, the author, the athlete and the lawyer.\nPremise: < Toni Morrison has horse. Sonia Sotomayor has telegraph. Roger Federer has bicycle. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the lawyer? Answer: Yes\n Premise: < Bill Gates has telegraph. Marie Curie has phone. Usain Bolt has pen. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is not the entrepreneur? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [40, 47], "Q": [85, 87], "K'": [48, 50], "R": [88, 89], "K": [[38, 55], [39, 58]], "V": [[32, 51], [37, 54]], "example": [27, 95]}, {"END": [156, 157], "A'": [150, 154], "V'": [113, 117], "Q": [146, 148], "K'": [118, 119], "R": [149, 150], "K": [[104, 111], [106, 112]], "V": [[100, 107], [103, 110]], "example": [96, 158]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor and the artist.\nPremise: < Dr. Sanjay Gupta has helicopter. Charlize Theron has oven. Dr. Michio Kaku has plane. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the actor? Answer: Yes\n Premise: < Frida Kahlo has pencil. Dr. Neil deGrasse Tyson has oven. Dr. Michio Kaku has pan. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the artist? Answer: Yes\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [34, 39], "Q": [78, 79], "K'": [40, 42], "R": [80, 81], "K": [[30, 50], [33, 51]], "V": [[22, 43], [29, 49]], "example": [17, 87]}, {"END": [158, 159], "A'": [154, 156], "V'": [92, 97], "Q": [150, 152], "K'": [98, 101], "R": [153, 154], "K": [[112, 122], [114, 123]], "V": [[102, 115], [111, 121]], "example": [88, 160]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the actor and the doctor.\nPremise: < Dr. Sanjay Gupta has helicopter. Charlize Theron has oven. Dr. Michio Kaku has plane. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the actor? Answer: Yes\n Premise: < Frida Kahlo has pencil. Dr. Neil deGrasse Tyson has oven. Dr. Michio Kaku has pan. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: No\n", "ranges": [{"END": [85, 86], "A'": [81, 83], "V'": [34, 39], "Q": [78, 79], "K'": [40, 42], "R": [80, 81], "K": [[30, 50], [33, 51]], "V": [[22, 43], [29, 49]], "example": [17, 87]}, {"END": [158, 159], "A'": [154, 156], "V'": [92, 97], "Q": [150, 152], "K'": [98, 101], "R": [153, 154], "K": [[112, 122], [114, 123]], "V": [[102, 115], [111, 121]], "example": [88, 160]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the doctor, the actor, the lawyer, the scientist and the artist.\nPremise: < Carl Sagan has truck. Serena Williams has pot. Dr. Gabor Mat\u00e9 has car. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the athlete? Answer: Yes\n Premise: < Gloria Allred has truck. Meryl Streep has car. Michelangelo has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the artist? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [84, 87], "V'": [40, 43], "Q": [81, 82], "K'": [44, 45], "R": [83, 84], "K": [[37, 53], [39, 54]], "V": [[33, 46], [36, 52]], "example": [28, 91]}, {"END": [152, 153], "A'": [148, 150], "V'": [113, 116], "Q": [145, 146], "K'": [117, 118], "R": [147, 148], "K": [[101, 111], [103, 112]], "V": [[96, 104], [100, 110]], "example": [92, 154]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the doctor, the lawyer, the athlete, the scientist and the actor.\nPremise: < Carl Sagan has truck. Serena Williams has pot. Dr. Gabor Mat\u00e9 has car. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the athlete? Answer: Yes\n Premise: < Gloria Allred has truck. Meryl Streep has car. Michelangelo has horse. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the lawyer? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [84, 87], "V'": [40, 43], "Q": [81, 82], "K'": [44, 45], "R": [83, 84], "K": [[37, 53], [39, 54]], "V": [[33, 46], [36, 52]], "example": [28, 91]}, {"END": [152, 153], "A'": [148, 150], "V'": [113, 116], "Q": [145, 146], "K'": [117, 118], "R": [147, 148], "K": [[101, 111], [103, 112]], "V": [[96, 104], [100, 110]], "example": [92, 154]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< The swimsuit is Salvador Dal\u00ed's. The goggles is Dr. Sylvia Earle's. The pencil is Taylor Swift's. >. The person who has a thing used for swiming is not the musician\n < The pan is Harper Lee's. The oven is Justin Bieber's. The car is Clarence Darrow's. >. The person who has a thing used for cooking is not the lawyer\n", "ranges": [{"END": [76, 77], "A'": [77, 79], "V'": [56, 58], "Q": [71, 74], "K'": [52, 55], "R": [75, 76], "K": [[26, 37], [29, 41]], "V": [[30, 42], [33, 48]], "example": [24, 79]}, {"END": [125, 126], "A'": [126, 127], "V'": [104, 108], "Q": [121, 123], "K'": [102, 103], "R": [124, 125], "K": [[82, 91], [83, 93]], "V": [[84, 94], [87, 98]], "example": [80, 127]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the musician, the athlete, the actor and the scientist.\n< The pen is Natalie Portman's. The motorcycle is Dr. Gabor Mat\u00e9's. The horse is Rihanna's. >. The person who has a thing used for riding is not the actor\n < The telephone is Neil deGrasse Tyson's. The swimsuit is Eminem's. The swim fins is LeBron James's. >. The person who has a thing used for swiming is not the scientist\n", "ranges": [{"END": [73, 74], "A'": [74, 75], "V'": [30, 34], "Q": [69, 71], "K'": [28, 29], "R": [72, 73], "K": [[38, 51], [40, 52]], "V": [[41, 53], [47, 56]], "example": [26, 75]}, {"END": [129, 130], "A'": [130, 132], "V'": [81, 88], "Q": [124, 127], "K'": [78, 80], "R": [128, 129], "K": [[92, 103], [95, 106]], "V": [[96, 107], [99, 111]], "example": [76, 132]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the lawyer, the musician, the artist and the author.\n< The abacus is J.R.R. Tolkien's. The computer is Rem Koolhaas's. The pot is Lady Gaga's. >. The person who has a thing used for calculating is not the musician\n < The telephone is Claude Monet's. The knife is Lady Gaga's. The gun is Johnnie Cochran's. >. The person who has a thing used for killing is not the artist\n", "ranges": [{"END": [75, 76], "A'": [76, 78], "V'": [56, 59], "Q": [72, 73], "K'": [54, 55], "R": [74, 75], "K": [[26, 43], [29, 44]], "V": [[30, 45], [39, 50]], "example": [24, 78]}, {"END": [124, 125], "A'": [125, 126], "V'": [84, 87], "Q": [121, 122], "K'": [81, 83], "R": [123, 124], "K": [[91, 101], [93, 102]], "V": [[94, 103], [97, 108]], "example": [79, 126]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the doctor, the actor and the athlete.\n< The radio is Dr. Sanjay Gupta's. The roller is Brad Pitt's. The brush is Lionel Messi's. >. The person who has a thing used for painting is not the doctor\n < The pot is Thurgood Marshall's. The spray is Dr. Anthony Fauci's. The palette is Meryl Streep's. >. The person who has a thing used for painting is not the lawyer\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [25, 32], "Q": [65, 66], "K'": [23, 24], "R": [67, 68], "K": [[36, 45], [38, 47]], "V": [[39, 48], [41, 52]], "example": [21, 70]}, {"END": [121, 122], "A'": [122, 123], "V'": [75, 79], "Q": [118, 119], "K'": [73, 74], "R": [120, 121], "K": [[83, 96], [85, 98]], "V": [[86, 99], [92, 105]], "example": [71, 123]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the scientist, the architect, the actor and the lawyer.\n< The abacus is Sonia Sotomayor's. The computer is Rihanna's. The car is Mies van der Rohe's. >. The person who has a thing used for calculating is not the architect\n < The motorcycle is Ieoh Ming Pei's. The spray is Natalie Portman's. The brush is Albert Einstein's. >. The person who has a thing used for painting is not the architect\n", "ranges": [{"END": [75, 76], "A'": [76, 77], "V'": [53, 59], "Q": [72, 73], "K'": [51, 52], "R": [74, 75], "K": [[27, 42], [30, 43]], "V": [[31, 44], [38, 47]], "example": [25, 77]}, {"END": [127, 128], "A'": [128, 129], "V'": [83, 90], "Q": [124, 125], "K'": [80, 82], "R": [126, 127], "K": [[94, 105], [96, 107]], "V": [[97, 108], [101, 111]], "example": [78, 129]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the artist, the doctor, the musician and the entrepreneur.\n< The computer is Neil deGrasse Tyson's. The guitar is Jeff Bezos's. The violin is Claude Monet's. >. The person who has a thing used for playing is not the scientist\n < The oven is Eminem's. The pan is Dr. Ben Carson's. The jeep is Michelangelo's. >. The person who has a thing used for cooking is not the artist\n", "ranges": [{"END": [73, 74], "A'": [74, 76], "V'": [31, 38], "Q": [70, 71], "K'": [29, 30], "R": [72, 73], "K": [[42, 51], [43, 53]], "V": [[44, 54], [47, 57]], "example": [27, 76]}, {"END": [123, 124], "A'": [124, 125], "V'": [103, 106], "Q": [119, 121], "K'": [100, 102], "R": [122, 123], "K": [[79, 89], [81, 90]], "V": [[82, 91], [85, 96]], "example": [77, 125]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the author and the doctor.\n< The swim fins is Agatha Christie's. The swimsuit is Elon Musk's. The roller is Dr. Jane Goodall's. >. The person who has a thing used for swiming is not the doctor\n < The truck is Jeff Bezos's. The jeep is George Orwell's. The palette is LeBron James's. >. The person who has a thing used for driving is not the athlete\n", "ranges": [{"END": [76, 77], "A'": [77, 78], "V'": [53, 58], "Q": [71, 74], "K'": [50, 52], "R": [75, 76], "K": [[25, 38], [28, 41]], "V": [[29, 42], [34, 46]], "example": [23, 78]}, {"END": [124, 125], "A'": [125, 127], "V'": [104, 108], "Q": [121, 122], "K'": [101, 103], "R": [123, 124], "K": [[81, 91], [83, 93]], "V": [[84, 94], [87, 97]], "example": [79, 127]}]}
{"task_id": "rlr_gen[capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the actor, the entrepreneur and the architect.\n< The guitar is Johnny Depp's. The telephone is Taylor Swift's. The phone is Serena Williams's. >. The person who has a thing used for communicating is not the actor\n < The piano is Brad Pitt's. The radio is Ieoh Ming Pei's. The phone is Larry Page's. >. The person who has a thing used for communicating is not the actor\n", "ranges": [{"END": [69, 70], "A'": [70, 71], "V'": [31, 34], "Q": [65, 67], "K'": [29, 30], "R": [68, 69], "K": [[38, 47], [40, 48]], "V": [[41, 49], [43, 52]], "example": [27, 71]}, {"END": [116, 117], "A'": [117, 118], "V'": [76, 78], "Q": [112, 114], "K'": [74, 75], "R": [115, 116], "K": [[82, 95], [83, 96]], "V": [[84, 97], [91, 99]], "example": [72, 118]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < The swimsuit is Salvador Dal\u00ed's. The goggles is Dr. Sylvia Earle's. The pencil is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is not the artist? Answer: No\n Premise: < The plane is Harper Lee's. The helicopter is Justin Bieber's. The truck is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the lawyer? Answer: Yes\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [60, 62], "Q": [91, 94], "K'": [56, 59], "R": [95, 96], "K": [[30, 41], [33, 45]], "V": [[34, 46], [37, 52]], "example": [24, 102]}, {"END": [172, 173], "A'": [168, 170], "V'": [132, 136], "Q": [165, 166], "K'": [129, 131], "R": [167, 168], "K": [[108, 117], [109, 120]], "V": [[110, 121], [113, 125]], "example": [103, 174]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < The swimsuit is Salvador Dal\u00ed's. The goggles is Dr. Sylvia Earle's. The pencil is Taylor Swift's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for swiming is not the artist? Answer: No\n Premise: < The plane is Harper Lee's. The helicopter is Justin Bieber's. The truck is Clarence Darrow's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the musician? Answer: No\n", "ranges": [{"END": [100, 101], "A'": [96, 98], "V'": [60, 62], "Q": [91, 94], "K'": [56, 59], "R": [95, 96], "K": [[30, 41], [33, 45]], "V": [[34, 46], [37, 52]], "example": [24, 102]}, {"END": [173, 174], "A'": [168, 171], "V'": [132, 136], "Q": [165, 166], "K'": [129, 131], "R": [167, 168], "K": [[108, 117], [109, 120]], "V": [[110, 121], [113, 125]], "example": [103, 175]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the scientist, the actor and the author.\nPremise: < The motorcycle is Johnny Depp's. The pan is Mark Twain's. The horse is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: Yes\n Premise: < The pot is Ernest Hemingway's. The mop is Rihanna's. The pan is Nikola Tesla's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the musician? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [40, 43], "Q": [82, 84], "K'": [38, 39], "R": [85, 86], "K": [[28, 47], [30, 48]], "V": [[31, 49], [34, 53]], "example": [22, 92]}, {"END": [163, 164], "A'": [158, 161], "V'": [111, 114], "Q": [154, 156], "K'": [108, 110], "R": [157, 158], "K": [[98, 118], [99, 119]], "V": [[100, 120], [104, 125]], "example": [93, 165]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the author, the musician and the scientist.\nPremise: < The motorcycle is Johnny Depp's. The pan is Mark Twain's. The horse is Kanye West's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: Yes\n Premise: < The pot is Ernest Hemingway's. The mop is Rihanna's. The pan is Nikola Tesla's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the author? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [40, 43], "Q": [82, 84], "K'": [38, 39], "R": [85, 86], "K": [[28, 47], [30, 48]], "V": [[31, 49], [34, 53]], "example": [22, 92]}, {"END": [162, 163], "A'": [158, 160], "V'": [111, 114], "Q": [154, 156], "K'": [108, 110], "R": [157, 158], "K": [[98, 118], [99, 119]], "V": [[100, 120], [104, 125]], "example": [93, 164]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the athlete, the doctor, the author and the artist.\nPremise: < The pan is Leonardo da Vinci's. The pot is J.R.R. Tolkien's. The car is Dr. Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: Yes\n Premise: < The abacus is Dr. Jane Goodall's. The calculator is Serena Williams's. The mop is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for calculating is not the musician? Answer: Yes\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [59, 68], "Q": [97, 99], "K'": [57, 58], "R": [100, 101], "K": [[31, 42], [32, 43]], "V": [[33, 44], [38, 53]], "example": [25, 107]}, {"END": [180, 181], "A'": [175, 178], "V'": [139, 143], "Q": [172, 173], "K'": [136, 138], "R": [174, 175], "K": [[113, 126], [116, 128]], "V": [[117, 129], [122, 132]], "example": [108, 182]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the doctor, the athlete, the author and the musician.\nPremise: < The pan is Leonardo da Vinci's. The pot is J.R.R. Tolkien's. The car is Dr. Neil deGrasse Tyson's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: Yes\n Premise: < The abacus is Dr. Jane Goodall's. The calculator is Serena Williams's. The mop is Justin Bieber's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for calculating is not the athlete? Answer: No\n", "ranges": [{"END": [105, 106], "A'": [101, 103], "V'": [59, 68], "Q": [97, 99], "K'": [57, 58], "R": [100, 101], "K": [[31, 42], [32, 43]], "V": [[33, 44], [38, 53]], "example": [25, 107]}, {"END": [180, 181], "A'": [175, 178], "V'": [139, 143], "Q": [172, 173], "K'": [136, 138], "R": [174, 175], "K": [[113, 126], [116, 128]], "V": [[117, 129], [122, 132]], "example": [108, 182]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the architect and the lawyer.\nPremise: < The violin is Usain Bolt's. The piano is Oprah Winfrey's. The palette is Ruth Bader Ginsburg's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for playing is not the athlete? Answer: No\n Premise: < The broom is Maya Lin's. The computer is Simone Biles's. The mop is Frank Lloyd Wright's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is not the athlete? Answer: Yes\n", "ranges": [{"END": [97, 98], "A'": [92, 95], "V'": [54, 60], "Q": [89, 90], "K'": [51, 53], "R": [91, 92], "K": [[29, 40], [31, 41]], "V": [[32, 42], [36, 47]], "example": [23, 99]}, {"END": [169, 170], "A'": [164, 167], "V'": [117, 121], "Q": [160, 162], "K'": [115, 116], "R": [163, 164], "K": [[105, 125], [107, 127]], "V": [[108, 128], [111, 131]], "example": [100, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the athlete, the lawyer and the entrepreneur.\nPremise: < The violin is Usain Bolt's. The piano is Oprah Winfrey's. The palette is Ruth Bader Ginsburg's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for playing is not the athlete? Answer: No\n Premise: < The broom is Maya Lin's. The computer is Simone Biles's. The mop is Frank Lloyd Wright's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cleaning is not the architect? Answer: No\n", "ranges": [{"END": [97, 98], "A'": [92, 95], "V'": [54, 60], "Q": [89, 90], "K'": [51, 53], "R": [91, 92], "K": [[29, 40], [31, 41]], "V": [[32, 42], [36, 47]], "example": [23, 99]}, {"END": [168, 169], "A'": [164, 166], "V'": [117, 121], "Q": [160, 162], "K'": [115, 116], "R": [163, 164], "K": [[105, 125], [107, 127]], "V": [[108, 128], [111, 131]], "example": [100, 170]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the doctor, the scientist, the actor and the artist.\nPremise: < The motorcycle is George Orwell's. The horse is Tom Hanks's. The broom is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: No\n Premise: < The pot is Neil deGrasse Tyson's. The plane is Claude Monet's. The glider is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the scientist? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [52, 55], "Q": [84, 86], "K'": [49, 51], "R": [87, 88], "K": [[30, 40], [32, 41]], "V": [[33, 42], [36, 45]], "example": [24, 94]}, {"END": [169, 170], "A'": [164, 167], "V'": [102, 109], "Q": [161, 162], "K'": [100, 101], "R": [163, 164], "K": [[113, 122], [114, 124]], "V": [[115, 125], [118, 132]], "example": [95, 171]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the author, the scientist, the doctor and the actor.\nPremise: < The motorcycle is George Orwell's. The horse is Tom Hanks's. The broom is Marie Curie's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the author? Answer: No\n Premise: < The pot is Neil deGrasse Tyson's. The plane is Claude Monet's. The glider is Dr. Mehmet Oz's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the artist? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [52, 55], "Q": [84, 86], "K'": [49, 51], "R": [87, 88], "K": [[30, 40], [32, 41]], "V": [[33, 42], [36, 45]], "example": [24, 94]}, {"END": [168, 169], "A'": [164, 166], "V'": [102, 109], "Q": [161, 162], "K'": [100, 101], "R": [163, 164], "K": [[113, 122], [114, 124]], "V": [[115, 125], [118, 132]], "example": [95, 170]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer, the scientist and the author.\nPremise: < The horse is Toni Morrison's. The telegraph is Sonia Sotomayor's. The bicycle is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the lawyer? Answer: Yes\n Premise: < The telegraph is Bill Gates's. The phone is Marie Curie's. The pen is Usain Bolt's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is not the athlete? Answer: Yes\n", "ranges": [{"END": [102, 103], "A'": [98, 100], "V'": [47, 54], "Q": [94, 96], "K'": [44, 46], "R": [97, 98], "K": [[33, 58], [34, 61]], "V": [[35, 62], [40, 65]], "example": [27, 104]}, {"END": [173, 174], "A'": [168, 171], "V'": [131, 135], "Q": [164, 166], "K'": [129, 130], "R": [167, 168], "K": [[110, 120], [112, 121]], "V": [[113, 122], [116, 125]], "example": [105, 175]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the entrepreneur, the author, the athlete and the lawyer.\nPremise: < The horse is Toni Morrison's. The telegraph is Sonia Sotomayor's. The bicycle is Roger Federer's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for riding is not the lawyer? Answer: Yes\n Premise: < The telegraph is Bill Gates's. The phone is Marie Curie's. The pen is Usain Bolt's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for communicating is not the entrepreneur? Answer: No\n", "ranges": [{"END": [102, 103], "A'": [98, 100], "V'": [47, 54], "Q": [94, 96], "K'": [44, 46], "R": [97, 98], "K": [[33, 58], [34, 61]], "V": [[35, 62], [40, 65]], "example": [27, 104]}, {"END": [174, 175], "A'": [168, 172], "V'": [131, 135], "Q": [164, 166], "K'": [129, 130], "R": [167, 168], "K": [[110, 120], [112, 121]], "V": [[113, 122], [116, 125]], "example": [105, 176]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor and the artist.\nPremise: < The helicopter is Dr. Sanjay Gupta's. The oven is Charlize Theron's. The plane is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the actor? Answer: Yes\n Premise: < The pencil is Frida Kahlo's. The oven is Dr. Neil deGrasse Tyson's. The pan is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the artist? Answer: Yes\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [41, 46], "Q": [87, 88], "K'": [38, 40], "R": [89, 90], "K": [[23, 50], [26, 51]], "V": [[27, 52], [34, 58]], "example": [17, 96]}, {"END": [176, 177], "A'": [172, 174], "V'": [106, 111], "Q": [168, 170], "K'": [102, 105], "R": [171, 172], "K": [[115, 131], [117, 132]], "V": [[118, 133], [127, 139]], "example": [97, 178]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the actor and the doctor.\nPremise: < The helicopter is Dr. Sanjay Gupta's. The oven is Charlize Theron's. The plane is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for flying is not the actor? Answer: Yes\n Premise: < The pencil is Frida Kahlo's. The oven is Dr. Neil deGrasse Tyson's. The pan is Dr. Michio Kaku's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for cooking is not the doctor? Answer: No\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [41, 46], "Q": [87, 88], "K'": [38, 40], "R": [89, 90], "K": [[23, 50], [26, 51]], "V": [[27, 52], [34, 58]], "example": [17, 96]}, {"END": [176, 177], "A'": [172, 174], "V'": [106, 111], "Q": [168, 170], "K'": [102, 105], "R": [171, 172], "K": [[115, 131], [117, 132]], "V": [[118, 133], [127, 139]], "example": [97, 178]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the doctor, the actor, the lawyer, the scientist and the artist.\nPremise: < The truck is Carl Sagan's. The pot is Serena Williams's. The car is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the athlete? Answer: Yes\n Premise: < The truck is Gloria Allred's. The car is Meryl Streep's. The horse is Michelangelo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the artist? Answer: Yes\n", "ranges": [{"END": [98, 99], "A'": [93, 96], "V'": [46, 49], "Q": [90, 91], "K'": [44, 45], "R": [92, 93], "K": [[34, 53], [36, 54]], "V": [[37, 55], [40, 61]], "example": [28, 100]}, {"END": [170, 171], "A'": [166, 168], "V'": [131, 134], "Q": [163, 164], "K'": [129, 130], "R": [165, 166], "K": [[106, 117], [108, 118]], "V": [[109, 119], [113, 125]], "example": [101, 172]}]}
{"task_id": "g2c[rlr_gen][capabilities_of_things.TreeSet.neg_child,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the doctor, the lawyer, the athlete, the scientist and the actor.\nPremise: < The truck is Carl Sagan's. The pot is Serena Williams's. The car is Dr. Gabor Mat\u00e9's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the athlete? Answer: Yes\n Premise: < The truck is Gloria Allred's. The car is Meryl Streep's. The horse is Michelangelo's. >. Answer with Yes or No. Can it be inferred from the premise that the person who has a thing used for driving is not the lawyer? Answer: No\n", "ranges": [{"END": [98, 99], "A'": [93, 96], "V'": [46, 49], "Q": [90, 91], "K'": [44, 45], "R": [92, 93], "K": [[34, 53], [36, 54]], "V": [[37, 55], [40, 61]], "example": [28, 100]}, {"END": [170, 171], "A'": [166, 168], "V'": [131, 134], "Q": [163, 164], "K'": [129, 130], "R": [165, 166], "K": [[106, 117], [108, 118]], "V": [[109, 119], [113, 125]], "example": [101, 172]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include healthy, altruistic, irrational, indecisive, sluggish and logical.\n< David is hesitant. Sharon is fine. Barbara is unreasonable. >. So Barbara is irrational\n < Donna is slow. Michael is rational. John is selfless. >. So John is altruistic\n", "ranges": [{"END": [51, 52], "A": [52, 55], "V": [43, 46], "Q": [50, 51], "K": [41, 42], "R": null, "K'": [[30, 36], [31, 38]], "V'": [[32, 39], [35, 40]], "example": [29, 55]}, {"END": [75, 76], "A": [76, 80], "V": [68, 70], "Q": [74, 75], "K": [66, 67], "R": null, "K'": [[57, 62], [59, 63]], "V'": [[60, 64], [61, 65]], "example": [56, 80]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Richard is decisive. Brian is unmotivated. Sarah is friendly. >. So Richard is resolute\n < Barbara is late. Paul is bold. Susan is trustworthy. >. So Barbara is tardy\n", "ranges": [{"END": [45, 46], "A": [46, 48], "V": [27, 29], "Q": [44, 45], "K": [25, 26], "R": null, "K'": [[30, 37], [31, 38]], "V'": [[32, 39], [36, 40]], "example": [24, 48]}, {"END": [68, 69], "A": [69, 71], "V": [52, 53], "Q": [67, 68], "K": [50, 51], "R": null, "K'": [[54, 58], [55, 59]], "V'": [[56, 60], [57, 63]], "example": [49, 71]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include ugly, timely, courteous, negligent, rational and listless.\n< Barbara is inactive. Kimberly is unattractive. Carol is polite. >. So Kimberly is ugly\n < Kevin is irresponsible. Thomas is logical. Jennifer is punctual. >. So Kevin is negligent\n", "ranges": [{"END": [51, 52], "A": [52, 53], "V": [35, 39], "Q": [48, 51], "K": [31, 34], "R": null, "K'": [[26, 40], [27, 41]], "V'": [[28, 42], [30, 44]], "example": [25, 53]}, {"END": [76, 77], "A": [77, 80], "V": [57, 60], "Q": [75, 76], "K": [55, 56], "R": null, "K'": [[61, 65], [62, 67]], "V'": [[63, 68], [64, 71]], "example": [54, 80]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Kenneth is beautiful. Brian is splotless. Donna is intolerant. >. So Brian is clean\n < Patricia is unmotivated. Sarah is witty. Jeff is pessimistic. >. So Jeff is negative\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [32, 35], "Q": [47, 48], "K": [30, 31], "R": null, "K'": [[26, 36], [27, 38]], "V'": [[28, 39], [29, 43]], "example": [25, 50]}, {"END": [78, 79], "A": [79, 80], "V": [69, 73], "Q": [77, 78], "K": [67, 68], "R": null, "K'": [[52, 61], [55, 62]], "V'": [[56, 63], [60, 66]], "example": [51, 80]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Nancy is ambitious. Barbara is diligent. Margaret is inquiring. >. So Barbara is hardworking\n < William is adventurous. Daniel is unfaithful. Joseph is tentative. >. So Daniel is disloyal\n", "ranges": [{"END": [45, 46], "A": [46, 48], "V": [33, 35], "Q": [44, 45], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [24, 48]}, {"END": [72, 73], "A": [73, 76], "V": [58, 62], "Q": [71, 72], "K": [56, 57], "R": null, "K'": [[50, 63], [51, 64]], "V'": [[52, 65], [55, 67]], "example": [49, 76]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unreasonable, quick, candid, friendly, egotistical and knowledgeable.\n< Jason is informed. Laura is fast. Dorothy is affable. >. So Laura is quick\n < Carol is irrational. Kevin is honest. Karen is selfish. >. So Karen is egotistical\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [32, 33], "Q": [43, 44], "K": [30, 31], "R": null, "K'": [[26, 34], [27, 36]], "V'": [[28, 37], [29, 39]], "example": [25, 46]}, {"END": [69, 70], "A": [70, 74], "V": [61, 63], "Q": [67, 69], "K": [58, 60], "R": null, "K'": [[48, 54], [49, 55]], "V'": [[50, 56], [53, 57]], "example": [47, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include apathetic, filled, fascinating, correct, powerful and foolish.\n< Richard is full. Paul is stupid. Patricia is right. >. So Patricia is correct\n < Michael is strong. Dorothy is unmotivated. Richard is interesting. >. So Dorothy is apathetic\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [37, 38], "Q": [42, 45], "K": [33, 36], "R": null, "K'": [[25, 29], [26, 30]], "V'": [[27, 31], [28, 32]], "example": [24, 47]}, {"END": [70, 71], "A": [71, 74], "V": [56, 60], "Q": [68, 70], "K": [53, 55], "R": null, "K'": [[49, 61], [50, 62]], "V'": [[51, 63], [52, 64]], "example": [48, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dirty, cozy, unattractive, negligent, filthy and logical.\n< Sharon is irresponsible. Jennifer is ugly. Robert is dirty. >. So Sharon is negligent\n < Lisa is rational. Elizabeth is filthy. Michelle is comfortable. >. So Michelle is cozy\n", "ranges": [{"END": [48, 49], "A": [49, 52], "V": [30, 33], "Q": [46, 48], "K": [27, 29], "R": null, "K'": [[34, 39], [36, 40]], "V'": [[37, 41], [38, 42]], "example": [26, 52]}, {"END": [73, 74], "A": [74, 76], "V": [66, 67], "Q": [71, 73], "K": [63, 65], "R": null, "K'": [[54, 58], [55, 59]], "V'": [[56, 60], [57, 62]], "example": [53, 76]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include irrational, indecisive, logical, healthy, sluggish and altruistic.\nPremise: < David is hesitant. Sharon is fine. Barbara is unreasonable. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is indecisive? Answer: No\n Premise: < Sarah is slow. Donna is rational. Steven is selfless. >. Answer with Yes or No. Can it be inferred from the premise that Steven is altruistic? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [47, 50], "Q": [69, 70], "K": [45, 46], "R": null, "K'": [[34, 40], [35, 42]], "V'": [[36, 43], [39, 44]], "example": [29, 78]}, {"END": [123, 124], "A": [117, 121], "V": [94, 96], "Q": [115, 116], "K": [92, 93], "R": null, "K'": [[83, 87], [84, 89]], "V'": [[85, 90], [86, 91]], "example": [79, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include irrational, indecisive, sluggish, altruistic, logical and healthy.\nPremise: < David is hesitant. Sharon is fine. Barbara is unreasonable. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is indecisive? Answer: No\n Premise: < Sarah is slow. Donna is rational. Steven is selfless. >. Answer with Yes or No. Can it be inferred from the premise that Steven is logical? Answer: No\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [47, 50], "Q": [69, 70], "K": [45, 46], "R": null, "K'": [[34, 40], [35, 42]], "V'": [[36, 43], [39, 44]], "example": [29, 78]}, {"END": [120, 121], "A": [117, 118], "V": [94, 96], "Q": [115, 116], "K": [92, 93], "R": null, "K'": [[83, 87], [84, 89]], "V'": [[85, 90], [86, 91]], "example": [79, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Margaret is poor. Barbara is late. John is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that John is selfish? Answer: Yes\n Premise: < Patricia is negligent. Jeff is hardworking. Margaret is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that Jeff is diligent? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [41, 45], "Q": [64, 65], "K": [39, 40], "R": null, "K'": [[31, 35], [32, 36]], "V'": [[33, 37], [34, 38]], "example": [26, 72]}, {"END": [119, 120], "A": [115, 117], "V": [87, 89], "Q": [113, 114], "K": [85, 86], "R": null, "K'": [[77, 90], [80, 91]], "V'": [[81, 92], [84, 94]], "example": [73, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Margaret is poor. Barbara is late. John is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that John is selfish? Answer: Yes\n Premise: < Patricia is negligent. Jeff is hardworking. Margaret is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that Jeff is irresponsible? Answer: No\n", "ranges": [{"END": [70, 71], "A": [66, 68], "V": [41, 45], "Q": [64, 65], "K": [39, 40], "R": null, "K'": [[31, 35], [32, 36]], "V'": [[33, 37], [34, 38]], "example": [26, 72]}, {"END": [120, 121], "A": [115, 118], "V": [87, 89], "Q": [113, 114], "K": [85, 86], "R": null, "K'": [[77, 90], [80, 91]], "V'": [[81, 92], [84, 94]], "example": [73, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Steven is energetic. Jennifer is informed. Betty is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that Steven is disloyal? Answer: No\n Premise: < Kevin is unhealthy. Nancy is unattractive. Donna is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is sick? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [67, 70], "V": [31, 34], "Q": [65, 66], "K": [29, 30], "R": null, "K'": [[35, 40], [37, 41]], "V'": [[38, 42], [39, 46]], "example": [24, 74]}, {"END": [124, 125], "A": [121, 122], "V": [81, 85], "Q": [119, 120], "K": [79, 80], "R": null, "K'": [[86, 93], [87, 95]], "V'": [[88, 96], [92, 100]], "example": [75, 126]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Steven is energetic. Jennifer is informed. Betty is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that Steven is disloyal? Answer: No\n Premise: < Kevin is unhealthy. Nancy is unattractive. Donna is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is impatient? Answer: No\n", "ranges": [{"END": [72, 73], "A": [67, 70], "V": [31, 34], "Q": [65, 66], "K": [29, 30], "R": null, "K'": [[35, 40], [37, 41]], "V'": [[38, 42], [39, 46]], "example": [24, 74]}, {"END": [126, 127], "A": [121, 124], "V": [81, 85], "Q": [119, 120], "K": [79, 80], "R": null, "K'": [[86, 93], [87, 95]], "V'": [[88, 96], [92, 100]], "example": [75, 128]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Jason is ambitious. Nancy is diligent. Margaret is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that Nancy is driven? Answer: No\n Premise: < Brian is daring. Michael is keen. George is honest. >. Answer with Yes or No. Can it be inferred from the premise that Brian is bold? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [33, 35], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [20, 66]}, {"END": [107, 108], "A": [104, 105], "V": [73, 75], "Q": [102, 103], "K": [71, 72], "R": null, "K'": [[76, 80], [77, 81]], "V'": [[78, 82], [79, 83]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Jason is ambitious. Nancy is diligent. Margaret is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that Nancy is driven? Answer: No\n Premise: < Brian is daring. Michael is keen. George is honest. >. Answer with Yes or No. Can it be inferred from the premise that Brian is sharp? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [33, 35], "Q": [59, 60], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [20, 66]}, {"END": [107, 108], "A": [104, 105], "V": [73, 75], "Q": [102, 103], "K": [71, 72], "R": null, "K'": [[76, 80], [77, 81]], "V'": [[78, 82], [79, 83]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < David is altruistic. Carol is impatient. Ronald is careful. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is cautious? Answer: Yes\n Premise: < Ronald is apathetic. Ruth is humble. Edward is determined. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is unmotivated? Answer: Yes\n", "ranges": [{"END": [79, 80], "A": [74, 77], "V": [51, 52], "Q": [71, 73], "K": [48, 50], "R": null, "K'": [[35, 42], [36, 43]], "V'": [[37, 44], [41, 47]], "example": [30, 81]}, {"END": [129, 130], "A": [123, 127], "V": [89, 92], "Q": [120, 122], "K": [86, 88], "R": null, "K'": [[93, 98], [94, 99]], "V'": [[95, 100], [97, 101]], "example": [82, 131]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < David is altruistic. Carol is impatient. Ronald is careful. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is cautious? Answer: Yes\n Premise: < Ronald is apathetic. Ruth is humble. Edward is determined. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is modest? Answer: No\n", "ranges": [{"END": [79, 80], "A": [74, 77], "V": [51, 52], "Q": [71, 73], "K": [48, 50], "R": null, "K'": [[35, 42], [36, 43]], "V'": [[37, 44], [41, 47]], "example": [30, 81]}, {"END": [127, 128], "A": [123, 125], "V": [89, 92], "Q": [120, 122], "K": [86, 88], "R": null, "K'": [[93, 98], [94, 99]], "V'": [[95, 100], [97, 101]], "example": [82, 129]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include passive, negligent, noisy, full, intelligent and powerful.\nPremise: < Linda is filled. Michael is strong. Paul is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that Michael is full? Answer: No\n Premise: < Deborah is irresponsible. John is loud. Margaret is smart. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is intelligent? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [36, 37], "Q": [63, 64], "K": [34, 35], "R": null, "K'": [[29, 38], [31, 39]], "V'": [[32, 40], [33, 44]], "example": [24, 70]}, {"END": [115, 116], "A": [111, 113], "V": [89, 90], "Q": [109, 110], "K": [87, 88], "R": null, "K'": [[75, 83], [78, 84]], "V'": [[79, 85], [82, 86]], "example": [71, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include noisy, intelligent, full, passive, powerful and negligent.\nPremise: < Linda is filled. Michael is strong. Paul is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that Michael is full? Answer: No\n Premise: < Deborah is irresponsible. John is loud. Margaret is smart. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is negligent? Answer: No\n", "ranges": [{"END": [68, 69], "A": [65, 66], "V": [36, 37], "Q": [63, 64], "K": [34, 35], "R": null, "K'": [[29, 38], [31, 39]], "V'": [[32, 40], [33, 44]], "example": [24, 70]}, {"END": [116, 117], "A": [111, 114], "V": [89, 90], "Q": [109, 110], "K": [87, 88], "R": null, "K'": [[75, 83], [78, 84]], "V'": [[79, 85], [82, 86]], "example": [71, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include candid, positive, uninformed, comfortable, determined and blunt.\nPremise: < Laura is honest. George is dull. Donna is cozy. >. Answer with Yes or No. Can it be inferred from the premise that George is candid? Answer: No\n Premise: < Karen is ignorant. John is decisive. Barbara is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that Karen is uninformed? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [60, 61], "K": [31, 32], "R": null, "K'": [[27, 36], [28, 38]], "V'": [[29, 39], [30, 41]], "example": [22, 67]}, {"END": [114, 115], "A": [109, 112], "V": [75, 77], "Q": [106, 108], "K": [72, 74], "R": null, "K'": [[78, 83], [79, 84]], "V'": [[80, 85], [82, 87]], "example": [68, 116]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include determined, comfortable, blunt, uninformed, candid and positive.\nPremise: < Laura is honest. George is dull. Donna is cozy. >. Answer with Yes or No. Can it be inferred from the premise that George is candid? Answer: No\n Premise: < Karen is ignorant. John is decisive. Barbara is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that Karen is determined? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [60, 61], "K": [31, 32], "R": null, "K'": [[27, 36], [28, 38]], "V'": [[29, 39], [30, 41]], "example": [22, 67]}, {"END": [112, 113], "A": [109, 110], "V": [75, 77], "Q": [106, 108], "K": [72, 74], "R": null, "K'": [[78, 83], [79, 84]], "V'": [[80, 85], [82, 87]], "example": [68, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include healthy, late, humorous, dull, noisy and tardy.\nPremise: < Robert is late. Michelle is fine. Brian is tardy. >. Answer with Yes or No. Can it be inferred from the premise that Brian is late? Answer: Yes\n Premise: < Steven is loud. Sarah is blunt. Mark is funny. >. Answer with Yes or No. Can it be inferred from the premise that Mark is humorous? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [40, 42], "Q": [61, 62], "K": [38, 39], "R": null, "K'": [[29, 33], [30, 35]], "V'": [[31, 36], [32, 37]], "example": [24, 68]}, {"END": [111, 112], "A": [107, 109], "V": [84, 86], "Q": [105, 106], "K": [82, 83], "R": null, "K'": [[73, 77], [74, 78]], "V'": [[75, 79], [76, 81]], "example": [69, 113]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tardy, humorous, healthy, late, dull and noisy.\nPremise: < Robert is late. Michelle is fine. Brian is tardy. >. Answer with Yes or No. Can it be inferred from the premise that Brian is late? Answer: Yes\n Premise: < Steven is loud. Sarah is blunt. Mark is funny. >. Answer with Yes or No. Can it be inferred from the premise that Mark is dull? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [40, 42], "Q": [61, 62], "K": [38, 39], "R": null, "K'": [[29, 33], [30, 35]], "V'": [[31, 36], [32, 37]], "example": [24, 68]}, {"END": [111, 112], "A": [107, 109], "V": [84, 86], "Q": [105, 106], "K": [82, 83], "R": null, "K'": [[73, 77], [74, 78]], "V'": [[75, 79], [76, 81]], "example": [69, 113]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include healthy, altruistic, irrational, indecisive, sluggish and logical.\n< Hesitant David. Fine Sharon. Unreasonable Barbara. >. So Barbara is irrational\n < Slow Donna. Rational Michael. Selfless John. >. So John is altruistic\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [40, 43], "Q": [48, 49], "K": [43, 44], "R": null, "K'": [[34, 37], [35, 39]], "V'": [[30, 36], [34, 37]], "example": [29, 53]}, {"END": [72, 73], "A": [73, 77], "V": [64, 66], "Q": [71, 72], "K": [66, 67], "R": null, "K'": [[57, 62], [59, 63]], "V'": [[55, 60], [57, 62]], "example": [54, 77]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Decisive Richard. Unmotivated Brian. Friendly Sarah. >. So Richard is resolute\n < Late Barbara. Bold Paul. Trustworthy Susan. >. So Barbara is tardy\n", "ranges": [{"END": [44, 45], "A": [45, 47], "V": [25, 28], "Q": [43, 44], "K": [28, 29], "R": null, "K'": [[34, 38], [35, 39]], "V'": [[30, 36], [34, 38]], "example": [24, 47]}, {"END": [65, 66], "A": [66, 68], "V": [49, 50], "Q": [64, 65], "K": [50, 51], "R": null, "K'": [[54, 59], [55, 60]], "V'": [[52, 56], [54, 59]], "example": [48, 68]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include ugly, timely, courteous, negligent, rational and listless.\n< Inactive Barbara. Unattractive Kimberly. Polite Carol. >. So Kimberly is ugly\n < Irresponsible Kevin. Logical Thomas. Punctual Jennifer. >. So Kevin is negligent\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [30, 34], "Q": [45, 48], "K": [34, 37], "R": null, "K'": [[28, 40], [29, 41]], "V'": [[26, 38], [28, 40]], "example": [25, 50]}, {"END": [71, 72], "A": [72, 75], "V": [52, 55], "Q": [70, 71], "K": [55, 56], "R": null, "K'": [[59, 64], [60, 66]], "V'": [[57, 61], [59, 64]], "example": [51, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Beautiful Kenneth. Splotless Brian. Intolerant Donna. >. So Brian is clean\n < Unmotivated Patricia. Witty Sarah. Pessimistic Jeff. >. So Jeff is negative\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [29, 32], "Q": [44, 45], "K": [32, 33], "R": null, "K'": [[27, 38], [28, 40]], "V'": [[26, 34], [27, 38]], "example": [25, 47]}, {"END": [72, 73], "A": [73, 74], "V": [62, 66], "Q": [71, 72], "K": [66, 67], "R": null, "K'": [[53, 60], [56, 61]], "V'": [[49, 57], [53, 60]], "example": [48, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Ambitious Nancy. Diligent Barbara. Inquiring Margaret. >. So Barbara is hardworking\n < Adventurous William. Unfaithful Daniel. Tentative Joseph. >. So Daniel is disloyal\n", "ranges": [{"END": [44, 45], "A": [45, 47], "V": [30, 33], "Q": [43, 44], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [24, 47]}, {"END": [69, 70], "A": [70, 73], "V": [54, 58], "Q": [68, 69], "K": [58, 59], "R": null, "K'": [[52, 63], [53, 64]], "V'": [[49, 60], [52, 63]], "example": [48, 73]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unreasonable, quick, candid, friendly, egotistical and knowledgeable.\n< Informed Jason. Fast Laura. Affable Dorothy. >. So Laura is quick\n < Irrational Carol. Honest Kevin. Selfish Karen. >. So Karen is egotistical\n", "ranges": [{"END": [42, 43], "A": [43, 44], "V": [30, 31], "Q": [41, 42], "K": [31, 32], "R": null, "K'": [[28, 35], [29, 37]], "V'": [[26, 33], [28, 35]], "example": [25, 44]}, {"END": [65, 66], "A": [66, 70], "V": [55, 57], "Q": [63, 65], "K": [57, 59], "R": null, "K'": [[49, 53], [50, 54]], "V'": [[46, 51], [49, 53]], "example": [45, 70]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include apathetic, filled, fascinating, correct, powerful and foolish.\n< Full Richard. Stupid Paul. Right Patricia. >. So Patricia is correct\n < Strong Michael. Unmotivated Dorothy. Interesting Richard. >. So Dorothy is apathetic\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [33, 34], "Q": [41, 44], "K": [34, 37], "R": null, "K'": [[26, 31], [27, 32]], "V'": [[25, 28], [26, 31]], "example": [24, 46]}, {"END": [68, 69], "A": [69, 72], "V": [52, 56], "Q": [66, 68], "K": [56, 58], "R": null, "K'": [[50, 61], [51, 62]], "V'": [[48, 59], [50, 61]], "example": [47, 72]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dirty, cozy, unattractive, negligent, filthy and logical.\n< Irresponsible Sharon. Ugly Jennifer. Dirty Robert. >. So Sharon is negligent\n < Rational Lisa. Filthy Elizabeth. Comfortable Michelle. >. So Michelle is cozy\n", "ranges": [{"END": [47, 48], "A": [48, 51], "V": [27, 30], "Q": [45, 47], "K": [30, 32], "R": null, "K'": [[35, 40], [37, 41]], "V'": [[33, 38], [35, 40]], "example": [26, 51]}, {"END": [72, 73], "A": [73, 75], "V": [61, 64], "Q": [70, 72], "K": [64, 66], "R": null, "K'": [[55, 59], [56, 60]], "V'": [[53, 57], [55, 59]], "example": [52, 75]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include irrational, indecisive, logical, healthy, sluggish and altruistic.\nPremise: < Hesitant David. Fine Sharon. Unreasonable Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is indecisive? Answer: No\n Premise: < Slow Sarah. Rational Donna. Selfless Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven is altruistic? Answer: Yes\n", "ranges": [{"END": [74, 75], "A": [69, 72], "V": [44, 47], "Q": [67, 68], "K": [47, 48], "R": null, "K'": [[38, 41], [39, 43]], "V'": [[34, 40], [38, 41]], "example": [29, 76]}, {"END": [120, 121], "A": [114, 118], "V": [90, 92], "Q": [112, 113], "K": [92, 93], "R": null, "K'": [[83, 87], [84, 89]], "V'": [[81, 85], [83, 87]], "example": [77, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include irrational, indecisive, sluggish, altruistic, logical and healthy.\nPremise: < Hesitant David. Fine Sharon. Unreasonable Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is indecisive? Answer: No\n Premise: < Slow Sarah. Rational Donna. Selfless Steven. >. Answer with Yes or No. Can it be inferred from the premise that Steven is logical? Answer: No\n", "ranges": [{"END": [74, 75], "A": [69, 72], "V": [44, 47], "Q": [67, 68], "K": [47, 48], "R": null, "K'": [[38, 41], [39, 43]], "V'": [[34, 40], [38, 41]], "example": [29, 76]}, {"END": [117, 118], "A": [114, 115], "V": [90, 92], "Q": [112, 113], "K": [92, 93], "R": null, "K'": [[83, 87], [84, 89]], "V'": [[81, 85], [83, 87]], "example": [77, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Poor Margaret. Late Barbara. Egotistical John. >. Answer with Yes or No. Can it be inferred from the premise that John is selfish? Answer: Yes\n Premise: < Negligent Patricia. Hardworking Jeff. Optimistic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Jeff is diligent? Answer: Yes\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [38, 42], "Q": [62, 63], "K": [42, 43], "R": null, "K'": [[33, 36], [34, 37]], "V'": [[31, 35], [33, 36]], "example": [26, 70]}, {"END": [115, 116], "A": [111, 113], "V": [82, 84], "Q": [109, 110], "K": [84, 85], "R": null, "K'": [[78, 89], [81, 90]], "V'": [[75, 86], [78, 89]], "example": [71, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Poor Margaret. Late Barbara. Egotistical John. >. Answer with Yes or No. Can it be inferred from the premise that John is selfish? Answer: Yes\n Premise: < Negligent Patricia. Hardworking Jeff. Optimistic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Jeff is irresponsible? Answer: No\n", "ranges": [{"END": [68, 69], "A": [64, 66], "V": [38, 42], "Q": [62, 63], "K": [42, 43], "R": null, "K'": [[33, 36], [34, 37]], "V'": [[31, 35], [33, 36]], "example": [26, 70]}, {"END": [116, 117], "A": [111, 114], "V": [82, 84], "Q": [109, 110], "K": [84, 85], "R": null, "K'": [[78, 89], [81, 90]], "V'": [[75, 86], [78, 89]], "example": [71, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Energetic Steven. Informed Jennifer. Unfaithful Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven is disloyal? Answer: No\n Premise: < Unhealthy Kevin. Unattractive Nancy. Intolerant Donna. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is sick? Answer: Yes\n", "ranges": [{"END": [70, 71], "A": [65, 68], "V": [29, 32], "Q": [63, 64], "K": [32, 33], "R": null, "K'": [[36, 43], [38, 44]], "V'": [[34, 39], [36, 43]], "example": [24, 72]}, {"END": [119, 120], "A": [116, 117], "V": [77, 81], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[87, 93], [88, 95]], "V'": [[83, 89], [87, 93]], "example": [73, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Energetic Steven. Informed Jennifer. Unfaithful Betty. >. Answer with Yes or No. Can it be inferred from the premise that Steven is disloyal? Answer: No\n Premise: < Unhealthy Kevin. Unattractive Nancy. Intolerant Donna. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is impatient? Answer: No\n", "ranges": [{"END": [70, 71], "A": [65, 68], "V": [29, 32], "Q": [63, 64], "K": [32, 33], "R": null, "K'": [[36, 43], [38, 44]], "V'": [[34, 39], [36, 43]], "example": [24, 72]}, {"END": [121, 122], "A": [116, 119], "V": [77, 81], "Q": [114, 115], "K": [81, 82], "R": null, "K'": [[87, 93], [88, 95]], "V'": [[83, 89], [87, 93]], "example": [73, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Ambitious Jason. Diligent Nancy. Inquiring Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Nancy is driven? Answer: No\n Premise: < Daring Brian. Keen Michael. Honest George. >. Answer with Yes or No. Can it be inferred from the premise that Brian is bold? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [30, 33], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [20, 65]}, {"END": [105, 106], "A": [102, 103], "V": [70, 72], "Q": [100, 101], "K": [72, 73], "R": null, "K'": [[76, 80], [77, 81]], "V'": [[74, 78], [76, 80]], "example": [66, 107]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Ambitious Jason. Diligent Nancy. Inquiring Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Nancy is driven? Answer: No\n Premise: < Daring Brian. Keen Michael. Honest George. >. Answer with Yes or No. Can it be inferred from the premise that Brian is sharp? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [30, 33], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [20, 65]}, {"END": [105, 106], "A": [102, 103], "V": [70, 72], "Q": [100, 101], "K": [72, 73], "R": null, "K'": [[76, 80], [77, 81]], "V'": [[74, 78], [76, 80]], "example": [66, 107]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Altruistic David. Impatient Carol. Careful Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is cautious? Answer: Yes\n Premise: < Apathetic Ronald. Humble Ruth. Determined Edward. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is unmotivated? Answer: Yes\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [46, 48], "Q": [69, 71], "K": [48, 50], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[35, 41], [39, 44]], "example": [30, 79]}, {"END": [126, 127], "A": [120, 124], "V": [84, 87], "Q": [117, 119], "K": [87, 89], "R": null, "K'": [[92, 97], [93, 98]], "V'": [[90, 94], [92, 97]], "example": [80, 128]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Altruistic David. Impatient Carol. Careful Ronald. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is cautious? Answer: Yes\n Premise: < Apathetic Ronald. Humble Ruth. Determined Edward. >. Answer with Yes or No. Can it be inferred from the premise that Ronald is modest? Answer: No\n", "ranges": [{"END": [77, 78], "A": [72, 75], "V": [46, 48], "Q": [69, 71], "K": [48, 50], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[35, 41], [39, 44]], "example": [30, 79]}, {"END": [124, 125], "A": [120, 122], "V": [84, 87], "Q": [117, 119], "K": [87, 89], "R": null, "K'": [[92, 97], [93, 98]], "V'": [[90, 94], [92, 97]], "example": [80, 126]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include passive, negligent, noisy, full, intelligent and powerful.\nPremise: < Filled Linda. Strong Michael. Lethargic Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael is full? Answer: No\n Premise: < Irresponsible Deborah. Loud John. Smart Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is intelligent? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [34, 36], "Q": [62, 63], "K": [36, 37], "R": null, "K'": [[31, 42], [33, 43]], "V'": [[29, 38], [31, 42]], "example": [24, 69]}, {"END": [113, 114], "A": [109, 111], "V": [85, 87], "Q": [107, 108], "K": [87, 88], "R": null, "K'": [[77, 83], [80, 84]], "V'": [[74, 81], [77, 83]], "example": [70, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include noisy, intelligent, full, passive, powerful and negligent.\nPremise: < Filled Linda. Strong Michael. Lethargic Paul. >. Answer with Yes or No. Can it be inferred from the premise that Michael is full? Answer: No\n Premise: < Irresponsible Deborah. Loud John. Smart Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is negligent? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [34, 36], "Q": [62, 63], "K": [36, 37], "R": null, "K'": [[31, 42], [33, 43]], "V'": [[29, 38], [31, 42]], "example": [24, 69]}, {"END": [114, 115], "A": [109, 112], "V": [85, 87], "Q": [107, 108], "K": [87, 88], "R": null, "K'": [[77, 83], [80, 84]], "V'": [[74, 81], [77, 83]], "example": [70, 116]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include candid, positive, uninformed, comfortable, determined and blunt.\nPremise: < Honest Laura. Dull George. Cozy Donna. >. Answer with Yes or No. Can it be inferred from the premise that George is candid? Answer: No\n Premise: < Ignorant Karen. Decisive John. Optimistic Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen is uninformed? Answer: Yes\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [31, 33], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[29, 37], [30, 39]], "V'": [[27, 35], [29, 37]], "example": [22, 65]}, {"END": [112, 113], "A": [107, 110], "V": [70, 73], "Q": [104, 106], "K": [73, 75], "R": null, "K'": [[79, 84], [80, 85]], "V'": [[76, 81], [79, 84]], "example": [66, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include determined, comfortable, blunt, uninformed, candid and positive.\nPremise: < Honest Laura. Dull George. Cozy Donna. >. Answer with Yes or No. Can it be inferred from the premise that George is candid? Answer: No\n Premise: < Ignorant Karen. Decisive John. Optimistic Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Karen is determined? Answer: No\n", "ranges": [{"END": [63, 64], "A": [60, 61], "V": [31, 33], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[29, 37], [30, 39]], "V'": [[27, 35], [29, 37]], "example": [22, 65]}, {"END": [110, 111], "A": [107, 108], "V": [70, 73], "Q": [104, 106], "K": [73, 75], "R": null, "K'": [[79, 84], [80, 85]], "V'": [[76, 81], [79, 84]], "example": [66, 112]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include healthy, late, humorous, dull, noisy and tardy.\nPremise: < Late Robert. Fine Michelle. Tardy Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian is late? Answer: Yes\n Premise: < Loud Steven. Blunt Sarah. Funny Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark is humorous? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [36, 39], "Q": [59, 60], "K": [39, 40], "R": null, "K'": [[30, 33], [31, 35]], "V'": [[29, 32], [30, 33]], "example": [24, 66]}, {"END": [107, 108], "A": [103, 105], "V": [79, 81], "Q": [101, 102], "K": [81, 82], "R": null, "K'": [[73, 77], [74, 78]], "V'": [[71, 75], [73, 77]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tardy, humorous, healthy, late, dull and noisy.\nPremise: < Late Robert. Fine Michelle. Tardy Brian. >. Answer with Yes or No. Can it be inferred from the premise that Brian is late? Answer: Yes\n Premise: < Loud Steven. Blunt Sarah. Funny Mark. >. Answer with Yes or No. Can it be inferred from the premise that Mark is dull? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [36, 39], "Q": [59, 60], "K": [39, 40], "R": null, "K'": [[30, 33], [31, 35]], "V'": [[29, 32], [30, 33]], "example": [24, 66]}, {"END": [107, 108], "A": [103, 105], "V": [79, 81], "Q": [101, 102], "K": [81, 82], "R": null, "K'": [[73, 77], [74, 78]], "V'": [[71, 75], [73, 77]], "example": [67, 109]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include faithful, safe, fascinating, irrational, passive and awkward.\n< George is inactive. Barbara is unreasonable. Barbara is interesting. >. Barbara is not passive\n < Mary is secure. Christopher is uncomfortable. Christopher is loyal. >. Christopher is not safe\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [28, 30], "Q": [43, 44], "K'": [26, 27], "R": [45, 46], "K": [[31, 37], [32, 38]], "V": [[33, 39], [36, 40]], "example": [25, 48]}, {"END": [69, 70], "A'": [70, 71], "V'": [52, 53], "Q": [67, 68], "K'": [50, 51], "R": [69, 70], "K": [[54, 61], [55, 62]], "V": [[56, 63], [60, 64]], "example": [49, 71]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include right, stingy, indolent, impatient, indifferent and patient.\n< Robert is lazy. Sharon is correct. Sharon is miserly. >. Sharon is not indolent\n < Laura is intolerant. George is uninterested. Laura is tolerant. >. Laura is not indifferent\n", "ranges": [{"END": [47, 48], "A'": [48, 51], "V'": [29, 30], "Q": [44, 46], "K'": [27, 28], "R": [47, 48], "K": [[31, 36], [33, 38]], "V": [[34, 39], [35, 41]], "example": [26, 51]}, {"END": [75, 76], "A'": [76, 78], "V'": [62, 65], "Q": [73, 74], "K'": [60, 61], "R": [75, 76], "K": [[53, 66], [54, 67]], "V": [[55, 68], [59, 70]], "example": [52, 78]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include energetic, negligent, right, low, ugly and innovative.\n< Mark is correct. Sarah is unattractive. Mark is irresponsible. >. Mark is not ugly\n < Laura is active. Laura is creative. Brian is short. >. Laura is not low\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [31, 35], "Q": [44, 45], "K'": [29, 30], "R": [46, 47], "K": [[25, 36], [26, 37]], "V": [[27, 38], [28, 41]], "example": [24, 48]}, {"END": [67, 68], "A'": [68, 69], "V'": [61, 62], "Q": [65, 66], "K'": [59, 60], "R": [67, 68], "K": [[50, 54], [51, 55]], "V": [[52, 56], [53, 58]], "example": [49, 69]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include clean, short, active, fascinating and bold.\n< Michael is low. Margaret is energetic. Margaret is interesting. >. Margaret is not short\n < Karen is brave. Paul is interesting. Karen is splotless. >. Karen is not fascinating\n", "ranges": [{"END": [38, 39], "A'": [39, 40], "V'": [22, 23], "Q": [36, 37], "K'": [20, 21], "R": [38, 39], "K": [[24, 30], [25, 31]], "V": [[26, 32], [29, 33]], "example": [19, 40]}, {"END": [63, 64], "A'": [64, 67], "V'": [49, 50], "Q": [60, 62], "K'": [47, 48], "R": [63, 64], "K": [[42, 51], [44, 53]], "V": [[45, 54], [46, 57]], "example": [41, 67]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include funny, determined, apathetic, negative, harsh and keen.\n< Donna is unmotivated. Donna is witty. Kenneth is pessimistic. >. Donna is not negative\n < Lisa is sharp. John is resolute. Lisa is severe. >. Lisa is not determined\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [41, 45], "Q": [48, 50], "K'": [39, 40], "R": [51, 52], "K": [[24, 32], [26, 34]], "V": [[27, 35], [31, 38]], "example": [23, 53]}, {"END": [72, 73], "A'": [73, 74], "V'": [61, 63], "Q": [70, 71], "K'": [59, 60], "R": [72, 73], "K": [[55, 64], [56, 65]], "V": [[57, 66], [58, 67]], "example": [54, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indifferent, unfaithful, unfriendly, gentle, hazardous and dangerous.\n< Sandra is hazardous. David is dangerous. David is disloyal. >. David is not dangerous\n < Ronald is uninterested. Ronald is tender. Deborah is hostile. >. Ronald is not unfriendly\n", "ranges": [{"END": [51, 52], "A'": [52, 53], "V'": [32, 36], "Q": [49, 50], "K'": [29, 31], "R": [51, 52], "K": [[37, 41], [38, 42]], "V": [[39, 43], [40, 46]], "example": [28, 53]}, {"END": [79, 80], "A'": [80, 83], "V'": [71, 73], "Q": [76, 78], "K'": [67, 70], "R": [79, 80], "K": [[55, 62], [57, 64]], "V": [[58, 65], [61, 66]], "example": [54, 83]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dishonest, inactive, glad, positive, irrational and sociable.\n< Michael is outgoing. Nancy is happy. Michael is unreasonable. >. Michael is not glad\n < Kevin is listless. Lisa is fraudulent. Kevin is optimistic. >. Kevin is not dishonest\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [34, 35], "Q": [44, 45], "K'": [32, 33], "R": [46, 47], "K": [[27, 36], [28, 37]], "V": [[29, 38], [31, 41]], "example": [26, 48]}, {"END": [71, 72], "A'": [72, 76], "V'": [57, 61], "Q": [69, 70], "K'": [55, 56], "R": [71, 72], "K": [[50, 62], [51, 63]], "V": [[52, 64], [54, 66]], "example": [49, 76]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include filled, tall, uncomfortable, unmotivated, correct and foolish.\n< Richard is full. Richard is stupid. Sandra is right. >. Richard is not correct\n < Dorothy is high. Dorothy is apathetic. Robert is awkward. >. Dorothy is not uncomfortable\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [38, 39], "Q": [42, 43], "K'": [35, 37], "R": [44, 45], "K": [[27, 31], [28, 32]], "V": [[29, 33], [30, 34]], "example": [26, 46]}, {"END": [70, 71], "A'": [71, 75], "V'": [62, 64], "Q": [67, 69], "K'": [60, 61], "R": [70, 71], "K": [[48, 53], [50, 55]], "V": [[51, 56], [52, 59]], "example": [47, 75]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, faithful, irrational, passive, dull and awkward.\nPremise: < George is inactive. Barbara is unreasonable. Barbara is interesting. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is not passive? Answer: Yes\n Premise: < Lisa is blunt. David is uncomfortable. David is loyal. >. Answer with Yes or No. Can it be inferred from the premise that David is not dull? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [33, 35], "Q": [64, 65], "K'": [31, 32], "R": [66, 67], "K": [[36, 42], [37, 43]], "V": [[38, 44], [41, 45]], "example": [26, 73]}, {"END": [119, 120], "A'": [115, 117], "V'": [80, 82], "Q": [112, 113], "K'": [78, 79], "R": [114, 115], "K": [[83, 90], [84, 91]], "V": [[85, 92], [89, 93]], "example": [74, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include passive, fascinating, awkward, dull, irrational and faithful.\nPremise: < George is inactive. Barbara is unreasonable. Barbara is interesting. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is not passive? Answer: Yes\n Premise: < Lisa is blunt. David is uncomfortable. David is loyal. >. Answer with Yes or No. Can it be inferred from the premise that David is not awkward? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [33, 35], "Q": [64, 65], "K'": [31, 32], "R": [66, 67], "K": [[36, 42], [37, 43]], "V": [[38, 44], [41, 45]], "example": [26, 73]}, {"END": [119, 120], "A'": [115, 117], "V'": [80, 82], "Q": [112, 113], "K'": [78, 79], "R": [114, 115], "K": [[83, 90], [84, 91]], "V": [[85, 92], [89, 93]], "example": [74, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include trustworthy, uninterested, lazy, courteous, safe and lethargic.\nPremise: < Dorothy is indifferent. Kevin is indolent. Dorothy is reliable. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy is not uninterested? Answer: No\n Premise: < Betty is listless. Daniel is secure. Betty is polite. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not safe? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [41, 44], "Q": [68, 70], "K'": [39, 40], "R": [71, 72], "K": [[33, 45], [35, 47]], "V": [[36, 48], [38, 49]], "example": [28, 79]}, {"END": [122, 123], "A'": [119, 120], "V'": [91, 92], "Q": [116, 117], "K'": [89, 90], "R": [118, 119], "K": [[84, 93], [85, 94]], "V": [[86, 95], [88, 97]], "example": [80, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include trustworthy, safe, lazy, courteous, lethargic and uninterested.\nPremise: < Dorothy is indifferent. Kevin is indolent. Dorothy is reliable. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy is not uninterested? Answer: No\n Premise: < Betty is listless. Daniel is secure. Betty is polite. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not courteous? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [72, 75], "V'": [41, 44], "Q": [68, 70], "K'": [39, 40], "R": [71, 72], "K": [[33, 45], [35, 47]], "V": [[36, 48], [38, 49]], "example": [28, 79]}, {"END": [124, 125], "A'": [119, 122], "V'": [91, 92], "Q": [116, 117], "K'": [89, 90], "R": [118, 119], "K": [[84, 93], [85, 94]], "V": [[86, 95], [88, 97]], "example": [80, 126]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, energetic, faithful, unmotivated, modest and negligent.\nPremise: < Jennifer is active. Kevin is irresponsible. Kevin is humble. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is not energetic? Answer: Yes\n Premise: < Kevin is interesting. Margaret is loyal. Margaret is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is not fascinating? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [37, 38], "Q": [68, 69], "K'": [34, 36], "R": [70, 71], "K": [[39, 45], [40, 46]], "V": [[41, 47], [44, 49]], "example": [29, 78]}, {"END": [123, 124], "A'": [118, 121], "V'": [85, 86], "Q": [115, 116], "K'": [83, 84], "R": [117, 118], "K": [[87, 91], [88, 92]], "V": [[89, 93], [90, 96]], "example": [79, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include faithful, energetic, fascinating, negligent, modest and unmotivated.\nPremise: < Jennifer is active. Kevin is irresponsible. Kevin is humble. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is not energetic? Answer: Yes\n Premise: < Kevin is interesting. Margaret is loyal. Margaret is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is not unmotivated? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [37, 38], "Q": [68, 69], "K'": [34, 36], "R": [70, 71], "K": [[39, 45], [40, 46]], "V": [[41, 47], [44, 49]], "example": [29, 78]}, {"END": [124, 125], "A'": [118, 122], "V'": [85, 86], "Q": [115, 116], "K'": [83, 84], "R": [117, 118], "K": [[87, 91], [88, 92]], "V": [[89, 93], [90, 96]], "example": [79, 126]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fine, stingy, blunt, unhealthy, unimaginative and keen.\nPremise: < Linda is miserly. James is sick. Linda is conventional. >. Answer with Yes or No. Can it be inferred from the premise that Linda is not unhealthy? Answer: Yes\n Premise: < James is healthy. James is dull. Sharon is sharp. >. Answer with Yes or No. Can it be inferred from the premise that James is not keen? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [41, 42], "Q": [66, 68], "K'": [39, 40], "R": [69, 70], "K": [[33, 43], [35, 45]], "V": [[36, 46], [38, 47]], "example": [28, 78]}, {"END": [122, 123], "A'": [119, 120], "V'": [96, 97], "Q": [116, 117], "K'": [93, 95], "R": [118, 119], "K": [[83, 88], [84, 89]], "V": [[85, 90], [87, 92]], "example": [79, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include blunt, stingy, keen, unimaginative, unhealthy and fine.\nPremise: < Linda is miserly. James is sick. Linda is conventional. >. Answer with Yes or No. Can it be inferred from the premise that Linda is not unhealthy? Answer: Yes\n Premise: < James is healthy. James is dull. Sharon is sharp. >. Answer with Yes or No. Can it be inferred from the premise that James is not fine? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [70, 74], "V'": [41, 42], "Q": [66, 68], "K'": [39, 40], "R": [69, 70], "K": [[33, 43], [35, 45]], "V": [[36, 46], [38, 47]], "example": [28, 78]}, {"END": [122, 123], "A'": [119, 120], "V'": [96, 97], "Q": [116, 117], "K'": [93, 95], "R": [118, 119], "K": [[83, 88], [84, 89]], "V": [[85, 90], [87, 92]], "example": [79, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include friendly, inquiring, unattractive, quick, timely and knowledgeable.\nPremise: < Sharon is curious. Sharon is ugly. Mark is punctual. >. Answer with Yes or No. Can it be inferred from the premise that Sharon is not timely? Answer: Yes\n Premise: < Mary is informed. Thomas is fast. Mary is affable. >. Answer with Yes or No. Can it be inferred from the premise that Mary is not quick? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [42, 45], "Q": [64, 66], "K'": [40, 41], "R": [67, 68], "K": [[30, 35], [32, 37]], "V": [[33, 38], [34, 39]], "example": [25, 74]}, {"END": [116, 117], "A'": [113, 114], "V'": [85, 86], "Q": [110, 111], "K'": [83, 84], "R": [112, 113], "K": [[79, 87], [80, 88]], "V": [[81, 89], [82, 91]], "example": [75, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unattractive, timely, knowledgeable, inquiring, quick and friendly.\nPremise: < Sharon is curious. Sharon is ugly. Mark is punctual. >. Answer with Yes or No. Can it be inferred from the premise that Sharon is not timely? Answer: Yes\n Premise: < Mary is informed. Thomas is fast. Mary is affable. >. Answer with Yes or No. Can it be inferred from the premise that Mary is not knowledgeable? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [42, 45], "Q": [64, 66], "K'": [40, 41], "R": [67, 68], "K": [[30, 35], [32, 37]], "V": [[33, 38], [34, 39]], "example": [25, 74]}, {"END": [117, 118], "A'": [113, 115], "V'": [85, 86], "Q": [110, 111], "K'": [83, 84], "R": [112, 113], "K": [[79, 87], [80, 88]], "V": [[81, 89], [82, 91]], "example": [75, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tardy, hesitant, fast, cowardly, benevolent and filthy.\nPremise: < Barbara is timid. Michael is quick. Michael is late. >. Answer with Yes or No. Can it be inferred from the premise that Michael is not cowardly? Answer: Yes\n Premise: < Ruth is indecisive. Ruth is generous. William is dirty. >. Answer with Yes or No. Can it be inferred from the premise that Ruth is not filthy? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [34, 36], "Q": [63, 64], "K'": [32, 33], "R": [65, 66], "K": [[37, 41], [38, 42]], "V": [[39, 43], [40, 44]], "example": [27, 73]}, {"END": [118, 119], "A'": [114, 116], "V'": [91, 92], "Q": [111, 112], "K'": [89, 90], "R": [113, 114], "K": [[78, 84], [79, 85]], "V": [[80, 86], [83, 88]], "example": [74, 120]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include benevolent, cowardly, filthy, hesitant, tardy and fast.\nPremise: < Barbara is timid. Michael is quick. Michael is late. >. Answer with Yes or No. Can it be inferred from the premise that Michael is not cowardly? Answer: Yes\n Premise: < Ruth is indecisive. Ruth is generous. William is dirty. >. Answer with Yes or No. Can it be inferred from the premise that Ruth is not benevolent? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [34, 36], "Q": [63, 64], "K'": [32, 33], "R": [65, 66], "K": [[37, 41], [38, 42]], "V": [[39, 43], [40, 44]], "example": [27, 73]}, {"END": [119, 120], "A'": [114, 117], "V'": [91, 92], "Q": [111, 112], "K'": [89, 90], "R": [113, 114], "K": [[78, 84], [79, 85]], "V": [[80, 86], [83, 88]], "example": [74, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include attractive, cozy, careful, filthy, courteous and altruistic.\nPremise: < Michael is dirty. Maria is cautious. Maria is polite. >. Answer with Yes or No. Can it be inferred from the premise that Maria is not filthy? Answer: Yes\n Premise: < Kimberly is pretty. Kimberly is comfortable. Brian is selfless. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly is not altruistic? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [34, 35], "Q": [65, 66], "K'": [32, 33], "R": [67, 68], "K": [[36, 42], [37, 43]], "V": [[38, 44], [41, 46]], "example": [27, 74]}, {"END": [125, 126], "A'": [119, 123], "V'": [93, 95], "Q": [114, 117], "K'": [91, 92], "R": [118, 119], "K": [[79, 85], [82, 88]], "V": [[83, 89], [84, 90]], "example": [75, 127]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include filthy, careful, attractive, altruistic, courteous and cozy.\nPremise: < Michael is dirty. Maria is cautious. Maria is polite. >. Answer with Yes or No. Can it be inferred from the premise that Maria is not filthy? Answer: Yes\n Premise: < Kimberly is pretty. Kimberly is comfortable. Brian is selfless. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly is not cozy? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [34, 35], "Q": [65, 66], "K'": [32, 33], "R": [67, 68], "K": [[36, 42], [37, 43]], "V": [[38, 44], [41, 46]], "example": [27, 74]}, {"END": [123, 124], "A'": [119, 121], "V'": [93, 95], "Q": [114, 117], "K'": [91, 92], "R": [118, 119], "K": [[79, 85], [82, 88]], "V": [[83, 89], [84, 90]], "example": [75, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dependable, uninformed, unsuccessful, arrogant, low and careless.\nPremise: < Christopher is boastful. Sarah is responsible. Sarah is ignorant. >. Answer with Yes or No. Can it be inferred from the premise that Sarah is not arrogant? Answer: Yes\n Premise: < Betty is incautious. William is failing. Betty is short. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not unsuccessful? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [34, 37], "Q": [65, 66], "K'": [32, 33], "R": [67, 68], "K": [[38, 42], [39, 43]], "V": [[40, 44], [41, 46]], "example": [27, 75]}, {"END": [121, 122], "A'": [116, 119], "V'": [89, 90], "Q": [113, 114], "K'": [87, 88], "R": [115, 116], "K": [[80, 91], [81, 92]], "V": [[82, 93], [86, 94]], "example": [76, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unsuccessful, arrogant, uninformed, careless, low and dependable.\nPremise: < Christopher is boastful. Sarah is responsible. Sarah is ignorant. >. Answer with Yes or No. Can it be inferred from the premise that Sarah is not arrogant? Answer: Yes\n Premise: < Betty is incautious. William is failing. Betty is short. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not low? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [34, 37], "Q": [65, 66], "K'": [32, 33], "R": [67, 68], "K": [[38, 42], [39, 43]], "V": [[40, 44], [41, 46]], "example": [27, 75]}, {"END": [119, 120], "A'": [116, 117], "V'": [89, 90], "Q": [113, 114], "K'": [87, 88], "R": [115, 116], "K": [[80, 91], [81, 92]], "V": [[82, 93], [86, 94]], "example": [76, 121]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include faithful, safe, fascinating, irrational, passive and awkward.\n< Inactive George. Unreasonable Barbara. Interesting Barbara. >. Barbara is not passive\n < Secure Mary. Uncomfortable Christopher. Loyal Christopher. >. Christopher is not safe\n", "ranges": [{"END": [43, 44], "A'": [44, 46], "V'": [26, 28], "Q": [41, 42], "K'": [28, 29], "R": [43, 44], "K": [[33, 37], [34, 38]], "V": [[30, 35], [33, 37]], "example": [25, 46]}, {"END": [66, 67], "A'": [67, 68], "V'": [48, 50], "Q": [64, 65], "K'": [50, 51], "R": [66, 67], "K": [[56, 60], [57, 61]], "V": [[52, 58], [56, 60]], "example": [47, 68]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include right, stingy, indolent, impatient, indifferent and patient.\n< Lazy Robert. Correct Sharon. Miserly Sharon. >. Sharon is not indolent\n < Intolerant Laura. Uninterested George. Tolerant Laura. >. Laura is not indifferent\n", "ranges": [{"END": [46, 47], "A'": [47, 50], "V'": [27, 29], "Q": [43, 45], "K'": [29, 30], "R": [46, 47], "K": [[32, 38], [34, 40]], "V": [[31, 35], [32, 38]], "example": [26, 50]}, {"END": [72, 73], "A'": [73, 75], "V'": [58, 61], "Q": [70, 71], "K'": [61, 62], "R": [72, 73], "K": [[56, 66], [57, 67]], "V": [[52, 63], [56, 66]], "example": [51, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include energetic, negligent, right, low, ugly and innovative.\n< Correct Mark. Unattractive Sarah. Irresponsible Mark. >. Mark is not ugly\n < Active Laura. Creative Laura. Short Brian. >. Laura is not low\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [28, 32], "Q": [41, 42], "K'": [32, 33], "R": [43, 44], "K": [[26, 37], [27, 38]], "V": [[25, 34], [26, 37]], "example": [24, 45]}, {"END": [60, 61], "A'": [61, 62], "V'": [53, 54], "Q": [58, 59], "K'": [54, 55], "R": [60, 61], "K": [[48, 51], [49, 52]], "V": [[47, 50], [48, 51]], "example": [46, 62]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include clean, short, active, fascinating and bold.\n< Low Michael. Energetic Margaret. Interesting Margaret. >. Margaret is not short\n < Brave Karen. Interesting Paul. Splotless Karen. >. Karen is not fascinating\n", "ranges": [{"END": [36, 37], "A'": [37, 38], "V'": [20, 21], "Q": [34, 35], "K'": [21, 22], "R": [36, 37], "K": [[26, 30], [27, 31]], "V": [[23, 28], [26, 30]], "example": [19, 38]}, {"END": [60, 61], "A'": [61, 64], "V'": [45, 47], "Q": [57, 59], "K'": [47, 48], "R": [60, 61], "K": [[42, 52], [44, 54]], "V": [[40, 49], [42, 52]], "example": [39, 64]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include funny, determined, apathetic, negative, harsh and keen.\n< Unmotivated Donna. Witty Donna. Pessimistic Kenneth. >. Donna is not negative\n < Sharp Lisa. Resolute John. Severe Lisa. >. Lisa is not determined\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [37, 41], "Q": [45, 47], "K'": [41, 42], "R": [48, 49], "K": [[28, 34], [30, 36]], "V": [[24, 31], [28, 34]], "example": [23, 50]}, {"END": [68, 69], "A'": [69, 70], "V'": [56, 58], "Q": [66, 67], "K'": [58, 59], "R": [68, 69], "K": [[54, 62], [55, 63]], "V": [[52, 60], [54, 62]], "example": [51, 70]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indifferent, unfaithful, unfriendly, gentle, hazardous and dangerous.\n< Hazardous Sandra. Dangerous David. Disloyal David. >. David is not dangerous\n < Uninterested Ronald. Tender Ronald. Hostile Deborah. >. Ronald is not unfriendly\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [29, 32], "Q": [47, 48], "K'": [32, 34], "R": [49, 50], "K": [[38, 43], [39, 44]], "V": [[35, 40], [38, 43]], "example": [28, 51]}, {"END": [75, 76], "A'": [76, 79], "V'": [64, 66], "Q": [72, 74], "K'": [66, 69], "R": [75, 76], "K": [[56, 61], [58, 63]], "V": [[53, 59], [56, 61]], "example": [52, 79]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dishonest, inactive, glad, positive, irrational and sociable.\n< Outgoing Michael. Happy Nancy. Unreasonable Michael. >. Michael is not glad\n < Listless Kevin. Fraudulent Lisa. Optimistic Kevin. >. Kevin is not dishonest\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [31, 32], "Q": [41, 42], "K'": [32, 33], "R": [43, 44], "K": [[29, 37], [30, 38]], "V": [[27, 34], [29, 37]], "example": [26, 45]}, {"END": [66, 67], "A'": [67, 71], "V'": [51, 55], "Q": [64, 65], "K'": [55, 56], "R": [66, 67], "K": [[49, 60], [50, 61]], "V": [[47, 57], [49, 60]], "example": [46, 71]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include filled, tall, uncomfortable, unmotivated, correct and foolish.\n< Full Richard. Stupid Richard. Right Sandra. >. Richard is not correct\n < High Dorothy. Apathetic Dorothy. Awkward Robert. >. Dorothy is not uncomfortable\n", "ranges": [{"END": [43, 44], "A'": [44, 45], "V'": [35, 36], "Q": [41, 42], "K'": [36, 38], "R": [43, 44], "K": [[28, 33], [29, 34]], "V": [[27, 30], [28, 33]], "example": [26, 45]}, {"END": [67, 68], "A'": [68, 72], "V'": [57, 60], "Q": [64, 66], "K'": [60, 61], "R": [67, 68], "K": [[48, 54], [50, 56]], "V": [[47, 51], [48, 54]], "example": [46, 72]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, faithful, irrational, passive, dull and awkward.\nPremise: < Inactive George. Unreasonable Barbara. Interesting Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is not passive? Answer: Yes\n Premise: < Blunt Lisa. Uncomfortable David. Loyal David. >. Answer with Yes or No. Can it be inferred from the premise that David is not dull? Answer: Yes\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [31, 33], "Q": [62, 63], "K'": [33, 34], "R": [64, 65], "K": [[38, 42], [39, 43]], "V": [[35, 40], [38, 42]], "example": [26, 71]}, {"END": [115, 116], "A'": [111, 113], "V'": [76, 78], "Q": [108, 109], "K'": [78, 79], "R": [110, 111], "K": [[84, 88], [85, 89]], "V": [[80, 86], [84, 88]], "example": [72, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include passive, fascinating, awkward, dull, irrational and faithful.\nPremise: < Inactive George. Unreasonable Barbara. Interesting Barbara. >. Answer with Yes or No. Can it be inferred from the premise that Barbara is not passive? Answer: Yes\n Premise: < Blunt Lisa. Uncomfortable David. Loyal David. >. Answer with Yes or No. Can it be inferred from the premise that David is not awkward? Answer: No\n", "ranges": [{"END": [69, 70], "A'": [65, 67], "V'": [31, 33], "Q": [62, 63], "K'": [33, 34], "R": [64, 65], "K": [[38, 42], [39, 43]], "V": [[35, 40], [38, 42]], "example": [26, 71]}, {"END": [115, 116], "A'": [111, 113], "V'": [76, 78], "Q": [108, 109], "K'": [78, 79], "R": [110, 111], "K": [[84, 88], [85, 89]], "V": [[80, 86], [84, 88]], "example": [72, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include trustworthy, uninterested, lazy, courteous, safe and lethargic.\nPremise: < Indifferent Dorothy. Indolent Kevin. Reliable Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy is not uninterested? Answer: No\n Premise: < Listless Betty. Secure Daniel. Polite Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not safe? Answer: Yes\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [38, 41], "Q": [67, 69], "K'": [41, 42], "R": [70, 71], "K": [[35, 46], [37, 48]], "V": [[33, 43], [35, 46]], "example": [28, 78]}, {"END": [119, 120], "A'": [116, 117], "V'": [87, 89], "Q": [113, 114], "K'": [89, 90], "R": [115, 116], "K": [[85, 93], [86, 94]], "V": [[83, 91], [85, 93]], "example": [79, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include trustworthy, safe, lazy, courteous, lethargic and uninterested.\nPremise: < Indifferent Dorothy. Indolent Kevin. Reliable Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that Dorothy is not uninterested? Answer: No\n Premise: < Listless Betty. Secure Daniel. Polite Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not courteous? Answer: No\n", "ranges": [{"END": [76, 77], "A'": [71, 74], "V'": [38, 41], "Q": [67, 69], "K'": [41, 42], "R": [70, 71], "K": [[35, 46], [37, 48]], "V": [[33, 43], [35, 46]], "example": [28, 78]}, {"END": [121, 122], "A'": [116, 119], "V'": [87, 89], "Q": [113, 114], "K'": [89, 90], "R": [115, 116], "K": [[85, 93], [86, 94]], "V": [[83, 91], [85, 93]], "example": [79, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, energetic, faithful, unmotivated, modest and negligent.\nPremise: < Active Jennifer. Irresponsible Kevin. Humble Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is not energetic? Answer: Yes\n Premise: < Interesting Kevin. Loyal Margaret. Apathetic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is not fascinating? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [34, 35], "Q": [65, 66], "K'": [35, 37], "R": [67, 68], "K": [[41, 45], [42, 46]], "V": [[38, 43], [41, 45]], "example": [29, 75]}, {"END": [119, 120], "A'": [114, 117], "V'": [80, 82], "Q": [111, 112], "K'": [82, 83], "R": [113, 114], "K": [[86, 91], [87, 92]], "V": [[84, 88], [86, 91]], "example": [76, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include faithful, energetic, fascinating, negligent, modest and unmotivated.\nPremise: < Active Jennifer. Irresponsible Kevin. Humble Kevin. >. Answer with Yes or No. Can it be inferred from the premise that Kevin is not energetic? Answer: Yes\n Premise: < Interesting Kevin. Loyal Margaret. Apathetic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that Margaret is not unmotivated? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [34, 35], "Q": [65, 66], "K'": [35, 37], "R": [67, 68], "K": [[41, 45], [42, 46]], "V": [[38, 43], [41, 45]], "example": [29, 75]}, {"END": [120, 121], "A'": [114, 118], "V'": [80, 82], "Q": [111, 112], "K'": [82, 83], "R": [113, 114], "K": [[86, 91], [87, 92]], "V": [[84, 88], [86, 91]], "example": [76, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fine, stingy, blunt, unhealthy, unimaginative and keen.\nPremise: < Miserly Linda. Sick James. Conventional Linda. >. Answer with Yes or No. Can it be inferred from the premise that Linda is not unhealthy? Answer: Yes\n Premise: < Healthy James. Dull James. Sharp Sharon. >. Answer with Yes or No. Can it be inferred from the premise that James is not keen? Answer: Yes\n", "ranges": [{"END": [77, 78], "A'": [71, 75], "V'": [39, 41], "Q": [67, 69], "K'": [41, 42], "R": [70, 71], "K": [[36, 46], [38, 48]], "V": [[33, 43], [36, 46]], "example": [28, 79]}, {"END": [121, 122], "A'": [118, 119], "V'": [92, 94], "Q": [115, 116], "K'": [94, 96], "R": [117, 118], "K": [[86, 90], [87, 91]], "V": [[84, 88], [86, 90]], "example": [80, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include blunt, stingy, keen, unimaginative, unhealthy and fine.\nPremise: < Miserly Linda. Sick James. Conventional Linda. >. Answer with Yes or No. Can it be inferred from the premise that Linda is not unhealthy? Answer: Yes\n Premise: < Healthy James. Dull James. Sharp Sharon. >. Answer with Yes or No. Can it be inferred from the premise that James is not fine? Answer: No\n", "ranges": [{"END": [77, 78], "A'": [71, 75], "V'": [39, 41], "Q": [67, 69], "K'": [41, 42], "R": [70, 71], "K": [[36, 46], [38, 48]], "V": [[33, 43], [36, 46]], "example": [28, 79]}, {"END": [121, 122], "A'": [118, 119], "V'": [92, 94], "Q": [115, 116], "K'": [94, 96], "R": [117, 118], "K": [[86, 90], [87, 91]], "V": [[84, 88], [86, 90]], "example": [80, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include friendly, inquiring, unattractive, quick, timely and knowledgeable.\nPremise: < Curious Sharon. Ugly Sharon. Punctual Mark. >. Answer with Yes or No. Can it be inferred from the premise that Sharon is not timely? Answer: Yes\n Premise: < Informed Mary. Fast Thomas. Affable Mary. >. Answer with Yes or No. Can it be inferred from the premise that Mary is not quick? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [40, 43], "Q": [63, 65], "K'": [43, 44], "R": [66, 67], "K": [[32, 37], [34, 39]], "V": [[30, 35], [32, 37]], "example": [25, 73]}, {"END": [113, 114], "A'": [110, 111], "V'": [82, 83], "Q": [107, 108], "K'": [83, 84], "R": [109, 110], "K": [[80, 87], [81, 88]], "V": [[78, 85], [80, 87]], "example": [74, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unattractive, timely, knowledgeable, inquiring, quick and friendly.\nPremise: < Curious Sharon. Ugly Sharon. Punctual Mark. >. Answer with Yes or No. Can it be inferred from the premise that Sharon is not timely? Answer: Yes\n Premise: < Informed Mary. Fast Thomas. Affable Mary. >. Answer with Yes or No. Can it be inferred from the premise that Mary is not knowledgeable? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [67, 69], "V'": [40, 43], "Q": [63, 65], "K'": [43, 44], "R": [66, 67], "K": [[32, 37], [34, 39]], "V": [[30, 35], [32, 37]], "example": [25, 73]}, {"END": [114, 115], "A'": [110, 112], "V'": [82, 83], "Q": [107, 108], "K'": [83, 84], "R": [109, 110], "K": [[80, 87], [81, 88]], "V": [[78, 85], [80, 87]], "example": [74, 116]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tardy, hesitant, fast, cowardly, benevolent and filthy.\nPremise: < Timid Barbara. Quick Michael. Late Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael is not cowardly? Answer: Yes\n Premise: < Indecisive Ruth. Generous Ruth. Dirty William. >. Answer with Yes or No. Can it be inferred from the premise that Ruth is not filthy? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [63, 66], "V'": [32, 34], "Q": [60, 61], "K'": [34, 35], "R": [62, 63], "K": [[37, 40], [38, 41]], "V": [[36, 39], [37, 40]], "example": [27, 70]}, {"END": [114, 115], "A'": [110, 112], "V'": [85, 87], "Q": [107, 108], "K'": [87, 88], "R": [109, 110], "K": [[79, 83], [80, 84]], "V": [[75, 81], [79, 83]], "example": [71, 116]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include benevolent, cowardly, filthy, hesitant, tardy and fast.\nPremise: < Timid Barbara. Quick Michael. Late Michael. >. Answer with Yes or No. Can it be inferred from the premise that Michael is not cowardly? Answer: Yes\n Premise: < Indecisive Ruth. Generous Ruth. Dirty William. >. Answer with Yes or No. Can it be inferred from the premise that Ruth is not benevolent? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [63, 66], "V'": [32, 34], "Q": [60, 61], "K'": [34, 35], "R": [62, 63], "K": [[37, 40], [38, 41]], "V": [[36, 39], [37, 40]], "example": [27, 70]}, {"END": [115, 116], "A'": [110, 113], "V'": [85, 87], "Q": [107, 108], "K'": [87, 88], "R": [109, 110], "K": [[79, 83], [80, 84]], "V": [[75, 81], [79, 83]], "example": [71, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include attractive, cozy, careful, filthy, courteous and altruistic.\nPremise: < Dirty Michael. Cautious Maria. Polite Maria. >. Answer with Yes or No. Can it be inferred from the premise that Maria is not filthy? Answer: Yes\n Premise: < Pretty Kimberly. Comfortable Kimberly. Selfless Brian. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly is not altruistic? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [32, 34], "Q": [63, 64], "K'": [34, 35], "R": [65, 66], "K": [[39, 43], [40, 44]], "V": [[36, 41], [39, 43]], "example": [27, 72]}, {"END": [123, 124], "A'": [117, 121], "V'": [90, 92], "Q": [112, 115], "K'": [92, 93], "R": [116, 117], "K": [[79, 86], [82, 89]], "V": [[77, 83], [79, 86]], "example": [73, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include filthy, careful, attractive, altruistic, courteous and cozy.\nPremise: < Dirty Michael. Cautious Maria. Polite Maria. >. Answer with Yes or No. Can it be inferred from the premise that Maria is not filthy? Answer: Yes\n Premise: < Pretty Kimberly. Comfortable Kimberly. Selfless Brian. >. Answer with Yes or No. Can it be inferred from the premise that Kimberly is not cozy? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [32, 34], "Q": [63, 64], "K'": [34, 35], "R": [65, 66], "K": [[39, 43], [40, 44]], "V": [[36, 41], [39, 43]], "example": [27, 72]}, {"END": [121, 122], "A'": [117, 119], "V'": [90, 92], "Q": [112, 115], "K'": [92, 93], "R": [116, 117], "K": [[79, 86], [82, 89]], "V": [[77, 83], [79, 86]], "example": [73, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dependable, uninformed, unsuccessful, arrogant, low and careless.\nPremise: < Boastful Christopher. Responsible Sarah. Ignorant Sarah. >. Answer with Yes or No. Can it be inferred from the premise that Sarah is not arrogant? Answer: Yes\n Premise: < Incautious Betty. Failing William. Short Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not unsuccessful? Answer: Yes\n", "ranges": [{"END": [74, 75], "A'": [69, 72], "V'": [32, 35], "Q": [66, 67], "K'": [35, 36], "R": [68, 69], "K": [[41, 46], [42, 47]], "V": [[37, 43], [41, 46]], "example": [27, 76]}, {"END": [120, 121], "A'": [115, 118], "V'": [87, 89], "Q": [112, 113], "K'": [89, 90], "R": [114, 115], "K": [[85, 92], [86, 93]], "V": [[81, 91], [85, 92]], "example": [77, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_equal,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unsuccessful, arrogant, uninformed, careless, low and dependable.\nPremise: < Boastful Christopher. Responsible Sarah. Ignorant Sarah. >. Answer with Yes or No. Can it be inferred from the premise that Sarah is not arrogant? Answer: Yes\n Premise: < Incautious Betty. Failing William. Short Betty. >. Answer with Yes or No. Can it be inferred from the premise that Betty is not low? Answer: No\n", "ranges": [{"END": [74, 75], "A'": [69, 72], "V'": [32, 35], "Q": [66, 67], "K'": [35, 36], "R": [68, 69], "K": [[41, 46], [42, 47]], "V": [[37, 43], [41, 46]], "example": [27, 76]}, {"END": [118, 119], "A'": [115, 116], "V'": [87, 89], "Q": [112, 113], "K'": [89, 90], "R": [114, 115], "K": [[85, 92], [86, 93]], "V": [[81, 91], [85, 92]], "example": [77, 120]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Kimberly is unhappy. Sharon is inactive. Kenneth is innovative. >. So who is creative? Kenneth\n < Sandra is kind. Kevin is dangerous. Elizabeth is brave. >. So who is daring? Elizabeth\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [15, 16], "Q": [25, 27], "K": [17, 19], "R": null, "K'": [[6, 12], [8, 14]], "V'": [[2, 9], [5, 11]], "example": [1, 29]}, {"END": [51, 52], "A": [52, 53], "V": [40, 41], "Q": [49, 51], "K": [42, 43], "R": null, "K'": [[34, 38], [35, 39]], "V'": [[31, 36], [33, 37]], "example": [30, 53]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Richard is beautiful. Brian is miserly. Sarah is fine. >. So who is attractive? Richard\n < Susan is indolent. Sarah is unmotivated. Paul is bold. >. So who is apathetic? Sarah\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [2, 3], "Q": [20, 22], "K": [4, 5], "R": null, "K'": [[8, 13], [10, 14]], "V'": [[6, 11], [7, 12]], "example": [1, 24]}, {"END": [51, 52], "A": [52, 53], "V": [32, 33], "Q": [48, 51], "K": [34, 38], "R": null, "K'": [[28, 41], [31, 42]], "V'": [[26, 39], [27, 40]], "example": [25, 53]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Jeff is polite. Brian is secure. Donald is listless. >. So who is safe? Brian\n < Mark is ambitious. Margaret is indecisive. Michelle is considerate. >. So who is thoughtful? Michelle\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [7, 8], "Q": [21, 22], "K": [9, 10], "R": null, "K'": [[4, 13], [6, 15]], "V'": [[2, 11], [3, 12]], "example": [1, 24]}, {"END": [51, 52], "A": [52, 54], "V": [38, 40], "Q": [49, 51], "K": [41, 43], "R": null, "K'": [[28, 34], [31, 37]], "V'": [[26, 32], [27, 33]], "example": [25, 54]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Betty is irresponsible. Margaret is intelligent. Mary is candid. >. So who is clever? Margaret\n < Donna is arrogant. Nancy is weak. Kevin is informed. >. So who is knowledgeable? Kevin\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [8, 9], "Q": [22, 23], "K": [10, 12], "R": null, "K'": [[4, 15], [7, 16]], "V'": [[2, 13], [3, 14]], "example": [1, 25]}, {"END": [49, 50], "A": [50, 51], "V": [38, 39], "Q": [47, 49], "K": [40, 41], "R": null, "K'": [[30, 36], [33, 37]], "V'": [[27, 34], [29, 35]], "example": [26, 51]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol is pessimistic. Donna is sociable. Joseph is candid. >. So who is negative? Carol\n < Michelle is creative. Helen is unhealthy. Joseph is reliable. >. So who is innovative? Michelle\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [2, 3], "Q": [24, 25], "K": [4, 8], "R": null, "K'": [[12, 17], [14, 18]], "V'": [[9, 15], [11, 16]], "example": [1, 27]}, {"END": [53, 54], "A": [54, 56], "V": [29, 31], "Q": [51, 53], "K": [32, 34], "R": null, "K'": [[37, 44], [41, 45]], "V'": [[35, 42], [36, 43]], "example": [28, 56]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< David is diligent. Carol is considerate. Maria is pretty. >. So who is thoughtful? Carol\n < Maria is filthy. Deborah is disloyal. Linda is adventurous. >. So who is dirty? Maria\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [7, 8], "Q": [21, 23], "K": [9, 11], "R": null, "K'": [[4, 14], [6, 15]], "V'": [[2, 12], [3, 13]], "example": [1, 25]}, {"END": [53, 54], "A": [54, 55], "V": [27, 28], "Q": [52, 53], "K": [29, 31], "R": null, "K'": [[36, 43], [39, 46]], "V'": [[32, 40], [35, 42]], "example": [26, 55]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michelle is irresponsible. Laura is curious. Mary is lively. >. So who is active? Mary\n < Dorothy is happy. Margaret is outgoing. James is candid. >. So who is honest? James\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [13, 14], "Q": [23, 24], "K": [15, 17], "R": null, "K'": [[5, 11], [8, 12]], "V'": [[2, 9], [4, 10]], "example": [1, 26]}, {"END": [48, 49], "A": [49, 50], "V": [38, 39], "Q": [47, 48], "K": [40, 41], "R": null, "K'": [[31, 35], [32, 37]], "V'": [[28, 33], [30, 34]], "example": [27, 50]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Laura is compassionate. Karen is optimistic. Helen is lethargic. >. So who is kind? Laura\n < Helen is late. Patricia is timid. Lisa is comfortable. >. So who is cozy? Lisa\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [2, 3], "Q": [27, 28], "K": [4, 8], "R": null, "K'": [[12, 17], [14, 21]], "V'": [[9, 15], [11, 16]], "example": [1, 30]}, {"END": [54, 55], "A": [55, 56], "V": [43, 44], "Q": [52, 54], "K": [45, 46], "R": null, "K'": [[34, 40], [35, 42]], "V'": [[32, 36], [33, 39]], "example": [31, 56]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly is unhappy. Sharon is inactive. Kenneth is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is Kimberly? Answer: No\n Premise: < Sandra is considerate. Kevin is dull. Elizabeth is logical. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is Elizabeth? Answer: Yes\n", "ranges": [{"END": [54, 55], "A": [49, 52], "V": [18, 19], "Q": [46, 48], "K": [20, 22], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 56]}, {"END": [104, 105], "A": [101, 102], "V": [72, 73], "Q": [99, 100], "K": [74, 75], "R": null, "K'": [[64, 69], [66, 71]], "V'": [[61, 67], [63, 68]], "example": [57, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Kimberly is unhappy. Sharon is inactive. Kenneth is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is Kimberly? Answer: No\n Premise: < Sandra is considerate. Kevin is dull. Elizabeth is logical. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is Kevin? Answer: No\n", "ranges": [{"END": [54, 55], "A": [49, 52], "V": [18, 19], "Q": [46, 48], "K": [20, 22], "R": null, "K'": [[9, 15], [11, 17]], "V'": [[5, 12], [8, 14]], "example": [1, 56]}, {"END": [104, 105], "A": [101, 102], "V": [72, 73], "Q": [99, 100], "K": [74, 75], "R": null, "K'": [[64, 69], [66, 71]], "V'": [[61, 67], [63, 68]], "example": [57, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher is bold. Linda is healthy. Kenneth is hardworking. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is Christopher? Answer: Yes\n Premise: < Deborah is humble. Kevin is honest. John is selfish. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is Deborah? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [5, 6], "Q": [43, 45], "K": [7, 8], "R": null, "K'": [[12, 17], [14, 19]], "V'": [[9, 15], [11, 16]], "example": [1, 51]}, {"END": [103, 104], "A": [98, 101], "V": [56, 59], "Q": [95, 97], "K": [60, 62], "R": null, "K'": [[65, 69], [66, 71]], "V'": [[63, 67], [64, 68]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Christopher is bold. Linda is healthy. Kenneth is hardworking. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is Christopher? Answer: Yes\n Premise: < Deborah is humble. Kevin is honest. John is selfish. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is John? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [5, 6], "Q": [43, 45], "K": [7, 8], "R": null, "K'": [[12, 17], [14, 19]], "V'": [[9, 15], [11, 16]], "example": [1, 51]}, {"END": [101, 102], "A": [98, 99], "V": [56, 59], "Q": [95, 97], "K": [60, 62], "R": null, "K'": [[65, 69], [66, 71]], "V'": [[63, 67], [64, 68]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is inconsiderate. Edward is creative. Robert is active. >. Answer with Yes or No. Can it be inferred from the premise that the one who's energetic is Mary? Answer: No\n Premise: < Betty is candid. Steven is failing. Jennifer is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is Steven? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [16, 17], "Q": [43, 46], "K": [18, 19], "R": null, "K'": [[7, 13], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 52]}, {"END": [101, 102], "A": [98, 99], "V": [61, 62], "Q": [94, 97], "K": [63, 64], "R": null, "K'": [[59, 68], [60, 70]], "V'": [[57, 65], [58, 67]], "example": [53, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is inconsiderate. Edward is creative. Robert is active. >. Answer with Yes or No. Can it be inferred from the premise that the one who's energetic is Mary? Answer: No\n Premise: < Betty is candid. Steven is failing. Jennifer is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is Betty? Answer: No\n", "ranges": [{"END": [50, 51], "A": [47, 48], "V": [16, 17], "Q": [43, 46], "K": [18, 19], "R": null, "K'": [[7, 13], [10, 15]], "V'": [[5, 11], [6, 12]], "example": [1, 52]}, {"END": [101, 102], "A": [98, 99], "V": [61, 62], "Q": [94, 97], "K": [63, 64], "R": null, "K'": [[59, 68], [60, 70]], "V'": [[57, 65], [58, 67]], "example": [53, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel is rational. Sharon is intelligent. Anthony is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is Sharon? Answer: Yes\n Premise: < Thomas is knowledgeable. Ruth is lazy. Margaret is ambitious. >. Answer with Yes or No. Can it be inferred from the premise that the one who's indolent is Ruth? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [9, 11], "Q": [42, 43], "K": [12, 14], "R": null, "K'": [[7, 17], [8, 18]], "V'": [[5, 15], [6, 16]], "example": [1, 50]}, {"END": [100, 101], "A": [97, 98], "V": [60, 61], "Q": [93, 96], "K": [62, 63], "R": null, "K'": [[57, 66], [59, 69]], "V'": [[55, 64], [56, 65]], "example": [51, 102]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Daniel is rational. Sharon is intelligent. Anthony is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is Sharon? Answer: Yes\n Premise: < Thomas is knowledgeable. Ruth is lazy. Margaret is ambitious. >. Answer with Yes or No. Can it be inferred from the premise that the one who's indolent is Margaret? Answer: No\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [9, 11], "Q": [42, 43], "K": [12, 14], "R": null, "K'": [[7, 17], [8, 18]], "V'": [[5, 15], [6, 16]], "example": [1, 50]}, {"END": [100, 101], "A": [97, 98], "V": [60, 61], "Q": [93, 96], "K": [62, 63], "R": null, "K'": [[57, 66], [59, 69]], "V'": [[55, 64], [56, 65]], "example": [51, 102]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura is unreliable. Brian is severe. Linda is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the one who's harsh is Laura? Answer: No\n Premise: < John is wrong. Ronald is hazardous. Deborah is filthy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's incorrect is John? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [12, 13], "Q": [47, 49], "K": [14, 15], "R": null, "K'": [[7, 19], [11, 23]], "V'": [[5, 16], [6, 18]], "example": [1, 55]}, {"END": [107, 108], "A": [104, 105], "V": [60, 61], "Q": [102, 103], "K": [62, 63], "R": null, "K'": [[67, 76], [71, 78]], "V'": [[64, 72], [66, 75]], "example": [56, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura is unreliable. Brian is severe. Linda is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the one who's harsh is Laura? Answer: No\n Premise: < John is wrong. Ronald is hazardous. Deborah is filthy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's incorrect is Ronald? Answer: No\n", "ranges": [{"END": [53, 54], "A": [50, 51], "V": [12, 13], "Q": [47, 49], "K": [14, 15], "R": null, "K'": [[7, 19], [11, 23]], "V'": [[5, 16], [6, 18]], "example": [1, 55]}, {"END": [108, 109], "A": [104, 106], "V": [60, 61], "Q": [102, 103], "K": [62, 63], "R": null, "K'": [[67, 76], [71, 78]], "V'": [[64, 72], [66, 75]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael is successful. Sandra is apathetic. Daniel is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is Sandra? Answer: Yes\n Premise: < Ronald is arrogant. Donald is careful. John is fraudulent. >. Answer with Yes or No. Can it be inferred from the premise that the one who's boastful is Ronald? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [9, 11], "Q": [44, 48], "K": [12, 15], "R": null, "K'": [[7, 18], [8, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 55]}, {"END": [109, 110], "A": [105, 107], "V": [60, 62], "Q": [101, 104], "K": [63, 66], "R": null, "K'": [[69, 73], [70, 77]], "V'": [[67, 71], [68, 72]], "example": [56, 111]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael is successful. Sandra is apathetic. Daniel is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is Sandra? Answer: Yes\n Premise: < Ronald is arrogant. Donald is careful. John is fraudulent. >. Answer with Yes or No. Can it be inferred from the premise that the one who's boastful is Donald? Answer: No\n", "ranges": [{"END": [53, 54], "A": [49, 51], "V": [9, 11], "Q": [44, 48], "K": [12, 15], "R": null, "K'": [[7, 18], [8, 20]], "V'": [[5, 16], [6, 17]], "example": [1, 55]}, {"END": [108, 109], "A": [105, 106], "V": [60, 62], "Q": [101, 104], "K": [63, 66], "R": null, "K'": [[69, 73], [70, 77]], "V'": [[67, 71], [68, 72]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald is foolish. Betty is dangerous. Lisa is comfortable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's hazardous is Betty? Answer: Yes\n Premise: < Michelle is generous. Linda is indecisive. Paul is dirty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's filthy is Paul? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [10, 11], "Q": [41, 45], "K": [12, 13], "R": null, "K'": [[7, 16], [9, 17]], "V'": [[5, 14], [6, 15]], "example": [1, 51]}, {"END": [102, 103], "A": [99, 100], "V": [69, 70], "Q": [96, 98], "K": [71, 72], "R": null, "K'": [[59, 65], [61, 68]], "V'": [[56, 62], [58, 64]], "example": [52, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Donald is foolish. Betty is dangerous. Lisa is comfortable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's hazardous is Betty? Answer: Yes\n Premise: < Michelle is generous. Linda is indecisive. Paul is dirty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's filthy is Linda? Answer: No\n", "ranges": [{"END": [49, 50], "A": [46, 47], "V": [10, 11], "Q": [41, 45], "K": [12, 13], "R": null, "K'": [[7, 16], [9, 17]], "V'": [[5, 14], [6, 15]], "example": [1, 51]}, {"END": [103, 104], "A": [99, 101], "V": [69, 70], "Q": [96, 98], "K": [71, 72], "R": null, "K'": [[59, 65], [61, 68]], "V'": [[56, 62], [58, 64]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is hazardous. Maria is splotless. Steven is timid. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clean is Maria? Answer: Yes\n Premise: < Kevin is reliable. George is weak. Paul is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is Paul? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [12, 13], "Q": [46, 47], "K": [14, 17], "R": null, "K'": [[7, 20], [11, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 53]}, {"END": [99, 100], "A": [96, 97], "V": [66, 67], "Q": [94, 95], "K": [68, 70], "R": null, "K'": [[60, 64], [61, 65]], "V'": [[58, 62], [59, 63]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is hazardous. Maria is splotless. Steven is timid. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clean is Maria? Answer: Yes\n Premise: < Kevin is reliable. George is weak. Paul is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is George? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [12, 13], "Q": [46, 47], "K": [14, 17], "R": null, "K'": [[7, 20], [11, 22]], "V'": [[5, 18], [6, 19]], "example": [1, 53]}, {"END": [99, 100], "A": [96, 97], "V": [66, 67], "Q": [94, 95], "K": [68, 70], "R": null, "K'": [[60, 64], [61, 65]], "V'": [[58, 62], [59, 63]], "example": [54, 101]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Unhappy Kimberly. Inactive Sharon. Innovative Kenneth. >. So who is creative? Kenneth\n < Kind Sandra. Dangerous Kevin. Brave Elizabeth. >. So who is daring? Elizabeth\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [17, 18], "Q": [24, 26], "K": [14, 17], "R": null, "K'": [[2, 9], [5, 11]], "V'": [[5, 11], [8, 13]], "example": [1, 28]}, {"END": [50, 51], "A": [51, 52], "V": [41, 42], "Q": [48, 50], "K": [39, 41], "R": null, "K'": [[30, 34], [31, 37]], "V'": [[31, 37], [33, 38]], "example": [29, 52]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Beautiful Richard. Miserly Brian. Fine Sarah. >. So who is attractive? Richard\n < Indolent Susan. Unmotivated Sarah. Bold Paul. >. So who is apathetic? Sarah\n", "ranges": [{"END": [20, 21], "A": [21, 22], "V": [3, 4], "Q": [18, 20], "K": [2, 3], "R": null, "K'": [[5, 10], [8, 11]], "V'": [[8, 11], [9, 12]], "example": [1, 22]}, {"END": [47, 48], "A": [48, 49], "V": [33, 34], "Q": [44, 47], "K": [29, 33], "R": null, "K'": [[24, 35], [27, 37]], "V'": [[27, 37], [28, 38]], "example": [23, 49]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Polite Jeff. Secure Brian. Listless Donald. >. So who is safe? Brian\n < Ambitious Mark. Indecisive Margaret. Considerate Michelle. >. So who is thoughtful? Michelle\n", "ranges": [{"END": [20, 21], "A": [21, 22], "V": [8, 9], "Q": [19, 20], "K": [6, 8], "R": null, "K'": [[2, 10], [4, 12]], "V'": [[4, 12], [5, 13]], "example": [1, 22]}, {"END": [47, 48], "A": [48, 50], "V": [37, 39], "Q": [45, 47], "K": [35, 37], "R": null, "K'": [[24, 29], [27, 33]], "V'": [[27, 33], [28, 34]], "example": [23, 50]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Irresponsible Betty. Intelligent Margaret. Candid Mary. >. So who is clever? Margaret\n < Arrogant Donna. Weak Nancy. Informed Kevin. >. So who is knowledgeable? Kevin\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [10, 11], "Q": [21, 22], "K": [7, 10], "R": null, "K'": [[2, 12], [5, 14]], "V'": [[5, 14], [6, 15]], "example": [1, 24]}, {"END": [47, 48], "A": [48, 49], "V": [38, 39], "Q": [45, 47], "K": [36, 38], "R": null, "K'": [[26, 32], [29, 34]], "V'": [[29, 34], [31, 35]], "example": [25, 49]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Pessimistic Carol. Sociable Donna. Candid Joseph. >. So who is negative? Carol\n < Creative Michelle. Unhealthy Helen. Reliable Joseph. >. So who is innovative? Michelle\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [6, 7], "Q": [22, 23], "K": [2, 6], "R": null, "K'": [[8, 13], [10, 15]], "V'": [[10, 15], [12, 16]], "example": [1, 25]}, {"END": [49, 50], "A": [50, 52], "V": [28, 30], "Q": [47, 49], "K": [27, 28], "R": null, "K'": [[31, 37], [35, 40]], "V'": [[35, 40], [36, 41]], "example": [26, 52]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Diligent David. Considerate Carol. Pretty Maria. >. So who is thoughtful? Carol\n < Filthy Maria. Disloyal Deborah. Adventurous Linda. >. So who is dirty? Maria\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [9, 10], "Q": [20, 22], "K": [7, 9], "R": null, "K'": [[2, 11], [5, 13]], "V'": [[5, 13], [6, 14]], "example": [1, 24]}, {"END": [49, 50], "A": [50, 51], "V": [28, 29], "Q": [48, 49], "K": [26, 28], "R": null, "K'": [[30, 37], [33, 40]], "V'": [[33, 40], [36, 42]], "example": [25, 51]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Irresponsible Michelle. Curious Laura. Lively Mary. >. So who is active? Mary\n < Happy Dorothy. Outgoing Margaret. Candid James. >. So who is honest? James\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [14, 15], "Q": [21, 22], "K": [12, 14], "R": null, "K'": [[2, 8], [5, 10]], "V'": [[5, 10], [7, 11]], "example": [1, 24]}, {"END": [44, 45], "A": [45, 46], "V": [36, 37], "Q": [43, 44], "K": [34, 36], "R": null, "K'": [[26, 30], [27, 32]], "V'": [[27, 32], [29, 33]], "example": [25, 46]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Compassionate Laura. Optimistic Karen. Lethargic Helen. >. So who is kind? Laura\n < Late Helen. Timid Patricia. Comfortable Lisa. >. So who is cozy? Lisa\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [6, 7], "Q": [25, 26], "K": [2, 6], "R": null, "K'": [[8, 14], [11, 18]], "V'": [[11, 18], [13, 19]], "example": [1, 28]}, {"END": [51, 52], "A": [52, 53], "V": [42, 43], "Q": [49, 51], "K": [39, 42], "R": null, "K'": [[30, 33], [31, 35]], "V'": [[31, 35], [32, 38]], "example": [29, 53]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhappy Kimberly. Inactive Sharon. Innovative Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is Kimberly? Answer: No\n Premise: < Considerate Sandra. Dull Kevin. Logical Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is Elizabeth? Answer: Yes\n", "ranges": [{"END": [53, 54], "A": [48, 51], "V": [20, 21], "Q": [45, 47], "K": [17, 20], "R": null, "K'": [[5, 12], [8, 14]], "V'": [[8, 14], [11, 16]], "example": [1, 55]}, {"END": [101, 102], "A": [98, 99], "V": [71, 72], "Q": [96, 97], "K": [69, 71], "R": null, "K'": [[60, 65], [62, 67]], "V'": [[62, 67], [64, 68]], "example": [56, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhappy Kimberly. Inactive Sharon. Innovative Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is Kimberly? Answer: No\n Premise: < Considerate Sandra. Dull Kevin. Logical Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is Kevin? Answer: No\n", "ranges": [{"END": [53, 54], "A": [48, 51], "V": [20, 21], "Q": [45, 47], "K": [17, 20], "R": null, "K'": [[5, 12], [8, 14]], "V'": [[8, 14], [11, 16]], "example": [1, 55]}, {"END": [101, 102], "A": [98, 99], "V": [71, 72], "Q": [96, 97], "K": [69, 71], "R": null, "K'": [[60, 65], [62, 67]], "V'": [[62, 67], [64, 68]], "example": [56, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bold Christopher. Healthy Linda. Hardworking Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is Christopher? Answer: Yes\n Premise: < Humble Deborah. Honest Kevin. Selfish John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is Deborah? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [7, 8], "Q": [41, 43], "K": [5, 7], "R": null, "K'": [[9, 14], [11, 16]], "V'": [[11, 16], [13, 17]], "example": [1, 49]}, {"END": [99, 100], "A": [94, 97], "V": [56, 59], "Q": [91, 93], "K": [54, 56], "R": null, "K'": [[60, 64], [62, 66]], "V'": [[62, 66], [63, 67]], "example": [50, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Bold Christopher. Healthy Linda. Hardworking Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is Christopher? Answer: Yes\n Premise: < Humble Deborah. Honest Kevin. Selfish John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is John? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [7, 8], "Q": [41, 43], "K": [5, 7], "R": null, "K'": [[9, 14], [11, 16]], "V'": [[11, 16], [13, 17]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [56, 59], "Q": [91, 93], "K": [54, 56], "R": null, "K'": [[60, 64], [62, 66]], "V'": [[62, 66], [63, 67]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Inconsiderate Mary. Creative Edward. Active Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who's energetic is Mary? Answer: No\n Premise: < Candid Betty. Failing Steven. Lively Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is Steven? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [15, 16], "Q": [40, 43], "K": [14, 15], "R": null, "K'": [[5, 11], [9, 12]], "V'": [[9, 12], [10, 13]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [60, 61], "Q": [90, 93], "K": [58, 60], "R": null, "K'": [[54, 62], [56, 64]], "V'": [[56, 64], [57, 66]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Inconsiderate Mary. Creative Edward. Active Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who's energetic is Mary? Answer: No\n Premise: < Candid Betty. Failing Steven. Lively Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is Betty? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [15, 16], "Q": [40, 43], "K": [14, 15], "R": null, "K'": [[5, 11], [9, 12]], "V'": [[9, 12], [10, 13]], "example": [1, 49]}, {"END": [97, 98], "A": [94, 95], "V": [60, 61], "Q": [90, 93], "K": [58, 60], "R": null, "K'": [[54, 62], [56, 64]], "V'": [[56, 64], [57, 66]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rational Daniel. Intelligent Sharon. Interesting Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is Sharon? Answer: Yes\n Premise: < Knowledgeable Thomas. Lazy Ruth. Ambitious Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who's indolent is Ruth? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [12, 14], "Q": [42, 43], "K": [9, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[7, 17], [8, 18]], "example": [1, 50]}, {"END": [99, 100], "A": [96, 97], "V": [62, 63], "Q": [92, 95], "K": [60, 62], "R": null, "K'": [[55, 64], [58, 67]], "V'": [[58, 67], [59, 68]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Rational Daniel. Intelligent Sharon. Interesting Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is Sharon? Answer: Yes\n Premise: < Knowledgeable Thomas. Lazy Ruth. Ambitious Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who's indolent is Margaret? Answer: No\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [12, 14], "Q": [42, 43], "K": [9, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[7, 17], [8, 18]], "example": [1, 50]}, {"END": [99, 100], "A": [96, 97], "V": [62, 63], "Q": [92, 95], "K": [60, 62], "R": null, "K'": [[55, 64], [58, 67]], "V'": [[58, 67], [59, 68]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unreliable Laura. Severe Brian. Intolerant Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who's harsh is Laura? Answer: No\n Premise: < Wrong John. Hazardous Ronald. Filthy Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's incorrect is John? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [45, 47], "K": [11, 13], "R": null, "K'": [[5, 15], [9, 19]], "V'": [[9, 19], [10, 21]], "example": [1, 53]}, {"END": [102, 103], "A": [99, 100], "V": [60, 61], "Q": [97, 98], "K": [58, 60], "R": null, "K'": [[62, 68], [65, 70]], "V'": [[65, 70], [67, 73]], "example": [54, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unreliable Laura. Severe Brian. Intolerant Linda. >. Answer with Yes or No. Can it be inferred from the premise that the one who's harsh is Laura? Answer: No\n Premise: < Wrong John. Hazardous Ronald. Filthy Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's incorrect is Ronald? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [45, 47], "K": [11, 13], "R": null, "K'": [[5, 15], [9, 19]], "V'": [[9, 19], [10, 21]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [60, 61], "Q": [97, 98], "K": [58, 60], "R": null, "K'": [[62, 68], [65, 70]], "V'": [[65, 70], [67, 73]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Successful Michael. Apathetic Sandra. Selfless Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is Sandra? Answer: Yes\n Premise: < Arrogant Ronald. Careful Donald. Fraudulent John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's boastful is Ronald? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [12, 14], "Q": [42, 46], "K": [9, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[7, 17], [8, 18]], "example": [1, 53]}, {"END": [105, 106], "A": [101, 103], "V": [61, 63], "Q": [97, 100], "K": [58, 61], "R": null, "K'": [[64, 68], [66, 72]], "V'": [[66, 72], [67, 73]], "example": [54, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Successful Michael. Apathetic Sandra. Selfless Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is Sandra? Answer: Yes\n Premise: < Arrogant Ronald. Careful Donald. Fraudulent John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's boastful is Donald? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [12, 14], "Q": [42, 46], "K": [9, 12], "R": null, "K'": [[5, 15], [7, 17]], "V'": [[7, 17], [8, 18]], "example": [1, 53]}, {"END": [104, 105], "A": [101, 102], "V": [61, 63], "Q": [97, 100], "K": [58, 61], "R": null, "K'": [[64, 68], [66, 72]], "V'": [[66, 72], [67, 73]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Foolish Donald. Dangerous Betty. Comfortable Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who's hazardous is Betty? Answer: Yes\n Premise: < Generous Michelle. Indecisive Linda. Dirty Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's filthy is Paul? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [43, 47], "K": [10, 13], "R": null, "K'": [[5, 15], [8, 18]], "V'": [[8, 18], [9, 19]], "example": [1, 53]}, {"END": [103, 104], "A": [100, 101], "V": [72, 73], "Q": [97, 99], "K": [70, 72], "R": null, "K'": [[58, 63], [60, 67]], "V'": [[60, 67], [62, 69]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Foolish Donald. Dangerous Betty. Comfortable Lisa. >. Answer with Yes or No. Can it be inferred from the premise that the one who's hazardous is Betty? Answer: Yes\n Premise: < Generous Michelle. Indecisive Linda. Dirty Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's filthy is Linda? Answer: No\n", "ranges": [{"END": [51, 52], "A": [48, 49], "V": [13, 14], "Q": [43, 47], "K": [10, 13], "R": null, "K'": [[5, 15], [8, 18]], "V'": [[8, 18], [9, 19]], "example": [1, 53]}, {"END": [104, 105], "A": [100, 102], "V": [72, 73], "Q": [97, 99], "K": [70, 72], "R": null, "K'": [[58, 63], [60, 67]], "V'": [[60, 67], [62, 69]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hazardous Mary. Splotless Maria. Timid Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clean is Maria? Answer: Yes\n Premise: < Reliable Kevin. Weak George. Lively Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is Paul? Answer: Yes\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [13, 14], "Q": [42, 43], "K": [10, 13], "R": null, "K'": [[5, 15], [8, 17]], "V'": [[8, 17], [9, 18]], "example": [1, 49]}, {"END": [95, 96], "A": [92, 93], "V": [65, 66], "Q": [90, 91], "K": [63, 65], "R": null, "K'": [[54, 59], [57, 61]], "V'": [[57, 61], [58, 62]], "example": [50, 97]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Hazardous Mary. Splotless Maria. Timid Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clean is Maria? Answer: Yes\n Premise: < Reliable Kevin. Weak George. Lively Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is George? Answer: No\n", "ranges": [{"END": [47, 48], "A": [44, 45], "V": [13, 14], "Q": [42, 43], "K": [10, 13], "R": null, "K'": [[5, 15], [8, 17]], "V'": [[8, 17], [9, 18]], "example": [1, 49]}, {"END": [95, 96], "A": [92, 93], "V": [65, 66], "Q": [90, 91], "K": [63, 65], "R": null, "K'": [[54, 59], [57, 61]], "V'": [[57, 61], [58, 62]], "example": [50, 97]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Michael is unhealthy. Kenneth is innovative. Sharon is innovative. >. The one who's creative is not Michael\n < Kevin is sad. Paul is wealthy. Susan is wealthy. >. The one who's rich is not Kevin\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [2, 3], "Q": [27, 29], "K'": [4, 8], "R": [30, 31], "K": [[11, 17], [13, 19]], "V": [[9, 14], [10, 16]], "example": [1, 32]}, {"END": [57, 58], "A'": [58, 59], "V'": [34, 35], "Q": [55, 56], "K'": [36, 37], "R": [57, 58], "K": [[40, 45], [42, 47]], "V": [[38, 43], [39, 44]], "example": [33, 59]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donald is humorless. Anthony is strong. Deborah is humorless. >. The one who's serious is not Anthony\n < Christopher is miserly. Linda is correct. Kenneth is correct. >. The one who's right is not Christopher\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [7, 8], "Q": [25, 26], "K'": [9, 10], "R": [27, 28], "K": [[4, 15], [6, 17]], "V": [[2, 11], [3, 14]], "example": [1, 29]}, {"END": [54, 55], "A'": [55, 56], "V'": [31, 32], "Q": [52, 53], "K'": [33, 35], "R": [54, 55], "K": [[39, 43], [40, 44]], "V": [[36, 41], [38, 42]], "example": [30, 56]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Ruth is wrong. Michael is wrong. Ronald is modest. >. The one who's incorrect is not Ronald\n < Jeff is lazy. Brian is lethargic. Donald is lazy. >. The one who's indolent is not Brian\n", "ranges": [{"END": [25, 26], "A'": [26, 28], "V'": [10, 12], "Q": [23, 24], "K'": [13, 15], "R": [25, 26], "K": [[4, 8], [5, 9]], "V": [[2, 6], [3, 7]], "example": [1, 28]}, {"END": [56, 57], "A'": [57, 58], "V'": [34, 35], "Q": [52, 55], "K'": [36, 40], "R": [56, 57], "K": [[32, 43], [33, 44]], "V": [[30, 41], [31, 42]], "example": [29, 58]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Mary is tender. Edward is tender. Robert is unmotivated. >. The one who's gentle is not Robert\n < Ronald is unsuccessful. Karen is wealthy. Dorothy is wealthy. >. The one who's rich is not Ronald\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [10, 11], "Q": [24, 25], "K'": [12, 16], "R": [26, 27], "K": [[4, 8], [5, 9]], "V": [[2, 6], [3, 7]], "example": [1, 28]}, {"END": [58, 59], "A'": [59, 61], "V'": [30, 32], "Q": [56, 57], "K'": [33, 36], "R": [58, 59], "K": [[40, 46], [42, 48]], "V": [[37, 43], [39, 45]], "example": [29, 61]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Carol is low. Michael is uninteresting. Sharon is low. >. The one who's short is not Michael\n < Daniel is interesting. Sharon is compassionate. Anthony is interesting. >. The one who's fascinating is not Sharon\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [6, 7], "Q": [25, 26], "K'": [8, 12], "R": [27, 28], "K": [[4, 16], [5, 17]], "V": [[2, 13], [3, 15]], "example": [1, 29]}, {"END": [58, 59], "A'": [59, 61], "V'": [35, 37], "Q": [54, 57], "K'": [38, 42], "R": [58, 59], "K": [[33, 45], [34, 46]], "V": [[31, 43], [32, 44]], "example": [30, 61]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Linda is filled. Kimberly is sociable. Helen is sociable. >. The one who's outgoing is not Linda\n < Michelle is undependable. Helen is unhealthy. Joseph is unhealthy. >. The one who's sick is not Michelle\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [2, 4], "Q": [26, 28], "K'": [5, 6], "R": [29, 30], "K": [[11, 16], [13, 18]], "V": [[7, 14], [10, 15]], "example": [1, 32]}, {"END": [65, 66], "A'": [66, 68], "V'": [34, 36], "Q": [63, 64], "K'": [37, 41], "R": [65, 66], "K": [[44, 51], [48, 55]], "V": [[42, 49], [43, 50]], "example": [33, 68]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna is considerate. Sharon is uncomfortable. Laura is considerate. >. The one who's thoughtful is not Sharon\n < Karen is unhealthy. Richard is unhealthy. George is incorrect. >. The one who's sick is not George\n", "ranges": [{"END": [31, 32], "A'": [32, 34], "V'": [8, 10], "Q": [28, 30], "K'": [11, 15], "R": [31, 32], "K": [[5, 18], [7, 20]], "V": [[2, 16], [4, 17]], "example": [1, 34]}, {"END": [64, 65], "A'": [65, 66], "V'": [51, 52], "Q": [62, 63], "K'": [53, 54], "R": [64, 65], "K": [[39, 46], [43, 50]], "V": [[36, 44], [38, 45]], "example": [35, 66]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "< Donna is uninterested. Linda is vacant. Steven is vacant. >. The one who's empty is not Donna\n < Ronald is fast. Michael is heartless. Donald is fast. >. The one who's quick is not Michael\n", "ranges": [{"END": [29, 30], "A'": [30, 32], "V'": [2, 4], "Q": [27, 28], "K'": [5, 8], "R": [29, 30], "K": [[12, 17], [14, 19]], "V": [[9, 15], [11, 16]], "example": [1, 32]}, {"END": [57, 58], "A'": [58, 59], "V'": [39, 40], "Q": [55, 56], "K'": [41, 43], "R": [57, 58], "K": [[37, 46], [38, 47]], "V": [[34, 44], [36, 45]], "example": [33, 59]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael is unhealthy. Kenneth is innovative. Sharon is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not Michael? Answer: Yes\n Premise: < Nancy is timid. Paul is sad. Susan is sad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not Nancy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [5, 6], "Q": [46, 48], "K'": [7, 11], "R": [49, 50], "K": [[14, 20], [16, 22]], "V": [[12, 17], [13, 19]], "example": [1, 55]}, {"END": [103, 104], "A'": [100, 101], "V'": [60, 61], "Q": [96, 98], "K'": [62, 64], "R": [99, 100], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [56, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Michael is unhealthy. Kenneth is innovative. Sharon is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not Michael? Answer: Yes\n Premise: < Nancy is timid. Paul is sad. Susan is sad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not Paul? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [50, 51], "V'": [5, 6], "Q": [46, 48], "K'": [7, 11], "R": [49, 50], "K": [[14, 20], [16, 22]], "V": [[12, 17], [13, 19]], "example": [1, 55]}, {"END": [103, 104], "A'": [100, 101], "V'": [60, 61], "Q": [96, 98], "K'": [62, 64], "R": [99, 100], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [56, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard is unreasonable. Brian is beautiful. Sarah is pretty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's attractive is not Richard? Answer: Yes\n Premise: < Susan is indolent. Barbara is bold. Paul is indolent. >. Answer with Yes or No. Can it be inferred from the premise that the one who's lazy is not Barbara? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [5, 6], "Q": [42, 44], "K'": [7, 10], "R": [45, 46], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 51]}, {"END": [101, 102], "A'": [98, 99], "V'": [62, 63], "Q": [95, 96], "K'": [64, 65], "R": [97, 98], "K": [[58, 68], [61, 71]], "V": [[56, 66], [57, 67]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Richard is unreasonable. Brian is beautiful. Sarah is pretty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's attractive is not Richard? Answer: Yes\n Premise: < Susan is indolent. Barbara is bold. Paul is indolent. >. Answer with Yes or No. Can it be inferred from the premise that the one who's lazy is not Paul? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [5, 6], "Q": [42, 44], "K'": [7, 10], "R": [45, 46], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 51]}, {"END": [101, 102], "A'": [98, 99], "V'": [62, 63], "Q": [95, 96], "K'": [64, 65], "R": [97, 98], "K": [[58, 68], [61, 71]], "V": [[56, 66], [57, 67]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven is tall. Brian is innovative. Ruth is tall. >. Answer with Yes or No. Can it be inferred from the premise that the one who's high is not Steven? Answer: No\n Premise: < William is unattractive. Kimberly is unattractive. Barbara is filled. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ugly is not Barbara? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [9, 10], "Q": [41, 42], "K'": [11, 13], "R": [43, 44], "K": [[7, 16], [8, 17]], "V": [[5, 14], [6, 15]], "example": [1, 49]}, {"END": [103, 104], "A'": [100, 101], "V'": [70, 71], "Q": [97, 98], "K'": [72, 73], "R": [99, 100], "K": [[56, 65], [60, 69]], "V": [[54, 61], [55, 64]], "example": [50, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Steven is tall. Brian is innovative. Ruth is tall. >. Answer with Yes or No. Can it be inferred from the premise that the one who's high is not Steven? Answer: No\n Premise: < William is unattractive. Kimberly is unattractive. Barbara is filled. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ugly is not Kimberly? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [9, 10], "Q": [41, 42], "K'": [11, 13], "R": [43, 44], "K": [[7, 16], [8, 17]], "V": [[5, 14], [6, 15]], "example": [1, 49]}, {"END": [105, 106], "A'": [100, 103], "V'": [70, 71], "Q": [97, 98], "K'": [72, 73], "R": [99, 100], "K": [[56, 65], [60, 69]], "V": [[54, 61], [55, 64]], "example": [50, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is irresponsible. Anthony is failing. Joseph is failing. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is not Mary? Answer: Yes\n Premise: < John is boastful. Deborah is boastful. Kenneth is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not Kenneth? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [5, 6], "Q": [42, 45], "K'": [7, 10], "R": [46, 47], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 52]}, {"END": [106, 107], "A'": [103, 104], "V'": [71, 72], "Q": [98, 101], "K'": [73, 74], "R": [102, 103], "K": [[59, 67], [62, 70]], "V": [[57, 63], [58, 66]], "example": [53, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Mary is irresponsible. Anthony is failing. Joseph is failing. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is not Mary? Answer: Yes\n Premise: < John is boastful. Deborah is boastful. Kenneth is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not Deborah? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [47, 48], "V'": [5, 6], "Q": [42, 45], "K'": [7, 10], "R": [46, 47], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 52]}, {"END": [108, 109], "A'": [103, 106], "V'": [71, 72], "Q": [98, 101], "K'": [73, 74], "R": [102, 103], "K": [[59, 67], [62, 70]], "V": [[57, 63], [58, 66]], "example": [53, 110]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura is driven. Kimberly is driven. Ruth is knowledgeable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ambitious is not Kimberly? Answer: No\n Premise: < Jason is beautiful. Nancy is short. Margaret is attractive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's pretty is not Nancy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [15, 16], "Q": [43, 46], "K'": [17, 19], "R": [47, 48], "K": [[7, 13], [8, 14]], "V": [[5, 9], [6, 12]], "example": [1, 55]}, {"END": [102, 103], "A'": [99, 100], "V'": [64, 65], "Q": [96, 97], "K'": [66, 67], "R": [98, 99], "K": [[62, 70], [63, 72]], "V": [[60, 68], [61, 69]], "example": [56, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Laura is driven. Kimberly is driven. Ruth is knowledgeable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ambitious is not Kimberly? Answer: No\n Premise: < Jason is beautiful. Nancy is short. Margaret is attractive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's pretty is not Jason? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [48, 51], "V'": [15, 16], "Q": [43, 46], "K'": [17, 19], "R": [47, 48], "K": [[7, 13], [8, 14]], "V": [[5, 9], [6, 12]], "example": [1, 55]}, {"END": [102, 103], "A'": [99, 100], "V'": [64, 65], "Q": [96, 97], "K'": [66, 67], "R": [98, 99], "K": [[62, 70], [63, 72]], "V": [[60, 68], [61, 69]], "example": [56, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John is prosperous. Susan is hazardous. Helen is prosperous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is not John? Answer: No\n Premise: < Joseph is vacant. Linda is punctual. Steven is punctual. >. Answer with Yes or No. Can it be inferred from the premise that the one who's timely is not Joseph? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [10, 11], "Q": [45, 46], "K'": [12, 16], "R": [47, 48], "K": [[7, 19], [9, 21]], "V": [[5, 17], [6, 18]], "example": [1, 53]}, {"END": [106, 107], "A'": [103, 104], "V'": [58, 59], "Q": [99, 101], "K'": [60, 62], "R": [102, 103], "K": [[66, 72], [69, 75]], "V": [[63, 70], [65, 71]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < John is prosperous. Susan is hazardous. Helen is prosperous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is not John? Answer: No\n Premise: < Joseph is vacant. Linda is punctual. Steven is punctual. >. Answer with Yes or No. Can it be inferred from the premise that the one who's timely is not Steven? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [10, 11], "Q": [45, 46], "K'": [12, 16], "R": [47, 48], "K": [[7, 19], [9, 21]], "V": [[5, 17], [6, 18]], "example": [1, 53]}, {"END": [106, 107], "A'": [103, 104], "V'": [58, 59], "Q": [99, 101], "K'": [60, 62], "R": [102, 103], "K": [[66, 72], [69, 75]], "V": [[63, 70], [65, 71]], "example": [54, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < James is benevolent. Ronald is benevolent. Kevin is happy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's generous is not Kevin? Answer: Yes\n Premise: < Laura is fraudulent. Steven is fraudulent. Betty is kind. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dishonest is not Betty? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [18, 19], "Q": [45, 47], "K'": [20, 21], "R": [48, 49], "K": [[7, 14], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 54]}, {"END": [109, 110], "A'": [106, 107], "V'": [73, 74], "Q": [100, 104], "K'": [75, 76], "R": [105, 106], "K": [[61, 68], [65, 72]], "V": [[59, 66], [60, 67]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < James is benevolent. Ronald is benevolent. Kevin is happy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's generous is not Kevin? Answer: Yes\n Premise: < Laura is fraudulent. Steven is fraudulent. Betty is kind. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dishonest is not Steven? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [18, 19], "Q": [45, 47], "K'": [20, 21], "R": [48, 49], "K": [[7, 14], [10, 17]], "V": [[5, 11], [6, 13]], "example": [1, 54]}, {"END": [109, 110], "A'": [106, 107], "V'": [73, 74], "Q": [100, 104], "K'": [75, 76], "R": [105, 106], "K": [[61, 68], [65, 72]], "V": [[59, 66], [60, 67]], "example": [55, 111]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dorothy is feeble. Margaret is right. Ruth is right. >. Answer with Yes or No. Can it be inferred from the premise that the one who's correct is not Dorothy? Answer: Yes\n Premise: < Lisa is informed. Charles is informed. Sandra is awkward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not Sandra? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [45, 47], "V'": [5, 7], "Q": [42, 43], "K'": [8, 10], "R": [44, 45], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 51]}, {"END": [101, 102], "A'": [97, 99], "V'": [64, 66], "Q": [93, 95], "K'": [67, 69], "R": [96, 97], "K": [[58, 62], [59, 63]], "V": [[56, 60], [57, 61]], "example": [52, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3]", "texts": "Premise: < Dorothy is feeble. Margaret is right. Ruth is right. >. Answer with Yes or No. Can it be inferred from the premise that the one who's correct is not Dorothy? Answer: Yes\n Premise: < Lisa is informed. Charles is informed. Sandra is awkward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not Charles? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [45, 47], "V'": [5, 7], "Q": [42, 43], "K'": [8, 10], "R": [44, 45], "K": [[13, 17], [14, 18]], "V": [[11, 15], [12, 16]], "example": [1, 51]}, {"END": [100, 101], "A'": [97, 98], "V'": [64, 66], "Q": [93, 95], "K'": [67, 69], "R": [96, 97], "K": [[58, 62], [59, 63]], "V": [[56, 60], [57, 61]], "example": [52, 102]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Unhealthy Michael. Innovative Kenneth. Innovative Sharon. >. The one who's creative is not Michael\n < Sad Kevin. Wealthy Paul. Wealthy Susan. >. The one who's rich is not Kevin\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [6, 7], "Q": [26, 28], "K'": [2, 6], "R": [29, 30], "K": [[8, 13], [11, 16]], "V": [[11, 16], [12, 18]], "example": [1, 31]}, {"END": [55, 56], "A'": [56, 57], "V'": [34, 35], "Q": [53, 54], "K'": [33, 34], "R": [55, 56], "K": [[36, 41], [39, 44]], "V": [[39, 44], [40, 45]], "example": [32, 57]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Humorless Donald. Strong Anthony. Humorless Deborah. >. The one who's serious is not Anthony\n < Miserly Christopher. Correct Linda. Correct Kenneth. >. The one who's right is not Christopher\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [9, 10], "Q": [25, 26], "K'": [7, 9], "R": [27, 28], "K": [[2, 11], [5, 14]], "V": [[5, 14], [6, 17]], "example": [1, 29]}, {"END": [52, 53], "A'": [53, 54], "V'": [34, 35], "Q": [50, 51], "K'": [31, 34], "R": [52, 53], "K": [[36, 40], [37, 41]], "V": [[37, 41], [39, 42]], "example": [30, 54]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Wrong Ruth. Wrong Michael. Modest Ronald. >. The one who's incorrect is not Ronald\n < Lazy Jeff. Lethargic Brian. Lazy Donald. >. The one who's indolent is not Brian\n", "ranges": [{"END": [24, 25], "A'": [25, 27], "V'": [12, 14], "Q": [22, 23], "K'": [10, 12], "R": [24, 25], "K": [[2, 6], [4, 8]], "V": [[4, 8], [5, 9]], "example": [1, 27]}, {"END": [54, 55], "A'": [55, 56], "V'": [37, 38], "Q": [50, 53], "K'": [33, 37], "R": [54, 55], "K": [[29, 39], [31, 41]], "V": [[31, 41], [32, 42]], "example": [28, 56]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Tender Mary. Tender Edward. Unmotivated Robert. >. The one who's gentle is not Robert\n < Unsuccessful Ronald. Wealthy Karen. Wealthy Dorothy. >. The one who's rich is not Ronald\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [14, 15], "Q": [23, 24], "K'": [10, 14], "R": [25, 26], "K": [[2, 6], [4, 8]], "V": [[4, 8], [5, 9]], "example": [1, 27]}, {"END": [56, 57], "A'": [57, 59], "V'": [32, 34], "Q": [54, 55], "K'": [29, 32], "R": [56, 57], "K": [[35, 41], [38, 44]], "V": [[38, 44], [40, 46]], "example": [28, 59]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Low Carol. Uninteresting Michael. Low Sharon. >. The one who's short is not Michael\n < Interesting Daniel. Compassionate Sharon. Interesting Anthony. >. The one who's fascinating is not Sharon\n", "ranges": [{"END": [24, 25], "A'": [25, 26], "V'": [9, 10], "Q": [22, 23], "K'": [5, 9], "R": [24, 25], "K": [[2, 11], [3, 12]], "V": [[3, 12], [4, 14]], "example": [1, 26]}, {"END": [54, 55], "A'": [55, 57], "V'": [36, 38], "Q": [50, 53], "K'": [32, 36], "R": [54, 55], "K": [[28, 39], [30, 41]], "V": [[30, 41], [31, 42]], "example": [27, 57]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Filled Linda. Sociable Kimberly. Sociable Helen. >. The one who's outgoing is not Linda\n < Undependable Michelle. Unhealthy Helen. Unhealthy Joseph. >. The one who's sick is not Michelle\n", "ranges": [{"END": [27, 28], "A'": [28, 30], "V'": [4, 6], "Q": [24, 26], "K'": [2, 4], "R": [27, 28], "K": [[7, 13], [9, 15]], "V": [[9, 15], [12, 16]], "example": [1, 30]}, {"END": [60, 61], "A'": [61, 63], "V'": [36, 38], "Q": [58, 59], "K'": [32, 36], "R": [60, 61], "K": [[39, 45], [43, 49]], "V": [[43, 49], [44, 50]], "example": [31, 63]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Considerate Donna. Uncomfortable Sharon. Considerate Laura. >. The one who's thoughtful is not Sharon\n < Unhealthy Karen. Unhealthy Richard. Incorrect George. >. The one who's sick is not George\n", "ranges": [{"END": [28, 29], "A'": [29, 31], "V'": [11, 13], "Q": [25, 27], "K'": [7, 11], "R": [28, 29], "K": [[2, 14], [4, 16]], "V": [[4, 16], [6, 17]], "example": [1, 31]}, {"END": [59, 60], "A'": [60, 61], "V'": [48, 49], "Q": [57, 58], "K'": [46, 48], "R": [59, 60], "K": [[33, 40], [37, 44]], "V": [[37, 44], [39, 45]], "example": [32, 61]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "< Uninterested Donna. Vacant Linda. Vacant Steven. >. The one who's empty is not Donna\n < Fast Ronald. Heartless Michael. Fast Donald. >. The one who's quick is not Michael\n", "ranges": [{"END": [28, 29], "A'": [29, 31], "V'": [5, 7], "Q": [26, 27], "K'": [2, 5], "R": [28, 29], "K": [[8, 14], [11, 17]], "V": [[11, 17], [13, 18]], "example": [1, 31]}, {"END": [53, 54], "A'": [54, 55], "V'": [39, 40], "Q": [51, 52], "K'": [37, 39], "R": [53, 54], "K": [[33, 41], [34, 42]], "V": [[34, 42], [36, 43]], "example": [32, 55]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhealthy Michael. Innovative Kenneth. Innovative Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not Michael? Answer: Yes\n Premise: < Timid Nancy. Sad Paul. Sad Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not Nancy? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [9, 10], "Q": [45, 47], "K'": [5, 9], "R": [48, 49], "K": [[11, 16], [14, 19]], "V": [[14, 19], [15, 21]], "example": [1, 54]}, {"END": [99, 100], "A'": [96, 97], "V'": [61, 62], "Q": [92, 94], "K'": [59, 61], "R": [95, 96], "K": [[63, 66], [64, 67]], "V": [[64, 67], [65, 68]], "example": [55, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhealthy Michael. Innovative Kenneth. Innovative Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not Michael? Answer: Yes\n Premise: < Timid Nancy. Sad Paul. Sad Susan. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not Paul? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [49, 50], "V'": [9, 10], "Q": [45, 47], "K'": [5, 9], "R": [48, 49], "K": [[11, 16], [14, 19]], "V": [[14, 19], [15, 21]], "example": [1, 54]}, {"END": [99, 100], "A'": [96, 97], "V'": [61, 62], "Q": [92, 94], "K'": [59, 61], "R": [95, 96], "K": [[63, 66], [64, 67]], "V": [[64, 67], [65, 68]], "example": [55, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unreasonable Richard. Beautiful Brian. Pretty Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's attractive is not Richard? Answer: Yes\n Premise: < Indolent Susan. Bold Barbara. Indolent Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's lazy is not Barbara? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [8, 9], "Q": [40, 42], "K'": [5, 8], "R": [43, 44], "K": [[10, 13], [11, 15]], "V": [[11, 15], [12, 16]], "example": [1, 49]}, {"END": [97, 98], "A'": [94, 95], "V'": [61, 62], "Q": [91, 92], "K'": [59, 61], "R": [93, 94], "K": [[54, 63], [57, 66]], "V": [[57, 66], [58, 67]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Unreasonable Richard. Beautiful Brian. Pretty Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's attractive is not Richard? Answer: Yes\n Premise: < Indolent Susan. Bold Barbara. Indolent Paul. >. Answer with Yes or No. Can it be inferred from the premise that the one who's lazy is not Paul? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [8, 9], "Q": [40, 42], "K'": [5, 8], "R": [43, 44], "K": [[10, 13], [11, 15]], "V": [[11, 15], [12, 16]], "example": [1, 49]}, {"END": [97, 98], "A'": [94, 95], "V'": [61, 62], "Q": [91, 92], "K'": [59, 61], "R": [93, 94], "K": [[54, 63], [57, 66]], "V": [[57, 66], [58, 67]], "example": [50, 99]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tall Steven. Innovative Brian. Tall Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's high is not Steven? Answer: No\n Premise: < Unattractive William. Unattractive Kimberly. Filled Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ugly is not Barbara? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [12, 13], "Q": [41, 42], "K'": [9, 12], "R": [43, 44], "K": [[5, 14], [7, 16]], "V": [[7, 16], [8, 17]], "example": [1, 49]}, {"END": [101, 102], "A'": [98, 99], "V'": [70, 71], "Q": [95, 96], "K'": [68, 70], "R": [97, 98], "K": [[54, 60], [58, 64]], "V": [[58, 64], [59, 67]], "example": [50, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Tall Steven. Innovative Brian. Tall Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's high is not Steven? Answer: No\n Premise: < Unattractive William. Unattractive Kimberly. Filled Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ugly is not Kimberly? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [44, 45], "V'": [12, 13], "Q": [41, 42], "K'": [9, 12], "R": [43, 44], "K": [[5, 14], [7, 16]], "V": [[7, 16], [8, 17]], "example": [1, 49]}, {"END": [103, 104], "A'": [98, 101], "V'": [70, 71], "Q": [95, 96], "K'": [68, 70], "R": [97, 98], "K": [[54, 60], [58, 64]], "V": [[58, 64], [59, 67]], "example": [50, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Irresponsible Mary. Failing Anthony. Failing Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is not Mary? Answer: Yes\n Premise: < Boastful John. Boastful Deborah. Smart Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not Kenneth? Answer: Yes\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [8, 9], "Q": [41, 44], "K'": [5, 8], "R": [45, 46], "K": [[10, 14], [12, 16]], "V": [[12, 16], [13, 17]], "example": [1, 51]}, {"END": [103, 104], "A'": [100, 101], "V'": [70, 71], "Q": [95, 98], "K'": [68, 70], "R": [99, 100], "K": [[56, 61], [59, 64]], "V": [[59, 64], [60, 67]], "example": [52, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Irresponsible Mary. Failing Anthony. Failing Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unsuccessful is not Mary? Answer: Yes\n Premise: < Boastful John. Boastful Deborah. Smart Kenneth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not Deborah? Answer: No\n", "ranges": [{"END": [49, 50], "A'": [46, 47], "V'": [8, 9], "Q": [41, 44], "K'": [5, 8], "R": [45, 46], "K": [[10, 14], [12, 16]], "V": [[12, 16], [13, 17]], "example": [1, 51]}, {"END": [105, 106], "A'": [100, 103], "V'": [70, 71], "Q": [95, 98], "K'": [68, 70], "R": [99, 100], "K": [[56, 61], [59, 64]], "V": [[59, 64], [60, 67]], "example": [52, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Driven Laura. Driven Kimberly. Knowledgeable Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ambitious is not Kimberly? Answer: No\n Premise: < Beautiful Jason. Short Nancy. Attractive Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who's pretty is not Nancy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [50, 53], "V'": [20, 21], "Q": [45, 48], "K'": [17, 20], "R": [49, 50], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 16]], "example": [1, 57]}, {"END": [102, 103], "A'": [99, 100], "V'": [66, 67], "Q": [96, 97], "K'": [65, 66], "R": [98, 99], "K": [[62, 68], [63, 71]], "V": [[63, 71], [64, 72]], "example": [58, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Driven Laura. Driven Kimberly. Knowledgeable Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's ambitious is not Kimberly? Answer: No\n Premise: < Beautiful Jason. Short Nancy. Attractive Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the one who's pretty is not Jason? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [50, 53], "V'": [20, 21], "Q": [45, 48], "K'": [17, 20], "R": [49, 50], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 16]], "example": [1, 57]}, {"END": [102, 103], "A'": [99, 100], "V'": [66, 67], "Q": [96, 97], "K'": [65, 66], "R": [98, 99], "K": [[62, 68], [63, 71]], "V": [[63, 71], [64, 72]], "example": [58, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Prosperous John. Hazardous Susan. Prosperous Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is not John? Answer: No\n Premise: < Vacant Joseph. Punctual Linda. Punctual Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who's timely is not Joseph? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [14, 15], "Q": [45, 46], "K'": [11, 14], "R": [47, 48], "K": [[5, 16], [9, 20]], "V": [[9, 20], [10, 21]], "example": [1, 53]}, {"END": [104, 105], "A'": [101, 102], "V'": [61, 62], "Q": [97, 99], "K'": [58, 61], "R": [100, 101], "K": [[63, 69], [66, 72]], "V": [[66, 72], [68, 73]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Prosperous John. Hazardous Susan. Prosperous Helen. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is not John? Answer: No\n Premise: < Vacant Joseph. Punctual Linda. Punctual Steven. >. Answer with Yes or No. Can it be inferred from the premise that the one who's timely is not Steven? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [14, 15], "Q": [45, 46], "K'": [11, 14], "R": [47, 48], "K": [[5, 16], [9, 20]], "V": [[9, 20], [10, 21]], "example": [1, 53]}, {"END": [104, 105], "A'": [101, 102], "V'": [61, 62], "Q": [97, 99], "K'": [58, 61], "R": [100, 101], "K": [[63, 69], [66, 72]], "V": [[66, 72], [68, 73]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Benevolent James. Benevolent Ronald. Happy Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who's generous is not Kevin? Answer: Yes\n Premise: < Fraudulent Laura. Fraudulent Steven. Kind Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dishonest is not Betty? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [19, 20], "Q": [44, 46], "K'": [18, 19], "R": [47, 48], "K": [[5, 11], [9, 15]], "V": [[9, 15], [10, 17]], "example": [1, 53]}, {"END": [105, 106], "A'": [102, 103], "V'": [71, 72], "Q": [96, 100], "K'": [70, 71], "R": [101, 102], "K": [[58, 64], [62, 68]], "V": [[62, 68], [63, 69]], "example": [54, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Benevolent James. Benevolent Ronald. Happy Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who's generous is not Kevin? Answer: Yes\n Premise: < Fraudulent Laura. Fraudulent Steven. Kind Betty. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dishonest is not Steven? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [48, 49], "V'": [19, 20], "Q": [44, 46], "K'": [18, 19], "R": [47, 48], "K": [[5, 11], [9, 15]], "V": [[9, 15], [10, 17]], "example": [1, 53]}, {"END": [105, 106], "A'": [102, 103], "V'": [71, 72], "Q": [96, 100], "K'": [70, 71], "R": [101, 102], "K": [[58, 64], [62, 68]], "V": [[62, 68], [63, 69]], "example": [54, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Feeble Dorothy. Right Margaret. Right Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's correct is not Dorothy? Answer: Yes\n Premise: < Informed Lisa. Informed Charles. Awkward Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not Sandra? Answer: Yes\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [8, 10], "Q": [40, 41], "K'": [5, 8], "R": [42, 43], "K": [[11, 14], [12, 15]], "V": [[12, 15], [13, 16]], "example": [1, 49]}, {"END": [99, 100], "A'": [95, 97], "V'": [65, 67], "Q": [91, 93], "K'": [62, 65], "R": [94, 95], "K": [[54, 58], [56, 60]], "V": [[56, 60], [57, 61]], "example": [50, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.equal][cxt_len=3,rev_item2str]", "texts": "Premise: < Feeble Dorothy. Right Margaret. Right Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's correct is not Dorothy? Answer: Yes\n Premise: < Informed Lisa. Informed Charles. Awkward Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not Charles? Answer: No\n", "ranges": [{"END": [47, 48], "A'": [43, 45], "V'": [8, 10], "Q": [40, 41], "K'": [5, 8], "R": [42, 43], "K": [[11, 14], [12, 15]], "V": [[12, 15], [13, 16]], "example": [1, 49]}, {"END": [98, 99], "A'": [95, 96], "V'": [65, 67], "Q": [91, 93], "K'": [62, 65], "R": [94, 95], "K": [[54, 58], [56, 60]], "V": [[56, 60], [57, 61]], "example": [50, 100]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include inquiring, altruistic, fascinating, negative, sluggish and logical.\n< Sharon is pessimistic. Donna is curious. James is interesting. >. So the boy is fascinating\n < Margaret is slow. Nancy is rational. Richard is selfless. >. So the boy is altruistic\n", "ranges": [{"END": [50, 51], "A": [51, 54], "V": [43, 44], "Q": [48, 50], "K": [41, 42], "R": null, "K'": [[28, 36], [30, 38]], "V'": [[31, 39], [35, 40]], "example": [27, 54]}, {"END": [74, 75], "A": [75, 79], "V": [66, 68], "Q": [72, 74], "K": [64, 65], "R": null, "K'": [[56, 60], [57, 61]], "V'": [[58, 62], [59, 63]], "example": [55, 79]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Charles is decisive. Susan is unmotivated. Kimberly is friendly. >. So the boy is resolute\n < Ruth is late. Donald is bold. Richard is trustworthy. >. So the girl is tardy\n", "ranges": [{"END": [48, 49], "A": [49, 51], "V": [27, 29], "Q": [46, 48], "K": [25, 26], "R": null, "K'": [[30, 37], [31, 40]], "V'": [[32, 41], [36, 42]], "example": [24, 51]}, {"END": [72, 73], "A": [73, 75], "V": [55, 56], "Q": [70, 72], "K": [53, 54], "R": null, "K'": [[57, 61], [58, 62]], "V'": [[59, 63], [60, 66]], "example": [52, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< Elizabeth is active. Patricia is creative. Jason is short. >. So the boy is low\n < Robert is unfaithful. Karen is irresponsible. Donna is punctual. >. So the boy is disloyal\n", "ranges": [{"END": [48, 49], "A": [49, 50], "V": [41, 42], "Q": [46, 48], "K": [39, 40], "R": null, "K'": [[28, 32], [29, 35]], "V'": [[30, 36], [31, 38]], "example": [27, 50]}, {"END": [78, 79], "A": [79, 82], "V": [54, 58], "Q": [76, 78], "K": [52, 53], "R": null, "K'": [[59, 66], [61, 68]], "V'": [[62, 69], [65, 72]], "example": [51, 82]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Ronald is beautiful. Nancy is splotless. Joseph is intolerant. >. So the girl is clean\n < Kevin is unmotivated. Jason is witty. Karen is pessimistic. >. So the girl is negative\n", "ranges": [{"END": [49, 50], "A": [50, 51], "V": [33, 36], "Q": [47, 49], "K": [31, 32], "R": null, "K'": [[26, 37], [28, 38]], "V'": [[29, 39], [30, 43]], "example": [25, 51]}, {"END": [79, 80], "A": [80, 81], "V": [69, 73], "Q": [77, 79], "K": [66, 68], "R": null, "K'": [[53, 60], [54, 61]], "V'": [[55, 62], [59, 65]], "example": [52, 81]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Jason is ambitious. Elizabeth is diligent. Joseph is inquiring. >. So the girl is hardworking\n < Laura is adventurous. Charles is unfaithful. Nancy is tentative. >. So the boy is disloyal\n", "ranges": [{"END": [46, 47], "A": [47, 49], "V": [33, 35], "Q": [44, 46], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [24, 49]}, {"END": [74, 75], "A": [75, 78], "V": [59, 63], "Q": [72, 74], "K": [57, 58], "R": null, "K'": [[51, 64], [52, 65]], "V'": [[53, 66], [56, 68]], "example": [50, 78]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include compassionate, unfortunate, unreasonable, knowledgeable, rich and friendly.\n< Karen is informed. Donald is kind. Laura is affable. >. So the boy is compassionate\n < Edward is irrational. Mary is unlucky. Nancy is wealthy. >. So the boy is unreasonable\n", "ranges": [{"END": [47, 48], "A": [48, 52], "V": [35, 36], "Q": [45, 47], "K": [33, 34], "R": null, "K'": [[28, 37], [30, 38]], "V'": [[31, 39], [32, 41]], "example": [27, 52]}, {"END": [76, 77], "A": [77, 80], "V": [56, 59], "Q": [74, 76], "K": [54, 55], "R": null, "K'": [[60, 66], [61, 67]], "V'": [[62, 68], [65, 70]], "example": [53, 80]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Dorothy is indecisive. Sandra is full. George is strong. >. So the boy is powerful\n < Richard is listless. Daniel is cozy. Sandra is interesting. >. So the girl is fascinating\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [39, 40], "Q": [44, 46], "K": [37, 38], "R": null, "K'": [[25, 32], [27, 34]], "V'": [[28, 35], [31, 36]], "example": [24, 48]}, {"END": [70, 71], "A": [71, 74], "V": [63, 64], "Q": [68, 70], "K": [60, 62], "R": null, "K'": [[50, 55], [51, 56]], "V'": [[52, 57], [54, 59]], "example": [49, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unattractive, rude, dirty, careful, unsuccessful and humble.\n< Barbara is ugly. Richard is impolite. Michael is cautious. >. So the girl is unattractive\n < Richard is failing. Michelle is modest. Anthony is filthy. >. So the girl is humble\n", "ranges": [{"END": [48, 49], "A": [49, 53], "V": [29, 30], "Q": [46, 48], "K": [27, 28], "R": null, "K'": [[31, 37], [32, 38]], "V'": [[33, 39], [36, 42]], "example": [26, 53]}, {"END": [75, 76], "A": [76, 78], "V": [62, 64], "Q": [73, 75], "K": [59, 61], "R": null, "K'": [[55, 65], [56, 66]], "V'": [[57, 67], [58, 69]], "example": [54, 78]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, negative, logical, inquiring, sluggish and altruistic.\nPremise: < Sharon is pessimistic. Donna is curious. James is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negative? Answer: No\n Premise: < Kimberly is slow. Margaret is rational. Daniel is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the boy is altruistic? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [47, 48], "Q": [67, 69], "K": [45, 46], "R": null, "K'": [[32, 40], [34, 42]], "V'": [[35, 43], [39, 44]], "example": [27, 75]}, {"END": [122, 123], "A": [116, 120], "V": [92, 94], "Q": [113, 115], "K": [90, 91], "R": null, "K'": [[80, 86], [83, 87]], "V'": [[84, 88], [85, 89]], "example": [76, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, negative, sluggish, altruistic, logical and inquiring.\nPremise: < Sharon is pessimistic. Donna is curious. James is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negative? Answer: No\n Premise: < Kimberly is slow. Margaret is rational. Daniel is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the boy is logical? Answer: No\n", "ranges": [{"END": [73, 74], "A": [70, 71], "V": [47, 48], "Q": [67, 69], "K": [45, 46], "R": null, "K'": [[32, 40], [34, 42]], "V'": [[35, 43], [39, 44]], "example": [27, 75]}, {"END": [119, 120], "A": [116, 117], "V": [92, 94], "Q": [113, 115], "K": [90, 91], "R": null, "K'": [[80, 86], [83, 87]], "V'": [[84, 88], [85, 89]], "example": [76, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Laura is poor. Elizabeth is late. Mark is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that the boy is selfish? Answer: Yes\n Premise: < Kevin is negligent. Donna is hardworking. William is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that the girl is diligent? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [41, 45], "Q": [64, 66], "K": [39, 40], "R": null, "K'": [[31, 35], [32, 36]], "V'": [[33, 37], [34, 38]], "example": [26, 73]}, {"END": [120, 121], "A": [116, 118], "V": [87, 89], "Q": [113, 115], "K": [84, 86], "R": null, "K'": [[78, 90], [79, 91]], "V'": [[80, 92], [83, 94]], "example": [74, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Laura is poor. Elizabeth is late. Mark is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that the boy is selfish? Answer: Yes\n Premise: < Kevin is negligent. Donna is hardworking. William is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that the girl is irresponsible? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [41, 45], "Q": [64, 66], "K": [39, 40], "R": null, "K'": [[31, 35], [32, 36]], "V'": [[33, 37], [34, 38]], "example": [26, 73]}, {"END": [121, 122], "A": [116, 119], "V": [87, 89], "Q": [113, 115], "K": [84, 86], "R": null, "K'": [[78, 90], [79, 91]], "V'": [[80, 92], [83, 94]], "example": [74, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < William is energetic. Barbara is informed. Karen is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that the boy is disloyal? Answer: No\n Premise: < Ronald is unhealthy. Barbara is unattractive. Margaret is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the boy is sick? Answer: Yes\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [31, 34], "Q": [65, 67], "K": [29, 30], "R": null, "K'": [[35, 39], [36, 41]], "V'": [[37, 42], [38, 46]], "example": [24, 75]}, {"END": [126, 127], "A": [123, 124], "V": [83, 87], "Q": [120, 122], "K": [80, 82], "R": null, "K'": [[88, 95], [89, 96]], "V'": [[90, 97], [94, 101]], "example": [76, 128]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < William is energetic. Barbara is informed. Karen is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that the boy is disloyal? Answer: No\n Premise: < Ronald is unhealthy. Barbara is unattractive. Margaret is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the boy is impatient? Answer: No\n", "ranges": [{"END": [73, 74], "A": [68, 71], "V": [31, 34], "Q": [65, 67], "K": [29, 30], "R": null, "K'": [[35, 39], [36, 41]], "V'": [[37, 42], [38, 46]], "example": [24, 75]}, {"END": [128, 129], "A": [123, 126], "V": [83, 87], "Q": [120, 122], "K": [80, 82], "R": null, "K'": [[88, 95], [89, 96]], "V'": [[90, 97], [94, 101]], "example": [76, 130]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Elizabeth is ambitious. William is diligent. Laura is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that the boy is driven? Answer: No\n Premise: < Laura is daring. Daniel is keen. David is honest. >. Answer with Yes or No. Can it be inferred from the premise that the girl is bold? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [59, 61], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [20, 67]}, {"END": [109, 110], "A": [106, 107], "V": [74, 76], "Q": [103, 105], "K": [72, 73], "R": null, "K'": [[77, 81], [78, 82]], "V'": [[79, 83], [80, 84]], "example": [68, 111]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Elizabeth is ambitious. William is diligent. Laura is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that the boy is driven? Answer: No\n Premise: < Laura is daring. Daniel is keen. David is honest. >. Answer with Yes or No. Can it be inferred from the premise that the girl is sharp? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [59, 61], "K": [31, 32], "R": null, "K'": [[25, 36], [26, 37]], "V'": [[27, 38], [30, 40]], "example": [20, 67]}, {"END": [109, 110], "A": [106, 107], "V": [74, 76], "Q": [103, 105], "K": [72, 73], "R": null, "K'": [[77, 81], [78, 82]], "V'": [[79, 83], [80, 84]], "example": [68, 111]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Mary is altruistic. Ruth is impatient. Robert is careful. >. Answer with Yes or No. Can it be inferred from the premise that the boy is cautious? Answer: Yes\n Premise: < Joseph is apathetic. Donna is humble. Nancy is determined. >. Answer with Yes or No. Can it be inferred from the premise that the boy is unmotivated? Answer: Yes\n", "ranges": [{"END": [78, 79], "A": [73, 76], "V": [50, 51], "Q": [70, 72], "K": [48, 49], "R": null, "K'": [[35, 42], [36, 43]], "V'": [[37, 44], [41, 47]], "example": [30, 80]}, {"END": [128, 129], "A": [122, 126], "V": [87, 90], "Q": [119, 121], "K": [85, 86], "R": null, "K'": [[91, 97], [93, 98]], "V'": [[94, 99], [96, 100]], "example": [81, 130]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Mary is altruistic. Ruth is impatient. Robert is careful. >. Answer with Yes or No. Can it be inferred from the premise that the boy is cautious? Answer: Yes\n Premise: < Joseph is apathetic. Donna is humble. Nancy is determined. >. Answer with Yes or No. Can it be inferred from the premise that the boy is modest? Answer: No\n", "ranges": [{"END": [78, 79], "A": [73, 76], "V": [50, 51], "Q": [70, 72], "K": [48, 49], "R": null, "K'": [[35, 42], [36, 43]], "V'": [[37, 44], [41, 47]], "example": [30, 80]}, {"END": [126, 127], "A": [122, 124], "V": [87, 90], "Q": [119, 121], "K": [85, 86], "R": null, "K'": [[91, 97], [93, 98]], "V'": [[94, 99], [96, 100]], "example": [81, 128]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Betty is filled. Richard is strong. Maria is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that the boy is full? Answer: No\n Premise: < Nancy is smart. Christopher is quiet. Deborah is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that the boy is silent? Answer: Yes\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [33, 34], "Q": [60, 62], "K": [31, 32], "R": null, "K'": [[27, 35], [28, 36]], "V'": [[29, 37], [30, 41]], "example": [22, 68]}, {"END": [113, 114], "A": [110, 111], "V": [79, 80], "Q": [107, 109], "K": [77, 78], "R": null, "K'": [[73, 81], [74, 84]], "V'": [[75, 85], [76, 88]], "example": [69, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Betty is filled. Richard is strong. Maria is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that the boy is full? Answer: No\n Premise: < Nancy is smart. Christopher is quiet. Deborah is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negligent? Answer: No\n", "ranges": [{"END": [66, 67], "A": [63, 64], "V": [33, 34], "Q": [60, 62], "K": [31, 32], "R": null, "K'": [[27, 35], [28, 36]], "V'": [[29, 37], [30, 41]], "example": [22, 68]}, {"END": [115, 116], "A": [110, 113], "V": [79, 80], "Q": [107, 109], "K": [77, 78], "R": null, "K'": [[73, 81], [74, 84]], "V'": [[75, 85], [76, 88]], "example": [69, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dependable, hazardous, candid, active, comfortable and blunt.\nPremise: < Margaret is honest. Edward is dull. Barbara is cozy. >. Answer with Yes or No. Can it be inferred from the premise that the boy is candid? Answer: No\n Premise: < Jason is responsible. Lisa is dangerous. Carol is lively. >. Answer with Yes or No. Can it be inferred from the premise that the boy is dependable? Answer: Yes\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [35, 37], "Q": [61, 63], "K": [33, 34], "R": null, "K'": [[29, 38], [30, 39]], "V'": [[31, 40], [32, 42]], "example": [24, 69]}, {"END": [112, 113], "A": [108, 110], "V": [76, 77], "Q": [105, 107], "K": [74, 75], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[80, 84], [81, 86]], "example": [70, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include candid, blunt, comfortable, hazardous, active and dependable.\nPremise: < Margaret is honest. Edward is dull. Barbara is cozy. >. Answer with Yes or No. Can it be inferred from the premise that the boy is candid? Answer: No\n Premise: < Jason is responsible. Lisa is dangerous. Carol is lively. >. Answer with Yes or No. Can it be inferred from the premise that the boy is active? Answer: No\n", "ranges": [{"END": [67, 68], "A": [64, 65], "V": [35, 37], "Q": [61, 63], "K": [33, 34], "R": null, "K'": [[29, 38], [30, 39]], "V'": [[31, 40], [32, 42]], "example": [24, 69]}, {"END": [111, 112], "A": [108, 109], "V": [76, 77], "Q": [105, 107], "K": [74, 75], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[80, 84], [81, 86]], "example": [70, 113]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tardy, active, humorous, dull, noisy and interesting.\nPremise: < William is fascinating. Kimberly is late. Joseph is energetic. >. Answer with Yes or No. Can it be inferred from the premise that the girl is tardy? Answer: Yes\n Premise: < Donald is loud. Richard is blunt. Kimberly is funny. >. Answer with Yes or No. Can it be inferred from the premise that the girl is humorous? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [38, 39], "Q": [64, 66], "K": [34, 37], "R": null, "K'": [[28, 40], [29, 41]], "V'": [[30, 42], [33, 45]], "example": [23, 73]}, {"END": [119, 120], "A": [115, 117], "V": [91, 93], "Q": [112, 114], "K": [87, 90], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[80, 84], [81, 86]], "example": [74, 121]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include interesting, humorous, tardy, active, dull and noisy.\nPremise: < William is fascinating. Kimberly is late. Joseph is energetic. >. Answer with Yes or No. Can it be inferred from the premise that the girl is tardy? Answer: Yes\n Premise: < Donald is loud. Richard is blunt. Kimberly is funny. >. Answer with Yes or No. Can it be inferred from the premise that the girl is dull? Answer: No\n", "ranges": [{"END": [71, 72], "A": [67, 69], "V": [38, 39], "Q": [64, 66], "K": [34, 37], "R": null, "K'": [[28, 40], [29, 41]], "V'": [[30, 42], [33, 45]], "example": [23, 73]}, {"END": [119, 120], "A": [115, 117], "V": [91, 93], "Q": [112, 114], "K": [87, 90], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[80, 84], [81, 86]], "example": [74, 121]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include inquiring, altruistic, fascinating, negative, sluggish and logical.\n< Pessimistic Sharon. Curious Donna. Interesting James. >. So the boy is fascinating\n < Slow Margaret. Rational Nancy. Selfless Richard. >. So the boy is altruistic\n", "ranges": [{"END": [49, 50], "A": [50, 53], "V": [40, 42], "Q": [47, 49], "K": [42, 43], "R": null, "K'": [[32, 37], [34, 39]], "V'": [[28, 35], [32, 37]], "example": [27, 53]}, {"END": [72, 73], "A": [73, 77], "V": [63, 65], "Q": [70, 72], "K": [65, 66], "R": null, "K'": [[57, 61], [58, 62]], "V'": [[55, 59], [57, 61]], "example": [54, 77]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Decisive Charles. Unmotivated Susan. Friendly Kimberly. >. So the boy is resolute\n < Late Ruth. Bold Donald. Trustworthy Richard. >. So the girl is tardy\n", "ranges": [{"END": [47, 48], "A": [48, 50], "V": [25, 28], "Q": [45, 47], "K": [28, 29], "R": null, "K'": [[34, 38], [35, 41]], "V'": [[30, 36], [34, 38]], "example": [24, 50]}, {"END": [69, 70], "A": [70, 72], "V": [52, 53], "Q": [67, 69], "K": [53, 54], "R": null, "K'": [[57, 62], [58, 63]], "V'": [[55, 59], [57, 62]], "example": [51, 72]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< Active Elizabeth. Creative Patricia. Short Jason. >. So the boy is low\n < Unfaithful Robert. Irresponsible Karen. Punctual Donna. >. So the boy is disloyal\n", "ranges": [{"END": [44, 45], "A": [45, 46], "V": [36, 37], "Q": [42, 44], "K": [37, 38], "R": null, "K'": [[29, 32], [30, 35]], "V'": [[28, 31], [29, 32]], "example": [27, 46]}, {"END": [71, 72], "A": [72, 75], "V": [48, 52], "Q": [69, 71], "K": [52, 53], "R": null, "K'": [[57, 63], [59, 65]], "V'": [[54, 60], [57, 63]], "example": [47, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Beautiful Ronald. Splotless Nancy. Intolerant Joseph. >. So the girl is clean\n < Unmotivated Kevin. Witty Jason. Pessimistic Karen. >. So the girl is negative\n", "ranges": [{"END": [46, 47], "A": [47, 48], "V": [30, 33], "Q": [44, 46], "K": [33, 34], "R": null, "K'": [[27, 39], [29, 40]], "V'": [[26, 35], [27, 39]], "example": [25, 48]}, {"END": [73, 74], "A": [74, 75], "V": [61, 65], "Q": [71, 73], "K": [65, 67], "R": null, "K'": [[54, 59], [55, 60]], "V'": [[50, 56], [54, 59]], "example": [49, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Ambitious Jason. Diligent Elizabeth. Inquiring Joseph. >. So the girl is hardworking\n < Adventurous Laura. Unfaithful Charles. Tentative Nancy. >. So the boy is disloyal\n", "ranges": [{"END": [45, 46], "A": [46, 48], "V": [30, 33], "Q": [43, 45], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [24, 48]}, {"END": [71, 72], "A": [72, 75], "V": [55, 59], "Q": [69, 71], "K": [59, 60], "R": null, "K'": [[53, 64], [54, 65]], "V'": [[50, 61], [53, 64]], "example": [49, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include compassionate, unfortunate, unreasonable, knowledgeable, rich and friendly.\n< Informed Karen. Kind Donald. Affable Laura. >. So the boy is compassionate\n < Irrational Edward. Unlucky Mary. Wealthy Nancy. >. So the boy is unreasonable\n", "ranges": [{"END": [45, 46], "A": [46, 50], "V": [33, 34], "Q": [43, 45], "K": [34, 35], "R": null, "K'": [[30, 38], [32, 39]], "V'": [[28, 36], [30, 38]], "example": [27, 50]}, {"END": [72, 73], "A": [73, 76], "V": [52, 55], "Q": [70, 72], "K": [55, 56], "R": null, "K'": [[60, 65], [61, 66]], "V'": [[57, 62], [60, 65]], "example": [51, 76]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Indecisive Dorothy. Full Sandra. Strong George. >. So the boy is powerful\n < Listless Richard. Cozy Daniel. Interesting Sandra. >. So the girl is fascinating\n", "ranges": [{"END": [45, 46], "A": [46, 47], "V": [36, 38], "Q": [43, 45], "K": [38, 39], "R": null, "K'": [[29, 33], [31, 35]], "V'": [[25, 32], [29, 33]], "example": [24, 47]}, {"END": [67, 68], "A": [68, 71], "V": [57, 59], "Q": [65, 67], "K": [59, 61], "R": null, "K'": [[51, 55], [52, 56]], "V'": [[49, 53], [51, 55]], "example": [48, 71]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unattractive, rude, dirty, careful, unsuccessful and humble.\n< Ugly Barbara. Impolite Richard. Cautious Michael. >. So the girl is unattractive\n < Failing Richard. Modest Michelle. Filthy Anthony. >. So the girl is humble\n", "ranges": [{"END": [46, 47], "A": [47, 51], "V": [27, 29], "Q": [44, 46], "K": [29, 30], "R": null, "K'": [[34, 39], [35, 40]], "V'": [[31, 36], [34, 39]], "example": [26, 51]}, {"END": [71, 72], "A": [72, 74], "V": [57, 59], "Q": [69, 71], "K": [59, 61], "R": null, "K'": [[55, 64], [56, 65]], "V'": [[53, 62], [55, 64]], "example": [52, 74]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, negative, logical, inquiring, sluggish and altruistic.\nPremise: < Pessimistic Sharon. Curious Donna. Interesting James. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negative? Answer: No\n Premise: < Slow Kimberly. Rational Margaret. Selfless Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy is altruistic? Answer: Yes\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [44, 46], "Q": [66, 68], "K": [46, 47], "R": null, "K'": [[36, 41], [38, 43]], "V'": [[32, 39], [36, 41]], "example": [27, 74]}, {"END": [120, 121], "A": [114, 118], "V": [89, 91], "Q": [111, 113], "K": [91, 92], "R": null, "K'": [[81, 87], [84, 88]], "V'": [[79, 85], [81, 87]], "example": [75, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, negative, sluggish, altruistic, logical and inquiring.\nPremise: < Pessimistic Sharon. Curious Donna. Interesting James. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negative? Answer: No\n Premise: < Slow Kimberly. Rational Margaret. Selfless Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boy is logical? Answer: No\n", "ranges": [{"END": [72, 73], "A": [69, 70], "V": [44, 46], "Q": [66, 68], "K": [46, 47], "R": null, "K'": [[36, 41], [38, 43]], "V'": [[32, 39], [36, 41]], "example": [27, 74]}, {"END": [117, 118], "A": [114, 115], "V": [89, 91], "Q": [111, 113], "K": [91, 92], "R": null, "K'": [[81, 87], [84, 88]], "V'": [[79, 85], [81, 87]], "example": [75, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Poor Laura. Late Elizabeth. Egotistical Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy is selfish? Answer: Yes\n Premise: < Negligent Kevin. Hardworking Donna. Optimistic William. >. Answer with Yes or No. Can it be inferred from the premise that the girl is diligent? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [38, 42], "Q": [62, 64], "K": [42, 43], "R": null, "K'": [[33, 36], [34, 37]], "V'": [[31, 35], [33, 36]], "example": [26, 71]}, {"END": [116, 117], "A": [112, 114], "V": [81, 83], "Q": [109, 111], "K": [83, 85], "R": null, "K'": [[79, 89], [80, 90]], "V'": [[76, 86], [79, 89]], "example": [72, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Poor Laura. Late Elizabeth. Egotistical Mark. >. Answer with Yes or No. Can it be inferred from the premise that the boy is selfish? Answer: Yes\n Premise: < Negligent Kevin. Hardworking Donna. Optimistic William. >. Answer with Yes or No. Can it be inferred from the premise that the girl is irresponsible? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [38, 42], "Q": [62, 64], "K": [42, 43], "R": null, "K'": [[33, 36], [34, 37]], "V'": [[31, 35], [33, 36]], "example": [26, 71]}, {"END": [117, 118], "A": [112, 115], "V": [81, 83], "Q": [109, 111], "K": [83, 85], "R": null, "K'": [[79, 89], [80, 90]], "V'": [[76, 86], [79, 89]], "example": [72, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Energetic William. Informed Barbara. Unfaithful Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boy is disloyal? Answer: No\n Premise: < Unhealthy Ronald. Unattractive Barbara. Intolerant Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the boy is sick? Answer: Yes\n", "ranges": [{"END": [71, 72], "A": [66, 69], "V": [29, 32], "Q": [63, 65], "K": [32, 33], "R": null, "K'": [[36, 42], [37, 44]], "V'": [[34, 38], [36, 42]], "example": [24, 73]}, {"END": [121, 122], "A": [118, 119], "V": [78, 82], "Q": [115, 117], "K": [82, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[85, 91], [89, 95]], "example": [74, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Energetic William. Informed Barbara. Unfaithful Karen. >. Answer with Yes or No. Can it be inferred from the premise that the boy is disloyal? Answer: No\n Premise: < Unhealthy Ronald. Unattractive Barbara. Intolerant Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the boy is impatient? Answer: No\n", "ranges": [{"END": [71, 72], "A": [66, 69], "V": [29, 32], "Q": [63, 65], "K": [32, 33], "R": null, "K'": [[36, 42], [37, 44]], "V'": [[34, 38], [36, 42]], "example": [24, 73]}, {"END": [123, 124], "A": [118, 121], "V": [78, 82], "Q": [115, 117], "K": [82, 84], "R": null, "K'": [[89, 95], [90, 96]], "V'": [[85, 91], [89, 95]], "example": [74, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Ambitious Elizabeth. Diligent William. Inquiring Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy is driven? Answer: No\n Premise: < Daring Laura. Keen Daniel. Honest David. >. Answer with Yes or No. Can it be inferred from the premise that the girl is bold? Answer: Yes\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [30, 33], "Q": [58, 60], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [20, 66]}, {"END": [107, 108], "A": [104, 105], "V": [71, 73], "Q": [101, 103], "K": [73, 74], "R": null, "K'": [[77, 81], [78, 82]], "V'": [[75, 79], [77, 81]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Ambitious Elizabeth. Diligent William. Inquiring Laura. >. Answer with Yes or No. Can it be inferred from the premise that the boy is driven? Answer: No\n Premise: < Daring Laura. Keen Daniel. Honest David. >. Answer with Yes or No. Can it be inferred from the premise that the girl is sharp? Answer: No\n", "ranges": [{"END": [64, 65], "A": [61, 62], "V": [30, 33], "Q": [58, 60], "K": [33, 34], "R": null, "K'": [[28, 38], [29, 39]], "V'": [[25, 35], [28, 38]], "example": [20, 66]}, {"END": [107, 108], "A": [104, 105], "V": [71, 73], "Q": [101, 103], "K": [73, 74], "R": null, "K'": [[77, 81], [78, 82]], "V'": [[75, 79], [77, 81]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Altruistic Mary. Impatient Ruth. Careful Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy is cautious? Answer: Yes\n Premise: < Apathetic Joseph. Humble Donna. Determined Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy is unmotivated? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [46, 48], "Q": [68, 70], "K": [48, 49], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[35, 41], [39, 44]], "example": [30, 78]}, {"END": [125, 126], "A": [119, 123], "V": [83, 86], "Q": [116, 118], "K": [86, 87], "R": null, "K'": [[90, 96], [92, 97]], "V'": [[88, 93], [90, 96]], "example": [79, 127]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Altruistic Mary. Impatient Ruth. Careful Robert. >. Answer with Yes or No. Can it be inferred from the premise that the boy is cautious? Answer: Yes\n Premise: < Apathetic Joseph. Humble Donna. Determined Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boy is modest? Answer: No\n", "ranges": [{"END": [76, 77], "A": [71, 74], "V": [46, 48], "Q": [68, 70], "K": [48, 49], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[35, 41], [39, 44]], "example": [30, 78]}, {"END": [123, 124], "A": [119, 121], "V": [83, 86], "Q": [116, 118], "K": [86, 87], "R": null, "K'": [[90, 96], [92, 97]], "V'": [[88, 93], [90, 96]], "example": [79, 125]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Filled Betty. Strong Richard. Lethargic Maria. >. Answer with Yes or No. Can it be inferred from the premise that the boy is full? Answer: No\n Premise: < Smart Nancy. Quiet Christopher. Irresponsible Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the boy is silent? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [31, 33], "Q": [59, 61], "K": [33, 34], "R": null, "K'": [[29, 39], [30, 40]], "V'": [[27, 35], [29, 39]], "example": [22, 67]}, {"END": [111, 112], "A": [108, 109], "V": [76, 78], "Q": [105, 107], "K": [78, 79], "R": null, "K'": [[74, 83], [75, 86]], "V'": [[72, 80], [74, 83]], "example": [68, 113]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Filled Betty. Strong Richard. Lethargic Maria. >. Answer with Yes or No. Can it be inferred from the premise that the boy is full? Answer: No\n Premise: < Smart Nancy. Quiet Christopher. Irresponsible Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the boy is negligent? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [31, 33], "Q": [59, 61], "K": [33, 34], "R": null, "K'": [[29, 39], [30, 40]], "V'": [[27, 35], [29, 39]], "example": [22, 67]}, {"END": [113, 114], "A": [108, 111], "V": [76, 78], "Q": [105, 107], "K": [78, 79], "R": null, "K'": [[74, 83], [75, 86]], "V'": [[72, 80], [74, 83]], "example": [68, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dependable, hazardous, candid, active, comfortable and blunt.\nPremise: < Honest Margaret. Dull Edward. Cozy Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy is candid? Answer: No\n Premise: < Responsible Jason. Dangerous Lisa. Lively Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy is dependable? Answer: Yes\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [59, 61], "K": [35, 36], "R": null, "K'": [[31, 39], [32, 40]], "V'": [[29, 37], [31, 39]], "example": [24, 67]}, {"END": [112, 113], "A": [108, 110], "V": [72, 76], "Q": [105, 107], "K": [76, 77], "R": null, "K'": [[81, 85], [82, 86]], "V'": [[78, 83], [81, 85]], "example": [68, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include candid, blunt, comfortable, hazardous, active and dependable.\nPremise: < Honest Margaret. Dull Edward. Cozy Barbara. >. Answer with Yes or No. Can it be inferred from the premise that the boy is candid? Answer: No\n Premise: < Responsible Jason. Dangerous Lisa. Lively Carol. >. Answer with Yes or No. Can it be inferred from the premise that the boy is active? Answer: No\n", "ranges": [{"END": [65, 66], "A": [62, 63], "V": [33, 35], "Q": [59, 61], "K": [35, 36], "R": null, "K'": [[31, 39], [32, 40]], "V'": [[29, 37], [31, 39]], "example": [24, 67]}, {"END": [111, 112], "A": [108, 109], "V": [72, 76], "Q": [105, 107], "K": [76, 77], "R": null, "K'": [[81, 85], [82, 86]], "V'": [[78, 83], [81, 85]], "example": [68, 113]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tardy, active, humorous, dull, noisy and interesting.\nPremise: < Fascinating William. Late Kimberly. Energetic Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the girl is tardy? Answer: Yes\n Premise: < Loud Donald. Blunt Richard. Funny Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl is humorous? Answer: Yes\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [34, 35], "Q": [62, 64], "K": [35, 38], "R": null, "K'": [[32, 42], [33, 43]], "V'": [[28, 39], [32, 42]], "example": [23, 71]}, {"END": [115, 116], "A": [111, 113], "V": [84, 86], "Q": [108, 110], "K": [86, 89], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[76, 80], [78, 82]], "example": [72, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include interesting, humorous, tardy, active, dull and noisy.\nPremise: < Fascinating William. Late Kimberly. Energetic Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the girl is tardy? Answer: Yes\n Premise: < Loud Donald. Blunt Richard. Funny Kimberly. >. Answer with Yes or No. Can it be inferred from the premise that the girl is dull? Answer: No\n", "ranges": [{"END": [69, 70], "A": [65, 67], "V": [34, 35], "Q": [62, 64], "K": [35, 38], "R": null, "K'": [[32, 42], [33, 43]], "V'": [[28, 39], [32, 42]], "example": [23, 71]}, {"END": [115, 116], "A": [111, 113], "V": [84, 86], "Q": [108, 110], "K": [86, 89], "R": null, "K'": [[78, 82], [79, 83]], "V'": [[76, 80], [78, 82]], "example": [72, 117]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include inquiring, altruistic, fascinating, negative, sluggish and logical.\n< Brian is pessimistic. Kenneth is curious. Mary is interesting. >. The boys is not fascinating\n < Joseph is slow. Daniel is rational. Maria is selfless. >. The boys is not altruistic\n", "ranges": [{"END": [48, 49], "A'": [49, 52], "V'": [41, 42], "Q": [45, 47], "K'": [39, 40], "R": [48, 49], "K": [[28, 35], [29, 36]], "V": [[30, 37], [34, 38]], "example": [27, 52]}, {"END": [72, 73], "A'": [73, 77], "V'": [64, 66], "Q": [69, 71], "K'": [62, 63], "R": [72, 73], "K": [[54, 58], [55, 59]], "V": [[56, 60], [57, 61]], "example": [53, 77]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Susan is decisive. Charles is unmotivated. Jason is friendly. >. The boys is not resolute\n < Edward is late. Helen is bold. Maria is trustworthy. >. The girls is not tardy\n", "ranges": [{"END": [46, 47], "A'": [47, 49], "V'": [27, 29], "Q": [43, 45], "K'": [25, 26], "R": [46, 47], "K": [[30, 37], [31, 38]], "V": [[32, 39], [36, 40]], "example": [24, 49]}, {"END": [70, 71], "A'": [71, 73], "V'": [53, 54], "Q": [67, 69], "K'": [51, 52], "R": [70, 71], "K": [[55, 59], [56, 60]], "V": [[57, 61], [58, 64]], "example": [50, 73]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< William is active. John is creative. Kimberly is short. >. The boys is not low\n < Linda is unfaithful. Paul is irresponsible. Kenneth is punctual. >. The boys is not disloyal\n", "ranges": [{"END": [48, 49], "A'": [49, 50], "V'": [41, 42], "Q": [45, 47], "K'": [37, 40], "R": [48, 49], "K": [[28, 32], [29, 33]], "V": [[30, 34], [31, 36]], "example": [27, 50]}, {"END": [77, 78], "A'": [78, 81], "V'": [55, 59], "Q": [74, 76], "K'": [52, 54], "R": [77, 78], "K": [[60, 66], [61, 67]], "V": [[62, 68], [65, 71]], "example": [51, 81]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Michelle is beautiful. Daniel is splotless. Margaret is intolerant. >. The girls is not clean\n < Sarah is unmotivated. Kimberly is witty. Paul is pessimistic. >. The girls is not negative\n", "ranges": [{"END": [49, 50], "A'": [50, 51], "V'": [33, 36], "Q": [46, 48], "K'": [31, 32], "R": [49, 50], "K": [[26, 37], [28, 38]], "V": [[29, 39], [30, 43]], "example": [25, 51]}, {"END": [80, 81], "A'": [81, 82], "V'": [70, 74], "Q": [77, 79], "K'": [68, 69], "R": [80, 81], "K": [[53, 60], [54, 63]], "V": [[55, 64], [59, 67]], "example": [52, 82]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Kimberly is ambitious. William is diligent. Margaret is inquiring. >. The girls is not hardworking\n < Anthony is adventurous. Susan is unfaithful. Daniel is tentative. >. The boys is not disloyal\n", "ranges": [{"END": [48, 49], "A'": [49, 51], "V'": [35, 37], "Q": [45, 47], "K'": [33, 34], "R": [48, 49], "K": [[25, 38], [28, 39]], "V": [[29, 40], [32, 42]], "example": [24, 51]}, {"END": [76, 77], "A'": [77, 80], "V'": [61, 65], "Q": [73, 75], "K'": [59, 60], "R": [76, 77], "K": [[53, 66], [54, 67]], "V": [[55, 68], [58, 70]], "example": [52, 80]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include compassionate, unfortunate, unreasonable, knowledgeable, rich and friendly.\n< Paul is informed. Helen is kind. Anthony is affable. >. The boys is not compassionate\n < Ruth is irrational. James is unlucky. Daniel is wealthy. >. The boys is not unreasonable\n", "ranges": [{"END": [46, 47], "A'": [47, 51], "V'": [34, 35], "Q": [43, 45], "K'": [32, 33], "R": [46, 47], "K": [[28, 36], [29, 37]], "V": [[30, 38], [31, 40]], "example": [27, 51]}, {"END": [75, 76], "A'": [76, 79], "V'": [55, 58], "Q": [72, 74], "K'": [53, 54], "R": [75, 76], "K": [[59, 65], [60, 66]], "V": [[61, 67], [64, 69]], "example": [52, 79]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Thomas is indecisive. George is full. Sandra is strong. >. The boys is not powerful\n < Maria is listless. Nancy is cozy. George is interesting. >. The girls is not fascinating\n", "ranges": [{"END": [45, 46], "A'": [46, 47], "V'": [38, 39], "Q": [42, 44], "K'": [35, 37], "R": [45, 46], "K": [[25, 31], [26, 32]], "V": [[27, 33], [30, 34]], "example": [24, 47]}, {"END": [68, 69], "A'": [69, 72], "V'": [61, 62], "Q": [65, 67], "K'": [59, 60], "R": [68, 69], "K": [[49, 54], [50, 55]], "V": [[51, 56], [53, 58]], "example": [48, 72]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unattractive, rude, dirty, careful, unsuccessful and humble.\n< Michael is ugly. Maria is impolite. Barbara is cautious. >. The girls is not unattractive\n < Maria is failing. Ronald is modest. Laura is filthy. >. The girls is not humble\n", "ranges": [{"END": [48, 49], "A'": [49, 53], "V'": [29, 30], "Q": [45, 47], "K'": [27, 28], "R": [48, 49], "K": [[31, 37], [32, 38]], "V": [[33, 39], [36, 42]], "example": [26, 53]}, {"END": [75, 76], "A'": [76, 78], "V'": [62, 64], "Q": [72, 74], "K'": [59, 61], "R": [75, 76], "K": [[55, 65], [56, 66]], "V": [[57, 67], [58, 69]], "example": [54, 78]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, negative, logical, inquiring, sluggish and altruistic.\nPremise: < Brian is pessimistic. Kenneth is curious. Mary is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negative? Answer: No\n Premise: < Jason is slow. Joseph is rational. Nancy is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not altruistic? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [45, 46], "Q": [65, 67], "K'": [43, 44], "R": [68, 69], "K": [[32, 39], [33, 40]], "V": [[34, 41], [38, 42]], "example": [27, 74]}, {"END": [120, 121], "A'": [114, 118], "V'": [89, 91], "Q": [110, 112], "K'": [87, 88], "R": [113, 114], "K": [[79, 83], [80, 84]], "V": [[81, 85], [82, 86]], "example": [75, 122]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include fascinating, negative, sluggish, altruistic, logical and inquiring.\nPremise: < Brian is pessimistic. Kenneth is curious. Mary is interesting. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negative? Answer: No\n Premise: < Jason is slow. Joseph is rational. Nancy is selfless. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not logical? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [69, 70], "V'": [45, 46], "Q": [65, 67], "K'": [43, 44], "R": [68, 69], "K": [[32, 39], [33, 40]], "V": [[34, 41], [38, 42]], "example": [27, 74]}, {"END": [117, 118], "A'": [114, 115], "V'": [89, 91], "Q": [110, 112], "K'": [87, 88], "R": [113, 114], "K": [[79, 83], [80, 84]], "V": [[81, 85], [82, 86]], "example": [75, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Anthony is poor. William is late. Betty is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not selfish? Answer: Yes\n Premise: < Sarah is negligent. Kenneth is hardworking. Elizabeth is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not diligent? Answer: Yes\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [41, 45], "Q": [64, 66], "K'": [39, 40], "R": [67, 68], "K": [[31, 35], [32, 36]], "V": [[33, 37], [34, 38]], "example": [26, 74]}, {"END": [121, 122], "A'": [117, 119], "V'": [87, 89], "Q": [113, 115], "K'": [85, 86], "R": [116, 117], "K": [[79, 90], [80, 91]], "V": [[81, 92], [84, 94]], "example": [75, 123]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Anthony is poor. William is late. Betty is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not selfish? Answer: Yes\n Premise: < Sarah is negligent. Kenneth is hardworking. Elizabeth is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not irresponsible? Answer: No\n", "ranges": [{"END": [72, 73], "A'": [68, 70], "V'": [41, 45], "Q": [64, 66], "K'": [39, 40], "R": [67, 68], "K": [[31, 35], [32, 36]], "V": [[33, 37], [34, 38]], "example": [26, 74]}, {"END": [122, 123], "A'": [117, 120], "V'": [87, 89], "Q": [113, 115], "K'": [85, 86], "R": [116, 117], "K": [[79, 90], [80, 91]], "V": [[81, 92], [84, 94]], "example": [75, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Elizabeth is energetic. Michael is informed. Paul is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not disloyal? Answer: No\n Premise: < Michelle is unhealthy. Michael is unattractive. Joseph is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not sick? Answer: Yes\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [31, 34], "Q": [64, 66], "K'": [29, 30], "R": [67, 68], "K": [[35, 39], [36, 40]], "V": [[37, 41], [38, 45]], "example": [24, 75]}, {"END": [127, 128], "A'": [124, 125], "V'": [83, 87], "Q": [120, 122], "K'": [80, 82], "R": [123, 124], "K": [[88, 95], [89, 96]], "V": [[90, 97], [94, 101]], "example": [76, 129]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Elizabeth is energetic. Michael is informed. Paul is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not disloyal? Answer: No\n Premise: < Michelle is unhealthy. Michael is unattractive. Joseph is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not impatient? Answer: No\n", "ranges": [{"END": [73, 74], "A'": [68, 71], "V'": [31, 34], "Q": [64, 66], "K'": [29, 30], "R": [67, 68], "K": [[35, 39], [36, 40]], "V": [[37, 41], [38, 45]], "example": [24, 75]}, {"END": [129, 130], "A'": [124, 127], "V'": [83, 87], "Q": [120, 122], "K'": [80, 82], "R": [123, 124], "K": [[88, 95], [89, 96]], "V": [[90, 97], [94, 101]], "example": [76, 131]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < William is ambitious. Elizabeth is diligent. Anthony is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not driven? Answer: No\n Premise: < Anthony is daring. Nancy is keen. Jennifer is honest. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not bold? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [33, 35], "Q": [59, 61], "K'": [31, 32], "R": [62, 63], "K": [[25, 36], [26, 37]], "V": [[27, 38], [30, 40]], "example": [20, 68]}, {"END": [112, 113], "A'": [109, 110], "V'": [75, 77], "Q": [105, 107], "K'": [73, 74], "R": [108, 109], "K": [[78, 82], [79, 84]], "V": [[80, 85], [81, 86]], "example": [69, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < William is ambitious. Elizabeth is diligent. Anthony is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not driven? Answer: No\n Premise: < Anthony is daring. Nancy is keen. Jennifer is honest. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not sharp? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [33, 35], "Q": [59, 61], "K'": [31, 32], "R": [62, 63], "K": [[25, 36], [26, 37]], "V": [[27, 38], [30, 40]], "example": [20, 68]}, {"END": [112, 113], "A'": [109, 110], "V'": [75, 77], "Q": [105, 107], "K'": [73, 74], "R": [108, 109], "K": [[78, 82], [79, 84]], "V": [[80, 85], [81, 86]], "example": [69, 114]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < James is altruistic. Edward is impatient. Linda is careful. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not cautious? Answer: Yes\n Premise: < Margaret is apathetic. Kenneth is humble. Daniel is determined. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not unmotivated? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [75, 78], "V'": [51, 52], "Q": [71, 73], "K'": [48, 50], "R": [74, 75], "K": [[35, 42], [36, 43]], "V": [[37, 44], [41, 47]], "example": [30, 82]}, {"END": [130, 131], "A'": [124, 128], "V'": [89, 92], "Q": [120, 122], "K'": [87, 88], "R": [123, 124], "K": [[93, 98], [94, 99]], "V": [[95, 100], [97, 101]], "example": [83, 132]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < James is altruistic. Edward is impatient. Linda is careful. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not cautious? Answer: Yes\n Premise: < Margaret is apathetic. Kenneth is humble. Daniel is determined. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not modest? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [75, 78], "V'": [51, 52], "Q": [71, 73], "K'": [48, 50], "R": [74, 75], "K": [[35, 42], [36, 43]], "V": [[37, 44], [41, 47]], "example": [30, 82]}, {"END": [128, 129], "A'": [124, 126], "V'": [89, 92], "Q": [120, 122], "K'": [87, 88], "R": [123, 124], "K": [[93, 98], [94, 99]], "V": [[95, 100], [97, 101]], "example": [83, 130]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Mark is filled. Maria is strong. Richard is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not full? Answer: No\n Premise: < Daniel is smart. Lisa is quiet. Jeff is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not silent? Answer: Yes\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [33, 34], "Q": [60, 62], "K'": [31, 32], "R": [63, 64], "K": [[27, 35], [28, 36]], "V": [[29, 37], [30, 41]], "example": [22, 69]}, {"END": [113, 114], "A'": [110, 111], "V'": [80, 81], "Q": [106, 108], "K'": [78, 79], "R": [109, 110], "K": [[74, 82], [75, 83]], "V": [[76, 84], [77, 87]], "example": [70, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Mark is filled. Maria is strong. Richard is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not full? Answer: No\n Premise: < Daniel is smart. Lisa is quiet. Jeff is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negligent? Answer: No\n", "ranges": [{"END": [67, 68], "A'": [64, 65], "V'": [33, 34], "Q": [60, 62], "K'": [31, 32], "R": [63, 64], "K": [[27, 35], [28, 36]], "V": [[29, 37], [30, 41]], "example": [22, 69]}, {"END": [115, 116], "A'": [110, 113], "V'": [80, 81], "Q": [106, 108], "K'": [78, 79], "R": [109, 110], "K": [[74, 82], [75, 83]], "V": [[76, 84], [77, 87]], "example": [70, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dependable, hazardous, candid, active, comfortable and blunt.\nPremise: < Joseph is honest. Ruth is dull. Michael is cozy. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not candid? Answer: No\n Premise: < Kimberly is responsible. Christopher is dangerous. Steven is lively. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not dependable? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [35, 37], "Q": [61, 63], "K'": [33, 34], "R": [64, 65], "K": [[29, 38], [30, 39]], "V": [[31, 40], [32, 42]], "example": [24, 70]}, {"END": [116, 117], "A'": [112, 114], "V'": [79, 80], "Q": [108, 110], "K'": [75, 78], "R": [111, 112], "K": [[81, 85], [82, 86]], "V": [[83, 87], [84, 89]], "example": [71, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include candid, blunt, comfortable, hazardous, active and dependable.\nPremise: < Joseph is honest. Ruth is dull. Michael is cozy. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not candid? Answer: No\n Premise: < Kimberly is responsible. Christopher is dangerous. Steven is lively. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not active? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [65, 66], "V'": [35, 37], "Q": [61, 63], "K'": [33, 34], "R": [64, 65], "K": [[29, 38], [30, 39]], "V": [[31, 40], [32, 42]], "example": [24, 70]}, {"END": [115, 116], "A'": [112, 113], "V'": [79, 80], "Q": [108, 110], "K'": [75, 78], "R": [111, 112], "K": [[81, 85], [82, 86]], "V": [[83, 87], [84, 89]], "example": [71, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tardy, active, humorous, dull, noisy and interesting.\nPremise: < Elizabeth is fascinating. Jason is late. Margaret is energetic. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not tardy? Answer: Yes\n Premise: < Helen is loud. Maria is blunt. Jason is funny. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not humorous? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [36, 37], "Q": [62, 64], "K'": [34, 35], "R": [65, 66], "K": [[28, 38], [29, 39]], "V": [[30, 40], [33, 43]], "example": [23, 72]}, {"END": [117, 118], "A'": [113, 115], "V'": [88, 90], "Q": [109, 111], "K'": [86, 87], "R": [112, 113], "K": [[77, 81], [78, 82]], "V": [[79, 83], [80, 85]], "example": [73, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include interesting, humorous, tardy, active, dull and noisy.\nPremise: < Elizabeth is fascinating. Jason is late. Margaret is energetic. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not tardy? Answer: Yes\n Premise: < Helen is loud. Maria is blunt. Jason is funny. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not dull? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [36, 37], "Q": [62, 64], "K'": [34, 35], "R": [65, 66], "K": [[28, 38], [29, 39]], "V": [[30, 40], [33, 43]], "example": [23, 72]}, {"END": [117, 118], "A'": [113, 115], "V'": [88, 90], "Q": [109, 111], "K'": [86, 87], "R": [112, 113], "K": [[77, 81], [78, 82]], "V": [[79, 83], [80, 85]], "example": [73, 119]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include inquiring, altruistic, fascinating, negative, sluggish and logical.\n< Pessimistic Brian. Curious Kenneth. Interesting Mary. >. The boys is not fascinating\n < Slow Joseph. Rational Daniel. Selfless Maria. >. The boys is not altruistic\n", "ranges": [{"END": [47, 48], "A'": [48, 51], "V'": [38, 40], "Q": [44, 46], "K'": [40, 41], "R": [47, 48], "K": [[32, 36], [33, 37]], "V": [[28, 34], [32, 36]], "example": [27, 51]}, {"END": [70, 71], "A'": [71, 75], "V'": [61, 63], "Q": [67, 69], "K'": [63, 64], "R": [70, 71], "K": [[55, 59], [56, 60]], "V": [[53, 57], [55, 59]], "example": [52, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Decisive Susan. Unmotivated Charles. Friendly Jason. >. The boys is not resolute\n < Late Edward. Bold Helen. Trustworthy Maria. >. The girls is not tardy\n", "ranges": [{"END": [45, 46], "A'": [46, 48], "V'": [25, 28], "Q": [42, 44], "K'": [28, 29], "R": [45, 46], "K": [[34, 38], [35, 39]], "V": [[30, 36], [34, 38]], "example": [24, 48]}, {"END": [67, 68], "A'": [68, 70], "V'": [50, 51], "Q": [64, 66], "K'": [51, 52], "R": [67, 68], "K": [[55, 60], [56, 61]], "V": [[53, 57], [55, 60]], "example": [49, 70]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< Active William. Creative John. Short Kimberly. >. The boys is not low\n < Unfaithful Linda. Irresponsible Paul. Punctual Kenneth. >. The boys is not disloyal\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [34, 35], "Q": [41, 43], "K'": [35, 38], "R": [44, 45], "K": [[29, 32], [30, 33]], "V": [[28, 31], [29, 32]], "example": [27, 46]}, {"END": [70, 71], "A'": [71, 74], "V'": [48, 52], "Q": [67, 69], "K'": [52, 54], "R": [70, 71], "K": [[58, 63], [59, 64]], "V": [[55, 60], [58, 63]], "example": [47, 74]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Beautiful Michelle. Splotless Daniel. Intolerant Margaret. >. The girls is not clean\n < Unmotivated Sarah. Witty Kimberly. Pessimistic Paul. >. The girls is not negative\n", "ranges": [{"END": [46, 47], "A'": [47, 48], "V'": [30, 33], "Q": [43, 45], "K'": [33, 34], "R": [46, 47], "K": [[27, 39], [29, 40]], "V": [[26, 35], [27, 39]], "example": [25, 48]}, {"END": [74, 75], "A'": [75, 76], "V'": [63, 67], "Q": [71, 73], "K'": [67, 68], "R": [74, 75], "K": [[54, 59], [55, 62]], "V": [[50, 56], [54, 59]], "example": [49, 76]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Ambitious Kimberly. Diligent William. Inquiring Margaret. >. The girls is not hardworking\n < Adventurous Anthony. Unfaithful Susan. Tentative Daniel. >. The boys is not disloyal\n", "ranges": [{"END": [47, 48], "A'": [48, 50], "V'": [32, 35], "Q": [44, 46], "K'": [35, 36], "R": [47, 48], "K": [[28, 40], [31, 41]], "V": [[25, 37], [28, 40]], "example": [24, 50]}, {"END": [73, 74], "A'": [74, 77], "V'": [57, 61], "Q": [70, 72], "K'": [61, 62], "R": [73, 74], "K": [[55, 66], [56, 67]], "V": [[52, 63], [55, 66]], "example": [51, 77]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include compassionate, unfortunate, unreasonable, knowledgeable, rich and friendly.\n< Informed Paul. Kind Helen. Affable Anthony. >. The boys is not compassionate\n < Irrational Ruth. Unlucky James. Wealthy Daniel. >. The boys is not unreasonable\n", "ranges": [{"END": [44, 45], "A'": [45, 49], "V'": [32, 33], "Q": [41, 43], "K'": [33, 34], "R": [44, 45], "K": [[30, 37], [31, 38]], "V": [[28, 35], [30, 37]], "example": [27, 49]}, {"END": [71, 72], "A'": [72, 75], "V'": [51, 54], "Q": [68, 70], "K'": [54, 55], "R": [71, 72], "K": [[59, 64], [60, 65]], "V": [[56, 61], [59, 64]], "example": [50, 75]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Indecisive Thomas. Full George. Strong Sandra. >. The boys is not powerful\n < Listless Maria. Cozy Nancy. Interesting George. >. The girls is not fascinating\n", "ranges": [{"END": [44, 45], "A'": [45, 46], "V'": [34, 36], "Q": [41, 43], "K'": [36, 38], "R": [44, 45], "K": [[29, 32], [30, 33]], "V": [[25, 31], [29, 32]], "example": [24, 46]}, {"END": [65, 66], "A'": [66, 69], "V'": [56, 58], "Q": [62, 64], "K'": [58, 59], "R": [65, 66], "K": [[50, 54], [51, 55]], "V": [[48, 52], [50, 54]], "example": [47, 69]}]}
{"task_id": "rlr_gen[genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unattractive, rude, dirty, careful, unsuccessful and humble.\n< Ugly Michael. Impolite Maria. Cautious Barbara. >. The girls is not unattractive\n < Failing Maria. Modest Ronald. Filthy Laura. >. The girls is not humble\n", "ranges": [{"END": [46, 47], "A'": [47, 51], "V'": [27, 29], "Q": [43, 45], "K'": [29, 30], "R": [46, 47], "K": [[34, 39], [35, 40]], "V": [[31, 36], [34, 39]], "example": [26, 51]}, {"END": [71, 72], "A'": [72, 74], "V'": [57, 59], "Q": [68, 70], "K'": [59, 61], "R": [71, 72], "K": [[55, 64], [56, 65]], "V": [[53, 62], [55, 64]], "example": [52, 74]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, negative, logical, inquiring, sluggish and altruistic.\nPremise: < Pessimistic Brian. Curious Kenneth. Interesting Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negative? Answer: No\n Premise: < Slow Jason. Rational Joseph. Selfless Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not altruistic? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [42, 44], "Q": [64, 66], "K'": [44, 45], "R": [67, 68], "K": [[36, 40], [37, 41]], "V": [[32, 38], [36, 40]], "example": [27, 73]}, {"END": [118, 119], "A'": [112, 116], "V'": [86, 88], "Q": [108, 110], "K'": [88, 89], "R": [111, 112], "K": [[80, 84], [81, 85]], "V": [[78, 82], [80, 84]], "example": [74, 120]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include fascinating, negative, sluggish, altruistic, logical and inquiring.\nPremise: < Pessimistic Brian. Curious Kenneth. Interesting Mary. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negative? Answer: No\n Premise: < Slow Jason. Rational Joseph. Selfless Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not logical? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [68, 69], "V'": [42, 44], "Q": [64, 66], "K'": [44, 45], "R": [67, 68], "K": [[36, 40], [37, 41]], "V": [[32, 38], [36, 40]], "example": [27, 73]}, {"END": [115, 116], "A'": [112, 113], "V'": [86, 88], "Q": [108, 110], "K'": [88, 89], "R": [111, 112], "K": [[80, 84], [81, 85]], "V": [[78, 82], [80, 84]], "example": [74, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Poor Anthony. Late William. Egotistical Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not selfish? Answer: Yes\n Premise: < Negligent Sarah. Hardworking Kenneth. Optimistic Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not diligent? Answer: Yes\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [38, 42], "Q": [62, 64], "K'": [42, 43], "R": [65, 66], "K": [[33, 36], [34, 37]], "V": [[31, 35], [33, 36]], "example": [26, 72]}, {"END": [117, 118], "A'": [113, 115], "V'": [82, 84], "Q": [109, 111], "K'": [84, 85], "R": [112, 113], "K": [[80, 89], [81, 90]], "V": [[77, 86], [80, 89]], "example": [73, 119]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Poor Anthony. Late William. Egotistical Betty. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not selfish? Answer: Yes\n Premise: < Negligent Sarah. Hardworking Kenneth. Optimistic Elizabeth. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not irresponsible? Answer: No\n", "ranges": [{"END": [70, 71], "A'": [66, 68], "V'": [38, 42], "Q": [62, 64], "K'": [42, 43], "R": [65, 66], "K": [[33, 36], [34, 37]], "V": [[31, 35], [33, 36]], "example": [26, 72]}, {"END": [118, 119], "A'": [113, 116], "V'": [82, 84], "Q": [109, 111], "K'": [84, 85], "R": [112, 113], "K": [[80, 89], [81, 90]], "V": [[77, 86], [80, 89]], "example": [73, 120]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Energetic Elizabeth. Informed Michael. Unfaithful Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not disloyal? Answer: No\n Premise: < Unhealthy Michelle. Unattractive Michael. Intolerant Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not sick? Answer: Yes\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [29, 32], "Q": [62, 64], "K'": [32, 33], "R": [65, 66], "K": [[36, 42], [37, 43]], "V": [[34, 38], [36, 42]], "example": [24, 73]}, {"END": [122, 123], "A'": [119, 120], "V'": [78, 82], "Q": [115, 117], "K'": [82, 84], "R": [118, 119], "K": [[89, 95], [90, 96]], "V": [[85, 91], [89, 95]], "example": [74, 124]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Energetic Elizabeth. Informed Michael. Unfaithful Paul. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not disloyal? Answer: No\n Premise: < Unhealthy Michelle. Unattractive Michael. Intolerant Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not impatient? Answer: No\n", "ranges": [{"END": [71, 72], "A'": [66, 69], "V'": [29, 32], "Q": [62, 64], "K'": [32, 33], "R": [65, 66], "K": [[36, 42], [37, 43]], "V": [[34, 38], [36, 42]], "example": [24, 73]}, {"END": [124, 125], "A'": [119, 122], "V'": [78, 82], "Q": [115, 117], "K'": [82, 84], "R": [118, 119], "K": [[89, 95], [90, 96]], "V": [[85, 91], [89, 95]], "example": [74, 126]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Ambitious William. Diligent Elizabeth. Inquiring Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not driven? Answer: No\n Premise: < Daring Anthony. Keen Nancy. Honest Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not bold? Answer: Yes\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [30, 33], "Q": [58, 60], "K'": [33, 34], "R": [61, 62], "K": [[28, 38], [29, 39]], "V": [[25, 35], [28, 38]], "example": [20, 67]}, {"END": [110, 111], "A'": [107, 108], "V'": [72, 74], "Q": [103, 105], "K'": [74, 75], "R": [106, 107], "K": [[78, 82], [79, 84]], "V": [[76, 80], [78, 82]], "example": [68, 112]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Ambitious William. Diligent Elizabeth. Inquiring Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not driven? Answer: No\n Premise: < Daring Anthony. Keen Nancy. Honest Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not sharp? Answer: No\n", "ranges": [{"END": [65, 66], "A'": [62, 63], "V'": [30, 33], "Q": [58, 60], "K'": [33, 34], "R": [61, 62], "K": [[28, 38], [29, 39]], "V": [[25, 35], [28, 38]], "example": [20, 67]}, {"END": [110, 111], "A'": [107, 108], "V'": [72, 74], "Q": [103, 105], "K'": [74, 75], "R": [106, 107], "K": [[78, 82], [79, 84]], "V": [[76, 80], [78, 82]], "example": [68, 112]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Altruistic James. Impatient Edward. Careful Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not cautious? Answer: Yes\n Premise: < Apathetic Margaret. Humble Kenneth. Determined Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not unmotivated? Answer: Yes\n", "ranges": [{"END": [78, 79], "A'": [73, 76], "V'": [46, 48], "Q": [69, 71], "K'": [48, 50], "R": [72, 73], "K": [[39, 44], [40, 45]], "V": [[35, 41], [39, 44]], "example": [30, 80]}, {"END": [127, 128], "A'": [121, 125], "V'": [85, 88], "Q": [117, 119], "K'": [88, 89], "R": [120, 121], "K": [[92, 97], [93, 98]], "V": [[90, 94], [92, 97]], "example": [81, 129]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Altruistic James. Impatient Edward. Careful Linda. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not cautious? Answer: Yes\n Premise: < Apathetic Margaret. Humble Kenneth. Determined Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not modest? Answer: No\n", "ranges": [{"END": [78, 79], "A'": [73, 76], "V'": [46, 48], "Q": [69, 71], "K'": [48, 50], "R": [72, 73], "K": [[39, 44], [40, 45]], "V": [[35, 41], [39, 44]], "example": [30, 80]}, {"END": [125, 126], "A'": [121, 123], "V'": [85, 88], "Q": [117, 119], "K'": [88, 89], "R": [120, 121], "K": [[92, 97], [93, 98]], "V": [[90, 94], [92, 97]], "example": [81, 127]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Filled Mark. Strong Maria. Lethargic Richard. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not full? Answer: No\n Premise: < Smart Daniel. Quiet Lisa. Irresponsible Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not silent? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [31, 33], "Q": [59, 61], "K'": [33, 34], "R": [62, 63], "K": [[29, 39], [30, 40]], "V": [[27, 35], [29, 39]], "example": [22, 68]}, {"END": [111, 112], "A'": [108, 109], "V'": [77, 79], "Q": [104, 106], "K'": [79, 80], "R": [107, 108], "K": [[75, 84], [76, 85]], "V": [[73, 81], [75, 84]], "example": [69, 113]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Filled Mark. Strong Maria. Lethargic Richard. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not full? Answer: No\n Premise: < Smart Daniel. Quiet Lisa. Irresponsible Jeff. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not negligent? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [31, 33], "Q": [59, 61], "K'": [33, 34], "R": [62, 63], "K": [[29, 39], [30, 40]], "V": [[27, 35], [29, 39]], "example": [22, 68]}, {"END": [113, 114], "A'": [108, 111], "V'": [77, 79], "Q": [104, 106], "K'": [79, 80], "R": [107, 108], "K": [[75, 84], [76, 85]], "V": [[73, 81], [75, 84]], "example": [69, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dependable, hazardous, candid, active, comfortable and blunt.\nPremise: < Honest Joseph. Dull Ruth. Cozy Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not candid? Answer: No\n Premise: < Responsible Kimberly. Dangerous Christopher. Lively Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not dependable? Answer: Yes\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [33, 35], "Q": [59, 61], "K'": [35, 36], "R": [62, 63], "K": [[31, 39], [32, 40]], "V": [[29, 37], [31, 39]], "example": [24, 68]}, {"END": [116, 117], "A'": [112, 114], "V'": [73, 77], "Q": [108, 110], "K'": [77, 80], "R": [111, 112], "K": [[84, 88], [85, 89]], "V": [[81, 86], [84, 88]], "example": [69, 118]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include candid, blunt, comfortable, hazardous, active and dependable.\nPremise: < Honest Joseph. Dull Ruth. Cozy Michael. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not candid? Answer: No\n Premise: < Responsible Kimberly. Dangerous Christopher. Lively Steven. >. Answer with Yes or No. Can it be inferred from the premise that the boys is not active? Answer: No\n", "ranges": [{"END": [66, 67], "A'": [63, 64], "V'": [33, 35], "Q": [59, 61], "K'": [35, 36], "R": [62, 63], "K": [[31, 39], [32, 40]], "V": [[29, 37], [31, 39]], "example": [24, 68]}, {"END": [115, 116], "A'": [112, 113], "V'": [73, 77], "Q": [108, 110], "K'": [77, 80], "R": [111, 112], "K": [[84, 88], [85, 89]], "V": [[81, 86], [84, 88]], "example": [69, 117]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tardy, active, humorous, dull, noisy and interesting.\nPremise: < Fascinating Elizabeth. Late Jason. Energetic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not tardy? Answer: Yes\n Premise: < Loud Helen. Blunt Maria. Funny Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not humorous? Answer: Yes\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [34, 35], "Q": [60, 62], "K'": [35, 36], "R": [63, 64], "K": [[32, 40], [33, 41]], "V": [[28, 37], [32, 40]], "example": [23, 70]}, {"END": [113, 114], "A'": [109, 111], "V'": [83, 85], "Q": [105, 107], "K'": [85, 86], "R": [108, 109], "K": [[77, 81], [78, 82]], "V": [[75, 79], [77, 81]], "example": [71, 115]}]}
{"task_id": "g2c[rlr_gen][genders_of_persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include interesting, humorous, tardy, active, dull and noisy.\nPremise: < Fascinating Elizabeth. Late Jason. Energetic Margaret. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not tardy? Answer: Yes\n Premise: < Loud Helen. Blunt Maria. Funny Jason. >. Answer with Yes or No. Can it be inferred from the premise that the girls is not dull? Answer: No\n", "ranges": [{"END": [68, 69], "A'": [64, 66], "V'": [34, 35], "Q": [60, 62], "K'": [35, 36], "R": [63, 64], "K": [[32, 40], [33, 41]], "V": [[28, 37], [32, 40]], "example": [23, 70]}, {"END": [113, 114], "A'": [109, 111], "V'": [83, 85], "Q": [105, 107], "K'": [85, 86], "R": [108, 109], "K": [[77, 81], [78, 82]], "V": [[75, 79], [77, 81]], "example": [71, 115]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sandra is unhappy. Dorothy is inactive. Brian is innovative. >. So who is creative? the boy\n < Edward is kind. Kevin is dangerous. Nancy is brave. >. So who is daring? the girl\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [14, 15], "Q": [24, 26], "K": [16, 18], "R": null, "K'": [[5, 11], [7, 13]], "V'": [[2, 8], [4, 10]], "example": [1, 29]}, {"END": [51, 52], "A": [52, 53], "V": [39, 40], "Q": [48, 50], "K": [41, 42], "R": null, "K'": [[33, 37], [34, 38]], "V'": [[31, 35], [32, 36]], "example": [30, 53]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< David is polite. Kimberly is benevolent. Kenneth is brave. >. So who is generous? the girl\n < Dorothy is intolerant. Nancy is tolerant. David is uninterested. >. So who is indifferent? the boy\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [7, 10], "Q": [24, 26], "K": [11, 14], "R": null, "K'": [[4, 17], [6, 18]], "V'": [[2, 15], [3, 16]], "example": [1, 29]}, {"END": [58, 59], "A": [59, 60], "V": [44, 45], "Q": [55, 57], "K": [46, 49], "R": null, "K'": [[34, 41], [38, 43]], "V'": [[31, 39], [33, 40]], "example": [30, 60]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mark is unattractive. Nancy is irresponsible. Sharon is correct. >. So who is ugly? the boy\n < Robert is innovative. Karen is funny. Donna is lucky. >. So who is creative? the boy\n", "ranges": [{"END": [27, 28], "A": [28, 29], "V": [2, 3], "Q": [25, 26], "K": [4, 8], "R": null, "K'": [[11, 18], [14, 19]], "V'": [[9, 15], [10, 17]], "example": [1, 29]}, {"END": [56, 57], "A": [57, 58], "V": [31, 32], "Q": [53, 55], "K": [33, 35], "R": null, "K'": [[39, 45], [41, 47]], "V'": [[36, 42], [38, 44]], "example": [30, 58]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Edward is uninteresting. Steven is energetic. Sharon is creative. >. So who is innovative? the girl\n < Thomas is dull. Kimberly is splotless. Carol is brave. >. So who is blunt? the boy\n", "ranges": [{"END": [29, 30], "A": [30, 31], "V": [15, 17], "Q": [26, 28], "K": [18, 20], "R": null, "K'": [[4, 11], [8, 14]], "V'": [[2, 9], [3, 10]], "example": [1, 31]}, {"END": [58, 59], "A": [59, 60], "V": [33, 34], "Q": [55, 57], "K": [35, 37], "R": null, "K'": [[42, 48], [45, 49]], "V'": [[38, 46], [41, 47]], "example": [32, 60]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Kevin is creative. Patricia is pessimistic. James is generous. >. So who is negative? the girl\n < Mark is blunt. Deborah is patient. John is creative. >. So who is tolerant? the girl\n", "ranges": [{"END": [28, 29], "A": [29, 30], "V": [7, 10], "Q": [26, 27], "K": [11, 15], "R": null, "K'": [[4, 18], [6, 20]], "V'": [[2, 16], [3, 17]], "example": [1, 30]}, {"END": [56, 57], "A": [57, 58], "V": [37, 40], "Q": [53, 55], "K": [41, 42], "R": null, "K'": [[34, 45], [36, 47]], "V'": [[32, 43], [33, 44]], "example": [31, 58]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Lisa is filthy. Jeff is disloyal. Mark is adventurous. >. So who is dirty? the girl\n < Donald is curious. Laura is energetic. Karen is driven. >. So who is inquiring? the boy\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [2, 3], "Q": [24, 25], "K": [4, 6], "R": null, "K'": [[9, 15], [12, 18]], "V'": [[7, 13], [8, 14]], "example": [1, 28]}, {"END": [53, 54], "A": [54, 55], "V": [30, 31], "Q": [50, 52], "K": [32, 33], "R": null, "K'": [[36, 43], [39, 44]], "V'": [[34, 40], [35, 42]], "example": [29, 55]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Helen is outgoing. Elizabeth is indifferent. Christopher is benevolent. >. So who is generous? the boy\n < Mark is unfortunate. Sharon is safe. Michelle is kind. >. So who is unlucky? the boy\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [12, 13], "Q": [23, 25], "K": [14, 17], "R": null, "K'": [[4, 9], [6, 11]], "V'": [[2, 7], [3, 8]], "example": [1, 28]}, {"END": [55, 56], "A": [56, 57], "V": [30, 31], "Q": [51, 54], "K": [32, 35], "R": null, "K'": [[39, 44], [40, 45]], "V'": [[36, 41], [38, 43]], "example": [29, 57]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Sharon is stupid. Linda is full. Paul is right. >. So who is correct? the boy\n < Christopher is interesting. Nancy is unmotivated. Kevin is strong. >. So who is apathetic? the girl\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [12, 13], "Q": [21, 22], "K": [14, 15], "R": null, "K'": [[5, 10], [6, 11]], "V'": [[2, 7], [4, 9]], "example": [1, 25]}, {"END": [51, 52], "A": [52, 53], "V": [31, 32], "Q": [47, 50], "K": [33, 37], "R": null, "K'": [[29, 40], [30, 41]], "V'": [[27, 38], [28, 39]], "example": [26, 53]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra is unhappy. Dorothy is inactive. Brian is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is the girl? Answer: No\n Premise: < Edward is considerate. Kevin is dull. Nancy is logical. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [17, 18], "Q": [45, 47], "K": [19, 21], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 54]}, {"END": [102, 103], "A": [98, 100], "V": [69, 70], "Q": [96, 97], "K": [71, 72], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[59, 64], [60, 65]], "example": [55, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra is unhappy. Dorothy is inactive. Brian is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is the girl? Answer: No\n Premise: < Edward is considerate. Kevin is dull. Nancy is logical. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [17, 18], "Q": [45, 47], "K": [19, 21], "R": null, "K'": [[8, 14], [10, 16]], "V'": [[5, 11], [7, 13]], "example": [1, 54]}, {"END": [102, 103], "A": [98, 100], "V": [69, 70], "Q": [96, 97], "K": [71, 72], "R": null, "K'": [[61, 66], [63, 68]], "V'": [[59, 64], [60, 65]], "example": [55, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark is poor. Lisa is miserly. Anthony is indecisive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's stingy is the boy? Answer: No\n Premise: < Donna is late. William is bold. Kevin is trustworthy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's tardy is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [9, 10], "Q": [43, 46], "K": [11, 13], "R": null, "K'": [[7, 16], [8, 19]], "V'": [[5, 14], [6, 15]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [58, 60], "Q": [96, 98], "K": [61, 62], "R": null, "K'": [[65, 69], [66, 72]], "V'": [[63, 67], [64, 68]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark is poor. Lisa is miserly. Anthony is indecisive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's stingy is the boy? Answer: No\n Premise: < Donna is late. William is bold. Kevin is trustworthy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's tardy is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [9, 10], "Q": [43, 46], "K": [11, 13], "R": null, "K'": [[7, 16], [8, 19]], "V'": [[5, 14], [6, 15]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [58, 60], "Q": [96, 98], "K": [61, 62], "R": null, "K'": [[65, 69], [66, 72]], "V'": [[63, 67], [64, 68]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer is active. Linda is creative. Daniel is short. >. Answer with Yes or No. Can it be inferred from the premise that the one who's low is the boy? Answer: Yes\n Premise: < Michelle is irresponsible. Daniel is smart. Brian is conventional. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negligent is the girl? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [16, 17], "Q": [43, 44], "K": [18, 19], "R": null, "K'": [[8, 13], [9, 15]], "V'": [[5, 10], [7, 12]], "example": [1, 51]}, {"END": [102, 103], "A": [98, 100], "V": [56, 58], "Q": [94, 97], "K": [59, 62], "R": null, "K'": [[65, 69], [66, 70]], "V'": [[63, 67], [64, 68]], "example": [52, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Jennifer is active. Linda is creative. Daniel is short. >. Answer with Yes or No. Can it be inferred from the premise that the one who's low is the boy? Answer: Yes\n Premise: < Michelle is irresponsible. Daniel is smart. Brian is conventional. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negligent is the boy? Answer: No\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [16, 17], "Q": [43, 44], "K": [18, 19], "R": null, "K'": [[8, 13], [9, 15]], "V'": [[5, 10], [7, 12]], "example": [1, 51]}, {"END": [102, 103], "A": [98, 100], "V": [56, 58], "Q": [94, 97], "K": [59, 62], "R": null, "K'": [[65, 69], [66, 70]], "V'": [[63, 67], [64, 68]], "example": [52, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret is pessimistic. Kenneth is sociable. Mark is candid. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negative is the boy? Answer: No\n Premise: < Jeff is fast. Margaret is unhealthy. John is unattractive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's sick is the girl? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [5, 6], "Q": [44, 45], "K": [7, 11], "R": null, "K'": [[14, 19], [16, 20]], "V'": [[12, 17], [13, 18]], "example": [1, 52]}, {"END": [104, 105], "A": [100, 102], "V": [61, 62], "Q": [98, 99], "K": [63, 67], "R": null, "K'": [[59, 70], [60, 74]], "V'": [[57, 68], [58, 69]], "example": [53, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Margaret is pessimistic. Kenneth is sociable. Mark is candid. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negative is the boy? Answer: No\n Premise: < Jeff is fast. Margaret is unhealthy. John is unattractive. >. Answer with Yes or No. Can it be inferred from the premise that the one who's sick is the boy? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [5, 6], "Q": [44, 45], "K": [7, 11], "R": null, "K'": [[14, 19], [16, 20]], "V'": [[12, 17], [13, 18]], "example": [1, 52]}, {"END": [104, 105], "A": [100, 102], "V": [61, 62], "Q": [98, 99], "K": [63, 67], "R": null, "K'": [[59, 70], [60, 74]], "V'": [[57, 68], [58, 69]], "example": [53, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa is prosperous. Jeff is filthy. Mark is hazardous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is the girl? Answer: Yes\n Premise: < William is irresponsible. Charles is curious. Dorothy is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [45, 46], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 21]], "V'": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [68, 70], "Q": [97, 98], "K": [71, 73], "R": null, "K'": [[60, 66], [63, 67]], "V'": [[58, 64], [59, 65]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Lisa is prosperous. Jeff is filthy. Mark is hazardous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is the girl? Answer: Yes\n Premise: < William is irresponsible. Charles is curious. Dorothy is lively. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [45, 46], "K": [7, 9], "R": null, "K'": [[12, 17], [14, 21]], "V'": [[10, 15], [11, 16]], "example": [1, 53]}, {"END": [103, 104], "A": [99, 101], "V": [68, 70], "Q": [97, 98], "K": [71, 73], "R": null, "K'": [[60, 66], [63, 67]], "V'": [[58, 64], [59, 65]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria is honest. Ronald is dishonest. Mark is unlucky. >. Answer with Yes or No. Can it be inferred from the premise that the one who's candid is the girl? Answer: Yes\n Premise: < Sarah is timid. David is quick. Brian is late. >. Answer with Yes or No. Can it be inferred from the premise that the one who's cowardly is the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [5, 6], "Q": [46, 47], "K": [7, 8], "R": null, "K'": [[12, 19], [16, 22]], "V'": [[9, 17], [11, 18]], "example": [1, 54]}, {"END": [103, 104], "A": [99, 101], "V": [59, 60], "Q": [95, 98], "K": [61, 63], "R": null, "K'": [[66, 70], [67, 71]], "V'": [[64, 68], [65, 69]], "example": [55, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Maria is honest. Ronald is dishonest. Mark is unlucky. >. Answer with Yes or No. Can it be inferred from the premise that the one who's candid is the girl? Answer: Yes\n Premise: < Sarah is timid. David is quick. Brian is late. >. Answer with Yes or No. Can it be inferred from the premise that the one who's cowardly is the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A": [48, 50], "V": [5, 6], "Q": [46, 47], "K": [7, 8], "R": null, "K'": [[12, 19], [16, 22]], "V'": [[9, 17], [11, 18]], "example": [1, 54]}, {"END": [103, 104], "A": [99, 101], "V": [59, 60], "Q": [95, 98], "K": [61, 63], "R": null, "K'": [[66, 70], [67, 71]], "V'": [[64, 68], [65, 69]], "example": [55, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher is informed. Nancy is uninterested. Deborah is slow. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is the boy? Answer: Yes\n Premise: < Steven is lazy. Anthony is ugly. Sarah is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [44, 46], "K": [7, 8], "R": null, "K'": [[11, 19], [14, 20]], "V'": [[9, 15], [10, 18]], "example": [1, 53]}, {"END": [99, 100], "A": [95, 97], "V": [66, 67], "Q": [93, 94], "K": [68, 69], "R": null, "K'": [[60, 64], [61, 65]], "V'": [[58, 62], [59, 63]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Christopher is informed. Nancy is uninterested. Deborah is slow. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is the boy? Answer: Yes\n Premise: < Steven is lazy. Anthony is ugly. Sarah is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 6], "Q": [44, 46], "K": [7, 8], "R": null, "K'": [[11, 19], [14, 20]], "V'": [[9, 15], [10, 18]], "example": [1, 53]}, {"END": [99, 100], "A": [95, 97], "V": [66, 67], "Q": [93, 94], "K": [68, 69], "R": null, "K'": [[60, 64], [61, 65]], "V'": [[58, 62], [59, 63]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra is filthy. Daniel is fraudulent. Edward is comfortable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dirty is the girl? Answer: Yes\n Premise: < Jeff is lively. Sarah is responsible. Robert is dangerous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dependable is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 7], "Q": [45, 46], "K": [8, 10], "R": null, "K'": [[13, 20], [17, 21]], "V'": [[11, 18], [12, 19]], "example": [1, 53]}, {"END": [101, 102], "A": [97, 99], "V": [63, 64], "Q": [94, 96], "K": [65, 66], "R": null, "K'": [[60, 69], [62, 70]], "V'": [[58, 67], [59, 68]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Sandra is filthy. Daniel is fraudulent. Edward is comfortable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dirty is the girl? Answer: Yes\n Premise: < Jeff is lively. Sarah is responsible. Robert is dangerous. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dependable is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [5, 7], "Q": [45, 46], "K": [8, 10], "R": null, "K'": [[13, 20], [17, 21]], "V'": [[11, 18], [12, 19]], "example": [1, 53]}, {"END": [101, 102], "A": [97, 99], "V": [63, 64], "Q": [94, 96], "K": [65, 66], "R": null, "K'": [[60, 69], [62, 70]], "V'": [[58, 67], [59, 68]], "example": [54, 103]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Unhappy Sandra. Inactive Dorothy. Innovative Brian. >. So who is creative? the boy\n < Kind Edward. Dangerous Kevin. Brave Nancy. >. So who is daring? the girl\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [16, 17], "Q": [23, 25], "K": [13, 16], "R": null, "K'": [[2, 8], [5, 10]], "V'": [[5, 10], [7, 12]], "example": [1, 28]}, {"END": [50, 51], "A": [51, 52], "V": [40, 41], "Q": [47, 49], "K": [38, 40], "R": null, "K'": [[30, 33], [31, 36]], "V'": [[31, 36], [32, 37]], "example": [29, 52]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Polite David. Benevolent Kimberly. Brave Kenneth. >. So who is generous? the girl\n < Intolerant Dorothy. Tolerant Nancy. Uninterested David. >. So who is indifferent? the boy\n", "ranges": [{"END": [26, 27], "A": [27, 28], "V": [10, 13], "Q": [23, 25], "K": [6, 10], "R": null, "K'": [[2, 14], [4, 16]], "V'": [[4, 16], [5, 17]], "example": [1, 28]}, {"END": [55, 56], "A": [56, 57], "V": [45, 46], "Q": [52, 54], "K": [42, 45], "R": null, "K'": [[30, 37], [34, 40]], "V'": [[34, 40], [36, 41]], "example": [29, 57]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Unattractive Mark. Irresponsible Nancy. Correct Sharon. >. So who is ugly? the boy\n < Innovative Robert. Funny Karen. Lucky Donna. >. So who is creative? the boy\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [6, 7], "Q": [22, 23], "K": [2, 6], "R": null, "K'": [[8, 13], [11, 14]], "V'": [[11, 14], [12, 16]], "example": [1, 26]}, {"END": [51, 52], "A": [52, 53], "V": [31, 32], "Q": [48, 50], "K": [28, 31], "R": null, "K'": [[33, 38], [35, 40]], "V'": [[35, 40], [37, 42]], "example": [27, 53]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Uninteresting Edward. Energetic Steven. Creative Sharon. >. So who is innovative? the girl\n < Dull Thomas. Splotless Kimberly. Brave Carol. >. So who is blunt? the boy\n", "ranges": [{"END": [25, 26], "A": [26, 27], "V": [14, 16], "Q": [22, 24], "K": [13, 14], "R": null, "K'": [[2, 8], [6, 11]], "V'": [[6, 11], [7, 12]], "example": [1, 27]}, {"END": [52, 53], "A": [53, 54], "V": [31, 32], "Q": [49, 51], "K": [29, 31], "R": null, "K'": [[33, 40], [36, 42]], "V'": [[36, 42], [39, 43]], "example": [28, 54]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Creative Kevin. Pessimistic Patricia. Generous James. >. So who is negative? the girl\n < Blunt Mark. Patient Deborah. Creative John. >. So who is tolerant? the girl\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [9, 12], "Q": [22, 23], "K": [5, 9], "R": null, "K'": [[2, 13], [3, 15]], "V'": [[3, 15], [4, 16]], "example": [1, 26]}, {"END": [49, 50], "A": [50, 51], "V": [34, 37], "Q": [46, 48], "K": [32, 34], "R": null, "K'": [[28, 38], [30, 39]], "V'": [[30, 39], [31, 40]], "example": [27, 51]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Filthy Lisa. Disloyal Jeff. Adventurous Mark. >. So who is dirty? the girl\n < Curious Donald. Energetic Laura. Driven Karen. >. So who is inquiring? the boy\n", "ranges": [{"END": [23, 24], "A": [24, 25], "V": [4, 5], "Q": [21, 22], "K": [2, 4], "R": null, "K'": [[6, 11], [9, 14]], "V'": [[9, 14], [10, 15]], "example": [1, 25]}, {"END": [50, 51], "A": [51, 52], "V": [29, 30], "Q": [47, 49], "K": [27, 29], "R": null, "K'": [[31, 36], [34, 39]], "V'": [[34, 39], [35, 41]], "example": [26, 52]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Outgoing Helen. Indifferent Elizabeth. Benevolent Christopher. >. So who is generous? the boy\n < Unfortunate Mark. Safe Sharon. Kind Michelle. >. So who is unlucky? the boy\n", "ranges": [{"END": [24, 25], "A": [25, 26], "V": [14, 15], "Q": [21, 23], "K": [10, 14], "R": null, "K'": [[2, 6], [4, 8]], "V'": [[4, 8], [5, 9]], "example": [1, 26]}, {"END": [51, 52], "A": [52, 53], "V": [31, 32], "Q": [47, 50], "K": [28, 31], "R": null, "K'": [[33, 38], [35, 39]], "V'": [[35, 39], [37, 41]], "example": [27, 53]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Stupid Sharon. Full Linda. Right Paul. >. So who is correct? the boy\n < Interesting Christopher. Unmotivated Nancy. Strong Kevin. >. So who is apathetic? the girl\n", "ranges": [{"END": [22, 23], "A": [23, 24], "V": [13, 14], "Q": [20, 21], "K": [12, 13], "R": null, "K'": [[2, 8], [5, 9]], "V'": [[5, 9], [7, 11]], "example": [1, 24]}, {"END": [49, 50], "A": [50, 51], "V": [34, 35], "Q": [45, 48], "K": [30, 34], "R": null, "K'": [[26, 36], [28, 38]], "V'": [[28, 38], [29, 39]], "example": [25, 51]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhappy Sandra. Inactive Dorothy. Innovative Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is the girl? Answer: No\n Premise: < Considerate Edward. Dull Kevin. Logical Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [19, 20], "Q": [44, 46], "K": [16, 19], "R": null, "K'": [[5, 11], [8, 13]], "V'": [[8, 13], [10, 15]], "example": [1, 53]}, {"END": [99, 100], "A": [95, 97], "V": [68, 69], "Q": [93, 94], "K": [66, 68], "R": null, "K'": [[58, 62], [60, 64]], "V'": [[60, 64], [61, 65]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhappy Sandra. Inactive Dorothy. Innovative Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is the girl? Answer: No\n Premise: < Considerate Edward. Dull Kevin. Logical Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's rational is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [19, 20], "Q": [44, 46], "K": [16, 19], "R": null, "K'": [[5, 11], [8, 13]], "V'": [[8, 13], [10, 15]], "example": [1, 53]}, {"END": [99, 100], "A": [95, 97], "V": [68, 69], "Q": [93, 94], "K": [66, 68], "R": null, "K'": [[58, 62], [60, 64]], "V'": [[60, 64], [61, 65]], "example": [54, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Poor Mark. Miserly Lisa. Indecisive Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who's stingy is the boy? Answer: No\n Premise: < Late Donna. Bold William. Trustworthy Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who's tardy is the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [12, 13], "Q": [43, 46], "K": [9, 12], "R": null, "K'": [[5, 14], [7, 18]], "V'": [[7, 18], [8, 19]], "example": [1, 53]}, {"END": [101, 102], "A": [97, 99], "V": [59, 61], "Q": [94, 96], "K": [58, 59], "R": null, "K'": [[62, 66], [64, 69]], "V'": [[64, 69], [65, 70]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Poor Mark. Miserly Lisa. Indecisive Anthony. >. Answer with Yes or No. Can it be inferred from the premise that the one who's stingy is the boy? Answer: No\n Premise: < Late Donna. Bold William. Trustworthy Kevin. >. Answer with Yes or No. Can it be inferred from the premise that the one who's tardy is the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A": [47, 49], "V": [12, 13], "Q": [43, 46], "K": [9, 12], "R": null, "K'": [[5, 14], [7, 18]], "V'": [[7, 18], [8, 19]], "example": [1, 53]}, {"END": [101, 102], "A": [97, 99], "V": [59, 61], "Q": [94, 96], "K": [58, 59], "R": null, "K'": [[62, 66], [64, 69]], "V'": [[64, 69], [65, 70]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Active Jennifer. Creative Linda. Short Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who's low is the boy? Answer: Yes\n Premise: < Irresponsible Michelle. Smart Daniel. Conventional Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negligent is the girl? Answer: Yes\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [14, 15], "Q": [39, 40], "K": [13, 14], "R": null, "K'": [[5, 9], [6, 10]], "V'": [[6, 10], [8, 12]], "example": [1, 47]}, {"END": [98, 99], "A": [94, 96], "V": [55, 57], "Q": [90, 93], "K": [52, 55], "R": null, "K'": [[58, 62], [60, 65]], "V'": [[60, 65], [61, 66]], "example": [48, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Active Jennifer. Creative Linda. Short Daniel. >. Answer with Yes or No. Can it be inferred from the premise that the one who's low is the boy? Answer: Yes\n Premise: < Irresponsible Michelle. Smart Daniel. Conventional Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negligent is the boy? Answer: No\n", "ranges": [{"END": [45, 46], "A": [41, 43], "V": [14, 15], "Q": [39, 40], "K": [13, 14], "R": null, "K'": [[5, 9], [6, 10]], "V'": [[6, 10], [8, 12]], "example": [1, 47]}, {"END": [98, 99], "A": [94, 96], "V": [55, 57], "Q": [90, 93], "K": [52, 55], "R": null, "K'": [[58, 62], [60, 65]], "V'": [[60, 65], [61, 66]], "example": [48, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Pessimistic Margaret. Sociable Kenneth. Candid Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negative is the boy? Answer: No\n Premise: < Fast Jeff. Unhealthy Margaret. Unattractive John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's sick is the girl? Answer: Yes\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [9, 10], "Q": [42, 43], "K": [5, 9], "R": null, "K'": [[11, 15], [13, 17]], "V'": [[13, 17], [14, 18]], "example": [1, 50]}, {"END": [99, 100], "A": [95, 97], "V": [62, 63], "Q": [93, 94], "K": [58, 62], "R": null, "K'": [[55, 64], [56, 68]], "V'": [[56, 68], [57, 69]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Pessimistic Margaret. Sociable Kenneth. Candid Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's negative is the boy? Answer: No\n Premise: < Fast Jeff. Unhealthy Margaret. Unattractive John. >. Answer with Yes or No. Can it be inferred from the premise that the one who's sick is the boy? Answer: No\n", "ranges": [{"END": [48, 49], "A": [44, 46], "V": [9, 10], "Q": [42, 43], "K": [5, 9], "R": null, "K'": [[11, 15], [13, 17]], "V'": [[13, 17], [14, 18]], "example": [1, 50]}, {"END": [99, 100], "A": [95, 97], "V": [62, 63], "Q": [93, 94], "K": [58, 62], "R": null, "K'": [[55, 64], [56, 68]], "V'": [[56, 68], [57, 69]], "example": [51, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Prosperous Lisa. Filthy Jeff. Hazardous Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is the girl? Answer: Yes\n Premise: < Irresponsible William. Curious Charles. Lively Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is the girl? Answer: Yes\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [9, 10], "Q": [43, 44], "K": [5, 9], "R": null, "K'": [[11, 15], [13, 18]], "V'": [[13, 18], [14, 19]], "example": [1, 51]}, {"END": [99, 100], "A": [95, 97], "V": [67, 69], "Q": [93, 94], "K": [65, 67], "R": null, "K'": [[56, 61], [59, 63]], "V'": [[59, 63], [60, 64]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Prosperous Lisa. Filthy Jeff. Hazardous Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's successful is the girl? Answer: Yes\n Premise: < Irresponsible William. Curious Charles. Lively Dorothy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's active is the boy? Answer: No\n", "ranges": [{"END": [49, 50], "A": [45, 47], "V": [9, 10], "Q": [43, 44], "K": [5, 9], "R": null, "K'": [[11, 15], [13, 18]], "V'": [[13, 18], [14, 19]], "example": [1, 51]}, {"END": [99, 100], "A": [95, 97], "V": [67, 69], "Q": [93, 94], "K": [65, 67], "R": null, "K'": [[56, 61], [59, 63]], "V'": [[59, 63], [60, 64]], "example": [52, 101]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Honest Maria. Dishonest Ronald. Unlucky Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's candid is the girl? Answer: Yes\n Premise: < Timid Sarah. Quick David. Late Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's cowardly is the girl? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 8], "Q": [44, 45], "K": [5, 7], "R": null, "K'": [[9, 16], [13, 19]], "V'": [[13, 19], [15, 20]], "example": [1, 52]}, {"END": [98, 99], "A": [94, 96], "V": [59, 60], "Q": [90, 93], "K": [57, 59], "R": null, "K'": [[61, 64], [62, 65]], "V'": [[62, 65], [63, 66]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Honest Maria. Dishonest Ronald. Unlucky Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's candid is the girl? Answer: Yes\n Premise: < Timid Sarah. Quick David. Late Brian. >. Answer with Yes or No. Can it be inferred from the premise that the one who's cowardly is the boy? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 8], "Q": [44, 45], "K": [5, 7], "R": null, "K'": [[9, 16], [13, 19]], "V'": [[13, 19], [15, 20]], "example": [1, 52]}, {"END": [98, 99], "A": [94, 96], "V": [59, 60], "Q": [90, 93], "K": [57, 59], "R": null, "K'": [[61, 64], [62, 65]], "V'": [[62, 65], [63, 66]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Informed Christopher. Uninterested Nancy. Slow Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is the boy? Answer: Yes\n Premise: < Lazy Steven. Ugly Anthony. Smart Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is the girl? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 8], "Q": [43, 45], "K": [5, 7], "R": null, "K'": [[9, 14], [12, 16]], "V'": [[12, 16], [13, 19]], "example": [1, 52]}, {"END": [98, 99], "A": [94, 96], "V": [67, 68], "Q": [92, 93], "K": [65, 67], "R": null, "K'": [[57, 61], [59, 63]], "V'": [[59, 63], [60, 64]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Informed Christopher. Uninterested Nancy. Slow Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is the boy? Answer: Yes\n Premise: < Lazy Steven. Ugly Anthony. Smart Sarah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's clever is the boy? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 8], "Q": [43, 45], "K": [5, 7], "R": null, "K'": [[9, 14], [12, 16]], "V'": [[12, 16], [13, 19]], "example": [1, 52]}, {"END": [98, 99], "A": [94, 96], "V": [67, 68], "Q": [92, 93], "K": [65, 67], "R": null, "K'": [[57, 61], [59, 63]], "V'": [[59, 63], [60, 64]], "example": [53, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Filthy Sandra. Fraudulent Daniel. Comfortable Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dirty is the girl? Answer: Yes\n Premise: < Lively Jeff. Responsible Sarah. Dangerous Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dependable is the girl? Answer: Yes\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 9], "Q": [44, 45], "K": [5, 7], "R": null, "K'": [[10, 16], [14, 19]], "V'": [[14, 19], [15, 20]], "example": [1, 52]}, {"END": [102, 103], "A": [98, 100], "V": [65, 66], "Q": [95, 97], "K": [61, 65], "R": null, "K'": [[57, 67], [59, 70]], "V'": [[59, 70], [60, 71]], "example": [53, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Filthy Sandra. Fraudulent Daniel. Comfortable Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dirty is the girl? Answer: Yes\n Premise: < Lively Jeff. Responsible Sarah. Dangerous Robert. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dependable is the boy? Answer: No\n", "ranges": [{"END": [50, 51], "A": [46, 48], "V": [7, 9], "Q": [44, 45], "K": [5, 7], "R": null, "K'": [[10, 16], [14, 19]], "V'": [[14, 19], [15, 20]], "example": [1, 52]}, {"END": [102, 103], "A": [98, 100], "V": [65, 66], "Q": [95, 97], "K": [61, 65], "R": null, "K'": [[57, 67], [59, 70]], "V'": [[59, 70], [60, 71]], "example": [53, 104]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Daniel is unhealthy. Michelle is innovative. Sharon is innovative. >. The one who's creative is not the boy\n < Mary is wealthy. Kimberly is wealthy. Joseph is sad. >. The one who's rich is not the boy\n", "ranges": [{"END": [32, 33], "A'": [33, 34], "V'": [2, 3], "Q": [28, 30], "K'": [4, 8], "R": [31, 32], "K": [[12, 18], [14, 20]], "V": [[9, 15], [11, 17]], "example": [1, 34]}, {"END": [62, 63], "A'": [63, 64], "V'": [48, 49], "Q": [59, 60], "K'": [50, 51], "R": [61, 62], "K": [[38, 45], [40, 47]], "V": [[36, 41], [37, 44]], "example": [35, 64]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Linda is humorless. Richard is strong. Deborah is humorless. >. The one who's serious is not the boy\n < Betty is correct. Sarah is correct. Brian is miserly. >. The one who's right is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [8, 9], "Q": [26, 27], "K'": [10, 11], "R": [28, 29], "K": [[5, 16], [7, 18]], "V": [[2, 12], [4, 15]], "example": [1, 31]}, {"END": [56, 57], "A'": [57, 58], "V'": [41, 42], "Q": [53, 54], "K'": [43, 45], "R": [55, 56], "K": [[35, 39], [36, 40]], "V": [[33, 37], [34, 38]], "example": [32, 58]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Jeff is honest. Lisa is egotistical. Laura is egotistical. >. The one who's selfish is not the boy\n < Richard is tall. Susan is innovative. Thomas is tall. >. The one who's high is not the girl\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [2, 3], "Q": [27, 29], "K'": [4, 5], "R": [30, 31], "K": [[8, 15], [12, 19]], "V": [[6, 13], [7, 14]], "example": [1, 33]}, {"END": [58, 59], "A'": [59, 60], "V'": [39, 40], "Q": [55, 56], "K'": [41, 43], "R": [57, 58], "K": [[37, 46], [38, 47]], "V": [[35, 44], [36, 45]], "example": [34, 60]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Deborah is short. Linda is short. Thomas is lazy. >. The one who's low is not the boy\n < Michael is intelligent. William is smart. Maria is lively. >. The one who's clever is not the girl\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [13, 14], "Q": [24, 25], "K'": [15, 16], "R": [26, 27], "K": [[6, 11], [7, 12]], "V": [[2, 8], [5, 10]], "example": [1, 29]}, {"END": [55, 56], "A'": [56, 57], "V'": [40, 41], "Q": [52, 53], "K'": [42, 44], "R": [54, 55], "K": [[33, 38], [35, 39]], "V": [[31, 36], [32, 37]], "example": [30, 57]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Barbara is boastful. Lisa is boastful. Joseph is smart. >. The one who's arrogant is not the boy\n < Jason is pessimistic. Karen is strong. Kevin is pessimistic. >. The one who's negative is not the girl\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [14, 15], "Q": [25, 28], "K'": [16, 17], "R": [29, 30], "K": [[4, 10], [7, 13]], "V": [[2, 8], [3, 9]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 65], "V'": [41, 43], "Q": [60, 61], "K'": [44, 45], "R": [62, 63], "K": [[36, 48], [40, 52]], "V": [[34, 46], [35, 47]], "example": [33, 65]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Mary is undependable. Brian is unhealthy. Kenneth is unhealthy. >. The one who's sick is not the girl\n < Patricia is innovative. Charles is blunt. Deborah is innovative. >. The one who's creative is not the boy\n", "ranges": [{"END": [33, 34], "A'": [34, 35], "V'": [2, 3], "Q": [30, 31], "K'": [4, 8], "R": [32, 33], "K": [[11, 18], [15, 22]], "V": [[9, 16], [10, 17]], "example": [1, 35]}, {"END": [67, 68], "A'": [68, 69], "V'": [44, 45], "Q": [63, 65], "K'": [46, 48], "R": [66, 67], "K": [[41, 53], [43, 55]], "V": [[37, 49], [40, 52]], "example": [36, 69]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Brian is dangerous. Barbara is filthy. Lisa is filthy. >. The one who's dirty is not the boy\n < Maria is ugly. Jeff is curious. Mark is curious. >. The one who's inquiring is not the girl\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [2, 3], "Q": [23, 24], "K'": [4, 5], "R": [25, 26], "K": [[8, 13], [10, 15]], "V": [[6, 11], [7, 12]], "example": [1, 28]}, {"END": [53, 54], "A'": [54, 55], "V'": [30, 31], "Q": [49, 51], "K'": [32, 33], "R": [52, 53], "K": [[36, 40], [37, 41]], "V": [[34, 38], [35, 39]], "example": [29, 55]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "< Betty is informed. Nancy is informed. Edward is unreasonable. >. The one who's knowledgeable is not the boy\n < Nancy is irrational. Joseph is honest. Donna is irrational. >. The one who's unreasonable is not the boy\n", "ranges": [{"END": [27, 28], "A'": [28, 29], "V'": [10, 11], "Q": [23, 25], "K'": [12, 15], "R": [26, 27], "K": [[4, 8], [5, 9]], "V": [[2, 6], [3, 7]], "example": [1, 29]}, {"END": [60, 61], "A'": [61, 62], "V'": [37, 38], "Q": [55, 58], "K'": [39, 40], "R": [59, 60], "K": [[33, 44], [36, 47]], "V": [[31, 41], [32, 43]], "example": [30, 62]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel is unhealthy. Michelle is innovative. Sharon is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not the boy? Answer: Yes\n Premise: < Mark is timid. Helen is sad. Maria is sad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not the boy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [5, 6], "Q": [47, 49], "K'": [7, 11], "R": [50, 51], "K": [[15, 21], [17, 23]], "V": [[12, 18], [14, 20]], "example": [1, 57]}, {"END": [106, 107], "A'": [102, 104], "V'": [62, 63], "Q": [98, 100], "K'": [64, 66], "R": [101, 102], "K": [[69, 73], [70, 74]], "V": [[67, 71], [68, 72]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Daniel is unhealthy. Michelle is innovative. Sharon is innovative. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not the boy? Answer: Yes\n Premise: < Mark is timid. Helen is sad. Maria is sad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not the girl? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [5, 6], "Q": [47, 49], "K'": [7, 11], "R": [50, 51], "K": [[15, 21], [17, 23]], "V": [[12, 18], [14, 20]], "example": [1, 57]}, {"END": [106, 107], "A'": [102, 104], "V'": [62, 63], "Q": [98, 100], "K'": [64, 66], "R": [101, 102], "K": [[69, 73], [70, 74]], "V": [[67, 71], [68, 72]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin is adventurous. Brian is bold. Jennifer is impolite. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is not the boy? Answer: No\n Premise: < Nancy is humble. Deborah is humble. Thomas is awkward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is not the boy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [45, 47], "K'": [18, 21], "R": [48, 49], "K": [[7, 13], [10, 14]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [72, 73], "Q": [100, 102], "K'": [74, 76], "R": [103, 104], "K": [[62, 69], [64, 71]], "V": [[60, 65], [61, 68]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Kevin is adventurous. Brian is bold. Jennifer is impolite. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is not the boy? Answer: No\n Premise: < Nancy is humble. Deborah is humble. Thomas is awkward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is not the girl? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [15, 17], "Q": [45, 47], "K'": [18, 21], "R": [48, 49], "K": [[7, 13], [10, 14]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [108, 109], "A'": [104, 106], "V'": [72, 73], "Q": [100, 102], "K'": [74, 76], "R": [103, 104], "K": [[62, 69], [64, 71]], "V": [[60, 65], [61, 68]], "example": [56, 110]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark is pessimistic. Nancy is serious. Sharon is serious. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorless is not the girl? Answer: No\n Premise: < Donna is lucky. Christopher is witty. Richard is funny. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorous is not the girl? Answer: Yes\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [5, 6], "Q": [44, 46], "K'": [7, 11], "R": [47, 48], "K": [[14, 19], [15, 20]], "V": [[12, 16], [13, 18]], "example": [1, 54]}, {"END": [107, 108], "A'": [103, 105], "V'": [59, 61], "Q": [99, 101], "K'": [62, 64], "R": [102, 103], "K": [[67, 73], [70, 75]], "V": [[65, 71], [66, 72]], "example": [55, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Mark is pessimistic. Nancy is serious. Sharon is serious. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorless is not the girl? Answer: No\n Premise: < Donna is lucky. Christopher is witty. Richard is funny. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorous is not the boy? Answer: No\n", "ranges": [{"END": [52, 53], "A'": [48, 50], "V'": [5, 6], "Q": [44, 46], "K'": [7, 11], "R": [47, 48], "K": [[14, 19], [15, 20]], "V": [[12, 16], [13, 18]], "example": [1, 54]}, {"END": [107, 108], "A'": [103, 105], "V'": [59, 61], "Q": [99, 101], "K'": [62, 64], "R": [102, 103], "K": [[67, 73], [70, 75]], "V": [[65, 71], [66, 72]], "example": [55, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara is boastful. Lisa is boastful. Joseph is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not the boy? Answer: Yes\n Premise: < Margaret is candid. Kenneth is sociable. Mark is sociable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's outgoing is not the girl? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [17, 18], "Q": [44, 47], "K'": [19, 20], "R": [48, 49], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [105, 106], "A'": [101, 103], "V'": [60, 61], "Q": [97, 99], "K'": [62, 63], "R": [100, 101], "K": [[66, 71], [68, 73]], "V": [[64, 69], [65, 70]], "example": [56, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Barbara is boastful. Lisa is boastful. Joseph is smart. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not the boy? Answer: Yes\n Premise: < Margaret is candid. Kenneth is sociable. Mark is sociable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's outgoing is not the boy? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [17, 18], "Q": [44, 47], "K'": [19, 20], "R": [48, 49], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 55]}, {"END": [105, 106], "A'": [101, 103], "V'": [60, 61], "Q": [97, 99], "K'": [62, 63], "R": [100, 101], "K": [[66, 71], [68, 73]], "V": [[64, 69], [65, 70]], "example": [56, 107]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald is healthy. Susan is blunt. Deborah is blunt. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dull is not the boy? Answer: Yes\n Premise: < David is sick. Nancy is glad. Ruth is glad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's happy is not the boy? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 7], "Q": [46, 48], "K'": [8, 10], "R": [49, 50], "K": [[13, 20], [15, 22]], "V": [[11, 16], [12, 19]], "example": [1, 56]}, {"END": [103, 104], "A'": [99, 101], "V'": [61, 62], "Q": [96, 97], "K'": [63, 64], "R": [98, 99], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [57, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Ronald is healthy. Susan is blunt. Deborah is blunt. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dull is not the boy? Answer: Yes\n Premise: < David is sick. Nancy is glad. Ruth is glad. >. Answer with Yes or No. Can it be inferred from the premise that the one who's happy is not the girl? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [5, 7], "Q": [46, 48], "K'": [8, 10], "R": [49, 50], "K": [[13, 20], [15, 22]], "V": [[11, 16], [12, 19]], "example": [1, 56]}, {"END": [103, 104], "A'": [99, 101], "V'": [61, 62], "Q": [96, 97], "K'": [63, 64], "R": [98, 99], "K": [[67, 71], [68, 72]], "V": [[65, 69], [66, 70]], "example": [57, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen is indecisive. Thomas is apathetic. William is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Betty is informed. Nancy is informed. Edward is unreasonable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the boy? Answer: Yes\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [5, 7], "Q": [47, 51], "K'": [8, 11], "R": [52, 53], "K": [[14, 20], [17, 23]], "V": [[12, 18], [13, 19]], "example": [1, 59]}, {"END": [109, 110], "A'": [105, 107], "V'": [72, 73], "Q": [101, 103], "K'": [74, 77], "R": [104, 105], "K": [[66, 70], [67, 71]], "V": [[64, 68], [65, 69]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Karen is indecisive. Thomas is apathetic. William is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Betty is informed. Nancy is informed. Edward is unreasonable. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n", "ranges": [{"END": [57, 58], "A'": [53, 55], "V'": [5, 7], "Q": [47, 51], "K'": [8, 11], "R": [52, 53], "K": [[14, 20], [17, 23]], "V": [[12, 18], [13, 19]], "example": [1, 59]}, {"END": [109, 110], "A'": [105, 107], "V'": [72, 73], "Q": [101, 103], "K'": [74, 77], "R": [104, 105], "K": [[66, 70], [67, 71]], "V": [[64, 68], [65, 69]], "example": [60, 111]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven is apathetic. Michael is apathetic. Nancy is unfriendly. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Thomas is foolish. Elizabeth is strong. Sandra is strong. >. Answer with Yes or No. Can it be inferred from the premise that the one who's powerful is not the boy? Answer: Yes\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [17, 18], "Q": [46, 50], "K'": [19, 22], "R": [51, 52], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 58]}, {"END": [107, 108], "A'": [103, 105], "V'": [63, 64], "Q": [100, 101], "K'": [65, 67], "R": [102, 103], "K": [[70, 75], [71, 76]], "V": [[68, 72], [69, 74]], "example": [59, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Steven is apathetic. Michael is apathetic. Nancy is unfriendly. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Thomas is foolish. Elizabeth is strong. Sandra is strong. >. Answer with Yes or No. Can it be inferred from the premise that the one who's powerful is not the girl? Answer: No\n", "ranges": [{"END": [56, 57], "A'": [52, 54], "V'": [17, 18], "Q": [46, 50], "K'": [19, 22], "R": [51, 52], "K": [[7, 13], [10, 16]], "V": [[5, 11], [6, 12]], "example": [1, 58]}, {"END": [107, 108], "A'": [103, 105], "V'": [63, 64], "Q": [100, 101], "K'": [65, 67], "R": [102, 103], "K": [[70, 75], [71, 76]], "V": [[68, 72], [69, 74]], "example": [59, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth is informed. Betty is informed. David is dishonest. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n Premise: < John is silent. Mary is quiet. Karen is quiet. >. Answer with Yes or No. Can it be inferred from the premise that the one who's silent is not the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [13, 14], "Q": [43, 45], "K'": [15, 19], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [101, 102], "A'": [97, 99], "V'": [58, 59], "Q": [94, 95], "K'": [60, 61], "R": [96, 97], "K": [[64, 69], [65, 70]], "V": [[62, 66], [63, 68]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3]", "texts": "Premise: < Elizabeth is informed. Betty is informed. David is dishonest. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n Premise: < John is silent. Mary is quiet. Karen is quiet. >. Answer with Yes or No. Can it be inferred from the premise that the one who's silent is not the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [13, 14], "Q": [43, 45], "K'": [15, 19], "R": [46, 47], "K": [[7, 11], [8, 12]], "V": [[5, 9], [6, 10]], "example": [1, 53]}, {"END": [101, 102], "A'": [97, 99], "V'": [58, 59], "Q": [94, 95], "K'": [60, 61], "R": [96, 97], "K": [[64, 69], [65, 70]], "V": [[62, 66], [63, 68]], "example": [54, 103]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Unhealthy Daniel. Innovative Michelle. Innovative Sharon. >. The one who's creative is not the boy\n < Wealthy Mary. Wealthy Kimberly. Sad Joseph. >. The one who's rich is not the boy\n", "ranges": [{"END": [31, 32], "A'": [32, 33], "V'": [6, 7], "Q": [27, 29], "K'": [2, 6], "R": [30, 31], "K": [[8, 14], [11, 17]], "V": [[11, 17], [13, 19]], "example": [1, 33]}, {"END": [60, 61], "A'": [61, 62], "V'": [48, 49], "Q": [57, 58], "K'": [47, 48], "R": [59, 60], "K": [[35, 40], [38, 43]], "V": [[38, 43], [39, 46]], "example": [34, 62]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Humorless Linda. Strong Richard. Humorless Deborah. >. The one who's serious is not the boy\n < Correct Betty. Correct Sarah. Miserly Brian. >. The one who's right is not the boy\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [10, 11], "Q": [26, 27], "K'": [8, 10], "R": [28, 29], "K": [[2, 12], [5, 15]], "V": [[5, 15], [7, 18]], "example": [1, 31]}, {"END": [54, 55], "A'": [55, 56], "V'": [42, 43], "Q": [51, 52], "K'": [39, 42], "R": [53, 54], "K": [[33, 36], [34, 37]], "V": [[34, 37], [35, 38]], "example": [32, 56]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Honest Jeff. Egotistical Lisa. Egotistical Laura. >. The one who's selfish is not the boy\n < Tall Richard. Innovative Susan. Tall Thomas. >. The one who's high is not the girl\n", "ranges": [{"END": [29, 30], "A'": [30, 31], "V'": [4, 5], "Q": [25, 27], "K'": [2, 4], "R": [28, 29], "K": [[6, 12], [10, 16]], "V": [[10, 16], [11, 17]], "example": [1, 31]}, {"END": [56, 57], "A'": [57, 58], "V'": [40, 41], "Q": [53, 54], "K'": [37, 40], "R": [55, 56], "K": [[33, 42], [35, 44]], "V": [[35, 44], [36, 45]], "example": [32, 58]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Short Deborah. Short Linda. Lazy Thomas. >. The one who's low is not the boy\n < Intelligent Michael. Smart William. Lively Maria. >. The one who's clever is not the girl\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [13, 14], "Q": [22, 23], "K'": [11, 13], "R": [24, 25], "K": [[2, 7], [3, 8]], "V": [[3, 8], [6, 10]], "example": [1, 27]}, {"END": [52, 53], "A'": [53, 54], "V'": [40, 41], "Q": [49, 50], "K'": [38, 40], "R": [51, 52], "K": [[29, 34], [32, 36]], "V": [[32, 36], [33, 37]], "example": [28, 54]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Boastful Barbara. Boastful Lisa. Smart Joseph. >. The one who's arrogant is not the boy\n < Pessimistic Jason. Strong Karen. Pessimistic Kevin. >. The one who's negative is not the girl\n", "ranges": [{"END": [28, 29], "A'": [29, 30], "V'": [14, 15], "Q": [23, 26], "K'": [12, 14], "R": [27, 28], "K": [[2, 7], [5, 10]], "V": [[5, 10], [6, 11]], "example": [1, 30]}, {"END": [59, 60], "A'": [60, 61], "V'": [40, 42], "Q": [56, 57], "K'": [38, 40], "R": [58, 59], "K": [[32, 43], [36, 47]], "V": [[36, 47], [37, 48]], "example": [31, 61]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Undependable Mary. Unhealthy Brian. Unhealthy Kenneth. >. The one who's sick is not the girl\n < Innovative Patricia. Blunt Charles. Innovative Deborah. >. The one who's creative is not the boy\n", "ranges": [{"END": [30, 31], "A'": [31, 32], "V'": [6, 7], "Q": [27, 28], "K'": [2, 6], "R": [29, 30], "K": [[8, 14], [12, 18]], "V": [[12, 18], [13, 19]], "example": [1, 32]}, {"END": [63, 64], "A'": [64, 65], "V'": [43, 44], "Q": [59, 61], "K'": [41, 43], "R": [62, 63], "K": [[34, 45], [37, 48]], "V": [[37, 48], [40, 51]], "example": [33, 65]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Dangerous Brian. Filthy Barbara. Filthy Lisa. >. The one who's dirty is not the boy\n < Ugly Maria. Curious Jeff. Curious Mark. >. The one who's inquiring is not the girl\n", "ranges": [{"END": [25, 26], "A'": [26, 27], "V'": [5, 6], "Q": [22, 23], "K'": [2, 5], "R": [24, 25], "K": [[7, 11], [9, 13]], "V": [[9, 13], [10, 14]], "example": [1, 27]}, {"END": [52, 53], "A'": [53, 54], "V'": [31, 32], "Q": [48, 50], "K'": [29, 31], "R": [51, 52], "K": [[33, 37], [35, 39]], "V": [[35, 39], [36, 40]], "example": [28, 54]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "< Informed Betty. Informed Nancy. Unreasonable Edward. >. The one who's knowledgeable is not the boy\n < Irrational Nancy. Honest Joseph. Irrational Donna. >. The one who's unreasonable is not the boy\n", "ranges": [{"END": [26, 27], "A'": [27, 28], "V'": [13, 14], "Q": [22, 24], "K'": [10, 13], "R": [25, 26], "K": [[2, 6], [4, 8]], "V": [[4, 8], [5, 9]], "example": [1, 28]}, {"END": [57, 58], "A'": [58, 59], "V'": [37, 38], "Q": [52, 55], "K'": [35, 37], "R": [56, 57], "K": [[30, 39], [33, 42]], "V": [[33, 42], [34, 44]], "example": [29, 59]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhealthy Daniel. Innovative Michelle. Innovative Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not the boy? Answer: Yes\n Premise: < Timid Mark. Sad Helen. Sad Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not the boy? Answer: Yes\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [9, 10], "Q": [46, 48], "K'": [5, 9], "R": [49, 50], "K": [[11, 17], [14, 20]], "V": [[14, 20], [16, 22]], "example": [1, 56]}, {"END": [102, 103], "A'": [98, 100], "V'": [63, 64], "Q": [94, 96], "K'": [61, 63], "R": [97, 98], "K": [[65, 68], [66, 69]], "V": [[66, 69], [67, 70]], "example": [57, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Unhealthy Daniel. Innovative Michelle. Innovative Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's creative is not the boy? Answer: Yes\n Premise: < Timid Mark. Sad Helen. Sad Maria. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unhappy is not the girl? Answer: No\n", "ranges": [{"END": [54, 55], "A'": [50, 52], "V'": [9, 10], "Q": [46, 48], "K'": [5, 9], "R": [49, 50], "K": [[11, 17], [14, 20]], "V": [[14, 20], [16, 22]], "example": [1, 56]}, {"END": [102, 103], "A'": [98, 100], "V'": [63, 64], "Q": [94, 96], "K'": [61, 63], "R": [97, 98], "K": [[65, 68], [66, 69]], "V": [[66, 69], [67, 70]], "example": [57, 104]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Adventurous Kevin. Bold Brian. Impolite Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is not the boy? Answer: No\n Premise: < Humble Nancy. Humble Deborah. Awkward Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is not the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [17, 19], "Q": [43, 45], "K'": [14, 17], "R": [46, 47], "K": [[5, 10], [8, 12]], "V": [[8, 12], [9, 13]], "example": [1, 53]}, {"END": [104, 105], "A'": [100, 102], "V'": [71, 72], "Q": [96, 98], "K'": [68, 71], "R": [99, 100], "K": [[58, 62], [60, 64]], "V": [[60, 64], [61, 67]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Adventurous Kevin. Bold Brian. Impolite Jennifer. >. Answer with Yes or No. Can it be inferred from the premise that the one who's daring is not the boy? Answer: No\n Premise: < Humble Nancy. Humble Deborah. Awkward Thomas. >. Answer with Yes or No. Can it be inferred from the premise that the one who's modest is not the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [17, 19], "Q": [43, 45], "K'": [14, 17], "R": [46, 47], "K": [[5, 10], [8, 12]], "V": [[8, 12], [9, 13]], "example": [1, 53]}, {"END": [104, 105], "A'": [100, 102], "V'": [71, 72], "Q": [96, 98], "K'": [68, 71], "R": [99, 100], "K": [[58, 62], [60, 64]], "V": [[60, 64], [61, 67]], "example": [54, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Pessimistic Mark. Serious Nancy. Serious Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorless is not the girl? Answer: No\n Premise: < Lucky Donna. Witty Christopher. Funny Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorous is not the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [9, 10], "Q": [43, 45], "K'": [5, 9], "R": [46, 47], "K": [[11, 15], [13, 17]], "V": [[13, 17], [14, 19]], "example": [1, 53]}, {"END": [103, 104], "A'": [99, 101], "V'": [60, 62], "Q": [95, 97], "K'": [58, 60], "R": [98, 99], "K": [[63, 68], [66, 70]], "V": [[66, 70], [67, 71]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Pessimistic Mark. Serious Nancy. Serious Sharon. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorless is not the girl? Answer: No\n Premise: < Lucky Donna. Witty Christopher. Funny Richard. >. Answer with Yes or No. Can it be inferred from the premise that the one who's humorous is not the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [9, 10], "Q": [43, 45], "K'": [5, 9], "R": [46, 47], "K": [[11, 15], [13, 17]], "V": [[13, 17], [14, 19]], "example": [1, 53]}, {"END": [103, 104], "A'": [99, 101], "V'": [60, 62], "Q": [95, 97], "K'": [58, 60], "R": [98, 99], "K": [[63, 68], [66, 70]], "V": [[66, 70], [67, 71]], "example": [54, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Boastful Barbara. Boastful Lisa. Smart Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not the boy? Answer: Yes\n Premise: < Candid Margaret. Sociable Kenneth. Sociable Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's outgoing is not the girl? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [17, 18], "Q": [42, 45], "K'": [15, 17], "R": [46, 47], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 14]], "example": [1, 53]}, {"END": [101, 102], "A'": [97, 99], "V'": [60, 61], "Q": [93, 95], "K'": [58, 60], "R": [96, 97], "K": [[62, 66], [64, 68]], "V": [[64, 68], [65, 69]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Boastful Barbara. Boastful Lisa. Smart Joseph. >. Answer with Yes or No. Can it be inferred from the premise that the one who's arrogant is not the boy? Answer: Yes\n Premise: < Candid Margaret. Sociable Kenneth. Sociable Mark. >. Answer with Yes or No. Can it be inferred from the premise that the one who's outgoing is not the boy? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [17, 18], "Q": [42, 45], "K'": [15, 17], "R": [46, 47], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 14]], "example": [1, 53]}, {"END": [101, 102], "A'": [97, 99], "V'": [60, 61], "Q": [93, 95], "K'": [58, 60], "R": [96, 97], "K": [[62, 66], [64, 68]], "V": [[64, 68], [65, 69]], "example": [54, 103]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Healthy Ronald. Blunt Susan. Blunt Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dull is not the boy? Answer: Yes\n Premise: < Sick David. Glad Nancy. Glad Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's happy is not the boy? Answer: Yes\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [7, 9], "Q": [43, 45], "K'": [5, 7], "R": [46, 47], "K": [[10, 14], [12, 16]], "V": [[12, 16], [13, 19]], "example": [1, 53]}, {"END": [98, 99], "A'": [94, 96], "V'": [60, 61], "Q": [91, 92], "K'": [58, 60], "R": [93, 94], "K": [[62, 65], [63, 66]], "V": [[63, 66], [64, 67]], "example": [54, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Healthy Ronald. Blunt Susan. Blunt Deborah. >. Answer with Yes or No. Can it be inferred from the premise that the one who's dull is not the boy? Answer: Yes\n Premise: < Sick David. Glad Nancy. Glad Ruth. >. Answer with Yes or No. Can it be inferred from the premise that the one who's happy is not the girl? Answer: No\n", "ranges": [{"END": [51, 52], "A'": [47, 49], "V'": [7, 9], "Q": [43, 45], "K'": [5, 7], "R": [46, 47], "K": [[10, 14], [12, 16]], "V": [[12, 16], [13, 19]], "example": [1, 53]}, {"END": [98, 99], "A'": [94, 96], "V'": [60, 61], "Q": [91, 92], "K'": [58, 60], "R": [93, 94], "K": [[62, 65], [63, 66]], "V": [[63, 66], [64, 67]], "example": [54, 100]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Indecisive Karen. Apathetic Thomas. Apathetic William. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Informed Betty. Informed Nancy. Unreasonable Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the boy? Answer: Yes\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [9, 11], "Q": [45, 49], "K'": [5, 9], "R": [50, 51], "K": [[12, 17], [15, 20]], "V": [[15, 20], [16, 21]], "example": [1, 57]}, {"END": [106, 107], "A'": [102, 104], "V'": [73, 74], "Q": [98, 100], "K'": [70, 73], "R": [101, 102], "K": [[62, 66], [64, 68]], "V": [[64, 68], [65, 69]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Indecisive Karen. Apathetic Thomas. Apathetic William. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Informed Betty. Informed Nancy. Unreasonable Edward. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n", "ranges": [{"END": [55, 56], "A'": [51, 53], "V'": [9, 11], "Q": [45, 49], "K'": [5, 9], "R": [50, 51], "K": [[12, 17], [15, 20]], "V": [[15, 20], [16, 21]], "example": [1, 57]}, {"END": [106, 107], "A'": [102, 104], "V'": [73, 74], "Q": [98, 100], "K'": [70, 73], "R": [101, 102], "K": [[62, 66], [64, 68]], "V": [[64, 68], [65, 69]], "example": [58, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Apathetic Steven. Apathetic Michael. Unfriendly Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Foolish Thomas. Strong Elizabeth. Strong Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who's powerful is not the boy? Answer: Yes\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [18, 19], "Q": [43, 47], "K'": [15, 18], "R": [48, 49], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 14]], "example": [1, 55]}, {"END": [104, 105], "A'": [100, 102], "V'": [63, 64], "Q": [97, 98], "K'": [60, 63], "R": [99, 100], "K": [[65, 69], [67, 71]], "V": [[67, 71], [68, 73]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Apathetic Steven. Apathetic Michael. Unfriendly Nancy. >. Answer with Yes or No. Can it be inferred from the premise that the one who's unmotivated is not the girl? Answer: Yes\n Premise: < Foolish Thomas. Strong Elizabeth. Strong Sandra. >. Answer with Yes or No. Can it be inferred from the premise that the one who's powerful is not the girl? Answer: No\n", "ranges": [{"END": [53, 54], "A'": [49, 51], "V'": [18, 19], "Q": [43, 47], "K'": [15, 18], "R": [48, 49], "K": [[5, 10], [8, 13]], "V": [[8, 13], [9, 14]], "example": [1, 55]}, {"END": [104, 105], "A'": [100, 102], "V'": [63, 64], "Q": [97, 98], "K'": [60, 63], "R": [99, 100], "K": [[65, 69], [67, 71]], "V": [[67, 71], [68, 73]], "example": [56, 106]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Informed Elizabeth. Informed Betty. Dishonest David. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n Premise: < Silent John. Quiet Mary. Quiet Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who's silent is not the boy? Answer: Yes\n", "ranges": [{"END": [50, 51], "A'": [46, 48], "V'": [17, 18], "Q": [42, 44], "K'": [13, 17], "R": [45, 46], "K": [[5, 9], [7, 11]], "V": [[7, 11], [8, 12]], "example": [1, 52]}, {"END": [100, 101], "A'": [96, 98], "V'": [59, 60], "Q": [93, 94], "K'": [57, 59], "R": [95, 96], "K": [[61, 65], [63, 67]], "V": [[63, 67], [64, 69]], "example": [53, 102]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,genders_of_persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Premise: < Informed Elizabeth. Informed Betty. Dishonest David. >. Answer with Yes or No. Can it be inferred from the premise that the one who's knowledgeable is not the girl? Answer: No\n Premise: < Silent John. Quiet Mary. Quiet Karen. >. Answer with Yes or No. Can it be inferred from the premise that the one who's silent is not the girl? Answer: No\n", "ranges": [{"END": [50, 51], "A'": [46, 48], "V'": [17, 18], "Q": [42, 44], "K'": [13, 17], "R": [45, 46], "K": [[5, 9], [7, 11]], "V": [[7, 11], [8, 12]], "example": [1, 52]}, {"END": [100, 101], "A'": [96, 98], "V'": [59, 60], "Q": [93, 94], "K'": [57, 59], "R": [95, 96], "K": [[61, 65], [63, 67]], "V": [[63, 67], [64, 69]], "example": [53, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, altruistic, indecisive, pessimistic, sluggish and logical.\n< Norman Foster is negative. Zaha Hadid is inquiring. LeBron James is hesitant. >. In other words, the athlete is indecisive\n < Dr. Michio Kaku is slow. Richard Dawkins is rational. Usain Bolt is selfless. >. In other words, the athlete is altruistic\n", "ranges": [{"END": [62, 63], "A": [63, 66], "V": [49, 52], "Q": [59, 62], "K": [44, 48], "R": null, "K'": [[30, 36], [33, 40]], "V'": [[34, 41], [35, 43]], "example": [29, 66]}, {"END": [100, 101], "A": [101, 105], "V": [88, 90], "Q": [97, 100], "K": [83, 87], "R": null, "K'": [[68, 77], [74, 80]], "V'": [[75, 81], [76, 82]], "example": [67, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Simone Biles is decisive. Toni Morrison is unmotivated. Sonia Sotomayor is friendly. >. In other words, the athlete is resolute\n < Claude Monet is late. Kanye West is bold. Dr. Jane Goodall is trustworthy. >. In other words, the artist is tardy\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [30, 32], "Q": [60, 63], "K": [25, 29], "R": null, "K'": [[33, 44], [38, 51]], "V'": [[39, 52], [43, 53]], "example": [24, 66]}, {"END": [99, 100], "A": [100, 102], "V": [72, 73], "Q": [97, 99], "K": [68, 71], "R": null, "K'": [[74, 81], [78, 86]], "V'": [[79, 87], [80, 90]], "example": [67, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< Vincent van Gogh is active. Marie Curie is creative. Alex Morgan is short. >. In other words, the athlete is low\n < Julia Roberts is unfaithful. Jeff Bezos is irresponsible. Rem Koolhaas is punctual. >. In other words, the actor is disloyal\n", "ranges": [{"END": [57, 58], "A": [58, 59], "V": [46, 47], "Q": [54, 57], "K": [43, 45], "R": null, "K'": [[28, 36], [33, 39]], "V'": [[34, 40], [35, 42]], "example": [27, 59]}, {"END": [95, 96], "A": [96, 99], "V": [64, 68], "Q": [93, 95], "K": [61, 63], "R": null, "K'": [[69, 77], [72, 82]], "V'": [[73, 83], [76, 86]], "example": [60, 99]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Roger Federer is beautiful. George Orwell is splotless. Dr. Ben Carson is intolerant. >. In other words, the author is clean\n < Mark Twain is unmotivated. Clarence Darrow is witty. Richard Branson is pessimistic. >. In other words, the entrepreneur is negative\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [36, 39], "Q": [57, 59], "K": [32, 35], "R": null, "K'": [[26, 40], [29, 45]], "V'": [[30, 46], [31, 50]], "example": [25, 61]}, {"END": [100, 101], "A": [101, 102], "V": [85, 89], "Q": [96, 100], "K": [81, 84], "R": null, "K'": [[63, 72], [66, 76]], "V'": [[67, 77], [71, 80]], "example": [62, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include ugly, candid, hesitant, fortunate, driven and reserved.\n< Rihanna is lucky. Sonia Sotomayor is introverted. Mies van der Rohe is unattractive. >. In other words, the architect is ugly\n < Ieoh Ming Pei is tentative. Natalie Portman is honest. Albert Einstein is ambitious. >. In other words, the architect is hesitant\n", "ranges": [{"END": [63, 64], "A": [64, 65], "V": [50, 54], "Q": [61, 63], "K": [43, 49], "R": null, "K'": [[24, 31], [27, 38]], "V'": [[28, 39], [30, 42]], "example": [23, 65]}, {"END": [101, 102], "A": [102, 105], "V": [75, 77], "Q": [99, 101], "K": [67, 74], "R": null, "K'": [[78, 85], [82, 88]], "V'": [[83, 89], [84, 92]], "example": [66, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, fraudulent, rich, honest, compassionate and benevolent.\n< Jane Austen is candid. Steve Jobs is informed. Dr. Neil deGrasse Tyson is generous. >. In other words, the entrepreneur is knowledgeable\n < Meryl Streep is wealthy. Pablo Picasso is dishonest. Roger Federer is kind. >. In other words, the actor is rich\n", "ranges": [{"END": [64, 65], "A": [65, 67], "V": [39, 40], "Q": [60, 64], "K": [35, 38], "R": null, "K'": [[29, 41], [32, 50]], "V'": [[33, 51], [34, 53]], "example": [28, 67]}, {"END": [102, 103], "A": [103, 104], "V": [76, 78], "Q": [100, 102], "K": [69, 75], "R": null, "K'": [[79, 88], [82, 91]], "V'": [[83, 92], [87, 93]], "example": [68, 104]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Georgia O'Keeffe is indecisive. Cristiano Ronaldo is full. Marie Curie is strong. >. In other words, the scientist is powerful\n < Kanye West is listless. Marie Curie is cozy. Stephen King is interesting. >. In other words, the author is fascinating\n", "ranges": [{"END": [59, 60], "A": [60, 61], "V": [48, 49], "Q": [56, 59], "K": [44, 47], "R": null, "K'": [[25, 36], [31, 41]], "V'": [[32, 42], [35, 43]], "example": [24, 61]}, {"END": [91, 92], "A": [92, 95], "V": [81, 82], "Q": [89, 91], "K": [78, 80], "R": null, "K'": [[63, 71], [67, 74]], "V'": [[68, 75], [70, 77]], "example": [62, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unattractive, rude, filthy, careful, failing and dirty.\n< Warren Buffett is ugly. Lady Gaga is impolite. Dr. Sanjay Gupta is cautious. >. In other words, the entrepreneur is unattractive\n < Alex Morgan is unsuccessful. Sonia Sotomayor is filthy. Kanye West is dirty. >. In other words, the lawyer is dirty\n", "ranges": [{"END": [61, 62], "A": [62, 66], "V": [29, 30], "Q": [57, 61], "K": [25, 28], "R": null, "K'": [[31, 39], [34, 46]], "V'": [[35, 47], [38, 50]], "example": [24, 66]}, {"END": [101, 102], "A": [102, 103], "V": [83, 85], "Q": [99, 101], "K": [75, 82], "R": null, "K'": [[68, 86], [70, 90]], "V'": [[71, 91], [74, 92]], "example": [67, 103]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indecisive, pessimistic, logical, curious, sluggish and altruistic.\nPremise: < Norman Foster is negative. Zaha Hadid is inquiring. LeBron James is hesitant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is pessimistic? Answer: No\n Premise: < Sonia Sotomayor is slow. Dr. Michio Kaku is rational. Jane Goodall is selfless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is altruistic? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [83, 87], "V": [53, 56], "Q": [79, 82], "K": [48, 52], "R": null, "K'": [[34, 40], [37, 44]], "V'": [[38, 45], [39, 47]], "example": [29, 91]}, {"END": [154, 155], "A": [148, 152], "V": [119, 121], "Q": [144, 147], "K": [115, 118], "R": null, "K'": [[96, 106], [103, 112]], "V'": [[104, 113], [105, 114]], "example": [92, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indecisive, pessimistic, sluggish, altruistic, logical and curious.\nPremise: < Norman Foster is negative. Zaha Hadid is inquiring. LeBron James is hesitant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is pessimistic? Answer: No\n Premise: < Sonia Sotomayor is slow. Dr. Michio Kaku is rational. Jane Goodall is selfless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is logical? Answer: No\n", "ranges": [{"END": [89, 90], "A": [83, 87], "V": [53, 56], "Q": [79, 82], "K": [48, 52], "R": null, "K'": [[34, 40], [37, 44]], "V'": [[38, 45], [39, 47]], "example": [29, 91]}, {"END": [151, 152], "A": [148, 149], "V": [119, 121], "Q": [144, 147], "K": [115, 118], "R": null, "K'": [[96, 106], [103, 112]], "V'": [[104, 113], [105, 114]], "example": [92, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Louis Sullivan is poor. Pablo Picasso is late. Tom Brady is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is selfish? Answer: Yes\n Premise: < J.R.R. Tolkien is negligent. Oprah Winfrey is hardworking. Vincent van Gogh is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is diligent? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [79, 81], "V": [48, 52], "Q": [75, 78], "K": [44, 47], "R": null, "K'": [[31, 38], [35, 41]], "V'": [[36, 42], [37, 43]], "example": [26, 85]}, {"END": [153, 154], "A": [149, 151], "V": [110, 112], "Q": [144, 148], "K": [104, 109], "R": null, "K'": [[90, 113], [99, 118]], "V'": [[100, 119], [103, 121]], "example": [86, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Louis Sullivan is poor. Pablo Picasso is late. Tom Brady is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is selfish? Answer: Yes\n Premise: < J.R.R. Tolkien is negligent. Oprah Winfrey is hardworking. Vincent van Gogh is optimistic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is irresponsible? Answer: No\n", "ranges": [{"END": [83, 84], "A": [79, 81], "V": [48, 52], "Q": [75, 78], "K": [44, 47], "R": null, "K'": [[31, 38], [35, 41]], "V'": [[36, 42], [37, 43]], "example": [26, 85]}, {"END": [154, 155], "A": [149, 152], "V": [110, 112], "Q": [144, 148], "K": [104, 109], "R": null, "K'": [[90, 113], [99, 118]], "V'": [[100, 119], [103, 121]], "example": [86, 156]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Carl Sagan is energetic. Elon Musk is informed. Leonardo da Vinci is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is disloyal? Answer: No\n Premise: < Stephen Hawking is unhealthy. Dr. Jane Goodall is unattractive. Dr. Ben Carson is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is sick? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [33, 36], "Q": [77, 80], "K": [29, 32], "R": null, "K'": [[37, 44], [41, 49]], "V'": [[42, 50], [43, 54]], "example": [24, 88]}, {"END": [153, 154], "A": [150, 151], "V": [97, 101], "Q": [146, 149], "K": [93, 96], "R": null, "K'": [[102, 113], [107, 118]], "V'": [[108, 119], [112, 123]], "example": [89, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Carl Sagan is energetic. Elon Musk is informed. Leonardo da Vinci is unfaithful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is disloyal? Answer: No\n Premise: < Stephen Hawking is unhealthy. Dr. Jane Goodall is unattractive. Dr. Ben Carson is intolerant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is impatient? Answer: No\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [33, 36], "Q": [77, 80], "K": [29, 32], "R": null, "K'": [[37, 44], [41, 49]], "V'": [[42, 50], [43, 54]], "example": [24, 88]}, {"END": [155, 156], "A": [150, 153], "V": [97, 101], "Q": [146, 149], "K": [93, 96], "R": null, "K'": [[102, 113], [107, 118]], "V'": [[108, 119], [112, 123]], "example": [89, 157]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Rosie Franklin is ambitious. Hillary Clinton is diligent. Pablo Picasso is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is driven? Answer: No\n Premise: < Toni Morrison is daring. Albert Einstein is keen. Natalie Portman is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is bold? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [38, 40], "Q": [70, 72], "K": [33, 37], "R": null, "K'": [[25, 41], [28, 44]], "V'": [[29, 45], [32, 47]], "example": [20, 78]}, {"END": [133, 134], "A": [130, 131], "V": [89, 91], "Q": [127, 129], "K": [83, 88], "R": null, "K'": [[92, 98], [95, 102]], "V'": [[96, 103], [97, 104]], "example": [79, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Rosie Franklin is ambitious. Hillary Clinton is diligent. Pablo Picasso is inquiring. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is driven? Answer: No\n Premise: < Toni Morrison is daring. Albert Einstein is keen. Natalie Portman is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is sharp? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [38, 40], "Q": [70, 72], "K": [33, 37], "R": null, "K'": [[25, 41], [28, 44]], "V'": [[29, 45], [32, 47]], "example": [20, 78]}, {"END": [133, 134], "A": [130, 131], "V": [89, 91], "Q": [127, 129], "K": [83, 88], "R": null, "K'": [[92, 98], [95, 102]], "V'": [[96, 103], [97, 104]], "example": [79, 135]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Tom Hanks is altruistic. Gloria Allred is impatient. Simone Biles is careful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is cautious? Answer: Yes\n Premise: < Tom Brady is apathetic. Norman Foster is humble. Frank Lloyd Wright is determined. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is unmotivated? Answer: Yes\n", "ranges": [{"END": [91, 92], "A": [86, 89], "V": [58, 59], "Q": [82, 85], "K": [53, 57], "R": null, "K'": [[35, 44], [38, 48]], "V'": [[39, 49], [43, 52]], "example": [30, 93]}, {"END": [151, 152], "A": [145, 149], "V": [102, 105], "Q": [141, 144], "K": [98, 101], "R": null, "K'": [[106, 113], [109, 116]], "V'": [[110, 117], [112, 118]], "example": [94, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Tom Hanks is altruistic. Gloria Allred is impatient. Simone Biles is careful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is cautious? Answer: Yes\n Premise: < Tom Brady is apathetic. Norman Foster is humble. Frank Lloyd Wright is determined. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is modest? Answer: No\n", "ranges": [{"END": [91, 92], "A": [86, 89], "V": [58, 59], "Q": [82, 85], "K": [53, 57], "R": null, "K'": [[35, 44], [38, 48]], "V'": [[39, 49], [43, 52]], "example": [30, 93]}, {"END": [149, 150], "A": [145, 147], "V": [102, 105], "Q": [141, 144], "K": [98, 101], "R": null, "K'": [[106, 113], [109, 116]], "V'": [[110, 117], [112, 118]], "example": [94, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Dr. Gabor Mat\u00e9 is filled. Jane Goodall is strong. Kanye West is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is full? Answer: No\n Premise: < Albert Einstein is smart. Barack Obama is quiet. Serena Williams is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is silent? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [40, 41], "Q": [74, 77], "K": [36, 39], "R": null, "K'": [[27, 42], [33, 46]], "V'": [[34, 47], [35, 51]], "example": [22, 83]}, {"END": [137, 138], "A": [134, 135], "V": [99, 100], "Q": [131, 133], "K": [94, 98], "R": null, "K'": [[88, 101], [91, 104]], "V'": [[92, 105], [93, 108]], "example": [84, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Dr. Gabor Mat\u00e9 is filled. Jane Goodall is strong. Kanye West is lethargic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is full? Answer: No\n Premise: < Albert Einstein is smart. Barack Obama is quiet. Serena Williams is irresponsible. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is negligent? Answer: No\n", "ranges": [{"END": [81, 82], "A": [78, 79], "V": [40, 41], "Q": [74, 77], "K": [36, 39], "R": null, "K'": [[27, 42], [33, 46]], "V'": [[34, 47], [35, 51]], "example": [22, 83]}, {"END": [139, 140], "A": [134, 137], "V": [99, 100], "Q": [131, 133], "K": [94, 98], "R": null, "K'": [[88, 101], [91, 104]], "V'": [[92, 105], [93, 108]], "example": [84, 141]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include candid, uninformed, timely, comfortable, dependable and blunt.\nPremise: < Dr. Michio Kaku is honest. Charlize Theron is dull. Dr. Sanjay Gupta is cozy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is candid? Answer: No\n Premise: < Jackson Pollock is punctual. Dr. Sylvia Earle is responsible. Julia Roberts is ignorant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is timely? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [44, 46], "Q": [80, 82], "K": [38, 43], "R": null, "K'": [[29, 47], [35, 54]], "V'": [[36, 55], [37, 57]], "example": [24, 88]}, {"END": [145, 146], "A": [141, 143], "V": [97, 100], "Q": [138, 140], "K": [93, 96], "R": null, "K'": [[101, 110], [107, 112]], "V'": [[108, 113], [109, 115]], "example": [89, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dependable, comfortable, blunt, timely, candid and uninformed.\nPremise: < Dr. Michio Kaku is honest. Charlize Theron is dull. Dr. Sanjay Gupta is cozy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is candid? Answer: No\n Premise: < Jackson Pollock is punctual. Dr. Sylvia Earle is responsible. Julia Roberts is ignorant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is dependable? Answer: No\n", "ranges": [{"END": [86, 87], "A": [83, 84], "V": [44, 46], "Q": [80, 82], "K": [38, 43], "R": null, "K'": [[29, 47], [35, 54]], "V'": [[36, 55], [37, 57]], "example": [24, 88]}, {"END": [145, 146], "A": [141, 143], "V": [97, 100], "Q": [138, 140], "K": [93, 96], "R": null, "K'": [[101, 110], [107, 112]], "V'": [[108, 113], [109, 115]], "example": [89, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include healthy, late, humorous, dull, noisy and tardy.\nPremise: < Beyonc\u00e9 is late. Richard Branson is fine. Toni Morrison is tardy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is late? Answer: Yes\n Premise: < Ed Sheeran is loud. Sonia Sotomayor is blunt. Rem Koolhaas is funny. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is humorous? Answer: Yes\n", "ranges": [{"END": [78, 79], "A": [75, 76], "V": [47, 49], "Q": [72, 74], "K": [41, 46], "R": null, "K'": [[29, 35], [32, 38]], "V'": [[33, 39], [34, 40]], "example": [24, 80]}, {"END": [141, 142], "A": [137, 139], "V": [109, 111], "Q": [134, 136], "K": [103, 108], "R": null, "K'": [[85, 92], [89, 99]], "V'": [[90, 100], [91, 102]], "example": [81, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tardy, humorous, healthy, late, dull and noisy.\nPremise: < Beyonc\u00e9 is late. Richard Branson is fine. Toni Morrison is tardy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is late? Answer: Yes\n Premise: < Ed Sheeran is loud. Sonia Sotomayor is blunt. Rem Koolhaas is funny. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is dull? Answer: No\n", "ranges": [{"END": [78, 79], "A": [75, 76], "V": [47, 49], "Q": [72, 74], "K": [41, 46], "R": null, "K'": [[29, 35], [32, 38]], "V'": [[33, 39], [34, 40]], "example": [24, 80]}, {"END": [141, 142], "A": [137, 139], "V": [109, 111], "Q": [134, 136], "K": [103, 108], "R": null, "K'": [[85, 92], [89, 99]], "V'": [[90, 100], [91, 102]], "example": [81, 143]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, altruistic, indecisive, pessimistic, sluggish and logical.\n< Negative Norman Foster. Inquiring Zaha Hadid. Hesitant LeBron James. >. In other words, the athlete is indecisive\n < Slow Dr. Michio Kaku. Rational Richard Dawkins. Selfless Usain Bolt. >. In other words, the athlete is altruistic\n", "ranges": [{"END": [62, 63], "A": [63, 66], "V": [44, 48], "Q": [59, 62], "K": [48, 52], "R": null, "K'": [[32, 39], [35, 43]], "V'": [[30, 36], [32, 39]], "example": [29, 66]}, {"END": [99, 100], "A": [100, 104], "V": [83, 85], "Q": [96, 99], "K": [85, 89], "R": null, "K'": [[70, 79], [76, 82]], "V'": [[68, 77], [70, 79]], "example": [67, 104]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include affable, apathetic, reliable, brave, resolute and tardy.\n< Decisive Simone Biles. Unmotivated Toni Morrison. Friendly Sonia Sotomayor. >. In other words, the athlete is resolute\n < Late Claude Monet. Bold Kanye West. Trustworthy Dr. Jane Goodall. >. In other words, the artist is tardy\n", "ranges": [{"END": [62, 63], "A": [63, 65], "V": [25, 28], "Q": [59, 62], "K": [28, 32], "R": null, "K'": [[37, 45], [42, 52]], "V'": [[33, 43], [37, 45]], "example": [24, 65]}, {"END": [96, 97], "A": [97, 99], "V": [67, 68], "Q": [94, 96], "K": [68, 71], "R": null, "K'": [[74, 82], [78, 87]], "V'": [[72, 79], [74, 82]], "example": [66, 99]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include innovative, timely, low, disloyal, negligent and energetic.\n< Active Vincent van Gogh. Creative Marie Curie. Short Alex Morgan. >. In other words, the athlete is low\n < Unfaithful Julia Roberts. Irresponsible Jeff Bezos. Punctual Rem Koolhaas. >. In other words, the actor is disloyal\n", "ranges": [{"END": [53, 54], "A": [54, 55], "V": [40, 41], "Q": [50, 53], "K": [41, 43], "R": null, "K'": [[29, 36], [34, 39]], "V'": [[28, 35], [29, 36]], "example": [27, 55]}, {"END": [88, 89], "A": [89, 92], "V": [57, 61], "Q": [86, 88], "K": [61, 63], "R": null, "K'": [[67, 74], [70, 79]], "V'": [[64, 71], [67, 74]], "example": [56, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include apathetic, attractive, impatient, negative, funny and clean.\n< Beautiful Roger Federer. Splotless George Orwell. Intolerant Dr. Ben Carson. >. In other words, the author is clean\n < Unmotivated Mark Twain. Witty Clarence Darrow. Pessimistic Richard Branson. >. In other words, the entrepreneur is negative\n", "ranges": [{"END": [56, 57], "A": [57, 58], "V": [31, 34], "Q": [54, 56], "K": [34, 37], "R": null, "K'": [[27, 42], [30, 47]], "V'": [[26, 38], [27, 42]], "example": [25, 58]}, {"END": [94, 95], "A": [95, 96], "V": [76, 80], "Q": [90, 94], "K": [80, 83], "R": null, "K'": [[64, 71], [67, 75]], "V'": [[60, 68], [64, 71]], "example": [59, 96]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include ugly, candid, hesitant, fortunate, driven and reserved.\n< Lucky Rihanna. Introverted Sonia Sotomayor. Unattractive Mies van der Rohe. >. In other words, the architect is ugly\n < Tentative Ieoh Ming Pei. Honest Natalie Portman. Ambitious Albert Einstein. >. In other words, the architect is hesitant\n", "ranges": [{"END": [61, 62], "A": [62, 63], "V": [42, 46], "Q": [59, 61], "K": [46, 52], "R": null, "K'": [[26, 34], [29, 41]], "V'": [[24, 30], [26, 34]], "example": [23, 63]}, {"END": [98, 99], "A": [99, 102], "V": [65, 68], "Q": [96, 98], "K": [68, 75], "R": null, "K'": [[78, 86], [82, 89]], "V'": [[76, 83], [78, 86]], "example": [64, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, fraudulent, rich, honest, compassionate and benevolent.\n< Candid Jane Austen. Informed Steve Jobs. Generous Dr. Neil deGrasse Tyson. >. In other words, the entrepreneur is knowledgeable\n < Wealthy Meryl Streep. Dishonest Pablo Picasso. Kind Roger Federer. >. In other words, the actor is rich\n", "ranges": [{"END": [63, 64], "A": [64, 66], "V": [35, 37], "Q": [59, 63], "K": [37, 40], "R": null, "K'": [[31, 43], [34, 52]], "V'": [[29, 41], [31, 43]], "example": [28, 66]}, {"END": [99, 100], "A": [100, 101], "V": [68, 71], "Q": [97, 99], "K": [71, 77], "R": null, "K'": [[82, 87], [85, 90]], "V'": [[78, 86], [82, 87]], "example": [67, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include hesitant, comfortable, fascinating, passive, powerful and filled.\n< Indecisive Georgia O'Keeffe. Full Cristiano Ronaldo. Strong Marie Curie. >. In other words, the scientist is powerful\n < Listless Kanye West. Cozy Marie Curie. Interesting Stephen King. >. In other words, the author is fascinating\n", "ranges": [{"END": [58, 59], "A": [59, 60], "V": [43, 45], "Q": [55, 58], "K": [45, 48], "R": null, "K'": [[29, 37], [35, 42]], "V'": [[25, 36], [29, 37]], "example": [24, 60]}, {"END": [88, 89], "A": [89, 92], "V": [75, 77], "Q": [86, 88], "K": [77, 79], "R": null, "K'": [[64, 71], [68, 74]], "V'": [[62, 69], [64, 71]], "example": [61, 92]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unattractive, rude, filthy, careful, failing and dirty.\n< Ugly Warren Buffett. Impolite Lady Gaga. Cautious Dr. Sanjay Gupta. >. In other words, the entrepreneur is unattractive\n < Unsuccessful Alex Morgan. Filthy Sonia Sotomayor. Dirty Kanye West. >. In other words, the lawyer is dirty\n", "ranges": [{"END": [59, 60], "A": [60, 64], "V": [25, 27], "Q": [55, 59], "K": [27, 30], "R": null, "K'": [[34, 41], [37, 48]], "V'": [[31, 38], [34, 41]], "example": [24, 64]}, {"END": [97, 98], "A": [98, 99], "V": [72, 74], "Q": [95, 97], "K": [74, 81], "R": null, "K'": [[69, 84], [71, 88]], "V'": [[66, 82], [69, 84]], "example": [65, 99]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indecisive, pessimistic, logical, curious, sluggish and altruistic.\nPremise: < Negative Norman Foster. Inquiring Zaha Hadid. Hesitant LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is pessimistic? Answer: No\n Premise: < Slow Sonia Sotomayor. Rational Dr. Michio Kaku. Selfless Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is altruistic? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [83, 87], "V": [48, 52], "Q": [79, 82], "K": [52, 56], "R": null, "K'": [[36, 43], [39, 47]], "V'": [[34, 40], [36, 43]], "example": [29, 91]}, {"END": [153, 154], "A": [147, 151], "V": [115, 117], "Q": [143, 146], "K": [117, 120], "R": null, "K'": [[98, 108], [105, 114]], "V'": [[96, 106], [98, 108]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indecisive, pessimistic, sluggish, altruistic, logical and curious.\nPremise: < Negative Norman Foster. Inquiring Zaha Hadid. Hesitant LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is pessimistic? Answer: No\n Premise: < Slow Sonia Sotomayor. Rational Dr. Michio Kaku. Selfless Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is logical? Answer: No\n", "ranges": [{"END": [89, 90], "A": [83, 87], "V": [48, 52], "Q": [79, 82], "K": [52, 56], "R": null, "K'": [[36, 43], [39, 47]], "V'": [[34, 40], [36, 43]], "example": [29, 91]}, {"END": [150, 151], "A": [147, 148], "V": [115, 117], "Q": [143, 146], "K": [117, 120], "R": null, "K'": [[98, 108], [105, 114]], "V'": [[96, 106], [98, 108]], "example": [92, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, diligent, tardy, positive, irresponsible and impoverished.\nPremise: < Poor Louis Sullivan. Late Pablo Picasso. Egotistical Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is selfish? Answer: Yes\n Premise: < Negligent J.R.R. Tolkien. Hardworking Oprah Winfrey. Optimistic Vincent van Gogh. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is diligent? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [77, 79], "V": [43, 47], "Q": [73, 76], "K": [47, 50], "R": null, "K'": [[33, 39], [37, 42]], "V'": [[31, 38], [33, 39]], "example": [26, 83]}, {"END": [149, 150], "A": [145, 147], "V": [101, 103], "Q": [140, 144], "K": [103, 108], "R": null, "K'": [[91, 112], [100, 117]], "V'": [[88, 109], [91, 112]], "example": [84, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include selfish, irresponsible, positive, impoverished, diligent and tardy.\nPremise: < Poor Louis Sullivan. Late Pablo Picasso. Egotistical Tom Brady. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is selfish? Answer: Yes\n Premise: < Negligent J.R.R. Tolkien. Hardworking Oprah Winfrey. Optimistic Vincent van Gogh. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is irresponsible? Answer: No\n", "ranges": [{"END": [81, 82], "A": [77, 79], "V": [43, 47], "Q": [73, 76], "K": [47, 50], "R": null, "K'": [[33, 39], [37, 42]], "V'": [[31, 38], [33, 39]], "example": [26, 83]}, {"END": [150, 151], "A": [145, 148], "V": [101, 103], "Q": [140, 144], "K": [103, 108], "R": null, "K'": [[91, 112], [100, 117]], "V'": [[88, 109], [91, 112]], "example": [84, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include impatient, active, disloyal, sick, knowledgeable and ugly.\nPremise: < Energetic Carl Sagan. Informed Elon Musk. Unfaithful Leonardo da Vinci. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is disloyal? Answer: No\n Premise: < Unhealthy Stephen Hawking. Unattractive Dr. Jane Goodall. Intolerant Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is sick? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [29, 32], "Q": [75, 78], "K": [32, 35], "R": null, "K'": [[38, 47], [42, 52]], "V'": [[36, 43], [38, 47]], "example": [24, 86]}, {"END": [148, 149], "A": [145, 146], "V": [91, 95], "Q": [141, 144], "K": [95, 98], "R": null, "K'": [[103, 113], [108, 118]], "V'": [[99, 109], [103, 113]], "example": [87, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, sick, active, disloyal, impatient and ugly.\nPremise: < Energetic Carl Sagan. Informed Elon Musk. Unfaithful Leonardo da Vinci. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is disloyal? Answer: No\n Premise: < Unhealthy Stephen Hawking. Unattractive Dr. Jane Goodall. Intolerant Dr. Ben Carson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is impatient? Answer: No\n", "ranges": [{"END": [84, 85], "A": [79, 82], "V": [29, 32], "Q": [75, 78], "K": [32, 35], "R": null, "K'": [[38, 47], [42, 52]], "V'": [[36, 43], [38, 47]], "example": [24, 86]}, {"END": [150, 151], "A": [145, 148], "V": [91, 95], "Q": [141, 144], "K": [95, 98], "R": null, "K'": [[103, 113], [108, 118]], "V'": [[99, 109], [103, 113]], "example": [87, 152]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, hardworking, sharp, curious, candid and driven.\nPremise: < Ambitious Rosie Franklin. Diligent Hillary Clinton. Inquiring Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is driven? Answer: No\n Premise: < Daring Toni Morrison. Keen Albert Einstein. Honest Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is bold? Answer: Yes\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [32, 35], "Q": [69, 71], "K": [35, 39], "R": null, "K'": [[28, 43], [31, 46]], "V'": [[25, 40], [28, 43]], "example": [20, 77]}, {"END": [131, 132], "A": [128, 129], "V": [82, 84], "Q": [125, 127], "K": [84, 89], "R": null, "K'": [[92, 98], [95, 102]], "V'": [[90, 96], [92, 98]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, bold, sharp, driven, candid and hardworking.\nPremise: < Ambitious Rosie Franklin. Diligent Hillary Clinton. Inquiring Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is driven? Answer: No\n Premise: < Daring Toni Morrison. Keen Albert Einstein. Honest Natalie Portman. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is sharp? Answer: No\n", "ranges": [{"END": [75, 76], "A": [72, 73], "V": [32, 35], "Q": [69, 71], "K": [35, 39], "R": null, "K'": [[28, 43], [31, 46]], "V'": [[25, 40], [28, 43]], "example": [20, 77]}, {"END": [131, 132], "A": [128, 129], "V": [82, 84], "Q": [125, 127], "K": [84, 89], "R": null, "K'": [[92, 98], [95, 102]], "V'": [[90, 96], [92, 98]], "example": [78, 133]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unmotivated, cautious, resolute, intolerant, modest and selfless.\nPremise: < Altruistic Tom Hanks. Impatient Gloria Allred. Careful Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is cautious? Answer: Yes\n Premise: < Apathetic Tom Brady. Humble Norman Foster. Determined Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is unmotivated? Answer: Yes\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [51, 53], "Q": [80, 83], "K": [53, 57], "R": null, "K'": [[39, 46], [42, 50]], "V'": [[35, 43], [39, 46]], "example": [30, 91]}, {"END": [148, 149], "A": [142, 146], "V": [96, 99], "Q": [138, 141], "K": [99, 102], "R": null, "K'": [[105, 112], [108, 115]], "V'": [[103, 109], [105, 112]], "example": [92, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include resolute, selfless, modest, intolerant, cautious and unmotivated.\nPremise: < Altruistic Tom Hanks. Impatient Gloria Allred. Careful Simone Biles. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is cautious? Answer: Yes\n Premise: < Apathetic Tom Brady. Humble Norman Foster. Determined Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is modest? Answer: No\n", "ranges": [{"END": [89, 90], "A": [84, 87], "V": [51, 53], "Q": [80, 83], "K": [53, 57], "R": null, "K'": [[39, 46], [42, 50]], "V'": [[35, 43], [39, 46]], "example": [30, 91]}, {"END": [146, 147], "A": [142, 144], "V": [96, 99], "Q": [138, 141], "K": [99, 102], "R": null, "K'": [[105, 112], [108, 115]], "V'": [[103, 109], [105, 112]], "example": [92, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include clever, silent, negligent, full, passive and powerful.\nPremise: < Filled Dr. Gabor Mat\u00e9. Strong Jane Goodall. Lethargic Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is full? Answer: No\n Premise: < Smart Albert Einstein. Quiet Barack Obama. Irresponsible Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is silent? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [36, 38], "Q": [73, 76], "K": [38, 41], "R": null, "K'": [[29, 46], [35, 50]], "V'": [[27, 42], [29, 46]], "example": [22, 82]}, {"END": [135, 136], "A": [132, 133], "V": [93, 95], "Q": [129, 131], "K": [95, 99], "R": null, "K'": [[89, 103], [92, 106]], "V'": [[87, 100], [89, 103]], "example": [83, 137]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include silent, negligent, full, passive, powerful and clever.\nPremise: < Filled Dr. Gabor Mat\u00e9. Strong Jane Goodall. Lethargic Kanye West. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is full? Answer: No\n Premise: < Smart Albert Einstein. Quiet Barack Obama. Irresponsible Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is negligent? Answer: No\n", "ranges": [{"END": [80, 81], "A": [77, 78], "V": [36, 38], "Q": [73, 76], "K": [38, 41], "R": null, "K'": [[29, 46], [35, 50]], "V'": [[27, 42], [29, 46]], "example": [22, 82]}, {"END": [137, 138], "A": [132, 135], "V": [93, 95], "Q": [129, 131], "K": [95, 99], "R": null, "K'": [[89, 103], [92, 106]], "V'": [[87, 100], [89, 103]], "example": [83, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include candid, uninformed, timely, comfortable, dependable and blunt.\nPremise: < Honest Dr. Michio Kaku. Dull Charlize Theron. Cozy Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is candid? Answer: No\n Premise: < Punctual Jackson Pollock. Responsible Dr. Sylvia Earle. Ignorant Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is timely? Answer: Yes\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [38, 40], "Q": [78, 80], "K": [40, 45], "R": null, "K'": [[31, 48], [37, 55]], "V'": [[29, 46], [31, 48]], "example": [24, 86]}, {"END": [144, 145], "A": [140, 142], "V": [91, 94], "Q": [137, 139], "K": [94, 97], "R": null, "K'": [[102, 112], [108, 114]], "V'": [[98, 109], [102, 112]], "example": [87, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dependable, comfortable, blunt, timely, candid and uninformed.\nPremise: < Honest Dr. Michio Kaku. Dull Charlize Theron. Cozy Dr. Sanjay Gupta. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is candid? Answer: No\n Premise: < Punctual Jackson Pollock. Responsible Dr. Sylvia Earle. Ignorant Julia Roberts. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is dependable? Answer: No\n", "ranges": [{"END": [84, 85], "A": [81, 82], "V": [38, 40], "Q": [78, 80], "K": [40, 45], "R": null, "K'": [[31, 48], [37, 55]], "V'": [[29, 46], [31, 48]], "example": [24, 86]}, {"END": [144, 145], "A": [140, 142], "V": [91, 94], "Q": [137, 139], "K": [94, 97], "R": null, "K'": [[102, 112], [108, 114]], "V'": [[98, 109], [102, 112]], "example": [87, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include healthy, late, humorous, dull, noisy and tardy.\nPremise: < Late Beyonc\u00e9. Fine Richard Branson. Tardy Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is late? Answer: Yes\n Premise: < Loud Ed Sheeran. Blunt Sonia Sotomayor. Funny Rem Koolhaas. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is humorous? Answer: Yes\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [39, 42], "Q": [70, 72], "K": [42, 47], "R": null, "K'": [[30, 35], [33, 38]], "V'": [[29, 34], [30, 35]], "example": [24, 78]}, {"END": [137, 138], "A": [133, 135], "V": [100, 102], "Q": [130, 132], "K": [102, 107], "R": null, "K'": [[85, 92], [89, 99]], "V'": [[83, 90], [85, 92]], "example": [79, 139]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tardy, humorous, healthy, late, dull and noisy.\nPremise: < Late Beyonc\u00e9. Fine Richard Branson. Tardy Toni Morrison. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is late? Answer: Yes\n Premise: < Loud Ed Sheeran. Blunt Sonia Sotomayor. Funny Rem Koolhaas. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is dull? Answer: No\n", "ranges": [{"END": [76, 77], "A": [73, 74], "V": [39, 42], "Q": [70, 72], "K": [42, 47], "R": null, "K'": [[30, 35], [33, 38]], "V'": [[29, 34], [30, 35]], "example": [24, 78]}, {"END": [137, 138], "A": [133, 135], "V": [100, 102], "Q": [130, 132], "K": [102, 107], "R": null, "K'": [[85, 92], [89, 99]], "V'": [[83, 90], [85, 92]], "example": [79, 139]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include curious, awkward, indecisive, pessimistic, tall and irrational.\n< Lionel Messi is negative. Usain Bolt is inquiring. Jennifer Lawrence is hesitant. >. In other words, the athlete is not indecisive\n < Tom Brady is high. Usain Bolt is unreasonable. Carl Sagan is uncomfortable. >. In other words, the athlete is not awkward\n", "ranges": [{"END": [61, 62], "A'": [62, 65], "V'": [47, 50], "Q": [57, 60], "K'": [43, 46], "R": [61, 62], "K": [[28, 35], [32, 39]], "V": [[33, 40], [34, 42]], "example": [27, 65]}, {"END": [101, 102], "A'": [102, 104], "V'": [86, 90], "Q": [97, 100], "K'": [82, 85], "R": [101, 102], "K": [[67, 73], [70, 77]], "V": [[71, 78], [72, 81]], "example": [66, 104]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include daring, lazy, rude, brave, apathetic and sick.\n< Ernest Hemingway is unmotivated. Simone Biles is indolent. Lionel Messi is bold. >. In other words, the athlete is not apathetic\n < Kanye West is bold. Vincent van Gogh is unhealthy. Pablo Picasso is impolite. >. In other words, the artist is not brave\n", "ranges": [{"END": [60, 61], "A'": [61, 64], "V'": [29, 33], "Q": [56, 59], "K'": [24, 28], "R": [60, 61], "K": [[34, 43], [38, 47]], "V": [[39, 48], [42, 49]], "example": [23, 64]}, {"END": [101, 102], "A'": [102, 103], "V'": [71, 72], "Q": [98, 100], "K'": [66, 70], "R": [101, 102], "K": [[73, 84], [78, 87]], "V": [[79, 88], [83, 91]], "example": [65, 103]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include punctual, impolite, creative, innovative, humorous and fortunate.\n< Sonia Sotomayor is lucky. Ruth Bader Ginsburg is funny. Marie Curie is innovative. >. In other words, the lawyer is not creative\n < Mark Zuckerberg is creative. Neil deGrasse Tyson is timely. Jeff Bezos is rude. >. In other words, the entrepreneur is not punctual\n", "ranges": [{"END": [66, 67], "A'": [67, 69], "V'": [54, 56], "Q": [63, 65], "K'": [50, 53], "R": [66, 67], "K": [[29, 40], [36, 46]], "V": [[37, 47], [39, 49]], "example": [28, 69]}, {"END": [108, 109], "A'": [109, 112], "V'": [87, 89], "Q": [103, 107], "K'": [79, 86], "R": [108, 109], "K": [[71, 90], [75, 93]], "V": [[76, 94], [78, 96]], "example": [70, 112]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indifferent, clean, decisive, attractive, humorous and impatient.\n< Agatha Christie is beautiful. Justin Bieber is splotless. J.R.R. Tolkien is intolerant. >. In other words, the author is not clean\n < Mies van der Rohe is uninterested. Sergey Brin is witty. Warren Buffett is resolute. >. In other words, the entrepreneur is not indifferent\n", "ranges": [{"END": [67, 68], "A'": [68, 69], "V'": [39, 42], "Q": [64, 66], "K'": [34, 38], "R": [67, 68], "K": [[26, 43], [31, 52]], "V": [[32, 53], [33, 57]], "example": [25, 69]}, {"END": [109, 110], "A'": [110, 112], "V'": [78, 81], "Q": [104, 108], "K'": [71, 77], "R": [109, 110], "K": [[82, 91], [86, 94]], "V": [[87, 95], [90, 97]], "example": [70, 112]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Alan Dershowitz is ambitious. Usain Bolt is diligent. Thurgood Marshall is inquiring. >. In other words, the lawyer is not hardworking\n < Lionel Messi is adventurous. Jane Austen is unfaithful. Usain Bolt is tentative. >. In other words, the athlete is not disloyal\n", "ranges": [{"END": [60, 61], "A'": [61, 63], "V'": [40, 42], "Q": [57, 59], "K'": [35, 39], "R": [60, 61], "K": [[25, 43], [30, 47]], "V": [[31, 48], [34, 50]], "example": [24, 63]}, {"END": [101, 102], "A'": [102, 105], "V'": [78, 82], "Q": [97, 100], "K'": [74, 77], "R": [101, 102], "K": [[65, 83], [69, 87]], "V": [[70, 88], [73, 90]], "example": [64, 105]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unreasonable, quick, candid, friendly, egotistical and knowledgeable.\n< Thurgood Marshall is informed. Michelangelo is fast. Johnnie Cochran is affable. >. In other words, the lawyer is not quick\n < Frida Kahlo is irrational. Jackson Pollock is honest. Dr. Anthony Fauci is selfish. >. In other words, the artist is not egotistical\n", "ranges": [{"END": [57, 58], "A'": [58, 59], "V'": [37, 38], "Q": [54, 56], "K'": [33, 36], "R": [57, 58], "K": [[26, 39], [30, 44]], "V": [[31, 45], [32, 47]], "example": [25, 59]}, {"END": [96, 97], "A'": [97, 101], "V'": [84, 86], "Q": [93, 95], "K'": [77, 83], "R": [96, 97], "K": [[61, 71], [66, 74]], "V": [[67, 75], [70, 76]], "example": [60, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include filled, sluggish, severe, powerful, correct and foolish.\n< Dr. Sanjay Gupta is full. Dr. Jane Goodall is stupid. Agatha Christie is right. >. In other words, the doctor is not correct\n < George Orwell is strong. Mark Twain is harsh. Usain Bolt is slow. >. In other words, the author is not sluggish\n", "ranges": [{"END": [58, 59], "A'": [59, 60], "V'": [47, 48], "Q": [55, 57], "K'": [41, 46], "R": [58, 59], "K": [[23, 33], [30, 38]], "V": [[31, 39], [32, 40]], "example": [22, 60]}, {"END": [91, 92], "A'": [92, 95], "V'": [80, 81], "Q": [88, 90], "K'": [75, 79], "R": [91, 92], "K": [[62, 68], [65, 71]], "V": [[66, 72], [67, 74]], "example": [61, 95]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include tentative, rational, rude, unattractive, careful and arrogant.\n< Dr. Mehmet Oz is ugly. Mark Zuckerberg is impolite. Warren Buffett is cautious. >. In other words, the entrepreneur is not unattractive\n < Sonia Sotomayor is boastful. Ruth Bader Ginsburg is hesitant. Georgia O'Keeffe is logical. >. In other words, the lawyer is not rational\n", "ranges": [{"END": [65, 66], "A'": [66, 70], "V'": [35, 36], "Q": [60, 64], "K'": [27, 34], "R": [65, 66], "K": [[37, 46], [41, 49]], "V": [[42, 50], [45, 53]], "example": [26, 70]}, {"END": [113, 114], "A'": [114, 115], "V'": [102, 103], "Q": [110, 112], "K'": [95, 101], "R": [113, 114], "K": [[72, 84], [79, 90]], "V": [[80, 91], [83, 94]], "example": [71, 115]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indecisive, pessimistic, logical, curious, sluggish and altruistic.\nPremise: < Lionel Messi is negative. Usain Bolt is inquiring. Jennifer Lawrence is hesitant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not pessimistic? Answer: No\n Premise: < Albert Einstein is slow. Rosie Franklin is rational. Eminem is selfless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not altruistic? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [84, 88], "V'": [53, 56], "Q": [79, 82], "K'": [49, 52], "R": [83, 84], "K": [[34, 41], [38, 45]], "V": [[39, 46], [40, 48]], "example": [29, 92]}, {"END": [149, 150], "A'": [143, 147], "V'": [113, 115], "Q": [138, 141], "K'": [109, 112], "R": [142, 143], "K": [[97, 103], [100, 106]], "V": [[101, 107], [102, 108]], "example": [93, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include indecisive, pessimistic, sluggish, altruistic, logical and curious.\nPremise: < Lionel Messi is negative. Usain Bolt is inquiring. Jennifer Lawrence is hesitant. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not pessimistic? Answer: No\n Premise: < Albert Einstein is slow. Rosie Franklin is rational. Eminem is selfless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not logical? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [84, 88], "V'": [53, 56], "Q": [79, 82], "K'": [49, 52], "R": [83, 84], "K": [[34, 41], [38, 45]], "V": [[39, 46], [40, 48]], "example": [29, 92]}, {"END": [146, 147], "A'": [143, 144], "V'": [113, 115], "Q": [138, 141], "K'": [109, 112], "R": [142, 143], "K": [[97, 103], [100, 106]], "V": [[101, 107], [102, 108]], "example": [93, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include thoughtful, brave, trustworthy, impoverished, intolerant and humorless.\nPremise: < Barack Obama is poor. Simone Biles is adventurous. Lionel Messi is reliable. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not trustworthy? Answer: No\n Premise: < Mark Twain is impatient. Ernest Hemingway is considerate. Beyonc\u00e9 is serious. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not humorless? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [38, 39], "Q": [78, 81], "K'": [33, 37], "R": [82, 83], "K": [[40, 49], [44, 53]], "V": [[45, 54], [48, 55]], "example": [28, 90]}, {"END": [147, 148], "A'": [143, 145], "V'": [115, 116], "Q": [139, 141], "K'": [111, 114], "R": [142, 143], "K": [[95, 103], [98, 107]], "V": [[99, 108], [102, 110]], "example": [91, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include trustworthy, impoverished, brave, humorless, intolerant and thoughtful.\nPremise: < Barack Obama is poor. Simone Biles is adventurous. Lionel Messi is reliable. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not trustworthy? Answer: No\n Premise: < Mark Twain is impatient. Ernest Hemingway is considerate. Beyonc\u00e9 is serious. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not thoughtful? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [38, 39], "Q": [78, 81], "K'": [33, 37], "R": [82, 83], "K": [[40, 49], [44, 53]], "V": [[45, 54], [48, 55]], "example": [28, 90]}, {"END": [147, 148], "A'": [143, 145], "V'": [115, 116], "Q": [139, 141], "K'": [111, 114], "R": [142, 143], "K": [[95, 103], [98, 107]], "V": [[99, 108], [102, 110]], "example": [91, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include boastful, knowledgeable, courteous, indolent, feeble and outgoing.\nPremise: < Dr. Temple Grandin is arrogant. Dr. Mehmet Oz is weak. J.K. Rowling is informed. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the doctor is not feeble? Answer: No\n Premise: < Serena Williams is polite. Brad Pitt is sociable. Cristiano Ronaldo is lazy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not outgoing? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [60, 61], "Q": [84, 86], "K'": [53, 59], "R": [87, 88], "K": [[33, 43], [38, 50]], "V": [[39, 51], [42, 52]], "example": [28, 94]}, {"END": [151, 152], "A'": [147, 149], "V'": [109, 111], "Q": [142, 145], "K'": [106, 108], "R": [146, 147], "K": [[99, 112], [102, 117]], "V": [[103, 118], [105, 119]], "example": [95, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include knowledgeable, outgoing, feeble, indolent, boastful and courteous.\nPremise: < Dr. Temple Grandin is arrogant. Dr. Mehmet Oz is weak. J.K. Rowling is informed. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the doctor is not feeble? Answer: No\n Premise: < Serena Williams is polite. Brad Pitt is sociable. Cristiano Ronaldo is lazy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not courteous? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [60, 61], "Q": [84, 86], "K'": [53, 59], "R": [87, 88], "K": [[33, 43], [38, 50]], "V": [[39, 51], [42, 52]], "example": [28, 94]}, {"END": [152, 153], "A'": [147, 150], "V'": [109, 111], "Q": [142, 145], "K'": [106, 108], "R": [146, 147], "K": [[99, 112], [102, 117]], "V": [[103, 118], [105, 119]], "example": [95, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include candid, unmotivated, hostile, tardy, reserved and lucky.\nPremise: < Ruth Bader Ginsburg is fortunate. Johnnie Cochran is introverted. Dr. Temple Grandin is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not unmotivated? Answer: Yes\n Premise: < Natalie Portman is honest. Marie Curie is late. Jane Goodall is unfriendly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not candid? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [87, 91], "V'": [57, 60], "Q": [83, 85], "K'": [51, 56], "R": [86, 87], "K": [[30, 41], [36, 46]], "V": [[37, 47], [40, 50]], "example": [25, 95]}, {"END": [151, 152], "A'": [148, 149], "V'": [105, 106], "Q": [143, 146], "K'": [100, 104], "R": [147, 148], "K": [[107, 113], [110, 116]], "V": [[111, 117], [112, 120]], "example": [96, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include lucky, unmotivated, hostile, tardy, candid and reserved.\nPremise: < Ruth Bader Ginsburg is fortunate. Johnnie Cochran is introverted. Dr. Temple Grandin is apathetic. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not unmotivated? Answer: Yes\n Premise: < Natalie Portman is honest. Marie Curie is late. Jane Goodall is unfriendly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not tardy? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [87, 91], "V'": [57, 60], "Q": [83, 85], "K'": [51, 56], "R": [86, 87], "K": [[30, 41], [36, 46]], "V": [[37, 47], [40, 50]], "example": [25, 95]}, {"END": [152, 153], "A'": [148, 150], "V'": [105, 106], "Q": [143, 146], "K'": [100, 104], "R": [147, 148], "K": [[107, 113], [110, 116]], "V": [[111, 117], [112, 120]], "example": [96, 154]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include unlucky, compassionate, secure, timely, powerful and correct.\nPremise: < Leonardo DiCaprio is kind. Jennifer Lawrence is safe. Alex Morgan is unfortunate. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is not unlucky? Answer: Yes\n Premise: < Nikola Tesla is right. Dr. Anthony Fauci is punctual. Jane Goodall is strong. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not timely? Answer: Yes\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [47, 50], "Q": [73, 75], "K'": [44, 46], "R": [76, 77], "K": [[30, 38], [35, 41]], "V": [[36, 42], [37, 43]], "example": [25, 84]}, {"END": [145, 146], "A'": [141, 143], "V'": [104, 107], "Q": [136, 139], "K'": [97, 103], "R": [140, 141], "K": [[89, 108], [94, 111]], "V": [[95, 112], [96, 113]], "example": [85, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include secure, unlucky, correct, compassionate, timely and powerful.\nPremise: < Leonardo DiCaprio is kind. Jennifer Lawrence is safe. Alex Morgan is unfortunate. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is not unlucky? Answer: Yes\n Premise: < Nikola Tesla is right. Dr. Anthony Fauci is punctual. Jane Goodall is strong. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not correct? Answer: No\n", "ranges": [{"END": [82, 83], "A'": [77, 80], "V'": [47, 50], "Q": [73, 75], "K'": [44, 46], "R": [76, 77], "K": [[30, 38], [35, 41]], "V": [[36, 42], [37, 43]], "example": [25, 84]}, {"END": [144, 145], "A'": [141, 142], "V'": [104, 107], "Q": [136, 139], "K'": [97, 103], "R": [140, 141], "K": [[89, 108], [94, 111]], "V": [[95, 112], [96, 113]], "example": [85, 146]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include attractive, cozy, secure, noisy, stupid and powerful.\nPremise: < Alan Dershowitz is loud. Cristiano Ronaldo is safe. Barack Obama is foolish. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not secure? Answer: Yes\n Premise: < Richard Branson is pretty. Oprah Winfrey is comfortable. Leonardo DiCaprio is strong. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is not powerful? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [41, 42], "Q": [73, 75], "K'": [35, 40], "R": [76, 77], "K": [[27, 43], [32, 47]], "V": [[33, 48], [34, 50]], "example": [22, 82]}, {"END": [140, 141], "A'": [137, 138], "V'": [107, 108], "Q": [131, 135], "K'": [101, 106], "R": [136, 137], "K": [[87, 93], [90, 98]], "V": [[91, 99], [92, 100]], "example": [83, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include noisy, secure, attractive, powerful, stupid and cozy.\nPremise: < Alan Dershowitz is loud. Cristiano Ronaldo is safe. Barack Obama is foolish. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not secure? Answer: Yes\n Premise: < Richard Branson is pretty. Oprah Winfrey is comfortable. Leonardo DiCaprio is strong. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is not cozy? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [41, 42], "Q": [73, 75], "K'": [35, 40], "R": [76, 77], "K": [[27, 43], [32, 47]], "V": [[33, 48], [34, 50]], "example": [22, 82]}, {"END": [141, 142], "A'": [137, 139], "V'": [107, 108], "Q": [131, 135], "K'": [101, 106], "R": [136, 137], "K": [[87, 93], [90, 98]], "V": [[91, 99], [92, 100]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include lively, active, dependable, apathetic, hazardous and dull.\nPremise: < LeBron James is responsible. Salvador Dal\u00ed is dangerous. Michelangelo is lively. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is not active? Answer: No\n Premise: < J.K. Rowling is blunt. Harper Lee is energetic. Charlize Theron is unmotivated. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not apathetic? Answer: Yes\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [37, 38], "Q": [74, 76], "K'": [32, 36], "R": [77, 78], "K": [[39, 45], [42, 48]], "V": [[43, 49], [44, 51]], "example": [27, 83]}, {"END": [148, 149], "A'": [143, 146], "V'": [112, 116], "Q": [139, 141], "K'": [106, 111], "R": [142, 143], "K": [[88, 98], [94, 101]], "V": [[95, 102], [97, 105]], "example": [84, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include dependable, apathetic, hazardous, dull, active and lively.\nPremise: < LeBron James is responsible. Salvador Dal\u00ed is dangerous. Michelangelo is lively. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is not active? Answer: No\n Premise: < J.K. Rowling is blunt. Harper Lee is energetic. Charlize Theron is unmotivated. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not lively? Answer: No\n", "ranges": [{"END": [81, 82], "A'": [78, 79], "V'": [37, 38], "Q": [74, 76], "K'": [32, 36], "R": [77, 78], "K": [[39, 45], [42, 48]], "V": [[43, 49], [44, 51]], "example": [27, 83]}, {"END": [147, 148], "A'": [143, 145], "V'": [112, 116], "Q": [139, 141], "K'": [106, 111], "R": [142, 143], "K": [[88, 98], [94, 101]], "V": [[95, 102], [97, 105]], "example": [84, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include splotless, weak, brave, careless, witty and creative.\nPremise: < J.R.R. Tolkien is feeble. Toni Morrison is innovative. Ed Sheeran is clean. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not splotless? Answer: Yes\n Premise: < Mies van der Rohe is humorous. Beyonc\u00e9 is incautious. Louis Sullivan is bold. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is not careless? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [85, 88], "V'": [57, 58], "Q": [81, 83], "K'": [52, 56], "R": [84, 85], "K": [[30, 43], [39, 48]], "V": [[40, 49], [42, 51]], "example": [25, 92]}, {"END": [153, 154], "A'": [149, 151], "V'": [111, 115], "Q": [145, 147], "K'": [107, 110], "R": [148, 149], "K": [[97, 116], [103, 120]], "V": [[104, 121], [106, 122]], "example": [93, 155]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3]", "texts": "Descriptions of people include witty, careless, creative, weak, splotless and brave.\nPremise: < J.R.R. Tolkien is feeble. Toni Morrison is innovative. Ed Sheeran is clean. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not splotless? Answer: Yes\n Premise: < Mies van der Rohe is humorous. Beyonc\u00e9 is incautious. Louis Sullivan is bold. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is not brave? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [85, 88], "V'": [57, 58], "Q": [81, 83], "K'": [52, 56], "R": [84, 85], "K": [[30, 43], [39, 48]], "V": [[40, 49], [42, 51]], "example": [25, 92]}, {"END": [152, 153], "A'": [149, 150], "V'": [111, 115], "Q": [145, 147], "K'": [107, 110], "R": [148, 149], "K": [[97, 116], [103, 120]], "V": [[104, 121], [106, 122]], "example": [93, 154]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include curious, awkward, indecisive, pessimistic, tall and irrational.\n< Negative Lionel Messi. Inquiring Usain Bolt. Hesitant Jennifer Lawrence. >. In other words, the athlete is not indecisive\n < High Tom Brady. Unreasonable Usain Bolt. Uncomfortable Carl Sagan. >. In other words, the athlete is not awkward\n", "ranges": [{"END": [61, 62], "A'": [62, 65], "V'": [43, 47], "Q": [57, 60], "K'": [47, 50], "R": [61, 62], "K": [[30, 38], [34, 42]], "V": [[28, 35], [30, 38]], "example": [27, 65]}, {"END": [98, 99], "A'": [99, 101], "V'": [80, 84], "Q": [94, 97], "K'": [84, 87], "R": [98, 99], "K": [[68, 75], [71, 79]], "V": [[67, 72], [68, 75]], "example": [66, 101]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include daring, lazy, rude, brave, apathetic and sick.\n< Unmotivated Ernest Hemingway. Indolent Simone Biles. Bold Lionel Messi. >. In other words, the athlete is not apathetic\n < Bold Kanye West. Unhealthy Vincent van Gogh. Impolite Pablo Picasso. >. In other words, the artist is not brave\n", "ranges": [{"END": [58, 59], "A'": [59, 62], "V'": [24, 28], "Q": [54, 57], "K'": [28, 32], "R": [58, 59], "K": [[36, 43], [40, 47]], "V": [[33, 41], [36, 43]], "example": [23, 62]}, {"END": [97, 98], "A'": [98, 99], "V'": [64, 66], "Q": [94, 96], "K'": [66, 70], "R": [97, 98], "K": [[75, 84], [80, 87]], "V": [[71, 81], [75, 84]], "example": [63, 99]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include punctual, impolite, creative, innovative, humorous and fortunate.\n< Lucky Sonia Sotomayor. Funny Ruth Bader Ginsburg. Innovative Marie Curie. >. In other words, the lawyer is not creative\n < Creative Mark Zuckerberg. Timely Neil deGrasse Tyson. Rude Jeff Bezos. >. In other words, the entrepreneur is not punctual\n", "ranges": [{"END": [64, 65], "A'": [65, 67], "V'": [48, 51], "Q": [61, 63], "K'": [51, 54], "R": [64, 65], "K": [[31, 41], [38, 47]], "V": [[29, 39], [31, 41]], "example": [28, 67]}, {"END": [102, 103], "A'": [103, 106], "V'": [75, 77], "Q": [97, 101], "K'": [77, 84], "R": [102, 103], "K": [[70, 87], [74, 90]], "V": [[69, 85], [70, 87]], "example": [68, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indifferent, clean, decisive, attractive, humorous and impatient.\n< Beautiful Agatha Christie. Splotless Justin Bieber. Intolerant J.R.R. Tolkien. >. In other words, the author is not clean\n < Uninterested Mies van der Rohe. Witty Sergey Brin. Resolute Warren Buffett. >. In other words, the entrepreneur is not indifferent\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [33, 36], "Q": [61, 63], "K'": [36, 40], "R": [64, 65], "K": [[27, 45], [32, 54]], "V": [[26, 41], [27, 45]], "example": [25, 66]}, {"END": [103, 104], "A'": [104, 106], "V'": [68, 71], "Q": [98, 102], "K'": [71, 77], "R": [103, 104], "K": [[81, 88], [85, 91]], "V": [[78, 86], [81, 88]], "example": [67, 106]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include bold, disloyal, hardworking, hesitant, curious and driven.\n< Ambitious Alan Dershowitz. Diligent Usain Bolt. Inquiring Thurgood Marshall. >. In other words, the lawyer is not hardworking\n < Adventurous Lionel Messi. Unfaithful Jane Austen. Tentative Usain Bolt. >. In other words, the athlete is not disloyal\n", "ranges": [{"END": [59, 60], "A'": [60, 62], "V'": [34, 37], "Q": [56, 58], "K'": [37, 41], "R": [59, 60], "K": [[28, 45], [33, 49]], "V": [[25, 42], [28, 45]], "example": [24, 62]}, {"END": [98, 99], "A'": [99, 102], "V'": [72, 76], "Q": [94, 97], "K'": [76, 79], "R": [98, 99], "K": [[67, 83], [71, 87]], "V": [[64, 80], [67, 83]], "example": [63, 102]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unreasonable, quick, candid, friendly, egotistical and knowledgeable.\n< Informed Thurgood Marshall. Fast Michelangelo. Affable Johnnie Cochran. >. In other words, the lawyer is not quick\n < Irrational Frida Kahlo. Honest Jackson Pollock. Selfish Dr. Anthony Fauci. >. In other words, the artist is not egotistical\n", "ranges": [{"END": [55, 56], "A'": [56, 57], "V'": [33, 34], "Q": [52, 54], "K'": [34, 37], "R": [55, 56], "K": [[28, 40], [32, 45]], "V": [[26, 38], [28, 40]], "example": [25, 57]}, {"END": [92, 93], "A'": [93, 97], "V'": [74, 76], "Q": [89, 91], "K'": [76, 82], "R": [92, 93], "K": [[62, 70], [67, 73]], "V": [[59, 68], [62, 70]], "example": [58, 97]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include filled, sluggish, severe, powerful, correct and foolish.\n< Full Dr. Sanjay Gupta. Stupid Dr. Jane Goodall. Right Agatha Christie. >. In other words, the doctor is not correct\n < Strong George Orwell. Harsh Mark Twain. Slow Usain Bolt. >. In other words, the author is not sluggish\n", "ranges": [{"END": [57, 58], "A'": [58, 59], "V'": [41, 42], "Q": [54, 56], "K'": [42, 47], "R": [57, 58], "K": [[24, 35], [31, 40]], "V": [[23, 32], [24, 35]], "example": [22, 59]}, {"END": [89, 90], "A'": [90, 93], "V'": [73, 75], "Q": [86, 88], "K'": [75, 79], "R": [89, 90], "K": [[63, 69], [66, 72]], "V": [[61, 67], [63, 69]], "example": [60, 93]}]}
{"task_id": "rlr_gen[occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include tentative, rational, rude, unattractive, careful and arrogant.\n< Ugly Dr. Mehmet Oz. Impolite Mark Zuckerberg. Cautious Warren Buffett. >. In other words, the entrepreneur is not unattractive\n < Boastful Sonia Sotomayor. Hesitant Ruth Bader Ginsburg. Logical Georgia O'Keeffe. >. In other words, the lawyer is not rational\n", "ranges": [{"END": [63, 64], "A'": [64, 68], "V'": [27, 29], "Q": [58, 62], "K'": [29, 36], "R": [63, 64], "K": [[40, 48], [44, 51]], "V": [[37, 45], [40, 48]], "example": [26, 68]}, {"END": [110, 111], "A'": [111, 112], "V'": [92, 94], "Q": [107, 109], "K'": [94, 100], "R": [110, 111], "K": [[73, 85], [80, 91]], "V": [[70, 81], [73, 85]], "example": [69, 112]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indecisive, pessimistic, logical, curious, sluggish and altruistic.\nPremise: < Negative Lionel Messi. Inquiring Usain Bolt. Hesitant Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not pessimistic? Answer: No\n Premise: < Slow Albert Einstein. Rational Rosie Franklin. Selfless Eminem. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not altruistic? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [84, 88], "V'": [49, 53], "Q": [79, 82], "K'": [53, 56], "R": [83, 84], "K": [[36, 44], [40, 48]], "V": [[34, 41], [36, 44]], "example": [29, 92]}, {"END": [148, 149], "A'": [142, 146], "V'": [109, 111], "Q": [137, 140], "K'": [111, 114], "R": [141, 142], "K": [[99, 105], [102, 108]], "V": [[97, 103], [99, 105]], "example": [93, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include indecisive, pessimistic, sluggish, altruistic, logical and curious.\nPremise: < Negative Lionel Messi. Inquiring Usain Bolt. Hesitant Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not pessimistic? Answer: No\n Premise: < Slow Albert Einstein. Rational Rosie Franklin. Selfless Eminem. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not logical? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [84, 88], "V'": [49, 53], "Q": [79, 82], "K'": [53, 56], "R": [83, 84], "K": [[36, 44], [40, 48]], "V": [[34, 41], [36, 44]], "example": [29, 92]}, {"END": [145, 146], "A'": [142, 143], "V'": [109, 111], "Q": [137, 140], "K'": [111, 114], "R": [141, 142], "K": [[99, 105], [102, 108]], "V": [[97, 103], [99, 105]], "example": [93, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include thoughtful, brave, trustworthy, impoverished, intolerant and humorless.\nPremise: < Poor Barack Obama. Adventurous Simone Biles. Reliable Lionel Messi. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not trustworthy? Answer: No\n Premise: < Impatient Mark Twain. Considerate Ernest Hemingway. Serious Beyonc\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not humorless? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [33, 35], "Q": [78, 81], "K'": [35, 39], "R": [82, 83], "K": [[43, 51], [47, 55]], "V": [[40, 48], [43, 51]], "example": [28, 90]}, {"END": [145, 146], "A'": [141, 143], "V'": [109, 111], "Q": [137, 139], "K'": [111, 114], "R": [140, 141], "K": [[98, 104], [101, 108]], "V": [[95, 102], [98, 104]], "example": [91, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include trustworthy, impoverished, brave, humorless, intolerant and thoughtful.\nPremise: < Poor Barack Obama. Adventurous Simone Biles. Reliable Lionel Messi. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not trustworthy? Answer: No\n Premise: < Impatient Mark Twain. Considerate Ernest Hemingway. Serious Beyonc\u00e9. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not thoughtful? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [83, 86], "V'": [33, 35], "Q": [78, 81], "K'": [35, 39], "R": [82, 83], "K": [[43, 51], [47, 55]], "V": [[40, 48], [43, 51]], "example": [28, 90]}, {"END": [145, 146], "A'": [141, 143], "V'": [109, 111], "Q": [137, 139], "K'": [111, 114], "R": [140, 141], "K": [[98, 104], [101, 108]], "V": [[95, 102], [98, 104]], "example": [91, 147]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include boastful, knowledgeable, courteous, indolent, feeble and outgoing.\nPremise: < Arrogant Dr. Temple Grandin. Weak Dr. Mehmet Oz. Informed J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the doctor is not feeble? Answer: No\n Premise: < Polite Serena Williams. Sociable Brad Pitt. Lazy Cristiano Ronaldo. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not outgoing? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [52, 54], "Q": [83, 85], "K'": [54, 60], "R": [86, 87], "K": [[36, 44], [41, 51]], "V": [[33, 42], [36, 44]], "example": [28, 93]}, {"END": [148, 149], "A'": [144, 146], "V'": [104, 106], "Q": [139, 142], "K'": [106, 108], "R": [143, 144], "K": [[100, 111], [103, 116]], "V": [[98, 109], [100, 111]], "example": [94, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include knowledgeable, outgoing, feeble, indolent, boastful and courteous.\nPremise: < Arrogant Dr. Temple Grandin. Weak Dr. Mehmet Oz. Informed J.K. Rowling. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the doctor is not feeble? Answer: No\n Premise: < Polite Serena Williams. Sociable Brad Pitt. Lazy Cristiano Ronaldo. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the athlete is not courteous? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [52, 54], "Q": [83, 85], "K'": [54, 60], "R": [86, 87], "K": [[36, 44], [41, 51]], "V": [[33, 42], [36, 44]], "example": [28, 93]}, {"END": [149, 150], "A'": [144, 147], "V'": [104, 106], "Q": [139, 142], "K'": [106, 108], "R": [143, 144], "K": [[100, 111], [103, 116]], "V": [[98, 109], [100, 111]], "example": [94, 151]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include candid, unmotivated, hostile, tardy, reserved and lucky.\nPremise: < Fortunate Ruth Bader Ginsburg. Introverted Johnnie Cochran. Apathetic Dr. Temple Grandin. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not unmotivated? Answer: Yes\n Premise: < Honest Natalie Portman. Late Marie Curie. Unfriendly Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not candid? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [85, 89], "V'": [50, 53], "Q": [81, 83], "K'": [53, 58], "R": [84, 85], "K": [[33, 44], [39, 49]], "V": [[30, 40], [33, 44]], "example": [25, 93]}, {"END": [147, 148], "A'": [144, 145], "V'": [98, 100], "Q": [139, 142], "K'": [100, 104], "R": [143, 144], "K": [[106, 113], [109, 116]], "V": [[105, 110], [106, 113]], "example": [94, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include lucky, unmotivated, hostile, tardy, candid and reserved.\nPremise: < Fortunate Ruth Bader Ginsburg. Introverted Johnnie Cochran. Apathetic Dr. Temple Grandin. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not unmotivated? Answer: Yes\n Premise: < Honest Natalie Portman. Late Marie Curie. Unfriendly Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not tardy? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [85, 89], "V'": [50, 53], "Q": [81, 83], "K'": [53, 58], "R": [84, 85], "K": [[33, 44], [39, 49]], "V": [[30, 40], [33, 44]], "example": [25, 93]}, {"END": [148, 149], "A'": [144, 146], "V'": [98, 100], "Q": [139, 142], "K'": [100, 104], "R": [143, 144], "K": [[106, 113], [109, 116]], "V": [[105, 110], [106, 113]], "example": [94, 150]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include unlucky, compassionate, secure, timely, powerful and correct.\nPremise: < Kind Leonardo DiCaprio. Safe Jennifer Lawrence. Unfortunate Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is not unlucky? Answer: Yes\n Premise: < Right Nikola Tesla. Punctual Dr. Anthony Fauci. Strong Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not timely? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [75, 78], "V'": [43, 46], "Q": [71, 73], "K'": [46, 48], "R": [74, 75], "K": [[31, 39], [36, 42]], "V": [[30, 37], [31, 39]], "example": [25, 82]}, {"END": [141, 142], "A'": [137, 139], "V'": [94, 97], "Q": [132, 135], "K'": [97, 103], "R": [136, 137], "K": [[88, 106], [93, 109]], "V": [[87, 104], [88, 106]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include secure, unlucky, correct, compassionate, timely and powerful.\nPremise: < Kind Leonardo DiCaprio. Safe Jennifer Lawrence. Unfortunate Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the actor is not unlucky? Answer: Yes\n Premise: < Right Nikola Tesla. Punctual Dr. Anthony Fauci. Strong Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the scientist is not correct? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [75, 78], "V'": [43, 46], "Q": [71, 73], "K'": [46, 48], "R": [74, 75], "K": [[31, 39], [36, 42]], "V": [[30, 37], [31, 39]], "example": [25, 82]}, {"END": [140, 141], "A'": [137, 138], "V'": [94, 97], "Q": [132, 135], "K'": [97, 103], "R": [136, 137], "K": [[88, 106], [93, 109]], "V": [[87, 104], [88, 106]], "example": [83, 142]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include attractive, cozy, secure, noisy, stupid and powerful.\nPremise: < Loud Alan Dershowitz. Safe Cristiano Ronaldo. Foolish Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not secure? Answer: Yes\n Premise: < Pretty Richard Branson. Comfortable Oprah Winfrey. Strong Leonardo DiCaprio. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is not powerful? Answer: Yes\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [35, 37], "Q": [73, 75], "K'": [37, 42], "R": [76, 77], "K": [[29, 46], [34, 50]], "V": [[27, 43], [29, 46]], "example": [22, 82]}, {"END": [141, 142], "A'": [138, 139], "V'": [102, 104], "Q": [132, 136], "K'": [104, 109], "R": [137, 138], "K": [[89, 96], [92, 101]], "V": [[87, 93], [89, 96]], "example": [83, 143]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include noisy, secure, attractive, powerful, stupid and cozy.\nPremise: < Loud Alan Dershowitz. Safe Cristiano Ronaldo. Foolish Barack Obama. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the lawyer is not secure? Answer: Yes\n Premise: < Pretty Richard Branson. Comfortable Oprah Winfrey. Strong Leonardo DiCaprio. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the entrepreneur is not cozy? Answer: No\n", "ranges": [{"END": [80, 81], "A'": [77, 78], "V'": [35, 37], "Q": [73, 75], "K'": [37, 42], "R": [76, 77], "K": [[29, 46], [34, 50]], "V": [[27, 43], [29, 46]], "example": [22, 82]}, {"END": [142, 143], "A'": [138, 140], "V'": [102, 104], "Q": [132, 136], "K'": [104, 109], "R": [137, 138], "K": [[89, 96], [92, 101]], "V": [[87, 93], [89, 96]], "example": [83, 144]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include lively, active, dependable, apathetic, hazardous and dull.\nPremise: < Responsible LeBron James. Dangerous Salvador Dal\u00ed. Lively Michelangelo. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is not active? Answer: No\n Premise: < Blunt J.K. Rowling. Energetic Harper Lee. Unmotivated Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not apathetic? Answer: Yes\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 36], "Q": [76, 78], "K'": [36, 40], "R": [79, 80], "K": [[44, 50], [47, 53]], "V": [[41, 48], [44, 50]], "example": [27, 85]}, {"END": [147, 148], "A'": [142, 145], "V'": [106, 110], "Q": [138, 140], "K'": [110, 115], "R": [141, 142], "K": [[92, 102], [98, 105]], "V": [[90, 99], [92, 102]], "example": [86, 149]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include dependable, apathetic, hazardous, dull, active and lively.\nPremise: < Responsible LeBron James. Dangerous Salvador Dal\u00ed. Lively Michelangelo. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the artist is not active? Answer: No\n Premise: < Blunt J.K. Rowling. Energetic Harper Lee. Unmotivated Charlize Theron. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not lively? Answer: No\n", "ranges": [{"END": [83, 84], "A'": [80, 81], "V'": [32, 36], "Q": [76, 78], "K'": [36, 40], "R": [79, 80], "K": [[44, 50], [47, 53]], "V": [[41, 48], [44, 50]], "example": [27, 85]}, {"END": [146, 147], "A'": [142, 144], "V'": [106, 110], "Q": [138, 140], "K'": [110, 115], "R": [141, 142], "K": [[92, 102], [98, 105]], "V": [[90, 99], [92, 102]], "example": [86, 148]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include splotless, weak, brave, careless, witty and creative.\nPremise: < Feeble J.R.R. Tolkien. Innovative Toni Morrison. Clean Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not splotless? Answer: Yes\n Premise: < Humorous Mies van der Rohe. Incautious Beyonc\u00e9. Bold Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is not careless? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [85, 88], "V'": [52, 54], "Q": [81, 83], "K'": [54, 58], "R": [84, 85], "K": [[33, 46], [42, 51]], "V": [[30, 43], [33, 46]], "example": [25, 92]}, {"END": [151, 152], "A'": [147, 149], "V'": [106, 110], "Q": [143, 145], "K'": [110, 113], "R": [146, 147], "K": [[99, 116], [105, 120]], "V": [[97, 114], [99, 116]], "example": [93, 153]}]}
{"task_id": "g2c[rlr_gen][occupations_Of_Persons.TreeSet.neg_child,person_adjs.SymSet.similar][cxt_len=3,rev_item2str]", "texts": "Descriptions of people include witty, careless, creative, weak, splotless and brave.\nPremise: < Feeble J.R.R. Tolkien. Innovative Toni Morrison. Clean Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the author is not splotless? Answer: Yes\n Premise: < Humorous Mies van der Rohe. Incautious Beyonc\u00e9. Bold Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the architect is not brave? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [85, 88], "V'": [52, 54], "Q": [81, 83], "K'": [54, 58], "R": [84, 85], "K": [[33, 46], [42, 51]], "V": [[30, 43], [33, 46]], "example": [25, 92]}, {"END": [150, 151], "A'": [147, 148], "V'": [106, 110], "Q": [143, 145], "K'": [110, 113], "R": [146, 147], "K": [[99, 116], [105, 120]], "V": [[97, 114], [99, 116]], "example": [93, 152]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Salvador Dal\u00ed is unhappy. Dr. Sylvia Earle is inactive. Taylor Swift is innovative. >. In other words, who is creative? the musician\n < Harper Lee is kind. Justin Bieber is dangerous. Clarence Darrow is brave. >. In other words, who is daring? the lawyer\n", "ranges": [{"END": [59, 60], "A": [60, 62], "V": [42, 44], "Q": [56, 58], "K": [45, 47], "R": null, "K'": [[29, 39], [31, 41]], "V'": [[25, 32], [28, 38]], "example": [24, 62]}, {"END": [95, 96], "A": [96, 97], "V": [77, 81], "Q": [92, 94], "K": [82, 83], "R": null, "K'": [[68, 75], [69, 76]], "V'": [[64, 70], [67, 74]], "example": [63, 97]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Dr. Gabor Mat\u00e9 is lazy. Simone Biles is correct. Mies van der Rohe is miserly. >. In other words, who is indolent? the doctor\n < Zaha Hadid is humble. Cristiano Ronaldo is honest. Eminem is selfish. >. In other words, who is modest? the architect\n", "ranges": [{"END": [61, 62], "A": [62, 63], "V": [23, 29], "Q": [57, 60], "K": [30, 31], "R": null, "K'": [[37, 46], [38, 48]], "V'": [[32, 39], [36, 45]], "example": [22, 63]}, {"END": [99, 100], "A": [100, 101], "V": [65, 69], "Q": [96, 98], "K": [70, 72], "R": null, "K'": [[79, 85], [80, 87]], "V'": [[73, 81], [78, 84]], "example": [64, 101]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Neil deGrasse Tyson is ambitious. Vincent van Gogh is indecisive. Dr. Neil deGrasse Tyson is considerate. >. In other words, who is thoughtful? the doctor\n < Claude Monet is wealthy. Lady Gaga is intelligent. Johnnie Cochran is active. >. In other words, who is rich? the artist\n", "ranges": [{"END": [72, 73], "A": [73, 74], "V": [48, 57], "Q": [69, 71], "K": [58, 60], "R": null, "K'": [[34, 44], [37, 47]], "V'": [[26, 50, 38], [33, 57, 43]], "example": [25, 74]}, {"END": [108, 109], "A": [109, 110], "V": [76, 79], "Q": [106, 107], "K": [80, 82], "R": null, "K'": [[87, 96], [89, 97]], "V'": [[83, 90], [86, 95]], "example": [75, 110]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Kanye West is wrong. LeBron James is boastful. Eminem is rational. >. In other words, who is arrogant? the athlete\n < Tom Brady is polite. Leonardo da Vinci is full. Rem Koolhaas is reserved. >. In other words, who is courteous? the athlete\n", "ranges": [{"END": [57, 58], "A": [58, 60], "V": [30, 34], "Q": [53, 56], "K": [35, 38], "R": null, "K'": [[28, 43], [29, 44]], "V'": [[23, 39], [27, 42]], "example": [22, 60]}, {"END": [97, 98], "A": [98, 100], "V": [62, 65], "Q": [93, 96], "K": [66, 68], "R": null, "K'": [[75, 83], [76, 84]], "V'": [[69, 77], [74, 82]], "example": [61, 100]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Dr. Temple Grandin is undependable. Agatha Christie is blunt. Dr. Sylvia Earle is intolerant. >. In other words, who is dull? the author\n < Bill Gates is dangerous. LeBron James is successful. Vincent van Gogh is unhealthy. >. In other words, who is sick? the artist\n", "ranges": [{"END": [70, 71], "A": [71, 72], "V": [38, 43], "Q": [67, 69], "K": [44, 46], "R": null, "K'": [[33, 54], [37, 58]], "V'": [[27, 47], [32, 53]], "example": [26, 72]}, {"END": [108, 109], "A": [109, 110], "V": [87, 92], "Q": [106, 107], "K": [93, 97], "R": null, "K'": [[78, 85], [79, 86]], "V'": [[74, 80], [77, 84]], "example": [73, 110]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the author, the athlete and the actor.\n< Johnny Depp is slow. Jane Goodall is intelligent. George Orwell is cruel. >. In other words, who is clever? the scientist\n < LeBron James is careful. Agatha Christie is altruistic. Charlize Theron is impatient. >. In other words, who is cautious? the athlete\n", "ranges": [{"END": [52, 53], "A": [53, 55], "V": [29, 32], "Q": [50, 51], "K": [33, 35], "R": null, "K'": [[27, 40], [28, 41]], "V'": [[23, 36], [26, 39]], "example": [22, 55]}, {"END": [97, 98], "A": [98, 100], "V": [57, 61], "Q": [93, 96], "K": [62, 63], "R": null, "K'": [[70, 81], [74, 84]], "V'": [[64, 75], [69, 80]], "example": [56, 100]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer and the author.\n< Sergey Brin is timid. Bill Gates is comfortable. Jane Austen is vacant. >. In other words, who is empty? the author\n < Toni Morrison is informed. Sonia Sotomayor is decisive. Roger Federer is healthy. >. In other words, who is resolute? the lawyer\n", "ranges": [{"END": [55, 56], "A": [56, 57], "V": [38, 41], "Q": [53, 54], "K": [42, 44], "R": null, "K'": [[29, 36], [31, 37]], "V'": [[24, 32], [28, 35]], "example": [23, 57]}, {"END": [96, 97], "A": [97, 98], "V": [67, 74], "Q": [93, 95], "K": [75, 77], "R": null, "K'": [[65, 82], [66, 84]], "V'": [[59, 78], [64, 81]], "example": [58, 98]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the architect, the entrepreneur, the musician and the actor.\n< Elon Musk is safe. Mies van der Rohe is loud. Taylor Swift is foolish. >. In other words, who is secure? the entrepreneur\n < Lady Gaga is selfish. Natalie Portman is unfaithful. Neil deGrasse Tyson is inactive. >. In other words, who is listless? the scientist\n", "ranges": [{"END": [60, 61], "A": [61, 64], "V": [28, 32], "Q": [58, 59], "K": [33, 34], "R": null, "K'": [[42, 47], [43, 49]], "V'": [[35, 44], [41, 46]], "example": [27, 64]}, {"END": [105, 106], "A": [106, 108], "V": [83, 90], "Q": [102, 104], "K": [91, 93], "R": null, "K'": [[70, 78], [72, 82]], "V'": [[66, 73], [69, 77]], "example": [65, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < Salvador Dal\u00ed is unhappy. Dr. Sylvia Earle is inactive. Taylor Swift is innovative. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is the artist? Answer: No\n Premise: < Harper Lee is considerate. Justin Bieber is dull. Clarence Darrow is logical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is the lawyer? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [46, 48], "Q": [79, 81], "K": [49, 51], "R": null, "K'": [[33, 43], [35, 45]], "V'": [[29, 36], [32, 42]], "example": [24, 88]}, {"END": [148, 149], "A": [144, 146], "V": [108, 112], "Q": [142, 143], "K": [113, 114], "R": null, "K'": [[97, 105], [99, 107]], "V'": [[93, 100], [96, 104]], "example": [89, 150]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < Salvador Dal\u00ed is unhappy. Dr. Sylvia Earle is inactive. Taylor Swift is innovative. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is the artist? Answer: No\n Premise: < Harper Lee is considerate. Justin Bieber is dull. Clarence Darrow is logical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is the musician? Answer: No\n", "ranges": [{"END": [86, 87], "A": [82, 84], "V": [46, 48], "Q": [79, 81], "K": [49, 51], "R": null, "K'": [[33, 43], [35, 45]], "V'": [[29, 36], [32, 42]], "example": [24, 88]}, {"END": [149, 150], "A": [144, 147], "V": [108, 112], "Q": [142, 143], "K": [113, 114], "R": null, "K'": [[97, 105], [99, 107]], "V'": [[93, 100], [96, 104]], "example": [89, 151]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Georgia O'Keeffe is indifferent. Richard Dawkins is reliable. LeBron James is indolent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's lazy is the scientist? Answer: No\n Premise: < Claude Monet is conventional. George Orwell is lethargic. Neil deGrasse Tyson is indolent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's inactive is the author? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [43, 47], "Q": [79, 80], "K": [48, 51], "R": null, "K'": [[34, 41], [36, 42]], "V'": [[27, 37], [33, 40]], "example": [22, 88]}, {"END": [154, 155], "A": [150, 152], "V": [99, 102], "Q": [147, 149], "K": [103, 107], "R": null, "K'": [[97, 116], [98, 119]], "V'": [[93, 108], [96, 115]], "example": [89, 156]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Georgia O'Keeffe is indifferent. Richard Dawkins is reliable. LeBron James is indolent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's lazy is the scientist? Answer: No\n Premise: < Claude Monet is conventional. George Orwell is lethargic. Neil deGrasse Tyson is indolent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's inactive is the artist? Answer: No\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [43, 47], "Q": [79, 80], "K": [48, 51], "R": null, "K'": [[34, 41], [36, 42]], "V'": [[27, 37], [33, 40]], "example": [22, 88]}, {"END": [154, 155], "A": [150, 152], "V": [99, 102], "Q": [147, 149], "K": [103, 107], "R": null, "K'": [[97, 116], [98, 119]], "V'": [[93, 108], [96, 115]], "example": [89, 156]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Dr. Mehmet Oz is irresponsible. Jane Goodall is logical. Roger Federer is punctual. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's negligent is the athlete? Answer: No\n Premise: < Eminem is interesting. Meryl Streep is wrong. Pablo Picasso is compassionate. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's incorrect is the actor? Answer: Yes\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [34, 41], "Q": [87, 90], "K": [42, 45], "R": null, "K'": [[50, 56], [51, 59]], "V'": [[46, 52], [49, 55]], "example": [29, 98]}, {"END": [160, 161], "A": [156, 158], "V": [109, 115], "Q": [154, 155], "K": [116, 117], "R": null, "K'": [[107, 122], [108, 126]], "V'": [[103, 118], [106, 121]], "example": [99, 162]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Dr. Mehmet Oz is irresponsible. Jane Goodall is logical. Roger Federer is punctual. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's negligent is the athlete? Answer: No\n Premise: < Eminem is interesting. Meryl Streep is wrong. Pablo Picasso is compassionate. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's incorrect is the artist? Answer: No\n", "ranges": [{"END": [96, 97], "A": [91, 94], "V": [34, 41], "Q": [87, 90], "K": [42, 45], "R": null, "K'": [[50, 56], [51, 59]], "V'": [[46, 52], [49, 55]], "example": [29, 98]}, {"END": [160, 161], "A": [156, 158], "V": [109, 115], "Q": [154, 155], "K": [116, 117], "R": null, "K'": [[107, 122], [108, 126]], "V'": [[103, 118], [106, 121]], "example": [99, 162]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the actor, the lawyer and the musician.\nPremise: < Rihanna is sharp. F. Lee Bailey is resolute. Alex Morgan is severe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's determined is the athlete? Answer: No\n Premise: < Ruth Bader Ginsburg is unhealthy. Beyonc\u00e9 is wrong. Jennifer Lawrence is loud. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's noisy is the actor? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [76, 79], "V": [33, 38], "Q": [74, 75], "K": [39, 41], "R": null, "K'": [[31, 45], [32, 46]], "V'": [[27, 42], [30, 44]], "example": [22, 83]}, {"END": [146, 147], "A": [142, 144], "V": [106, 109], "Q": [139, 141], "K": [110, 111], "R": null, "K'": [[95, 104], [99, 105]], "V'": [[88, 100], [94, 103]], "example": [84, 148]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the athlete, the actor and the musician.\nPremise: < Rihanna is sharp. F. Lee Bailey is resolute. Alex Morgan is severe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's determined is the athlete? Answer: No\n Premise: < Ruth Bader Ginsburg is unhealthy. Beyonc\u00e9 is wrong. Jennifer Lawrence is loud. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's noisy is the lawyer? Answer: No\n", "ranges": [{"END": [81, 82], "A": [76, 79], "V": [33, 38], "Q": [74, 75], "K": [39, 41], "R": null, "K'": [[31, 45], [32, 46]], "V'": [[27, 42], [30, 44]], "example": [22, 83]}, {"END": [146, 147], "A": [142, 144], "V": [106, 109], "Q": [139, 141], "K": [110, 111], "R": null, "K'": [[95, 104], [99, 105]], "V'": [[88, 100], [94, 103]], "example": [84, 148]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < Johnny Depp is fast. Jane Goodall is positive. George Orwell is kind. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's optimistic is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright is secure. Tom Brady is fraudulent. Norman Foster is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is the athlete? Answer: Yes\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [36, 39], "Q": [75, 77], "K": [40, 41], "R": null, "K'": [[34, 46], [35, 47]], "V'": [[30, 42], [33, 45]], "example": [25, 85]}, {"END": [148, 149], "A": [143, 146], "V": [96, 99], "Q": [138, 142], "K": [100, 104], "R": null, "K'": [[94, 109], [95, 110]], "V'": [[90, 105], [93, 108]], "example": [86, 150]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < Johnny Depp is fast. Jane Goodall is positive. George Orwell is kind. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's optimistic is the scientist? Answer: Yes\n Premise: < Frank Lloyd Wright is secure. Tom Brady is fraudulent. Norman Foster is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is the architect? Answer: No\n", "ranges": [{"END": [83, 84], "A": [78, 81], "V": [36, 39], "Q": [75, 77], "K": [40, 41], "R": null, "K'": [[34, 46], [35, 47]], "V'": [[30, 42], [33, 45]], "example": [25, 85]}, {"END": [147, 148], "A": [143, 145], "V": [96, 99], "Q": [138, 142], "K": [100, 104], "R": null, "K'": [[94, 109], [95, 110]], "V'": [[90, 105], [93, 108]], "example": [86, 149]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the doctor, the entrepreneur, the lawyer, the scientist and the author.\nPremise: < Toni Morrison is informed. Sonia Sotomayor is intelligent. Roger Federer is healthy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's smart is the author? Answer: No\n Premise: < Dr. Mehmet Oz is timely. Stephen Hawking is sluggish. Bill Gates is splotless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is the scientist? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [90, 92], "V": [43, 50], "Q": [88, 89], "K": [51, 53], "R": null, "K'": [[41, 58], [42, 60]], "V'": [[35, 54], [40, 57]], "example": [30, 96]}, {"END": [162, 163], "A": [157, 160], "V": [112, 115], "Q": [155, 156], "K": [116, 119], "R": null, "K'": [[109, 124], [111, 127]], "V'": [[101, 120], [108, 123]], "example": [97, 164]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the author, the scientist, the athlete, the entrepreneur and the doctor.\nPremise: < Toni Morrison is informed. Sonia Sotomayor is intelligent. Roger Federer is healthy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's smart is the author? Answer: No\n Premise: < Dr. Mehmet Oz is timely. Stephen Hawking is sluggish. Bill Gates is splotless. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is the doctor? Answer: No\n", "ranges": [{"END": [94, 95], "A": [90, 92], "V": [43, 50], "Q": [88, 89], "K": [51, 53], "R": null, "K'": [[41, 58], [42, 60]], "V'": [[35, 54], [40, 57]], "example": [30, 96]}, {"END": [161, 162], "A": [157, 159], "V": [112, 115], "Q": [155, 156], "K": [116, 119], "R": null, "K'": [[109, 124], [111, 127]], "V'": [[101, 120], [108, 123]], "example": [97, 163]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the musician, the artist, the lawyer, the actor and the entrepreneur.\nPremise: < Johnny Depp is ambitious. Hillary Clinton is splotless. Adele is blunt. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clean is the actor? Answer: No\n Premise: < Jackson Pollock is modest. Richard Branson is tolerant. Frank Lloyd Wright is bold. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's humble is the artist? Answer: Yes\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [42, 46], "Q": [85, 86], "K": [47, 50], "R": null, "K'": [[38, 55], [41, 57]], "V'": [[34, 51], [37, 54]], "example": [29, 93]}, {"END": [152, 153], "A": [148, 150], "V": [98, 101], "Q": [145, 147], "K": [102, 104], "R": null, "K'": [[109, 116], [111, 117]], "V'": [[105, 112], [108, 115]], "example": [94, 154]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the actor, the architect, the musician, the artist and the lawyer.\nPremise: < Johnny Depp is ambitious. Hillary Clinton is splotless. Adele is blunt. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clean is the actor? Answer: No\n Premise: < Jackson Pollock is modest. Richard Branson is tolerant. Frank Lloyd Wright is bold. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's humble is the entrepreneur? Answer: No\n", "ranges": [{"END": [91, 92], "A": [87, 89], "V": [42, 46], "Q": [85, 86], "K": [47, 50], "R": null, "K'": [[38, 55], [41, 57]], "V'": [[34, 51], [37, 54]], "example": [29, 93]}, {"END": [154, 155], "A": [148, 152], "V": [98, 101], "Q": [145, 147], "K": [102, 104], "R": null, "K'": [[109, 116], [111, 117]], "V'": [[105, 112], [108, 115]], "example": [94, 156]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the musician, the doctor and the architect.\nPremise: < Dr. Sylvia Earle is honest. Lady Gaga is unfriendly. Mies van der Rohe is informed. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's hostile is the musician? Answer: Yes\n Premise: < Maya Lin is energetic. Ed Sheeran is healthy. George Orwell is faithful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's active is the architect? Answer: Yes\n", "ranges": [{"END": [87, 88], "A": [82, 85], "V": [35, 38], "Q": [79, 81], "K": [39, 42], "R": null, "K'": [[33, 50], [34, 51]], "V'": [[26, 43], [32, 49]], "example": [21, 89]}, {"END": [149, 150], "A": [145, 147], "V": [94, 97], "Q": [143, 144], "K": [98, 101], "R": null, "K'": [[107, 114], [109, 115]], "V'": [[102, 110], [106, 113]], "example": [90, 151]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the doctor, the musician and the author.\nPremise: < Dr. Sylvia Earle is honest. Lady Gaga is unfriendly. Mies van der Rohe is informed. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's hostile is the musician? Answer: Yes\n Premise: < Maya Lin is energetic. Ed Sheeran is healthy. George Orwell is faithful. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's active is the author? Answer: No\n", "ranges": [{"END": [87, 88], "A": [82, 85], "V": [35, 38], "Q": [79, 81], "K": [39, 42], "R": null, "K'": [[33, 50], [34, 51]], "V'": [[26, 43], [32, 49]], "example": [21, 89]}, {"END": [149, 150], "A": [145, 147], "V": [94, 97], "Q": [143, 144], "K": [98, 101], "R": null, "K'": [[107, 114], [109, 115]], "V'": [[102, 110], [106, 113]], "example": [90, 151]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the lawyer, the author, the artist and the musician.\n< Unhappy Salvador Dal\u00ed. Inactive Dr. Sylvia Earle. Innovative Taylor Swift. >. In other words, who is creative? the musician\n < Kind Harper Lee. Dangerous Justin Bieber. Brave Clarence Darrow. >. In other words, who is daring? the lawyer\n", "ranges": [{"END": [58, 59], "A": [59, 61], "V": [44, 46], "Q": [55, 57], "K": [41, 44], "R": null, "K'": [[25, 32], [28, 34]], "V'": [[28, 34], [31, 40]], "example": [24, 61]}, {"END": [94, 95], "A": [95, 96], "V": [78, 82], "Q": [91, 93], "K": [76, 78], "R": null, "K'": [[63, 68], [64, 71]], "V'": [[64, 71], [67, 75]], "example": [62, 96]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the athlete and the musician.\n< Lazy Dr. Gabor Mat\u00e9. Correct Simone Biles. Miserly Mies van der Rohe. >. In other words, who is indolent? the doctor\n < Humble Zaha Hadid. Honest Cristiano Ronaldo. Selfish Eminem. >. In other words, who is modest? the architect\n", "ranges": [{"END": [60, 61], "A": [61, 62], "V": [25, 31], "Q": [56, 59], "K": [23, 25], "R": null, "K'": [[32, 38], [33, 41]], "V'": [[33, 41], [37, 47]], "example": [22, 62]}, {"END": [96, 97], "A": [97, 98], "V": [66, 70], "Q": [93, 95], "K": [64, 66], "R": null, "K'": [[71, 79], [73, 81]], "V'": [[73, 81], [78, 84]], "example": [63, 98]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the doctor, the musician and the scientist.\n< Ambitious Neil deGrasse Tyson. Indecisive Vincent van Gogh. Considerate Dr. Neil deGrasse Tyson. >. In other words, who is thoughtful? the doctor\n < Wealthy Claude Monet. Intelligent Lady Gaga. Active Johnnie Cochran. >. In other words, who is rich? the artist\n", "ranges": [{"END": [70, 71], "A": [71, 72], "V": [49, 58], "Q": [67, 69], "K": [47, 49], "R": null, "K'": [[26, 37], [29, 41]], "V'": [[29, 51, 41], [36, 58, 46]], "example": [25, 72]}, {"END": [105, 106], "A": [106, 107], "V": [77, 80], "Q": [103, 104], "K": [74, 77], "R": null, "K'": [[81, 88], [84, 89]], "V'": [[84, 89], [87, 94]], "example": [73, 107]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the athlete and the architect.\n< Wrong Kanye West. Boastful LeBron James. Rational Eminem. >. In other words, who is arrogant? the athlete\n < Polite Tom Brady. Full Leonardo da Vinci. Reserved Rem Koolhaas. >. In other words, who is courteous? the athlete\n", "ranges": [{"END": [56, 57], "A": [57, 59], "V": [33, 37], "Q": [52, 55], "K": [30, 33], "R": null, "K'": [[23, 38], [25, 40]], "V'": [[25, 40], [29, 43]], "example": [22, 59]}, {"END": [94, 95], "A": [95, 97], "V": [63, 66], "Q": [90, 93], "K": [61, 63], "R": null, "K'": [[67, 74], [68, 76]], "V'": [[68, 76], [73, 81]], "example": [60, 97]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor, the artist and the author.\n< Undependable Dr. Temple Grandin. Blunt Agatha Christie. Intolerant Dr. Sylvia Earle. >. In other words, who is dull? the author\n < Dangerous Bill Gates. Successful LeBron James. Unhealthy Vincent van Gogh. >. In other words, who is sick? the artist\n", "ranges": [{"END": [67, 68], "A": [68, 69], "V": [39, 44], "Q": [64, 66], "K": [37, 39], "R": null, "K'": [[27, 45], [31, 49]], "V'": [[31, 49], [36, 55]], "example": [26, 69]}, {"END": [105, 106], "A": [106, 107], "V": [89, 94], "Q": [103, 104], "K": [85, 89], "R": null, "K'": [[71, 78], [74, 80]], "V'": [[74, 80], [77, 84]], "example": [70, 107]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the author, the athlete and the actor.\n< Slow Johnny Depp. Intelligent Jane Goodall. Cruel George Orwell. >. In other words, who is clever? the scientist\n < Careful LeBron James. Altruistic Agatha Christie. Impatient Charlize Theron. >. In other words, who is cautious? the athlete\n", "ranges": [{"END": [52, 53], "A": [53, 55], "V": [32, 35], "Q": [50, 51], "K": [29, 32], "R": null, "K'": [[23, 36], [25, 38]], "V'": [[25, 38], [28, 41]], "example": [22, 55]}, {"END": [95, 96], "A": [96, 98], "V": [59, 63], "Q": [91, 94], "K": [57, 59], "R": null, "K'": [[64, 74], [68, 77]], "V'": [[68, 77], [73, 82]], "example": [56, 98]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the lawyer and the author.\n< Timid Sergey Brin. Comfortable Bill Gates. Vacant Jane Austen. >. In other words, who is empty? the author\n < Informed Toni Morrison. Decisive Sonia Sotomayor. Healthy Roger Federer. >. In other words, who is resolute? the lawyer\n", "ranges": [{"END": [55, 56], "A": [56, 57], "V": [41, 44], "Q": [53, 54], "K": [38, 41], "R": null, "K'": [[24, 31], [26, 34]], "V'": [[26, 34], [30, 37]], "example": [23, 57]}, {"END": [95, 96], "A": [96, 97], "V": [70, 77], "Q": [92, 94], "K": [67, 70], "R": null, "K'": [[59, 78], [61, 80]], "V'": [[61, 80], [66, 83]], "example": [58, 97]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the architect, the entrepreneur, the musician and the actor.\n< Safe Elon Musk. Loud Mies van der Rohe. Foolish Taylor Swift. >. In other words, who is secure? the entrepreneur\n < Selfish Lady Gaga. Unfaithful Natalie Portman. Inactive Neil deGrasse Tyson. >. In other words, who is listless? the scientist\n", "ranges": [{"END": [60, 61], "A": [61, 64], "V": [30, 34], "Q": [58, 59], "K": [28, 30], "R": null, "K'": [[35, 44], [37, 47]], "V'": [[37, 47], [43, 49]], "example": [27, 64]}, {"END": [102, 103], "A": [103, 105], "V": [83, 90], "Q": [99, 101], "K": [81, 83], "R": null, "K'": [[66, 72], [68, 76]], "V'": [[68, 76], [71, 80]], "example": [65, 105]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the artist, the author, the doctor and the lawyer.\nPremise: < Unhappy Salvador Dal\u00ed. Inactive Dr. Sylvia Earle. Innovative Taylor Swift. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is the artist? Answer: No\n Premise: < Considerate Harper Lee. Dull Justin Bieber. Logical Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is the lawyer? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [48, 50], "Q": [78, 80], "K": [45, 48], "R": null, "K'": [[29, 36], [32, 38]], "V'": [[32, 38], [35, 44]], "example": [24, 87]}, {"END": [145, 146], "A": [141, 143], "V": [107, 111], "Q": [139, 140], "K": [105, 107], "R": null, "K'": [[92, 98], [94, 100]], "V'": [[94, 100], [97, 104]], "example": [88, 147]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the musician, the artist, the doctor and the author.\nPremise: < Unhappy Salvador Dal\u00ed. Inactive Dr. Sylvia Earle. Innovative Taylor Swift. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is the artist? Answer: No\n Premise: < Considerate Harper Lee. Dull Justin Bieber. Logical Clarence Darrow. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is the musician? Answer: No\n", "ranges": [{"END": [85, 86], "A": [81, 83], "V": [48, 50], "Q": [78, 80], "K": [45, 48], "R": null, "K'": [[29, 36], [32, 38]], "V'": [[32, 38], [35, 44]], "example": [24, 87]}, {"END": [146, 147], "A": [141, 144], "V": [107, 111], "Q": [139, 140], "K": [105, 107], "R": null, "K'": [[92, 98], [94, 100]], "V'": [[94, 100], [97, 104]], "example": [88, 148]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author and the artist.\nPremise: < Indifferent Georgia O'Keeffe. Reliable Richard Dawkins. Indolent LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's lazy is the scientist? Answer: No\n Premise: < Conventional Claude Monet. Lethargic George Orwell. Indolent Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's inactive is the author? Answer: Yes\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 50], "Q": [78, 79], "K": [43, 46], "R": null, "K'": [[27, 36], [29, 39]], "V'": [[29, 39], [35, 42]], "example": [22, 87]}, {"END": [152, 153], "A": [148, 150], "V": [103, 106], "Q": [145, 147], "K": [99, 103], "R": null, "K'": [[92, 107], [95, 110]], "V'": [[95, 110], [98, 117]], "example": [88, 154]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the author and the artist.\nPremise: < Indifferent Georgia O'Keeffe. Reliable Richard Dawkins. Indolent LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's lazy is the scientist? Answer: No\n Premise: < Conventional Claude Monet. Lethargic George Orwell. Indolent Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's inactive is the artist? Answer: No\n", "ranges": [{"END": [85, 86], "A": [80, 83], "V": [46, 50], "Q": [78, 79], "K": [43, 46], "R": null, "K'": [[27, 36], [29, 39]], "V'": [[29, 39], [35, 42]], "example": [22, 87]}, {"END": [152, 153], "A": [148, 150], "V": [103, 106], "Q": [145, 147], "K": [99, 103], "R": null, "K'": [[92, 107], [95, 110]], "V'": [[95, 110], [98, 117]], "example": [88, 154]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the athlete, the doctor, the artist, the musician and the scientist.\nPremise: < Irresponsible Dr. Mehmet Oz. Logical Jane Goodall. Punctual Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's negligent is the athlete? Answer: No\n Premise: < Interesting Eminem. Wrong Meryl Streep. Compassionate Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's incorrect is the actor? Answer: Yes\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [37, 44], "Q": [85, 88], "K": [34, 37], "R": null, "K'": [[45, 51], [47, 54]], "V'": [[47, 54], [50, 57]], "example": [29, 96]}, {"END": [157, 158], "A": [153, 155], "V": [109, 115], "Q": [151, 152], "K": [107, 109], "R": null, "K'": [[101, 116], [103, 120]], "V'": [[103, 120], [106, 123]], "example": [97, 159]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the athlete, the musician, the artist, the scientist and the actor.\nPremise: < Irresponsible Dr. Mehmet Oz. Logical Jane Goodall. Punctual Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's negligent is the athlete? Answer: No\n Premise: < Interesting Eminem. Wrong Meryl Streep. Compassionate Pablo Picasso. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's incorrect is the artist? Answer: No\n", "ranges": [{"END": [94, 95], "A": [89, 92], "V": [37, 44], "Q": [85, 88], "K": [34, 37], "R": null, "K'": [[45, 51], [47, 54]], "V'": [[47, 54], [50, 57]], "example": [29, 96]}, {"END": [157, 158], "A": [153, 155], "V": [109, 115], "Q": [151, 152], "K": [107, 109], "R": null, "K'": [[101, 116], [103, 120]], "V'": [[103, 120], [106, 123]], "example": [97, 159]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the actor, the lawyer and the musician.\nPremise: < Sharp Rihanna. Resolute F. Lee Bailey. Severe Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's determined is the athlete? Answer: No\n Premise: < Unhealthy Ruth Bader Ginsburg. Wrong Beyonc\u00e9. Loud Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's noisy is the actor? Answer: Yes\n", "ranges": [{"END": [80, 81], "A": [75, 78], "V": [35, 40], "Q": [73, 74], "K": [33, 35], "R": null, "K'": [[27, 41], [29, 43]], "V'": [[29, 43], [32, 45]], "example": [22, 82]}, {"END": [144, 145], "A": [140, 142], "V": [106, 109], "Q": [137, 139], "K": [104, 106], "R": null, "K'": [[87, 98], [91, 100]], "V'": [[91, 100], [97, 103]], "example": [83, 146]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the athlete, the actor and the musician.\nPremise: < Sharp Rihanna. Resolute F. Lee Bailey. Severe Alex Morgan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's determined is the athlete? Answer: No\n Premise: < Unhealthy Ruth Bader Ginsburg. Wrong Beyonc\u00e9. Loud Jennifer Lawrence. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's noisy is the lawyer? Answer: No\n", "ranges": [{"END": [80, 81], "A": [75, 78], "V": [35, 40], "Q": [73, 74], "K": [33, 35], "R": null, "K'": [[27, 41], [29, 43]], "V'": [[29, 43], [32, 45]], "example": [22, 82]}, {"END": [144, 145], "A": [140, 142], "V": [106, 109], "Q": [137, 139], "K": [104, 106], "R": null, "K'": [[87, 98], [91, 100]], "V'": [[91, 100], [97, 103]], "example": [83, 146]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the actor, the architect, the athlete and the author.\nPremise: < Fast Johnny Depp. Positive Jane Goodall. Kind George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's optimistic is the scientist? Answer: Yes\n Premise: < Secure Frank Lloyd Wright. Fraudulent Tom Brady. Honest Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is the athlete? Answer: Yes\n", "ranges": [{"END": [81, 82], "A": [76, 79], "V": [37, 40], "Q": [73, 75], "K": [35, 37], "R": null, "K'": [[30, 41], [31, 42]], "V'": [[31, 42], [34, 45]], "example": [25, 83]}, {"END": [145, 146], "A": [140, 143], "V": [98, 101], "Q": [135, 139], "K": [94, 98], "R": null, "K'": [[88, 102], [90, 104]], "V'": [[90, 104], [93, 107]], "example": [84, 147]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the actor, the author, the athlete and the scientist.\nPremise: < Fast Johnny Depp. Positive Jane Goodall. Kind George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's optimistic is the scientist? Answer: Yes\n Premise: < Secure Frank Lloyd Wright. Fraudulent Tom Brady. Honest Norman Foster. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is the architect? Answer: No\n", "ranges": [{"END": [81, 82], "A": [76, 79], "V": [37, 40], "Q": [73, 75], "K": [35, 37], "R": null, "K'": [[30, 41], [31, 42]], "V'": [[31, 42], [34, 45]], "example": [25, 83]}, {"END": [144, 145], "A": [140, 142], "V": [98, 101], "Q": [135, 139], "K": [94, 98], "R": null, "K'": [[88, 102], [90, 104]], "V'": [[90, 104], [93, 107]], "example": [84, 146]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the doctor, the entrepreneur, the lawyer, the scientist and the author.\nPremise: < Informed Toni Morrison. Intelligent Sonia Sotomayor. Healthy Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's smart is the author? Answer: No\n Premise: < Timely Dr. Mehmet Oz. Sluggish Stephen Hawking. Splotless Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is the scientist? Answer: Yes\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [46, 53], "Q": [87, 88], "K": [43, 46], "R": null, "K'": [[35, 54], [37, 56]], "V'": [[37, 56], [42, 59]], "example": [30, 95]}, {"END": [158, 159], "A": [153, 156], "V": [113, 116], "Q": [151, 152], "K": [110, 113], "R": null, "K'": [[100, 117], [102, 120]], "V'": [[102, 120], [109, 123]], "example": [96, 160]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the author, the scientist, the athlete, the entrepreneur and the doctor.\nPremise: < Informed Toni Morrison. Intelligent Sonia Sotomayor. Healthy Roger Federer. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's smart is the author? Answer: No\n Premise: < Timely Dr. Mehmet Oz. Sluggish Stephen Hawking. Splotless Bill Gates. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is the doctor? Answer: No\n", "ranges": [{"END": [93, 94], "A": [89, 91], "V": [46, 53], "Q": [87, 88], "K": [43, 46], "R": null, "K'": [[35, 54], [37, 56]], "V'": [[37, 56], [42, 59]], "example": [30, 95]}, {"END": [157, 158], "A": [153, 155], "V": [113, 116], "Q": [151, 152], "K": [110, 113], "R": null, "K'": [[100, 117], [102, 120]], "V'": [[102, 120], [109, 123]], "example": [96, 159]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the musician, the artist, the lawyer, the actor and the entrepreneur.\nPremise: < Ambitious Johnny Depp. Splotless Hillary Clinton. Blunt Adele. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clean is the actor? Answer: No\n Premise: < Modest Jackson Pollock. Tolerant Richard Branson. Bold Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's humble is the artist? Answer: Yes\n", "ranges": [{"END": [88, 89], "A": [84, 86], "V": [44, 48], "Q": [82, 83], "K": [41, 44], "R": null, "K'": [[34, 49], [37, 51]], "V'": [[37, 51], [40, 54]], "example": [29, 90]}, {"END": [148, 149], "A": [144, 146], "V": [97, 100], "Q": [141, 143], "K": [95, 97], "R": null, "K'": [[101, 108], [104, 110]], "V'": [[104, 110], [107, 113]], "example": [91, 150]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the actor, the architect, the musician, the artist and the lawyer.\nPremise: < Ambitious Johnny Depp. Splotless Hillary Clinton. Blunt Adele. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clean is the actor? Answer: No\n Premise: < Modest Jackson Pollock. Tolerant Richard Branson. Bold Frank Lloyd Wright. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's humble is the entrepreneur? Answer: No\n", "ranges": [{"END": [88, 89], "A": [84, 86], "V": [44, 48], "Q": [82, 83], "K": [41, 44], "R": null, "K'": [[34, 49], [37, 51]], "V'": [[37, 51], [40, 54]], "example": [29, 90]}, {"END": [150, 151], "A": [144, 148], "V": [97, 100], "Q": [141, 143], "K": [95, 97], "R": null, "K'": [[101, 108], [104, 110]], "V'": [[104, 110], [107, 113]], "example": [91, 152]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the musician, the doctor and the architect.\nPremise: < Honest Dr. Sylvia Earle. Unfriendly Lady Gaga. Informed Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's hostile is the musician? Answer: Yes\n Premise: < Energetic Maya Lin. Healthy Ed Sheeran. Faithful George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's active is the architect? Answer: Yes\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [38, 41], "Q": [78, 80], "K": [35, 38], "R": null, "K'": [[26, 42], [28, 44]], "V'": [[28, 44], [34, 50]], "example": [21, 88]}, {"END": [147, 148], "A": [143, 145], "V": [96, 99], "Q": [141, 142], "K": [93, 96], "R": null, "K'": [[100, 107], [102, 110]], "V'": [[102, 110], [106, 113]], "example": [89, 149]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the doctor, the musician and the author.\nPremise: < Honest Dr. Sylvia Earle. Unfriendly Lady Gaga. Informed Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's hostile is the musician? Answer: Yes\n Premise: < Energetic Maya Lin. Healthy Ed Sheeran. Faithful George Orwell. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's active is the author? Answer: No\n", "ranges": [{"END": [86, 87], "A": [81, 84], "V": [38, 41], "Q": [78, 80], "K": [35, 38], "R": null, "K'": [[26, 42], [28, 44]], "V'": [[28, 44], [34, 50]], "example": [21, 88]}, {"END": [147, 148], "A": [143, 145], "V": [96, 99], "Q": [141, 142], "K": [93, 96], "R": null, "K'": [[100, 107], [102, 110]], "V'": [[102, 110], [106, 113]], "example": [89, 149]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the lawyer, the musician, the athlete and the author.\n< Roger Federer is innovative. Usain Bolt is innovative. Jane Goodall is unhealthy. >. In other words, the person who's creative is not the scientist\n < Harper Lee is brave. Justin Bieber is bold. Clarence Darrow is irrational. >. In other words, the person who's daring is not the lawyer\n", "ranges": [{"END": [66, 67], "A'": [67, 69], "V'": [42, 45], "Q": [62, 64], "K'": [46, 50], "R": [65, 66], "K": [[31, 39], [33, 41]], "V": [[27, 34], [30, 38]], "example": [26, 69]}, {"END": [108, 109], "A'": [109, 110], "V'": [84, 88], "Q": [104, 106], "K'": [89, 92], "R": [107, 108], "K": [[75, 82], [76, 83]], "V": [[71, 77], [74, 81]], "example": [70, 110]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the actor, the scientist and the author.\n< J.R.R. Tolkien is lazy. Julia Roberts is lazy. Georgia O'Keeffe is timid. >. In other words, the person who's indolent is not the artist\n < Julia Roberts is patient. Georgia O'Keeffe is patient. Marie Curie is thoughtless. >. In other words, the person who's tolerant is not the scientist\n", "ranges": [{"END": [65, 66], "A'": [66, 67], "V'": [39, 45], "Q": [60, 63], "K'": [46, 48], "R": [64, 65], "K": [[32, 37], [33, 38]], "V": [[22, 34], [31, 36]], "example": [21, 67]}, {"END": [105, 106], "A'": [106, 108], "V'": [83, 86], "Q": [101, 103], "K'": [87, 89], "R": [104, 105], "K": [[72, 81], [73, 82]], "V": [[69, 74], [71, 80]], "example": [68, 108]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the architect and the lawyer.\n< Vincent van Gogh is hardworking. Sonia Sotomayor is hardworking. Zaha Hadid is right. >. In other words, the person who's diligent is not the architect\n < Zaha Hadid is lazy. Andy Warhol is lazy. Johnnie Cochran is active. >. In other words, the person who's indolent is not the lawyer\n", "ranges": [{"END": [60, 61], "A'": [61, 62], "V'": [38, 42], "Q": [56, 58], "K'": [43, 44], "R": [59, 60], "K": [[24, 35], [26, 37]], "V": [[18, 27], [23, 34]], "example": [17, 62]}, {"END": [101, 102], "A'": [102, 103], "V'": [77, 82], "Q": [96, 99], "K'": [83, 84], "R": [100, 101], "K": [[69, 75], [70, 76]], "V": [[64, 71], [68, 74]], "example": [63, 103]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the doctor, the scientist, the athlete and the musician.\n< Dr. Mehmet Oz is punctual. Jane Goodall is irresponsible. Roger Federer is irresponsible. >. In other words, the person who's negligent is not the doctor\n < Dr. Jane Goodall is boastful. Serena Williams is boastful. Justin Bieber is smart. >. In other words, the person who's arrogant is not the musician\n", "ranges": [{"END": [68, 69], "A'": [69, 70], "V'": [24, 31], "Q": [63, 66], "K'": [32, 35], "R": [67, 68], "K": [[40, 48], [43, 51]], "V": [[36, 44], [39, 47]], "example": [23, 70]}, {"END": [113, 114], "A'": [114, 116], "V'": [90, 94], "Q": [108, 111], "K'": [95, 96], "R": [112, 113], "K": [[78, 86], [81, 89]], "V": [[72, 82], [77, 85]], "example": [71, 116]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the architect, the artist, the lawyer and the scientist.\n< Tom Brady is knowledgeable. Leonardo da Vinci is driven. Rem Koolhaas is driven. >. In other words, the person who's ambitious is not the athlete\n < Rosie Franklin is beautiful. Hillary Clinton is short. Pablo Picasso is attractive. >. In other words, the person who's pretty is not the lawyer\n", "ranges": [{"END": [65, 66], "A'": [66, 68], "V'": [26, 29], "Q": [60, 63], "K'": [30, 32], "R": [64, 65], "K": [[39, 47], [40, 48]], "V": [[33, 41], [38, 46]], "example": [25, 68]}, {"END": [104, 105], "A'": [105, 106], "V'": [76, 80], "Q": [101, 102], "K'": [81, 82], "R": [103, 104], "K": [[74, 87], [75, 89]], "V": [[70, 83], [73, 86]], "example": [69, 106]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the doctor, the athlete, the entrepreneur, the scientist and the musician.\n< Dr. Mehmet Oz is wrong. LeBron James is wrong. Richard Dawkins is prosperous. >. In other words, the person who's incorrect is not the scientist\n < Salvador Dal\u00ed is ugly. Sergey Brin is curious. Lady Gaga is curious. >. In other words, the person who's inquiring is not the artist\n", "ranges": [{"END": [70, 71], "A'": [71, 73], "V'": [49, 52], "Q": [67, 68], "K'": [53, 55], "R": [69, 70], "K": [[40, 47], [41, 48]], "V": [[32, 42], [39, 46]], "example": [31, 73]}, {"END": [109, 110], "A'": [110, 111], "V'": [75, 78], "Q": [105, 107], "K'": [79, 80], "R": [108, 109], "K": [[86, 92], [87, 93]], "V": [[81, 88], [85, 91]], "example": [74, 111]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the architect, the doctor, the artist and the musician.\n< Leonardo DiCaprio is happy. Charlize Theron is happy. Frida Kahlo is outgoing. >. In other words, the person who's glad is not the artist\n < Dr. Sylvia Earle is unfortunate. Lady Gaga is unfortunate. Louis Sullivan is fraudulent. >. In other words, the person who's unlucky is not the architect\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [41, 46], "Q": [61, 62], "K'": [47, 49], "R": [63, 64], "K": [[31, 39], [32, 40]], "V": [[25, 33], [30, 38]], "example": [24, 66]}, {"END": [113, 114], "A'": [114, 115], "V'": [87, 91], "Q": [108, 111], "K'": [92, 96], "R": [112, 113], "K": [[75, 83], [78, 86]], "V": [[68, 79], [74, 82]], "example": [67, 115]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the scientist, the athlete, the author, the actor and the entrepreneur.\n< Roger Federer is strong. Jeff Bezos is strong. Meryl Streep is foolish. >. In other words, the person who's powerful is not the actor\n < Mark Twain is comfortable. Bill Gates is apathetic. Ada Lovelace is comfortable. >. In other words, the person who's cozy is not the entrepreneur\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [40, 46], "Q": [61, 62], "K'": [47, 49], "R": [63, 64], "K": [[32, 38], [33, 39]], "V": [[28, 34], [31, 37]], "example": [27, 66]}, {"END": [104, 105], "A'": [105, 108], "V'": [74, 77], "Q": [100, 102], "K'": [78, 81], "R": [103, 104], "K": [[72, 87], [73, 88]], "V": [[68, 82], [71, 86]], "example": [67, 108]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the artist.\nPremise: < Roger Federer is innovative. Usain Bolt is innovative. Jane Goodall is unhealthy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the scientist? Answer: Yes\n Premise: < Johnny Depp is safe. Frida Kahlo is logical. Ada Lovelace is logical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is not the actor? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [42, 45], "Q": [78, 80], "K'": [46, 50], "R": [81, 82], "K": [[31, 39], [33, 41]], "V": [[27, 34], [30, 38]], "example": [22, 89]}, {"END": [149, 150], "A'": [145, 147], "V'": [94, 97], "Q": [142, 143], "K'": [98, 99], "R": [144, 145], "K": [[106, 113], [107, 114]], "V": [[100, 108], [105, 112]], "example": [90, 151]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the scientist, the artist and the actor.\nPremise: < Roger Federer is innovative. Usain Bolt is innovative. Jane Goodall is unhealthy. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the scientist? Answer: Yes\n Premise: < Johnny Depp is safe. Frida Kahlo is logical. Ada Lovelace is logical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is not the artist? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [82, 85], "V'": [42, 45], "Q": [78, 80], "K'": [46, 50], "R": [81, 82], "K": [[31, 39], [33, 41]], "V": [[27, 34], [30, 38]], "example": [22, 89]}, {"END": [149, 150], "A'": [145, 147], "V'": [94, 97], "Q": [142, 143], "K'": [98, 99], "R": [144, 145], "K": [[106, 113], [107, 114]], "V": [[100, 108], [105, 112]], "example": [90, 151]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the architect, the scientist, the doctor and the musician.\nPremise: < Dr. Gabor Mat\u00e9 is considerate. Simone Biles is miserly. Mies van der Rohe is miserly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's stingy is not the doctor? Answer: Yes\n Premise: < Neil deGrasse Tyson is honest. Eminem is egotistical. LeBron James is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's selfish is not the scientist? Answer: Yes\n", "ranges": [{"END": [95, 96], "A'": [91, 93], "V'": [31, 37], "Q": [86, 89], "K'": [38, 40], "R": [90, 91], "K": [[46, 56], [48, 58]], "V": [[41, 49], [45, 55]], "example": [26, 97]}, {"END": [167, 168], "A'": [162, 165], "V'": [102, 109], "Q": [158, 160], "K'": [110, 111], "R": [161, 162], "K": [[116, 126], [120, 130]], "V": [[112, 121], [115, 125]], "example": [98, 169]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the scientist, the architect and the doctor.\nPremise: < Dr. Gabor Mat\u00e9 is considerate. Simone Biles is miserly. Mies van der Rohe is miserly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's stingy is not the doctor? Answer: Yes\n Premise: < Neil deGrasse Tyson is honest. Eminem is egotistical. LeBron James is egotistical. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's selfish is not the athlete? Answer: No\n", "ranges": [{"END": [95, 96], "A'": [91, 93], "V'": [31, 37], "Q": [86, 89], "K'": [38, 40], "R": [90, 91], "K": [[46, 56], [48, 58]], "V": [[41, 49], [45, 55]], "example": [26, 97]}, {"END": [167, 168], "A'": [162, 165], "V'": [102, 109], "Q": [158, 160], "K'": [110, 111], "R": [161, 162], "K": [[116, 126], [120, 130]], "V": [[112, 121], [115, 125]], "example": [98, 169]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the musician, the author, the actor, the artist and the doctor.\nPremise: < Denzel Washington is innovative. J.K. Rowling is humorous. Eminem is innovative. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the actor? Answer: No\n Premise: < Leonardo da Vinci is unfaithful. J.R.R. Tolkien is unfaithful. Dr. Neil deGrasse Tyson is decisive. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's disloyal is not the doctor? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [36, 42], "Q": [80, 82], "K'": [43, 45], "R": [83, 84], "K": [[33, 50], [35, 52]], "V": [[29, 46], [32, 49]], "example": [24, 90]}, {"END": [170, 171], "A'": [166, 168], "V'": [121, 130], "Q": [161, 164], "K'": [131, 133], "R": [165, 166], "K": [[101, 116], [105, 120]], "V": [[95, 106], [100, 115]], "example": [91, 172]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the doctor, the musician, the artist and the actor.\nPremise: < Denzel Washington is innovative. J.K. Rowling is humorous. Eminem is innovative. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the actor? Answer: No\n Premise: < Leonardo da Vinci is unfaithful. J.R.R. Tolkien is unfaithful. Dr. Neil deGrasse Tyson is decisive. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's disloyal is not the author? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [36, 42], "Q": [80, 82], "K'": [43, 45], "R": [83, 84], "K": [[33, 50], [35, 52]], "V": [[29, 46], [32, 49]], "example": [24, 90]}, {"END": [170, 171], "A'": [166, 168], "V'": [121, 130], "Q": [161, 164], "K'": [131, 133], "R": [165, 166], "K": [[101, 116], [105, 120]], "V": [[95, 106], [100, 115]], "example": [91, 172]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the lawyer, the actor, the doctor and the scientist.\nPremise: < Thurgood Marshall is lazy. Dr. Anthony Fauci is polite. Meryl Streep is polite. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's courteous is not the doctor? Answer: No\n Premise: < Dr. Michio Kaku is reliable. Denzel Washington is fast. Stephen Hawking is reliable. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's trustworthy is not the actor? Answer: Yes\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [80, 83], "K'": [31, 32], "R": [84, 85], "K": [[40, 50], [42, 52]], "V": [[33, 43], [39, 49]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [105, 108], "Q": [144, 147], "K'": [109, 110], "R": [148, 149], "K": [[103, 115], [104, 116]], "V": [[96, 111], [102, 114]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the actor, the doctor, the lawyer and the scientist.\nPremise: < Thurgood Marshall is lazy. Dr. Anthony Fauci is polite. Meryl Streep is polite. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's courteous is not the doctor? Answer: No\n Premise: < Dr. Michio Kaku is reliable. Denzel Washington is fast. Stephen Hawking is reliable. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's trustworthy is not the doctor? Answer: No\n", "ranges": [{"END": [89, 90], "A'": [85, 87], "V'": [26, 30], "Q": [80, 83], "K'": [31, 32], "R": [84, 85], "K": [[40, 50], [42, 52]], "V": [[33, 43], [39, 49]], "example": [21, 91]}, {"END": [153, 154], "A'": [149, 151], "V'": [105, 108], "Q": [144, 147], "K'": [109, 110], "R": [148, 149], "K": [[103, 115], [104, 116]], "V": [[96, 111], [102, 114]], "example": [92, 155]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Larry Page is hazardous. Dr. Sanjay Gupta is disloyal. Michael Phelps is hazardous. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dangerous is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran is thoughtful. Richard Dawkins is driven. Stephen King is driven. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's ambitious is not the lawyer? Answer: Yes\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [43, 50], "Q": [92, 93], "K'": [51, 54], "R": [94, 95], "K": [[38, 60], [42, 64]], "V": [[35, 55], [37, 59]], "example": [30, 101]}, {"END": [162, 163], "A'": [158, 160], "V'": [106, 111], "Q": [153, 156], "K'": [112, 114], "R": [157, 158], "K": [[119, 124], [120, 125]], "V": [[115, 121], [118, 123]], "example": [102, 164]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Larry Page is hazardous. Dr. Sanjay Gupta is disloyal. Michael Phelps is hazardous. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dangerous is not the doctor? Answer: Yes\n Premise: < Johnnie Cochran is thoughtful. Richard Dawkins is driven. Stephen King is driven. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's ambitious is not the scientist? Answer: No\n", "ranges": [{"END": [99, 100], "A'": [95, 97], "V'": [43, 50], "Q": [92, 93], "K'": [51, 54], "R": [94, 95], "K": [[38, 60], [42, 64]], "V": [[35, 55], [37, 59]], "example": [30, 101]}, {"END": [163, 164], "A'": [158, 161], "V'": [106, 111], "Q": [153, 156], "K'": [112, 114], "R": [157, 158], "K": [[119, 124], [120, 125]], "V": [[115, 121], [118, 123]], "example": [102, 165]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Dr. Jane Goodall is kind. Michael Phelps is fraudulent. Sergey Brin is fraudulent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is not the doctor? Answer: Yes\n Premise: < Sergey Brin is timid. Bill Gates is timid. Jane Austen is cowardly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's cowardly is not the author? Answer: Yes\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [28, 33], "Q": [83, 87], "K'": [34, 35], "R": [88, 89], "K": [[41, 51], [45, 55]], "V": [[36, 46], [40, 50]], "example": [23, 95]}, {"END": [159, 160], "A'": [155, 157], "V'": [115, 118], "Q": [150, 153], "K'": [119, 122], "R": [154, 155], "K": [[105, 112], [107, 114]], "V": [[100, 108], [104, 111]], "example": [96, 161]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Dr. Jane Goodall is kind. Michael Phelps is fraudulent. Sergey Brin is fraudulent. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is not the doctor? Answer: Yes\n Premise: < Sergey Brin is timid. Bill Gates is timid. Jane Austen is cowardly. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's cowardly is not the entrepreneur? Answer: No\n", "ranges": [{"END": [93, 94], "A'": [89, 91], "V'": [28, 33], "Q": [83, 87], "K'": [34, 35], "R": [88, 89], "K": [[41, 51], [45, 55]], "V": [[36, 46], [40, 50]], "example": [23, 95]}, {"END": [161, 162], "A'": [155, 159], "V'": [115, 118], "Q": [150, 153], "K'": [119, 122], "R": [154, 155], "K": [[105, 112], [107, 114]], "V": [[100, 108], [104, 111]], "example": [96, 163]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the architect, the lawyer, the athlete, the scientist and the entrepreneur.\nPremise: < Barack Obama is uninterested. Albert Einstein is sluggish. Serena Williams is sluggish. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is not the lawyer? Answer: Yes\n Premise: < Oprah Winfrey is intelligent. Nikola Tesla is smart. Louis Sullivan is dirty. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clever is not the architect? Answer: Yes\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [32, 36], "Q": [84, 85], "K'": [37, 40], "R": [86, 87], "K": [[45, 53], [48, 56]], "V": [[41, 49], [44, 52]], "example": [27, 93]}, {"END": [156, 157], "A'": [152, 154], "V'": [115, 119], "Q": [149, 150], "K'": [120, 121], "R": [151, 152], "K": [[104, 113], [106, 114]], "V": [[98, 107], [103, 112]], "example": [94, 158]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the entrepreneur, the scientist, the lawyer, the athlete and the architect.\nPremise: < Barack Obama is uninterested. Albert Einstein is sluggish. Serena Williams is sluggish. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is not the lawyer? Answer: Yes\n Premise: < Oprah Winfrey is intelligent. Nikola Tesla is smart. Louis Sullivan is dirty. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clever is not the entrepreneur? Answer: No\n", "ranges": [{"END": [91, 92], "A'": [87, 89], "V'": [32, 36], "Q": [84, 85], "K'": [37, 40], "R": [86, 87], "K": [[45, 53], [48, 56]], "V": [[41, 49], [44, 52]], "example": [27, 93]}, {"END": [158, 159], "A'": [152, 156], "V'": [115, 119], "Q": [149, 150], "K'": [120, 121], "R": [151, 152], "K": [[104, 113], [106, 114]], "V": [[98, 107], [103, 112]], "example": [94, 160]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Simone Biles is honest. Nikola Tesla is reserved. Ruth Bader Ginsburg is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's candid is not the lawyer? Answer: No\n Premise: < Toni Morrison is boastful. Claude Monet is punctual. Ed Sheeran is punctual. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's timely is not the author? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [41, 46], "Q": [85, 86], "K'": [47, 48], "R": [87, 88], "K": [[39, 56], [40, 57]], "V": [[34, 49], [38, 55]], "example": [29, 94]}, {"END": [161, 162], "A'": [157, 159], "V'": [99, 104], "Q": [153, 155], "K'": [105, 108], "R": [156, 157], "K": [[113, 122], [116, 125]], "V": [[109, 117], [112, 121]], "example": [95, 163]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Simone Biles is honest. Nikola Tesla is reserved. Ruth Bader Ginsburg is honest. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's candid is not the lawyer? Answer: No\n Premise: < Toni Morrison is boastful. Claude Monet is punctual. Ed Sheeran is punctual. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's timely is not the artist? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [41, 46], "Q": [85, 86], "K'": [47, 48], "R": [87, 88], "K": [[39, 56], [40, 57]], "V": [[34, 49], [38, 55]], "example": [29, 94]}, {"END": [161, 162], "A'": [157, 159], "V'": [99, 104], "Q": [153, 155], "K'": [105, 108], "R": [156, 157], "K": [[113, 122], [116, 125]], "V": [[109, 117], [112, 121]], "example": [95, 163]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the lawyer, the musician, the athlete and the author.\n< Innovative Roger Federer. Innovative Usain Bolt. Unhealthy Jane Goodall. >. In other words, the person who's creative is not the scientist\n < Brave Harper Lee. Bold Justin Bieber. Irrational Clarence Darrow. >. In other words, the person who's daring is not the lawyer\n", "ranges": [{"END": [65, 66], "A'": [66, 68], "V'": [46, 49], "Q": [61, 63], "K'": [42, 46], "R": [64, 65], "K": [[27, 34], [30, 37]], "V": [[30, 37], [33, 41]], "example": [26, 68]}, {"END": [106, 107], "A'": [107, 108], "V'": [86, 90], "Q": [102, 104], "K'": [83, 86], "R": [105, 106], "K": [[70, 76], [72, 78]], "V": [[72, 78], [75, 82]], "example": [69, 108]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the actor, the scientist and the author.\n< Lazy J.R.R. Tolkien. Lazy Julia Roberts. Timid Georgia O'Keeffe. >. In other words, the person who's indolent is not the artist\n < Patient Julia Roberts. Patient Georgia O'Keeffe. Thoughtless Marie Curie. >. In other words, the person who's tolerant is not the scientist\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [41, 47], "Q": [59, 62], "K'": [39, 41], "R": [63, 64], "K": [[22, 34], [24, 36]], "V": [[24, 36], [33, 38]], "example": [21, 66]}, {"END": [104, 105], "A'": [105, 107], "V'": [85, 88], "Q": [100, 102], "K'": [82, 85], "R": [103, 104], "K": [[68, 73], [70, 75]], "V": [[70, 75], [72, 81]], "example": [67, 107]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the architect and the lawyer.\n< Hardworking Vincent van Gogh. Hardworking Sonia Sotomayor. Right Zaha Hadid. >. In other words, the person who's diligent is not the architect\n < Lazy Zaha Hadid. Lazy Andy Warhol. Active Johnnie Cochran. >. In other words, the person who's indolent is not the lawyer\n", "ranges": [{"END": [57, 58], "A'": [58, 59], "V'": [37, 41], "Q": [53, 55], "K'": [36, 37], "R": [56, 57], "K": [[18, 26], [20, 28]], "V": [[20, 28], [25, 35]], "example": [17, 59]}, {"END": [97, 98], "A'": [98, 99], "V'": [75, 80], "Q": [92, 95], "K'": [74, 75], "R": [96, 97], "K": [[61, 68], [63, 70]], "V": [[63, 70], [67, 73]], "example": [60, 99]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the doctor, the scientist, the athlete and the musician.\n< Punctual Dr. Mehmet Oz. Irresponsible Jane Goodall. Irresponsible Roger Federer. >. In other words, the person who's negligent is not the doctor\n < Boastful Dr. Jane Goodall. Boastful Serena Williams. Smart Justin Bieber. >. In other words, the person who's arrogant is not the musician\n", "ranges": [{"END": [65, 66], "A'": [66, 67], "V'": [27, 34], "Q": [60, 63], "K'": [24, 27], "R": [64, 65], "K": [[35, 42], [38, 45]], "V": [[38, 45], [41, 48]], "example": [23, 67]}, {"END": [108, 109], "A'": [109, 111], "V'": [87, 91], "Q": [103, 106], "K'": [85, 87], "R": [107, 108], "K": [[69, 78], [72, 81]], "V": [[72, 81], [77, 84]], "example": [68, 111]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the architect, the artist, the lawyer and the scientist.\n< Knowledgeable Tom Brady. Driven Leonardo da Vinci. Driven Rem Koolhaas. >. In other words, the person who's ambitious is not the athlete\n < Beautiful Rosie Franklin. Short Hillary Clinton. Attractive Pablo Picasso. >. In other words, the person who's pretty is not the lawyer\n", "ranges": [{"END": [67, 68], "A'": [68, 70], "V'": [29, 32], "Q": [62, 65], "K'": [26, 29], "R": [66, 67], "K": [[33, 42], [36, 45]], "V": [[36, 45], [41, 50]], "example": [25, 70]}, {"END": [104, 105], "A'": [105, 106], "V'": [78, 82], "Q": [101, 102], "K'": [77, 78], "R": [103, 104], "K": [[72, 83], [73, 86]], "V": [[73, 86], [76, 89]], "example": [71, 106]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the doctor, the athlete, the entrepreneur, the scientist and the musician.\n< Wrong Dr. Mehmet Oz. Wrong LeBron James. Prosperous Richard Dawkins. >. In other words, the person who's incorrect is not the scientist\n < Ugly Salvador Dal\u00ed. Curious Sergey Brin. Curious Lady Gaga. >. In other words, the person who's inquiring is not the artist\n", "ranges": [{"END": [71, 72], "A'": [72, 74], "V'": [53, 56], "Q": [68, 69], "K'": [49, 53], "R": [70, 71], "K": [[32, 42], [34, 44]], "V": [[34, 44], [41, 48]], "example": [31, 74]}, {"END": [110, 111], "A'": [111, 112], "V'": [78, 81], "Q": [106, 108], "K'": [76, 78], "R": [109, 110], "K": [[82, 89], [84, 91]], "V": [[84, 91], [88, 94]], "example": [75, 112]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the architect, the doctor, the artist and the musician.\n< Happy Leonardo DiCaprio. Happy Charlize Theron. Outgoing Frida Kahlo. >. In other words, the person who's glad is not the artist\n < Unfortunate Dr. Sylvia Earle. Unfortunate Lady Gaga. Fraudulent Louis Sullivan. >. In other words, the person who's unlucky is not the architect\n", "ranges": [{"END": [61, 62], "A'": [62, 63], "V'": [41, 46], "Q": [58, 59], "K'": [39, 41], "R": [60, 61], "K": [[25, 32], [26, 33]], "V": [[26, 33], [31, 38]], "example": [24, 63]}, {"END": [107, 108], "A'": [108, 109], "V'": [86, 90], "Q": [102, 105], "K'": [82, 86], "R": [106, 107], "K": [[65, 75], [68, 78]], "V": [[68, 78], [74, 81]], "example": [64, 109]}]}
{"task_id": "rlr_gen[person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the scientist, the athlete, the author, the actor and the entrepreneur.\n< Strong Roger Federer. Strong Jeff Bezos. Foolish Meryl Streep. >. In other words, the person who's powerful is not the actor\n < Comfortable Mark Twain. Apathetic Bill Gates. Comfortable Ada Lovelace. >. In other words, the person who's cozy is not the entrepreneur\n", "ranges": [{"END": [64, 65], "A'": [65, 66], "V'": [43, 49], "Q": [61, 62], "K'": [40, 43], "R": [63, 64], "K": [[28, 34], [30, 36]], "V": [[30, 36], [33, 39]], "example": [27, 66]}, {"END": [105, 106], "A'": [106, 109], "V'": [78, 81], "Q": [101, 103], "K'": [75, 78], "R": [104, 105], "K": [[68, 82], [71, 85]], "V": [[71, 85], [74, 89]], "example": [67, 109]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the scientist, the athlete and the artist.\nPremise: < Innovative Roger Federer. Innovative Usain Bolt. Unhealthy Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the scientist? Answer: Yes\n Premise: < Safe Johnny Depp. Logical Frida Kahlo. Logical Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is not the actor? Answer: Yes\n", "ranges": [{"END": [86, 87], "A'": [81, 84], "V'": [46, 49], "Q": [77, 79], "K'": [42, 46], "R": [80, 81], "K": [[27, 34], [30, 37]], "V": [[30, 37], [33, 41]], "example": [22, 88]}, {"END": [148, 149], "A'": [144, 146], "V'": [95, 98], "Q": [141, 142], "K'": [93, 95], "R": [143, 144], "K": [[99, 107], [101, 109]], "V": [[101, 109], [106, 113]], "example": [89, 150]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the scientist, the artist and the actor.\nPremise: < Innovative Roger Federer. Innovative Usain Bolt. Unhealthy Jane Goodall. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the scientist? Answer: Yes\n Premise: < Safe Johnny Depp. Logical Frida Kahlo. Logical Ada Lovelace. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's rational is not the artist? Answer: No\n", "ranges": [{"END": [86, 87], "A'": [81, 84], "V'": [46, 49], "Q": [77, 79], "K'": [42, 46], "R": [80, 81], "K": [[27, 34], [30, 37]], "V": [[30, 37], [33, 41]], "example": [22, 88]}, {"END": [148, 149], "A'": [144, 146], "V'": [95, 98], "Q": [141, 142], "K'": [93, 95], "R": [143, 144], "K": [[99, 107], [101, 109]], "V": [[101, 109], [106, 113]], "example": [89, 150]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the architect, the scientist, the doctor and the musician.\nPremise: < Considerate Dr. Gabor Mat\u00e9. Miserly Simone Biles. Miserly Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's stingy is not the doctor? Answer: Yes\n Premise: < Honest Neil deGrasse Tyson. Egotistical Eminem. Egotistical LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's selfish is not the scientist? Answer: Yes\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [33, 39], "Q": [85, 88], "K'": [31, 33], "R": [89, 90], "K": [[40, 48], [43, 51]], "V": [[43, 51], [47, 57]], "example": [26, 96]}, {"END": [164, 165], "A'": [159, 162], "V'": [103, 110], "Q": [155, 157], "K'": [101, 103], "R": [158, 159], "K": [[111, 119], [115, 123]], "V": [[115, 123], [118, 127]], "example": [97, 166]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the scientist, the architect and the doctor.\nPremise: < Considerate Dr. Gabor Mat\u00e9. Miserly Simone Biles. Miserly Mies van der Rohe. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's stingy is not the doctor? Answer: Yes\n Premise: < Honest Neil deGrasse Tyson. Egotistical Eminem. Egotistical LeBron James. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's selfish is not the athlete? Answer: No\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [33, 39], "Q": [85, 88], "K'": [31, 33], "R": [89, 90], "K": [[40, 48], [43, 51]], "V": [[43, 51], [47, 57]], "example": [26, 96]}, {"END": [164, 165], "A'": [159, 162], "V'": [103, 110], "Q": [155, 157], "K'": [101, 103], "R": [158, 159], "K": [[111, 119], [115, 123]], "V": [[115, 123], [118, 127]], "example": [97, 166]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the musician, the author, the actor, the artist and the doctor.\nPremise: < Innovative Denzel Washington. Humorous J.K. Rowling. Innovative Eminem. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the actor? Answer: No\n Premise: < Unfaithful Leonardo da Vinci. Unfaithful J.R.R. Tolkien. Decisive Dr. Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's disloyal is not the doctor? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [38, 44], "Q": [79, 81], "K'": [36, 38], "R": [82, 83], "K": [[29, 45], [32, 48]], "V": [[32, 48], [35, 51]], "example": [24, 89]}, {"END": [167, 168], "A'": [163, 165], "V'": [121, 130], "Q": [158, 161], "K'": [118, 121], "R": [162, 163], "K": [[94, 104], [98, 108]], "V": [[98, 108], [103, 117]], "example": [90, 169]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the doctor, the musician, the artist and the actor.\nPremise: < Innovative Denzel Washington. Humorous J.K. Rowling. Innovative Eminem. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's creative is not the actor? Answer: No\n Premise: < Unfaithful Leonardo da Vinci. Unfaithful J.R.R. Tolkien. Decisive Dr. Neil deGrasse Tyson. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's disloyal is not the author? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [38, 44], "Q": [79, 81], "K'": [36, 38], "R": [82, 83], "K": [[29, 45], [32, 48]], "V": [[32, 48], [35, 51]], "example": [24, 89]}, {"END": [167, 168], "A'": [163, 165], "V'": [121, 130], "Q": [158, 161], "K'": [118, 121], "R": [162, 163], "K": [[94, 104], [98, 108]], "V": [[98, 108], [103, 117]], "example": [90, 169]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the lawyer, the actor, the doctor and the scientist.\nPremise: < Lazy Thurgood Marshall. Polite Dr. Anthony Fauci. Polite Meryl Streep. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's courteous is not the doctor? Answer: No\n Premise: < Reliable Dr. Michio Kaku. Fast Denzel Washington. Reliable Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's trustworthy is not the actor? Answer: Yes\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [28, 32], "Q": [78, 81], "K'": [26, 28], "R": [82, 83], "K": [[33, 42], [35, 44]], "V": [[35, 44], [41, 50]], "example": [21, 89]}, {"END": [152, 153], "A'": [148, 150], "V'": [105, 108], "Q": [143, 146], "K'": [104, 105], "R": [147, 148], "K": [[94, 109], [97, 112]], "V": [[97, 112], [103, 115]], "example": [90, 154]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the actor, the doctor, the lawyer and the scientist.\nPremise: < Lazy Thurgood Marshall. Polite Dr. Anthony Fauci. Polite Meryl Streep. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's courteous is not the doctor? Answer: No\n Premise: < Reliable Dr. Michio Kaku. Fast Denzel Washington. Reliable Stephen Hawking. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's trustworthy is not the doctor? Answer: No\n", "ranges": [{"END": [87, 88], "A'": [83, 85], "V'": [28, 32], "Q": [78, 81], "K'": [26, 28], "R": [82, 83], "K": [[33, 42], [35, 44]], "V": [[35, 44], [41, 50]], "example": [21, 89]}, {"END": [152, 153], "A'": [148, 150], "V'": [105, 108], "Q": [143, 146], "K'": [104, 105], "R": [147, 148], "K": [[94, 109], [97, 112]], "V": [[97, 112], [103, 115]], "example": [90, 154]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the doctor, the author, the scientist and the lawyer.\nPremise: < Hazardous Larry Page. Disloyal Dr. Sanjay Gupta. Hazardous Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dangerous is not the doctor? Answer: Yes\n Premise: < Thoughtful Johnnie Cochran. Driven Richard Dawkins. Driven Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's ambitious is not the lawyer? Answer: Yes\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [44, 51], "Q": [87, 88], "K'": [41, 44], "R": [89, 90], "K": [[35, 52], [38, 55]], "V": [[38, 55], [40, 59]], "example": [30, 96]}, {"END": [159, 160], "A'": [155, 157], "V'": [104, 109], "Q": [150, 153], "K'": [101, 104], "R": [154, 155], "K": [[110, 117], [113, 120]], "V": [[113, 120], [116, 122]], "example": [97, 161]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the author, the entrepreneur, the doctor, the scientist, the athlete and the lawyer.\nPremise: < Hazardous Larry Page. Disloyal Dr. Sanjay Gupta. Hazardous Michael Phelps. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dangerous is not the doctor? Answer: Yes\n Premise: < Thoughtful Johnnie Cochran. Driven Richard Dawkins. Driven Stephen King. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's ambitious is not the scientist? Answer: No\n", "ranges": [{"END": [94, 95], "A'": [90, 92], "V'": [44, 51], "Q": [87, 88], "K'": [41, 44], "R": [89, 90], "K": [[35, 52], [38, 55]], "V": [[38, 55], [40, 59]], "example": [30, 96]}, {"END": [160, 161], "A'": [155, 158], "V'": [104, 109], "Q": [150, 153], "K'": [101, 104], "R": [154, 155], "K": [[110, 117], [113, 120]], "V": [[113, 120], [116, 122]], "example": [97, 162]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the entrepreneur, the author and the doctor.\nPremise: < Kind Dr. Jane Goodall. Fraudulent Michael Phelps. Fraudulent Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is not the doctor? Answer: Yes\n Premise: < Timid Sergey Brin. Timid Bill Gates. Cowardly Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's cowardly is not the author? Answer: Yes\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [29, 34], "Q": [80, 84], "K'": [28, 29], "R": [85, 86], "K": [[35, 44], [39, 48]], "V": [[39, 48], [43, 52]], "example": [23, 92]}, {"END": [153, 154], "A'": [149, 151], "V'": [113, 116], "Q": [144, 147], "K'": [110, 113], "R": [148, 149], "K": [[97, 104], [99, 106]], "V": [[99, 106], [103, 109]], "example": [93, 155]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the athlete, the doctor and the author.\nPremise: < Kind Dr. Jane Goodall. Fraudulent Michael Phelps. Fraudulent Sergey Brin. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's dishonest is not the doctor? Answer: Yes\n Premise: < Timid Sergey Brin. Timid Bill Gates. Cowardly Jane Austen. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's cowardly is not the entrepreneur? Answer: No\n", "ranges": [{"END": [90, 91], "A'": [86, 88], "V'": [29, 34], "Q": [80, 84], "K'": [28, 29], "R": [85, 86], "K": [[35, 44], [39, 48]], "V": [[39, 48], [43, 52]], "example": [23, 92]}, {"END": [155, 156], "A'": [149, 153], "V'": [113, 116], "Q": [144, 147], "K'": [110, 113], "R": [148, 149], "K": [[97, 104], [99, 106]], "V": [[99, 106], [103, 109]], "example": [93, 157]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the architect, the lawyer, the athlete, the scientist and the entrepreneur.\nPremise: < Uninterested Barack Obama. Sluggish Albert Einstein. Sluggish Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is not the lawyer? Answer: Yes\n Premise: < Intelligent Oprah Winfrey. Smart Nikola Tesla. Dirty Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clever is not the architect? Answer: Yes\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [35, 39], "Q": [81, 82], "K'": [32, 35], "R": [83, 84], "K": [[40, 47], [43, 50]], "V": [[43, 50], [46, 53]], "example": [27, 90]}, {"END": [153, 154], "A'": [149, 151], "V'": [114, 118], "Q": [146, 147], "K'": [112, 114], "R": [148, 149], "K": [[95, 104], [98, 106]], "V": [[98, 106], [103, 111]], "example": [91, 155]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the entrepreneur, the scientist, the lawyer, the athlete and the architect.\nPremise: < Uninterested Barack Obama. Sluggish Albert Einstein. Sluggish Serena Williams. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's slow is not the lawyer? Answer: Yes\n Premise: < Intelligent Oprah Winfrey. Smart Nikola Tesla. Dirty Louis Sullivan. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's clever is not the entrepreneur? Answer: No\n", "ranges": [{"END": [88, 89], "A'": [84, 86], "V'": [35, 39], "Q": [81, 82], "K'": [32, 35], "R": [83, 84], "K": [[40, 47], [43, 50]], "V": [[43, 50], [46, 53]], "example": [27, 90]}, {"END": [155, 156], "A'": [149, 153], "V'": [114, 118], "Q": [146, 147], "K'": [112, 114], "R": [148, 149], "K": [[95, 104], [98, 106]], "V": [[98, 106], [103, 111]], "example": [91, 157]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the athlete, the musician, the author, the lawyer, the artist and the scientist.\nPremise: < Honest Simone Biles. Reserved Nikola Tesla. Honest Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's candid is not the lawyer? Answer: No\n Premise: < Boastful Toni Morrison. Punctual Claude Monet. Punctual Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's timely is not the author? Answer: Yes\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [43, 48], "Q": [85, 86], "K'": [41, 43], "R": [87, 88], "K": [[34, 49], [36, 51]], "V": [[36, 51], [40, 57]], "example": [29, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [102, 107], "Q": [150, 152], "K'": [99, 102], "R": [153, 154], "K": [[108, 115], [111, 118]], "V": [[111, 118], [114, 122]], "example": [95, 160]}]}
{"task_id": "g2c[rlr_gen][person_adjs.SymSet.neg_similar,occupations_Of_Persons.TreeSet.child][cxt_len=3,rev_item2str]", "texts": "Occupations of persons include the artist, the lawyer, the scientist, the author, the athlete and the musician.\nPremise: < Honest Simone Biles. Reserved Nikola Tesla. Honest Ruth Bader Ginsburg. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's candid is not the lawyer? Answer: No\n Premise: < Boastful Toni Morrison. Punctual Claude Monet. Punctual Ed Sheeran. >. Answer with Yes or No. Can it be inferred from the premise that In other words, the person who's timely is not the artist? Answer: No\n", "ranges": [{"END": [92, 93], "A'": [88, 90], "V'": [43, 48], "Q": [85, 86], "K'": [41, 43], "R": [87, 88], "K": [[34, 49], [36, 51]], "V": [[36, 51], [40, 57]], "example": [29, 94]}, {"END": [158, 159], "A'": [154, 156], "V'": [102, 107], "Q": [150, 152], "K'": [99, 102], "R": [153, 154], "K": [[108, 115], [111, 118]], "V": [[111, 118], [114, 122]], "example": [95, 160]}]}
